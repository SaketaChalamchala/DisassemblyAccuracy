;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	F1BE2EB378D595138D061318C0738207
; Input	CRC32 :	59ABAAEF

; File Name   :	C:\compspace\compare\gpg\dlls\original\QtXml4.dll
; Format      :	Portable executable for	80386 (PE)
; Imagebase   :	6ED40000
; Section 1. (virtual address 00001000)
; Virtual size			: 00059F3C ( 368444.)
; Section size in file		: 0005A000 ( 368640.)
; Offset to raw	data for section: 00000400
; Flags	60500060: Text Data Executable Readable
; Alignment	: 16 bytes

		include	uni.inc	; see unicode subdir of	ida for	info on	unicode

		.686p
		.mmx
		.model flat
.intel_syntax noprefix

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 6ED41000h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


sub_6ED41000	proc near		; DATA XREF: .CRT:6EDB400Co

var_1C		= dword	ptr -1Ch

		push	ebx
		sub	esp, 18h
		mov	[esp+1Ch+var_1C], 80h ;	size_t
		call	malloc
		mov	ebx, eax
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED8E8A0
		test	ebx, ebx
		mov	ds:dword_6EDA83AC, eax
		mov	ds:dword_6EDA83A8, eax
		mov	eax, 1
		jz	short loc_6ED41035
		mov	dword ptr [ebx], 0
		xor	al, al

loc_6ED41035:				; CODE XREF: sub_6ED41000+2Bj
		add	esp, 18h
		pop	ebx
		retn
sub_6ED41000	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED41040	proc near		; CODE XREF: sub_6ED41260+DAp
					; sub_6ED41260+128p ...

dwMilliseconds	= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	esi
		push	ebx
		sub	esp, 14h
		mov	edx, [esp+1Ch+arg_4]
		test	edx, edx
		jnz	short loc_6ED410C6
		mov	edx, ds:dword_6EDA8000
		xor	eax, eax
		test	edx, edx
		jle	short loc_6ED410BE
		sub	edx, 1
		mov	ebx, ds:Sleep
		mov	ds:dword_6EDA8000, edx
		jmp	short loc_6ED4107C
; ---------------------------------------------------------------------------
		align 10h

loc_6ED41070:				; CODE XREF: sub_6ED41040+5Dj
		mov	[esp+1Ch+dwMilliseconds], 3E8h ; dwMilliseconds
		call	ebx ; Sleep
		sub	esp, 4

loc_6ED4107C:				; CODE XREF: sub_6ED41040+28j
		mov	[esp+1Ch+var_14], 0
		mov	[esp+1Ch+var_18], 1
		mov	[esp+1Ch+dwMilliseconds], offset dword_6EDA83B0
		call	sub_6ED8FAC0
		sub	esp, 0Ch
		test	eax, eax
		jnz	short loc_6ED41070
		mov	eax, ds:dword_6EDA83B4
		cmp	eax, 2
		jz	loc_6ED41170
		mov	[esp+1Ch+dwMilliseconds], 1Fh
		call	_amsg_exit
		mov	eax, 1

loc_6ED410BE:				; CODE XREF: sub_6ED41040+17j
					; sub_6ED41040+8Ej
		add	esp, 14h
		pop	ebx
		pop	esi
		retn	0Ch
; ---------------------------------------------------------------------------

loc_6ED410C6:				; CODE XREF: sub_6ED41040+Bj
		cmp	edx, 1
		mov	eax, 1
		jnz	short loc_6ED410BE
		mov	eax, large fs:18h
		mov	esi, ds:Sleep
		mov	ebx, [eax+4]
		jmp	short loc_6ED410F5
; ---------------------------------------------------------------------------

loc_6ED410E1:				; CODE XREF: sub_6ED41040+D2j
		cmp	eax, ebx
		jz	loc_6ED41238
		mov	[esp+1Ch+dwMilliseconds], 3E8h ; dwMilliseconds
		call	esi ; Sleep
		sub	esp, 4

loc_6ED410F5:				; CODE XREF: sub_6ED41040+9Fj
		mov	[esp+1Ch+var_14], 0
		mov	[esp+1Ch+var_18], ebx
		mov	[esp+1Ch+dwMilliseconds], offset dword_6EDA83B0
		call	sub_6ED8FAC0
		sub	esp, 0Ch
		test	eax, eax
		jnz	short loc_6ED410E1
		xor	ebx, ebx

loc_6ED41116:				; CODE XREF: sub_6ED41040+1FDj
		mov	eax, ds:dword_6EDA83B4
		test	eax, eax
		jz	loc_6ED411F7
		mov	[esp+1Ch+dwMilliseconds], 1Fh
		call	_amsg_exit

loc_6ED4112F:				; CODE XREF: sub_6ED41040+1F3j
		test	ebx, ebx
		jz	loc_6ED41242

loc_6ED41137:				; CODE XREF: sub_6ED41040+219j
		mov	eax, ds:off_6EDA6420
		test	eax, eax
		jz	short loc_6ED4115C
		mov	edx, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_18], 2
		mov	[esp+1Ch+var_14], edx
		mov	edx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+dwMilliseconds], edx
		call	eax ; TlsCallback_0
		sub	esp, 0Ch

loc_6ED4115C:				; CODE XREF: sub_6ED41040+FEj
		add	ds:dword_6EDA8000, 1
		mov	eax, 1
		add	esp, 14h
		pop	ebx
		pop	esi
		retn	0Ch
; ---------------------------------------------------------------------------

loc_6ED41170:				; CODE XREF: sub_6ED41040+67j
		mov	eax, ds:dword_6EDA83AC
		mov	[esp+1Ch+dwMilliseconds], eax
		call	sub_6ED8E890
		test	eax, eax
		mov	ebx, eax
		jz	short loc_6ED411C9
		mov	eax, ds:dword_6EDA83A8
		mov	[esp+1Ch+dwMilliseconds], eax
		call	sub_6ED8E890
		mov	esi, eax

loc_6ED41192:				; CODE XREF: sub_6ED41040+15Dj
		sub	esi, 4
		cmp	ebx, esi
		ja	short loc_6ED411A8

loc_6ED41199:				; CODE XREF: sub_6ED41040+166j
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_6ED41192
		sub	esi, 4
		call	eax
		cmp	ebx, esi
		jbe	short loc_6ED41199

loc_6ED411A8:				; CODE XREF: sub_6ED41040+157j
		mov	[esp+1Ch+dwMilliseconds], ebx ;	void *
		nop
		lea	esi, [esi+0]
		call	free
		mov	ds:dword_6EDA83A8, 0
		mov	ds:dword_6EDA83AC, 0

loc_6ED411C9:				; CODE XREF: sub_6ED41040+141j
		mov	ds:dword_6EDA83B4, 0
		mov	[esp+1Ch+var_18], 0
		mov	[esp+1Ch+dwMilliseconds], offset dword_6EDA83B0
		call	sub_6ED8FAF0
		mov	eax, 1
		sub	esp, 8
		add	esp, 14h
		pop	ebx
		pop	esi
		retn	0Ch
; ---------------------------------------------------------------------------

loc_6ED411F7:				; CODE XREF: sub_6ED41040+DDj
		mov	ds:dword_6EDA83B4, 1
		mov	[esp+1Ch+var_18], offset dword_6EDB4010
		mov	[esp+1Ch+dwMilliseconds], offset dword_6EDB4008
		call	_initterm
		mov	[esp+1Ch+var_18], offset dword_6EDB4004
		mov	[esp+1Ch+dwMilliseconds], offset dword_6EDB4000
		call	_initterm
		mov	ds:dword_6EDA83B4, 2
		jmp	loc_6ED4112F
; ---------------------------------------------------------------------------

loc_6ED41238:				; CODE XREF: sub_6ED41040+A3j
		mov	ebx, 1
		jmp	loc_6ED41116
; ---------------------------------------------------------------------------

loc_6ED41242:				; CODE XREF: sub_6ED41040+F1j
		mov	[esp+1Ch+var_18], 0
		mov	[esp+1Ch+dwMilliseconds], offset dword_6EDA83B0
		call	sub_6ED8FAF0
		sub	esp, 8
		jmp	loc_6ED41137
sub_6ED41040	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED41260	proc near		; CODE XREF: DllEntryPoint+1Ep

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 2Ch
		test	edx, edx
		mov	[esp+2Ch+var_10], ebx
		mov	ebx, eax
		mov	[esp+2Ch+var_C], esi
		mov	esi, edx
		mov	[esp+2Ch+var_4], ebp
		mov	ebp, ecx
		mov	[esp+2Ch+var_8], edi
		mov	dword_6ED9B000,	edx
		jnz	short loc_6ED412E0
		mov	eax, ds:dword_6EDA8000
		test	eax, eax
		jz	loc_6ED413B7
		call	sub_6ED8EA60

loc_6ED41295:				; CODE XREF: sub_6ED41260+90j
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], esi
		mov	[esp+2Ch+var_2C], ebx
		call	sub_6ED8ED90
		sub	esp, 0Ch
		cmp	esi, 3
		mov	edi, eax
		jz	loc_6ED413A0
		test	esi, esi
		jz	loc_6ED413A0

loc_6ED412BB:				; CODE XREF: sub_6ED41260+B2j
					; sub_6ED41260+F9j ...
		mov	eax, edi
		mov	ebx, [esp+2Ch+var_10]
		mov	dword_6ED9B000,	0FFFFFFFFh
		mov	esi, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_8]
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED412E0:				; CODE XREF: sub_6ED41260+21j
		lea	eax, [edx-1]
		cmp	eax, 1
		jbe	short loc_6ED41360

loc_6ED412E8:				; CODE XREF: sub_6ED41260+134j
		call	sub_6ED8EA60
		cmp	esi, 1
		jnz	short loc_6ED41295
		call	sub_6ED8ED70
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], 1
		mov	[esp+2Ch+var_2C], ebx
		call	sub_6ED8ED90
		sub	esp, 0Ch
		test	eax, eax
		mov	edi, eax
		jnz	short loc_6ED412BB
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], ebx
		call	sub_6ED8ED90
		sub	esp, 0Ch
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], ebx
		call	sub_6ED41040
		sub	esp, 0Ch
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], ebx
		call	sub_6ED8EDA0
		sub	esp, 0Ch
		jmp	loc_6ED412BB
; ---------------------------------------------------------------------------
		align 10h

loc_6ED41360:				; CODE XREF: sub_6ED41260+86j
		mov	[esp+2Ch+var_24], ecx
		mov	[esp+2Ch+var_28], edx
		mov	[esp+2Ch+var_2C], ebx
		call	sub_6ED8EDA0
		sub	esp, 0Ch
		test	eax, eax
		mov	edi, eax
		jz	loc_6ED412BB
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], esi
		mov	[esp+2Ch+var_2C], ebx
		call	sub_6ED41040
		sub	esp, 0Ch
		test	eax, eax
		mov	edi, eax
		jnz	loc_6ED412E8
		jmp	loc_6ED412BB
; ---------------------------------------------------------------------------
		align 10h

loc_6ED413A0:				; CODE XREF: sub_6ED41260+4Dj
					; sub_6ED41260+55j
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], esi
		mov	[esp+2Ch+var_2C], ebx
		call	sub_6ED41040
		sub	esp, 0Ch
		test	eax, eax
		jnz	short loc_6ED413C0

loc_6ED413B7:				; CODE XREF: sub_6ED41260+2Aj
		xor	edi, edi
		jmp	loc_6ED412BB
; ---------------------------------------------------------------------------
		align 10h

loc_6ED413C0:				; CODE XREF: sub_6ED41260+155j
		test	edi, edi
		jz	loc_6ED412BB
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], esi
		mov	[esp+2Ch+var_2C], ebx
		call	sub_6ED8EDA0
		sub	esp, 0Ch
		mov	edi, eax
		jmp	loc_6ED412BB
sub_6ED41260	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; BOOL __stdcall DllEntryPoint(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpReserved)
		public DllEntryPoint
DllEntryPoint	proc near

var_10		= dword	ptr -10h
hinstDLL	= dword	ptr  4
fdwReason	= dword	ptr  8
lpReserved	= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+fdwReason]
		mov	ds:dword_6EDA801C, 0
		cmp	edx, 1
		jz	short loc_6ED41420

loc_6ED41406:				; CODE XREF: DllEntryPoint+3Dj
		mov	ecx, [esp+1Ch+lpReserved]
		mov	eax, [esp+1Ch+hinstDLL]
		call	sub_6ED41260
		add	esp, 1Ch
		retn	0Ch
; ---------------------------------------------------------------------------
		align 10h

loc_6ED41420:				; CODE XREF: DllEntryPoint+14j
		mov	[esp+1Ch+var_10], edx
		call	sub_6ED8EE40
		mov	edx, [esp+1Ch+var_10]
		jmp	short loc_6ED41406
DllEntryPoint	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED41430	proc near		; CODE XREF: sub_6ED8FC60+6p
		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, dword_6ED9FA48
		test	eax, eax
		jz	short locret_6ED4147B
		mov	dword ptr [esp], offset	ModuleName ; "libgcj_s.dll"
		call	ds:GetModuleHandleA
		mov	edx, eax
		sub	esp, 4
		test	edx, edx
		mov	eax, 0
		jz	short loc_6ED4146E
		mov	dword ptr [esp+4], offset ProcName ; "_Jv_RegisterClasses"
		mov	[esp], edx	; hModule
		call	ds:GetProcAddress
		sub	esp, 8

loc_6ED4146E:				; CODE XREF: sub_6ED41430+28j
		test	eax, eax
		jz	short locret_6ED4147B
		mov	dword ptr [esp], offset	dword_6ED9FA48
		call	eax

locret_6ED4147B:			; CODE XREF: sub_6ED41430+Dj
					; sub_6ED41430+40j
		leave
		retn
sub_6ED41430	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6ED41480()
sub_6ED41480	proc near		; DATA XREF: sub_6ED8FC60+Bo
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_6ED41480	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 255. _ZN18QDomImplementationC2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QDomImplementationC2Ev
_ZN18QDomImplementationC2Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN18QDomImplementationC2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 252. _ZN18QDomImplementationC1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QDomImplementationC1Ev
_ZN18QDomImplementationC1Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN18QDomImplementationC1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 254. _ZN18QDomImplementationC2ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QDomImplementationC2ERKS_
_ZN18QDomImplementationC2ERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED414C6
		lock inc dword ptr [eax]
		setnz	dl

locret_6ED414C6:			; CODE XREF: _ZN18QDomImplementationC2ERKS_+Ej
		rep retn
_ZN18QDomImplementationC2ERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 251. _ZN18QDomImplementationC1ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QDomImplementationC1ERKS_
_ZN18QDomImplementationC1ERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED414E6
		lock inc dword ptr [eax]
		setnz	dl

locret_6ED414E6:			; CODE XREF: _ZN18QDomImplementationC1ERKS_+Ej
		rep retn
_ZN18QDomImplementationC1ERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 253. _ZN18QDomImplementationC2EP25QDomImplementationPrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QDomImplementationC2EP25QDomImplementationPrivate
_ZN18QDomImplementationC2EP25QDomImplementationPrivate proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED41504
		lock inc dword ptr [eax]
		setnz	dl

locret_6ED41504:			; CODE XREF: _ZN18QDomImplementationC2EP25QDomImplementationPrivate+Cj
		rep retn
_ZN18QDomImplementationC2EP25QDomImplementationPrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 250. _ZN18QDomImplementationC1EP25QDomImplementationPrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QDomImplementationC1EP25QDomImplementationPrivate
_ZN18QDomImplementationC1EP25QDomImplementationPrivate proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED41524
		lock inc dword ptr [eax]
		setnz	dl

locret_6ED41524:			; CODE XREF: _ZN18QDomImplementationC1EP25QDomImplementationPrivate+Cj
		rep retn
_ZN18QDomImplementationC1EP25QDomImplementationPrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 506. _ZNK18QDomImplementationeqERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZNK18QDomImplementationeqERKS_
_ZNK18QDomImplementationeqERKS_	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		mov	edx, [eax]
		mov	eax, [esp+arg_4]
		cmp	edx, [eax]
		setz	al
		retn
_ZNK18QDomImplementationeqERKS_	endp

; Exported entry 507. _ZNK18QDomImplementationneERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZNK18QDomImplementationneERKS_
_ZNK18QDomImplementationneERKS_	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		mov	edx, [eax]
		mov	eax, [esp+arg_4]
		cmp	edx, [eax]
		setnz	al
		retn
_ZNK18QDomImplementationneERKS_	endp

; Exported entry 249. _ZN18QDomImplementation6isNullEv

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QDomImplementation6isNullEv
_ZN18QDomImplementation6isNullEv proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		setz	al
		retn
_ZN18QDomImplementation6isNullEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 246. _ZN18QDomImplementation17invalidDataPolicyEv

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QDomImplementation17invalidDataPolicyEv
_ZN18QDomImplementation17invalidDataPolicyEv proc near
		mov	eax, ds:dword_6EDA8004
		retn
_ZN18QDomImplementation17invalidDataPolicyEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 248. _ZN18QDomImplementation20setInvalidDataPolicyENS_17InvalidDataPolicyE

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QDomImplementation20setInvalidDataPolicyENS_17InvalidDataPolicyE
_ZN18QDomImplementation20setInvalidDataPolicyENS_17InvalidDataPolicyE proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	ds:dword_6EDA8004, eax
		retn
_ZN18QDomImplementation20setInvalidDataPolicyENS_17InvalidDataPolicyE endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	edx, [esp+8]
		mov	ecx, [esp+0Ch]
		mov	[edx+8], eax
		mov	dword ptr [edx], 0
		lock inc dword ptr [eax]
		setnz	bl
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	bl
		mov	eax, ds:_ZN9QListData11shared_nullE
		mov	[edx+10h], eax
		lock inc dword ptr [eax]
		setnz	bl
		test	ecx, ecx
		mov	dword ptr [edx], 1
		mov	[edx+4], ecx
		jz	short loc_6ED415C8
		lock inc dword ptr [ecx+4]
		setnz	al

loc_6ED415C8:				; CODE XREF: .text:6ED415BFj
		mov	dword ptr [edx+14h], 0
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	edx, [esp+8]
		mov	ecx, [esp+0Ch]
		mov	[edx+8], eax
		mov	dword ptr [edx], 0
		lock inc dword ptr [eax]
		setnz	bl
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	bl
		mov	eax, ds:_ZN9QListData11shared_nullE
		mov	[edx+10h], eax
		lock inc dword ptr [eax]
		setnz	bl
		test	ecx, ecx
		mov	dword ptr [edx], 1
		mov	[edx+4], ecx
		jz	short loc_6ED41628
		lock inc dword ptr [ecx+4]
		setnz	al

loc_6ED41628:				; CODE XREF: .text:6ED4161Fj
		mov	dword ptr [edx+14h], 0
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h
; Exported entry  85. _ZN12QDomNodeListC2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QDomNodeListC2Ev
_ZN12QDomNodeListC2Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN12QDomNodeListC2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  82. _ZN12QDomNodeListC1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QDomNodeListC1Ev
_ZN12QDomNodeListC1Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN12QDomNodeListC1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  83. _ZN12QDomNodeListC2EP19QDomNodeListPrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QDomNodeListC2EP19QDomNodeListPrivate
_ZN12QDomNodeListC2EP19QDomNodeListPrivate proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	[eax], edx
		retn
_ZN12QDomNodeListC2EP19QDomNodeListPrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  80. _ZN12QDomNodeListC1EP19QDomNodeListPrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QDomNodeListC1EP19QDomNodeListPrivate
_ZN12QDomNodeListC1EP19QDomNodeListPrivate proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	[eax], edx
		retn
_ZN12QDomNodeListC1EP19QDomNodeListPrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  84. _ZN12QDomNodeListC2ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QDomNodeListC2ERKS_
_ZN12QDomNodeListC2ERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED41696
		lock inc dword ptr [eax]
		setnz	dl

locret_6ED41696:			; CODE XREF: _ZN12QDomNodeListC2ERKS_+Ej
		rep retn
_ZN12QDomNodeListC2ERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  81. _ZN12QDomNodeListC1ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QDomNodeListC1ERKS_
_ZN12QDomNodeListC1ERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED416B6
		lock inc dword ptr [eax]
		setnz	dl

locret_6ED416B6:			; CODE XREF: _ZN12QDomNodeListC1ERKS_+Ej
		rep retn
_ZN12QDomNodeListC1ERKS_ endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED416C0	proc near		; CODE XREF: sub_6ED49380+43p
					; .text:6ED49483p ...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	eax, [esp+4+arg_0]
		mov	ecx, [esp+4+arg_8]
		mov	dword ptr [eax], offset	off_6EDA6E48
		mov	dword ptr [eax+4], 0
		mov	[eax+1Ch], edx
		lock inc dword ptr [edx]
		setnz	bl
		mov	[eax+20h], edx
		lock inc dword ptr [edx]
		setnz	bl
		mov	[eax+24h], edx
		lock inc dword ptr [edx]
		setnz	bl
		mov	[eax+28h], edx
		lock inc dword ptr [edx]
		setnz	bl
		test	ecx, ecx
		mov	dword ptr [eax+4], 1
		jz	short loc_6ED41750
		movzx	edx, byte ptr [eax+2Ch]
		mov	[eax+10h], ecx
		or	edx, 2
		mov	[eax+2Ch], dl

loc_6ED41718:				; CODE XREF: sub_6ED416C0+A1j
		or	edx, 1
		mov	dword ptr [eax+8], 0
		mov	dword ptr [eax+0Ch], 0
		mov	dword ptr [eax+14h], 0
		mov	dword ptr [eax+18h], 0
		mov	[eax+2Ch], dl
		mov	dword ptr [eax+30h], 0FFFFFFFFh
		mov	dword ptr [eax+34h], 0FFFFFFFFh
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED41750:				; CODE XREF: sub_6ED416C0+49j
		mov	edx, [esp+4+arg_4]
		mov	[eax+10h], edx
		movzx	edx, byte ptr [eax+2Ch]
		and	edx, 0FFFFFFFDh
		mov	[eax+2Ch], dl
		jmp	short loc_6ED41718
sub_6ED416C0	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	eax, [esp+8]
		mov	ecx, [esp+10h]
		mov	dword ptr [eax], offset	off_6EDA6E48
		mov	dword ptr [eax+4], 0
		mov	[eax+1Ch], edx
		lock inc dword ptr [edx]
		setnz	bl
		mov	[eax+20h], edx
		lock inc dword ptr [edx]
		setnz	bl
		mov	[eax+24h], edx
		lock inc dword ptr [edx]
		setnz	bl
		mov	[eax+28h], edx
		lock inc dword ptr [edx]
		setnz	bl
		test	ecx, ecx
		mov	dword ptr [eax+4], 1
		jz	short loc_6ED41800
		movzx	edx, byte ptr [eax+2Ch]
		mov	[eax+10h], ecx
		or	edx, 2
		mov	[eax+2Ch], dl

loc_6ED417C8:				; CODE XREF: .text:6ED41811j
		or	edx, 1
		mov	dword ptr [eax+8], 0
		mov	dword ptr [eax+0Ch], 0
		mov	dword ptr [eax+14h], 0
		mov	dword ptr [eax+18h], 0
		mov	[eax+2Ch], dl
		mov	dword ptr [eax+30h], 0FFFFFFFFh
		mov	dword ptr [eax+34h], 0FFFFFFFFh
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED41800:				; CODE XREF: .text:6ED417B9j
		mov	edx, [esp+0Ch]
		mov	[eax+10h], edx
		movzx	edx, byte ptr [eax+2Ch]
		and	edx, 0FFFFFFFDh
		mov	[eax+2Ch], dl
		jmp	short loc_6ED417C8
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED41820	proc near		; CODE XREF: sub_6ED43DF0+50j
					; DATA XREF: .rdata:6EDA6DF0o ...

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 14h
		mov	esi, [esp+1Ch+arg_0]
		mov	eax, [esi+14h]
		test	eax, eax
		jz	short loc_6ED4184C

loc_6ED41830:				; CODE XREF: sub_6ED41820+2Aj
		mov	ebx, [eax+0Ch]
		lock dec dword ptr [eax+4]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED41846
		mov	edx, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+4]

loc_6ED41846:				; CODE XREF: sub_6ED41820+1Cj
		test	ebx, ebx
		mov	eax, ebx
		jnz	short loc_6ED41830

loc_6ED4184C:				; CODE XREF: sub_6ED41820+Ej
		mov	dword ptr [esi+14h], 0
		mov	dword ptr [esi+18h], 0
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
sub_6ED41820	endp


; =============== S U B	R O U T	I N E =======================================


sub_6ED41860	proc near		; CODE XREF: sub_6ED44060+176p
					; sub_6ED44270+176p
					; DATA XREF: ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	ecx, [esp+1Ch+arg_4]
		mov	edx, [eax]
		mov	[esp+1Ch+var_14], 0
		mov	[esp+1Ch+var_18], ecx
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+10h]
		add	esp, 1Ch
		retn
sub_6ED41860	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED41890	proc near		; CODE XREF: sub_6ED418D0+56p
					; sub_6ED41A30+56p ...

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		test	ebx, ebx
		jz	short loc_6ED418C8
		lea	esi, [esi+0]

loc_6ED418A0:				; CODE XREF: sub_6ED41890+27j
		mov	eax, [ebx]
		mov	[esp+1Ch+var_1C], ebx
		call	dword ptr [eax+38h]
		test	al, al
		jnz	short loc_6ED418B9
		test	byte ptr [ebx+2Ch], 2
		jz	short loc_6ED418C0
		mov	ebx, [ebx+10h]
		test	ebx, ebx
		jnz	short loc_6ED418A0

loc_6ED418B9:				; CODE XREF: sub_6ED41890+1Aj
					; sub_6ED41890+3Aj
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_6ED418C0:				; CODE XREF: sub_6ED41890+20j
		mov	eax, [ebx+10h]
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_6ED418C8:				; CODE XREF: sub_6ED41890+Aj
		xor	ebx, ebx
		jmp	short loc_6ED418B9
sub_6ED41890	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED418D0	proc near		; CODE XREF: sub_6ED571A0+4Dp
					; DATA XREF: .rdata:6EDA6DD8o ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	[esp+1Ch+var_C], ebx
		mov	ebx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], esi
		mov	esi, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_4], edi
		mov	edi, [esp+1Ch+arg_0]
		test	ebx, ebx
		jnz	short loc_6ED41901

loc_6ED418EF:				; CODE XREF: sub_6ED418D0+37j
					; sub_6ED418D0+74j ...
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_8]
		mov	ebx, [esp+1Ch+var_C]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED41901:				; CODE XREF: sub_6ED418D0+1Dj
		cmp	ebx, esi
		jnz	short loc_6ED41910

loc_6ED41905:				; CODE XREF: sub_6ED418D0+51j
		xor	ebx, ebx
		jmp	short loc_6ED418EF
; ---------------------------------------------------------------------------
		align 10h

loc_6ED41910:				; CODE XREF: sub_6ED418D0+33j
		test	esi, esi
		jz	short loc_6ED41923
		xor	eax, eax
		test	byte ptr [esi+2Ch], 2
		jz	short loc_6ED4191F
		mov	eax, [esi+10h]

loc_6ED4191F:				; CODE XREF: sub_6ED418D0+4Aj
		cmp	edi, eax
		jnz	short loc_6ED41905

loc_6ED41923:				; CODE XREF: sub_6ED418D0+42j
		mov	[esp+1Ch+var_1C], edi
		call	sub_6ED41890
		test	eax, eax
		jz	short loc_6ED41933
		add	dword ptr [eax+40h], 1

loc_6ED41933:				; CODE XREF: sub_6ED418D0+5Dj
		mov	eax, [ebx]
		mov	[esp+1Ch+var_1C], ebx
		call	dword ptr [eax+34h]
		test	al, al
		jz	short loc_6ED41992
		mov	eax, [ebx+14h]
		test	eax, eax
		jz	short loc_6ED418EF

loc_6ED41946:				; CODE XREF: sub_6ED418D0+82j
		or	byte ptr [eax+2Ch], 2
		mov	[eax+10h], edi
		mov	eax, [eax+0Ch]
		test	eax, eax
		jnz	short loc_6ED41946
		test	esi, esi
		jz	loc_6ED419FB
		mov	eax, [esi+0Ch]
		test	eax, eax
		jz	loc_6ED419FB
		mov	ecx, [esi+0Ch]
		mov	edx, [ebx+18h]
		mov	eax, [ebx+14h]
		mov	[edx+0Ch], ecx
		mov	ecx, [esi+0Ch]
		mov	[eax+8], esi
		mov	[esi+0Ch], eax
		mov	[ecx+8], edx

loc_6ED4197F:				; CODE XREF: sub_6ED418D0+148j
		mov	dword ptr [ebx+14h], 0
		mov	dword ptr [ebx+18h], 0
		jmp	loc_6ED418EF
; ---------------------------------------------------------------------------

loc_6ED41992:				; CODE XREF: sub_6ED418D0+6Dj
		test	byte ptr [ebx+2Ch], 2
		jz	short loc_6ED419AB
		mov	eax, [ebx+10h]
		test	eax, eax
		jz	short loc_6ED419AB
		mov	edx, [eax]
		mov	[esp+1Ch+var_18], ebx
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+18h]

loc_6ED419AB:				; CODE XREF: sub_6ED418D0+C6j
					; sub_6ED418D0+CDj
		lock inc dword ptr [ebx+4]
		setnz	al
		or	byte ptr [ebx+2Ch], 2
		test	esi, esi
		mov	[ebx+10h], edi
		jz	short loc_6ED419DB
		mov	ecx, [esi+0Ch]
		test	ecx, ecx
		jz	short loc_6ED419DB
		mov	eax, [esi+0Ch]
		mov	[ebx+8], esi
		mov	[ebx+0Ch], eax
		mov	eax, [esi+0Ch]
		mov	[esi+0Ch], ebx
		mov	[eax+8], ebx
		jmp	loc_6ED418EF
; ---------------------------------------------------------------------------

loc_6ED419DB:				; CODE XREF: sub_6ED418D0+EBj
					; sub_6ED418D0+F2j
		mov	eax, [edi+18h]
		xor	edx, edx
		test	eax, eax
		jz	short loc_6ED419E9
		mov	[eax+0Ch], ebx
		mov	edx, eax

loc_6ED419E9:				; CODE XREF: sub_6ED418D0+112j
		mov	[ebx+8], edx
		mov	edx, [edi+14h]
		test	edx, edx
		jz	short loc_6ED41A1D

loc_6ED419F3:				; CODE XREF: sub_6ED418D0+150j
		mov	[edi+18h], ebx
		jmp	loc_6ED418EF
; ---------------------------------------------------------------------------

loc_6ED419FB:				; CODE XREF: sub_6ED418D0+86j
					; sub_6ED418D0+91j
		mov	eax, [edi+18h]
		test	eax, eax
		jz	short loc_6ED41A27
		mov	edx, [ebx+14h]
		mov	[eax+0Ch], edx

loc_6ED41A08:				; CODE XREF: sub_6ED418D0+15Aj
		mov	esi, [edi+14h]
		mov	[edx+8], eax
		test	esi, esi
		jz	short loc_6ED41A22

loc_6ED41A12:				; CODE XREF: sub_6ED418D0+155j
		mov	eax, [ebx+18h]
		mov	[edi+18h], eax
		jmp	loc_6ED4197F
; ---------------------------------------------------------------------------

loc_6ED41A1D:				; CODE XREF: sub_6ED418D0+121j
		mov	[edi+14h], ebx
		jmp	short loc_6ED419F3
; ---------------------------------------------------------------------------

loc_6ED41A22:				; CODE XREF: sub_6ED418D0+140j
		mov	[edi+14h], edx
		jmp	short loc_6ED41A12
; ---------------------------------------------------------------------------

loc_6ED41A27:				; CODE XREF: sub_6ED418D0+130j
		mov	edx, [ebx+14h]
		jmp	short loc_6ED41A08
sub_6ED418D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED41A30	proc near		; CODE XREF: sub_6ED574C0+4Dp
					; DATA XREF: .rdata:6EDA6DD4o ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	[esp+1Ch+var_C], ebx
		mov	ebx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], esi
		mov	esi, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_4], edi
		mov	edi, [esp+1Ch+arg_0]
		test	ebx, ebx
		jnz	short loc_6ED41A61

loc_6ED41A4F:				; CODE XREF: sub_6ED41A30+37j
					; sub_6ED41A30+74j ...
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_8]
		mov	ebx, [esp+1Ch+var_C]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED41A61:				; CODE XREF: sub_6ED41A30+1Dj
		cmp	ebx, esi
		jnz	short loc_6ED41A70

loc_6ED41A65:				; CODE XREF: sub_6ED41A30+51j
		xor	ebx, ebx
		jmp	short loc_6ED41A4F
; ---------------------------------------------------------------------------
		align 10h

loc_6ED41A70:				; CODE XREF: sub_6ED41A30+33j
		test	esi, esi
		jz	short loc_6ED41A83
		xor	eax, eax
		test	byte ptr [esi+2Ch], 2
		jz	short loc_6ED41A7F
		mov	eax, [esi+10h]

loc_6ED41A7F:				; CODE XREF: sub_6ED41A30+4Aj
		cmp	edi, eax
		jnz	short loc_6ED41A65

loc_6ED41A83:				; CODE XREF: sub_6ED41A30+42j
		mov	[esp+1Ch+var_1C], edi
		call	sub_6ED41890
		test	eax, eax
		jz	short loc_6ED41A93
		add	dword ptr [eax+40h], 1

loc_6ED41A93:				; CODE XREF: sub_6ED41A30+5Dj
		mov	eax, [ebx]
		mov	[esp+1Ch+var_1C], ebx
		call	dword ptr [eax+34h]
		test	al, al
		jz	short loc_6ED41AF2
		mov	eax, [ebx+14h]
		test	eax, eax
		jz	short loc_6ED41A4F

loc_6ED41AA6:				; CODE XREF: sub_6ED41A30+82j
		or	byte ptr [eax+2Ch], 2
		mov	[eax+10h], edi
		mov	eax, [eax+0Ch]
		test	eax, eax
		jnz	short loc_6ED41AA6
		test	esi, esi
		jz	loc_6ED41B63
		mov	eax, [esi+8]
		test	eax, eax
		jz	loc_6ED41B63
		mov	ecx, [esi+8]
		mov	edx, [ebx+14h]
		mov	eax, [ebx+18h]
		mov	[edx+8], ecx
		mov	ecx, [esi+8]
		mov	[eax+0Ch], esi
		mov	[esi+8], eax
		mov	[ecx+0Ch], edx

loc_6ED41ADF:				; CODE XREF: sub_6ED41A30+150j
		mov	dword ptr [ebx+14h], 0
		mov	dword ptr [ebx+18h], 0
		jmp	loc_6ED41A4F
; ---------------------------------------------------------------------------

loc_6ED41AF2:				; CODE XREF: sub_6ED41A30+6Dj
		lock inc dword ptr [ebx+4]
		setnz	al
		movzx	eax, byte ptr [ebx+2Ch]
		test	al, 2
		jz	short loc_6ED41B18
		mov	edx, [ebx+10h]
		test	edx, edx
		jz	short loc_6ED41B18
		mov	eax, [edx]
		mov	[esp+1Ch+var_18], ebx
		mov	[esp+1Ch+var_1C], edx
		call	dword ptr [eax+18h]
		movzx	eax, byte ptr [ebx+2Ch]

loc_6ED41B18:				; CODE XREF: sub_6ED41A30+CFj
					; sub_6ED41A30+D6j
		or	eax, 2
		test	esi, esi
		mov	[ebx+10h], edi
		mov	[ebx+2Ch], al
		jz	short loc_6ED41B43
		mov	ecx, [esi+8]
		test	ecx, ecx
		jz	short loc_6ED41B43
		mov	eax, [esi+8]
		mov	[ebx+0Ch], esi
		mov	[ebx+8], eax
		mov	eax, [esi+8]
		mov	[esi+8], ebx
		mov	[eax+0Ch], ebx
		jmp	loc_6ED41A4F
; ---------------------------------------------------------------------------

loc_6ED41B43:				; CODE XREF: sub_6ED41A30+F3j
					; sub_6ED41A30+FAj
		mov	eax, [edi+14h]
		xor	edx, edx
		test	eax, eax
		jz	short loc_6ED41B51
		mov	[eax+8], ebx
		mov	edx, eax

loc_6ED41B51:				; CODE XREF: sub_6ED41A30+11Aj
		mov	[ebx+0Ch], edx
		mov	edx, [edi+18h]
		test	edx, edx
		jz	short loc_6ED41B85

loc_6ED41B5B:				; CODE XREF: sub_6ED41A30+158j
		mov	[edi+14h], ebx
		jmp	loc_6ED41A4F
; ---------------------------------------------------------------------------

loc_6ED41B63:				; CODE XREF: sub_6ED41A30+86j
					; sub_6ED41A30+91j
		mov	eax, [edi+14h]
		test	eax, eax
		jz	short loc_6ED41B92
		mov	edx, [ebx+18h]
		mov	[eax+8], edx

loc_6ED41B70:				; CODE XREF: sub_6ED41A30+165j
		mov	esi, [edi+18h]
		mov	[edx+0Ch], eax
		test	esi, esi
		jz	short loc_6ED41B8A

loc_6ED41B7A:				; CODE XREF: sub_6ED41A30+160j
		mov	eax, [ebx+14h]
		mov	[edi+14h], eax
		jmp	loc_6ED41ADF
; ---------------------------------------------------------------------------

loc_6ED41B85:				; CODE XREF: sub_6ED41A30+129j
		mov	[edi+18h], ebx
		jmp	short loc_6ED41B5B
; ---------------------------------------------------------------------------

loc_6ED41B8A:				; CODE XREF: sub_6ED41A30+148j
		mov	[edi+18h], edx
		lea	esi, [esi+0]
		jmp	short loc_6ED41B7A
; ---------------------------------------------------------------------------

loc_6ED41B92:				; CODE XREF: sub_6ED41A30+138j
		mov	edx, [ebx+18h]
		jmp	short loc_6ED41B70
sub_6ED41A30	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED41BA0	proc near		; CODE XREF: sub_6ED51550+6E5p
					; DATA XREF: .rdata:6EDA6EACo ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	eax, [esp+2Ch+arg_0]
		mov	ebp, [esp+2Ch+arg_4]
		mov	edi, [esp+2Ch+arg_8]
		mov	esi, [esp+2Ch+arg_C]
		mov	ebx, [eax+14h]
		test	ebx, ebx
		jz	short loc_6ED41BDB
		xchg	ax, ax

loc_6ED41BC0:				; CODE XREF: sub_6ED41BA0+39j
		mov	eax, [ebx]
		mov	[esp+2Ch+var_2C], ebx
		mov	[esp+2Ch+var_20], esi
		mov	[esp+2Ch+var_24], edi
		mov	[esp+2Ch+var_28], ebp
		call	dword ptr [eax+64h]
		mov	ebx, [ebx+0Ch]
		test	ebx, ebx
		jnz	short loc_6ED41BC0

loc_6ED41BDB:				; CODE XREF: sub_6ED41BA0+1Cj
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_6ED41BA0	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	edx, [esp+8]
		mov	eax, [esp+4]
		mov	[eax+30h], edx
		mov	edx, [esp+0Ch]
		mov	[eax+34h], edx
		retn
; ---------------------------------------------------------------------------
		align 10h
; Exported entry 393. _ZN8QDomNodeC2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomNodeC2Ev
_ZN8QDomNodeC2Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN8QDomNodeC2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 390. _ZN8QDomNodeC1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomNodeC1Ev
_ZN8QDomNodeC1Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN8QDomNodeC1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 392. _ZN8QDomNodeC2ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomNodeC2ERKS_
_ZN8QDomNodeC2ERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED41C47
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED41C47:			; CODE XREF: _ZN8QDomNodeC2ERKS_+Ej
		rep retn
_ZN8QDomNodeC2ERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 389. _ZN8QDomNodeC1ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomNodeC1ERKS_
_ZN8QDomNodeC1ERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED41C67
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED41C67:			; CODE XREF: _ZN8QDomNodeC1ERKS_+Ej
		rep retn
_ZN8QDomNodeC1ERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 391. _ZN8QDomNodeC2EP15QDomNodePrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomNodeC2EP15QDomNodePrivate
_ZN8QDomNodeC2EP15QDomNodePrivate proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED41C85
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED41C85:			; CODE XREF: _ZN8QDomNodeC2EP15QDomNodePrivate+Cj
		rep retn
_ZN8QDomNodeC2EP15QDomNodePrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 388. _ZN8QDomNodeC1EP15QDomNodePrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomNodeC1EP15QDomNodePrivate
_ZN8QDomNodeC1EP15QDomNodePrivate proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED41CA5
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED41CA5:			; CODE XREF: _ZN8QDomNodeC1EP15QDomNodePrivate+Cj
		rep retn
_ZN8QDomNodeC1EP15QDomNodePrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 396. _ZN8QDomNodeaSERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomNodeaSERKS_
_ZN8QDomNodeaSERKS_ proc near		; CODE XREF: _ZN16QDomDocumentTypeaSERKS_+6j
					; _ZN20QDomDocumentFragmentaSERKS_+6j ...

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	edx, [esi]
		test	edx, edx
		jz	short loc_6ED41CD0
		lock inc dword ptr [edx+4]
		setnz	al

loc_6ED41CD0:				; CODE XREF: _ZN8QDomNodeaSERKS_+17j
		mov	edx, [ebx]
		test	edx, edx
		jz	short loc_6ED41CEF
		lock dec dword ptr [edx+4]
		setnz	al
		test	al, al
		jnz	short loc_6ED41CEF
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_6ED41CEF
		mov	edx, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+4]

loc_6ED41CEF:				; CODE XREF: _ZN8QDomNodeaSERKS_+24j
					; _ZN8QDomNodeaSERKS_+2Fj ...
		mov	eax, [esi]
		mov	[ebx], eax
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn
_ZN8QDomNodeaSERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 585. _ZNK8QDomNodeeqERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNodeeqERKS_
_ZNK8QDomNodeeqERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		mov	edx, [eax]
		mov	eax, [esp+arg_4]
		cmp	edx, [eax]
		setz	al
		retn
_ZNK8QDomNodeeqERKS_ endp

; Exported entry 586. _ZNK8QDomNodeneERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNodeneERKS_
_ZNK8QDomNodeneERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		mov	edx, [eax]
		mov	eax, [esp+arg_4]
		cmp	edx, [eax]
		setnz	al
		retn
_ZNK8QDomNodeneERKS_ endp

; Exported entry 395. _ZN8QDomNodeD2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomNodeD2Ev
_ZN8QDomNodeD2Ev proc near		; CODE XREF: _ZN12QDomDocumentD2Ev+6j
					; _ZN12QDomDocumentD1Ev+6j ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	edx, [esp+0Ch+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED41D60
		lock dec dword ptr [eax+4]
		setnz	cl
		test	cl, cl
		jnz	short loc_6ED41D60
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED41D60
		mov	edx, [eax]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, [edx+4]
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_6ED41D60:				; CODE XREF: _ZN8QDomNodeD2Ev+Bj
					; _ZN8QDomNodeD2Ev+16j	...
		add	esp, 0Ch
		retn
_ZN8QDomNodeD2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 394. _ZN8QDomNodeD1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomNodeD1Ev
_ZN8QDomNodeD1Ev proc near		; CODE XREF: _ZNK8QDomNode22previousSiblingElementERK7QString+A2p
					; _ZNK8QDomNode22previousSiblingElementERK7QString+11Bp ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	edx, [esp+0Ch+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED41DA0
		lock dec dword ptr [eax+4]
		setnz	cl
		test	cl, cl
		jnz	short loc_6ED41DA0
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED41DA0
		mov	edx, [eax]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, [edx+4]
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_6ED41DA0:				; CODE XREF: _ZN8QDomNodeD1Ev+Bj
					; _ZN8QDomNodeD1Ev+16j	...
		add	esp, 0Ch
		retn
_ZN8QDomNodeD1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 582. _ZNK8QDomNode9nodeValueEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode9nodeValueEv
_ZNK8QDomNode9nodeValueEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED41DD0
		mov	edx, [edx+20h]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED41DD0:				; CODE XREF: _ZNK8QDomNode9nodeValueEv+Cj
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK8QDomNode9nodeValueEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 384. _ZN8QDomNode12setNodeValueERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomNode12setNodeValueERK7QString
_ZN8QDomNode12setNodeValueERK7QString proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED41E10
		mov	ecx, [eax]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, [ecx+8]
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_6ED41E10:				; CODE XREF: _ZN8QDomNode12setNodeValueERK7QString+Bj
		add	esp, 0Ch
		retn
_ZN8QDomNode12setNodeValueERK7QString endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 574. _ZNK8QDomNode8nodeTypeEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode8nodeTypeEv
_ZNK8QDomNode8nodeTypeEv proc near	; CODE XREF: _ZNK17QDomCharacterData8nodeTypeEv+14j

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED41E40
		mov	edx, [eax]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, [edx+60h]
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_6ED41E40:				; CODE XREF: _ZNK8QDomNode8nodeTypeEv+Bj
		mov	al, 15h
		add	esp, 0Ch
		retn
_ZNK8QDomNode8nodeTypeEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 537. _ZNK8QDomNode10parentNodeEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode10parentNodeEv
_ZNK8QDomNode10parentNodeEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED41E80
		test	byte ptr [edx+2Ch], 2
		jz	short loc_6ED41E77
		mov	edx, [edx+10h]
		test	edx, edx
		mov	[eax], edx
		jz	short locret_6ED41E7D
		lock inc dword ptr [edx+4]
		setnz	cl
		retn	4
; ---------------------------------------------------------------------------

loc_6ED41E77:				; CODE XREF: _ZNK8QDomNode10parentNodeEv+12j
		mov	dword ptr [eax], 0

locret_6ED41E7D:			; CODE XREF: _ZNK8QDomNode10parentNodeEv+1Bj
		retn	4
; ---------------------------------------------------------------------------

loc_6ED41E80:				; CODE XREF: _ZNK8QDomNode10parentNodeEv+Cj
		mov	dword ptr [eax], 0
		retn	4
_ZNK8QDomNode10parentNodeEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 533. _ZNK8QDomNode10firstChildEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode10firstChildEv
_ZNK8QDomNode10firstChildEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED41EB1
		mov	edx, [edx+14h]
		test	edx, edx
		mov	[eax], edx
		jz	short locret_6ED41EAE
		lock inc dword ptr [edx+4]
		setnz	cl

locret_6ED41EAE:			; CODE XREF: _ZNK8QDomNode10firstChildEv+15j
		retn	4
; ---------------------------------------------------------------------------

loc_6ED41EB1:				; CODE XREF: _ZNK8QDomNode10firstChildEv+Cj
		mov	dword ptr [eax], 0
		retn	4
_ZNK8QDomNode10firstChildEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 579. _ZNK8QDomNode9lastChildEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode9lastChildEv
_ZNK8QDomNode9lastChildEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED41EE1
		mov	edx, [edx+18h]
		test	edx, edx
		mov	[eax], edx
		jz	short locret_6ED41EDE
		lock inc dword ptr [edx+4]
		setnz	cl

locret_6ED41EDE:			; CODE XREF: _ZNK8QDomNode9lastChildEv+15j
		retn	4
; ---------------------------------------------------------------------------

loc_6ED41EE1:				; CODE XREF: _ZNK8QDomNode9lastChildEv+Cj
		mov	dword ptr [eax], 0
		retn	4
_ZNK8QDomNode9lastChildEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 552. _ZNK8QDomNode15previousSiblingEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode15previousSiblingEv
_ZNK8QDomNode15previousSiblingEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED41F11
		mov	edx, [edx+8]
		test	edx, edx
		mov	[eax], edx
		jz	short locret_6ED41F0E
		lock inc dword ptr [edx+4]
		setnz	cl

locret_6ED41F0E:			; CODE XREF: _ZNK8QDomNode15previousSiblingEv+15j
		retn	4
; ---------------------------------------------------------------------------

loc_6ED41F11:				; CODE XREF: _ZNK8QDomNode15previousSiblingEv+Cj
		mov	dword ptr [eax], 0
		retn	4
_ZNK8QDomNode15previousSiblingEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 541. _ZNK8QDomNode11nextSiblingEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode11nextSiblingEv
_ZNK8QDomNode11nextSiblingEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED41F41
		mov	edx, [edx+0Ch]
		test	edx, edx
		mov	[eax], edx
		jz	short locret_6ED41F3E
		lock inc dword ptr [edx+4]
		setnz	cl

locret_6ED41F3E:			; CODE XREF: _ZNK8QDomNode11nextSiblingEv+15j
		retn	4
; ---------------------------------------------------------------------------

loc_6ED41F41:				; CODE XREF: _ZNK8QDomNode11nextSiblingEv+Cj
		mov	dword ptr [eax], 0
		retn	4
_ZNK8QDomNode11nextSiblingEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 531. _ZNK8QDomNode10attributesEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode10attributesEv
_ZNK8QDomNode10attributesEv proc near

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_6ED41F75
		mov	edx, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+40h]
		test	al, al
		jnz	short loc_6ED41F90

loc_6ED41F75:				; CODE XREF: _ZNK8QDomNode10attributesEv+17j
		mov	dword ptr [ebx], 0

loc_6ED41F7B:				; CODE XREF: _ZNK8QDomNode10attributesEv+49j
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED41F90:				; CODE XREF: _ZNK8QDomNode10attributesEv+23j
		mov	eax, [esi]
		mov	eax, [eax+38h]
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED41F7B
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
_ZNK8QDomNode10attributesEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 546. _ZNK8QDomNode13ownerDocumentEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode13ownerDocumentEv
_ZNK8QDomNode13ownerDocumentEv proc near

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED41FF0
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED41890
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED41FE7
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED41FE7:				; CODE XREF: _ZNK8QDomNode13ownerDocumentEv+1Ej
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
; ---------------------------------------------------------------------------

loc_6ED41FF0:				; CODE XREF: _ZNK8QDomNode13ownerDocumentEv+10j
		mov	dword ptr [ebx], 0
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
_ZNK8QDomNode13ownerDocumentEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 576. _ZNK8QDomNode9cloneNodeEb

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode9cloneNodeEb
_ZNK8QDomNode9cloneNodeEb proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= byte ptr  0Ch

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		movzx	edx, [esp+1Ch+arg_8]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED42040
		mov	ecx, [eax]
		movzx	edx, dl
		mov	[esp+1Ch+var_18], edx
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [ecx+20h]
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED42033
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED42033:				; CODE XREF: _ZNK8QDomNode9cloneNodeEb+2Aj
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED42040:				; CODE XREF: _ZNK8QDomNode9cloneNodeEb+15j
		mov	dword ptr [ebx], 0
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
_ZNK8QDomNode9cloneNodeEb endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 386. _ZN8QDomNode9normalizeEv

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomNode9normalizeEv
_ZN8QDomNode9normalizeEv proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED42070
		mov	edx, [eax]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, [edx+24h]
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_6ED42070:				; CODE XREF: _ZN8QDomNode9normalizeEv+Bj
		add	esp, 0Ch
		retn
_ZN8QDomNode9normalizeEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 543. _ZNK8QDomNode12namespaceURIEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode12namespaceURIEv
_ZNK8QDomNode12namespaceURIEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED420A0
		mov	edx, [edx+28h]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED420A0:				; CODE XREF: _ZNK8QDomNode12namespaceURIEv+Cj
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK8QDomNode12namespaceURIEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 569. _ZNK8QDomNode6prefixEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode6prefixEv
_ZNK8QDomNode6prefixEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED420E0
		mov	edx, [edx+24h]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED420E0:				; CODE XREF: _ZNK8QDomNode6prefixEv+Cj
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK8QDomNode6prefixEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 580. _ZNK8QDomNode9localNameEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode9localNameEv
_ZNK8QDomNode9localNameEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED42122
		test	byte ptr [edx+2Ch], 1
		jnz	short loc_6ED42122
		mov	edx, [edx+1Ch]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
; ---------------------------------------------------------------------------

loc_6ED42122:				; CODE XREF: _ZNK8QDomNode9localNameEv+Cj
					; _ZNK8QDomNode9localNameEv+12j
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK8QDomNode9localNameEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 544. _ZNK8QDomNode13hasAttributesEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode13hasAttributesEv
_ZNK8QDomNode13hasAttributesEv proc near

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_6ED4215A
		mov	edx, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+40h]
		test	al, al
		jnz	short loc_6ED42161

loc_6ED4215A:				; CODE XREF: _ZNK8QDomNode13hasAttributesEv+Cj
		xor	eax, eax
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_6ED42161:				; CODE XREF: _ZNK8QDomNode13hasAttributesEv+18j
		mov	eax, [ebx]
		mov	eax, [eax+38h]
		mov	eax, [eax+4]
		mov	edx, [eax+0Ch]
		test	edx, edx
		setnz	al
		add	esp, 18h
		pop	ebx
		retn
_ZNK8QDomNode13hasAttributesEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 382. _ZN8QDomNode12insertBeforeERKS_S1_

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomNode12insertBeforeERKS_S1_
_ZN8QDomNode12insertBeforeERKS_S1_ proc	near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED421C4
		mov	ecx, [esp+1Ch+arg_C]
		mov	edx, [eax]
		mov	ecx, [ecx]
		mov	[esp+1Ch+var_14], ecx
		mov	ecx, [esp+1Ch+arg_8]
		mov	ecx, [ecx]
		mov	[esp+1Ch+var_1C], eax
		mov	[esp+1Ch+var_18], ecx
		call	dword ptr [edx+0Ch]
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED421BB
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED421BB:				; CODE XREF: _ZN8QDomNode12insertBeforeERKS_S1_+32j
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
; ---------------------------------------------------------------------------

loc_6ED421C4:				; CODE XREF: _ZN8QDomNode12insertBeforeERKS_S1_+10j
		mov	dword ptr [ebx], 0
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
_ZN8QDomNode12insertBeforeERKS_S1_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 380. _ZN8QDomNode11insertAfterERKS_S1_

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomNode11insertAfterERKS_S1_
_ZN8QDomNode11insertAfterERKS_S1_ proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED42224
		mov	ecx, [esp+1Ch+arg_C]
		mov	edx, [eax]
		mov	ecx, [ecx]
		mov	[esp+1Ch+var_14], ecx
		mov	ecx, [esp+1Ch+arg_8]
		mov	ecx, [ecx]
		mov	[esp+1Ch+var_1C], eax
		mov	[esp+1Ch+var_18], ecx
		call	dword ptr [edx+10h]
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED4221B
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED4221B:				; CODE XREF: _ZN8QDomNode11insertAfterERKS_S1_+32j
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
; ---------------------------------------------------------------------------

loc_6ED42224:				; CODE XREF: _ZN8QDomNode11insertAfterERKS_S1_+10j
		mov	dword ptr [ebx], 0
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
_ZN8QDomNode11insertAfterERKS_S1_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 383. _ZN8QDomNode12replaceChildERKS_S1_

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomNode12replaceChildERKS_S1_
_ZN8QDomNode12replaceChildERKS_S1_ proc	near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	esi
		push	ebx
		sub	esp, 14h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED42290
		mov	edx, [esp+1Ch+arg_8]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED42290
		mov	ecx, [esp+1Ch+arg_C]
		mov	ecx, [ecx]
		test	ecx, ecx
		jz	short loc_6ED42290
		mov	esi, [eax]
		mov	[esp+1Ch+var_14], ecx
		mov	[esp+1Ch+var_18], edx
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [esi+14h]
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED42284
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED42284:				; CODE XREF: _ZN8QDomNode12replaceChildERKS_S1_+3Bj
		mov	eax, ebx
		add	esp, 14h
		pop	ebx
		pop	esi
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED42290:				; CODE XREF: _ZN8QDomNode12replaceChildERKS_S1_+11j
					; _ZN8QDomNode12replaceChildERKS_S1_+1Bj ...
		mov	dword ptr [ebx], 0
		mov	eax, ebx
		add	esp, 14h
		pop	ebx
		pop	esi
		retn	4
_ZN8QDomNode12replaceChildERKS_S1_ endp

; Exported entry 381. _ZN8QDomNode11removeChildERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomNode11removeChildERKS_
_ZN8QDomNode11removeChildERKS_ proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED422E0
		mov	edx, [esp+1Ch+arg_8]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED422E0
		mov	ecx, [eax]
		mov	[esp+1Ch+var_18], edx
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [ecx+18h]
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED422D5
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED422D5:				; CODE XREF: _ZN8QDomNode11removeChildERKS_+2Cj
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED422E0:				; CODE XREF: _ZN8QDomNode11removeChildERKS_+10j
					; _ZN8QDomNode11removeChildERKS_+1Aj
		mov	dword ptr [ebx], 0
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
_ZN8QDomNode11removeChildERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 545. _ZNK8QDomNode13hasChildNodesEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode13hasChildNodesEv
_ZNK8QDomNode13hasChildNodesEv proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	edx, [eax]
		xor	eax, eax
		test	edx, edx
		jz	short locret_6ED42304
		mov	ecx, [edx+14h]
		test	ecx, ecx
		setnz	al

locret_6ED42304:			; CODE XREF: _ZNK8QDomNode13hasChildNodesEv+Aj
		rep retn
_ZNK8QDomNode13hasChildNodesEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 567. _ZNK8QDomNode6isNullEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode6isNullEv
_ZNK8QDomNode6isNullEv proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		setz	al
		retn
_ZNK8QDomNode6isNullEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 385. _ZN8QDomNode5clearEv

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomNode5clearEv
_ZN8QDomNode5clearEv proc near

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_6ED42347
		lock dec dword ptr [eax+4]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED42347
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_6ED42347
		mov	edx, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+4]

loc_6ED42347:				; CODE XREF: _ZN8QDomNode5clearEv+Cj
					; _ZN8QDomNode5clearEv+17j ...
		mov	dword ptr [ebx], 0
		add	esp, 18h
		pop	ebx
		retn
_ZN8QDomNode5clearEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 566. _ZNK8QDomNode6isAttrEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode6isAttrEv
_ZNK8QDomNode6isAttrEv proc near	; CODE XREF: _ZN8QDomNode9setPrefixERK7QString+27p

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED42380
		mov	edx, [eax]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, [edx+2Ch]
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_6ED42380:				; CODE XREF: _ZNK8QDomNode6isAttrEv+Bj
		add	esp, 0Ch
		retn
_ZNK8QDomNode6isAttrEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 547. _ZNK8QDomNode14isCDATASectionEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode14isCDATASectionEv
_ZNK8QDomNode14isCDATASectionEv	proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED423B0
		mov	edx, [eax]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, [edx+30h]
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_6ED423B0:				; CODE XREF: _ZNK8QDomNode14isCDATASectionEv+Bj
		add	esp, 0Ch
		retn
_ZNK8QDomNode14isCDATASectionEv	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 558. _ZNK8QDomNode18isDocumentFragmentEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode18isDocumentFragmentEv
_ZNK8QDomNode18isDocumentFragmentEv proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED423E0
		mov	edx, [eax]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, [edx+34h]
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_6ED423E0:				; CODE XREF: _ZNK8QDomNode18isDocumentFragmentEv+Bj
		add	esp, 0Ch
		retn
_ZNK8QDomNode18isDocumentFragmentEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 534. _ZNK8QDomNode10isDocumentEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode10isDocumentEv
_ZNK8QDomNode10isDocumentEv proc near	; CODE XREF: _ZNK8QDomNode4saveER11QTextStreamiNS_14EncodingPolicyE+2Cp

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED42410
		mov	edx, [eax]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, [edx+38h]
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_6ED42410:				; CODE XREF: _ZNK8QDomNode10isDocumentEv+Bj
		add	esp, 0Ch
		retn
_ZNK8QDomNode10isDocumentEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 548. _ZNK8QDomNode14isDocumentTypeEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode14isDocumentTypeEv
_ZNK8QDomNode14isDocumentTypeEv	proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED42440
		mov	edx, [eax]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, [edx+3Ch]
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_6ED42440:				; CODE XREF: _ZNK8QDomNode14isDocumentTypeEv+Bj
		add	esp, 0Ch
		retn
_ZNK8QDomNode14isDocumentTypeEv	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 578. _ZNK8QDomNode9isElementEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode9isElementEv
_ZNK8QDomNode9isElementEv proc near	; CODE XREF: _ZN8QDomNode9setPrefixERK7QString+53p
					; _ZNK8QDomNode22previousSiblingElementERK7QString+BFp	...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED42470
		mov	edx, [eax]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, [edx+40h]
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_6ED42470:				; CODE XREF: _ZNK8QDomNode9isElementEv+Bj
		add	esp, 0Ch
		retn
_ZNK8QDomNode9isElementEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 556. _ZNK8QDomNode17isEntityReferenceEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode17isEntityReferenceEv
_ZNK8QDomNode17isEntityReferenceEv proc	near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED424A0
		mov	edx, [eax]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, [edx+44h]
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_6ED424A0:				; CODE XREF: _ZNK8QDomNode17isEntityReferenceEv+Bj
		add	esp, 0Ch
		retn
_ZNK8QDomNode17isEntityReferenceEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 568. _ZNK8QDomNode6isTextEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode6isTextEv
_ZNK8QDomNode6isTextEv proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED424D0
		mov	edx, [eax]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, [edx+48h]
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_6ED424D0:				; CODE XREF: _ZNK8QDomNode6isTextEv+Bj
		add	esp, 0Ch
		retn
_ZNK8QDomNode6isTextEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 572. _ZNK8QDomNode8isEntityEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode8isEntityEv
_ZNK8QDomNode8isEntityEv proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED42500
		mov	edx, [eax]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, [edx+4Ch]
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_6ED42500:				; CODE XREF: _ZNK8QDomNode8isEntityEv+Bj
		add	esp, 0Ch
		retn
_ZNK8QDomNode8isEntityEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 535. _ZNK8QDomNode10isNotationEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode10isNotationEv
_ZNK8QDomNode10isNotationEv proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED42530
		mov	edx, [eax]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, [edx+50h]
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_6ED42530:				; CODE XREF: _ZNK8QDomNode10isNotationEv+Bj
		add	esp, 0Ch
		retn
_ZNK8QDomNode10isNotationEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 562. _ZNK8QDomNode23isProcessingInstructionEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode23isProcessingInstructionEv
_ZNK8QDomNode23isProcessingInstructionEv proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED42560
		mov	edx, [eax]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, [edx+54h]
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_6ED42560:				; CODE XREF: _ZNK8QDomNode23isProcessingInstructionEv+Bj
		add	esp, 0Ch
		retn
_ZNK8QDomNode23isProcessingInstructionEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 551. _ZNK8QDomNode15isCharacterDataEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode15isCharacterDataEv
_ZNK8QDomNode15isCharacterDataEv proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED42590
		mov	edx, [eax]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, [edx+58h]
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_6ED42590:				; CODE XREF: _ZNK8QDomNode15isCharacterDataEv+Bj
		add	esp, 0Ch
		retn
_ZNK8QDomNode15isCharacterDataEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 577. _ZNK8QDomNode9isCommentEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode9isCommentEv
_ZNK8QDomNode9isCommentEv proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED425C0
		mov	edx, [eax]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, [edx+5Ch]
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_6ED425C0:				; CODE XREF: _ZNK8QDomNode9isCommentEv+Bj
		add	esp, 0Ch
		retn
_ZNK8QDomNode9isCommentEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 536. _ZNK8QDomNode10lineNumberEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode10lineNumberEv
_ZNK8QDomNode10lineNumberEv proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	edx, [eax]
		mov	eax, 0FFFFFFFFh
		test	edx, edx
		jz	short locret_6ED425E2
		mov	eax, [edx+30h]

locret_6ED425E2:			; CODE XREF: _ZNK8QDomNode10lineNumberEv+Dj
		rep retn
_ZNK8QDomNode10lineNumberEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 542. _ZNK8QDomNode12columnNumberEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode12columnNumberEv
_ZNK8QDomNode12columnNumberEv proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	edx, [eax]
		mov	eax, 0FFFFFFFFh
		test	edx, edx
		jz	short locret_6ED42602
		mov	eax, [edx+34h]

locret_6ED42602:			; CODE XREF: _ZNK8QDomNode12columnNumberEv+Dj
		rep retn
_ZNK8QDomNode12columnNumberEv endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		mov	edx, ds:_ZN9QHashData11shared_nullE
		mov	dword ptr [eax], 0
		mov	[eax+4], edx
		lock inc dword ptr [edx+8]
		setnz	cl
		mov	dword ptr [eax], 1
		mov	edx, [esp+8]
		mov	byte ptr [eax+0Ch], 0
		mov	byte ptr [eax+0Dh], 0
		mov	[eax+8], edx
		retn
; ---------------------------------------------------------------------------
		mov	eax, [esp+4]
		mov	edx, ds:_ZN9QHashData11shared_nullE
		mov	dword ptr [eax], 0
		mov	[eax+4], edx
		lock inc dword ptr [edx+8]
		setnz	cl
		mov	dword ptr [eax], 1
		mov	edx, [esp+8]
		mov	byte ptr [eax+0Ch], 0
		mov	byte ptr [eax+0Dh], 0
		mov	[eax+8], edx
		retn
; ---------------------------------------------------------------------------
		mov	eax, [esp+4]
		mov	eax, [eax+4]
		mov	eax, [eax+0Ch]
		retn
; ---------------------------------------------------------------------------
		align 10h
; Exported entry 143. _ZN16QDomNamedNodeMapC2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QDomNamedNodeMapC2Ev
_ZN16QDomNamedNodeMapC2Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN16QDomNamedNodeMapC2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 140. _ZN16QDomNamedNodeMapC1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QDomNamedNodeMapC1Ev
_ZN16QDomNamedNodeMapC1Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN16QDomNamedNodeMapC1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 142. _ZN16QDomNamedNodeMapC2ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QDomNamedNodeMapC2ERKS_
_ZN16QDomNamedNodeMapC2ERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED426B6
		lock inc dword ptr [eax]
		setnz	dl

locret_6ED426B6:			; CODE XREF: _ZN16QDomNamedNodeMapC2ERKS_+Ej
		rep retn
_ZN16QDomNamedNodeMapC2ERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 139. _ZN16QDomNamedNodeMapC1ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QDomNamedNodeMapC1ERKS_
_ZN16QDomNamedNodeMapC1ERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED426D6
		lock inc dword ptr [eax]
		setnz	dl

locret_6ED426D6:			; CODE XREF: _ZN16QDomNamedNodeMapC1ERKS_+Ej
		rep retn
_ZN16QDomNamedNodeMapC1ERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 141. _ZN16QDomNamedNodeMapC2EP23QDomNamedNodeMapPrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QDomNamedNodeMapC2EP23QDomNamedNodeMapPrivate
_ZN16QDomNamedNodeMapC2EP23QDomNamedNodeMapPrivate proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED426F4
		lock inc dword ptr [eax]
		setnz	dl

locret_6ED426F4:			; CODE XREF: _ZN16QDomNamedNodeMapC2EP23QDomNamedNodeMapPrivate+Cj
		rep retn
_ZN16QDomNamedNodeMapC2EP23QDomNamedNodeMapPrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 138. _ZN16QDomNamedNodeMapC1EP23QDomNamedNodeMapPrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QDomNamedNodeMapC1EP23QDomNamedNodeMapPrivate
_ZN16QDomNamedNodeMapC1EP23QDomNamedNodeMapPrivate proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED42714
		lock inc dword ptr [eax]
		setnz	dl

locret_6ED42714:			; CODE XREF: _ZN16QDomNamedNodeMapC1EP23QDomNamedNodeMapPrivate+Cj
		rep retn
_ZN16QDomNamedNodeMapC1EP23QDomNamedNodeMapPrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 455. _ZNK16QDomNamedNodeMapeqERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QDomNamedNodeMapeqERKS_
_ZNK16QDomNamedNodeMapeqERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		mov	edx, [eax]
		mov	eax, [esp+arg_4]
		cmp	edx, [eax]
		setz	al
		retn
_ZNK16QDomNamedNodeMapeqERKS_ endp

; Exported entry 456. _ZNK16QDomNamedNodeMapneERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QDomNamedNodeMapneERKS_
_ZNK16QDomNamedNodeMapneERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		mov	edx, [eax]
		mov	eax, [esp+arg_4]
		cmp	edx, [eax]
		setnz	al
		retn
_ZNK16QDomNamedNodeMapneERKS_ endp

; Exported entry 452. _ZNK16QDomNamedNodeMap6lengthEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QDomNamedNodeMap6lengthEv
_ZNK16QDomNamedNodeMap6lengthEv	proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	edx, [eax]
		xor	eax, eax
		test	edx, edx
		jz	short locret_6ED42752
		mov	eax, [edx+4]
		mov	eax, [eax+0Ch]

locret_6ED42752:			; CODE XREF: _ZNK16QDomNamedNodeMap6lengthEv+Aj
		rep retn
_ZNK16QDomNamedNodeMap6lengthEv	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED42760	proc near		; DATA XREF: .rdata:6EDA7544o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	ecx, [esp+1Ch+arg_4]
		mov	edx, [eax]
		mov	[esp+1Ch+var_14], 0
		mov	[esp+1Ch+var_18], ecx
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+10h]
		add	esp, 1Ch
		retn
sub_6ED42760	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 132. _ZN16QDomDocumentTypeC2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QDomDocumentTypeC2Ev
_ZN16QDomDocumentTypeC2Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN16QDomDocumentTypeC2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 129. _ZN16QDomDocumentTypeC1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QDomDocumentTypeC1Ev
_ZN16QDomDocumentTypeC1Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN16QDomDocumentTypeC1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 131. _ZN16QDomDocumentTypeC2ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QDomDocumentTypeC2ERKS_
_ZN16QDomDocumentTypeC2ERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED427C7
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED427C7:			; CODE XREF: _ZN16QDomDocumentTypeC2ERKS_+Ej
		rep retn
_ZN16QDomDocumentTypeC2ERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 128. _ZN16QDomDocumentTypeC1ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QDomDocumentTypeC1ERKS_
_ZN16QDomDocumentTypeC1ERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED427E7
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED427E7:			; CODE XREF: _ZN16QDomDocumentTypeC1ERKS_+Ej
		rep retn
_ZN16QDomDocumentTypeC1ERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 130. _ZN16QDomDocumentTypeC2EP23QDomDocumentTypePrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QDomDocumentTypeC2EP23QDomDocumentTypePrivate
_ZN16QDomDocumentTypeC2EP23QDomDocumentTypePrivate proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED42805
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED42805:			; CODE XREF: _ZN16QDomDocumentTypeC2EP23QDomDocumentTypePrivate+Cj
		rep retn
_ZN16QDomDocumentTypeC2EP23QDomDocumentTypePrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 127. _ZN16QDomDocumentTypeC1EP23QDomDocumentTypePrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QDomDocumentTypeC1EP23QDomDocumentTypePrivate
_ZN16QDomDocumentTypeC1EP23QDomDocumentTypePrivate proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED42825
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED42825:			; CODE XREF: _ZN16QDomDocumentTypeC1EP23QDomDocumentTypePrivate+Cj
		rep retn
_ZN16QDomDocumentTypeC1EP23QDomDocumentTypePrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 133. _ZN16QDomDocumentTypeaSERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QDomDocumentTypeaSERKS_
_ZN16QDomDocumentTypeaSERKS_ proc near
		sub	esp, 0Ch
		add	esp, 0Ch
		jmp	_ZN8QDomNodeaSERKS_
_ZN16QDomDocumentTypeaSERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 445. _ZNK16QDomDocumentType4nameEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QDomDocumentType4nameEv
_ZNK16QDomDocumentType4nameEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED42860
		mov	edx, [edx+1Ch]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED42860:				; CODE XREF: _ZNK16QDomDocumentType4nameEv+Cj
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK16QDomDocumentType4nameEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 446. _ZNK16QDomDocumentType8entitiesEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QDomDocumentType8entitiesEv
_ZNK16QDomDocumentType8entitiesEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED428A0
		mov	edx, [edx+38h]
		test	edx, edx
		mov	[eax], edx
		jz	short locret_6ED4289D
		lock inc dword ptr [edx]
		setnz	cl

locret_6ED4289D:			; CODE XREF: _ZNK16QDomDocumentType8entitiesEv+15j
		retn	4
; ---------------------------------------------------------------------------

loc_6ED428A0:				; CODE XREF: _ZNK16QDomDocumentType8entitiesEv+Cj
		mov	dword ptr [eax], 0
		retn	4
_ZNK16QDomDocumentType8entitiesEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 449. _ZNK16QDomDocumentType9notationsEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QDomDocumentType9notationsEv
_ZNK16QDomDocumentType9notationsEv proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED428D0
		mov	edx, [edx+3Ch]
		test	edx, edx
		mov	[eax], edx
		jz	short locret_6ED428CD
		lock inc dword ptr [edx]
		setnz	cl

locret_6ED428CD:			; CODE XREF: _ZNK16QDomDocumentType9notationsEv+15j
		retn	4
; ---------------------------------------------------------------------------

loc_6ED428D0:				; CODE XREF: _ZNK16QDomDocumentType9notationsEv+Cj
		mov	dword ptr [eax], 0
		retn	4
_ZNK16QDomDocumentType9notationsEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 447. _ZNK16QDomDocumentType8publicIdEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QDomDocumentType8publicIdEv
_ZNK16QDomDocumentType8publicIdEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED42900
		mov	edx, [edx+40h]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED42900:				; CODE XREF: _ZNK16QDomDocumentType8publicIdEv+Cj
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK16QDomDocumentType8publicIdEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 448. _ZNK16QDomDocumentType8systemIdEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QDomDocumentType8systemIdEv
_ZNK16QDomDocumentType8systemIdEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED42940
		mov	edx, [edx+44h]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED42940:				; CODE XREF: _ZNK16QDomDocumentType8systemIdEv+Cj
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK16QDomDocumentType8systemIdEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 444. _ZNK16QDomDocumentType14internalSubsetEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QDomDocumentType14internalSubsetEv
_ZNK16QDomDocumentType14internalSubsetEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED42980
		mov	edx, [edx+48h]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED42980:				; CODE XREF: _ZNK16QDomDocumentType14internalSubsetEv+Cj
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK16QDomDocumentType14internalSubsetEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 323. _ZN20QDomDocumentFragmentC2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN20QDomDocumentFragmentC2Ev
_ZN20QDomDocumentFragmentC2Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN20QDomDocumentFragmentC2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 320. _ZN20QDomDocumentFragmentC1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN20QDomDocumentFragmentC1Ev
_ZN20QDomDocumentFragmentC1Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN20QDomDocumentFragmentC1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 321. _ZN20QDomDocumentFragmentC2EP27QDomDocumentFragmentPrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN20QDomDocumentFragmentC2EP27QDomDocumentFragmentPrivate
_ZN20QDomDocumentFragmentC2EP27QDomDocumentFragmentPrivate proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED429D5
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED429D5:			; CODE XREF: _ZN20QDomDocumentFragmentC2EP27QDomDocumentFragmentPrivate+Cj
		rep retn
_ZN20QDomDocumentFragmentC2EP27QDomDocumentFragmentPrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 318. _ZN20QDomDocumentFragmentC1EP27QDomDocumentFragmentPrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN20QDomDocumentFragmentC1EP27QDomDocumentFragmentPrivate
_ZN20QDomDocumentFragmentC1EP27QDomDocumentFragmentPrivate proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED429F5
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED429F5:			; CODE XREF: _ZN20QDomDocumentFragmentC1EP27QDomDocumentFragmentPrivate+Cj
		rep retn
_ZN20QDomDocumentFragmentC1EP27QDomDocumentFragmentPrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 322. _ZN20QDomDocumentFragmentC2ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN20QDomDocumentFragmentC2ERKS_
_ZN20QDomDocumentFragmentC2ERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED42A17
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED42A17:			; CODE XREF: _ZN20QDomDocumentFragmentC2ERKS_+Ej
		rep retn
_ZN20QDomDocumentFragmentC2ERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 319. _ZN20QDomDocumentFragmentC1ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN20QDomDocumentFragmentC1ERKS_
_ZN20QDomDocumentFragmentC1ERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED42A37
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED42A37:			; CODE XREF: _ZN20QDomDocumentFragmentC1ERKS_+Ej
		rep retn
_ZN20QDomDocumentFragmentC1ERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 324. _ZN20QDomDocumentFragmentaSERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN20QDomDocumentFragmentaSERKS_
_ZN20QDomDocumentFragmentaSERKS_ proc near
		sub	esp, 0Ch
		add	esp, 0Ch
		jmp	_ZN8QDomNodeaSERKS_
_ZN20QDomDocumentFragmentaSERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		mov	eax, [eax+20h]
		mov	eax, [eax+8]
		retn
; ---------------------------------------------------------------------------
		align 10h
; Exported entry 243. _ZN17QDomCharacterDataC2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN17QDomCharacterDataC2Ev
_ZN17QDomCharacterDataC2Ev proc	near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN17QDomCharacterDataC2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 240. _ZN17QDomCharacterDataC1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN17QDomCharacterDataC1Ev
_ZN17QDomCharacterDataC1Ev proc	near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN17QDomCharacterDataC1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 242. _ZN17QDomCharacterDataC2ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN17QDomCharacterDataC2ERKS_
_ZN17QDomCharacterDataC2ERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED42A97
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED42A97:			; CODE XREF: _ZN17QDomCharacterDataC2ERKS_+Ej
		rep retn
_ZN17QDomCharacterDataC2ERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 239. _ZN17QDomCharacterDataC1ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN17QDomCharacterDataC1ERKS_
_ZN17QDomCharacterDataC1ERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED42AB7
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED42AB7:			; CODE XREF: _ZN17QDomCharacterDataC1ERKS_+Ej
		rep retn
_ZN17QDomCharacterDataC1ERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 241. _ZN17QDomCharacterDataC2EP24QDomCharacterDataPrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN17QDomCharacterDataC2EP24QDomCharacterDataPrivate
_ZN17QDomCharacterDataC2EP24QDomCharacterDataPrivate proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED42AD5
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED42AD5:			; CODE XREF: _ZN17QDomCharacterDataC2EP24QDomCharacterDataPrivate+Cj
		rep retn
_ZN17QDomCharacterDataC2EP24QDomCharacterDataPrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 238. _ZN17QDomCharacterDataC1EP24QDomCharacterDataPrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN17QDomCharacterDataC1EP24QDomCharacterDataPrivate
_ZN17QDomCharacterDataC1EP24QDomCharacterDataPrivate proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED42AF5
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED42AF5:			; CODE XREF: _ZN17QDomCharacterDataC1EP24QDomCharacterDataPrivate+Cj
		rep retn
_ZN17QDomCharacterDataC1EP24QDomCharacterDataPrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 244. _ZN17QDomCharacterDataaSERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN17QDomCharacterDataaSERKS_
_ZN17QDomCharacterDataaSERKS_ proc near
		sub	esp, 0Ch
		add	esp, 0Ch
		jmp	_ZN8QDomNodeaSERKS_
_ZN17QDomCharacterDataaSERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 502. _ZNK17QDomCharacterData4dataEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK17QDomCharacterData4dataEv
_ZNK17QDomCharacterData4dataEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED42B30
		mov	edx, [edx+20h]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED42B30:				; CODE XREF: _ZNK17QDomCharacterData4dataEv+Cj
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK17QDomCharacterData4dataEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 237. _ZN17QDomCharacterData7setDataERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN17QDomCharacterData7setDataERK7QString
_ZN17QDomCharacterData7setDataERK7QString proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED42B70
		mov	ecx, [eax]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, [ecx+8]
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_6ED42B70:				; CODE XREF: _ZN17QDomCharacterData7setDataERK7QString+Bj
		add	esp, 0Ch
		retn
_ZN17QDomCharacterData7setDataERK7QString endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 503. _ZNK17QDomCharacterData6lengthEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK17QDomCharacterData6lengthEv
_ZNK17QDomCharacterData6lengthEv proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	edx, [eax]
		xor	eax, eax
		test	edx, edx
		jz	short locret_6ED42B92
		mov	eax, [edx+20h]
		mov	eax, [eax+8]

locret_6ED42B92:			; CODE XREF: _ZNK17QDomCharacterData6lengthEv+Aj
		rep retn
_ZNK17QDomCharacterData6lengthEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 504. _ZNK17QDomCharacterData8nodeTypeEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK17QDomCharacterData8nodeTypeEv
_ZNK17QDomCharacterData8nodeTypeEv proc	near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	edx, [eax]
		test	edx, edx
		jz	short loc_6ED42BC0
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	_ZNK8QDomNode8nodeTypeEv
; ---------------------------------------------------------------------------
		align 10h

loc_6ED42BC0:				; CODE XREF: _ZNK17QDomCharacterData8nodeTypeEv+Bj
		mov	eax, 16h
		add	esp, 0Ch
		retn
_ZNK17QDomCharacterData8nodeTypeEv endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		movzx	eax, byte ptr [eax+38h]
		retn
; ---------------------------------------------------------------------------
		align 10h
; Exported entry 377. _ZN8QDomAttrC2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomAttrC2Ev
_ZN8QDomAttrC2Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN8QDomAttrC2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 374. _ZN8QDomAttrC1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomAttrC1Ev
_ZN8QDomAttrC1Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN8QDomAttrC1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 376. _ZN8QDomAttrC2ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomAttrC2ERKS_
_ZN8QDomAttrC2ERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED42C17
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED42C17:			; CODE XREF: _ZN8QDomAttrC2ERKS_+Ej
		rep retn
_ZN8QDomAttrC2ERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 373. _ZN8QDomAttrC1ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomAttrC1ERKS_
_ZN8QDomAttrC1ERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED42C37
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED42C37:			; CODE XREF: _ZN8QDomAttrC1ERKS_+Ej
		rep retn
_ZN8QDomAttrC1ERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 375. _ZN8QDomAttrC2EP15QDomAttrPrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomAttrC2EP15QDomAttrPrivate
_ZN8QDomAttrC2EP15QDomAttrPrivate proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED42C55
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED42C55:			; CODE XREF: _ZN8QDomAttrC2EP15QDomAttrPrivate+Cj
		rep retn
_ZN8QDomAttrC2EP15QDomAttrPrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 372. _ZN8QDomAttrC1EP15QDomAttrPrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomAttrC1EP15QDomAttrPrivate
_ZN8QDomAttrC1EP15QDomAttrPrivate proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED42C75
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED42C75:			; CODE XREF: _ZN8QDomAttrC1EP15QDomAttrPrivate+Cj
		rep retn
_ZN8QDomAttrC1EP15QDomAttrPrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 378. _ZN8QDomAttraSERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomAttraSERKS_
_ZN8QDomAttraSERKS_ proc near
		sub	esp, 0Ch
		add	esp, 0Ch
		jmp	_ZN8QDomNodeaSERKS_
_ZN8QDomAttraSERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 528. _ZNK8QDomAttr4nameEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomAttr4nameEv
_ZNK8QDomAttr4nameEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED42CB0
		mov	edx, [edx+1Ch]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED42CB0:				; CODE XREF: _ZNK8QDomAttr4nameEv+Cj
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK8QDomAttr4nameEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 530. _ZNK8QDomAttr9specifiedEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomAttr9specifiedEv
_ZNK8QDomAttr9specifiedEv proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	edx, [eax]
		xor	eax, eax
		test	edx, edx
		jz	short locret_6ED42CE0
		movzx	eax, byte ptr [edx+38h]

locret_6ED42CE0:			; CODE XREF: _ZNK8QDomAttr9specifiedEv+Aj
		rep retn
_ZNK8QDomAttr9specifiedEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 527. _ZNK8QDomAttr12ownerElementEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomAttr12ownerElementEv
_ZNK8QDomAttr12ownerElementEv proc near

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		xor	eax, eax
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	edx, [esi]
		test	byte ptr [edx+2Ch], 2
		jz	short loc_6ED42D10
		mov	eax, [edx+10h]

loc_6ED42D10:				; CODE XREF: _ZNK8QDomAttr12ownerElementEv+1Bj
		mov	edx, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+40h]
		test	al, al
		jz	short loc_6ED42D44
		mov	eax, [esi]
		test	byte ptr [eax+2Ch], 2
		jz	short loc_6ED42D44
		mov	eax, [eax+10h]
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED42D4A
		lock inc dword ptr [eax+4]
		setnz	dl
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
; ---------------------------------------------------------------------------

loc_6ED42D44:				; CODE XREF: _ZNK8QDomAttr12ownerElementEv+2Aj
					; _ZNK8QDomAttr12ownerElementEv+32j
		mov	dword ptr [ebx], 0

loc_6ED42D4A:				; CODE XREF: _ZNK8QDomAttr12ownerElementEv+3Bj
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
_ZNK8QDomAttr12ownerElementEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 529. _ZNK8QDomAttr5valueEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomAttr5valueEv
_ZNK8QDomAttr5valueEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED42D80
		mov	edx, [edx+20h]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED42D80:				; CODE XREF: _ZNK8QDomAttr5valueEv+Cj
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK8QDomAttr5valueEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 371. _ZN8QDomAttr8setValueERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomAttr8setValueERK7QString
_ZN8QDomAttr8setValueERK7QString proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_6ED42DC4
		mov	edx, [eax]
		mov	ecx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], eax
		mov	[esp+1Ch+var_18], ecx
		call	dword ptr [edx+8]
		mov	eax, [ebx]
		mov	byte ptr [eax+38h], 1

loc_6ED42DC4:				; CODE XREF: _ZN8QDomAttr8setValueERK7QString+Cj
		add	esp, 18h
		pop	ebx
		retn
_ZN8QDomAttr8setValueERK7QString endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  39. _ZN11QDomElementC2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN11QDomElementC2Ev
_ZN11QDomElementC2Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN11QDomElementC2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  36. _ZN11QDomElementC1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN11QDomElementC1Ev
_ZN11QDomElementC1Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN11QDomElementC1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  38. _ZN11QDomElementC2ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN11QDomElementC2ERKS_
_ZN11QDomElementC2ERKS_	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED42E07
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED42E07:			; CODE XREF: _ZN11QDomElementC2ERKS_+Ej
		rep retn
_ZN11QDomElementC2ERKS_	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  35. _ZN11QDomElementC1ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN11QDomElementC1ERKS_
_ZN11QDomElementC1ERKS_	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED42E27
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED42E27:			; CODE XREF: _ZN11QDomElementC1ERKS_+Ej
		rep retn
_ZN11QDomElementC1ERKS_	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  37. _ZN11QDomElementC2EP18QDomElementPrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN11QDomElementC2EP18QDomElementPrivate
_ZN11QDomElementC2EP18QDomElementPrivate proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED42E45
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED42E45:			; CODE XREF: _ZN11QDomElementC2EP18QDomElementPrivate+Cj
		rep retn
_ZN11QDomElementC2EP18QDomElementPrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  34. _ZN11QDomElementC1EP18QDomElementPrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN11QDomElementC1EP18QDomElementPrivate
_ZN11QDomElementC1EP18QDomElementPrivate proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED42E65
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED42E65:			; CODE XREF: _ZN11QDomElementC1EP18QDomElementPrivate+Cj
		rep retn
_ZN11QDomElementC1EP18QDomElementPrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  40. _ZN11QDomElementaSERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN11QDomElementaSERKS_
_ZN11QDomElementaSERKS_	proc near
		sub	esp, 0Ch
		add	esp, 0Ch
		jmp	_ZN8QDomNodeaSERKS_
_ZN11QDomElementaSERKS_	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 415. _ZNK11QDomElement7tagNameEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK11QDomElement7tagNameEv
_ZNK11QDomElement7tagNameEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED42EA0
		mov	edx, [edx+1Ch]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED42EA0:				; CODE XREF: _ZNK11QDomElement7tagNameEv+Cj
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK11QDomElement7tagNameEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 408. _ZNK11QDomElement10attributesEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK11QDomElement10attributesEv
_ZNK11QDomElement10attributesEv	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED42EE0
		mov	edx, [edx+38h]
		test	edx, edx
		mov	[eax], edx
		jz	short locret_6ED42EDD
		lock inc dword ptr [edx]
		setnz	cl

locret_6ED42EDD:			; CODE XREF: _ZNK11QDomElement10attributesEv+15j
		retn	4
; ---------------------------------------------------------------------------

loc_6ED42EE0:				; CODE XREF: _ZNK11QDomElement10attributesEv+Cj
		mov	dword ptr [eax], 0
		retn	4
_ZNK11QDomElement10attributesEv	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 403. _ZN8QDomTextC2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomTextC2Ev
_ZN8QDomTextC2Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN8QDomTextC2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 400. _ZN8QDomTextC1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomTextC1Ev
_ZN8QDomTextC1Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN8QDomTextC1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 402. _ZN8QDomTextC2ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomTextC2ERKS_
_ZN8QDomTextC2ERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED42F27
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED42F27:			; CODE XREF: _ZN8QDomTextC2ERKS_+Ej
		rep retn
_ZN8QDomTextC2ERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 399. _ZN8QDomTextC1ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomTextC1ERKS_
_ZN8QDomTextC1ERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED42F47
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED42F47:			; CODE XREF: _ZN8QDomTextC1ERKS_+Ej
		rep retn
_ZN8QDomTextC1ERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 401. _ZN8QDomTextC2EP15QDomTextPrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomTextC2EP15QDomTextPrivate
_ZN8QDomTextC2EP15QDomTextPrivate proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED42F65
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED42F65:			; CODE XREF: _ZN8QDomTextC2EP15QDomTextPrivate+Cj
		rep retn
_ZN8QDomTextC2EP15QDomTextPrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 398. _ZN8QDomTextC1EP15QDomTextPrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomTextC1EP15QDomTextPrivate
_ZN8QDomTextC1EP15QDomTextPrivate proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED42F85
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED42F85:			; CODE XREF: _ZN8QDomTextC1EP15QDomTextPrivate+Cj
		rep retn
_ZN8QDomTextC1EP15QDomTextPrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 404. _ZN8QDomTextaSERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomTextaSERKS_
_ZN8QDomTextaSERKS_ proc near
		sub	esp, 0Ch
		add	esp, 0Ch
		jmp	_ZN8QDomNodeaSERKS_
_ZN8QDomTextaSERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  15. _ZN11QDomCommentC2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN11QDomCommentC2Ev
_ZN11QDomCommentC2Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN11QDomCommentC2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  12. _ZN11QDomCommentC1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN11QDomCommentC1Ev
_ZN11QDomCommentC1Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN11QDomCommentC1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  14. _ZN11QDomCommentC2ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN11QDomCommentC2ERKS_
_ZN11QDomCommentC2ERKS_	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED42FD7
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED42FD7:			; CODE XREF: _ZN11QDomCommentC2ERKS_+Ej
		rep retn
_ZN11QDomCommentC2ERKS_	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  11. _ZN11QDomCommentC1ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN11QDomCommentC1ERKS_
_ZN11QDomCommentC1ERKS_	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED42FF7
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED42FF7:			; CODE XREF: _ZN11QDomCommentC1ERKS_+Ej
		rep retn
_ZN11QDomCommentC1ERKS_	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  13. _ZN11QDomCommentC2EP18QDomCommentPrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN11QDomCommentC2EP18QDomCommentPrivate
_ZN11QDomCommentC2EP18QDomCommentPrivate proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED43015
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED43015:			; CODE XREF: _ZN11QDomCommentC2EP18QDomCommentPrivate+Cj
		rep retn
_ZN11QDomCommentC2EP18QDomCommentPrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  10. _ZN11QDomCommentC1EP18QDomCommentPrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN11QDomCommentC1EP18QDomCommentPrivate
_ZN11QDomCommentC1EP18QDomCommentPrivate proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED43035
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED43035:			; CODE XREF: _ZN11QDomCommentC1EP18QDomCommentPrivate+Cj
		rep retn
_ZN11QDomCommentC1EP18QDomCommentPrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  16. _ZN11QDomCommentaSERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN11QDomCommentaSERKS_
_ZN11QDomCommentaSERKS_	proc near
		sub	esp, 0Ch
		add	esp, 0Ch
		jmp	_ZN8QDomNodeaSERKS_
_ZN11QDomCommentaSERKS_	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 125. _ZN16QDomCDATASectionC2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QDomCDATASectionC2Ev
_ZN16QDomCDATASectionC2Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN16QDomCDATASectionC2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 122. _ZN16QDomCDATASectionC1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QDomCDATASectionC1Ev
_ZN16QDomCDATASectionC1Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN16QDomCDATASectionC1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 124. _ZN16QDomCDATASectionC2ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QDomCDATASectionC2ERKS_
_ZN16QDomCDATASectionC2ERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED43087
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED43087:			; CODE XREF: _ZN16QDomCDATASectionC2ERKS_+Ej
		rep retn
_ZN16QDomCDATASectionC2ERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 121. _ZN16QDomCDATASectionC1ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QDomCDATASectionC1ERKS_
_ZN16QDomCDATASectionC1ERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED430A7
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED430A7:			; CODE XREF: _ZN16QDomCDATASectionC1ERKS_+Ej
		rep retn
_ZN16QDomCDATASectionC1ERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 123. _ZN16QDomCDATASectionC2EP23QDomCDATASectionPrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QDomCDATASectionC2EP23QDomCDATASectionPrivate
_ZN16QDomCDATASectionC2EP23QDomCDATASectionPrivate proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED430C5
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED430C5:			; CODE XREF: _ZN16QDomCDATASectionC2EP23QDomCDATASectionPrivate+Cj
		rep retn
_ZN16QDomCDATASectionC2EP23QDomCDATASectionPrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 120. _ZN16QDomCDATASectionC1EP23QDomCDATASectionPrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QDomCDATASectionC1EP23QDomCDATASectionPrivate
_ZN16QDomCDATASectionC1EP23QDomCDATASectionPrivate proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED430E5
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED430E5:			; CODE XREF: _ZN16QDomCDATASectionC1EP23QDomCDATASectionPrivate+Cj
		rep retn
_ZN16QDomCDATASectionC1EP23QDomCDATASectionPrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 126. _ZN16QDomCDATASectionaSERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QDomCDATASectionaSERKS_
_ZN16QDomCDATASectionaSERKS_ proc near
		sub	esp, 0Ch
		add	esp, 0Ch
		jmp	_ZN8QDomNodeaSERKS_
_ZN16QDomCDATASectionaSERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  94. _ZN12QDomNotationC2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QDomNotationC2Ev
_ZN12QDomNotationC2Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN12QDomNotationC2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  91. _ZN12QDomNotationC1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QDomNotationC1Ev
_ZN12QDomNotationC1Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN12QDomNotationC1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  93. _ZN12QDomNotationC2ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QDomNotationC2ERKS_
_ZN12QDomNotationC2ERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED43137
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED43137:			; CODE XREF: _ZN12QDomNotationC2ERKS_+Ej
		rep retn
_ZN12QDomNotationC2ERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  90. _ZN12QDomNotationC1ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QDomNotationC1ERKS_
_ZN12QDomNotationC1ERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED43157
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED43157:			; CODE XREF: _ZN12QDomNotationC1ERKS_+Ej
		rep retn
_ZN12QDomNotationC1ERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  92. _ZN12QDomNotationC2EP19QDomNotationPrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QDomNotationC2EP19QDomNotationPrivate
_ZN12QDomNotationC2EP19QDomNotationPrivate proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED43175
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED43175:			; CODE XREF: _ZN12QDomNotationC2EP19QDomNotationPrivate+Cj
		rep retn
_ZN12QDomNotationC2EP19QDomNotationPrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  89. _ZN12QDomNotationC1EP19QDomNotationPrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QDomNotationC1EP19QDomNotationPrivate
_ZN12QDomNotationC1EP19QDomNotationPrivate proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED43195
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED43195:			; CODE XREF: _ZN12QDomNotationC1EP19QDomNotationPrivate+Cj
		rep retn
_ZN12QDomNotationC1EP19QDomNotationPrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  95. _ZN12QDomNotationaSERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QDomNotationaSERKS_
_ZN12QDomNotationaSERKS_ proc near
		sub	esp, 0Ch
		add	esp, 0Ch
		jmp	_ZN8QDomNodeaSERKS_
_ZN12QDomNotationaSERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 427. _ZNK12QDomNotation8publicIdEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK12QDomNotation8publicIdEv
_ZNK12QDomNotation8publicIdEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED431D0
		mov	edx, [edx+3Ch]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED431D0:				; CODE XREF: _ZNK12QDomNotation8publicIdEv+Cj
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK12QDomNotation8publicIdEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 428. _ZNK12QDomNotation8systemIdEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK12QDomNotation8systemIdEv
_ZNK12QDomNotation8systemIdEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED43210
		mov	edx, [edx+38h]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED43210:				; CODE XREF: _ZNK12QDomNotation8systemIdEv+Cj
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK12QDomNotation8systemIdEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry   6. _ZN10QDomEntityC2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN10QDomEntityC2Ev
_ZN10QDomEntityC2Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN10QDomEntityC2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry   3. _ZN10QDomEntityC1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN10QDomEntityC1Ev
_ZN10QDomEntityC1Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN10QDomEntityC1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry   5. _ZN10QDomEntityC2ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN10QDomEntityC2ERKS_
_ZN10QDomEntityC2ERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED43267
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED43267:			; CODE XREF: _ZN10QDomEntityC2ERKS_+Ej
		rep retn
_ZN10QDomEntityC2ERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry   2. _ZN10QDomEntityC1ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN10QDomEntityC1ERKS_
_ZN10QDomEntityC1ERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED43287
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED43287:			; CODE XREF: _ZN10QDomEntityC1ERKS_+Ej
		rep retn
_ZN10QDomEntityC1ERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry   4. _ZN10QDomEntityC2EP17QDomEntityPrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN10QDomEntityC2EP17QDomEntityPrivate
_ZN10QDomEntityC2EP17QDomEntityPrivate proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED432A5
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED432A5:			; CODE XREF: _ZN10QDomEntityC2EP17QDomEntityPrivate+Cj
		rep retn
_ZN10QDomEntityC2EP17QDomEntityPrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry   1. _ZN10QDomEntityC1EP17QDomEntityPrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN10QDomEntityC1EP17QDomEntityPrivate
_ZN10QDomEntityC1EP17QDomEntityPrivate proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED432C5
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED432C5:			; CODE XREF: _ZN10QDomEntityC1EP17QDomEntityPrivate+Cj
		rep retn
_ZN10QDomEntityC1EP17QDomEntityPrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry   7. _ZN10QDomEntityaSERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN10QDomEntityaSERKS_
_ZN10QDomEntityaSERKS_ proc near
		sub	esp, 0Ch
		add	esp, 0Ch
		jmp	_ZN8QDomNodeaSERKS_
_ZN10QDomEntityaSERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 406. _ZNK10QDomEntity8publicIdEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK10QDomEntity8publicIdEv
_ZNK10QDomEntity8publicIdEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED43300
		mov	edx, [edx+3Ch]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED43300:				; CODE XREF: _ZNK10QDomEntity8publicIdEv+Cj
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK10QDomEntity8publicIdEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 407. _ZNK10QDomEntity8systemIdEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK10QDomEntity8systemIdEv
_ZNK10QDomEntity8systemIdEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED43340
		mov	edx, [edx+38h]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED43340:				; CODE XREF: _ZNK10QDomEntity8systemIdEv+Cj
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK10QDomEntity8systemIdEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 405. _ZNK10QDomEntity12notationNameEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK10QDomEntity12notationNameEv
_ZNK10QDomEntity12notationNameEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED43380
		mov	edx, [edx+40h]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED43380:				; CODE XREF: _ZNK10QDomEntity12notationNameEv+Cj
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK10QDomEntity12notationNameEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 305. _ZN19QDomEntityReferenceC2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN19QDomEntityReferenceC2Ev
_ZN19QDomEntityReferenceC2Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN19QDomEntityReferenceC2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 302. _ZN19QDomEntityReferenceC1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN19QDomEntityReferenceC1Ev
_ZN19QDomEntityReferenceC1Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN19QDomEntityReferenceC1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 304. _ZN19QDomEntityReferenceC2ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN19QDomEntityReferenceC2ERKS_
_ZN19QDomEntityReferenceC2ERKS_	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED433D7
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED433D7:			; CODE XREF: _ZN19QDomEntityReferenceC2ERKS_+Ej
		rep retn
_ZN19QDomEntityReferenceC2ERKS_	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 301. _ZN19QDomEntityReferenceC1ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN19QDomEntityReferenceC1ERKS_
_ZN19QDomEntityReferenceC1ERKS_	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED433F7
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED433F7:			; CODE XREF: _ZN19QDomEntityReferenceC1ERKS_+Ej
		rep retn
_ZN19QDomEntityReferenceC1ERKS_	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 303. _ZN19QDomEntityReferenceC2EP26QDomEntityReferencePrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN19QDomEntityReferenceC2EP26QDomEntityReferencePrivate
_ZN19QDomEntityReferenceC2EP26QDomEntityReferencePrivate proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED43415
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED43415:			; CODE XREF: _ZN19QDomEntityReferenceC2EP26QDomEntityReferencePrivate+Cj
		rep retn
_ZN19QDomEntityReferenceC2EP26QDomEntityReferencePrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 300. _ZN19QDomEntityReferenceC1EP26QDomEntityReferencePrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN19QDomEntityReferenceC1EP26QDomEntityReferencePrivate
_ZN19QDomEntityReferenceC1EP26QDomEntityReferencePrivate proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED43435
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED43435:			; CODE XREF: _ZN19QDomEntityReferenceC1EP26QDomEntityReferencePrivate+Cj
		rep retn
_ZN19QDomEntityReferenceC1EP26QDomEntityReferencePrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 306. _ZN19QDomEntityReferenceaSERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN19QDomEntityReferenceaSERKS_
_ZN19QDomEntityReferenceaSERKS_	proc near
		sub	esp, 0Ch
		add	esp, 0Ch
		jmp	_ZN8QDomNodeaSERKS_
_ZN19QDomEntityReferenceaSERKS_	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 346. _ZN25QDomProcessingInstructionC2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN25QDomProcessingInstructionC2Ev
_ZN25QDomProcessingInstructionC2Ev proc	near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN25QDomProcessingInstructionC2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 343. _ZN25QDomProcessingInstructionC1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN25QDomProcessingInstructionC1Ev
_ZN25QDomProcessingInstructionC1Ev proc	near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN25QDomProcessingInstructionC1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 345. _ZN25QDomProcessingInstructionC2ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN25QDomProcessingInstructionC2ERKS_
_ZN25QDomProcessingInstructionC2ERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED43487
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED43487:			; CODE XREF: _ZN25QDomProcessingInstructionC2ERKS_+Ej
		rep retn
_ZN25QDomProcessingInstructionC2ERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 342. _ZN25QDomProcessingInstructionC1ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN25QDomProcessingInstructionC1ERKS_
_ZN25QDomProcessingInstructionC1ERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED434A7
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED434A7:			; CODE XREF: _ZN25QDomProcessingInstructionC1ERKS_+Ej
		rep retn
_ZN25QDomProcessingInstructionC1ERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 344. _ZN25QDomProcessingInstructionC2EP32QDomProcessingInstructionPrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN25QDomProcessingInstructionC2EP32QDomProcessingInstructionPrivate
_ZN25QDomProcessingInstructionC2EP32QDomProcessingInstructionPrivate proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED434C5
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED434C5:			; CODE XREF: _ZN25QDomProcessingInstructionC2EP32QDomProcessingInstructionPrivate+Cj
		rep retn
_ZN25QDomProcessingInstructionC2EP32QDomProcessingInstructionPrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 341. _ZN25QDomProcessingInstructionC1EP32QDomProcessingInstructionPrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN25QDomProcessingInstructionC1EP32QDomProcessingInstructionPrivate
_ZN25QDomProcessingInstructionC1EP32QDomProcessingInstructionPrivate proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED434E5
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED434E5:			; CODE XREF: _ZN25QDomProcessingInstructionC1EP32QDomProcessingInstructionPrivate+Cj
		rep retn
_ZN25QDomProcessingInstructionC1EP32QDomProcessingInstructionPrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 347. _ZN25QDomProcessingInstructionaSERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN25QDomProcessingInstructionaSERKS_
_ZN25QDomProcessingInstructionaSERKS_ proc near
		sub	esp, 0Ch
		add	esp, 0Ch
		jmp	_ZN8QDomNodeaSERKS_
_ZN25QDomProcessingInstructionaSERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 526. _ZNK25QDomProcessingInstruction6targetEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK25QDomProcessingInstruction6targetEv
_ZNK25QDomProcessingInstruction6targetEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED43520
		mov	edx, [edx+1Ch]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED43520:				; CODE XREF: _ZNK25QDomProcessingInstruction6targetEv+Cj
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK25QDomProcessingInstruction6targetEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 525. _ZNK25QDomProcessingInstruction4dataEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK25QDomProcessingInstruction4dataEv
_ZNK25QDomProcessingInstruction4dataEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED43560
		mov	edx, [edx+20h]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED43560:				; CODE XREF: _ZNK25QDomProcessingInstruction4dataEv+Cj
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK25QDomProcessingInstruction4dataEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 340. _ZN25QDomProcessingInstruction7setDataERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN25QDomProcessingInstruction7setDataERK7QString
_ZN25QDomProcessingInstruction7setDataERK7QString proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED435A0
		mov	ecx, [eax]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, [ecx+8]
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_6ED435A0:				; CODE XREF: _ZN25QDomProcessingInstruction7setDataERK7QString+Bj
		add	esp, 0Ch
		retn
_ZN25QDomProcessingInstruction7setDataERK7QString endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED435B0	proc near		; CODE XREF: _ZNK12QDomDocument15documentElementEv+15p

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_0]
		mov	ebx, [eax+14h]
		test	ebx, ebx
		jz	short loc_6ED435CB

loc_6ED435BF:				; CODE XREF: sub_6ED435B0+27j
		mov	eax, [ebx]
		mov	[esp+1Ch+var_1C], ebx
		call	dword ptr [eax+40h]
		test	al, al
		jz	short loc_6ED435D2

loc_6ED435CB:				; CODE XREF: sub_6ED435B0+Dj
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_6ED435D2:				; CODE XREF: sub_6ED435B0+19j
		mov	ebx, [ebx+0Ch]
		test	ebx, ebx
		jnz	short loc_6ED435BF
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn
sub_6ED435B0	endp

; Exported entry  76. _ZN12QDomDocumentC2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QDomDocumentC2Ev
_ZN12QDomDocumentC2Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN12QDomDocumentC2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  71. _ZN12QDomDocumentC1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QDomDocumentC1Ev
_ZN12QDomDocumentC1Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		retn
_ZN12QDomDocumentC1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  75. _ZN12QDomDocumentC2ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QDomDocumentC2ERKS_
_ZN12QDomDocumentC2ERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED43617
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED43617:			; CODE XREF: _ZN12QDomDocumentC2ERKS_+Ej
		rep retn
_ZN12QDomDocumentC2ERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  70. _ZN12QDomDocumentC1ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QDomDocumentC1ERKS_
_ZN12QDomDocumentC1ERKS_ proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED43637
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED43637:			; CODE XREF: _ZN12QDomDocumentC1ERKS_+Ej
		rep retn
_ZN12QDomDocumentC1ERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  72. _ZN12QDomDocumentC2EP19QDomDocumentPrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QDomDocumentC2EP19QDomDocumentPrivate
_ZN12QDomDocumentC2EP19QDomDocumentPrivate proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED43655
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED43655:			; CODE XREF: _ZN12QDomDocumentC2EP19QDomDocumentPrivate+Cj
		rep retn
_ZN12QDomDocumentC2EP19QDomDocumentPrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  67. _ZN12QDomDocumentC1EP19QDomDocumentPrivate

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QDomDocumentC1EP19QDomDocumentPrivate
_ZN12QDomDocumentC1EP19QDomDocumentPrivate proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short locret_6ED43675
		lock inc dword ptr [eax+4]
		setnz	dl

locret_6ED43675:			; CODE XREF: _ZN12QDomDocumentC1EP19QDomDocumentPrivate+Cj
		rep retn
_ZN12QDomDocumentC1EP19QDomDocumentPrivate endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  79. _ZN12QDomDocumentaSERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QDomDocumentaSERKS_
_ZN12QDomDocumentaSERKS_ proc near
		sub	esp, 0Ch
		add	esp, 0Ch
		jmp	_ZN8QDomNodeaSERKS_
_ZN12QDomDocumentaSERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  78. _ZN12QDomDocumentD2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QDomDocumentD2Ev
_ZN12QDomDocumentD2Ev proc near
		sub	esp, 0Ch
		add	esp, 0Ch
		jmp	_ZN8QDomNodeD2Ev
_ZN12QDomDocumentD2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  77. _ZN12QDomDocumentD1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QDomDocumentD1Ev
_ZN12QDomDocumentD1Ev proc near
		sub	esp, 0Ch
		add	esp, 0Ch
		jmp	_ZN8QDomNodeD2Ev
_ZN12QDomDocumentD1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 421. _ZNK12QDomDocument7doctypeEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK12QDomDocument7doctypeEv
_ZNK12QDomDocument7doctypeEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED436D1
		mov	edx, [edx+3Ch]
		test	edx, edx
		mov	[eax], edx
		jz	short locret_6ED436CE
		lock inc dword ptr [edx+4]
		setnz	cl

locret_6ED436CE:			; CODE XREF: _ZNK12QDomDocument7doctypeEv+15j
		retn	4
; ---------------------------------------------------------------------------

loc_6ED436D1:				; CODE XREF: _ZNK12QDomDocument7doctypeEv+Cj
		mov	dword ptr [eax], 0
		retn	4
_ZNK12QDomDocument7doctypeEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 418. _ZNK12QDomDocument14implementationEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK12QDomDocument14implementationEv
_ZNK12QDomDocument14implementationEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		jz	short loc_6ED43700
		mov	edx, [edx+38h]
		test	edx, edx
		mov	[eax], edx
		jz	short locret_6ED436FD
		lock inc dword ptr [edx]
		setnz	cl

locret_6ED436FD:			; CODE XREF: _ZNK12QDomDocument14implementationEv+15j
		retn	4
; ---------------------------------------------------------------------------

loc_6ED43700:				; CODE XREF: _ZNK12QDomDocument14implementationEv+Cj
		mov	dword ptr [eax], 0
		retn	4
_ZNK12QDomDocument14implementationEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 419. _ZNK12QDomDocument15documentElementEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK12QDomDocument15documentElementEv
_ZNK12QDomDocument15documentElementEv proc near

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED43740
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED435B0
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED43737
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED43737:				; CODE XREF: _ZNK12QDomDocument15documentElementEv+1Ej
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
; ---------------------------------------------------------------------------

loc_6ED43740:				; CODE XREF: _ZNK12QDomDocument15documentElementEv+10j
		mov	dword ptr [ebx], 0
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
_ZNK12QDomDocument15documentElementEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 570. _ZNK8QDomNode6toAttrEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode6toAttrEv
_ZNK8QDomNode6toAttrEv proc near

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_6ED43794
		mov	edx, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+2Ch]
		test	al, al
		jz	short loc_6ED43794
		mov	eax, [esi]
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED4379A
		lock inc dword ptr [eax+4]
		setnz	dl
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
; ---------------------------------------------------------------------------

loc_6ED43794:				; CODE XREF: _ZNK8QDomNode6toAttrEv+17j
					; _ZNK8QDomNode6toAttrEv+23j
		mov	dword ptr [ebx], 0

loc_6ED4379A:				; CODE XREF: _ZNK8QDomNode6toAttrEv+2Bj
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
_ZNK8QDomNode6toAttrEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 549. _ZNK8QDomNode14toCDATASectionEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode14toCDATASectionEv
_ZNK8QDomNode14toCDATASectionEv	proc near

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_6ED437F4
		mov	edx, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+30h]
		test	al, al
		jz	short loc_6ED437F4
		mov	eax, [esi]
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED437FA
		lock inc dword ptr [eax+4]
		setnz	dl
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
; ---------------------------------------------------------------------------

loc_6ED437F4:				; CODE XREF: _ZNK8QDomNode14toCDATASectionEv+17j
					; _ZNK8QDomNode14toCDATASectionEv+23j
		mov	dword ptr [ebx], 0

loc_6ED437FA:				; CODE XREF: _ZNK8QDomNode14toCDATASectionEv+2Bj
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
_ZNK8QDomNode14toCDATASectionEv	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 560. _ZNK8QDomNode18toDocumentFragmentEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode18toDocumentFragmentEv
_ZNK8QDomNode18toDocumentFragmentEv proc near

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_6ED43854
		mov	edx, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+34h]
		test	al, al
		jz	short loc_6ED43854
		mov	eax, [esi]
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED4385A
		lock inc dword ptr [eax+4]
		setnz	dl
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
; ---------------------------------------------------------------------------

loc_6ED43854:				; CODE XREF: _ZNK8QDomNode18toDocumentFragmentEv+17j
					; _ZNK8QDomNode18toDocumentFragmentEv+23j
		mov	dword ptr [ebx], 0

loc_6ED4385A:				; CODE XREF: _ZNK8QDomNode18toDocumentFragmentEv+2Bj
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
_ZNK8QDomNode18toDocumentFragmentEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 538. _ZNK8QDomNode10toDocumentEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode10toDocumentEv
_ZNK8QDomNode10toDocumentEv proc near

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_6ED438B4
		mov	edx, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+38h]
		test	al, al
		jz	short loc_6ED438B4
		mov	eax, [esi]
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED438BA
		lock inc dword ptr [eax+4]
		setnz	dl
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
; ---------------------------------------------------------------------------

loc_6ED438B4:				; CODE XREF: _ZNK8QDomNode10toDocumentEv+17j
					; _ZNK8QDomNode10toDocumentEv+23j
		mov	dword ptr [ebx], 0

loc_6ED438BA:				; CODE XREF: _ZNK8QDomNode10toDocumentEv+2Bj
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
_ZNK8QDomNode10toDocumentEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 550. _ZNK8QDomNode14toDocumentTypeEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode14toDocumentTypeEv
_ZNK8QDomNode14toDocumentTypeEv	proc near

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_6ED43914
		mov	edx, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+3Ch]
		test	al, al
		jz	short loc_6ED43914
		mov	eax, [esi]
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED4391A
		lock inc dword ptr [eax+4]
		setnz	dl
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
; ---------------------------------------------------------------------------

loc_6ED43914:				; CODE XREF: _ZNK8QDomNode14toDocumentTypeEv+17j
					; _ZNK8QDomNode14toDocumentTypeEv+23j
		mov	dword ptr [ebx], 0

loc_6ED4391A:				; CODE XREF: _ZNK8QDomNode14toDocumentTypeEv+2Bj
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
_ZNK8QDomNode14toDocumentTypeEv	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 584. _ZNK8QDomNode9toElementEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode9toElementEv
_ZNK8QDomNode9toElementEv proc near	; CODE XREF: _ZNK8QDomNode22previousSiblingElementERK7QString+D5p
					; _ZNK8QDomNode18nextSiblingElementERK7QString+D5p ...

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_6ED43974
		mov	edx, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+40h]
		test	al, al
		jz	short loc_6ED43974
		mov	eax, [esi]
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED4397A
		lock inc dword ptr [eax+4]
		setnz	dl
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
; ---------------------------------------------------------------------------

loc_6ED43974:				; CODE XREF: _ZNK8QDomNode9toElementEv+17j
					; _ZNK8QDomNode9toElementEv+23j
		mov	dword ptr [ebx], 0

loc_6ED4397A:				; CODE XREF: _ZNK8QDomNode9toElementEv+2Bj
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
_ZNK8QDomNode9toElementEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 557. _ZNK8QDomNode17toEntityReferenceEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode17toEntityReferenceEv
_ZNK8QDomNode17toEntityReferenceEv proc	near

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_6ED439D4
		mov	edx, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+44h]
		test	al, al
		jz	short loc_6ED439D4
		mov	eax, [esi]
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED439DA
		lock inc dword ptr [eax+4]
		setnz	dl
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
; ---------------------------------------------------------------------------

loc_6ED439D4:				; CODE XREF: _ZNK8QDomNode17toEntityReferenceEv+17j
					; _ZNK8QDomNode17toEntityReferenceEv+23j
		mov	dword ptr [ebx], 0

loc_6ED439DA:				; CODE XREF: _ZNK8QDomNode17toEntityReferenceEv+2Bj
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
_ZNK8QDomNode17toEntityReferenceEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 571. _ZNK8QDomNode6toTextEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode6toTextEv
_ZNK8QDomNode6toTextEv proc near

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_6ED43A34
		mov	edx, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+48h]
		test	al, al
		jz	short loc_6ED43A34
		mov	eax, [esi]
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED43A3A
		lock inc dword ptr [eax+4]
		setnz	dl
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
; ---------------------------------------------------------------------------

loc_6ED43A34:				; CODE XREF: _ZNK8QDomNode6toTextEv+17j
					; _ZNK8QDomNode6toTextEv+23j
		mov	dword ptr [ebx], 0

loc_6ED43A3A:				; CODE XREF: _ZNK8QDomNode6toTextEv+2Bj
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
_ZNK8QDomNode6toTextEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 575. _ZNK8QDomNode8toEntityEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode8toEntityEv
_ZNK8QDomNode8toEntityEv proc near

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_6ED43A94
		mov	edx, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+4Ch]
		test	al, al
		jz	short loc_6ED43A94
		mov	eax, [esi]
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED43A9A
		lock inc dword ptr [eax+4]
		setnz	dl
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
; ---------------------------------------------------------------------------

loc_6ED43A94:				; CODE XREF: _ZNK8QDomNode8toEntityEv+17j
					; _ZNK8QDomNode8toEntityEv+23j
		mov	dword ptr [ebx], 0

loc_6ED43A9A:				; CODE XREF: _ZNK8QDomNode8toEntityEv+2Bj
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
_ZNK8QDomNode8toEntityEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 539. _ZNK8QDomNode10toNotationEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode10toNotationEv
_ZNK8QDomNode10toNotationEv proc near

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_6ED43AF4
		mov	edx, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+50h]
		test	al, al
		jz	short loc_6ED43AF4
		mov	eax, [esi]
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED43AFA
		lock inc dword ptr [eax+4]
		setnz	dl
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
; ---------------------------------------------------------------------------

loc_6ED43AF4:				; CODE XREF: _ZNK8QDomNode10toNotationEv+17j
					; _ZNK8QDomNode10toNotationEv+23j
		mov	dword ptr [ebx], 0

loc_6ED43AFA:				; CODE XREF: _ZNK8QDomNode10toNotationEv+2Bj
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
_ZNK8QDomNode10toNotationEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 563. _ZNK8QDomNode23toProcessingInstructionEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode23toProcessingInstructionEv
_ZNK8QDomNode23toProcessingInstructionEv proc near

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_6ED43B54
		mov	edx, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+54h]
		test	al, al
		jz	short loc_6ED43B54
		mov	eax, [esi]
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED43B5A
		lock inc dword ptr [eax+4]
		setnz	dl
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
; ---------------------------------------------------------------------------

loc_6ED43B54:				; CODE XREF: _ZNK8QDomNode23toProcessingInstructionEv+17j
					; _ZNK8QDomNode23toProcessingInstructionEv+23j
		mov	dword ptr [ebx], 0

loc_6ED43B5A:				; CODE XREF: _ZNK8QDomNode23toProcessingInstructionEv+2Bj
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
_ZNK8QDomNode23toProcessingInstructionEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 553. _ZNK8QDomNode15toCharacterDataEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode15toCharacterDataEv
_ZNK8QDomNode15toCharacterDataEv proc near

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_6ED43BB4
		mov	edx, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+58h]
		test	al, al
		jz	short loc_6ED43BB4
		mov	eax, [esi]
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED43BBA
		lock inc dword ptr [eax+4]
		setnz	dl
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
; ---------------------------------------------------------------------------

loc_6ED43BB4:				; CODE XREF: _ZNK8QDomNode15toCharacterDataEv+17j
					; _ZNK8QDomNode15toCharacterDataEv+23j
		mov	dword ptr [ebx], 0

loc_6ED43BBA:				; CODE XREF: _ZNK8QDomNode15toCharacterDataEv+2Bj
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
_ZNK8QDomNode15toCharacterDataEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 583. _ZNK8QDomNode9toCommentEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode9toCommentEv
_ZNK8QDomNode9toCommentEv proc near

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_6ED43C14
		mov	edx, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+5Ch]
		test	al, al
		jz	short loc_6ED43C14
		mov	eax, [esi]
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED43C1A
		lock inc dword ptr [eax+4]
		setnz	dl
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
; ---------------------------------------------------------------------------

loc_6ED43C14:				; CODE XREF: _ZNK8QDomNode9toCommentEv+17j
					; _ZNK8QDomNode9toCommentEv+23j
		mov	dword ptr [ebx], 0

loc_6ED43C1A:				; CODE XREF: _ZNK8QDomNode9toCommentEv+2Bj
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
_ZNK8QDomNode9toCommentEv endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	eax, [esp+10h]
		mov	[esp], ebx
		mov	ebx, [esp+18h]
		mov	[esp+8], edi
		mov	edi, [esp+14h]
		mov	[esp+4], esi
		mov	dword ptr [eax], offset	off_6EDA6C28
		mov	dword ptr [eax+4], offset off_6EDA6CA8
		mov	dword ptr [eax+8], offset off_6EDA6CC8
		mov	dword ptr [eax+0Ch], offset off_6EDA6CE4
		mov	dword ptr [eax+10h], offset off_6EDA6CFC
		mov	dword ptr [eax+14h], offset off_6EDA6D2C
		mov	[eax+1Ch], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	dword ptr [eax+20h], 0
		mov	dword ptr [eax+24h], 0
		mov	[eax+28h], edi
		mov	[eax+2Ch], edi
		mov	[eax+30h], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	byte ptr [eax+34h], 0
		mov	[eax+35h], bl
		mov	dword ptr [eax+38h], 0
		mov	ebx, [esp]
		mov	esi, [esp+4]
		mov	edi, [esp+8]
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED43CC0	proc near		; CODE XREF: sub_6ED508B0+1D5p

var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 0Ch
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	eax, [esp+0Ch+arg_0]
		mov	[esp+0Ch+var_C], ebx
		mov	ebx, [esp+0Ch+arg_8]
		mov	[esp+0Ch+var_4], edi
		mov	edi, [esp+0Ch+arg_4]
		mov	[esp+0Ch+var_8], esi
		mov	dword ptr [eax], offset	off_6EDA6C28
		mov	dword ptr [eax+4], offset off_6EDA6CA8
		mov	dword ptr [eax+8], offset off_6EDA6CC8
		mov	dword ptr [eax+0Ch], offset off_6EDA6CE4
		mov	dword ptr [eax+10h], offset off_6EDA6CFC
		mov	dword ptr [eax+14h], offset off_6EDA6D2C
		mov	[eax+1Ch], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	dword ptr [eax+20h], 0
		mov	dword ptr [eax+24h], 0
		mov	[eax+28h], edi
		mov	[eax+2Ch], edi
		mov	[eax+30h], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	byte ptr [eax+34h], 0
		mov	[eax+35h], bl
		mov	dword ptr [eax+38h], 0
		mov	ebx, [esp+0Ch+var_C]
		mov	esi, [esp+0Ch+var_8]
		mov	edi, [esp+0Ch+var_4]
		add	esp, 0Ch
		retn
sub_6ED43CC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED43D50	proc near		; DATA XREF: .rdata:6EDA6C38o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	edx, [eax+2Ch]
		cmp	edx, [eax+28h]
		setz	al
		retn
sub_6ED43D50	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED43D60	proc near		; DATA XREF: .rdata:6EDA6C48o

arg_0		= dword	ptr  4

		mov	edx, [esp+arg_0]
		mov	eax, [edx+2Ch]
		test	eax, eax
		jz	short loc_6ED43D90
		cmp	eax, [edx+28h]
		jz	short loc_6ED43D90
		xor	ecx, ecx
		test	byte ptr [eax+2Ch], 2
		jnz	short loc_6ED43D81
		mov	[edx+2Ch], ecx
		mov	eax, 1
		retn
; ---------------------------------------------------------------------------

loc_6ED43D81:				; CODE XREF: sub_6ED43D60+16j
		mov	ecx, [eax+10h]
		mov	eax, 1
		mov	[edx+2Ch], ecx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED43D90:				; CODE XREF: sub_6ED43D60+9j
					; sub_6ED43D60+Ej
		xor	eax, eax
		retn
sub_6ED43D60	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED43DA0	proc near		; DATA XREF: .rdata:6EDA6D14o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF0h
		jmp	short sub_6ED43DB0
sub_6ED43DA0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED43DB0	proc near		; CODE XREF: sub_6ED43DA0+5j
					; DATA XREF: .rdata:6EDA6C88o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	byte ptr [eax+34h], 1
		mov	eax, 1
		retn
sub_6ED43DB0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED43DC0	proc near		; DATA XREF: .rdata:6EDA6D18o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF0h
		jmp	short sub_6ED43DD0
sub_6ED43DC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED43DD0	proc near		; CODE XREF: sub_6ED43DC0+5j
					; DATA XREF: .rdata:6EDA6C8Co

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	byte ptr [eax+34h], 0
		mov	eax, 1
		retn
sub_6ED43DD0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED43DE0	proc near		; DATA XREF: .rdata:6EDA6C30o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	[eax+38h], edx
		retn
sub_6ED43DE0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED43DF0	proc near		; DATA XREF: .rdata:6EDA73D0o

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [ebx+38h]
		test	eax, eax
		jz	short loc_6ED43E09
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED43E45

loc_6ED43E09:				; CODE XREF: sub_6ED43DF0+Dj
					; sub_6ED43DF0+60j
		mov	eax, [ebx+3Ch]
		mov	dword ptr [ebx+38h], 0
		test	eax, eax
		jz	short loc_6ED43E31
		lock dec dword ptr [eax+4]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED43E31
		mov	eax, [ebx+3Ch]
		test	eax, eax
		jz	short loc_6ED43E31
		mov	edx, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+4]

loc_6ED43E31:				; CODE XREF: sub_6ED43DF0+25j
					; sub_6ED43DF0+30j ...
		mov	dword ptr [ebx+3Ch], 0
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_6ED41820
; ---------------------------------------------------------------------------

loc_6ED43E45:				; CODE XREF: sub_6ED43DF0+17j
		mov	eax, [ebx+38h]
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED988B0
		jmp	short loc_6ED43E09
sub_6ED43DF0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 256. _ZN18QDomImplementationD1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QDomImplementationD1Ev
_ZN18QDomImplementationD1Ev proc near	; CODE XREF: _ZNK8QDomNode11isSupportedERK7QStringS2_+5Fp
					; sub_6ED45775+Fp

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	edx, [esp+0Ch+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED43E85
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_6ED43E85
		mov	eax, [edx]
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	sub_6ED988B0
; ---------------------------------------------------------------------------

loc_6ED43E85:				; CODE XREF: _ZN18QDomImplementationD1Ev+Bj
					; _ZN18QDomImplementationD1Ev+15j
		add	esp, 0Ch
		retn
_ZN18QDomImplementationD1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 257. _ZN18QDomImplementationD2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QDomImplementationD2Ev
_ZN18QDomImplementationD2Ev proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	edx, [esp+0Ch+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED43EB5
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_6ED43EB5
		mov	eax, [edx]
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	sub_6ED988B0
; ---------------------------------------------------------------------------

loc_6ED43EB5:				; CODE XREF: _ZN18QDomImplementationD2Ev+Bj
					; _ZN18QDomImplementationD2Ev+15j
		add	esp, 0Ch
		retn
_ZN18QDomImplementationD2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 258. _ZN18QDomImplementationaSERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QDomImplementationaSERKS_
_ZN18QDomImplementationaSERKS_ proc near

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	edx, [esi]
		test	edx, edx
		jz	short loc_6ED43EDF
		lock inc dword ptr [edx]
		setnz	al

loc_6ED43EDF:				; CODE XREF: _ZN18QDomImplementationaSERKS_+17j
		mov	edx, [ebx]
		test	edx, edx
		jz	short loc_6ED43EF9
		lock dec dword ptr [edx]
		setnz	al
		test	al, al
		jnz	short loc_6ED43EF9
		mov	eax, [ebx]
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED988B0

loc_6ED43EF9:				; CODE XREF: _ZN18QDomImplementationaSERKS_+23j
					; _ZN18QDomImplementationaSERKS_+2Dj
		mov	eax, [esi]
		mov	[ebx], eax
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn
_ZN18QDomImplementationaSERKS_ endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED43F10	proc near		; DATA XREF: .rdata:6EDA6D0Co

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF0h
		jmp	short sub_6ED43F20
sub_6ED43F10	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED43F20	proc near		; CODE XREF: sub_6ED43F10+5j
					; DATA XREF: .rdata:6EDA6C80o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [esp+1Ch+arg_0]
		add	eax, 30h
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, 1
		add	esp, 1Ch
		retn
sub_6ED43F20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED43F50	proc near		; DATA XREF: .rdata:6EDA6D04o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF0h
		jmp	short sub_6ED43F60
sub_6ED43F50	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED43F60	proc near		; CODE XREF: sub_6ED43F50+5j
					; DATA XREF: .rdata:6EDA6C78o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	esi
		push	ebx
		sub	esp, 14h
		mov	ebx, ds:_ZN7QStringaSERKS_
		mov	esi, [esp+1Ch+arg_0]
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [esi+28h]
		mov	eax, [eax+3Ch]
		add	eax, 1Ch
		mov	[esp+1Ch+var_1C], eax
		call	ebx ; _ZN7QStringaSERKS_
		mov	eax, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [esi+28h]
		mov	eax, [eax+3Ch]
		add	eax, 40h
		mov	[esp+1Ch+var_1C], eax
		call	ebx ; _ZN7QStringaSERKS_
		mov	eax, [esp+1Ch+arg_C]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [esi+28h]
		mov	eax, [eax+3Ch]
		add	eax, 44h
		mov	[esp+1Ch+var_1C], eax
		call	ebx ; _ZN7QStringaSERKS_
		add	esp, 14h
		mov	eax, 1
		pop	ebx
		pop	esi
		retn
sub_6ED43F60	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  17. _ZN11QDomElement10setTagNameERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN11QDomElement10setTagNameERK7QString
_ZN11QDomElement10setTagNameERK7QString	proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED43FE0
		add	eax, 1Ch
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_ZN7QStringaSERKS_
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_6ED43FE0:				; CODE XREF: _ZN11QDomElement10setTagNameERK7QString+Bj
		add	esp, 0Ch
		retn
_ZN11QDomElement10setTagNameERK7QString	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 387. _ZN8QDomNode9setPrefixERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomNode9setPrefixERK7QString
_ZN8QDomNode9setPrefixERK7QString proc near

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_6ED44050
		mov	edx, ds:_ZN7QString11shared_nullE
		cmp	[eax+24h], edx
		jz	short loc_6ED44050
		mov	[esp+1Ch+var_1C], ebx
		call	_ZNK8QDomNode6isAttrEv
		test	al, al
		jz	short loc_6ED44040

loc_6ED44020:				; CODE XREF: _ZN8QDomNode9setPrefixERK7QString+5Aj
		mov	[esp+1Ch+arg_4], esi
		mov	eax, [ebx]
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	eax, 24h
		mov	[esp+1Ch+arg_0], eax
		mov	eax, ds:_ZN7QStringaSERKS_
		add	esp, 1Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_6ED44040:				; CODE XREF: _ZN8QDomNode9setPrefixERK7QString+2Ej
		mov	[esp+1Ch+var_1C], ebx
		call	_ZNK8QDomNode9isElementEv
		test	al, al
		jnz	short loc_6ED44020
		lea	esi, [esi+0]

loc_6ED44050:				; CODE XREF: _ZN8QDomNode9setPrefixERK7QString+17j
					; _ZN8QDomNode9setPrefixERK7QString+22j
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
_ZN8QDomNode9setPrefixERK7QString endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED44060	proc near		; CODE XREF: sub_6ED45520+68p

var_41		= byte ptr -41h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= byte ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		movzx	eax, [ebp+arg_8]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED99DEC
		mov	[ebp+var_1C], edx
		mov	[ebp+var_41], al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_18], offset sub_6ED441F5
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	ecx, [ebp+arg_0]
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	dword ptr [ecx+4], 0
		mov	dword ptr [ecx], offset	off_6EDA6E48
		mov	[ecx+1Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ecx+20h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ecx+24h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ecx+28h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	dword ptr [ecx+4], 1
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	sub_6ED41890
		mov	edx, [ebp+arg_0]
		and	byte ptr [edx+2Ch], 0FDh
		mov	[edx+10h], eax
		mov	eax, [ebp+arg_4]
		mov	dword ptr [edx+8], 0
		mov	dword ptr [edx+0Ch], 0
		mov	dword ptr [edx+14h], 0
		add	eax, 1Ch
		mov	dword ptr [edx+18h], 0
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 1Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+arg_4]
		add	eax, 20h
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 20h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+arg_4]
		add	eax, 24h
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 24h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+arg_4]
		add	eax, 28h
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 28h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	ecx, [ebp+arg_4]
		movzx	edx, byte ptr [ecx+2Ch]
		mov	ecx, [ebp+arg_0]
		and	edx, 1
		movzx	eax, byte ptr [ecx+2Ch]
		mov	dword ptr [ecx+30h], 0FFFFFFFFh
		mov	dword ptr [ecx+34h], 0FFFFFFFFh
		and	eax, 0FFFFFFFEh
		or	eax, edx
		mov	[ecx+2Ch], al
		cmp	[ebp+var_41], 0
		jz	short loc_6ED441E8
		mov	eax, [ebp+arg_4]
		mov	eax, [eax+14h]
		test	eax, eax
		mov	[ebp+var_40], eax
		jz	short loc_6ED441E8
		nop
		lea	esi, [esi+0]

loc_6ED441B0:				; CODE XREF: sub_6ED44060+186j
		mov	edx, [ebp+var_40]
		mov	eax, [edx]
		mov	dword ptr [esp+4], 1
		mov	[esp], edx
		mov	eax, [eax+20h]
		mov	[ebp+var_38], 1
		call	eax
		mov	ecx, [ebp+arg_0]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	sub_6ED41860
		mov	eax, [ebp+var_40]
		mov	eax, [eax+0Ch]
		test	eax, eax
		mov	[ebp+var_40], eax
		jnz	short loc_6ED441B0

loc_6ED441E8:				; CODE XREF: sub_6ED44060+13Cj
					; sub_6ED44060+149j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED44060	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED441F5	proc near		; DATA XREF: sub_6ED44060+27o
		add	ebp, 8
		mov	eax, [ebp+8]
		mov	edx, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 28h
		mov	[ebp-48h], edx
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 24h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 20h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 1Ch
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	ecx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
sub_6ED441F5	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED44270	proc near		; CODE XREF: sub_6ED44480+1Cp
					; .text:6ED444CCp ...

var_41		= byte ptr -41h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= byte ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		movzx	eax, [ebp+arg_8]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED99DF2
		mov	[ebp+var_1C], edx
		mov	[ebp+var_41], al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_18], offset sub_6ED44405
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	ecx, [ebp+arg_0]
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	dword ptr [ecx+4], 0
		mov	dword ptr [ecx], offset	off_6EDA6E48
		mov	[ecx+1Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ecx+20h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ecx+24h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ecx+28h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	dword ptr [ecx+4], 1
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	sub_6ED41890
		mov	edx, [ebp+arg_0]
		and	byte ptr [edx+2Ch], 0FDh
		mov	[edx+10h], eax
		mov	eax, [ebp+arg_4]
		mov	dword ptr [edx+8], 0
		mov	dword ptr [edx+0Ch], 0
		mov	dword ptr [edx+14h], 0
		add	eax, 1Ch
		mov	dword ptr [edx+18h], 0
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 1Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+arg_4]
		add	eax, 20h
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 20h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+arg_4]
		add	eax, 24h
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 24h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+arg_4]
		add	eax, 28h
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 28h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	ecx, [ebp+arg_4]
		movzx	edx, byte ptr [ecx+2Ch]
		mov	ecx, [ebp+arg_0]
		and	edx, 1
		movzx	eax, byte ptr [ecx+2Ch]
		mov	dword ptr [ecx+30h], 0FFFFFFFFh
		mov	dword ptr [ecx+34h], 0FFFFFFFFh
		and	eax, 0FFFFFFFEh
		or	eax, edx
		mov	[ecx+2Ch], al
		cmp	[ebp+var_41], 0
		jz	short loc_6ED443F8
		mov	eax, [ebp+arg_4]
		mov	eax, [eax+14h]
		test	eax, eax
		mov	[ebp+var_40], eax
		jz	short loc_6ED443F8
		nop
		lea	esi, [esi+0]

loc_6ED443C0:				; CODE XREF: sub_6ED44270+186j
		mov	edx, [ebp+var_40]
		mov	eax, [edx]
		mov	dword ptr [esp+4], 1
		mov	[esp], edx
		mov	eax, [eax+20h]
		mov	[ebp+var_38], 1
		call	eax
		mov	ecx, [ebp+arg_0]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	sub_6ED41860
		mov	eax, [ebp+var_40]
		mov	eax, [eax+0Ch]
		test	eax, eax
		mov	[ebp+var_40], eax
		jnz	short loc_6ED443C0

loc_6ED443F8:				; CODE XREF: sub_6ED44270+13Cj
					; sub_6ED44270+149j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED44270	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED44405	proc near		; DATA XREF: sub_6ED44270+27o
		add	ebp, 8
		mov	eax, [ebp+8]
		mov	edx, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 28h
		mov	[ebp-48h], edx
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 24h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 20h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 1Ch
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	ecx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
sub_6ED44405	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED44480	proc near		; CODE XREF: sub_6ED44DA0+68p
					; sub_6ED4B0D0+29Ap

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= byte ptr  0Ch

		push	ebx
		sub	esp, 18h
		movzx	eax, [esp+1Ch+arg_8]
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_14], eax
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED44270
		mov	dword ptr [ebx], offset	off_6EDA7768
		add	esp, 18h
		pop	ebx
		retn
sub_6ED44480	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		sub	esp, 18h
		movzx	eax, byte ptr [esp+28h]
		mov	ebx, [esp+20h]
		mov	[esp+8], eax
		mov	eax, [esp+24h]
		mov	[esp], ebx
		mov	[esp+4], eax
		call	sub_6ED44270
		mov	dword ptr [ebx], offset	off_6EDA7768
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED444E0	proc near		; CODE XREF: sub_6ED44E50+68p
					; sub_6ED4B0D0+216p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= byte ptr  0Ch

		push	ebx
		sub	esp, 18h
		movzx	eax, [esp+1Ch+arg_8]
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_14], eax
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED44270
		mov	dword ptr [ebx], offset	off_6EDA7668
		add	esp, 18h
		pop	ebx
		retn
sub_6ED444E0	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		sub	esp, 18h
		movzx	eax, byte ptr [esp+28h]
		mov	ebx, [esp+20h]
		mov	[esp+8], eax
		mov	eax, [esp+24h]
		mov	[esp], ebx
		mov	[esp+4], eax
		call	sub_6ED44270
		mov	dword ptr [ebx], offset	off_6EDA7668
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED44540	proc near		; CODE XREF: sub_6ED45270+68p
					; sub_6ED4B0D0+14Ap

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= byte ptr  0Ch

		sub	esp, 1Ch
		movzx	eax, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_14], eax
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], esi
		call	sub_6ED44270
		movzx	eax, byte ptr [esi+38h]
		mov	dword ptr [ebx], offset	off_6EDA6DC8
		mov	[ebx+38h], al
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_6ED44540	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 1Ch
		movzx	eax, byte ptr [esp+28h]
		mov	[esp+14h], ebx
		mov	ebx, [esp+20h]
		mov	[esp+18h], esi
		mov	esi, [esp+24h]
		mov	[esp+8], eax
		mov	[esp], ebx
		mov	[esp+4], esi
		call	sub_6ED44270
		movzx	eax, byte ptr [esi+38h]
		mov	dword ptr [ebx], offset	off_6EDA6DC8
		mov	[ebx+38h], al
		mov	ebx, [esp+14h]
		mov	esi, [esp+18h]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED445E0	proc near		; CODE XREF: sub_6ED45320+68p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= byte ptr  0Ch

		push	ebx
		sub	esp, 18h
		movzx	eax, [esp+1Ch+arg_8]
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_14], eax
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED44270
		mov	dword ptr [ebx], offset	off_6EDA75C8
		add	esp, 18h
		pop	ebx
		retn
sub_6ED445E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED44610	proc near		; CODE XREF: sub_6ED44640+1Cp
					; .text:6ED4468Cp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= byte ptr  0Ch

		push	ebx
		sub	esp, 18h
		movzx	eax, [esp+1Ch+arg_8]
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_14], eax
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED44270
		mov	dword ptr [ebx], offset	off_6EDA75C8
		add	esp, 18h
		pop	ebx
		retn
sub_6ED44610	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED44640	proc near		; CODE XREF: sub_6ED44FB0+68p
					; sub_6ED4B0D0+2E2p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= byte ptr  0Ch

		push	ebx
		sub	esp, 18h
		movzx	eax, [esp+1Ch+arg_8]
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_14], eax
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED44610
		mov	dword ptr [ebx], offset	off_6EDA70C8
		add	esp, 18h
		pop	ebx
		retn
sub_6ED44640	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		sub	esp, 18h
		movzx	eax, byte ptr [esp+28h]
		mov	ebx, [esp+20h]
		mov	[esp+8], eax
		mov	eax, [esp+24h]
		mov	[esp], ebx
		mov	[esp+4], eax
		call	sub_6ED44610
		mov	dword ptr [ebx], offset	off_6EDA70C8
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED446A0	proc near		; CODE XREF: sub_6ED45060+68p
					; sub_6ED4B0D0+192p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= byte ptr  0Ch

		push	ebx
		sub	esp, 18h
		movzx	eax, [esp+1Ch+arg_8]
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_14], eax
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED44610
		mov	dword ptr [ebx], offset	off_6EDA6EC8
		add	esp, 18h
		pop	ebx
		retn
sub_6ED446A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED446D0	proc near		; CODE XREF: sub_6ED44700+1Cp
					; .text:6ED4474Cp

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= byte ptr  0Ch

		push	ebx
		sub	esp, 18h
		movzx	eax, [esp+1Ch+arg_8]
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_14], eax
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED44610
		mov	dword ptr [ebx], offset	off_6EDA6EC8
		add	esp, 18h
		pop	ebx
		retn
sub_6ED446D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED44700	proc near		; CODE XREF: sub_6ED44F00+68p
					; sub_6ED4B0D0+1D4p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= byte ptr  0Ch

		push	ebx
		sub	esp, 18h
		movzx	eax, [esp+1Ch+arg_8]
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_14], eax
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED446D0
		mov	dword ptr [ebx], offset	off_6EDA74A8
		add	esp, 18h
		pop	ebx
		retn
sub_6ED44700	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		sub	esp, 18h
		movzx	eax, byte ptr [esp+28h]
		mov	ebx, [esp+20h]
		mov	[esp+8], eax
		mov	eax, [esp+24h]
		mov	[esp], ebx
		mov	[esp+4], eax
		call	sub_6ED446D0
		mov	dword ptr [ebx], offset	off_6EDA74A8
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED44760	proc near		; CODE XREF: sub_6ED453D0+68p
					; sub_6ED4B0D0+324p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= byte ptr  0Ch

		push	ebx
		sub	esp, 18h
		movzx	eax, [esp+1Ch+arg_8]
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_14], eax
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED44270
		mov	dword ptr [ebx], offset	off_6EDA76E8
		add	esp, 18h
		pop	ebx
		retn
sub_6ED44760	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		sub	esp, 18h
		movzx	eax, byte ptr [esp+28h]
		mov	ebx, [esp+20h]
		mov	[esp+8], eax
		mov	eax, [esp+24h]
		mov	[esp], ebx
		mov	[esp+4], eax
		call	sub_6ED44270
		mov	dword ptr [ebx], offset	off_6EDA76E8
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED447C0	proc near		; CODE XREF: _ZN12QDomDocument19elementsByTagNameNSERK7QStringS2_+69p
					; _ZNK11QDomElement19elementsByTagNameNSERK7QStringS2_+69p

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED99DF8
		mov	[ebp+var_18], offset sub_6ED4488D
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	dword ptr [edx], 0
		mov	[edx+8], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	eax, ds:_ZN9QListData11shared_nullE
		mov	[edx+10h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 1
		mov	edx, [ebp+arg_4]
		test	edx, edx
		mov	[eax+4], edx
		jz	short loc_6ED4483D
		lock inc dword ptr [edx+4]
		setnz	al

loc_6ED4483D:				; CODE XREF: sub_6ED447C0+74j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 1
		add	eax, 8
		mov	[ebp+var_40], eax
		mov	eax, [ebp+arg_C]
		mov	edx, [ebp+var_40]
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+arg_8]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 0Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+14h], 0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED447C0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4488D	proc near		; DATA XREF: sub_6ED447C0+20o
		add	ebp, 8
		mov	eax, [ebp+8]
		mov	edx, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 10h
		mov	[ebp-44h], edx
		mov	[esp+0], eax
		call	sub_6ED942B0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED4488D	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_6ED997C0
		mov	dword ptr [ebp-20h], offset word_6ED99DFE
		mov	dword ptr [ebp-18h], offset loc_6ED449BD
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+8]
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	dword ptr [edx], 0
		mov	[edx+8], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+8]
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+8]
		mov	eax, ds:_ZN9QListData11shared_nullE
		mov	[edx+10h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+8]
		mov	dword ptr [eax], 1
		mov	edx, [ebp+0Ch]
		test	edx, edx
		mov	[eax+4], edx
		jz	short loc_6ED4496D
		lock inc dword ptr [edx+4]
		setnz	al

loc_6ED4496D:				; CODE XREF: .text:6ED44964j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 1
		add	eax, 8
		mov	[ebp-40h], eax
		mov	eax, [ebp+14h]
		mov	edx, [ebp-40h]
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+10h]
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		add	eax, 0Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+8]
		mov	dword ptr [eax+14h], 0
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED449BD:				; DATA XREF: .text:6ED44910o
		add	ebp, 8
		mov	eax, [ebp+8]
		mov	edx, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 10h
		mov	[ebp-44h], edx
		mov	[esp], eax
		call	sub_6ED942B0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp], eax
		call	sub_6ED94560
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], eax
		call	sub_6ED94560
		mov	edx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED44A20	proc near		; CODE XREF: _ZNK12QDomDocument17elementsByTagNameERK7QString+62p
					; _ZNK11QDomElement17elementsByTagNameERK7QString+62p

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED99E04
		mov	[ebp+var_18], offset sub_6ED44AD7
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	dword ptr [edx], 0
		mov	[edx+8], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	eax, ds:_ZN9QListData11shared_nullE
		mov	[edx+10h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 1
		mov	edx, [ebp+arg_4]
		test	edx, edx
		mov	[eax+4], edx
		jz	short loc_6ED44A9D
		lock inc dword ptr [edx+4]
		setnz	al

loc_6ED44A9D:				; CODE XREF: sub_6ED44A20+74j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 1
		add	eax, 8
		mov	[ebp+var_40], eax
		mov	eax, [ebp+arg_8]
		mov	edx, [ebp+var_40]
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+14h], 0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED44A20	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED44AD7	proc near		; DATA XREF: sub_6ED44A20+20o
		add	ebp, 8
		mov	eax, [ebp+8]
		mov	edx, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 10h
		mov	[ebp-44h], edx
		mov	[esp+0], eax
		call	sub_6ED942B0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED44AD7	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_6ED997C0
		mov	dword ptr [ebp-20h], offset word_6ED99E0A
		mov	dword ptr [ebp-18h], offset loc_6ED44BE7
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+8]
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	dword ptr [edx], 0
		mov	[edx+8], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+8]
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+8]
		mov	eax, ds:_ZN9QListData11shared_nullE
		mov	[edx+10h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+8]
		mov	dword ptr [eax], 1
		mov	edx, [ebp+0Ch]
		test	edx, edx
		mov	[eax+4], edx
		jz	short loc_6ED44BAD
		lock inc dword ptr [edx+4]
		setnz	al

loc_6ED44BAD:				; CODE XREF: .text:6ED44BA4j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 1
		add	eax, 8
		mov	[ebp-40h], eax
		mov	eax, [ebp+10h]
		mov	edx, [ebp-40h]
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+8]
		mov	dword ptr [eax+14h], 0
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED44BE7:				; DATA XREF: .text:6ED44B50o
		add	ebp, 8
		mov	eax, [ebp+8]
		mov	edx, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 10h
		mov	[ebp-44h], edx
		mov	[esp], eax
		call	sub_6ED942B0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp], eax
		call	sub_6ED94560
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], eax
		call	sub_6ED94560
		mov	edx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h
; Exported entry  63. _ZN12QDomDocument19elementsByTagNameNSERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QDomDocument19elementsByTagNameNSERK7QStringS2_
_ZN12QDomDocument19elementsByTagNameNSERK7QStringS2_ proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED99E10
		mov	[ebp+var_18], offset sub_6ED44CC8
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 18h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_40], eax
		mov	eax, [ebp+arg_C]
		mov	edx, [ebp+var_40]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		mov	[esp], edx
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		call	sub_6ED447C0
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
_ZN12QDomDocument19elementsByTagNameNSERK7QStringS2_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED44CC8	proc near		; DATA XREF: _ZN12QDomDocument19elementsByTagNameNSERK7QStringS2_+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-40h]
		mov	[ebp-44h], eax
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED44CC8	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 420. _ZNK12QDomDocument17elementsByTagNameERK7QString

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZNK12QDomDocument17elementsByTagNameERK7QString
_ZNK12QDomDocument17elementsByTagNameERK7QString proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED99E16
		mov	[ebp+var_18], offset sub_6ED44D71
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 18h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_40], eax
		mov	eax, [ebp+arg_8]
		mov	edx, [ebp+var_40]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		mov	[esp], edx
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		call	sub_6ED44A20
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
_ZNK12QDomDocument17elementsByTagNameERK7QString endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED44D71	proc near		; DATA XREF: _ZNK12QDomDocument17elementsByTagNameERK7QString+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-40h]
		mov	[ebp-44h], eax
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED44D71	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED44DA0	proc near		; DATA XREF: .rdata:6EDA7788o

var_41		= byte ptr -41h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= byte ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		movzx	eax, [ebp+arg_4]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_1C], edx
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED99E1C
		mov	[ebp+var_41], al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_18], offset sub_6ED44E27
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 38h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		movzx	eax, [ebp+var_41]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+4], eax
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED44480
		mov	edx, [ebp+var_40]
		lock dec dword ptr [edx+4]
		setnz	al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_40]
		leave
		retn
sub_6ED44DA0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED44E27	proc near		; DATA XREF: sub_6ED44DA0+27o
		add	ebp, 8
		mov	edx, [ebp-34h]
		mov	eax, [ebp-40h]
		mov	[ebp-48h], edx
		mov	[esp+0], eax
		call	sub_6ED988B0
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED44E27	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED44E50	proc near		; DATA XREF: .rdata:6EDA7688o

var_41		= byte ptr -41h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= byte ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		movzx	eax, [ebp+arg_4]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_1C], edx
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED99E22
		mov	[ebp+var_41], al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_18], offset sub_6ED44ED7
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 38h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		movzx	eax, [ebp+var_41]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+4], eax
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED444E0
		mov	edx, [ebp+var_40]
		lock dec dword ptr [edx+4]
		setnz	al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_40]
		leave
		retn
sub_6ED44E50	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED44ED7	proc near		; DATA XREF: sub_6ED44E50+27o
		add	ebp, 8
		mov	edx, [ebp-34h]
		mov	eax, [ebp-40h]
		mov	[ebp-48h], edx
		mov	[esp+0], eax
		call	sub_6ED988B0
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED44ED7	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED44F00	proc near		; DATA XREF: .rdata:6EDA74C8o

var_41		= byte ptr -41h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= byte ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		movzx	eax, [ebp+arg_4]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_1C], edx
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED99E28
		mov	[ebp+var_41], al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_18], offset sub_6ED44F87
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 38h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		movzx	eax, [ebp+var_41]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+4], eax
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED44700
		mov	edx, [ebp+var_40]
		lock dec dword ptr [edx+4]
		setnz	al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_40]
		leave
		retn
sub_6ED44F00	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED44F87	proc near		; DATA XREF: sub_6ED44F00+27o
		add	ebp, 8
		mov	edx, [ebp-34h]
		mov	eax, [ebp-40h]
		mov	[ebp-48h], edx
		mov	[esp+0], eax
		call	sub_6ED988B0
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED44F87	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED44FB0	proc near		; DATA XREF: .rdata:6EDA70E8o

var_41		= byte ptr -41h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= byte ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		movzx	eax, [ebp+arg_4]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_1C], edx
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED99E2E
		mov	[ebp+var_41], al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_18], offset sub_6ED45037
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 38h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		movzx	eax, [ebp+var_41]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+4], eax
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED44640
		mov	edx, [ebp+var_40]
		lock dec dword ptr [edx+4]
		setnz	al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_40]
		leave
		retn
sub_6ED44FB0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED45037	proc near		; DATA XREF: sub_6ED44FB0+27o
		add	ebp, 8
		mov	edx, [ebp-34h]
		mov	eax, [ebp-40h]
		mov	[ebp-48h], edx
		mov	[esp+0], eax
		call	sub_6ED988B0
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED45037	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED45060	proc near		; DATA XREF: .rdata:6EDA6EE8o

var_41		= byte ptr -41h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= byte ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		movzx	eax, [ebp+arg_4]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_1C], edx
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED99E34
		mov	[ebp+var_41], al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_18], offset sub_6ED450E7
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 38h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		movzx	eax, [ebp+var_41]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+4], eax
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED446A0
		mov	edx, [ebp+var_40]
		lock dec dword ptr [edx+4]
		setnz	al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_40]
		leave
		retn
sub_6ED45060	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED450E7	proc near		; DATA XREF: sub_6ED45060+27o
		add	ebp, 8
		mov	edx, [ebp-34h]
		mov	eax, [ebp-40h]
		mov	[ebp-48h], edx
		mov	[esp+0], eax
		call	sub_6ED988B0
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED450E7	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 413. _ZNK11QDomElement19elementsByTagNameNSERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZNK11QDomElement19elementsByTagNameNSERK7QStringS2_
_ZNK11QDomElement19elementsByTagNameNSERK7QStringS2_ proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED99E3A
		mov	[ebp+var_18], offset sub_6ED45198
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 18h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_40], eax
		mov	eax, [ebp+arg_C]
		mov	edx, [ebp+var_40]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		mov	[esp], edx
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		call	sub_6ED447C0
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
_ZNK11QDomElement19elementsByTagNameNSERK7QStringS2_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED45198	proc near		; DATA XREF: _ZNK11QDomElement19elementsByTagNameNSERK7QStringS2_+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-40h]
		mov	[ebp-44h], eax
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED45198	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 412. _ZNK11QDomElement17elementsByTagNameERK7QString

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZNK11QDomElement17elementsByTagNameERK7QString
_ZNK11QDomElement17elementsByTagNameERK7QString	proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED99E40
		mov	[ebp+var_18], offset sub_6ED45241
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 18h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_40], eax
		mov	eax, [ebp+arg_8]
		mov	edx, [ebp+var_40]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		mov	[esp], edx
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		call	sub_6ED44A20
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
_ZNK11QDomElement17elementsByTagNameERK7QString	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED45241	proc near		; DATA XREF: _ZNK11QDomElement17elementsByTagNameERK7QString+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-40h]
		mov	[ebp-44h], eax
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED45241	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED45270	proc near		; DATA XREF: .rdata:6EDA6DE8o

var_41		= byte ptr -41h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= byte ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		movzx	eax, [ebp+arg_4]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_1C], edx
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED99E46
		mov	[ebp+var_41], al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_18], offset sub_6ED452F7
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 3Ch ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		movzx	eax, [ebp+var_41]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+4], eax
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED44540
		mov	edx, [ebp+var_40]
		lock dec dword ptr [edx+4]
		setnz	al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_40]
		leave
		retn
sub_6ED45270	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED452F7	proc near		; DATA XREF: sub_6ED45270+27o
		add	ebp, 8
		mov	edx, [ebp-34h]
		mov	eax, [ebp-40h]
		mov	[ebp-48h], edx
		mov	[esp+0], eax
		call	sub_6ED988B0
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED452F7	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED45320	proc near		; DATA XREF: .rdata:6EDA75E8o

var_41		= byte ptr -41h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= byte ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		movzx	eax, [ebp+arg_4]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_1C], edx
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED99E4C
		mov	[ebp+var_41], al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_18], offset sub_6ED453A7
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 38h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		movzx	eax, [ebp+var_41]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+4], eax
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED445E0
		mov	edx, [ebp+var_40]
		lock dec dword ptr [edx+4]
		setnz	al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_40]
		leave
		retn
sub_6ED45320	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED453A7	proc near		; DATA XREF: sub_6ED45320+27o
		add	ebp, 8
		mov	edx, [ebp-34h]
		mov	eax, [ebp-40h]
		mov	[ebp-48h], edx
		mov	[esp+0], eax
		call	sub_6ED988B0
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED453A7	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED453D0	proc near		; DATA XREF: .rdata:6EDA7708o

var_41		= byte ptr -41h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= byte ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		movzx	eax, [ebp+arg_4]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_1C], edx
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED99E52
		mov	[ebp+var_41], al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_18], offset sub_6ED45457
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 38h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		movzx	eax, [ebp+var_41]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+4], eax
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED44760
		mov	edx, [ebp+var_40]
		lock dec dword ptr [edx+4]
		setnz	al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_40]
		leave
		retn
sub_6ED453D0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED45457	proc near		; DATA XREF: sub_6ED453D0+27o
		add	ebp, 8
		mov	edx, [ebp-34h]
		mov	eax, [ebp-40h]
		mov	[ebp-48h], edx
		mov	[esp+0], eax
		call	sub_6ED988B0
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED45457	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 532. _ZNK8QDomNode10childNodesEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode10childNodesEv
_ZNK8QDomNode10childNodesEv proc near

var_1C		= dword	ptr -1Ch
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_4], edi
		mov	edi, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_C], ebx
		mov	ecx, [esi]
		test	ecx, ecx
		jz	short loc_6ED45510
		mov	[esp+1Ch+var_1C], 18h ;	size_t
		call	sub_6ED988D0
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	ecx, [esi]
		mov	[eax+8], edx
		mov	dword ptr [eax], 0
		lock inc dword ptr [edx]
		setnz	bl
		mov	[eax+0Ch], edx
		lock inc dword ptr [edx]
		setnz	bl
		mov	edx, ds:_ZN9QListData11shared_nullE
		mov	[eax+10h], edx
		lock inc dword ptr [edx]
		setnz	bl
		test	ecx, ecx
		mov	dword ptr [eax], 1
		mov	[eax+4], ecx
		jz	short loc_6ED454EC
		lock inc dword ptr [ecx+4]
		setnz	dl

loc_6ED454EC:				; CODE XREF: _ZNK8QDomNode10childNodesEv+63j
		mov	dword ptr [eax+14h], 0
		mov	[edi], eax

loc_6ED454F5:				; CODE XREF: _ZNK8QDomNode10childNodesEv+96j
		mov	eax, edi
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED45510:				; CODE XREF: _ZNK8QDomNode10childNodesEv+1Bj
		mov	dword ptr [edi], 0
		jmp	short loc_6ED454F5
_ZNK8QDomNode10childNodesEv endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED45520	proc near		; DATA XREF: .rdata:6EDA6E68o

var_41		= byte ptr -41h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= byte ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		movzx	eax, [ebp+arg_4]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_1C], edx
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED99E58
		mov	[ebp+var_41], al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_18], offset sub_6ED455A7
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 38h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		movzx	eax, [ebp+var_41]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+4], eax
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED44060
		mov	edx, [ebp+var_40]
		lock dec dword ptr [edx+4]
		setnz	al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_40]
		leave
		retn
sub_6ED45520	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED455A7	proc near		; DATA XREF: sub_6ED45520+27o
		add	ebp, 8
		mov	edx, [ebp-34h]
		mov	eax, [ebp-40h]
		mov	[ebp-48h], edx
		mov	[esp+0], eax
		call	sub_6ED988B0
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED455A7	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED455D0	proc near		; CODE XREF: sub_6ED4A860+70p
					; .text:6ED4AAF0p

var_1C		= dword	ptr -1Ch

		sub	esp, 1Ch
		mov	[esp+1Ch+var_1C], 4 ; size_t
		call	sub_6ED988D0
		mov	dword ptr [eax], 0
		add	esp, 1Ch
		retn
sub_6ED455D0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  55. _ZN12QDomDocument11elementByIdERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QDomDocument11elementByIdERK7QString
_ZN12QDomDocument11elementByIdERK7QString proc near

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], offset aElementbyidIsN ; "elementById() is not implemented and wi"...
		call	ds:_Z8qWarningPKcz
		mov	dword ptr [ebx], 0
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
_ZN12QDomDocument11elementByIdERK7QString endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 379. _ZN8QDomNode11appendChildERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomNode11appendChildERKS_
_ZN8QDomNode11appendChildERKS_ proc near
					; CODE XREF: _ZN18QDomImplementation14createDocumentERK7QStringS2_RK16QDomDocumentType+94p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED45660
		mov	ecx, [esp+1Ch+arg_8]
		mov	edx, [eax]
		mov	ecx, [ecx]
		mov	[esp+1Ch+var_1C], eax
		mov	[esp+1Ch+var_18], ecx
		call	dword ptr [edx+1Ch]
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED45651
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED45651:				; CODE XREF: _ZN8QDomNode11appendChildERKS_+28j
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED45660:				; CODE XREF: _ZN8QDomNode11appendChildERKS_+10j
		mov	[esp+1Ch+var_1C], offset aCallingAppendc ; "Calling appendChild() on a null node do"...
		call	ds:_Z8qWarningPKcz
		mov	eax, ebx
		mov	dword ptr [ebx], 0
		add	esp, 18h
		pop	ebx
		retn	4
_ZN8QDomNode11appendChildERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 505. _ZNK18QDomImplementation10hasFeatureERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================


		public _ZNK18QDomImplementation10hasFeatureERK7QStringS2_
_ZNK18QDomImplementation10hasFeatureERK7QStringS2_ proc	near
					; CODE XREF: _ZNK8QDomNode11isSupportedERK7QStringS2_+51p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 2Ch
		lea	eax, [esp+2Ch+var_10]
		mov	[esp+2Ch+var_28], eax
		mov	eax, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_8], ebx
		mov	ebx, ds:_ZNK7QStringeqERK13QLatin1String
		mov	[esp+2Ch+var_4], esi
		mov	esi, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_10], offset aXml ;	"XML"
		mov	[esp+2Ch+var_2C], eax
		call	ebx ; _ZNK7QStringeqERK13QLatin1String
		mov	edx, eax
		xor	eax, eax
		test	dl, dl
		jz	short loc_6ED456C4
		mov	edx, [esi]
		mov	eax, 1
		mov	edx, [edx+8]
		test	edx, edx
		jnz	short loc_6ED456D0

loc_6ED456C4:				; CODE XREF: _ZNK18QDomImplementation10hasFeatureERK7QStringS2_+34j
		mov	ebx, [esp+2Ch+var_8]
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED456D0:				; CODE XREF: _ZNK18QDomImplementation10hasFeatureERK7QStringS2_+42j
		lea	eax, [esp+2Ch+var_14]
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_14], offset a1_0 ;	"1.0"
		mov	[esp+2Ch+var_28], eax
		call	ebx ; _ZNK7QStringeqERK13QLatin1String
		mov	ebx, [esp+2Ch+var_8]
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
_ZNK18QDomImplementation10hasFeatureERK7QStringS2_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 540. _ZNK8QDomNode11isSupportedERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZNK8QDomNode11isSupportedERK7QStringS2_
_ZNK8QDomNode11isSupportedERK7QStringS2_ proc near

var_4D		= byte ptr -4Dh
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED99E5E
		mov	[ebp+var_28], offset sub_6ED45775
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_C], 0
		mov	[ebp+var_48], 1
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	_ZNK18QDomImplementation10hasFeatureERK7QStringS2_
		mov	[ebp+var_4D], al
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	_ZN18QDomImplementationD1Ev
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_4D]
		leave
		retn
_ZNK8QDomNode11isSupportedERK7QStringS2_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED45775	proc near		; DATA XREF: _ZNK8QDomNode11isSupportedERK7QStringS2_+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	[ebp-54h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	_ZN18QDomImplementationD1Ev
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED45775	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		sub	esp, 18h
		mov	eax, [esp+2Ch]
		mov	ebx, [esp+20h]
		mov	[esp+0Ch], eax
		mov	eax, [esp+28h]
		mov	[esp], ebx
		mov	[esp+8], eax
		mov	eax, [esp+24h]
		add	eax, 20h
		mov	[esp+4], eax
		call	ds:_ZNK7QString3midEii
		mov	eax, ebx
		sub	esp, 4
		add	esp, 18h
		pop	ebx
		retn	4
; ---------------------------------------------------------------------------
		align 10h
; Exported entry 236. _ZN17QDomCharacterData13substringDataEmm

; =============== S U B	R O U T	I N E =======================================


		public _ZN17QDomCharacterData13substringDataEmm
_ZN17QDomCharacterData13substringDataEmm proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED45820
		mov	edx, [esp+1Ch+arg_C]
		add	eax, 20h
		mov	[esp+1Ch+var_18], eax
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_10], edx
		mov	edx, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_14], edx
		call	ds:_ZNK7QString3midEii
		mov	eax, ebx
		sub	esp, 4
		add	esp, 18h
		pop	ebx
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED45820:				; CODE XREF: _ZN17QDomCharacterData13substringDataEmm+10j
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
_ZN17QDomCharacterData13substringDataEmm endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		mov	eax, [esp+10h]
		add	eax, 20h
		mov	[esp+10h], eax
		mov	eax, ds:_ZN7QString6removeEii
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h
; Exported entry 233. _ZN17QDomCharacterData10deleteDataEmm

; =============== S U B	R O U T	I N E =======================================


		public _ZN17QDomCharacterData10deleteDataEmm
_ZN17QDomCharacterData10deleteDataEmm proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED45880
		add	eax, 20h
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_ZN7QString6removeEii
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_6ED45880:				; CODE XREF: _ZN17QDomCharacterData10deleteDataEmm+Bj
		add	esp, 0Ch
		retn
_ZN17QDomCharacterData10deleteDataEmm endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED45890	proc near		; DATA XREF: .rdata:6EDA750Co

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, ds:_ZN11QTextStreamlsEPKc
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_18], offset aCdata_5 ; "<![CDATA["
		mov	[esp+1Ch+var_1C], eax
		call	ebx ; _ZN11QTextStreamlsEPKc
		add	esi, 20h
		mov	[esp+1Ch+var_18], esi
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	edx, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	[esp+1Ch+arg_4], offset	asc_6EDA00B1 ; "]]>"
		mov	ebx, [esp+1Ch+var_8]
		mov	[esp+1Ch+arg_0], eax
		add	esp, 1Ch
		jmp	edx
sub_6ED45890	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED458F0	proc near		; DATA XREF: .rdata:6EDA76CCo

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, ds:_ZN11QTextStreamlsEc
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_18], 26h
		mov	[esp+1Ch+var_1C], eax
		call	ebx ; _ZN11QTextStreamlsEc
		add	esi, 1Ch
		mov	[esp+1Ch+var_18], esi
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	edx, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	[esp+1Ch+arg_4], 3Bh
		mov	ebx, [esp+1Ch+var_8]
		mov	[esp+1Ch+arg_0], eax
		add	esp, 1Ch
		jmp	edx
sub_6ED458F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED45950	proc near		; DATA XREF: .rdata:6EDA77CCo

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_C], ebx
		mov	ebx, ds:_ZN11QTextStreamlsEPKc
		mov	[esp+1Ch+var_8], esi
		mov	[esp+1Ch+var_4], edi
		mov	edi, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_18], offset a?_3 ;	"<?"
		mov	[esp+1Ch+var_1C], eax
		call	ebx ; _ZN11QTextStreamlsEPKc
		mov	esi, ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [edi+1Ch]
		add	edi, 20h
		mov	[esp+1Ch+var_18], edx
		mov	[esp+1Ch+var_1C], eax
		call	esi ; _ZN11QTextStreamlsERK7QString
		mov	[esp+1Ch+var_18], 20h
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN11QTextStreamlsEc
		mov	[esp+1Ch+var_18], edi
		mov	[esp+1Ch+var_1C], eax
		call	esi ; _ZN11QTextStreamlsERK7QString
		mov	[esp+1Ch+var_18], offset a?_4 ;	"?>"
		mov	[esp+1Ch+var_1C], eax
		call	ebx ; _ZN11QTextStreamlsEPKc
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		mov	[esp+1Ch+arg_0], eax
		mov	eax, ds:_Z4endlR11QTextStream
		add	esp, 1Ch
		jmp	eax
sub_6ED45950	endp

; ---------------------------------------------------------------------------
		sub	esp, 0Ch
		mov	eax, [esp+10h]
		add	eax, 20h
		mov	[esp+10h], eax
		mov	eax, ds:_ZN7QString7replaceEiiRKS_
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h
; Exported entry 235. _ZN17QDomCharacterData11replaceDataEmmRK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN17QDomCharacterData11replaceDataEmmRK7QString
_ZN17QDomCharacterData11replaceDataEmmRK7QString proc near

arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 8
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED45A10
		add	eax, 20h
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_ZN7QString7replaceEiiRKS_
		add	esp, 8
		pop	ebx
		jmp	eax
; ---------------------------------------------------------------------------

loc_6ED45A10:				; CODE XREF: _ZN17QDomCharacterData11replaceDataEmmRK7QString+Cj
		add	esp, 8
		pop	ebx
		retn
_ZN17QDomCharacterData11replaceDataEmmRK7QString endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		mov	eax, 1
		sub	esp, 18h
		mov	edx, [esp+20h]
		mov	ecx, [esp+24h]
		mov	ebx, [edx+4]
		cmp	ebx, [ecx+4]
		jz	short loc_6ED45A40
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED45A40:				; CODE XREF: .text:6ED45A37j
		add	ecx, 8
		add	edx, 8
		mov	[esp+4], ecx
		mov	[esp], edx
		call	ds:_ZNK7QStringeqERKS_
		add	esp, 18h
		pop	ebx
		xor	eax, 1
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED45A60	proc near		; CODE XREF: _ZNK12QDomNodeListeqERKS_+2Bj

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	edx, [esp+0Ch+arg_4]
		mov	ecx, [eax+4]
		cmp	ecx, [edx+4]
		jz	short loc_6ED45A80
		xor	eax, eax
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED45A80:				; CODE XREF: sub_6ED45A60+11j
		add	eax, 8
		add	edx, 8
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_ZNK7QStringeqERKS_
		mov	[esp+0Ch+arg_4], edx
		add	esp, 0Ch
		jmp	eax
sub_6ED45A60	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 425. _ZNK12QDomNodeListeqERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZNK12QDomNodeListeqERKS_
_ZNK12QDomNodeListeqERKS_ proc near	; CODE XREF: _ZNK12QDomNodeListneERKS_+12p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	edx, [eax]
		mov	eax, [esp+0Ch+arg_4]
		mov	ecx, [eax]
		mov	eax, 1
		cmp	edx, ecx
		jz	short loc_6ED45AD2
		test	edx, edx
		jz	short loc_6ED45AD0
		test	ecx, ecx
		jz	short loc_6ED45AD0
		mov	[esp+0Ch+arg_4], ecx
		mov	[esp+0Ch+arg_0], edx
		add	esp, 0Ch
		jmp	short sub_6ED45A60
; ---------------------------------------------------------------------------
		align 10h

loc_6ED45AD0:				; CODE XREF: _ZNK12QDomNodeListeqERKS_+1Aj
					; _ZNK12QDomNodeListeqERKS_+1Ej
		xor	eax, eax

loc_6ED45AD2:				; CODE XREF: _ZNK12QDomNodeListeqERKS_+16j
		add	esp, 0Ch
		retn
_ZNK12QDomNodeListeqERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 426. _ZNK12QDomNodeListneERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZNK12QDomNodeListneERKS_
_ZNK12QDomNodeListneERKS_ proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], eax
		call	_ZNK12QDomNodeListeqERKS_
		add	esp, 1Ch
		xor	eax, 1
		retn
_ZNK12QDomNodeListneERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; START	OF FUNCTION CHUNK FOR _ZNK11QDomElement12hasAttributeERK7QString

loc_6ED45B00:				; CODE XREF: .text:6ED45B61j
					; _ZNK11QDomElement12hasAttributeERK7QString+1Fj ...
		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [ebx+4]
		mov	eax, [eax+0Ch]
		test	eax, eax
		jnz	short loc_6ED45B20

loc_6ED45B12:				; CODE XREF: _ZNK11QDomElement12hasAttributeERK7QString-30j
		xor	eax, eax
		add	esp, 18h
		pop	ebx
		retn
; END OF FUNCTION CHUNK	FOR _ZNK11QDomElement12hasAttributeERK7QString
; ---------------------------------------------------------------------------
		align 10h
; START	OF FUNCTION CHUNK FOR _ZNK11QDomElement12hasAttributeERK7QString

loc_6ED45B20:				; CODE XREF: _ZNK11QDomElement12hasAttributeERK7QString-60j
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_14], 0
		mov	[esp+1Ch+var_18], eax
		lea	eax, [ebx+4]
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED983D0
		mov	eax, [eax]
		cmp	eax, [ebx+4]
		jz	short loc_6ED45B12
		mov	ecx, [eax+0Ch]
		test	ecx, ecx
		setnz	al
		add	esp, 18h
		pop	ebx
		retn
; END OF FUNCTION CHUNK	FOR _ZNK11QDomElement12hasAttributeERK7QString
; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		mov	eax, [esp+10h]
		mov	eax, [eax+38h]
		mov	[esp+10h], eax
		add	esp, 0Ch
		jmp	short loc_6ED45B00
; ---------------------------------------------------------------------------
		align 10h
; Exported entry 410. _ZNK11QDomElement12hasAttributeERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZNK11QDomElement12hasAttributeERK7QString
_ZNK11QDomElement12hasAttributeERK7QString proc	near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

; FUNCTION CHUNK AT 6ED45B00 SIZE 00000019 BYTES
; FUNCTION CHUNK AT 6ED45B20 SIZE 0000002F BYTES

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	edx, [esp+0Ch+arg_4]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED45B94
		mov	[esp+0Ch+arg_4], edx
		mov	eax, [eax+38h]
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	loc_6ED45B00
; ---------------------------------------------------------------------------

loc_6ED45B94:				; CODE XREF: _ZNK11QDomElement12hasAttributeERK7QString+Fj
		add	esp, 0Ch
		retn
_ZNK11QDomElement12hasAttributeERK7QString endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 453. _ZNK16QDomNamedNodeMap8containsERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QDomNamedNodeMap8containsERK7QString
_ZNK16QDomNamedNodeMap8containsERK7QString proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	edx, [esp+0Ch+arg_4]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED45BC1
		mov	[esp+0Ch+arg_4], edx
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	loc_6ED45B00
; ---------------------------------------------------------------------------

loc_6ED45BC1:				; CODE XREF: _ZNK16QDomNamedNodeMap8containsERK7QString+Fj
		add	esp, 0Ch
		retn
_ZNK16QDomNamedNodeMap8containsERK7QString endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED45BD0	proc near		; CODE XREF: .text:6ED45C31j
					; _ZN11QDomElement13attributeNodeERK7QString+20p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [ebx+4]
		mov	edx, [eax+0Ch]
		test	edx, edx
		jnz	short loc_6ED45BF0

loc_6ED45BE2:				; CODE XREF: sub_6ED45BD0+40j
		xor	eax, eax
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED45BF0:				; CODE XREF: sub_6ED45BD0+10j
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_14], 0
		mov	[esp+1Ch+var_18], eax
		lea	eax, [ebx+4]
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED983D0
		mov	eax, [eax]
		cmp	eax, [ebx+4]
		jz	short loc_6ED45BE2
		mov	eax, [eax+0Ch]
		add	esp, 18h
		pop	ebx
		retn
sub_6ED45BD0	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		mov	eax, [esp+10h]
		mov	eax, [eax+38h]
		mov	[esp+10h], eax
		add	esp, 0Ch
		jmp	short sub_6ED45BD0
; ---------------------------------------------------------------------------
		align 10h
; Exported entry  23. _ZN11QDomElement13attributeNodeERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN11QDomElement13attributeNodeERK7QString
_ZN11QDomElement13attributeNodeERK7QString proc	near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED45C80
		mov	edx, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_18], edx
		mov	eax, [eax+38h]
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED45BD0
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED45C72
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED45C72:				; CODE XREF: _ZN11QDomElement13attributeNodeERK7QString+29j
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED45C80:				; CODE XREF: _ZN11QDomElement13attributeNodeERK7QString+10j
		mov	dword ptr [ebx], 0
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
_ZN11QDomElement13attributeNodeERK7QString endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED45C90	proc near		; CODE XREF: _ZNK11QDomElement9attributeERK7QStringS2_+29p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_8]
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [esp+1Ch+arg_4]
		mov	eax, [eax+38h]
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED45BD0
		test	eax, eax
		jz	short loc_6ED45CC7
		mov	eax, [eax+20h]
		mov	[ebx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
; ---------------------------------------------------------------------------

loc_6ED45CC7:				; CODE XREF: sub_6ED45C90+21j
		mov	eax, [esp+1Ch+arg_C]
		mov	eax, [eax]
		mov	[ebx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
sub_6ED45C90	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 416. _ZNK11QDomElement9attributeERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================


		public _ZNK11QDomElement9attributeERK7QStringS2_
_ZNK11QDomElement9attributeERK7QStringS2_ proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	edx, [esp+1Ch+arg_C]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED45D20
		mov	[esp+1Ch+var_10], edx
		mov	edx, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_18], eax
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_14], edx
		call	sub_6ED45C90
		mov	eax, ebx
		sub	esp, 4
		add	esp, 18h
		pop	ebx
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED45D20:				; CODE XREF: _ZNK11QDomElement9attributeERK7QStringS2_+14j
		mov	eax, [edx]
		mov	[ebx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
_ZNK11QDomElement9attributeERK7QStringS2_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 454. _ZNK16QDomNamedNodeMap9namedItemERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QDomNamedNodeMap9namedItemERK7QString
_ZNK16QDomNamedNodeMap9namedItemERK7QString proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED45D78
		mov	edx, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_1C], eax
		mov	[esp+1Ch+var_18], edx
		call	sub_6ED45BD0
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED45D6F
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED45D6F:				; CODE XREF: _ZNK16QDomNamedNodeMap9namedItemERK7QString+26j
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
; ---------------------------------------------------------------------------

loc_6ED45D78:				; CODE XREF: _ZNK16QDomNamedNodeMap9namedItemERK7QString+10j
		mov	dword ptr [ebx], 0
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
_ZNK16QDomNamedNodeMap9namedItemERK7QString endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED45D90	proc near		; CODE XREF: _ZN16QDomNamedNodeMap12setNamedItemERK8QDomNode+1Fp
					; sub_6ED46040+48p ...

var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED99E64
		mov	[ebp+var_28], offset sub_6ED45EE0
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		cmp	byte ptr [edx+0Ch], 0
		jz	short loc_6ED45DE0

loc_6ED45DC8:				; CODE XREF: sub_6ED45D90+55j
		mov	[ebp+var_50], 0

loc_6ED45DCF:				; CODE XREF: sub_6ED45D90+E7j
					; sub_6ED45D90+14Bj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_50]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED45DE0:				; CODE XREF: sub_6ED45D90+36j
		mov	eax, [ebp+arg_4]
		test	eax, eax
		jz	short loc_6ED45DC8
		cmp	byte ptr [edx+0Dh], 0
		jnz	loc_6ED45EC0
		mov	eax, [eax+1Ch]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		add	eax, 4
		mov	[ebp+var_54], eax
		mov	eax, [edx+4]
		mov	ecx, [eax+0Ch]
		test	ecx, ecx
		jnz	short loc_6ED45E80

loc_6ED45E13:				; CODE XREF: sub_6ED45D90+119j
		mov	[ebp+var_50], 0

loc_6ED45E1A:				; CODE XREF: sub_6ED45D90+125j
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED94560
		mov	eax, [ebp+arg_4]
		lock inc dword ptr [eax+4]
		setnz	dl
		mov	eax, [ebp+arg_4]
		mov	eax, [eax+1Ch]
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+var_54]
		lea	eax, [ebp+arg_4]
		mov	[esp+8], eax
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	[ebp+var_48], 1
		mov	[esp], ecx
		call	sub_6ED92D40
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED94560
		jmp	loc_6ED45DCF
; ---------------------------------------------------------------------------
		align 10h

loc_6ED45E80:				; CODE XREF: sub_6ED45D90+81j
		mov	ecx, [ebp+var_54]
		lea	eax, [ebp+var_C]
		mov	dword ptr [esp+8], 0
		mov	[esp+4], eax
		mov	[ebp+var_48], 2
		mov	[esp], ecx
		call	sub_6ED983D0
		mov	edx, [ebp+arg_0]
		mov	eax, [eax]
		cmp	eax, [edx+4]
		jz	loc_6ED45E13
		mov	eax, [eax+0Ch]
		mov	[ebp+var_50], eax
		jmp	loc_6ED45E1A
; ---------------------------------------------------------------------------
		align 10h

loc_6ED45EC0:				; CODE XREF: sub_6ED45D90+5Bj
		mov	edx, [edx+8]
		mov	ecx, [edx]
		mov	[esp+4], eax
		mov	[esp], edx
		mov	eax, [ecx+1Ch]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	eax
		mov	[ebp+var_50], eax
		jmp	loc_6ED45DCF
sub_6ED45D90	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED45EE0	proc near		; DATA XREF: sub_6ED45D90+1Do
		add	ebp, 8
		mov	edx, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-58h], edx
		jz	short loc_6ED45F13
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED45F13:				; CODE XREF: sub_6ED45EE0+Dj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED45EE0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 134. _ZN16QDomNamedNodeMap12setNamedItemERK8QDomNode

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QDomNamedNodeMap12setNamedItemERK8QDomNode
_ZN16QDomNamedNodeMap12setNamedItemERK8QDomNode	proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED45F80
		mov	edx, [esp+1Ch+arg_8]
		mov	edx, [edx]
		mov	[esp+1Ch+var_1C], eax
		mov	[esp+1Ch+var_18], edx
		call	sub_6ED45D90
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED45F71
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED45F71:				; CODE XREF: _ZN16QDomNamedNodeMap12setNamedItemERK8QDomNode+28j
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED45F80:				; CODE XREF: _ZN16QDomNamedNodeMap12setNamedItemERK8QDomNode+10j
		mov	dword ptr [ebx], 0
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
_ZN16QDomNamedNodeMap12setNamedItemERK8QDomNode	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED45F90	proc near		; CODE XREF: sub_6ED46040+37p
					; .text:6ED46101j ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	edi, [esp+3Ch+arg_0]
		mov	esi, [esp+3Ch+arg_4]
		mov	ecx, [edi+4]
		mov	edx, [ecx+18h]
		mov	eax, [ecx+4]
		test	edx, edx
		jz	short loc_6ED45FC7
		mov	ebx, [eax]
		cmp	ecx, ebx
		jnz	short loc_6ED45FC9
		sub	edx, 1
		jmp	short loc_6ED45FC3
; ---------------------------------------------------------------------------

loc_6ED45FB7:				; CODE XREF: sub_6ED45F90+35j
		add	eax, 4
		sub	edx, 1
		mov	ebx, [eax]
		cmp	ecx, ebx
		jnz	short loc_6ED45FC9

loc_6ED45FC3:				; CODE XREF: sub_6ED45F90+25j
		test	edx, edx
		jnz	short loc_6ED45FB7

loc_6ED45FC7:				; CODE XREF: sub_6ED45F90+1Aj
		mov	ebx, ecx

loc_6ED45FC9:				; CODE XREF: sub_6ED45F90+20j
					; sub_6ED45F90+31j
		cmp	ebx, [edi+4]
		jz	short loc_6ED46032
		mov	[esp+3Ch+var_20], edi
		mov	ebp, ds:_ZN7QString11shared_nullE
		mov	edi, esi
		jmp	short loc_6ED45FF4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED45FE0:				; CODE XREF: sub_6ED45F90+6Aj
					; sub_6ED45F90+7Ej ...
		mov	[esp+3Ch+var_3C], ebx
		call	ds:_ZN9QHashData8nextNodeEPNS_4NodeE
		mov	ebx, eax
		mov	eax, [esp+3Ch+var_20]
		cmp	ebx, [eax+4]
		jz	short loc_6ED46032

loc_6ED45FF4:				; CODE XREF: sub_6ED45F90+4Aj
		mov	esi, [ebx+0Ch]
		cmp	[esi+24h], ebp
		jz	short loc_6ED45FE0
		lea	eax, [esi+28h]
		mov	[esp+3Ch+var_38], edi
		mov	[esp+3Ch+var_3C], eax
		call	ds:_ZNK7QStringeqERKS_
		test	al, al
		jz	short loc_6ED45FE0
		mov	eax, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_38], eax
		lea	eax, [esi+1Ch]
		mov	[esp+3Ch+var_3C], eax
		call	ds:_ZNK7QStringeqERKS_
		test	al, al
		jz	short loc_6ED45FE0

loc_6ED46028:				; CODE XREF: sub_6ED45F90+A4j
		add	esp, 2Ch
		mov	eax, esi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED46032:				; CODE XREF: sub_6ED45F90+3Cj
					; sub_6ED45F90+62j
		xor	esi, esi
		jmp	short loc_6ED46028
sub_6ED45F90	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED46040	proc near		; CODE XREF: _ZN11QDomElement18setAttributeNodeNSERK8QDomAttr+1Fp

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[esp+1Ch+var_C], ebx
		mov	ebx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], esi
		xor	esi, esi
		mov	[esp+1Ch+var_4], edi
		mov	edi, [esp+1Ch+arg_0]
		cmp	[ebx+24h], eax
		jz	short loc_6ED4607E
		lea	eax, [ebx+1Ch]
		mov	[esp+1Ch+var_14], eax
		lea	eax, [ebx+28h]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [edi+38h]
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED45F90
		mov	esi, eax

loc_6ED4607E:				; CODE XREF: sub_6ED46040+21j
		mov	[esp+1Ch+var_18], ebx
		mov	eax, [edi+38h]
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED45D90
		mov	eax, esi
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_6ED46040	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  32. _ZN11QDomElement18setAttributeNodeNSERK8QDomAttr

; =============== S U B	R O U T	I N E =======================================


		public _ZN11QDomElement18setAttributeNodeNSERK8QDomAttr
_ZN11QDomElement18setAttributeNodeNSERK8QDomAttr proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED460E0
		mov	edx, [esp+1Ch+arg_8]
		mov	edx, [edx]
		mov	[esp+1Ch+var_1C], eax
		mov	[esp+1Ch+var_18], edx
		call	sub_6ED46040
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED460D1
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED460D1:				; CODE XREF: _ZN11QDomElement18setAttributeNodeNSERK8QDomAttr+28j
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED460E0:				; CODE XREF: _ZN11QDomElement18setAttributeNodeNSERK8QDomAttr+10j
		mov	dword ptr [ebx], 0
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
_ZN11QDomElement18setAttributeNodeNSERK8QDomAttr endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		mov	eax, [esp+10h]
		mov	eax, [eax+38h]
		mov	[esp+10h], eax
		add	esp, 0Ch
		jmp	sub_6ED45F90
; ---------------------------------------------------------------------------
		align 10h
; Exported entry  28. _ZN11QDomElement15attributeNodeNSERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================


		public _ZN11QDomElement15attributeNodeNSERK7QStringS2_
_ZN11QDomElement15attributeNodeNSERK7QStringS2_	proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED46153
		mov	edx, [esp+1Ch+arg_C]
		mov	[esp+1Ch+var_14], edx
		mov	edx, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_18], edx
		mov	eax, [eax+38h]
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED45F90
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED4614A
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED4614A:				; CODE XREF: _ZN11QDomElement15attributeNodeNSERK7QStringS2_+31j
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
; ---------------------------------------------------------------------------

loc_6ED46153:				; CODE XREF: _ZN11QDomElement15attributeNodeNSERK7QStringS2_+10j
		mov	dword ptr [ebx], 0
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
_ZN11QDomElement15attributeNodeNSERK7QStringS2_	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED46170	proc near		; CODE XREF: _ZNK11QDomElement11attributeNSE7QStringRKS0_S2_+31p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_C]
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_14], eax
		mov	eax, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [esp+1Ch+arg_4]
		mov	eax, [eax+38h]
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED45F90
		test	eax, eax
		jz	short loc_6ED461B0
		mov	eax, [eax+20h]
		mov	[ebx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED461B0:				; CODE XREF: sub_6ED46170+29j
		mov	eax, [esp+1Ch+arg_10]
		mov	eax, [eax]
		mov	[ebx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
sub_6ED46170	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 409. _ZNK11QDomElement11attributeNSE7QStringRKS0_S2_

; =============== S U B	R O U T	I N E =======================================


		public _ZNK11QDomElement11attributeNSE7QStringRKS0_S2_
_ZNK11QDomElement11attributeNSE7QStringRKS0_S2_	proc near

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	ebx
		sub	esp, 28h
		mov	eax, [esp+2Ch+arg_4]
		mov	ebx, [esp+2Ch+arg_0]
		mov	edx, [esp+2Ch+arg_10]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED46212
		mov	[esp+2Ch+var_1C], edx
		mov	edx, [esp+2Ch+arg_C]
		mov	[esp+2Ch+var_28], eax
		mov	[esp+2Ch+var_2C], ebx
		mov	[esp+2Ch+var_20], edx
		mov	edx, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_24], edx
		call	sub_6ED46170
		mov	eax, ebx
		sub	esp, 4
		add	esp, 28h
		pop	ebx
		retn	4
; ---------------------------------------------------------------------------

loc_6ED46212:				; CODE XREF: _ZNK11QDomElement11attributeNSE7QStringRKS0_S2_+14j
		mov	eax, [edx]
		mov	[ebx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		retn	4
_ZNK11QDomElement11attributeNSE7QStringRKS0_S2_	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 450. _ZNK16QDomNamedNodeMap11namedItemNSERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QDomNamedNodeMap11namedItemNSERK7QStringS2_
_ZNK16QDomNamedNodeMap11namedItemNSERK7QStringS2_ proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED46270
		mov	edx, [esp+1Ch+arg_C]
		mov	[esp+1Ch+var_1C], eax
		mov	[esp+1Ch+var_14], edx
		mov	edx, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_18], edx
		call	sub_6ED45F90
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED46267
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED46267:				; CODE XREF: _ZNK16QDomNamedNodeMap11namedItemNSERK7QStringS2_+2Ej
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
; ---------------------------------------------------------------------------

loc_6ED46270:				; CODE XREF: _ZNK16QDomNamedNodeMap11namedItemNSERK7QStringS2_+10j
		mov	dword ptr [ebx], 0
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
_ZNK16QDomNamedNodeMap11namedItemNSERK7QStringS2_ endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED46280	proc near		; CODE XREF: .text:6ED462C1j
					; _ZNK11QDomElement14hasAttributeNSERK7QStringS2_+27j

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_14], eax
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED45F90
		test	eax, eax
		setnz	al
		add	esp, 1Ch
		retn
sub_6ED46280	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		mov	eax, [esp+10h]
		mov	eax, [eax+38h]
		mov	[esp+10h], eax
		add	esp, 0Ch
		jmp	short sub_6ED46280
; ---------------------------------------------------------------------------
		align 10h
; Exported entry 411. _ZNK11QDomElement14hasAttributeNSERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================


		public _ZNK11QDomElement14hasAttributeNSERK7QStringS2_
_ZNK11QDomElement14hasAttributeNSERK7QStringS2_	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	edx, [esp+0Ch+arg_4]
		mov	ecx, [esp+0Ch+arg_8]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED46300
		mov	[esp+0Ch+arg_8], ecx
		mov	[esp+0Ch+arg_4], edx
		mov	eax, [eax+38h]
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	short sub_6ED46280
; ---------------------------------------------------------------------------
		align 10h

loc_6ED46300:				; CODE XREF: _ZNK11QDomElement14hasAttributeNSERK7QStringS2_+13j
		add	esp, 0Ch
		retn
_ZNK11QDomElement14hasAttributeNSERK7QStringS2_	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED46310	proc near		; CODE XREF: _ZN16QDomNamedNodeMap14setNamedItemNSERK8QDomNode+1Fp

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED99E6C
		mov	[ebp+var_28], offset sub_6ED46434
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		cmp	byte ptr [edx+0Ch], 0
		jz	short loc_6ED46360

loc_6ED46348:				; CODE XREF: sub_6ED46310+55j
		mov	[ebp+var_50], 0

loc_6ED4634F:				; CODE XREF: sub_6ED46310+E1j
					; sub_6ED46310+101j ...
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_50]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED46360:				; CODE XREF: sub_6ED46310+36j
		mov	eax, [ebp+arg_4]
		test	eax, eax
		jz	short loc_6ED46348
		cmp	byte ptr [edx+0Dh], 0
		jnz	loc_6ED463F6
		mov	edx, ds:_ZN7QString11shared_nullE
		cmp	[eax+24h], edx
		jz	loc_6ED46416
		lea	edx, [eax+1Ch]
		add	eax, 28h
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+8], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED45F90
		mov	[ebp+var_50], eax
		mov	eax, [ebp+arg_4]
		lock inc dword ptr [eax+4]
		setnz	dl
		mov	eax, [ebp+arg_4]
		mov	eax, [eax+1Ch]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+arg_4]
		mov	[esp+8], eax
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 1
		add	eax, 4
		mov	[esp], eax
		call	sub_6ED92D40
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED94560
		jmp	loc_6ED4634F
; ---------------------------------------------------------------------------

loc_6ED463F6:				; CODE XREF: sub_6ED46310+5Bj
		mov	edx, [edx+8]
		mov	ecx, [edx]
		mov	[esp+4], eax
		mov	[esp], edx
		mov	eax, [ecx+1Ch]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	eax
		mov	[ebp+var_50], eax
		jmp	loc_6ED4634F
; ---------------------------------------------------------------------------

loc_6ED46416:				; CODE XREF: sub_6ED46310+6Aj
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED45D90
		mov	[ebp+var_50], eax
		jmp	loc_6ED4634F
sub_6ED46310	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED46434	proc near		; DATA XREF: sub_6ED46310+1Do
		add	ebp, 8
		mov	edx, [ebp-44h]
		lea	eax, [ebp-0Ch]
		mov	[ebp-54h], edx
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
sub_6ED46434	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 135. _ZN16QDomNamedNodeMap14setNamedItemNSERK8QDomNode

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QDomNamedNodeMap14setNamedItemNSERK8QDomNode
_ZN16QDomNamedNodeMap14setNamedItemNSERK8QDomNode proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED464B0
		mov	edx, [esp+1Ch+arg_8]
		mov	edx, [edx]
		mov	[esp+1Ch+var_1C], eax
		mov	[esp+1Ch+var_18], edx
		call	sub_6ED46310
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED464A1
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED464A1:				; CODE XREF: _ZN16QDomNamedNodeMap14setNamedItemNSERK8QDomNode+28j
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED464B0:				; CODE XREF: _ZN16QDomNamedNodeMap14setNamedItemNSERK8QDomNode+10j
		mov	dword ptr [ebx], 0
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
_ZN16QDomNamedNodeMap14setNamedItemNSERK8QDomNode endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		mov	eax, [esp+10h]
		add	eax, 20h
		mov	[esp+10h], eax
		mov	eax, ds:_ZN7QString6appendERKS_
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h
; Exported entry 232. _ZN17QDomCharacterData10appendDataERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN17QDomCharacterData10appendDataERK7QString
_ZN17QDomCharacterData10appendDataERK7QString proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED46500
		add	eax, 20h
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_ZN7QString6appendERKS_
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_6ED46500:				; CODE XREF: _ZN17QDomCharacterData10appendDataERK7QString+Bj
		add	esp, 0Ch
		retn
_ZN17QDomCharacterData10appendDataERK7QString endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED46510	proc near		; CODE XREF: _ZN17QDomCharacterData10insertDataEmRK7QString+14j

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_8]
		mov	eax, [eax]
		mov	edx, [eax+8]
		mov	[esp+1Ch+var_10], edx
		mov	eax, [eax+0Ch]
		mov	[esp+1Ch+var_14], eax
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [esp+1Ch+arg_0]
		add	eax, 20h
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN7QString6insertEiPK5QChari
		add	esp, 1Ch
		retn
sub_6ED46510	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 234. _ZN17QDomCharacterData10insertDataEmRK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN17QDomCharacterData10insertDataEmRK7QString
_ZN17QDomCharacterData10insertDataEmRK7QString proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED46566
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	short sub_6ED46510
; ---------------------------------------------------------------------------

loc_6ED46566:				; CODE XREF: _ZN17QDomCharacterData10insertDataEmRK7QString+Bj
		add	esp, 0Ch
		retn
_ZN17QDomCharacterData10insertDataEmRK7QString endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED46570	proc near		; CODE XREF: _ZNK16QDomNamedNodeMap4itemEi+1Dp

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		push	esi
		push	ebx
		sub	esp, 10h
		mov	eax, [esp+1Ch+arg_0]
		mov	edi, [esp+1Ch+arg_4]
		mov	esi, [eax+4]
		xor	eax, eax
		mov	ebx, edi
		cmp	edi, [esi+0Ch]
		jnb	short loc_6ED465CD
		mov	ecx, [esi+18h]
		mov	edx, [esi+4]
		test	ecx, ecx
		jz	short loc_6ED465B0
		mov	eax, [edx]
		cmp	esi, eax
		jnz	short loc_6ED465B2
		sub	ecx, 1
		jmp	short loc_6ED465AC
; ---------------------------------------------------------------------------
		align 10h

loc_6ED465A0:				; CODE XREF: sub_6ED46570+3Ej
		add	edx, 4
		sub	ecx, 1
		mov	eax, [edx]
		cmp	esi, eax
		jnz	short loc_6ED465B2

loc_6ED465AC:				; CODE XREF: sub_6ED46570+2Dj
		test	ecx, ecx
		jnz	short loc_6ED465A0

loc_6ED465B0:				; CODE XREF: sub_6ED46570+22j
		mov	eax, esi

loc_6ED465B2:				; CODE XREF: sub_6ED46570+28j
					; sub_6ED46570+3Aj
		cmp	edi, 0
		jle	short loc_6ED465D4
		mov	esi, ds:_ZN9QHashData8nextNodeEPNS_4NodeE
		lea	esi, [esi+0]

loc_6ED465C0:				; CODE XREF: sub_6ED46570+58j
		mov	[esp+1Ch+var_1C], eax
		call	esi
		sub	ebx, 1
		jnz	short loc_6ED465C0

loc_6ED465CA:				; CODE XREF: sub_6ED46570:loc_6ED465D4j
		mov	eax, [eax+0Ch]

loc_6ED465CD:				; CODE XREF: sub_6ED46570+18j
					; sub_6ED46570+7Dj
		add	esp, 10h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_6ED465D4:				; CODE XREF: sub_6ED46570+45j
		jz	short loc_6ED465CA
		mov	esi, ds:_ZN9QHashData12previousNodeEPNS_4NodeE
		lea	esi, [esi+0]

loc_6ED465E0:				; CODE XREF: sub_6ED46570+78j
		mov	[esp+1Ch+var_1C], eax
		call	esi
		add	ebx, 1
		jnz	short loc_6ED465E0
		mov	eax, [eax+0Ch]
		jmp	short loc_6ED465CD
sub_6ED46570	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 451. _ZNK16QDomNamedNodeMap4itemEi

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QDomNamedNodeMap4itemEi
_ZNK16QDomNamedNodeMap4itemEi proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED46628
		mov	edx, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_1C], eax
		mov	[esp+1Ch+var_18], edx
		call	sub_6ED46570
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED4661F
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED4661F:				; CODE XREF: _ZNK16QDomNamedNodeMap4itemEi+26j
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
; ---------------------------------------------------------------------------

loc_6ED46628:				; CODE XREF: _ZNK16QDomNamedNodeMap4itemEi+10j
		mov	dword ptr [ebx], 0
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
_ZNK16QDomNamedNodeMap4itemEi endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED46640	proc near		; CODE XREF: sub_6ED52990+EAp
					; sub_6ED52990+FFp ...

var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_3E		= word ptr -3Eh
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		mov	[ebp+var_44], eax
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_48], edx
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED99E78
		mov	[ebp+var_18], offset sub_6ED4675C
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+var_48]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0
		mov	word ptr [esp+4], 27h
		mov	[esp], edx
		mov	[ebp+var_38], 0FFFFFFFFh
		call	ds:_ZNK7QString7indexOfE5QChariN2Qt15CaseSensitivityE
		mov	edx, [ebp+var_48]
		mov	dword ptr [esp+8], 0
		cmp	eax, 0FFFFFFFFh
		setz	al
		movzx	eax, al
		lea	ecx, [eax+eax*4+22h]
		mov	eax, [edx]
		mov	[ebp+var_3E], cx
		mov	ecx, [ebp+var_44]
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_38], 0FFFFFFFFh
		add	eax, 2
		mov	[esp+4], eax
		call	ds:_ZN7QStringC1EiN2Qt14InitializationE
		mov	eax, [ebp+var_44]
		mov	edx, [eax]
		mov	eax, [edx]
		cmp	eax, 1
		jz	short loc_6ED46750

loc_6ED466E6:				; CODE XREF: sub_6ED46640+118j
		mov	edx, [ebp+var_44]
		mov	[ebp+var_38], 1
		mov	[esp], edx
		call	ds:_ZN7QString7reallocEv
		mov	ecx, [ebp+var_44]
		mov	eax, [ecx]
		mov	eax, [eax+0Ch]

loc_6ED46701:				; CODE XREF: sub_6ED46640+11Aj
		movzx	edx, [ebp+var_3E]
		mov	ecx, [ebp+var_48]
		mov	[eax], dx
		add	eax, 2
		mov	[ebp+var_4C], eax
		mov	eax, [ecx]
		mov	ecx, [ebp+var_4C]
		mov	edx, [eax+8]
		mov	eax, [eax+0Ch]
		mov	[esp], ecx	; void *
		mov	[ebp+var_50], edx
		add	edx, edx
		mov	[esp+8], edx	; size_t
		mov	[esp+4], eax	; void *
		call	memcpy
		mov	eax, [ebp+var_50]
		movzx	ecx, [ebp+var_3E]
		mov	edx, [ebp+var_4C]
		mov	[edx+eax*2], cx
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_44]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED46750:				; CODE XREF: sub_6ED46640+A4j
		mov	eax, [edx+0Ch]
		add	edx, 12h
		cmp	eax, edx
		jnz	short loc_6ED466E6
		jmp	short loc_6ED46701
sub_6ED46640	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4675C	proc near		; DATA XREF: sub_6ED46640+26o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-54h], eax
		mov	[esp+0], edx
		call	sub_6ED94560
		mov	ecx, [ebp-54h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
sub_6ED4675C	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED46790	proc near		; CODE XREF: sub_6ED53070+43p
					; DATA XREF: .rdata:6EDA6DE0o ...

var_1C		= dword	ptr -1Ch
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_C], ebx
		mov	ebx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], esi
		xor	esi, esi
		mov	[esp+1Ch+var_4], edi
		mov	edi, [esp+1Ch+arg_0]
		test	byte ptr [ebx+2Ch], 2
		jz	short loc_6ED467B2
		mov	esi, [ebx+10h]

loc_6ED467B2:				; CODE XREF: sub_6ED46790+1Dj
		cmp	edi, esi
		jz	short loc_6ED467D0

loc_6ED467B6:				; CODE XREF: sub_6ED46790+C0j
		xor	ebx, ebx

loc_6ED467B8:				; CODE XREF: sub_6ED46790+A6j
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_8]
		mov	ebx, [esp+1Ch+var_C]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED467D0:				; CODE XREF: sub_6ED46790+24j
		mov	[esp+1Ch+var_1C], edi
		call	sub_6ED41890
		test	eax, eax
		jz	short loc_6ED467E0
		add	dword ptr [eax+40h], 1

loc_6ED467E0:				; CODE XREF: sub_6ED46790+4Aj
		mov	eax, [ebx+0Ch]
		test	eax, eax
		jz	short loc_6ED46845
		mov	edx, [ebx+8]
		mov	[eax+8], edx
		mov	edx, [ebx+8]
		test	edx, edx
		jz	short loc_6ED467F7

loc_6ED467F4:				; CODE XREF: sub_6ED46790+BAj
		mov	[edx+0Ch], eax

loc_6ED467F7:				; CODE XREF: sub_6ED46790+62j
					; sub_6ED46790+C6j
		cmp	[edi+18h], ebx
		jz	short loc_6ED46840

loc_6ED467FC:				; CODE XREF: sub_6ED46790+B3j
		cmp	[esi+14h], ebx
		jz	short loc_6ED46838

loc_6ED46801:				; CODE XREF: sub_6ED46790+AEj
		movzx	edx, byte ptr [ebx+2Ch]
		xor	eax, eax
		test	dl, 2
		jz	short loc_6ED46818
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED41890
		movzx	edx, byte ptr [ebx+2Ch]

loc_6ED46818:				; CODE XREF: sub_6ED46790+7Aj
		and	edx, 0FFFFFFFDh
		mov	[ebx+10h], eax
		mov	[ebx+2Ch], dl
		mov	dword ptr [ebx+0Ch], 0
		mov	dword ptr [ebx+8], 0
		lock dec dword ptr [ebx+4]
		setnz	al
		jmp	short loc_6ED467B8
; ---------------------------------------------------------------------------

loc_6ED46838:				; CODE XREF: sub_6ED46790+6Fj
		mov	eax, [ebx+0Ch]
		mov	[edi+14h], eax
		jmp	short loc_6ED46801
; ---------------------------------------------------------------------------

loc_6ED46840:				; CODE XREF: sub_6ED46790+6Aj
		mov	[esi+18h], edx
		jmp	short loc_6ED467FC
; ---------------------------------------------------------------------------

loc_6ED46845:				; CODE XREF: sub_6ED46790+55j
		mov	edx, [ebx+8]
		test	edx, edx
		jnz	short loc_6ED467F4
		cmp	[edi+14h], ebx
		nop
		jnz	loc_6ED467B6
		jmp	short loc_6ED467F7
sub_6ED46790	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED46860	proc near		; CODE XREF: sub_6ED57960+4Dp
					; DATA XREF: .rdata:6EDA6DDCo ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 2Ch
		mov	[esp+2Ch+var_C], esi
		mov	esi, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_10], ebx
		mov	ebx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_8], edi
		mov	edi, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_4], ebp
		test	esi, esi
		jnz	short loc_6ED468A0

loc_6ED46883:				; CODE XREF: sub_6ED46860+42j
					; sub_6ED46860+51j ...
		xor	ebx, ebx

loc_6ED46885:				; CODE XREF: sub_6ED46860+7Cj
					; sub_6ED46860+10Ej ...
		mov	eax, ebx
		mov	esi, [esp+2Ch+var_C]
		mov	ebx, [esp+2Ch+var_10]
		mov	edi, [esp+2Ch+var_8]
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED468A0:				; CODE XREF: sub_6ED46860+21j
		test	ebx, ebx
		jz	short loc_6ED46883
		xor	ebp, ebp
		test	byte ptr [esi+2Ch], 2
		jz	short loc_6ED468AF
		mov	ebp, [esi+10h]

loc_6ED468AF:				; CODE XREF: sub_6ED46860+4Aj
		cmp	edi, ebp
		jnz	short loc_6ED46883
		cmp	ebx, esi
		jz	short loc_6ED46883
		mov	[esp+2Ch+var_2C], edi
		call	sub_6ED41890
		test	eax, eax
		jz	short loc_6ED468C7
		add	dword ptr [eax+40h], 1

loc_6ED468C7:				; CODE XREF: sub_6ED46860+61j
		mov	eax, [ebx]
		mov	[esp+2Ch+var_2C], ebx
		call	dword ptr [eax+34h]
		test	al, al
		jz	loc_6ED46973
		mov	eax, [ebx+14h]
		test	eax, eax
		jz	short loc_6ED46885

loc_6ED468DE:				; CODE XREF: sub_6ED46860+8Aj
		or	byte ptr [eax+2Ch], 2
		mov	[eax+10h], edi
		mov	eax, [eax+0Ch]
		test	eax, eax
		jnz	short loc_6ED468DE
		mov	eax, [esi+0Ch]
		test	eax, eax
		jz	loc_6ED46A17
		mov	ecx, [ebx+18h]
		mov	[eax+8], ecx

loc_6ED468FD:				; CODE XREF: sub_6ED46860+1BAj
		mov	edx, [esi+8]
		test	edx, edx
		jz	loc_6ED46A27
		mov	ebp, [ebx+14h]
		mov	[edx+0Ch], ebp
		mov	eax, [esi+0Ch]

loc_6ED46911:				; CODE XREF: sub_6ED46860+1CAj
		cmp	[edi+14h], esi
		mov	[ecx+0Ch], eax
		mov	[ebp+8], edx
		jz	loc_6ED46A1F

loc_6ED46920:				; CODE XREF: sub_6ED46860+1C2j
		cmp	[edi+18h], esi
		jz	loc_6ED46A0F

loc_6ED46929:				; CODE XREF: sub_6ED46860+1B2j
		movzx	edx, byte ptr [esi+2Ch]
		xor	eax, eax
		test	dl, 2
		jz	short loc_6ED46940
		mov	[esp+2Ch+var_2C], esi
		call	sub_6ED41890
		movzx	edx, byte ptr [esi+2Ch]

loc_6ED46940:				; CODE XREF: sub_6ED46860+D2j
		and	edx, 0FFFFFFFDh
		mov	[esi+2Ch], dl
		mov	[esi+10h], eax
		mov	dword ptr [esi+0Ch], 0
		mov	dword ptr [esi+8], 0
		mov	dword ptr [ebx+14h], 0
		mov	dword ptr [ebx+18h], 0
		lock dec dword ptr [esi+4]
		setnz	al
		mov	ebx, esi
		jmp	loc_6ED46885
; ---------------------------------------------------------------------------

loc_6ED46973:				; CODE XREF: sub_6ED46860+71j
		lock inc dword ptr [ebx+4]
		setnz	al
		movzx	eax, byte ptr [ebx+2Ch]
		test	al, 2
		jz	short loc_6ED46999
		mov	edx, [ebx+10h]
		test	edx, edx
		jz	short loc_6ED46999
		mov	eax, [edx]
		mov	[esp+2Ch+var_28], ebx
		mov	[esp+2Ch+var_2C], edx
		call	dword ptr [eax+18h]
		movzx	eax, byte ptr [ebx+2Ch]

loc_6ED46999:				; CODE XREF: sub_6ED46860+120j
					; sub_6ED46860+127j
		or	eax, 2
		mov	[ebx+2Ch], al
		mov	eax, [esi+0Ch]
		mov	[ebx+10h], edi
		test	eax, eax
		jz	short loc_6ED469AC
		mov	[eax+8], ebx

loc_6ED469AC:				; CODE XREF: sub_6ED46860+147j
		mov	edx, [esi+8]
		test	edx, edx
		jz	short loc_6ED469B9
		mov	[edx+0Ch], ebx
		mov	eax, [esi+0Ch]

loc_6ED469B9:				; CODE XREF: sub_6ED46860+151j
		cmp	[edi+14h], esi
		mov	[ebx+0Ch], eax
		mov	[ebx+8], edx
		jz	short loc_6ED46A0A

loc_6ED469C4:				; CODE XREF: sub_6ED46860+1ADj
		cmp	[ebp+18h], esi
		jz	short loc_6ED46A05

loc_6ED469C9:				; CODE XREF: sub_6ED46860+1A8j
		movzx	edx, byte ptr [esi+2Ch]
		xor	eax, eax
		test	dl, 2
		jz	short loc_6ED469E0
		mov	[esp+2Ch+var_2C], esi
		call	sub_6ED41890
		movzx	edx, byte ptr [esi+2Ch]

loc_6ED469E0:				; CODE XREF: sub_6ED46860+172j
		and	edx, 0FFFFFFFDh
		mov	[esi+10h], eax
		mov	[esi+2Ch], dl
		mov	dword ptr [esi+0Ch], 0
		mov	dword ptr [esi+8], 0
		lock dec dword ptr [esi+4]
		setnz	al
		mov	ebx, esi
		jmp	loc_6ED46885
; ---------------------------------------------------------------------------

loc_6ED46A05:				; CODE XREF: sub_6ED46860+167j
		mov	[edi+18h], ebx
		jmp	short loc_6ED469C9
; ---------------------------------------------------------------------------

loc_6ED46A0A:				; CODE XREF: sub_6ED46860+162j
		mov	[ebp+14h], ebx
		jmp	short loc_6ED469C4
; ---------------------------------------------------------------------------

loc_6ED46A0F:				; CODE XREF: sub_6ED46860+C3j
		mov	[edi+18h], ecx
		jmp	loc_6ED46929
; ---------------------------------------------------------------------------

loc_6ED46A17:				; CODE XREF: sub_6ED46860+91j
		mov	ecx, [ebx+18h]
		jmp	loc_6ED468FD
; ---------------------------------------------------------------------------

loc_6ED46A1F:				; CODE XREF: sub_6ED46860+BAj
		mov	[edi+14h], ebp
		jmp	loc_6ED46920
; ---------------------------------------------------------------------------

loc_6ED46A27:				; CODE XREF: sub_6ED46860+A2j
		mov	ebp, [ebx+14h]
		jmp	loc_6ED46911
sub_6ED46860	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED46A30	proc near		; CODE XREF: sub_6ED46C00+3Cp
					; .text:6ED46F5Cp

var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 64h
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED99E90
		mov	[ebp+var_18], offset sub_6ED46BB3
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		cmp	byte ptr [edx+0Dh], 0
		jnz	loc_6ED46AF9
		mov	ecx, [edx+4]
		mov	edx, [ecx+18h]
		mov	eax, [ecx+4]
		test	edx, edx
		jz	short loc_6ED46A9B
		mov	ebx, [eax]
		cmp	ecx, ebx
		mov	[ebp+var_48], ebx
		jnz	short loc_6ED46A9E
		sub	edx, 1
		jmp	short loc_6ED46A97
; ---------------------------------------------------------------------------

loc_6ED46A88:				; CODE XREF: sub_6ED46A30+69j
		add	eax, 4
		sub	edx, 1
		mov	ebx, [eax]
		cmp	ecx, ebx
		mov	[ebp+var_48], ebx
		jnz	short loc_6ED46A9E

loc_6ED46A97:				; CODE XREF: sub_6ED46A30+56j
		test	edx, edx
		jnz	short loc_6ED46A88

loc_6ED46A9B:				; CODE XREF: sub_6ED46A30+48j
		mov	[ebp+var_48], ecx

loc_6ED46A9E:				; CODE XREF: sub_6ED46A30+51j
					; sub_6ED46A30+65j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_48]
		cmp	edx, [eax+4]
		jz	short loc_6ED46AF9
		mov	ebx, ds:_ZN9QHashData8nextNodeEPNS_4NodeE
		mov	[ebp+var_44], ebx

loc_6ED46AB2:				; CODE XREF: sub_6ED46A30+C7j
		mov	edx, [ebp+var_48]
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax+4]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED46ADE
		mov	ebx, [ebp+var_48]
		mov	eax, [ebx+0Ch]
		test	eax, eax
		jz	short loc_6ED46ADE
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 0FFFFFFFFh
		call	eax

loc_6ED46ADE:				; CODE XREF: sub_6ED46A30+91j
					; sub_6ED46A30+9Bj
		mov	eax, [ebp+var_48]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	[ebp+var_44]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_48], eax
		cmp	eax, [edx+4]
		jnz	short loc_6ED46AB2

loc_6ED46AF9:				; CODE XREF: sub_6ED46A30+37j
					; sub_6ED46A30+77j
		mov	ebx, ds:_ZN9QHashData11shared_nullE
		mov	[ebp+var_40], ebx
		lock inc dword ptr [ebx+8]
		setnz	al
		mov	eax, [ebp+arg_0]
		cmp	ebx, [eax+4]
		jz	short loc_6ED46B3D
		lock inc dword ptr [ebx+8]
		setnz	al
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED46B90

loc_6ED46B29:				; CODE XREF: sub_6ED46A30+17Ej
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_40]
		mov	[eax+4], edx
		mov	eax, ds:_ZN9QHashData11shared_nullE
		test	byte ptr [eax+1Ch], 1
		jz	short loc_6ED46B74

loc_6ED46B3D:				; CODE XREF: sub_6ED46A30+DFj
					; sub_6ED46A30+159j
		mov	ebx, [ebp+var_40]
		lock dec dword ptr [ebx+8]
		setnz	al
		test	al, al
		jnz	short loc_6ED46B63
		mov	dword ptr [esp+4], offset sub_6ED92D10
		mov	[esp], ebx
		mov	[ebp+var_38], 0FFFFFFFFh
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_6ED46B63:				; CODE XREF: sub_6ED46A30+119j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 64h
		pop	ebx
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED46B74:				; CODE XREF: sub_6ED46A30+10Bj
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 1
		add	eax, 4
		mov	[esp], eax
		call	sub_6ED92E00
		jmp	short loc_6ED46B3D
; ---------------------------------------------------------------------------
		align 10h

loc_6ED46B90:				; CODE XREF: sub_6ED46A30+F7j
		mov	ebx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED92D10
		mov	eax, [ebx+4]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_6ED46B29
sub_6ED46A30	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED46BB3	proc near		; DATA XREF: sub_6ED46A30+1Eo

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-40h]
		mov	[ebp-4Ch], eax
		lock dec dword ptr [edx+8]
		setnz	al
		test	al, al
		jnz	short loc_6ED46BE2
		mov	[esp+arg_0], offset sub_6ED92D10
		mov	[esp+0], edx
		mov	dword ptr [ebp-38h], 0
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_6ED46BE2:				; CODE XREF: sub_6ED46BB3+15j
		mov	ebx, [ebp-4Ch]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], ebx
		call	_Unwind_SjLj_Resume
sub_6ED46BB3	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED46C00	proc near		; CODE XREF: _ZN16QDomNamedNodeMapD1Ev+21p
					; _ZN16QDomNamedNodeMapD2Ev+21p ...

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED99E96
		mov	[ebp+var_18], offset sub_6ED46C7D
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 1
		mov	[esp], edx
		call	sub_6ED46A30
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED46C70
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED92D10
		mov	eax, [edx+4]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_6ED46C70:				; CODE XREF: sub_6ED46C00+50j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED46C00	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED46C7D	proc near		; DATA XREF: sub_6ED46C00+1Do

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	[ebp-40h], eax
		mov	eax, [edx+4]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED46CB5
		mov	edx, [ebp+8]
		mov	[esp+arg_0], offset sub_6ED92D10
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_6ED46CB5:				; CODE XREF: sub_6ED46C7D+18j
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED46C7D	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 144. _ZN16QDomNamedNodeMapD1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QDomNamedNodeMapD1Ev
_ZN16QDomNamedNodeMapD1Ev proc near

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED46D03
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_6ED46D03
		mov	ebx, [edx]
		test	ebx, ebx
		jz	short loc_6ED46D03
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED46C00
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_6ED988B0
; ---------------------------------------------------------------------------

loc_6ED46D03:				; CODE XREF: _ZN16QDomNamedNodeMapD1Ev+Cj
					; _ZN16QDomNamedNodeMapD1Ev+16j ...
		add	esp, 18h
		pop	ebx
		retn
_ZN16QDomNamedNodeMapD1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 145. _ZN16QDomNamedNodeMapD2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QDomNamedNodeMapD2Ev
_ZN16QDomNamedNodeMapD2Ev proc near

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED46D43
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_6ED46D43
		mov	ebx, [edx]
		test	ebx, ebx
		jz	short loc_6ED46D43
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED46C00
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_6ED988B0
; ---------------------------------------------------------------------------

loc_6ED46D43:				; CODE XREF: _ZN16QDomNamedNodeMapD2Ev+Cj
					; _ZN16QDomNamedNodeMapD2Ev+16j ...
		add	esp, 18h
		pop	ebx
		retn
_ZN16QDomNamedNodeMapD2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 146. _ZN16QDomNamedNodeMapaSERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QDomNamedNodeMapaSERKS_
_ZN16QDomNamedNodeMapaSERKS_ proc near

var_1C		= dword	ptr -1Ch
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_C], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_4], edi
		mov	edx, [esi]
		test	edx, edx
		jz	short loc_6ED46D73
		lock inc dword ptr [edx]
		setnz	al

loc_6ED46D73:				; CODE XREF: _ZN16QDomNamedNodeMapaSERKS_+1Bj
		mov	edx, [ebx]
		test	edx, edx
		jz	short loc_6ED46D99
		lock dec dword ptr [edx]
		setnz	al
		test	al, al
		jnz	short loc_6ED46D99
		mov	edi, [ebx]
		test	edi, edi
		jz	short loc_6ED46D99
		mov	[esp+1Ch+var_1C], edi
		call	sub_6ED46C00
		mov	[esp+1Ch+var_1C], edi
		call	sub_6ED988B0

loc_6ED46D99:				; CODE XREF: _ZN16QDomNamedNodeMapaSERKS_+27j
					; _ZN16QDomNamedNodeMapaSERKS_+31j ...
		mov	eax, [esi]
		mov	[ebx], eax
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_8]
		mov	ebx, [esp+1Ch+var_C]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
_ZN16QDomNamedNodeMapaSERKS_ endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED46DB0	proc near		; CODE XREF: sub_6ED4B010+74p
					; .text:6ED4B5D4p

var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 54h
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED99E9C
		mov	[ebp+var_18], offset sub_6ED46EE1
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 10h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_44], eax
		mov	dword ptr [eax], 0
		mov	eax, ds:_ZN9QHashData11shared_nullE
		mov	edx, [ebp+var_44]
		mov	[edx+4], eax
		lock inc dword ptr [eax+8]
		setnz	dl
		mov	ebx, [ebp+var_44]
		mov	dword ptr [ebx], 1
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		mov	byte ptr [ebx+0Ch], 0
		mov	byte ptr [ebx+0Dh], 0
		mov	ecx, [edx+4]
		mov	[ebx+8], eax
		movzx	eax, byte ptr [edx+0Ch]
		mov	[ebx+0Ch], al
		movzx	eax, byte ptr [edx+0Dh]
		mov	edx, [ecx+18h]
		mov	[ebx+0Dh], al
		mov	eax, [ecx+4]
		test	edx, edx
		jz	short loc_6ED46E64
		mov	ebx, [eax]
		cmp	ecx, ebx
		mov	[ebp+var_40], ebx
		jnz	short loc_6ED46EB9
		sub	edx, 1
		jmp	short loc_6ED46E60
; ---------------------------------------------------------------------------

loc_6ED46E51:				; CODE XREF: sub_6ED46DB0+B2j
		add	eax, 4
		sub	edx, 1
		mov	ebx, [eax]
		cmp	ecx, ebx
		mov	[ebp+var_40], ebx
		jnz	short loc_6ED46EB9

loc_6ED46E60:				; CODE XREF: sub_6ED46DB0+9Fj
		test	edx, edx
		jnz	short loc_6ED46E51

loc_6ED46E64:				; CODE XREF: sub_6ED46DB0+91j
		mov	ebx, [ebp+arg_0]
		mov	[ebp+var_40], ecx
		mov	eax, [ebp+var_40]
		cmp	[ebx+4], eax
		jz	short loc_6ED46EC4

loc_6ED46E72:				; CODE XREF: sub_6ED46DB0+112j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+0Ch]
		mov	edx, [eax]
		mov	dword ptr [esp+4], 1
		mov	[esp], eax
		mov	eax, [edx+20h]
		mov	[ebp+var_38], 1
		call	eax
		mov	ebx, [ebp+arg_4]
		or	byte ptr [eax+2Ch], 2
		mov	[eax+10h], ebx
		mov	[esp+4], eax
		mov	eax, [ebp+var_44]
		mov	[esp], eax
		call	sub_6ED45D90
		mov	edx, [ebp+var_40]
		mov	[esp], edx
		call	ds:_ZN9QHashData8nextNodeEPNS_4NodeE
		mov	[ebp+var_40], eax

loc_6ED46EB9:				; CODE XREF: sub_6ED46DB0+9Aj
					; sub_6ED46DB0+AEj
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebp+var_40]
		cmp	[ebx+4], eax
		jnz	short loc_6ED46E72

loc_6ED46EC4:				; CODE XREF: sub_6ED46DB0+C0j
		mov	edx, [ebp+var_44]
		lock dec dword ptr [edx]
		setnz	al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_44]
		add	esp, 54h
		pop	ebx
		pop	ebp
		retn
sub_6ED46DB0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED46EE1	proc near		; DATA XREF: sub_6ED46DB0+21o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	ebx, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED46C00
		mov	edx, [ebp-44h]
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	[esp+0], ebx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED46EE1	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	dword ptr [ebp-24h], offset sub_6ED997C0
		mov	dword ptr [ebp-20h], offset word_6ED99EA2
		mov	dword ptr [ebp-18h], offset loc_6ED46F9D
		mov	[ebp-14h], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 1
		mov	[esp], edx
		call	sub_6ED46A30
		mov	edx, [ebp+8]
		mov	eax, [edx+4]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED46F90
		mov	edx, [ebp+8]
		mov	dword ptr [esp+4], offset sub_6ED92D10
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_6ED46F90:				; CODE XREF: .text:6ED46F70j
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED46F9D:				; DATA XREF: .text:6ED46F3Do
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	[ebp-40h], eax
		mov	eax, [edx+4]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED46FD5
		mov	edx, [ebp+8]
		mov	dword ptr [esp+4], offset sub_6ED92D10
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_6ED46FD5:				; CODE XREF: .text:6ED46FB5j
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED46FF0	proc near		; DATA XREF: .rdata:6EDA6DECo
					; .rdata:6EDA6E6Co ...

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED99EA8
		mov	[ebp+var_28], offset sub_6ED4711E
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+14h]
		test	edx, edx
		mov	[ebp+var_50], edx
		jz	loc_6ED470FE
		mov	[ebp+var_58], 0
		jmp	loc_6ED470CB
; ---------------------------------------------------------------------------
		align 10h

loc_6ED47040:				; CODE XREF: sub_6ED46FF0+F1j
		mov	edx, [ebp+var_58]
		test	edx, edx
		jz	loc_6ED47110
		mov	eax, [ebp+var_50]
		mov	edx, [ebp+var_50]
		mov	eax, [eax+0Ch]
		mov	[ebp+var_54], eax
		mov	eax, [edx+20h]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_58]
		mov	[ebp+var_48], 1
		add	eax, 20h
		mov	[esp], eax
		call	ds:_ZN7QString6appendERKS_
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED470A0
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED470A0:				; CODE XREF: sub_6ED46FF0+9Bj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	edx, [ebp+var_50]
		mov	[esp+4], edx
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		mov	eax, [eax+18h]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	eax

loc_6ED470BE:				; CODE XREF: sub_6ED46FF0+12Cj
		mov	eax, [ebp+var_54]
		test	eax, eax
		jz	short loc_6ED470FE

loc_6ED470C5:				; CODE XREF: sub_6ED46FF0+10Cj
		mov	edx, [ebp+var_54]
		mov	[ebp+var_50], edx

loc_6ED470CB:				; CODE XREF: sub_6ED46FF0+47j
		mov	edx, [ebp+var_50]
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+48h]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	eax
		test	al, al
		jnz	loc_6ED47040
		mov	eax, [ebp+var_50]
		mov	[ebp+var_58], 0
		mov	eax, [eax+0Ch]
		mov	[ebp+var_54], eax
		mov	eax, [ebp+var_54]
		test	eax, eax
		jnz	short loc_6ED470C5

loc_6ED470FE:				; CODE XREF: sub_6ED46FF0+3Aj
					; sub_6ED46FF0+D3j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED47110:				; CODE XREF: sub_6ED46FF0+55j
		mov	eax, [ebp+var_50]
		mov	edx, [eax+0Ch]
		mov	[ebp+var_58], eax
		mov	[ebp+var_54], edx
		jmp	short loc_6ED470BE
sub_6ED46FF0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4711E	proc near		; DATA XREF: sub_6ED46FF0+1Do
		add	ebp, 8
		mov	edx, [ebp-44h]
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	[ebp-5Ch], edx
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED4711E	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED47150	proc near		; CODE XREF: sub_6ED47260+15p
					; _ZN16QDomNamedNodeMap17removeNamedItemNSERK7QStringS2_+3Bp ...

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED99EC0
		mov	[ebp+var_28], offset sub_6ED4722A
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_50], 0
		cmp	byte ptr [edx+0Ch], 0
		jz	short loc_6ED471A0

loc_6ED4718F:				; CODE XREF: sub_6ED47150+6Bj
					; sub_6ED47150+BDj ...
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_50]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED471A0:				; CODE XREF: sub_6ED47150+3Dj
		mov	eax, [ebp+arg_4]
		mov	[esp], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_6ED45BD0
		test	eax, eax
		mov	[ebp+var_50], eax
		jz	short loc_6ED4718F
		mov	eax, [ebp+arg_0]
		cmp	byte ptr [eax+0Dh], 0
		jnz	short loc_6ED47210
		mov	edx, [ebp+var_50]
		mov	eax, [edx+1Ch]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 1
		add	eax, 4
		mov	[esp], eax
		call	sub_6ED92EA0
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED94560
		mov	edx, [ebp+var_50]
		lock dec dword ptr [edx+4]
		setnz	al
		jmp	short loc_6ED4718F
; ---------------------------------------------------------------------------
		align 10h

loc_6ED47210:				; CODE XREF: sub_6ED47150+74j
		mov	eax, [eax+8]
		mov	ecx, [ebp+var_50]
		mov	edx, [eax]
		mov	[esp+4], ecx
		mov	[esp], eax
		call	dword ptr [edx+18h]
		mov	[ebp+var_50], eax
		jmp	loc_6ED4718F
sub_6ED47150	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4722A	proc near		; DATA XREF: sub_6ED47150+1Do
		add	ebp, 8
		mov	ecx, [ebp-44h]
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	[ebp-54h], ecx
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED4722A	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED47260	proc near		; CODE XREF: _ZN11QDomElement15removeAttributeERK7QString+14j
					; _ZN11QDomElement17removeAttributeNSERK7QStringS2_+7Ep

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [esp+1Ch+arg_0]
		mov	eax, [eax+38h]
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED47150
		test	eax, eax
		jz	short loc_6ED47293
		mov	edx, [eax+4]
		test	edx, edx
		jnz	short loc_6ED47293
		mov	edx, [eax]
		mov	[esp+1Ch+arg_0], eax
		mov	eax, [edx+4]
		add	esp, 1Ch
		jmp	eax
; ---------------------------------------------------------------------------

loc_6ED47293:				; CODE XREF: sub_6ED47260+1Cj
					; sub_6ED47260+23j
		add	esp, 1Ch
		retn
sub_6ED47260	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  29. _ZN11QDomElement15removeAttributeERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN11QDomElement15removeAttributeERK7QString
_ZN11QDomElement15removeAttributeERK7QString proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED472B6
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	short sub_6ED47260
; ---------------------------------------------------------------------------

loc_6ED472B6:				; CODE XREF: _ZN11QDomElement15removeAttributeERK7QString+Bj
		add	esp, 0Ch
		retn
_ZN11QDomElement15removeAttributeERK7QString endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 137. _ZN16QDomNamedNodeMap17removeNamedItemNSERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QDomNamedNodeMap17removeNamedItemNSERK7QStringS2_
_ZN16QDomNamedNodeMap17removeNamedItemNSERK7QStringS2_ proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	esi
		push	ebx
		sub	esp, 14h
		mov	esi, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_6ED47317
		mov	edx, [esp+1Ch+arg_C]
		mov	[esp+1Ch+var_1C], eax
		mov	[esp+1Ch+var_14], edx
		mov	edx, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_18], edx
		call	sub_6ED45F90
		test	eax, eax
		jz	short loc_6ED47317
		add	eax, 1Ch
		mov	[esp+1Ch+var_18], eax
		mov	eax, [esi]
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED47150
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED4730D
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED4730D:				; CODE XREF: _ZN16QDomNamedNodeMap17removeNamedItemNSERK7QStringS2_+44j
		mov	eax, ebx
		add	esp, 14h
		pop	ebx
		pop	esi
		retn	4
; ---------------------------------------------------------------------------

loc_6ED47317:				; CODE XREF: _ZN16QDomNamedNodeMap17removeNamedItemNSERK7QStringS2_+11j
					; _ZN16QDomNamedNodeMap17removeNamedItemNSERK7QStringS2_+2Dj
		mov	dword ptr [ebx], 0
		mov	eax, ebx
		add	esp, 14h
		pop	ebx
		pop	esi
		retn	4
_ZN16QDomNamedNodeMap17removeNamedItemNSERK7QStringS2_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 136. _ZN16QDomNamedNodeMap15removeNamedItemERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QDomNamedNodeMap15removeNamedItemERK7QString
_ZN16QDomNamedNodeMap15removeNamedItemERK7QString proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED47368
		mov	edx, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_1C], eax
		mov	[esp+1Ch+var_18], edx
		call	sub_6ED47150
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED4735F
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED4735F:				; CODE XREF: _ZN16QDomNamedNodeMap15removeNamedItemERK7QString+26j
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
; ---------------------------------------------------------------------------

loc_6ED47368:				; CODE XREF: _ZN16QDomNamedNodeMap15removeNamedItemERK7QString+10j
		mov	dword ptr [ebx], 0
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
_ZN16QDomNamedNodeMap15removeNamedItemERK7QString endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 561. _ZNK8QDomNode22previousSiblingElementERK7QString

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZNK8QDomNode22previousSiblingElementERK7QString
_ZNK8QDomNode22previousSiblingElementERK7QString proc near

var_55		= byte ptr -55h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED99ED0
		mov	[ebp+var_28], offset sub_6ED4756F
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		test	eax, eax
		jz	loc_6ED47563
		mov	edx, [eax+8]
		xor	eax, eax
		test	edx, edx
		mov	[ebp+var_C], edx
		jz	short loc_6ED473D2
		lock inc dword ptr [edx+4]
		setnz	al
		mov	eax, [ebp+var_C]

loc_6ED473D2:				; CODE XREF: _ZNK8QDomNode22previousSiblingElementERK7QString+46j
					; _ZNK8QDomNode22previousSiblingElementERK7QString+1EAj
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_54], edx
		mov	[ebp+var_50], edx
		jmp	short loc_6ED4742A
; ---------------------------------------------------------------------------

loc_6ED473E0:				; CODE XREF: _ZNK8QDomNode22previousSiblingElementERK7QString+C6j
					; _ZNK8QDomNode22previousSiblingElementERK7QString+18Aj
		mov	eax, [ebp+var_C]
		test	eax, eax
		jz	loc_6ED474A5
		mov	eax, [eax+8]
		test	eax, eax
		mov	[ebp+var_10], eax
		jz	short loc_6ED473FC
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED473FC:				; CODE XREF: _ZNK8QDomNode22previousSiblingElementERK7QString+73j
					; _ZNK8QDomNode22previousSiblingElementERK7QString+12Cj
		lea	eax, [ebp+var_10]
		lea	edx, [ebp+var_C]
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_48], 1
		call	_ZN8QDomNodeaSERKS_
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 4
		call	_ZN8QDomNodeD1Ev
		mov	eax, [ebp+var_C]

loc_6ED4742A:				; CODE XREF: _ZNK8QDomNode22previousSiblingElementERK7QString+5Ej
		test	eax, eax
		jz	loc_6ED47536
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 4
		call	_ZNK8QDomNode9isElementEv
		test	al, al
		jz	short loc_6ED473E0
		lea	edx, [ebp+var_C]
		lea	eax, [ebp+var_14]
		mov	[esp+4], edx
		mov	[esp], eax
		call	_ZNK8QDomNode9toElementEv
		mov	edx, [ebp+arg_8]
		sub	esp, 4
		mov	eax, [edx]
		mov	ecx, [eax+8]
		test	ecx, ecx
		jnz	short loc_6ED474B1

loc_6ED47469:				; CODE XREF: _ZNK8QDomNode22previousSiblingElementERK7QString+172j
		mov	eax, [ebp+var_14]
		mov	edx, [ebp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short loc_6ED4747C
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED4747C:				; CODE XREF: _ZNK8QDomNode22previousSiblingElementERK7QString+F3j
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_48], 4
		call	_ZN8QDomNodeD2Ev
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	_ZN8QDomNodeD1Ev
		jmp	loc_6ED47551
; ---------------------------------------------------------------------------

loc_6ED474A5:				; CODE XREF: _ZNK8QDomNode22previousSiblingElementERK7QString+65j
		mov	[ebp+var_10], 0
		jmp	loc_6ED473FC
; ---------------------------------------------------------------------------

loc_6ED474B1:				; CODE XREF: _ZNK8QDomNode22previousSiblingElementERK7QString+E7j
		mov	eax, [ebp+var_14]
		test	eax, eax
		jz	short loc_6ED47525
		mov	eax, [eax+1Ch]
		mov	[ebp+var_18], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED474C4:				; CODE XREF: _ZNK8QDomNode22previousSiblingElementERK7QString+1B4j
		mov	eax, [ebp+arg_8]
		lea	edx, [ebp+var_18]
		mov	[esp], edx
		mov	[ebp+var_48], 2
		mov	[esp+4], eax
		call	ds:_ZNK7QStringeqERKS_
		mov	[ebp+var_55], al
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED47510

loc_6ED474EE:				; CODE XREF: _ZNK8QDomNode22previousSiblingElementERK7QString+1A3j
		cmp	[ebp+var_55], 0
		jnz	loc_6ED47469
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_48], 4
		call	_ZN8QDomNodeD2Ev
		jmp	loc_6ED473E0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED47510:				; CODE XREF: _ZNK8QDomNode22previousSiblingElementERK7QString+16Cj
		mov	eax, [ebp+var_18]
		mov	[ebp+var_48], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED474EE
; ---------------------------------------------------------------------------

loc_6ED47525:				; CODE XREF: _ZNK8QDomNode22previousSiblingElementERK7QString+136j
		mov	eax, [ebp+var_54]
		mov	edx, [ebp+var_50]
		mov	[ebp+var_18], eax
		lock inc dword ptr [edx]
		setnz	al
		jmp	short loc_6ED474C4
; ---------------------------------------------------------------------------

loc_6ED47536:				; CODE XREF: _ZNK8QDomNode22previousSiblingElementERK7QString+ACj
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	_ZN8QDomNodeD1Ev
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], 0

loc_6ED47551:				; CODE XREF: _ZNK8QDomNode22previousSiblingElementERK7QString+120j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------

loc_6ED47563:				; CODE XREF: _ZNK8QDomNode22previousSiblingElementERK7QString+36j
		mov	[ebp+var_C], 0
		jmp	loc_6ED473D2
_ZNK8QDomNode22previousSiblingElementERK7QString endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4756F	proc near		; DATA XREF: _ZNK8QDomNode22previousSiblingElementERK7QString+20o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-5Ch], edx
		jz	short loc_6ED475C0
		cmp	eax, 2
		jz	short loc_6ED475D2
		cmp	eax, 3
		jz	short loc_6ED4759C
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	_ZN8QDomNodeD1Ev

loc_6ED4759C:				; CODE XREF: sub_6ED4756F+19j
					; sub_6ED4756F+75j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	_ZN8QDomNodeD1Ev
		mov	eax, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED475C0:				; CODE XREF: sub_6ED4756F+Fj
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED475D2:				; CODE XREF: sub_6ED4756F+14j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	_ZN8QDomNodeD2Ev
		jmp	short loc_6ED4759C
sub_6ED4756F	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 559. _ZNK8QDomNode18nextSiblingElementERK7QString

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZNK8QDomNode18nextSiblingElementERK7QString
_ZNK8QDomNode18nextSiblingElementERK7QString proc near

var_55		= byte ptr -55h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED99EDC
		mov	[ebp+var_28], offset sub_6ED477DF
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		test	eax, eax
		jz	loc_6ED477D3
		mov	edx, [eax+0Ch]
		xor	eax, eax
		test	edx, edx
		mov	[ebp+var_C], edx
		jz	short loc_6ED47642
		lock inc dword ptr [edx+4]
		setnz	al
		mov	eax, [ebp+var_C]

loc_6ED47642:				; CODE XREF: _ZNK8QDomNode18nextSiblingElementERK7QString+46j
					; _ZNK8QDomNode18nextSiblingElementERK7QString+1EAj
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_54], edx
		mov	[ebp+var_50], edx
		jmp	short loc_6ED4769A
; ---------------------------------------------------------------------------

loc_6ED47650:				; CODE XREF: _ZNK8QDomNode18nextSiblingElementERK7QString+C6j
					; _ZNK8QDomNode18nextSiblingElementERK7QString+18Aj
		mov	eax, [ebp+var_C]
		test	eax, eax
		jz	loc_6ED47715
		mov	eax, [eax+0Ch]
		test	eax, eax
		mov	[ebp+var_10], eax
		jz	short loc_6ED4766C
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED4766C:				; CODE XREF: _ZNK8QDomNode18nextSiblingElementERK7QString+73j
					; _ZNK8QDomNode18nextSiblingElementERK7QString+12Cj
		lea	eax, [ebp+var_10]
		lea	edx, [ebp+var_C]
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_48], 1
		call	_ZN8QDomNodeaSERKS_
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 4
		call	_ZN8QDomNodeD1Ev
		mov	eax, [ebp+var_C]

loc_6ED4769A:				; CODE XREF: _ZNK8QDomNode18nextSiblingElementERK7QString+5Ej
		test	eax, eax
		jz	loc_6ED477A6
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 4
		call	_ZNK8QDomNode9isElementEv
		test	al, al
		jz	short loc_6ED47650
		lea	edx, [ebp+var_C]
		lea	eax, [ebp+var_14]
		mov	[esp+4], edx
		mov	[esp], eax
		call	_ZNK8QDomNode9toElementEv
		mov	edx, [ebp+arg_8]
		sub	esp, 4
		mov	eax, [edx]
		mov	eax, [eax+8]
		test	eax, eax
		jnz	short loc_6ED47721

loc_6ED476D9:				; CODE XREF: _ZNK8QDomNode18nextSiblingElementERK7QString+172j
		mov	eax, [ebp+var_14]
		mov	edx, [ebp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short loc_6ED476EC
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED476EC:				; CODE XREF: _ZNK8QDomNode18nextSiblingElementERK7QString+F3j
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_48], 4
		call	_ZN8QDomNodeD2Ev
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	_ZN8QDomNodeD1Ev
		jmp	loc_6ED477C1
; ---------------------------------------------------------------------------

loc_6ED47715:				; CODE XREF: _ZNK8QDomNode18nextSiblingElementERK7QString+65j
		mov	[ebp+var_10], 0
		jmp	loc_6ED4766C
; ---------------------------------------------------------------------------

loc_6ED47721:				; CODE XREF: _ZNK8QDomNode18nextSiblingElementERK7QString+E7j
		mov	eax, [ebp+var_14]
		test	eax, eax
		jz	short loc_6ED47795
		mov	eax, [eax+1Ch]
		mov	[ebp+var_18], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED47734:				; CODE XREF: _ZNK8QDomNode18nextSiblingElementERK7QString+1B4j
		mov	eax, [ebp+arg_8]
		lea	edx, [ebp+var_18]
		mov	[esp], edx
		mov	[ebp+var_48], 2
		mov	[esp+4], eax
		call	ds:_ZNK7QStringeqERKS_
		mov	[ebp+var_55], al
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED47780

loc_6ED4775E:				; CODE XREF: _ZNK8QDomNode18nextSiblingElementERK7QString+1A3j
		cmp	[ebp+var_55], 0
		jnz	loc_6ED476D9
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_48], 4
		call	_ZN8QDomNodeD2Ev
		jmp	loc_6ED47650
; ---------------------------------------------------------------------------
		align 10h

loc_6ED47780:				; CODE XREF: _ZNK8QDomNode18nextSiblingElementERK7QString+16Cj
		mov	eax, [ebp+var_18]
		mov	[ebp+var_48], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED4775E
; ---------------------------------------------------------------------------

loc_6ED47795:				; CODE XREF: _ZNK8QDomNode18nextSiblingElementERK7QString+136j
		mov	eax, [ebp+var_54]
		mov	edx, [ebp+var_50]
		mov	[ebp+var_18], eax
		lock inc dword ptr [edx]
		setnz	al
		jmp	short loc_6ED47734
; ---------------------------------------------------------------------------

loc_6ED477A6:				; CODE XREF: _ZNK8QDomNode18nextSiblingElementERK7QString+ACj
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	_ZN8QDomNodeD1Ev
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], 0

loc_6ED477C1:				; CODE XREF: _ZNK8QDomNode18nextSiblingElementERK7QString+120j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------

loc_6ED477D3:				; CODE XREF: _ZNK8QDomNode18nextSiblingElementERK7QString+36j
		mov	[ebp+var_C], 0
		jmp	loc_6ED47642
_ZNK8QDomNode18nextSiblingElementERK7QString endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED477DF	proc near		; DATA XREF: _ZNK8QDomNode18nextSiblingElementERK7QString+20o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-5Ch], edx
		jz	short loc_6ED47830
		cmp	eax, 2
		jz	short loc_6ED47842
		cmp	eax, 3
		jz	short loc_6ED4780C
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	_ZN8QDomNodeD1Ev

loc_6ED4780C:				; CODE XREF: sub_6ED477DF+19j
					; sub_6ED477DF+75j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	_ZN8QDomNodeD1Ev
		mov	eax, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED47830:				; CODE XREF: sub_6ED477DF+Fj
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED47842:				; CODE XREF: sub_6ED477DF+14j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	_ZN8QDomNodeD2Ev
		jmp	short loc_6ED4780C
sub_6ED477DF	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 554. _ZNK8QDomNode16lastChildElementERK7QString

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZNK8QDomNode16lastChildElementERK7QString
_ZNK8QDomNode16lastChildElementERK7QString proc	near

var_55		= byte ptr -55h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED99EE8
		mov	[ebp+var_28], offset sub_6ED47A4F
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		test	eax, eax
		jz	loc_6ED47A43
		mov	edx, [eax+18h]
		xor	eax, eax
		test	edx, edx
		mov	[ebp+var_C], edx
		jz	short loc_6ED478B2
		lock inc dword ptr [edx+4]
		setnz	al
		mov	eax, [ebp+var_C]

loc_6ED478B2:				; CODE XREF: _ZNK8QDomNode16lastChildElementERK7QString+46j
					; _ZNK8QDomNode16lastChildElementERK7QString+1EAj
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_54], edx
		mov	[ebp+var_50], edx
		jmp	short loc_6ED4790A
; ---------------------------------------------------------------------------

loc_6ED478C0:				; CODE XREF: _ZNK8QDomNode16lastChildElementERK7QString+C6j
					; _ZNK8QDomNode16lastChildElementERK7QString+18Aj
		mov	eax, [ebp+var_C]
		test	eax, eax
		jz	loc_6ED47985
		mov	eax, [eax+8]
		test	eax, eax
		mov	[ebp+var_10], eax
		jz	short loc_6ED478DC
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED478DC:				; CODE XREF: _ZNK8QDomNode16lastChildElementERK7QString+73j
					; _ZNK8QDomNode16lastChildElementERK7QString+12Cj
		lea	eax, [ebp+var_10]
		lea	edx, [ebp+var_C]
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_48], 1
		call	_ZN8QDomNodeaSERKS_
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 4
		call	_ZN8QDomNodeD1Ev
		mov	eax, [ebp+var_C]

loc_6ED4790A:				; CODE XREF: _ZNK8QDomNode16lastChildElementERK7QString+5Ej
		test	eax, eax
		jz	loc_6ED47A16
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 4
		call	_ZNK8QDomNode9isElementEv
		test	al, al
		jz	short loc_6ED478C0
		lea	edx, [ebp+var_C]
		lea	eax, [ebp+var_14]
		mov	[esp+4], edx
		mov	[esp], eax
		call	_ZNK8QDomNode9toElementEv
		mov	edx, [ebp+arg_8]
		sub	esp, 4
		mov	eax, [edx]
		mov	edx, [eax+8]
		test	edx, edx
		jnz	short loc_6ED47991

loc_6ED47949:				; CODE XREF: _ZNK8QDomNode16lastChildElementERK7QString+172j
		mov	eax, [ebp+var_14]
		mov	edx, [ebp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short loc_6ED4795C
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED4795C:				; CODE XREF: _ZNK8QDomNode16lastChildElementERK7QString+F3j
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_48], 4
		call	_ZN8QDomNodeD2Ev
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	_ZN8QDomNodeD1Ev
		jmp	loc_6ED47A31
; ---------------------------------------------------------------------------

loc_6ED47985:				; CODE XREF: _ZNK8QDomNode16lastChildElementERK7QString+65j
		mov	[ebp+var_10], 0
		jmp	loc_6ED478DC
; ---------------------------------------------------------------------------

loc_6ED47991:				; CODE XREF: _ZNK8QDomNode16lastChildElementERK7QString+E7j
		mov	eax, [ebp+var_14]
		test	eax, eax
		jz	short loc_6ED47A05
		mov	eax, [eax+1Ch]
		mov	[ebp+var_18], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED479A4:				; CODE XREF: _ZNK8QDomNode16lastChildElementERK7QString+1B4j
		mov	eax, [ebp+arg_8]
		lea	edx, [ebp+var_18]
		mov	[esp], edx
		mov	[ebp+var_48], 2
		mov	[esp+4], eax
		call	ds:_ZNK7QStringeqERKS_
		mov	[ebp+var_55], al
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED479F0

loc_6ED479CE:				; CODE XREF: _ZNK8QDomNode16lastChildElementERK7QString+1A3j
		cmp	[ebp+var_55], 0
		jnz	loc_6ED47949
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_48], 4
		call	_ZN8QDomNodeD2Ev
		jmp	loc_6ED478C0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED479F0:				; CODE XREF: _ZNK8QDomNode16lastChildElementERK7QString+16Cj
		mov	eax, [ebp+var_18]
		mov	[ebp+var_48], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED479CE
; ---------------------------------------------------------------------------

loc_6ED47A05:				; CODE XREF: _ZNK8QDomNode16lastChildElementERK7QString+136j
		mov	eax, [ebp+var_54]
		mov	edx, [ebp+var_50]
		mov	[ebp+var_18], eax
		lock inc dword ptr [edx]
		setnz	al
		jmp	short loc_6ED479A4
; ---------------------------------------------------------------------------

loc_6ED47A16:				; CODE XREF: _ZNK8QDomNode16lastChildElementERK7QString+ACj
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	_ZN8QDomNodeD1Ev
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], 0

loc_6ED47A31:				; CODE XREF: _ZNK8QDomNode16lastChildElementERK7QString+120j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------

loc_6ED47A43:				; CODE XREF: _ZNK8QDomNode16lastChildElementERK7QString+36j
		mov	[ebp+var_C], 0
		jmp	loc_6ED478B2
_ZNK8QDomNode16lastChildElementERK7QString endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED47A4F	proc near		; DATA XREF: _ZNK8QDomNode16lastChildElementERK7QString+20o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-5Ch], edx
		jz	short loc_6ED47AA0
		cmp	eax, 2
		jz	short loc_6ED47AB2
		cmp	eax, 3
		jz	short loc_6ED47A7C
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	_ZN8QDomNodeD1Ev

loc_6ED47A7C:				; CODE XREF: sub_6ED47A4F+19j
					; sub_6ED47A4F+75j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	_ZN8QDomNodeD1Ev
		mov	eax, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED47AA0:				; CODE XREF: sub_6ED47A4F+Fj
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED47AB2:				; CODE XREF: sub_6ED47A4F+14j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	_ZN8QDomNodeD2Ev
		jmp	short loc_6ED47A7C
sub_6ED47A4F	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 555. _ZNK8QDomNode17firstChildElementERK7QString

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZNK8QDomNode17firstChildElementERK7QString
_ZNK8QDomNode17firstChildElementERK7QString proc near

var_55		= byte ptr -55h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED99EF4
		mov	[ebp+var_28], offset sub_6ED47CBF
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		test	eax, eax
		jz	loc_6ED47CB3
		mov	edx, [eax+14h]
		xor	eax, eax
		test	edx, edx
		mov	[ebp+var_C], edx
		jz	short loc_6ED47B22
		lock inc dword ptr [edx+4]
		setnz	al
		mov	eax, [ebp+var_C]

loc_6ED47B22:				; CODE XREF: _ZNK8QDomNode17firstChildElementERK7QString+46j
					; _ZNK8QDomNode17firstChildElementERK7QString+1EAj
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_54], edx
		mov	[ebp+var_50], edx
		jmp	short loc_6ED47B7A
; ---------------------------------------------------------------------------

loc_6ED47B30:				; CODE XREF: _ZNK8QDomNode17firstChildElementERK7QString+C6j
					; _ZNK8QDomNode17firstChildElementERK7QString+18Aj
		mov	eax, [ebp+var_C]
		test	eax, eax
		jz	loc_6ED47BF5
		mov	eax, [eax+0Ch]
		test	eax, eax
		mov	[ebp+var_10], eax
		jz	short loc_6ED47B4C
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED47B4C:				; CODE XREF: _ZNK8QDomNode17firstChildElementERK7QString+73j
					; _ZNK8QDomNode17firstChildElementERK7QString+12Cj
		lea	eax, [ebp+var_10]
		lea	edx, [ebp+var_C]
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_48], 1
		call	_ZN8QDomNodeaSERKS_
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 4
		call	_ZN8QDomNodeD1Ev
		mov	eax, [ebp+var_C]

loc_6ED47B7A:				; CODE XREF: _ZNK8QDomNode17firstChildElementERK7QString+5Ej
		test	eax, eax
		jz	loc_6ED47C86
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 4
		call	_ZNK8QDomNode9isElementEv
		test	al, al
		jz	short loc_6ED47B30
		lea	edx, [ebp+var_C]
		lea	eax, [ebp+var_14]
		mov	[esp+4], edx
		mov	[esp], eax
		call	_ZNK8QDomNode9toElementEv
		mov	edx, [ebp+arg_8]
		sub	esp, 4
		mov	eax, [edx]
		mov	ecx, [eax+8]
		test	ecx, ecx
		jnz	short loc_6ED47C01

loc_6ED47BB9:				; CODE XREF: _ZNK8QDomNode17firstChildElementERK7QString+172j
		mov	eax, [ebp+var_14]
		mov	edx, [ebp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short loc_6ED47BCC
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED47BCC:				; CODE XREF: _ZNK8QDomNode17firstChildElementERK7QString+F3j
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_48], 4
		call	_ZN8QDomNodeD2Ev
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	_ZN8QDomNodeD1Ev
		jmp	loc_6ED47CA1
; ---------------------------------------------------------------------------

loc_6ED47BF5:				; CODE XREF: _ZNK8QDomNode17firstChildElementERK7QString+65j
		mov	[ebp+var_10], 0
		jmp	loc_6ED47B4C
; ---------------------------------------------------------------------------

loc_6ED47C01:				; CODE XREF: _ZNK8QDomNode17firstChildElementERK7QString+E7j
		mov	eax, [ebp+var_14]
		test	eax, eax
		jz	short loc_6ED47C75
		mov	eax, [eax+1Ch]
		mov	[ebp+var_18], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED47C14:				; CODE XREF: _ZNK8QDomNode17firstChildElementERK7QString+1B4j
		mov	eax, [ebp+arg_8]
		lea	edx, [ebp+var_18]
		mov	[esp], edx
		mov	[ebp+var_48], 2
		mov	[esp+4], eax
		call	ds:_ZNK7QStringeqERKS_
		mov	[ebp+var_55], al
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED47C60

loc_6ED47C3E:				; CODE XREF: _ZNK8QDomNode17firstChildElementERK7QString+1A3j
		cmp	[ebp+var_55], 0
		jnz	loc_6ED47BB9
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_48], 4
		call	_ZN8QDomNodeD2Ev
		jmp	loc_6ED47B30
; ---------------------------------------------------------------------------
		align 10h

loc_6ED47C60:				; CODE XREF: _ZNK8QDomNode17firstChildElementERK7QString+16Cj
		mov	eax, [ebp+var_18]
		mov	[ebp+var_48], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED47C3E
; ---------------------------------------------------------------------------

loc_6ED47C75:				; CODE XREF: _ZNK8QDomNode17firstChildElementERK7QString+136j
		mov	eax, [ebp+var_54]
		mov	edx, [ebp+var_50]
		mov	[ebp+var_18], eax
		lock inc dword ptr [edx]
		setnz	al
		jmp	short loc_6ED47C14
; ---------------------------------------------------------------------------

loc_6ED47C86:				; CODE XREF: _ZNK8QDomNode17firstChildElementERK7QString+ACj
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	_ZN8QDomNodeD1Ev
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], 0

loc_6ED47CA1:				; CODE XREF: _ZNK8QDomNode17firstChildElementERK7QString+120j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------

loc_6ED47CB3:				; CODE XREF: _ZNK8QDomNode17firstChildElementERK7QString+36j
		mov	[ebp+var_C], 0
		jmp	loc_6ED47B22
_ZNK8QDomNode17firstChildElementERK7QString endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED47CBF	proc near		; DATA XREF: _ZNK8QDomNode17firstChildElementERK7QString+20o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-5Ch], edx
		jz	short loc_6ED47D10
		cmp	eax, 2
		jz	short loc_6ED47D22
		cmp	eax, 3
		jz	short loc_6ED47CEC
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	_ZN8QDomNodeD1Ev

loc_6ED47CEC:				; CODE XREF: sub_6ED47CBF+19j
					; sub_6ED47CBF+75j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	_ZN8QDomNodeD1Ev
		mov	eax, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED47D10:				; CODE XREF: sub_6ED47CBF+Fj
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED47D22:				; CODE XREF: sub_6ED47CBF+14j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	_ZN8QDomNodeD2Ev
		jmp	short loc_6ED47CEC
sub_6ED47CBF	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED47D40	proc near		; CODE XREF: _ZNK8QDomNode9namedItemERK7QString+1Dp

var_55		= byte ptr -55h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED99F00
		mov	[ebp+var_28], offset sub_6ED47DF3
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+14h]
		test	eax, eax
		mov	[ebp+var_54], eax
		jz	short loc_6ED47DE3
		mov	edx, ds:_ZNK7QStringeqERKS_
		mov	[ebp+var_50], edx
		jmp	short loc_6ED47D94
; ---------------------------------------------------------------------------

loc_6ED47D87:				; CODE XREF: sub_6ED47D40+A1j
		mov	eax, [ebp+var_54]
		mov	eax, [eax+0Ch]
		test	eax, eax
		mov	[ebp+var_54], eax
		jz	short loc_6ED47DE3

loc_6ED47D94:				; CODE XREF: sub_6ED47D40+45j
		mov	edx, [ebp+var_54]
		mov	eax, [edx+1Ch]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_4]
		lea	edx, [ebp+var_C]
		mov	[esp], edx
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		call	[ebp+var_50]
		mov	[ebp+var_55], al
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED47DDD
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED47DDD:				; CODE XREF: sub_6ED47D40+88j
		cmp	[ebp+var_55], 0
		jz	short loc_6ED47D87

loc_6ED47DE3:				; CODE XREF: sub_6ED47D40+3Aj
					; sub_6ED47D40+52j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_54]
		leave
		retn
sub_6ED47D40	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED47DF3	proc near		; DATA XREF: sub_6ED47D40+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-5Ch], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED47DF3	endp

; Exported entry 581. _ZNK8QDomNode9namedItemERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode9namedItemERK7QString
_ZNK8QDomNode9namedItemERK7QString proc	near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED47E58
		mov	edx, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_1C], eax
		mov	[esp+1Ch+var_18], edx
		call	sub_6ED47D40
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED47E4F
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED47E4F:				; CODE XREF: _ZNK8QDomNode9namedItemERK7QString+26j
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
; ---------------------------------------------------------------------------

loc_6ED47E58:				; CODE XREF: _ZNK8QDomNode9namedItemERK7QString+10j
		mov	dword ptr [ebx], 0
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
_ZNK8QDomNode9namedItemERK7QString endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED47E70	proc near		; CODE XREF: sub_6ED47E70+10Fp
					; _ZNK11QDomElement4textEv+19p

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED99F06
		mov	[ebp+var_28], offset sub_6ED47FFD
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	byte_6EDA00BB
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[ebp+var_54], edx
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		mov	eax, [ebp+arg_4]
		mov	eax, [eax+14h]
		test	eax, eax
		mov	[ebp+var_50], eax
		jz	loc_6ED47FD3
		mov	eax, ds:_ZN7QString6appendERKS_
		mov	[ebp+var_58], eax
		jmp	short loc_6ED47F2C
; ---------------------------------------------------------------------------

loc_6ED47EE1:				; CODE XREF: sub_6ED47E70+D2j
					; sub_6ED47E70+E1j
		mov	edx, [ebp+var_50]
		mov	eax, [edx+20h]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+var_54]
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	[ebp+var_48], 2
		mov	[esp], edx
		call	ds:_ZN7QString6appendERKS_
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED47FE5

loc_6ED47F1B:				; CODE XREF: sub_6ED47E70+F9j
					; sub_6ED47E70+139j ...
		mov	eax, [ebp+var_50]
		mov	eax, [eax+0Ch]
		test	eax, eax
		mov	[ebp+var_50], eax
		jz	loc_6ED47FD3

loc_6ED47F2C:				; CODE XREF: sub_6ED47E70+6Fj
					; sub_6ED47E70+15Dj
		mov	edx, [ebp+var_50]
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+48h]
		mov	[ebp+var_48], 3
		call	eax
		test	al, al
		jnz	short loc_6ED47EE1
		mov	edx, [ebp+var_50]
		mov	eax, [edx]
		mov	[esp], edx
		call	dword ptr [eax+30h]
		test	al, al
		jnz	short loc_6ED47EE1
		mov	edx, [ebp+var_50]
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+40h]
		mov	[ebp+var_48], 3
		call	eax
		test	al, al
		jz	short loc_6ED47F1B
		mov	eax, [ebp+var_50]
		lea	edx, [ebp+var_10]
		mov	[esp], edx
		mov	[ebp+var_48], 3
		mov	[esp+4], eax
		call	sub_6ED47E70
		mov	edx, [ebp+var_54]
		sub	esp, 4
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	[ebp+var_48], 1
		mov	[esp], edx
		call	[ebp+var_58]
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED47F1B
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	eax, [ebp+var_50]
		mov	eax, [eax+0Ch]
		test	eax, eax
		mov	[ebp+var_50], eax
		jnz	loc_6ED47F2C

loc_6ED47FD3:				; CODE XREF: sub_6ED47E70+61j
					; sub_6ED47E70+B6j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------

loc_6ED47FE5:				; CODE XREF: sub_6ED47E70+A5j
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED47F1B
sub_6ED47E70	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED47FFD	proc near		; DATA XREF: sub_6ED47E70+20o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-5Ch], edx
		jz	short loc_6ED48049
		cmp	eax, 2
		jz	short loc_6ED48025
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED48025:				; CODE XREF: sub_6ED47FFD+14j
					; sub_6ED47FFD+5Ej
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], edx
		call	sub_6ED94560
		mov	eax, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED48049:				; CODE XREF: sub_6ED47FFD+Fj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		jmp	short loc_6ED48025
sub_6ED47FFD	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 414. _ZNK11QDomElement4textEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK11QDomElement4textEv
_ZNK11QDomElement4textEv proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED48090
		mov	[esp+1Ch+var_18], eax
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED47E70
		mov	eax, ebx
		sub	esp, 4
		add	esp, 18h
		pop	ebx
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED48090:				; CODE XREF: _ZNK11QDomElement4textEv+10j
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
_ZNK11QDomElement4textEv endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED480B0	proc near		; CODE XREF: sub_6ED4C0A0+84p
					; sub_6ED51550+388p ...

var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_8D		= byte ptr -8Dh
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_81		= byte ptr -81h
var_80		= dword	ptr -80h
var_79		= byte ptr -79h
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= byte ptr  8
arg_4		= byte ptr  0Ch
arg_8		= byte ptr  10h

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 0C0h
		mov	[ebp+var_A0], eax
		movzx	eax, [ebp+arg_0]
		lea	ebx, [ebp+var_8]
		mov	[ebp+var_A4], edx
		movzx	edx, [ebp+arg_4]
		mov	[ebp+var_A8], ecx
		movzx	ecx, [ebp+arg_8]
		mov	[ebp+var_54], offset sub_6ED997C0
		mov	[ebp+var_79], al
		lea	eax, [ebp+var_6C]
		mov	[ebp+var_81], dl
		mov	[ebp+var_8D], cl
		mov	[esp], eax
		mov	[ebp+var_50], offset dword_6ED99F10
		mov	[ebp+var_4C], ebx
		mov	[ebp+var_48], offset sub_6ED487D5
		mov	[ebp+var_44], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+var_A8]
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZNK11QTextStream5codecEv
		mov	ecx, [ebp+var_A4]
		mov	edx, [ebp+var_A0]
		mov	[ebp+var_78], edx
		mov	[ebp+var_94], eax
		mov	eax, [ecx]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ebx, [ebp+var_A0]
		mov	edx, [ebx]
		mov	eax, [edx+8]
		test	eax, eax
		mov	[ebp+var_74], eax
		jle	loc_6ED4832F
		mov	[ebp+var_70], 0
		jmp	short loc_6ED481E1
; ---------------------------------------------------------------------------

loc_6ED48165:				; CODE XREF: sub_6ED480B0+163j
					; sub_6ED480B0+170j ...
		cmp	[ebp+var_81], 0
		movzx	ebx, ax
		mov	[ebp+var_80], ebx
		jz	short loc_6ED48196
		cmp	ax, 0Ah
		jz	loc_6ED485A5
		cmp	ax, 0Dh
		jz	loc_6ED485A5
		cmp	ax, 9
		lea	esi, [esi+0]
		jz	loc_6ED485A5

loc_6ED48196:				; CODE XREF: sub_6ED480B0+C2j
		cmp	[ebp+var_8D], 0
		jz	short loc_6ED481A9
		cmp	ax, 0Dh
		jz	loc_6ED48700

loc_6ED481A9:				; CODE XREF: sub_6ED480B0+EDj
		mov	[esp+4], ax
		mov	eax, [ebp+var_94]
		mov	[ebp+var_68], 0Ch
		mov	[esp], eax
		call	ds:_ZNK10QTextCodec9canEncodeE5QChar
		test	al, al
		jz	loc_6ED48448
		add	[ebp+var_70], 1

loc_6ED481D0:				; CODE XREF: sub_6ED480B0+2F4j
					; sub_6ED480B0+376j ...
		mov	ebx, [ebp+var_74]
		cmp	[ebp+var_70], ebx
		jge	loc_6ED4832F

loc_6ED481DC:				; CODE XREF: sub_6ED480B0+279j
		mov	eax, [ebp+var_78]
		mov	edx, [eax]

loc_6ED481E1:				; CODE XREF: sub_6ED480B0+B3j
		mov	ecx, [edx+0Ch]
		mov	ebx, [ebp+var_70]
		movzx	eax, word ptr [ecx+ebx*2]
		cmp	ax, 3Ch
		jz	loc_6ED482C5
		cmp	[ebp+var_79], 0
		jz	short loc_6ED48205
		cmp	ax, 22h
		jz	loc_6ED48347

loc_6ED48205:				; CODE XREF: sub_6ED480B0+149j
		cmp	ax, 26h
		jz	loc_6ED483C5
		cmp	ax, 3Eh
		jnz	loc_6ED48165
		cmp	[ebp+var_70], 1
		lea	esi, [esi+0]
		jle	loc_6ED48165
		mov	ebx, [ebp+var_70]
		mov	esi, [edx+8]
		sub	ebx, 1
		cmp	ebx, esi
		jge	loc_6ED48165
		cmp	word ptr [ecx+ebx*2], 5Dh
		jnz	loc_6ED48165
		mov	edx, [ebp+var_70]
		sub	edx, 2
		cmp	edx, esi
		jge	loc_6ED48165
		cmp	word ptr [ecx+edx*2], 5Dh
		jnz	loc_6ED48165
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aGt ; "&gt;"
		mov	[ebp+var_68], 0Ch
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+var_70]
		mov	ecx, [ebp+var_78]
		mov	[ebp+var_18], eax
		lea	eax, [ebp+var_18]
		mov	[esp+0Ch], eax
		mov	dword ptr [esp+8], 1
		mov	[esp+4], edx
		mov	[esp], ecx
		mov	[ebp+var_68], 8
		call	ds:_ZN7QString7replaceEiiRKS_
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED4831B
		mov	eax, [ebp+var_18]
		mov	[ebp+var_68], 0Ch
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED4831B
; ---------------------------------------------------------------------------

loc_6ED482C5:				; CODE XREF: sub_6ED480B0+13Fj
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aLt ; "&lt;"
		mov	[ebp+var_68], 0Ch
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_C], eax
		lea	eax, [ebp+var_C]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+var_78]
		mov	dword ptr [esp+8], 1
		mov	[esp+4], ebx
		mov	[ebp+var_68], 0Bh
		mov	[esp], eax
		call	ds:_ZN7QString7replaceEiiRKS_
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED48430

loc_6ED4831B:				; CODE XREF: sub_6ED480B0+1FEj
					; sub_6ED480B0+213j ...
		add	[ebp+var_74], 3
		add	[ebp+var_70], 4
		mov	ebx, [ebp+var_74]
		cmp	[ebp+var_70], ebx
		jl	loc_6ED481DC

loc_6ED4832F:				; CODE XREF: sub_6ED480B0+A6j
					; sub_6ED480B0+126j
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_A0]
		lea	esp, [ebp-8]
		pop	ebx
		pop	esi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED48347:				; CODE XREF: sub_6ED480B0+14Fj
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aQuot ;	"&quot;"
		mov	[ebp+var_68], 0Ch
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+var_70]
		mov	ecx, [ebp+var_78]
		mov	[ebp+var_10], eax
		lea	eax, [ebp+var_10]
		mov	[esp+0Ch], eax
		mov	dword ptr [esp+8], 1
		mov	[esp+4], edx
		mov	[esp], ecx
		mov	[ebp+var_68], 0Ah
		call	ds:_ZN7QString7replaceEiiRKS_
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED483B0

loc_6ED4839C:				; CODE XREF: sub_6ED480B0+313j
		add	[ebp+var_74], 5
		add	[ebp+var_70], 6
		jmp	loc_6ED481D0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED483B0:				; CODE XREF: sub_6ED480B0+2EAj
		mov	eax, [ebp+var_10]
		mov	[ebp+var_68], 0Ch
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED4839C
; ---------------------------------------------------------------------------

loc_6ED483C5:				; CODE XREF: sub_6ED480B0+159j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aAmp ; "&amp;"
		mov	[ebp+var_68], 0Ch
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_14], eax
		lea	eax, [ebp+var_14]
		mov	ebx, [ebp+var_70]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+var_78]
		mov	dword ptr [esp+8], 1
		mov	[ebp+var_68], 9
		mov	[esp+4], ebx
		mov	[esp], eax
		call	ds:_ZN7QString7replaceEiiRKS_
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED48771

loc_6ED4841E:				; CODE XREF: sub_6ED480B0+6A3j
					; sub_6ED480B0+6BCj ...
		add	[ebp+var_74], 4
		add	[ebp+var_70], 5
		jmp	loc_6ED481D0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED48430:				; CODE XREF: sub_6ED480B0+265j
		mov	eax, [ebp+var_C]
		mov	[ebp+var_68], 0Ch
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED4831B
; ---------------------------------------------------------------------------

loc_6ED48448:				; CODE XREF: sub_6ED480B0+116j
		mov	ecx, [ebp+var_80]
		lea	ebx, [ebp+var_30]
		mov	dword ptr [esp+8], 10h
		mov	[esp], ebx
		mov	[ebp+var_68], 0Ch
		mov	[esp+4], ecx
		call	ds:_ZN7QString6numberEii
		mov	eax, [ebp+var_30]
		sub	esp, 4
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_2C], offset asc_6EDA00D3 ; "&#x"
		mov	eax, [eax+8]
		mov	[ebp+var_68], 4
		add	eax, 4
		mov	[esp+4], eax
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		call	ds:_ZN7QStringC1EiN2Qt14InitializationE
		mov	eax, [ebp+var_28]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED487BD

loc_6ED484AA:				; CODE XREF: sub_6ED480B0+715j
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_68], 1
		call	ds:_ZN7QString7reallocEv
		mov	eax, [ebp+var_28]
		mov	edx, [eax+0Ch]

loc_6ED484C3:				; CODE XREF: sub_6ED480B0+720j
		mov	[ebp+var_98], edx
		mov	edx, [ebp+var_2C]
		movzx	eax, byte ptr [edx]
		test	al, al
		jz	short loc_6ED484F9
		mov	ecx, [ebp+var_98]
		lea	esi, [esi+0]

loc_6ED484E0:				; CODE XREF: sub_6ED480B0+441j
		add	edx, 1
		movzx	eax, al
		mov	[ecx], ax
		movzx	eax, byte ptr [edx]
		add	ecx, 2
		test	al, al
		jnz	short loc_6ED484E0
		mov	[ebp+var_98], ecx

loc_6ED484F9:				; CODE XREF: sub_6ED480B0+421j
		mov	eax, [ebp+var_30]
		mov	ecx, [ebp+var_98]
		mov	edx, [eax+8]
		mov	eax, [eax+0Ch]
		mov	[esp], ecx	; void *
		mov	[ebp+var_9C], edx
		add	edx, edx
		mov	[esp+8], edx	; size_t
		mov	[esp+4], eax	; void *
		call	memcpy
		mov	eax, [ebp+var_98]
		mov	ebx, [ebp+var_9C]
		mov	word ptr [eax+ebx*2], 3Bh
		mov	eax, [ebp+var_30]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED487A5

loc_6ED48543:				; CODE XREF: sub_6ED480B0+708j
		mov	ecx, [ebp+var_70]
		lea	eax, [ebp+var_28]
		mov	ebx, [ebp+var_78]
		mov	[esp+0Ch], eax
		mov	dword ptr [esp+8], 1
		mov	[esp+4], ecx
		mov	[esp], ebx
		mov	[ebp+var_68], 3
		call	ds:_ZN7QString7replaceEiiRKS_
		mov	eax, [ebp+var_28]
		mov	ecx, [ebp+var_74]
		mov	edx, [eax+8]
		add	[ebp+var_70], edx
		lea	edx, [edx+ecx-1]
		mov	[ebp+var_74], edx
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED481D0

loc_6ED4858D:				; CODE XREF: sub_6ED480B0+62Fj
		mov	eax, [ebp+var_28]
		mov	[ebp+var_68], 0Ch
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED481D0
; ---------------------------------------------------------------------------

loc_6ED485A5:				; CODE XREF: sub_6ED480B0+C8j
					; sub_6ED480B0+D2j ...
		mov	ebx, [ebp+var_80]
		lea	eax, [ebp+var_20]
		mov	dword ptr [esp+8], 10h
		mov	[esp], eax
		mov	[ebp+var_68], 0Ch
		mov	[esp+4], ebx
		call	ds:_ZN7QString6numberEii
		mov	eax, [ebp+var_20]
		sub	esp, 4
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_1C], offset asc_6EDA00D3 ; "&#x"
		mov	eax, [eax+8]
		mov	[ebp+var_68], 7
		add	eax, 4
		mov	[esp+4], eax
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		call	ds:_ZN7QStringC1EiN2Qt14InitializationE
		mov	eax, [ebp+var_28]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED48790

loc_6ED48607:				; CODE XREF: sub_6ED480B0+6E8j
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_68], 2
		call	ds:_ZN7QString7reallocEv
		mov	eax, [ebp+var_28]
		mov	edx, [eax+0Ch]

loc_6ED48620:				; CODE XREF: sub_6ED480B0+6F0j
		mov	[ebp+var_88], edx
		mov	edx, [ebp+var_1C]
		movzx	eax, byte ptr [edx]
		test	al, al
		jz	short loc_6ED4864F
		mov	ecx, [ebp+var_88]

loc_6ED48636:				; CODE XREF: sub_6ED480B0+597j
		add	edx, 1
		movzx	eax, al
		mov	[ecx], ax
		movzx	eax, byte ptr [edx]
		add	ecx, 2
		test	al, al
		jnz	short loc_6ED48636
		mov	[ebp+var_88], ecx

loc_6ED4864F:				; CODE XREF: sub_6ED480B0+57Ej
		mov	eax, [ebp+var_20]
		mov	ecx, [ebp+var_88]
		mov	edx, [eax+8]
		mov	eax, [eax+0Ch]
		mov	[esp], ecx	; void *
		mov	[ebp+var_8C], edx
		add	edx, edx
		mov	[esp+8], edx	; size_t
		mov	[esp+4], eax	; void *
		call	memcpy
		mov	eax, [ebp+var_88]
		mov	ebx, [ebp+var_8C]
		mov	word ptr [eax+ebx*2], 3Bh
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED486E4

loc_6ED48695:				; CODE XREF: sub_6ED480B0+647j
		mov	edx, [ebp+var_70]
		lea	eax, [ebp+var_28]
		mov	ecx, [ebp+var_78]
		mov	[esp+0Ch], eax
		mov	dword ptr [esp+8], 1
		mov	[esp+4], edx
		mov	[esp], ecx
		mov	[ebp+var_68], 6
		call	ds:_ZN7QString7replaceEiiRKS_
		mov	eax, [ebp+var_28]
		mov	ebx, [ebp+var_74]
		mov	edx, [eax+8]
		add	[ebp+var_70], edx
		lea	edx, [edx+ebx-1]
		mov	[ebp+var_74], edx
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED481D0
		jmp	loc_6ED4858D
; ---------------------------------------------------------------------------

loc_6ED486E4:				; CODE XREF: sub_6ED480B0+5E3j
		mov	eax, [ebp+var_20]
		mov	[ebp+var_68], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED48695
; ---------------------------------------------------------------------------
		align 10h

loc_6ED48700:				; CODE XREF: sub_6ED480B0+F3j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aXd ; "&#xd;"
		mov	[ebp+var_68], 0Ch
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_24], eax
		lea	eax, [ebp+var_24]
		mov	edx, [ebp+var_78]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+var_70]
		mov	dword ptr [esp+8], 1
		mov	[ebp+var_68], 5
		mov	[esp], edx
		mov	[esp+4], eax
		call	ds:_ZN7QString7replaceEiiRKS_
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED4841E
		mov	eax, [ebp+var_24]
		mov	[ebp+var_68], 0Ch
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED4841E
; ---------------------------------------------------------------------------

loc_6ED48771:				; CODE XREF: sub_6ED480B0+368j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_68], 0Ch
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED4841E
; ---------------------------------------------------------------------------
		align 10h

loc_6ED48790:				; CODE XREF: sub_6ED480B0+551j
		mov	edx, [eax+0Ch]
		add	eax, 12h
		cmp	edx, eax
		jnz	loc_6ED48607
		xchg	ax, ax
		jmp	loc_6ED48620
; ---------------------------------------------------------------------------

loc_6ED487A5:				; CODE XREF: sub_6ED480B0+48Dj
		mov	eax, [ebp+var_30]
		mov	[ebp+var_68], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED48543
; ---------------------------------------------------------------------------

loc_6ED487BD:				; CODE XREF: sub_6ED480B0+3F4j
		mov	edx, [eax+0Ch]
		add	eax, 12h
		cmp	edx, eax
		jnz	loc_6ED484AA
		nop
		lea	esi, [esi+0]
		jmp	loc_6ED484C3
sub_6ED480B0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED487D5	proc near		; DATA XREF: sub_6ED480B0+52o
		add	ebp, 8
		mov	eax, [ebp-68h]
		mov	edx, [ebp-64h]
		cmp	eax, 1
		mov	[ebp-0ACh], edx
		jz	loc_6ED488AD
		cmp	eax, 2
		jz	loc_6ED48899
		cmp	eax, 3
		jz	short loc_6ED4885D
		cmp	eax, 4
		xchg	ax, ax
		jz	loc_6ED488D3
		cmp	eax, 5
		jz	loc_6ED48899
		cmp	eax, 6
		jz	loc_6ED488BF
		cmp	eax, 7
		nop
		lea	esi, [esi+0]
		jz	loc_6ED488FE
		cmp	eax, 8
		jz	loc_6ED488E7
		cmp	eax, 9
		jz	loc_6ED4892C
		cmp	eax, 0Ah
		nop
		lea	esi, [esi+0]
		jz	loc_6ED48915
		cmp	eax, 0Bh
		jz	short loc_6ED4886F
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560

loc_6ED4885D:				; CODE XREF: sub_6ED487D5+24j
		lea	eax, [ebp-30h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560

loc_6ED4886F:				; CODE XREF: sub_6ED487D5+74j
					; sub_6ED487D5+D6j ...
		mov	edx, [ebp-0A0h]
		mov	dword ptr [ebp-68h], 0
		mov	[esp+0], edx
		call	sub_6ED94560
		mov	ecx, [ebp-0ACh]
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED48899:				; CODE XREF: sub_6ED487D5+1Bj
					; sub_6ED487D5+34j
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		jmp	short loc_6ED4886F
; ---------------------------------------------------------------------------

loc_6ED488AD:				; CODE XREF: sub_6ED487D5+12j
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560

loc_6ED488BF:				; CODE XREF: sub_6ED487D5+3Dj
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		jmp	short loc_6ED4886F
; ---------------------------------------------------------------------------

loc_6ED488D3:				; CODE XREF: sub_6ED487D5+2Bj
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		jmp	short loc_6ED4886F
; ---------------------------------------------------------------------------

loc_6ED488E7:				; CODE XREF: sub_6ED487D5+54j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		jmp	loc_6ED4886F
; ---------------------------------------------------------------------------

loc_6ED488FE:				; CODE XREF: sub_6ED487D5+4Bj
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		jmp	loc_6ED4886F
; ---------------------------------------------------------------------------

loc_6ED48915:				; CODE XREF: sub_6ED487D5+6Bj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		jmp	loc_6ED4886F
; ---------------------------------------------------------------------------

loc_6ED4892C:				; CODE XREF: sub_6ED487D5+5Dj
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		xchg	ax, ax
		jmp	loc_6ED4886F
sub_6ED487D5	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_6ED997C0
		mov	dword ptr [ebp-20h], offset dword_6ED99F2C
		mov	dword ptr [ebp-18h], offset loc_6ED48A38
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+8]
		mov	dword ptr [edx], offset	off_6EDA6C28
		mov	eax, [edx+30h]
		mov	dword ptr [edx+4], offset off_6EDA6CA8
		mov	dword ptr [edx+8], offset off_6EDA6CC8
		mov	dword ptr [edx+0Ch], offset off_6EDA6CE4
		mov	dword ptr [edx+10h], offset off_6EDA6CFC
		mov	dword ptr [edx+14h], offset off_6EDA6D2C
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED48A01

loc_6ED489B8:				; CODE XREF: .text:6ED48A17j
		mov	edx, [ebp+8]
		mov	eax, [edx+1Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED48A20

loc_6ED489C8:				; CODE XREF: .text:6ED48A36j
		mov	eax, [ebp+8]
		mov	dword ptr [eax+14h], offset off_6EDA6F48
		mov	dword ptr [eax+10h], offset off_6EDA7368
		mov	dword ptr [eax+0Ch], offset off_6EDA7348
		mov	dword ptr [eax+8], offset off_6EDA6D90
		mov	dword ptr [eax+4], offset off_6EDA6FA8
		mov	dword ptr [eax], offset	off_6EDA71C8
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED48A01:				; CODE XREF: .text:6ED489B6j
		mov	edx, [ebp+8]
		mov	eax, [edx+30h]
		mov	dword ptr [ebp-38h], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED489B8
; ---------------------------------------------------------------------------
		align 10h

loc_6ED48A20:				; CODE XREF: .text:6ED489C6j
		mov	edx, [ebp+8]
		mov	eax, [edx+1Ch]
		mov	dword ptr [ebp-38h], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED489C8
; ---------------------------------------------------------------------------

loc_6ED48A38:				; DATA XREF: .text:6ED48970o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-40h], eax
		jz	short loc_6ED48A5C
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 1Ch
		mov	[esp], eax
		call	sub_6ED94560

loc_6ED48A5C:				; CODE XREF: .text:6ED48A45j
		mov	eax, [ebp+8]
		mov	edx, [ebp-40h]
		mov	dword ptr [eax+14h], offset off_6EDA6F48
		mov	dword ptr [eax+10h], offset off_6EDA7368
		mov	dword ptr [eax+0Ch], offset off_6EDA7348
		mov	dword ptr [eax+8], offset off_6EDA6D90
		mov	dword ptr [eax+4], offset off_6EDA6FA8
		mov	dword ptr [eax], offset	off_6EDA71C8
		mov	[esp], edx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED48AA0	proc near		; DATA XREF: .rdata:6EDA6E4Co

var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED99F34
		mov	[ebp+var_18], offset sub_6ED48C2B
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+14h]
		mov	dword ptr [edx], offset	off_6EDA6E48
		test	eax, eax
		mov	[ebp+var_40], eax
		jnz	short loc_6ED48B02
		jmp	short loc_6ED48B39
; ---------------------------------------------------------------------------

loc_6ED48AE4:				; CODE XREF: sub_6ED48AA0+77j
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+4]
		mov	[ebp+var_38], 1
		call	eax
		mov	eax, [ebp+var_44]
		test	eax, eax
		jz	short loc_6ED48B39

loc_6ED48AFC:				; CODE XREF: sub_6ED48AA0+97j
		mov	eax, [ebp+var_44]
		mov	[ebp+var_40], eax

loc_6ED48B02:				; CODE XREF: sub_6ED48AA0+40j
		mov	edx, [ebp+var_40]
		mov	edx, [edx+0Ch]
		mov	[ebp+var_44], edx
		mov	edx, [ebp+var_40]
		lock dec dword ptr [edx+4]
		setnz	al
		test	al, al
		jz	short loc_6ED48AE4
		mov	edx, [ebp+var_40]
		xor	eax, eax
		test	byte ptr [edx+2Ch], 2
		jnz	loc_6ED48BC0

loc_6ED48B28:				; CODE XREF: sub_6ED48AA0+130j
		mov	edx, [ebp+var_40]
		and	byte ptr [edx+2Ch], 0FDh
		mov	[edx+10h], eax
		mov	eax, [ebp+var_44]
		test	eax, eax
		jnz	short loc_6ED48AFC

loc_6ED48B39:				; CODE XREF: sub_6ED48AA0+42j
					; sub_6ED48AA0+5Aj
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+14h], 0
		mov	eax, [edx+28h]
		mov	dword ptr [edx+18h], 0
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED48C10

loc_6ED48B5B:				; CODE XREF: sub_6ED48AA0+186j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+24h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED48BF0

loc_6ED48B6F:				; CODE XREF: sub_6ED48AA0+166j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+20h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED48BD5

loc_6ED48B7F:				; CODE XREF: sub_6ED48AA0+14Bj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+1Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED48BA5
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+1Ch]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED48BA5:				; CODE XREF: sub_6ED48AA0+EDj
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED988B0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED48BC0:				; CODE XREF: sub_6ED48AA0+82j
		mov	[esp], edx
		mov	[ebp+var_38], 1
		call	sub_6ED41890
		nop
		jmp	loc_6ED48B28
; ---------------------------------------------------------------------------

loc_6ED48BD5:				; CODE XREF: sub_6ED48AA0+DDj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+20h]
		mov	[ebp+var_38], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED48B7F
; ---------------------------------------------------------------------------
		align 10h

loc_6ED48BF0:				; CODE XREF: sub_6ED48AA0+C9j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+24h]
		mov	[ebp+var_38], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED48B6F
; ---------------------------------------------------------------------------
		align 10h

loc_6ED48C10:				; CODE XREF: sub_6ED48AA0+B5j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+28h]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED48B5B
sub_6ED48AA0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED48C2B	proc near		; DATA XREF: sub_6ED48AA0+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-48h], edx
		jz	short loc_6ED48C5B
		cmp	eax, 2
		jz	short loc_6ED48C70
		cmp	eax, 3
		jz	short loc_6ED48C85
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 28h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED48C5B:				; CODE XREF: sub_6ED48C2B+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 24h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED48C70:				; CODE XREF: sub_6ED48C2B+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 20h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED48C85:				; CODE XREF: sub_6ED48C2B+19j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 1Ch
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED48C2B	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED48CB0	proc near		; DATA XREF: .rdata:off_6EDA6E48o

var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED99F40
		mov	[ebp+var_18], offset sub_6ED48E2B
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+14h]
		mov	dword ptr [edx], offset	off_6EDA6E48
		test	eax, eax
		mov	[ebp+var_40], eax
		jnz	short loc_6ED48D12
		jmp	short loc_6ED48D49
; ---------------------------------------------------------------------------

loc_6ED48CF4:				; CODE XREF: sub_6ED48CB0+77j
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+4]
		mov	[ebp+var_38], 1
		call	eax
		mov	edx, [ebp+var_44]
		test	edx, edx
		jz	short loc_6ED48D49

loc_6ED48D0C:				; CODE XREF: sub_6ED48CB0+97j
		mov	eax, [ebp+var_44]
		mov	[ebp+var_40], eax

loc_6ED48D12:				; CODE XREF: sub_6ED48CB0+40j
		mov	edx, [ebp+var_40]
		mov	edx, [edx+0Ch]
		mov	[ebp+var_44], edx
		mov	edx, [ebp+var_40]
		lock dec dword ptr [edx+4]
		setnz	al
		test	al, al
		jz	short loc_6ED48CF4
		mov	edx, [ebp+var_40]
		xor	eax, eax
		test	byte ptr [edx+2Ch], 2
		jnz	loc_6ED48DC0

loc_6ED48D38:				; CODE XREF: sub_6ED48CB0+120j
		mov	edx, [ebp+var_40]
		and	byte ptr [edx+2Ch], 0FDh
		mov	[edx+10h], eax
		mov	edx, [ebp+var_44]
		test	edx, edx
		jnz	short loc_6ED48D0C

loc_6ED48D49:				; CODE XREF: sub_6ED48CB0+42j
					; sub_6ED48CB0+5Aj
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+14h], 0
		mov	eax, [edx+28h]
		mov	dword ptr [edx+18h], 0
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED48E10

loc_6ED48D6B:				; CODE XREF: sub_6ED48CB0+176j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+24h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED48DF0

loc_6ED48D7B:				; CODE XREF: sub_6ED48CB0+156j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+20h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED48DD5

loc_6ED48D8B:				; CODE XREF: sub_6ED48CB0+13Bj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+1Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED48DB1
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+1Ch]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED48DB1:				; CODE XREF: sub_6ED48CB0+E9j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED48DC0:				; CODE XREF: sub_6ED48CB0+82j
		mov	[esp], edx
		mov	[ebp+var_38], 1
		call	sub_6ED41890
		nop
		jmp	loc_6ED48D38
; ---------------------------------------------------------------------------

loc_6ED48DD5:				; CODE XREF: sub_6ED48CB0+D9j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+20h]
		mov	[ebp+var_38], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED48D8B
; ---------------------------------------------------------------------------
		align 10h

loc_6ED48DF0:				; CODE XREF: sub_6ED48CB0+C9j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+24h]
		mov	[ebp+var_38], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED48D7B
; ---------------------------------------------------------------------------
		align 10h

loc_6ED48E10:				; CODE XREF: sub_6ED48CB0+B5j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+28h]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED48D6B
sub_6ED48CB0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED48E2B	proc near		; DATA XREF: sub_6ED48CB0+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-48h], edx
		jz	short loc_6ED48E5B
		cmp	eax, 2
		jz	short loc_6ED48E70
		cmp	eax, 3
		jz	short loc_6ED48E85
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 28h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED48E5B:				; CODE XREF: sub_6ED48E2B+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 24h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED48E70:				; CODE XREF: sub_6ED48E2B+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 20h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED48E85:				; CODE XREF: sub_6ED48E2B+19j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 1Ch
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED48E2B	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED48EB0	proc near		; CODE XREF: sub_6ED490B0+94p
					; sub_6ED49161+24p ...

var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED99F4C
		mov	[ebp+var_18], offset sub_6ED4902B
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+14h]
		mov	dword ptr [edx], offset	off_6EDA6E48
		test	eax, eax
		mov	[ebp+var_40], eax
		jnz	short loc_6ED48F12
		jmp	short loc_6ED48F49
; ---------------------------------------------------------------------------

loc_6ED48EF4:				; CODE XREF: sub_6ED48EB0+77j
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+4]
		mov	[ebp+var_38], 1
		call	eax
		mov	ecx, [ebp+var_44]
		test	ecx, ecx
		jz	short loc_6ED48F49

loc_6ED48F0C:				; CODE XREF: sub_6ED48EB0+97j
		mov	eax, [ebp+var_44]
		mov	[ebp+var_40], eax

loc_6ED48F12:				; CODE XREF: sub_6ED48EB0+40j
		mov	edx, [ebp+var_40]
		mov	edx, [edx+0Ch]
		mov	[ebp+var_44], edx
		mov	edx, [ebp+var_40]
		lock dec dword ptr [edx+4]
		setnz	al
		test	al, al
		jz	short loc_6ED48EF4
		mov	edx, [ebp+var_40]
		xor	eax, eax
		test	byte ptr [edx+2Ch], 2
		jnz	loc_6ED48FC0

loc_6ED48F38:				; CODE XREF: sub_6ED48EB0+120j
		mov	edx, [ebp+var_40]
		and	byte ptr [edx+2Ch], 0FDh
		mov	ecx, [ebp+var_44]
		mov	[edx+10h], eax
		test	ecx, ecx
		jnz	short loc_6ED48F0C

loc_6ED48F49:				; CODE XREF: sub_6ED48EB0+42j
					; sub_6ED48EB0+5Aj
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+14h], 0
		mov	eax, [edx+28h]
		mov	dword ptr [edx+18h], 0
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED49010

loc_6ED48F6B:				; CODE XREF: sub_6ED48EB0+176j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+24h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED48FF0

loc_6ED48F7B:				; CODE XREF: sub_6ED48EB0+156j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+20h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED48FD5

loc_6ED48F8B:				; CODE XREF: sub_6ED48EB0+13Bj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+1Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED48FB1
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+1Ch]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED48FB1:				; CODE XREF: sub_6ED48EB0+E9j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED48FC0:				; CODE XREF: sub_6ED48EB0+82j
		mov	[esp], edx
		mov	[ebp+var_38], 1
		call	sub_6ED41890
		nop
		jmp	loc_6ED48F38
; ---------------------------------------------------------------------------

loc_6ED48FD5:				; CODE XREF: sub_6ED48EB0+D9j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+20h]
		mov	[ebp+var_38], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED48F8B
; ---------------------------------------------------------------------------
		align 10h

loc_6ED48FF0:				; CODE XREF: sub_6ED48EB0+C9j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+24h]
		mov	[ebp+var_38], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED48F7B
; ---------------------------------------------------------------------------
		align 10h

loc_6ED49010:				; CODE XREF: sub_6ED48EB0+B5j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+28h]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED48F6B
sub_6ED48EB0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4902B	proc near		; DATA XREF: sub_6ED48EB0+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-48h], edx
		jz	short loc_6ED4905B
		cmp	eax, 2
		jz	short loc_6ED49070
		cmp	eax, 3
		jz	short loc_6ED49085
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 28h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED4905B:				; CODE XREF: sub_6ED4902B+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 24h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED49070:				; CODE XREF: sub_6ED4902B+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 20h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED49085:				; CODE XREF: sub_6ED4902B+19j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 1Ch
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED4902B	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED490B0	proc near		; DATA XREF: .rdata:6EDA73ACo

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED99F58
		mov	[ebp+var_18], offset sub_6ED49161
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+3Ch]
		mov	dword ptr [edx], offset	off_6EDA73A8
		test	eax, eax
		jz	short loc_6ED49115
		lock dec dword ptr [eax+4]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED49115
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+3Ch]
		test	eax, eax
		jz	short loc_6ED49115
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 1
		call	eax

loc_6ED49115:				; CODE XREF: sub_6ED490B0+3Dj
					; sub_6ED490B0+48j ...
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+38h]
		test	eax, eax
		jz	short loc_6ED49137
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED49137
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+38h]
		mov	[esp], eax
		call	sub_6ED988B0

loc_6ED49137:				; CODE XREF: sub_6ED490B0+6Dj
					; sub_6ED490B0+77j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED48EB0
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		call	sub_6ED988B0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED490B0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED49161	proc near		; DATA XREF: sub_6ED490B0+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		add	eax, 38h
		mov	[esp+0], eax
		call	sub_6ED91ED0
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], edx
		call	sub_6ED48EB0
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED49161	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED491A0	proc near		; DATA XREF: .rdata:off_6EDA73A8o

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED99F5E
		mov	[ebp+var_18], offset sub_6ED49246
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+3Ch]
		mov	dword ptr [edx], offset	off_6EDA73A8
		test	eax, eax
		jz	short loc_6ED49205
		lock dec dword ptr [eax+4]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED49205
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+3Ch]
		test	eax, eax
		jz	short loc_6ED49205
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 1
		call	eax

loc_6ED49205:				; CODE XREF: sub_6ED491A0+3Dj
					; sub_6ED491A0+48j ...
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+38h]
		test	eax, eax
		jz	short loc_6ED49227
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED49227
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+38h]
		mov	[esp], eax
		call	sub_6ED988B0

loc_6ED49227:				; CODE XREF: sub_6ED491A0+6Dj
					; sub_6ED491A0+77j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED48EB0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED491A0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED49246	proc near		; DATA XREF: sub_6ED491A0+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		add	eax, 38h
		mov	[esp+0], eax
		call	sub_6ED91ED0
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], edx
		call	sub_6ED48EB0
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED49246	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_6ED997C0
		mov	dword ptr [ebp-20h], offset dword_6ED99F64
		mov	dword ptr [ebp-18h], offset loc_6ED49336
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+8]
		mov	eax, [edx+3Ch]
		mov	dword ptr [edx], offset	off_6EDA73A8
		test	eax, eax
		jz	short loc_6ED492F5
		lock dec dword ptr [eax+4]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED492F5
		mov	edx, [ebp+8]
		mov	eax, [edx+3Ch]
		test	eax, eax
		jz	short loc_6ED492F5
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 1
		call	eax

loc_6ED492F5:				; CODE XREF: .text:6ED492CDj
					; .text:6ED492D8j ...
		mov	edx, [ebp+8]
		mov	eax, [edx+38h]
		test	eax, eax
		jz	short loc_6ED49317
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED49317
		mov	edx, [ebp+8]
		mov	eax, [edx+38h]
		mov	[esp], eax
		call	sub_6ED988B0

loc_6ED49317:				; CODE XREF: .text:6ED492FDj
					; .text:6ED49307j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED48EB0
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED49336:				; DATA XREF: .text:6ED492B0o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		add	eax, 38h
		mov	[esp], eax
		call	sub_6ED91ED0
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], edx
		call	sub_6ED48EB0
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED49380	proc near		; CODE XREF: sub_6ED54FE0+C8p

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED99F6A
		mov	[ebp+var_18], offset sub_6ED49411
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_8]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED416C0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7768
		mov	eax, [ebp+arg_C]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 1Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+arg_10]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 20h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED49380	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED49411	proc near		; DATA XREF: sub_6ED49380+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		mov	[esp+0], eax
		call	sub_6ED48EB0
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED49411	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_6ED997C0
		mov	dword ptr [ebp-20h], offset dword_6ED99F70
		mov	dword ptr [ebp-18h], offset loc_6ED494D1
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+10h]
		mov	[esp+8], eax
		mov	eax, [ebp+0Ch]
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		mov	[esp], eax
		call	sub_6ED416C0
		mov	eax, [ebp+8]
		mov	dword ptr [eax], offset	off_6EDA7768
		mov	eax, [ebp+14h]
		mov	dword ptr [ebp-38h], 1
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		add	eax, 1Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+18h]
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		add	eax, 20h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED494D1:				; DATA XREF: .text:6ED49460o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		mov	[esp], eax
		call	sub_6ED48EB0
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED49500	proc near		; CODE XREF: sub_6ED540E0+8Dp

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED99F76
		mov	[ebp+var_18], offset sub_6ED4957B
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_8]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED416C0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7668
		mov	eax, [ebp+arg_C]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 1Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED49500	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4957B	proc near		; DATA XREF: sub_6ED49500+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		mov	[esp+0], eax
		call	sub_6ED48EB0
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED4957B	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_6ED997C0
		mov	dword ptr [ebp-20h], offset dword_6ED99F7C
		mov	dword ptr [ebp-18h], offset loc_6ED4962B
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+10h]
		mov	[esp+8], eax
		mov	eax, [ebp+0Ch]
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		mov	[esp], eax
		call	sub_6ED416C0
		mov	eax, [ebp+8]
		mov	dword ptr [eax], offset	off_6EDA7668
		mov	eax, [ebp+14h]
		mov	dword ptr [ebp-38h], 1
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		add	eax, 1Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED4962B:				; DATA XREF: .text:6ED495D0o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		mov	[esp], eax
		call	sub_6ED48EB0
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED49660	proc near		; CODE XREF: sub_6ED497D0+80p
					; sub_6ED54280+160p

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch
arg_18		= dword	ptr  20h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED99F82
		mov	[ebp+var_18], offset sub_6ED49746
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_8]
		mov	edx, [ebp+arg_0]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_6ED416C0
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7048
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[edx+38h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	[edx+3Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	[edx+40h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_C]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 1Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+arg_10]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 3Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+arg_14]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 38h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+arg_18]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 40h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED49660	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED49746	proc near		; DATA XREF: sub_6ED49660+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		add	eax, 40h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 3Ch
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 38h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], edx
		call	sub_6ED48EB0
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED49746	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED497C0	proc near		; DATA XREF: .rdata:6EDA6CD4o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF8h
		jmp	short sub_6ED497D0
sub_6ED497C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED497D0	proc near		; CODE XREF: sub_6ED497C0+5j
					; DATA XREF: .rdata:6EDA6C70o

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED99F88
		mov	[ebp+var_18], offset sub_6ED49892
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 44h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_40], eax
		mov	eax, [ebp+arg_10]
		mov	ecx, [ebp+var_40]
		mov	[esp+18h], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+14h], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+10h], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+0Ch], eax
		mov	eax, [edx+28h]
		mov	[esp], ecx
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		call	sub_6ED49660
		mov	edx, [ebp+var_40]
		lock dec dword ptr [edx+4]
		setnz	al
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+28h]
		mov	ecx, [ebp+var_40]
		mov	eax, [eax+3Ch]
		mov	edx, [eax]
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	eax, [edx+1Ch]
		mov	[ebp+var_38], 0FFFFFFFFh
		call	eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, 1
		leave
		retn
sub_6ED497D0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED49892	proc near		; DATA XREF: sub_6ED497D0+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-40h]
		mov	[ebp-44h], eax
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	ecx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
sub_6ED49892	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_6ED997C0
		mov	dword ptr [ebp-20h], offset word_6ED99F8E
		mov	dword ptr [ebp-18h], offset loc_6ED499A6
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+10h]
		mov	edx, [ebp+8]
		mov	[esp+8], eax
		mov	eax, [ebp+0Ch]
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_6ED416C0
		mov	eax, [ebp+8]
		mov	edx, [ebp+8]
		mov	dword ptr [eax], offset	off_6EDA7048
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[edx+38h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+8]
		mov	[edx+3Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+8]
		mov	[edx+40h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+14h]
		mov	dword ptr [ebp-38h], 1
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		add	eax, 1Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+18h]
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		add	eax, 3Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+1Ch]
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		add	eax, 38h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+20h]
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		add	eax, 40h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED499A6:				; DATA XREF: .text:6ED498E0o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		add	eax, 40h
		mov	[esp], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 3Ch
		mov	[esp], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 38h
		mov	[esp], eax
		call	sub_6ED94560
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], edx
		call	sub_6ED48EB0
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED49A20	proc near		; CODE XREF: sub_6ED49B50+79p

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED99F94
		mov	[ebp+var_18], offset sub_6ED49AE4
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_8]
		mov	edx, [ebp+arg_0]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_6ED416C0
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7428
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[edx+38h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	[edx+3Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_C]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 1Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+arg_10]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 3Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+arg_14]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 38h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED49A20	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED49AE4	proc near		; DATA XREF: sub_6ED49A20+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		add	eax, 3Ch
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 38h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], edx
		call	sub_6ED48EB0
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED49AE4	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED49B40	proc near		; DATA XREF: .rdata:6EDA6CD0o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF8h
		jmp	short sub_6ED49B50
sub_6ED49B40	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED49B50	proc near		; CODE XREF: sub_6ED49B40+5j
					; DATA XREF: .rdata:6EDA6C6Co

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED99F9A
		mov	[ebp+var_18], offset sub_6ED49C0B
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 40h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_40], eax
		mov	eax, [ebp+arg_C]
		mov	ecx, [ebp+var_40]
		mov	[esp+14h], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+10h], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+0Ch], eax
		mov	eax, [edx+28h]
		mov	[esp], ecx
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		call	sub_6ED49A20
		mov	edx, [ebp+var_40]
		lock dec dword ptr [edx+4]
		setnz	al
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+28h]
		mov	ecx, [ebp+var_40]
		mov	eax, [eax+3Ch]
		mov	edx, [eax]
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	eax, [edx+1Ch]
		mov	[ebp+var_38], 0FFFFFFFFh
		call	eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, 1
		leave
		retn
sub_6ED49B50	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED49C0B	proc near		; DATA XREF: sub_6ED49B50+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-40h]
		mov	[ebp-44h], eax
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	ecx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
sub_6ED49C0B	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_6ED997C0
		mov	dword ptr [ebp-20h], offset dword_6ED99FA0
		mov	dword ptr [ebp-18h], offset loc_6ED49D04
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+10h]
		mov	edx, [ebp+8]
		mov	[esp+8], eax
		mov	eax, [ebp+0Ch]
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_6ED416C0
		mov	eax, [ebp+8]
		mov	edx, [ebp+8]
		mov	dword ptr [eax], offset	off_6EDA7428
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[edx+38h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+8]
		mov	[edx+3Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+14h]
		mov	dword ptr [ebp-38h], 1
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		add	eax, 1Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+18h]
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		add	eax, 3Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+1Ch]
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		add	eax, 38h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED49D04:				; DATA XREF: .text:6ED49C60o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		add	eax, 3Ch
		mov	[esp], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 38h
		mov	[esp], eax
		call	sub_6ED94560
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], edx
		call	sub_6ED48EB0
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED49D60	proc near		; CODE XREF: sub_6ED49E10+B3p
					; sub_6ED548D0+8Dp

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED99FA6
		mov	[ebp+var_18], offset sub_6ED49DE2
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_8]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED416C0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA6DC8
		mov	eax, [ebp+arg_C]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 1Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+arg_0]
		mov	byte ptr [eax+38h], 0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED49D60	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED49DE2	proc near		; DATA XREF: sub_6ED49D60+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		mov	[esp+0], eax
		call	sub_6ED48EB0
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED49DE2	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED49E10	proc near		; CODE XREF: _ZN11QDomElement12setAttributeERK7QStringS2_+14j
					; _ZN11QDomElement12setAttributeERK7QStringf+86p ...

var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED99FAC
		mov	[ebp+var_18], offset sub_6ED49F0C
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	[esp+4], edx
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+38h]
		mov	[esp], eax
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED45BD0
		test	eax, eax
		jz	short loc_6ED49E84
		mov	edx, [eax]
		mov	ecx, [ebp+arg_8]
		mov	[esp], eax
		mov	[esp+4], ecx
		mov	eax, [edx+8]
		mov	[ebp+var_38], 0FFFFFFFFh
		call	eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED49E84:				; CODE XREF: sub_6ED49E10+4Dj
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED41890
		mov	[ebp+var_44], eax
		mov	dword ptr [esp], 3Ch ; size_t
		call	sub_6ED988D0
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_40], eax
		mov	[esp+0Ch], edx
		mov	ecx, [ebp+arg_0]
		mov	[esp+8], ecx
		mov	eax, [ebp+var_44]
		mov	[esp+4], eax
		mov	edx, [ebp+var_40]
		mov	[esp], edx
		mov	[ebp+var_38], 1
		call	sub_6ED49D60
		mov	ecx, [ebp+var_40]
		mov	edx, [ebp+arg_8]
		mov	eax, [ecx]
		mov	[esp], ecx
		mov	[esp+4], edx
		mov	eax, [eax+8]
		mov	[ebp+var_38], 0FFFFFFFFh
		call	eax
		mov	ecx, [ebp+var_40]
		lock dec dword ptr [ecx+4]
		setnz	al
		mov	[esp+4], ecx
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+38h]
		mov	[esp], eax
		call	sub_6ED45D90
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED49E10	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED49F0C	proc near		; DATA XREF: sub_6ED49E10+1Do
		add	ebp, 8
		mov	ecx, [ebp-34h]
		mov	eax, [ebp-40h]
		mov	[ebp-48h], ecx
		mov	[esp+0], eax
		call	sub_6ED988B0
		mov	edx, [ebp-48h]
		mov	[esp+0], edx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED49F0C	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  18. _ZN11QDomElement12setAttributeERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================


		public _ZN11QDomElement12setAttributeERK7QStringS2_
_ZN11QDomElement12setAttributeERK7QStringS2_ proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED49F60
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	sub_6ED49E10
; ---------------------------------------------------------------------------
		align 10h

loc_6ED49F60:				; CODE XREF: _ZN11QDomElement12setAttributeERK7QStringS2_+Bj
		add	esp, 0Ch
		retn
_ZN11QDomElement12setAttributeERK7QStringS2_ endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_6ED997C0
		mov	dword ptr [ebp-20h], offset word_6ED99FB2
		mov	dword ptr [ebp-18h], offset loc_6ED49FF2
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+10h]
		mov	[esp+8], eax
		mov	eax, [ebp+0Ch]
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		mov	[esp], eax
		call	sub_6ED416C0
		mov	eax, [ebp+8]
		mov	dword ptr [eax], offset	off_6EDA6DC8
		mov	eax, [ebp+14h]
		mov	dword ptr [ebp-38h], 1
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		add	eax, 1Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+8]
		mov	byte ptr [eax+38h], 0
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED49FF2:				; DATA XREF: .text:6ED49F90o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		mov	[esp], eax
		call	sub_6ED48EB0
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4A020	proc near		; CODE XREF: sub_6ED4A180+68p
					; sub_6ED4B0D0+258p

var_41		= byte ptr -41h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= byte ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		movzx	eax, [ebp+arg_8]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_1C], edx
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED99FB8
		mov	[ebp+var_41], al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_18], offset sub_6ED4A10E
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		movzx	eax, [ebp+var_41]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_6ED44270
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7048
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[edx+38h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	[edx+3Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	[edx+40h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 1
		add	eax, 38h
		mov	[ebp+var_40], eax
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+var_40]
		add	eax, 38h
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+arg_4]
		add	eax, 3Ch
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 3Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+arg_4]
		add	eax, 40h
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 40h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED4A020	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4A10E	proc near		; DATA XREF: sub_6ED4A020+27o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-48h], eax
		mov	eax, [ebp+8]
		add	eax, 40h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 3Ch
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], edx
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED48EB0
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED4A10E	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4A180	proc near		; DATA XREF: .rdata:6EDA7068o

var_41		= byte ptr -41h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= byte ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		movzx	eax, [ebp+arg_4]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_1C], edx
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED99FBE
		mov	[ebp+var_41], al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_18], offset sub_6ED4A207
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 44h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		movzx	eax, [ebp+var_41]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+4], eax
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED4A020
		mov	edx, [ebp+var_40]
		lock dec dword ptr [edx+4]
		setnz	al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_40]
		leave
		retn
sub_6ED4A180	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4A207	proc near		; DATA XREF: sub_6ED4A180+27o
		add	ebp, 8
		mov	edx, [ebp-34h]
		mov	eax, [ebp-40h]
		mov	[ebp-48h], edx
		mov	[esp+0], eax
		call	sub_6ED988B0
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED4A207	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		movzx	eax, byte ptr [ebp+10h]
		lea	edx, [ebp-8]
		mov	[ebp-1Ch], edx
		mov	dword ptr [ebp-24h], offset sub_6ED997C0
		mov	dword ptr [ebp-20h], offset dword_6ED99FC4
		mov	[ebp-41h], al
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-18h], offset loc_6ED4A31E
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		movzx	eax, byte ptr [ebp-41h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+0Ch]
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_6ED44270
		mov	eax, [ebp+8]
		mov	edx, [ebp+8]
		mov	dword ptr [eax], offset	off_6EDA7048
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[edx+38h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+8]
		mov	[edx+3Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+8]
		mov	[edx+40h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 1
		add	eax, 38h
		mov	[ebp-40h], eax
		mov	eax, [ebp+0Ch]
		mov	edx, [ebp-40h]
		add	eax, 38h
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+0Ch]
		add	eax, 3Ch
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		add	eax, 3Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+0Ch]
		add	eax, 40h
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		add	eax, 40h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED4A31E:				; DATA XREF: .text:6ED4A257o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-48h], eax
		mov	eax, [ebp+8]
		add	eax, 40h
		mov	[esp], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 3Ch
		mov	[esp], eax
		call	sub_6ED94560
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], edx
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], eax
		call	sub_6ED48EB0
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4A390	proc near		; CODE XREF: sub_6ED4A4B0+68p
					; sub_6ED4B0D0+C9p

var_41		= byte ptr -41h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= byte ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		movzx	eax, [ebp+arg_8]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_1C], edx
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED99FCA
		mov	[ebp+var_41], al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_18], offset sub_6ED4A459
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		movzx	eax, [ebp+var_41]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_6ED44270
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7428
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[edx+38h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	[edx+3Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 1
		add	eax, 38h
		mov	[ebp+var_40], eax
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+var_40]
		add	eax, 38h
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+arg_4]
		add	eax, 3Ch
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 3Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED4A390	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4A459	proc near		; DATA XREF: sub_6ED4A390+27o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-48h], eax
		mov	eax, [ebp+8]
		add	eax, 3Ch
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], edx
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED48EB0
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED4A459	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4A4B0	proc near		; DATA XREF: .rdata:6EDA7448o

var_41		= byte ptr -41h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= byte ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		movzx	eax, [ebp+arg_4]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_1C], edx
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED99FD0
		mov	[ebp+var_41], al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_18], offset sub_6ED4A537
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 40h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		movzx	eax, [ebp+var_41]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+4], eax
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED4A390
		mov	edx, [ebp+var_40]
		lock dec dword ptr [edx+4]
		setnz	al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_40]
		leave
		retn
sub_6ED4A4B0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4A537	proc near		; DATA XREF: sub_6ED4A4B0+27o
		add	ebp, 8
		mov	edx, [ebp-34h]
		mov	eax, [ebp-40h]
		mov	[ebp-48h], edx
		mov	[esp+0], eax
		call	sub_6ED988B0
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED4A537	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		movzx	eax, byte ptr [ebp+10h]
		lea	edx, [ebp-8]
		mov	[ebp-1Ch], edx
		mov	dword ptr [ebp-24h], offset sub_6ED997C0
		mov	dword ptr [ebp-20h], offset word_6ED99FD6
		mov	[ebp-41h], al
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-18h], offset loc_6ED4A629
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		movzx	eax, byte ptr [ebp-41h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+0Ch]
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_6ED44270
		mov	eax, [ebp+8]
		mov	edx, [ebp+8]
		mov	dword ptr [eax], offset	off_6EDA7428
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[edx+38h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+8]
		mov	[edx+3Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 1
		add	eax, 38h
		mov	[ebp-40h], eax
		mov	eax, [ebp+0Ch]
		mov	edx, [ebp-40h]
		add	eax, 38h
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+0Ch]
		add	eax, 3Ch
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		add	eax, 3Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED4A629:				; DATA XREF: .text:6ED4A587o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-48h], eax
		mov	eax, [ebp+8]
		add	eax, 3Ch
		mov	[esp], eax
		call	sub_6ED94560
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], edx
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], eax
		call	sub_6ED48EB0
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4A680	proc near		; CODE XREF: sub_6ED54DF0+8Dp

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED99FDC
		mov	[ebp+var_18], offset sub_6ED4A734
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_8]
		mov	edx, [ebp+arg_0]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_6ED416C0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7148
		mov	eax, [ebp+arg_C]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 1Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	dword ptr [esp], 10h ; size_t
		call	sub_6ED988D0
		mov	edx, ds:_ZN9QHashData11shared_nullE
		mov	dword ptr [eax], 0
		mov	[eax+4], edx
		lock inc dword ptr [edx+8]
		setnz	cl
		mov	dword ptr [eax], 1
		mov	edx, [ebp+arg_0]
		mov	byte ptr [eax+0Ch], 0
		mov	byte ptr [eax+0Dh], 0
		mov	[eax+8], edx
		mov	[edx+38h], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED4A680	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4A734	proc near		; DATA XREF: sub_6ED4A680+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	[esp+0], edx
		call	sub_6ED48EB0
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED4A734	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_6ED997C0
		mov	dword ptr [ebp-20h], offset word_6ED99FE2
		mov	dword ptr [ebp-18h], offset loc_6ED4A824
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+10h]
		mov	edx, [ebp+8]
		mov	[esp+8], eax
		mov	eax, [ebp+0Ch]
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_6ED416C0
		mov	eax, [ebp+8]
		mov	dword ptr [eax], offset	off_6EDA7148
		mov	eax, [ebp+14h]
		mov	dword ptr [ebp-38h], 1
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		add	eax, 1Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	dword ptr [esp], 10h
		call	sub_6ED988D0
		mov	edx, ds:_ZN9QHashData11shared_nullE
		mov	dword ptr [eax], 0
		mov	[eax+4], edx
		lock inc dword ptr [edx+8]
		setnz	cl
		mov	dword ptr [eax], 1
		mov	edx, [ebp+8]
		mov	byte ptr [eax+0Ch], 0
		mov	byte ptr [eax+0Dh], 0
		mov	[eax+8], edx
		mov	[edx+38h], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED4A824:				; DATA XREF: .text:6ED4A790o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	[esp], edx
		call	sub_6ED48EB0
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4A860	proc near		; CODE XREF: sub_6ED4A9D0+68p

var_3D		= byte ptr -3Dh
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= byte ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		movzx	eax, [ebp+arg_8]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_1C], edx
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED99FE8
		mov	[ebp+var_3D], al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_18], offset sub_6ED4A973
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		movzx	eax, [ebp+var_3D]
		mov	ecx, [ebp+arg_4]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+4], ecx
		mov	[esp], eax
		call	sub_6ED44270
		mov	ecx, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		mov	eax, [ecx+38h]
		mov	dword ptr [edx], offset	off_6EDA73A8
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	sub_6ED455D0
		mov	edx, [ebp+arg_0]
		test	eax, eax
		mov	[edx+38h], eax
		jz	short loc_6ED4A8E5
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED4A8E5:				; CODE XREF: sub_6ED4A860+7Dj
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	dword ptr [ecx+3Ch], 0
		mov	eax, [edx+3Ch]
		mov	dword ptr [ecx+40h], 1
		mov	edx, [eax]
		mov	dword ptr [esp+4], 1
		mov	[esp], eax
		mov	eax, [edx+20h]
		mov	[ebp+var_38], 1
		call	eax
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+3Ch]
		cmp	eax, edx
		jz	short loc_6ED4A948
		test	eax, eax
		jz	short loc_6ED4A92D
		lock inc dword ptr [eax+4]
		setnz	dl
		mov	edx, [ecx+3Ch]

loc_6ED4A92D:				; CODE XREF: sub_6ED4A860+C1j
		mov	ecx, [ebp+arg_0]
		test	edx, edx
		mov	[ecx+3Ch], eax
		jz	short loc_6ED4A942
		lock dec dword ptr [edx+4]
		setnz	al
		test	al, al
		jz	short loc_6ED4A960

loc_6ED4A942:				; CODE XREF: sub_6ED4A860+D5j
					; sub_6ED4A860+111j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+3Ch]

loc_6ED4A948:				; CODE XREF: sub_6ED4A860+BDj
		mov	ecx, [ebp+arg_0]
		or	byte ptr [eax+2Ch], 2
		mov	[eax+10h], ecx
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4A960:				; CODE XREF: sub_6ED4A860+E0j
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+4]
		mov	[ebp+var_38], 1
		call	eax
		jmp	short loc_6ED4A942
sub_6ED4A860	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4A973	proc near		; DATA XREF: sub_6ED4A860+27o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], eax
		jz	short loc_6ED4A9A5
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 3Ch
		mov	[esp+0], eax
		call	sub_6ED91E90
		mov	eax, [ebp+8]
		add	eax, 38h
		mov	[esp+0], eax
		call	sub_6ED91ED0

loc_6ED4A9A5:				; CODE XREF: sub_6ED4A973+Dj
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], edx
		call	sub_6ED48EB0
		mov	ecx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
sub_6ED4A973	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4A9D0	proc near		; DATA XREF: .rdata:6EDA73C8o

var_41		= byte ptr -41h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= byte ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		movzx	eax, [ebp+arg_4]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_1C], edx
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED99FF0
		mov	[ebp+var_41], al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_18], offset sub_6ED4AA57
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 44h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		movzx	eax, [ebp+var_41]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+4], eax
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED4A860
		mov	edx, [ebp+var_40]
		lock dec dword ptr [edx+4]
		setnz	al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_40]
		leave
		retn
sub_6ED4A9D0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4AA57	proc near		; DATA XREF: sub_6ED4A9D0+27o
		add	ebp, 8
		mov	edx, [ebp-34h]
		mov	eax, [ebp-40h]
		mov	[ebp-48h], edx
		mov	[esp+0], eax
		call	sub_6ED988B0
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED4AA57	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		movzx	eax, byte ptr [ebp+10h]
		lea	edx, [ebp-8]
		mov	[ebp-1Ch], edx
		mov	dword ptr [ebp-24h], offset sub_6ED997C0
		mov	dword ptr [ebp-20h], offset word_6ED99FF6
		mov	[ebp-3Dh], al
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-18h], offset loc_6ED4AB93
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		movzx	eax, byte ptr [ebp-3Dh]
		mov	ecx, [ebp+0Ch]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+8]
		mov	[esp+4], ecx
		mov	[esp], eax
		call	sub_6ED44270
		mov	ecx, [ebp+0Ch]
		mov	edx, [ebp+8]
		mov	eax, [ecx+38h]
		mov	dword ptr [edx], offset	off_6EDA73A8
		mov	dword ptr [ebp-38h], 2
		mov	[esp], eax
		call	sub_6ED455D0
		mov	edx, [ebp+8]
		test	eax, eax
		mov	[edx+38h], eax
		jz	short loc_6ED4AB05
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED4AB05:				; CODE XREF: .text:6ED4AAFDj
		mov	ecx, [ebp+8]
		mov	edx, [ebp+0Ch]
		mov	dword ptr [ecx+3Ch], 0
		mov	eax, [edx+3Ch]
		mov	dword ptr [ecx+40h], 1
		mov	edx, [eax]
		mov	dword ptr [esp+4], 1
		mov	[esp], eax
		mov	eax, [edx+20h]
		mov	dword ptr [ebp-38h], 1
		call	eax
		mov	ecx, [ebp+8]
		mov	edx, [ecx+3Ch]
		cmp	eax, edx
		jz	short loc_6ED4AB68
		test	eax, eax
		jz	short loc_6ED4AB4D
		lock inc dword ptr [eax+4]
		setnz	dl
		mov	edx, [ecx+3Ch]

loc_6ED4AB4D:				; CODE XREF: .text:6ED4AB41j
		mov	ecx, [ebp+8]
		test	edx, edx
		mov	[ecx+3Ch], eax
		jz	short loc_6ED4AB62
		lock dec dword ptr [edx+4]
		setnz	al
		test	al, al
		jz	short loc_6ED4AB80

loc_6ED4AB62:				; CODE XREF: .text:6ED4AB55j
					; .text:6ED4AB91j
		mov	edx, [ebp+8]
		mov	eax, [edx+3Ch]

loc_6ED4AB68:				; CODE XREF: .text:6ED4AB3Dj
		mov	ecx, [ebp+8]
		or	byte ptr [eax+2Ch], 2
		mov	[eax+10h], ecx
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4AB80:				; CODE XREF: .text:6ED4AB60j
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+4]
		mov	dword ptr [ebp-38h], 1
		call	eax
		jmp	short loc_6ED4AB62
; ---------------------------------------------------------------------------

loc_6ED4AB93:				; DATA XREF: .text:6ED4AAA7o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], eax
		jz	short loc_6ED4ABC5
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 3Ch
		mov	[esp], eax
		call	sub_6ED91E90
		mov	eax, [ebp+8]
		add	eax, 38h
		mov	[esp], eax
		call	sub_6ED91ED0

loc_6ED4ABC5:				; CODE XREF: .text:6ED4ABA0j
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], edx
		call	sub_6ED48EB0
		mov	ecx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4ABF0	proc near		; DATA XREF: .rdata:6EDA714Co

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED99FFE
		mov	[ebp+var_18], offset sub_6ED4AC86
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_6EDA7148
		mov	eax, [edx+38h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED4AC5C
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+38h]
		test	eax, eax
		mov	[ebp+var_40], eax
		jz	short loc_6ED4AC5C
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	sub_6ED46C00
		mov	edx, [ebp+var_40]
		mov	[esp], edx
		call	sub_6ED988B0

loc_6ED4AC5C:				; CODE XREF: sub_6ED4ABF0+43j
					; sub_6ED4ABF0+50j
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED48EB0
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED988B0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED4ABF0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4AC86	proc near		; DATA XREF: sub_6ED4ABF0+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-44h], eax
		mov	[esp+0], edx
		call	sub_6ED48EB0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED4AC86	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4ACC0	proc near		; DATA XREF: .rdata:off_6EDA7148o

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A004
		mov	[ebp+var_18], offset sub_6ED4AD4B
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_6EDA7148
		mov	eax, [edx+38h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED4AD2C
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+38h]
		test	eax, eax
		mov	[ebp+var_40], eax
		jz	short loc_6ED4AD2C
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	sub_6ED46C00
		mov	edx, [ebp+var_40]
		mov	[esp], edx
		call	sub_6ED988B0

loc_6ED4AD2C:				; CODE XREF: sub_6ED4ACC0+43j
					; sub_6ED4ACC0+50j
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED48EB0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED4ACC0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4AD4B	proc near		; DATA XREF: sub_6ED4ACC0+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-44h], eax
		mov	[esp+0], edx
		call	sub_6ED48EB0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED4AD4B	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_6ED997C0
		mov	dword ptr [ebp-20h], offset word_6ED9A00A
		mov	dword ptr [ebp-18h], offset loc_6ED4AE0B
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+8]
		mov	dword ptr [edx], offset	off_6EDA7148
		mov	eax, [edx+38h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED4ADEC
		mov	eax, [ebp+8]
		mov	eax, [eax+38h]
		test	eax, eax
		mov	[ebp-40h], eax
		jz	short loc_6ED4ADEC
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 1
		call	sub_6ED46C00
		mov	edx, [ebp-40h]
		mov	[esp], edx
		call	sub_6ED988B0

loc_6ED4ADEC:				; CODE XREF: .text:6ED4ADC3j
					; .text:6ED4ADD0j
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED48EB0
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED4AE0B:				; DATA XREF: .text:6ED4ADA0o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-44h], eax
		mov	[esp], edx
		call	sub_6ED48EB0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4AE40	proc near		; DATA XREF: .rdata:off_6EDA7528o

var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A010
		mov	[ebp+var_18], offset sub_6ED4AF83
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_6EDA7528
		mov	eax, [edx+38h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED4AEAC
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+38h]
		test	eax, eax
		mov	[ebp+var_44], eax
		jz	short loc_6ED4AEAC
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	sub_6ED46C00
		mov	edx, [ebp+var_44]
		mov	[esp], edx
		call	sub_6ED988B0

loc_6ED4AEAC:				; CODE XREF: sub_6ED4AE40+43j
					; sub_6ED4AE40+50j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+3Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED4AEE3
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+3Ch]
		test	eax, eax
		mov	[ebp+var_40], eax
		jz	short loc_6ED4AEE3
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	sub_6ED46C00
		mov	edx, [ebp+var_40]
		mov	[esp], edx
		call	sub_6ED988B0

loc_6ED4AEE3:				; CODE XREF: sub_6ED4AE40+7Aj
					; sub_6ED4AE40+87j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+48h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4AF68

loc_6ED4AEF3:				; CODE XREF: sub_6ED4AE40+13Ej
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+44h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4AF50

loc_6ED4AF03:				; CODE XREF: sub_6ED4AE40+126j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+40h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4AF32

loc_6ED4AF13:				; CODE XREF: sub_6ED4AE40+108j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED48EB0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED4AF32:				; CODE XREF: sub_6ED4AE40+D1j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+40h]
		mov	[ebp+var_38], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED4AF13
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4AF50:				; CODE XREF: sub_6ED4AE40+C1j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+44h]
		mov	[ebp+var_38], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED4AF03
; ---------------------------------------------------------------------------

loc_6ED4AF68:				; CODE XREF: sub_6ED4AE40+B1j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+48h]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED4AEF3
sub_6ED4AE40	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4AF83	proc near		; DATA XREF: sub_6ED4AE40+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-48h], edx
		jz	short loc_6ED4AFB3
		cmp	eax, 2
		jz	short loc_6ED4AFC8
		cmp	eax, 3
		jz	short loc_6ED4AFDD
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 48h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED4AFB3:				; CODE XREF: sub_6ED4AF83+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 44h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED4AFC8:				; CODE XREF: sub_6ED4AF83+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 40h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED4AFDD:				; CODE XREF: sub_6ED4AF83+19j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED48EB0
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED4AF83	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4B010	proc near		; CODE XREF: sub_6ED4B0D0+108p
					; sub_6ED4B4B0+68p

var_3D		= byte ptr -3Dh
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= byte ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		movzx	eax, [ebp+arg_8]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_1C], edx
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A01C
		mov	[ebp+var_3D], al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_18], offset sub_6ED4B0A2
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		movzx	eax, [ebp+var_3D]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_6ED44270
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	dword ptr [eax], offset	off_6EDA7148
		mov	[esp+4], eax
		mov	eax, [edx+38h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	sub_6ED46DB0
		mov	edx, [ebp+arg_0]
		mov	[edx+38h], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED4B010	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4B0A2	proc near		; DATA XREF: sub_6ED4B010+27o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-44h], eax
		mov	[esp+0], edx
		call	sub_6ED48EB0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED4B0A2	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4B0D0	proc near		; CODE XREF: _ZN12QDomDocument10importNodeERK8QDomNodeb+5Ap

var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_45		= byte ptr -45h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= byte ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		movzx	eax, [ebp+arg_8]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_1C], edx
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A022
		mov	[ebp+var_45], al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_18], offset sub_6ED4B404
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+60h]
		mov	[ebp+var_38], 0FFFFFFFFh
		call	eax
		cmp	eax, 0Ch	; switch 13 cases
		jbe	short loc_6ED4B160

loc_6ED4B122:				; CODE XREF: sub_6ED4B0D0:loc_6ED4B160j
					; DATA XREF: .rdata:off_6EDA00E0o
		mov	[ebp+var_40], 0	; jumptable 6ED4B160 default case
		lea	esi, [esi+0]

loc_6ED4B130:				; CODE XREF: sub_6ED4B0D0+D4j
					; sub_6ED4B0D0+113j ...
		mov	eax, [ebp+var_40]
		test	eax, eax
		jz	short loc_6ED4B14B
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_40]
		mov	[edx+10h], eax
		and	byte ptr [edx+2Ch], 0FDh
		lock dec dword ptr [edx+4]
		setnz	al

loc_6ED4B14B:				; CODE XREF: sub_6ED4B0D0+65j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_40]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4B160:				; CODE XREF: sub_6ED4B0D0+50j
		jmp	ds:off_6EDA00E0[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_6ED4B167:				; CODE XREF: sub_6ED4B0D0:loc_6ED4B160j
					; DATA XREF: .rdata:off_6EDA00E0o
		mov	dword ptr [esp], 40h ; jumptable 6ED4B160 case 12
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_38], 5
		mov	[esp+4], edx
		mov	[ebp+var_58], eax
		movzx	eax, [ebp+var_45]
		mov	[esp+8], eax
		mov	eax, [ebp+var_58]
		mov	[esp], eax
		call	sub_6ED4A390
		mov	edx, [ebp+var_58]
		mov	[ebp+var_40], edx
		jmp	short loc_6ED4B130
; ---------------------------------------------------------------------------

loc_6ED4B1A6:				; CODE XREF: sub_6ED4B0D0:loc_6ED4B160j
					; DATA XREF: .rdata:off_6EDA00E0o
		mov	dword ptr [esp], 3Ch ; jumptable 6ED4B160 case 1
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_38], 8
		mov	[ebp+var_64], eax
		movzx	eax, [ebp+var_45]
		mov	edx, [ebp+var_64]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_6ED4B010
		mov	eax, [ebp+var_64]
		mov	[ebp+var_40], eax
		jmp	loc_6ED4B130
; ---------------------------------------------------------------------------

loc_6ED4B1E8:				; CODE XREF: sub_6ED4B0D0:loc_6ED4B160j
					; DATA XREF: .rdata:off_6EDA00E0o
		mov	dword ptr [esp], 3Ch ; jumptable 6ED4B160 case 2
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	dword ptr [esp+8], 1
		mov	[ebp+var_38], 0Ah
		mov	[ebp+var_6C], eax
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+var_6C]
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_6ED44540
		mov	eax, [ebp+var_6C]
		mov	[ebp+var_40], eax
		jmp	loc_6ED4B130
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4B230:				; CODE XREF: sub_6ED4B0D0:loc_6ED4B160j
					; DATA XREF: .rdata:off_6EDA00E0o
		mov	dword ptr [esp], 38h ; jumptable 6ED4B160 case 3
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_38], 3
		mov	[esp+4], edx
		mov	[ebp+var_50], eax
		movzx	eax, [ebp+var_45]
		mov	[esp+8], eax
		mov	eax, [ebp+var_50]
		mov	[esp], eax
		call	sub_6ED446A0
		mov	edx, [ebp+var_50]
		mov	[ebp+var_40], edx
		jmp	loc_6ED4B130
; ---------------------------------------------------------------------------

loc_6ED4B272:				; CODE XREF: sub_6ED4B0D0:loc_6ED4B160j
					; DATA XREF: .rdata:off_6EDA00E0o
		mov	dword ptr [esp], 38h ; jumptable 6ED4B160 case 4
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_38], 2
		mov	[ebp+var_4C], eax
		movzx	eax, [ebp+var_45]
		mov	edx, [ebp+var_4C]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_6ED44700
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_40], eax
		jmp	loc_6ED4B130
; ---------------------------------------------------------------------------

loc_6ED4B2B4:				; CODE XREF: sub_6ED4B0D0:loc_6ED4B160j
					; DATA XREF: .rdata:off_6EDA00E0o
		mov	dword ptr [esp], 38h ; jumptable 6ED4B160 case 5
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_38], 6
		mov	[ebp+var_5C], eax
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+var_5C]
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_6ED444E0
		mov	eax, [ebp+var_5C]
		mov	[ebp+var_40], eax
		jmp	loc_6ED4B130
; ---------------------------------------------------------------------------

loc_6ED4B2F6:				; CODE XREF: sub_6ED4B0D0:loc_6ED4B160j
					; DATA XREF: .rdata:off_6EDA00E0o
		mov	dword ptr [esp], 44h ; jumptable 6ED4B160 case 6
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_38], 7
		mov	[esp+4], edx
		mov	[ebp+var_60], eax
		movzx	eax, [ebp+var_45]
		mov	[esp+8], eax
		mov	eax, [ebp+var_60]
		mov	[esp], eax
		call	sub_6ED4A020
		mov	edx, [ebp+var_60]
		mov	[ebp+var_40], edx
		jmp	loc_6ED4B130
; ---------------------------------------------------------------------------

loc_6ED4B338:				; CODE XREF: sub_6ED4B0D0:loc_6ED4B160j
					; DATA XREF: .rdata:off_6EDA00E0o
		mov	dword ptr [esp], 38h ; jumptable 6ED4B160 case 7
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_38], 4
		mov	[ebp+var_54], eax
		movzx	eax, [ebp+var_45]
		mov	edx, [ebp+var_54]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_6ED44480
		mov	eax, [ebp+var_54]
		mov	[ebp+var_40], eax
		jmp	loc_6ED4B130
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4B380:				; CODE XREF: sub_6ED4B0D0:loc_6ED4B160j
					; DATA XREF: .rdata:off_6EDA00E0o
		mov	dword ptr [esp], 38h ; jumptable 6ED4B160 case 8
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_38], 1
		mov	[esp+4], edx
		mov	[ebp+var_44], eax
		movzx	eax, [ebp+var_45]
		mov	[esp+8], eax
		mov	eax, [ebp+var_44]
		mov	[esp], eax
		call	sub_6ED44640
		mov	eax, [ebp+var_44]
		mov	[ebp+var_40], eax
		jmp	loc_6ED4B130
; ---------------------------------------------------------------------------

loc_6ED4B3C2:				; CODE XREF: sub_6ED4B0D0:loc_6ED4B160j
					; DATA XREF: .rdata:off_6EDA00E0o
		mov	dword ptr [esp], 38h ; jumptable 6ED4B160 case 11
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_38], 9
		mov	[esp+4], edx
		mov	[ebp+var_68], eax
		movzx	eax, [ebp+var_45]
		mov	[esp+8], eax
		mov	eax, [ebp+var_68]
		mov	[esp], eax
		call	sub_6ED44760
		mov	edx, [ebp+var_68]
		mov	[ebp+var_40], edx
		jmp	loc_6ED4B130
sub_6ED4B0D0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4B404	proc near		; DATA XREF: sub_6ED4B0D0+2Ao
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-70h], edx
		jz	short loc_6ED4B464
		cmp	eax, 2
		jz	loc_6ED4B4A7
		cmp	eax, 3
		jz	short loc_6ED4B4A2
		cmp	eax, 4
		jz	short loc_6ED4B49A
		cmp	eax, 5
		nop
		lea	esi, [esi+0]
		jz	short loc_6ED4B495
		cmp	eax, 6
		jz	short loc_6ED4B490
		cmp	eax, 7
		jz	short loc_6ED4B48B
		cmp	eax, 8
		nop
		jz	short loc_6ED4B46E
		cmp	eax, 9
		jz	short loc_6ED4B469
		mov	eax, [ebp-44h]

loc_6ED4B44A:				; CODE XREF: sub_6ED4B404+63j
					; sub_6ED4B404+68j ...
		mov	[esp+0], eax
		call	sub_6ED988B0
		mov	edx, [ebp-70h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED4B464:				; CODE XREF: sub_6ED4B404+Fj
		mov	eax, [ebp-4Ch]
		jmp	short loc_6ED4B44A
; ---------------------------------------------------------------------------

loc_6ED4B469:				; CODE XREF: sub_6ED4B404+41j
		mov	eax, [ebp-6Ch]
		jmp	short loc_6ED4B44A
; ---------------------------------------------------------------------------

loc_6ED4B46E:				; CODE XREF: sub_6ED4B404+3Cj
		mov	edx, [ebp-68h]

loc_6ED4B471:				; CODE XREF: sub_6ED4B404+8Fj
					; sub_6ED4B404+9Cj ...
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	eax, [ebp-70h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED4B48B:				; CODE XREF: sub_6ED4B404+36j
		mov	eax, [ebp-64h]
		jmp	short loc_6ED4B44A
; ---------------------------------------------------------------------------

loc_6ED4B490:				; CODE XREF: sub_6ED4B404+31j
		mov	edx, [ebp-60h]
		jmp	short loc_6ED4B471
; ---------------------------------------------------------------------------

loc_6ED4B495:				; CODE XREF: sub_6ED4B404+2Cj
		mov	eax, [ebp-5Ch]
		jmp	short loc_6ED4B44A
; ---------------------------------------------------------------------------

loc_6ED4B49A:				; CODE XREF: sub_6ED4B404+22j
		mov	edx, [ebp-58h]
		lea	esi, [esi+0]
		jmp	short loc_6ED4B471
; ---------------------------------------------------------------------------

loc_6ED4B4A2:				; CODE XREF: sub_6ED4B404+1Dj
		mov	eax, [ebp-54h]
		jmp	short loc_6ED4B44A
; ---------------------------------------------------------------------------

loc_6ED4B4A7:				; CODE XREF: sub_6ED4B404+14j
		mov	edx, [ebp-50h]
		jmp	short loc_6ED4B471
sub_6ED4B404	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4B4B0	proc near		; DATA XREF: .rdata:6EDA7168o

var_41		= byte ptr -41h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= byte ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		movzx	eax, [ebp+arg_4]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_1C], edx
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A03A
		mov	[ebp+var_41], al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_18], offset sub_6ED4B537
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 3Ch ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		movzx	eax, [ebp+var_41]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+4], eax
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED4B010
		mov	edx, [ebp+var_40]
		lock dec dword ptr [edx+4]
		setnz	al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_40]
		leave
		retn
sub_6ED4B4B0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4B537	proc near		; DATA XREF: sub_6ED4B4B0+27o
		add	ebp, 8
		mov	edx, [ebp-34h]
		mov	eax, [ebp-40h]
		mov	[ebp-48h], edx
		mov	[esp+0], eax
		call	sub_6ED988B0
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED4B537	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		movzx	eax, byte ptr [ebp+10h]
		lea	edx, [ebp-8]
		mov	[ebp-1Ch], edx
		mov	dword ptr [ebp-24h], offset sub_6ED997C0
		mov	dword ptr [ebp-20h], offset dword_6ED9A040
		mov	[ebp-3Dh], al
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-18h], offset loc_6ED4B5F2
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		movzx	eax, byte ptr [ebp-3Dh]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+0Ch]
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_6ED44270
		mov	eax, [ebp+8]
		mov	edx, [ebp+0Ch]
		mov	dword ptr [eax], offset	off_6EDA7148
		mov	[esp+4], eax
		mov	eax, [edx+38h]
		mov	dword ptr [ebp-38h], 1
		mov	[esp], eax
		call	sub_6ED46DB0
		mov	edx, [ebp+8]
		mov	[edx+38h], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED4B5F2:				; DATA XREF: .text:6ED4B587o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-44h], eax
		mov	[esp], edx
		call	sub_6ED48EB0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4B620	proc near		; CODE XREF: _ZN12QDomNodeListD1Ev+21p
					; _ZN12QDomNodeListD2Ev+21p ...

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A06A
		mov	[ebp+var_18], offset sub_6ED4B6F8
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		test	eax, eax
		jz	short loc_6ED4B664
		lock dec dword ptr [eax+4]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4B6C0

loc_6ED4B664:				; CODE XREF: sub_6ED4B620+37j
					; sub_6ED4B620+A8j ...
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 2
		add	eax, 10h
		mov	[esp], eax
		call	sub_6ED942B0
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4B6E0

loc_6ED4B689:				; CODE XREF: sub_6ED4B620+D6j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED4B6AF
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED4B6AF:				; CODE XREF: sub_6ED4B620+77j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4B6C0:				; CODE XREF: sub_6ED4B620+42j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		test	eax, eax
		jz	short loc_6ED4B664
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 1
		call	eax
		jmp	short loc_6ED4B664
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4B6E0:				; CODE XREF: sub_6ED4B620+67j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		mov	[ebp+var_38], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED4B689
sub_6ED4B620	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4B6F8	proc near		; DATA XREF: sub_6ED4B620+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-40h], edx
		jz	short loc_6ED4B723
		cmp	eax, 2
		jz	short loc_6ED4B738
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 10h
		mov	[esp+0], eax
		call	sub_6ED942B0

loc_6ED4B723:				; CODE XREF: sub_6ED4B6F8+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED4B738:				; CODE XREF: sub_6ED4B6F8+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED4B6F8	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  86. _ZN12QDomNodeListD1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QDomNodeListD1Ev
_ZN12QDomNodeListD1Ev proc near

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED4B793
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_6ED4B793
		mov	ebx, [edx]
		test	ebx, ebx
		jz	short loc_6ED4B793
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED4B620
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_6ED988B0
; ---------------------------------------------------------------------------

loc_6ED4B793:				; CODE XREF: _ZN12QDomNodeListD1Ev+Cj
					; _ZN12QDomNodeListD1Ev+16j ...
		add	esp, 18h
		pop	ebx
		retn
_ZN12QDomNodeListD1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  87. _ZN12QDomNodeListD2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QDomNodeListD2Ev
_ZN12QDomNodeListD2Ev proc near

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED4B7D3
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_6ED4B7D3
		mov	ebx, [edx]
		test	ebx, ebx
		jz	short loc_6ED4B7D3
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED4B620
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_6ED988B0
; ---------------------------------------------------------------------------

loc_6ED4B7D3:				; CODE XREF: _ZN12QDomNodeListD2Ev+Cj
					; _ZN12QDomNodeListD2Ev+16j ...
		add	esp, 18h
		pop	ebx
		retn
_ZN12QDomNodeListD2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  88. _ZN12QDomNodeListaSERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QDomNodeListaSERKS_
_ZN12QDomNodeListaSERKS_ proc near

var_1C		= dword	ptr -1Ch
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_C], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_4], edi
		mov	edx, [esi]
		test	edx, edx
		jz	short loc_6ED4B803
		lock inc dword ptr [edx]
		setnz	al

loc_6ED4B803:				; CODE XREF: _ZN12QDomNodeListaSERKS_+1Bj
		mov	edx, [ebx]
		test	edx, edx
		jz	short loc_6ED4B829
		lock dec dword ptr [edx]
		setnz	al
		test	al, al
		jnz	short loc_6ED4B829
		mov	edi, [ebx]
		test	edi, edi
		jz	short loc_6ED4B829
		mov	[esp+1Ch+var_1C], edi
		call	sub_6ED4B620
		mov	[esp+1Ch+var_1C], edi
		call	sub_6ED988B0

loc_6ED4B829:				; CODE XREF: _ZN12QDomNodeListaSERKS_+27j
					; _ZN12QDomNodeListaSERKS_+31j	...
		mov	eax, [esi]
		mov	[ebx], eax
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_8]
		mov	ebx, [esp+1Ch+var_C]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
_ZN12QDomNodeListaSERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_6ED997C0
		mov	dword ptr [ebp-20h], offset dword_6ED9A074
		mov	dword ptr [ebp-18h], offset loc_6ED4B918
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+8]
		mov	eax, [edx+4]
		test	eax, eax
		jz	short loc_6ED4B884
		lock dec dword ptr [eax+4]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4B8E0

loc_6ED4B884:				; CODE XREF: .text:6ED4B877j
					; .text:6ED4B8E8j ...
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 2
		add	eax, 10h
		mov	[esp], eax
		call	sub_6ED942B0
		mov	edx, [ebp+8]
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4B900

loc_6ED4B8A9:				; CODE XREF: .text:6ED4B916j
		mov	edx, [ebp+8]
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED4B8CF
		mov	edx, [ebp+8]
		mov	eax, [edx+8]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED4B8CF:				; CODE XREF: .text:6ED4B8B7j
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4B8E0:				; CODE XREF: .text:6ED4B882j
		mov	edx, [ebp+8]
		mov	eax, [edx+4]
		test	eax, eax
		jz	short loc_6ED4B884
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 1
		call	eax
		jmp	short loc_6ED4B884
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4B900:				; CODE XREF: .text:6ED4B8A7j
		mov	edx, [ebp+8]
		mov	eax, [edx+0Ch]
		mov	dword ptr [ebp-38h], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED4B8A9
; ---------------------------------------------------------------------------

loc_6ED4B918:				; DATA XREF: .text:6ED4B860o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-40h], edx
		jz	short loc_6ED4B943
		cmp	eax, 2
		jz	short loc_6ED4B958
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 10h
		mov	[esp], eax
		call	sub_6ED942B0

loc_6ED4B943:				; CODE XREF: .text:6ED4B927j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp], eax
		call	sub_6ED94560

loc_6ED4B958:				; CODE XREF: .text:6ED4B92Cj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp], eax
		call	sub_6ED94560
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED4B980	proc near		; DATA XREF: .rdata:6EDA6D3Co

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFECh
		jmp	short sub_6ED4B990
sub_6ED4B980	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4B990	proc near		; CODE XREF: sub_6ED4B980+5j
					; DATA XREF: .rdata:6EDA6C9Co

var_4D		= byte ptr -4Dh
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A07E
		mov	[ebp+var_28], offset sub_6ED4BA34
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	edx, [eax+48h]
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	cl
		lea	eax, [ebp+var_C]
		mov	[esp+10h], eax
		mov	eax, [ebp+arg_C]
		mov	[ebp+var_48], 1
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	edx
		mov	[ebp+var_4D], al
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED4BA23
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED4BA23:				; CODE XREF: sub_6ED4B990+7Ej
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_4D]
		leave
		retn
sub_6ED4B990	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4BA34	proc near		; DATA XREF: sub_6ED4B990+20o
		add	ebp, 8
		mov	edx, [ebp-44h]
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	[ebp-54h], edx
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED4BA34	endp

; ---------------------------------------------------------------------------
		jmp	short sub_6ED4BA70
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED4BA70	proc near		; CODE XREF: .text:6ED4BA61j
					; DATA XREF: .rdata:6EDA6D30o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFECh
		jmp	short sub_6ED4BAC0
sub_6ED4BA70	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED4BA80	proc near		; DATA XREF: .rdata:6EDA6D00o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF0h
		jmp	short sub_6ED4BAC0
sub_6ED4BA80	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED4BA90	proc near		; DATA XREF: .rdata:6EDA6CE8o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF4h
		jmp	short sub_6ED4BAC0
sub_6ED4BA90	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED4BAA0	proc near		; DATA XREF: .rdata:6EDA6CCCo

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF8h
		jmp	short sub_6ED4BAC0
sub_6ED4BAA0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED4BAB0	proc near		; DATA XREF: .rdata:6EDA6CACo

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFFCh
		jmp	short sub_6ED4BAC0
sub_6ED4BAB0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4BAC0	proc near		; CODE XREF: sub_6ED4BA70+5j
					; sub_6ED4BA80+5j ...

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A084
		mov	[ebp+var_18], offset sub_6ED4BBB0
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_6EDA6C28
		mov	eax, [edx+30h]
		mov	dword ptr [edx+4], offset off_6EDA6CA8
		mov	dword ptr [edx+8], offset off_6EDA6CC8
		mov	dword ptr [edx+0Ch], offset off_6EDA6CE4
		mov	dword ptr [edx+10h], offset off_6EDA6CFC
		mov	dword ptr [edx+14h], offset off_6EDA6D2C
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4BB80

loc_6ED4BB28:				; CODE XREF: sub_6ED4BAC0+D6j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+1Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4BB98

loc_6ED4BB38:				; CODE XREF: sub_6ED4BAC0+EEj
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+14h], offset off_6EDA6F48
		mov	dword ptr [eax+10h], offset off_6EDA7368
		mov	dword ptr [eax+0Ch], offset off_6EDA7348
		mov	dword ptr [eax+8], offset off_6EDA6D90
		mov	dword ptr [eax+4], offset off_6EDA6FA8
		mov	dword ptr [eax], offset	off_6EDA71C8
		mov	[esp], eax
		call	sub_6ED988B0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4BB80:				; CODE XREF: sub_6ED4BAC0+66j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+30h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED4BB28
; ---------------------------------------------------------------------------

loc_6ED4BB98:				; CODE XREF: sub_6ED4BAC0+76j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+1Ch]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED4BB38
sub_6ED4BAC0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4BBB0	proc near		; DATA XREF: sub_6ED4BAC0+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-40h], eax
		jz	short loc_6ED4BBD4
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 1Ch
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED4BBD4:				; CODE XREF: sub_6ED4BBB0+Dj
		mov	eax, [ebp+8]
		mov	edx, [ebp-40h]
		mov	dword ptr [eax+14h], offset off_6EDA6F48
		mov	dword ptr [eax+10h], offset off_6EDA7368
		mov	dword ptr [eax+0Ch], offset off_6EDA7348
		mov	dword ptr [eax+8], offset off_6EDA6D90
		mov	dword ptr [eax+4], offset off_6EDA6FA8
		mov	dword ptr [eax], offset	off_6EDA71C8
		mov	[esp+0], edx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED4BBB0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED4BC20	proc near		; DATA XREF: .rdata:off_6EDA6D2Co

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFECh
		jmp	short sub_6ED4BC70
sub_6ED4BC20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED4BC30	proc near		; DATA XREF: .rdata:off_6EDA6CFCo

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF0h
		jmp	short sub_6ED4BC70
sub_6ED4BC30	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED4BC40	proc near		; DATA XREF: .rdata:off_6EDA6CE4o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF4h
		jmp	short sub_6ED4BC70
sub_6ED4BC40	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED4BC50	proc near		; DATA XREF: .rdata:off_6EDA6CC8o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF8h
		jmp	short sub_6ED4BC70
sub_6ED4BC50	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED4BC60	proc near		; DATA XREF: .rdata:off_6EDA6CA8o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFFCh
		jmp	short sub_6ED4BC70
sub_6ED4BC60	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4BC70	proc near		; CODE XREF: sub_6ED4BC20+5j
					; sub_6ED4BC30+5j ...

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A08C
		mov	[ebp+var_18], offset sub_6ED4BD58
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_6EDA6C28
		mov	eax, [edx+30h]
		mov	dword ptr [edx+4], offset off_6EDA6CA8
		mov	dword ptr [edx+8], offset off_6EDA6CC8
		mov	dword ptr [edx+0Ch], offset off_6EDA6CE4
		mov	dword ptr [edx+10h], offset off_6EDA6CFC
		mov	dword ptr [edx+14h], offset off_6EDA6D2C
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4BD21

loc_6ED4BCD8:				; CODE XREF: sub_6ED4BC70+C7j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+1Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4BD40

loc_6ED4BCE8:				; CODE XREF: sub_6ED4BC70+E6j
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+14h], offset off_6EDA6F48
		mov	dword ptr [eax+10h], offset off_6EDA7368
		mov	dword ptr [eax+0Ch], offset off_6EDA7348
		mov	dword ptr [eax+8], offset off_6EDA6D90
		mov	dword ptr [eax+4], offset off_6EDA6FA8
		mov	dword ptr [eax], offset	off_6EDA71C8
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED4BD21:				; CODE XREF: sub_6ED4BC70+66j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+30h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED4BCD8
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4BD40:				; CODE XREF: sub_6ED4BC70+76j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+1Ch]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED4BCE8
sub_6ED4BC70	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4BD58	proc near		; DATA XREF: sub_6ED4BC70+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-40h], eax
		jz	short loc_6ED4BD7C
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 1Ch
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED4BD7C:				; CODE XREF: sub_6ED4BD58+Dj
		mov	eax, [ebp+8]
		mov	edx, [ebp-40h]
		mov	dword ptr [eax+14h], offset off_6EDA6F48
		mov	dword ptr [eax+10h], offset off_6EDA7368
		mov	dword ptr [eax+0Ch], offset off_6EDA7348
		mov	dword ptr [eax+8], offset off_6EDA6D90
		mov	dword ptr [eax+4], offset off_6EDA6FA8
		mov	dword ptr [eax], offset	off_6EDA71C8
		mov	[esp+0], edx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED4BD58	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4BDC0	proc near		; CODE XREF: _ZN11QDomElement19removeAttributeNodeERK8QDomAttr+1Fp

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A094
		mov	[ebp+var_28], offset sub_6ED4BE4D
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_4]
		mov	eax, [eax+1Ch]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+38h]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	sub_6ED47150
		mov	[ebp+var_50], eax
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED4BE3D
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED4BE3D:				; CODE XREF: sub_6ED4BDC0+68j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_50]
		leave
		retn
sub_6ED4BDC0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4BE4D	proc near		; DATA XREF: sub_6ED4BDC0+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-54h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED4BE4D	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  33. _ZN11QDomElement19removeAttributeNodeERK8QDomAttr

; =============== S U B	R O U T	I N E =======================================


		public _ZN11QDomElement19removeAttributeNodeERK8QDomAttr
_ZN11QDomElement19removeAttributeNodeERK8QDomAttr proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED4BEC0
		mov	edx, [esp+1Ch+arg_8]
		mov	edx, [edx]
		mov	[esp+1Ch+var_1C], eax
		mov	[esp+1Ch+var_18], edx
		call	sub_6ED4BDC0
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED4BEB1
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED4BEB1:				; CODE XREF: _ZN11QDomElement19removeAttributeNodeERK8QDomAttr+28j
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4BEC0:				; CODE XREF: _ZN11QDomElement19removeAttributeNodeERK8QDomAttr+10j
		mov	dword ptr [ebx], 0
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
_ZN11QDomElement19removeAttributeNodeERK8QDomAttr endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_6ED997C0
		mov	dword ptr [ebp-20h], offset word_6ED9A09A
		mov	dword ptr [ebp-18h], offset loc_6ED4C013
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+8]
		mov	dword ptr [edx], offset	off_6EDA7528
		mov	eax, [edx+38h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED4BF3C
		mov	eax, [ebp+8]
		mov	eax, [eax+38h]
		test	eax, eax
		mov	[ebp-44h], eax
		jz	short loc_6ED4BF3C
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 1
		call	sub_6ED46C00
		mov	edx, [ebp-44h]
		mov	[esp], edx
		call	sub_6ED988B0

loc_6ED4BF3C:				; CODE XREF: .text:6ED4BF13j
					; .text:6ED4BF20j
		mov	edx, [ebp+8]
		mov	eax, [edx+3Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED4BF73
		mov	eax, [ebp+8]
		mov	eax, [eax+3Ch]
		test	eax, eax
		mov	[ebp-40h], eax
		jz	short loc_6ED4BF73
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 1
		call	sub_6ED46C00
		mov	edx, [ebp-40h]
		mov	[esp], edx
		call	sub_6ED988B0

loc_6ED4BF73:				; CODE XREF: .text:6ED4BF4Aj
					; .text:6ED4BF57j
		mov	edx, [ebp+8]
		mov	eax, [edx+48h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4BFF8

loc_6ED4BF83:				; CODE XREF: .text:6ED4C00Ej
		mov	edx, [ebp+8]
		mov	eax, [edx+44h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4BFE0

loc_6ED4BF93:				; CODE XREF: .text:6ED4BFF6j
		mov	edx, [ebp+8]
		mov	eax, [edx+40h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4BFC2

loc_6ED4BFA3:				; CODE XREF: .text:6ED4BFD8j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED48EB0
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED4BFC2:				; CODE XREF: .text:6ED4BFA1j
		mov	edx, [ebp+8]
		mov	eax, [edx+40h]
		mov	dword ptr [ebp-38h], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED4BFA3
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4BFE0:				; CODE XREF: .text:6ED4BF91j
		mov	edx, [ebp+8]
		mov	eax, [edx+44h]
		mov	dword ptr [ebp-38h], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED4BF93
; ---------------------------------------------------------------------------

loc_6ED4BFF8:				; CODE XREF: .text:6ED4BF81j
		mov	edx, [ebp+8]
		mov	eax, [edx+48h]
		mov	dword ptr [ebp-38h], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED4BF83
; ---------------------------------------------------------------------------

loc_6ED4C013:				; DATA XREF: .text:6ED4BEF0o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-48h], edx
		jz	short loc_6ED4C043
		cmp	eax, 2
		jz	short loc_6ED4C058
		cmp	eax, 3
		jz	short loc_6ED4C06D
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 48h
		mov	[esp], eax
		call	sub_6ED94560

loc_6ED4C043:				; CODE XREF: .text:6ED4C022j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 44h
		mov	[esp], eax
		call	sub_6ED94560

loc_6ED4C058:				; CODE XREF: .text:6ED4C027j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 40h
		mov	[esp], eax
		call	sub_6ED94560

loc_6ED4C06D:				; CODE XREF: .text:6ED4C02Cj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], eax
		call	sub_6ED48EB0
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4C0A0	proc near		; DATA XREF: .rdata:6EDA6F2Co

var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A0A6
		mov	[ebp+var_28], offset sub_6ED4C177
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		test	byte ptr [edx+2Ch], 2
		jz	loc_6ED4C170
		mov	eax, [edx+10h]
		test	eax, eax
		jz	loc_6ED4C170
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+40h]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	eax
		xor	ecx, ecx
		test	al, al
		jz	short loc_6ED4C170

loc_6ED4C0FE:				; CODE XREF: sub_6ED4C0A0+D5j
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_C]
		mov	[esp], ecx
		mov	ecx, [ebp+arg_4]
		mov	dword ptr [esp+8], 1
		mov	dword ptr [esp+4], 0
		add	edx, 20h
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED480B0
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	[ebp+var_48], 1
		mov	[esp], edx
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED4C163
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED4C163:				; CODE XREF: sub_6ED4C0A0+AEj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED4C170:				; CODE XREF: sub_6ED4C0A0+36j
					; sub_6ED4C0A0+41j ...
		mov	ecx, 1
		jmp	short loc_6ED4C0FE
sub_6ED4C0A0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4C177	proc near		; DATA XREF: sub_6ED4C0A0+1Do
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-50h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-50h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED4C177	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4C1B0	proc near		; DATA XREF: .rdata:6EDA752Co

var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A0AC
		mov	[ebp+var_18], offset sub_6ED4C2FB
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_6EDA7528
		mov	eax, [edx+38h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED4C21C
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+38h]
		test	eax, eax
		mov	[ebp+var_44], eax
		jz	short loc_6ED4C21C
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	sub_6ED46C00
		mov	edx, [ebp+var_44]
		mov	[esp], edx
		call	sub_6ED988B0

loc_6ED4C21C:				; CODE XREF: sub_6ED4C1B0+43j
					; sub_6ED4C1B0+50j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+3Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED4C253
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+3Ch]
		test	eax, eax
		mov	[ebp+var_40], eax
		jz	short loc_6ED4C253
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	sub_6ED46C00
		mov	edx, [ebp+var_40]
		mov	[esp], edx
		call	sub_6ED988B0

loc_6ED4C253:				; CODE XREF: sub_6ED4C1B0+7Aj
					; sub_6ED4C1B0+87j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+48h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4C2E0

loc_6ED4C263:				; CODE XREF: sub_6ED4C1B0+146j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+44h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4C2C8

loc_6ED4C273:				; CODE XREF: sub_6ED4C1B0+12Ej
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+40h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4C2B0

loc_6ED4C283:				; CODE XREF: sub_6ED4C1B0+116j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED48EB0
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		call	sub_6ED988B0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4C2B0:				; CODE XREF: sub_6ED4C1B0+D1j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+40h]
		mov	[ebp+var_38], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED4C283
; ---------------------------------------------------------------------------

loc_6ED4C2C8:				; CODE XREF: sub_6ED4C1B0+C1j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+44h]
		mov	[ebp+var_38], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED4C273
; ---------------------------------------------------------------------------

loc_6ED4C2E0:				; CODE XREF: sub_6ED4C1B0+B1j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+48h]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED4C263
sub_6ED4C1B0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4C2FB	proc near		; DATA XREF: sub_6ED4C1B0+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-48h], edx
		jz	short loc_6ED4C32B
		cmp	eax, 2
		jz	short loc_6ED4C340
		cmp	eax, 3
		jz	short loc_6ED4C355
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 48h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED4C32B:				; CODE XREF: sub_6ED4C2FB+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 44h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED4C340:				; CODE XREF: sub_6ED4C2FB+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 40h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED4C355:				; CODE XREF: sub_6ED4C2FB+19j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED48EB0
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED4C2FB	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4C380	proc near		; CODE XREF: _ZN11QDomElement16setAttributeNodeERK8QDomAttr+1Fp

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A0B8
		mov	[ebp+var_28], offset sub_6ED4C436
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+1Ch]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [edx+38h]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	sub_6ED45BD0
		mov	[ebp+var_50], eax
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED4C3FD
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED4C3FD:				; CODE XREF: sub_6ED4C380+68j
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		mov	[esp+4], eax
		mov	eax, [edx+38h]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED45D90
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		or	byte ptr [eax+2Ch], 2
		mov	[eax+10h], edx
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_50]
		leave
		retn
sub_6ED4C380	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4C436	proc near		; DATA XREF: sub_6ED4C380+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-54h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED4C436	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  30. _ZN11QDomElement16setAttributeNodeERK8QDomAttr

; =============== S U B	R O U T	I N E =======================================


		public _ZN11QDomElement16setAttributeNodeERK8QDomAttr
_ZN11QDomElement16setAttributeNodeERK8QDomAttr proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED4C4B0
		mov	edx, [esp+1Ch+arg_8]
		mov	edx, [edx]
		mov	[esp+1Ch+var_1C], eax
		mov	[esp+1Ch+var_18], edx
		call	sub_6ED4C380
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED4C4A1
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED4C4A1:				; CODE XREF: _ZN11QDomElement16setAttributeNodeERK8QDomAttr+28j
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4C4B0:				; CODE XREF: _ZN11QDomElement16setAttributeNodeERK8QDomAttr+10j
		mov	dword ptr [ebx], 0
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
_ZN11QDomElement16setAttributeNodeERK8QDomAttr endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4C4C0	proc near		; CODE XREF: sub_6ED50D50+56p
					; _ZN12QDomDocument10setContentEP15QXmlInputSourcebP7QStringPiS4_+63p

var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_51		= byte ptr -51h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		mov	[ebp+var_50], eax
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_51], dl
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A0BE
		mov	[ebp+var_28], offset sub_6ED4C643
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+var_50]
		mov	eax, [edx]
		mov	eax, [eax+0Ch]
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aHttpXml_orgSax	; "http://xml.org/sax/features/namespaces"
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[ebp+var_60], eax
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_48], 3
		mov	[ebp+var_C], eax
		movzx	eax, [ebp+var_51]
		mov	[esp+8], eax
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_50]
		mov	[esp], eax
		call	[ebp+var_60]
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED4C55E
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED4C55E:				; CODE XREF: sub_6ED4C4C0+89j
		mov	edx, [ebp+var_50]
		mov	eax, [edx]
		mov	eax, [eax+0Ch]
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aHttpXml_orgS_0	; "http://xml.org/sax/features/namespace-p"...
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[ebp+var_5C], eax
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_48], 2
		mov	[ebp+var_10], eax
		movzx	eax, [ebp+var_51]
		xor	eax, 1
		movzx	eax, al
		mov	[esp+8], eax
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	eax, [ebp+var_50]
		mov	[esp], eax
		call	[ebp+var_5C]
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED4C5CD
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED4C5CD:				; CODE XREF: sub_6ED4C4C0+F8j
		mov	edx, [ebp+var_50]
		mov	eax, [edx]
		mov	eax, [eax+0Ch]
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aHttpTrolltech_	; "http://trolltech.com/xml/features/repor"...
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[ebp+var_58], eax
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_48], 1
		mov	[ebp+var_14], eax
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	eax, [ebp+var_50]
		mov	[esp], eax
		call	[ebp+var_58]
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED4C636
		mov	eax, [ebp+var_14]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED4C636:				; CODE XREF: sub_6ED4C4C0+161j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED4C4C0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4C643	proc near		; DATA XREF: sub_6ED4C4C0+26o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-64h], edx
		jz	short loc_6ED4C67D
		cmp	eax, 2
		jz	short loc_6ED4C6A1
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-64h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED4C67D:				; CODE XREF: sub_6ED4C643+Fj
		lea	eax, [ebp-10h]

loc_6ED4C680:				; CODE XREF: sub_6ED4C643+61j
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	edx, [ebp-64h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED4C6A1:				; CODE XREF: sub_6ED4C643+14j
		lea	eax, [ebp-0Ch]
		jmp	short loc_6ED4C680
sub_6ED4C643	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4C6B0	proc near		; CODE XREF: sub_6ED4C7F0+51p
					; .text:6ED4C971p ...

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A0C8
		mov	[ebp+var_28], offset sub_6ED4C7A0
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_8]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED416C0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA75C8
		mov	eax, [ebp+arg_C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 20h
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+arg_0]
		add	eax, 1Ch
		mov	[ebp+var_50], eax
		lea	eax, [ebp+var_C]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aCharacterData ; "#character-data"
		mov	[esp], eax
		call	ds:_ZN7QString10fromLatin1EPKci
		sub	esp, 4
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_50]
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4C780
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4C780:				; CODE XREF: sub_6ED4C6B0+BBj
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED4C6B0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4C7A0	proc near		; DATA XREF: sub_6ED4C6B0+1Do
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-54h], eax
		jz	short loc_6ED4C7C1
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED4C7C1:				; CODE XREF: sub_6ED4C7A0+Dj
		mov	eax, [ebp+8]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED48EB0
		mov	eax, [ebp-54h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED4C7A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4C7F0	proc near		; CODE XREF: sub_6ED52640+90p

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A0D0
		mov	[ebp+var_28], offset sub_6ED4C8D0
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_C]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED4C6B0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA70C8
		add	eax, 1Ch
		mov	[ebp+var_50], eax
		lea	eax, [ebp+var_C]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aComment ; "#comment"
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN7QString10fromLatin1EPKci
		sub	esp, 4
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_50]
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4C8B0
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4C8B0:				; CODE XREF: sub_6ED4C7F0+B0j
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED4C7F0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4C8D0	proc near		; DATA XREF: sub_6ED4C7F0+1Do
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-54h], eax
		jz	short loc_6ED4C8F1
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED4C8F1:				; CODE XREF: sub_6ED4C8D0+Dj
		mov	eax, [ebp+8]
		mov	dword ptr [eax], offset	off_6EDA75C8
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED48EB0
		mov	eax, [ebp-54h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED4C8D0	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp-8]
		mov	[ebp-2Ch], eax
		lea	eax, [ebp-4Ch]
		mov	dword ptr [ebp-34h], offset sub_6ED997C0
		mov	dword ptr [ebp-30h], offset dword_6ED9A0D8
		mov	dword ptr [ebp-28h], offset loc_6ED4CA00
		mov	[ebp-24h], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+14h]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+10h]
		mov	[esp+8], eax
		mov	eax, [ebp+0Ch]
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	sub_6ED4C6B0
		mov	eax, [ebp+8]
		mov	dword ptr [eax], offset	off_6EDA70C8
		add	eax, 1Ch
		mov	[ebp-50h], eax
		lea	eax, [ebp-0Ch]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aComment ; "#comment"
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 2
		call	ds:_ZN7QString10fromLatin1EPKci
		sub	esp, 4
		lea	eax, [ebp-0Ch]
		mov	[esp+4], eax
		mov	eax, [ebp-50h]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp-0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4C9E0
		lea	eax, [ebp-4Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4C9E0:				; CODE XREF: .text:6ED4C9D0j
		mov	eax, [ebp-0Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 2
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp-4Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED4CA00:				; DATA XREF: .text:6ED4C93Do
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-54h], eax
		jz	short loc_6ED4CA21
		lea	eax, [ebp-0Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED4CA21:				; CODE XREF: .text:6ED4CA0Dj
		mov	eax, [ebp+8]
		mov	dword ptr [eax], offset	off_6EDA75C8
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED48EB0
		mov	eax, [ebp-54h]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4CA50	proc near		; CODE XREF: sub_6ED4CB80+7Ep
					; sub_6ED4CC90+E9p ...

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A0E0
		mov	[ebp+var_28], offset sub_6ED4CB30
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_C]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED4C6B0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA6EC8
		add	eax, 1Ch
		mov	[ebp+var_50], eax
		lea	eax, [ebp+var_C]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aText	; "#text"
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN7QString10fromLatin1EPKci
		sub	esp, 4
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_50]
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4CB10
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4CB10:				; CODE XREF: sub_6ED4CA50+B0j
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED4CA50	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4CB30	proc near		; DATA XREF: sub_6ED4CA50+1Do
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-54h], eax
		jz	short loc_6ED4CB51
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED4CB51:				; CODE XREF: sub_6ED4CB30+Dj
		mov	eax, [ebp+8]
		mov	dword ptr [eax], offset	off_6EDA75C8
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED48EB0
		mov	eax, [ebp-54h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED4CB30	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4CB80	proc near		; DATA XREF: .rdata:6EDA6DD0o

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A0E8
		mov	[ebp+var_18], offset sub_6ED4CC62
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_38], 0FFFFFFFFh
		add	eax, 20h
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	dword ptr [esp], 38h ; size_t
		call	sub_6ED988D0
		mov	ecx, [ebp+arg_4]
		mov	dword ptr [esp+4], 0
		mov	[ebp+var_38], 1
		mov	[esp+0Ch], ecx
		mov	[ebp+var_40], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_40]
		mov	[esp+8], eax
		mov	[esp], edx
		call	sub_6ED4CA50
		mov	ecx, [ebp+var_40]
		lock dec dword ptr [ecx+4]
		setnz	al
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+14h]
		test	eax, eax
		jz	short loc_6ED4CC3A
		mov	ecx, edx
		mov	edx, [edx]
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	eax, [edx+18h]
		mov	[ebp+var_38], 0FFFFFFFFh
		call	eax
		test	eax, eax
		jz	short loc_6ED4CC3A
		mov	edx, [eax]
		mov	[esp], eax
		call	dword ptr [edx+4]

loc_6ED4CC3A:				; CODE XREF: sub_6ED4CB80+95j
					; sub_6ED4CB80+B0j
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_40]
		mov	eax, [edx]
		mov	[esp+4], ecx
		mov	[esp], edx
		mov	eax, [eax+1Ch]
		mov	[ebp+var_38], 0FFFFFFFFh
		call	eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED4CB80	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4CC62	proc near		; DATA XREF: sub_6ED4CB80+20o
		add	ebp, 8
		mov	ecx, [ebp-34h]
		mov	eax, [ebp-40h]
		mov	[ebp-44h], ecx
		mov	[esp+0], eax
		call	sub_6ED988B0
		mov	edx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED4CC62	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4CC90	proc near		; CODE XREF: _ZN8QDomText9splitTextEi+1Dp

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A0EE
		mov	[ebp+var_28], offset sub_6ED4CDF5
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		test	byte ptr [edx+2Ch], 2
		jnz	short loc_6ED4CCF3

loc_6ED4CCC8:				; CODE XREF: sub_6ED4CC90+68j
		mov	dword ptr [esp], offset	aQdomtextSplitt	; "QDomText::splitText	The node has no	pa"...
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_Z8qWarningPKcz
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_58], 0
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_58]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED4CCF3:				; CODE XREF: sub_6ED4CC90+36j
		mov	edx, [edx+10h]
		test	edx, edx
		jz	short loc_6ED4CCC8
		mov	ecx, [ebp+arg_0]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED41890
		mov	[ebp+var_5C], eax
		mov	eax, [ebp+arg_0]
		add	eax, 20h
		mov	[ebp+var_54], eax
		lea	eax, [ebp+var_C]
		mov	dword ptr [esp+0Ch], 0FFFFFFFFh
		mov	edx, [ebp+arg_4]
		mov	[esp+8], edx
		mov	ecx, [ebp+var_54]
		mov	[esp], eax
		mov	[esp+4], ecx
		call	ds:_ZNK7QString3midEii
		sub	esp, 4
		mov	dword ptr [esp], 38h ; size_t
		mov	[ebp+var_48], 2
		call	sub_6ED988D0
		mov	[ebp+var_50], eax
		mov	[ebp+var_58], eax
		lea	eax, [ebp+var_C]
		mov	[esp+0Ch], eax
		mov	dword ptr [esp+8], 0
		mov	eax, [ebp+var_5C]
		mov	[esp+4], eax
		mov	edx, [ebp+var_50]
		mov	[esp], edx
		mov	[ebp+var_48], 1
		call	sub_6ED4CA50
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED4CD9E
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED4CD9E:				; CODE XREF: sub_6ED4CC90+F9j
		mov	edx, [ebp+arg_4]
		mov	[esp+4], edx
		mov	ecx, [ebp+var_54]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString8truncateEi
		mov	edx, [ebp+arg_0]
		xor	eax, eax
		test	byte ptr [edx+2Ch], 2
		jz	short loc_6ED4CDC6
		mov	eax, [edx+10h]

loc_6ED4CDC6:				; CODE XREF: sub_6ED4CC90+131j
		mov	ecx, [ebp+arg_0]
		mov	edx, [eax]
		mov	[esp+8], ecx
		mov	ecx, [ebp+var_50]
		mov	[esp], eax
		mov	[esp+4], ecx
		mov	eax, [edx+10h]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_58]
		leave
		retn
sub_6ED4CC90	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4CDF5	proc near		; DATA XREF: sub_6ED4CC90+1Do
		add	ebp, 8
		mov	ecx, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-60h], ecx
		jz	short loc_6ED4CE0F
		mov	eax, [ebp-50h]
		mov	[esp+0], eax
		call	sub_6ED988B0

loc_6ED4CE0F:				; CODE XREF: sub_6ED4CDF5+Dj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-60h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED4CDF5	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 397. _ZN8QDomText9splitTextEi

; =============== S U B	R O U T	I N E =======================================


		public _ZN8QDomText9splitTextEi
_ZN8QDomText9splitTextEi proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED4CE78
		mov	edx, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_1C], eax
		mov	[esp+1Ch+var_18], edx
		call	sub_6ED4CC90
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED4CE6F
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED4CE6F:				; CODE XREF: _ZN8QDomText9splitTextEi+26j
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
; ---------------------------------------------------------------------------

loc_6ED4CE78:				; CODE XREF: _ZN8QDomText9splitTextEi+10j
		mov	dword ptr [ebx], 0
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
_ZN8QDomText9splitTextEi endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp-8]
		mov	[ebp-2Ch], eax
		lea	eax, [ebp-4Ch]
		mov	dword ptr [ebp-34h], offset sub_6ED997C0
		mov	dword ptr [ebp-30h], offset word_6ED9A0F6
		mov	dword ptr [ebp-28h], offset loc_6ED4CF80
		mov	[ebp-24h], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+10h]
		mov	[esp+8], eax
		mov	eax, [ebp+0Ch]
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		mov	[esp], eax
		call	sub_6ED416C0
		mov	eax, [ebp+8]
		mov	dword ptr [eax], offset	off_6EDA75C8
		mov	eax, [ebp+14h]
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		add	eax, 20h
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 2
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+8]
		add	eax, 1Ch
		mov	[ebp-50h], eax
		lea	eax, [ebp-0Ch]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aCharacterData ; "#character-data"
		mov	[esp], eax
		call	ds:_ZN7QString10fromLatin1EPKci
		sub	esp, 4
		lea	eax, [ebp-0Ch]
		mov	[esp+4], eax
		mov	eax, [ebp-50h]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp-0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4CF60
		lea	eax, [ebp-4Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4CF60:				; CODE XREF: .text:6ED4CF4Bj
		mov	eax, [ebp-0Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 2
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp-4Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED4CF80:				; DATA XREF: .text:6ED4CEADo
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-54h], eax
		jz	short loc_6ED4CFA1
		lea	eax, [ebp-0Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED4CFA1:				; CODE XREF: .text:6ED4CF8Dj
		mov	eax, [ebp+8]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED48EB0
		mov	eax, [ebp-54h]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4CFD0	proc near		; CODE XREF: sub_6ED4D100+51p
					; .text:6ED4D281p

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A0FE
		mov	[ebp+var_28], offset sub_6ED4D0B0
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_C]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED4C6B0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA6EC8
		add	eax, 1Ch
		mov	[ebp+var_50], eax
		lea	eax, [ebp+var_C]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aText	; "#text"
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN7QString10fromLatin1EPKci
		sub	esp, 4
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_50]
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4D090
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4D090:				; CODE XREF: sub_6ED4CFD0+B0j
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED4CFD0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4D0B0	proc near		; DATA XREF: sub_6ED4CFD0+1Do
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-54h], eax
		jz	short loc_6ED4D0D1
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED4D0D1:				; CODE XREF: sub_6ED4D0B0+Dj
		mov	eax, [ebp+8]
		mov	dword ptr [eax], offset	off_6EDA75C8
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED48EB0
		mov	eax, [ebp-54h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED4D0B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4D100	proc near		; CODE XREF: sub_6ED52370+91p

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A106
		mov	[ebp+var_28], offset sub_6ED4D1E0
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_C]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED4CFD0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA74A8
		add	eax, 1Ch
		mov	[ebp+var_50], eax
		lea	eax, [ebp+var_C]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aCdataSection	; "#cdata-section"
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN7QString10fromLatin1EPKci
		sub	esp, 4
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_50]
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4D1C0
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4D1C0:				; CODE XREF: sub_6ED4D100+B0j
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED4D100	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4D1E0	proc near		; DATA XREF: sub_6ED4D100+1Do
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-54h], eax
		jz	short loc_6ED4D201
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED4D201:				; CODE XREF: sub_6ED4D1E0+Dj
		mov	eax, [ebp+8]
		mov	dword ptr [eax], offset	off_6EDA75C8
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED48EB0
		mov	eax, [ebp-54h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED4D1E0	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp-8]
		mov	[ebp-2Ch], eax
		lea	eax, [ebp-4Ch]
		mov	dword ptr [ebp-34h], offset sub_6ED997C0
		mov	dword ptr [ebp-30h], offset word_6ED9A10E
		mov	dword ptr [ebp-28h], offset loc_6ED4D310
		mov	[ebp-24h], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+14h]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+10h]
		mov	[esp+8], eax
		mov	eax, [ebp+0Ch]
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	sub_6ED4CFD0
		mov	eax, [ebp+8]
		mov	dword ptr [eax], offset	off_6EDA74A8
		add	eax, 1Ch
		mov	[ebp-50h], eax
		lea	eax, [ebp-0Ch]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aCdataSection	; "#cdata-section"
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 2
		call	ds:_ZN7QString10fromLatin1EPKci
		sub	esp, 4
		lea	eax, [ebp-0Ch]
		mov	[esp+4], eax
		mov	eax, [ebp-50h]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp-0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4D2F0
		lea	eax, [ebp-4Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4D2F0:				; CODE XREF: .text:6ED4D2E0j
		mov	eax, [ebp-0Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 2
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp-4Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED4D310:				; DATA XREF: .text:6ED4D24Do
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-54h], eax
		jz	short loc_6ED4D331
		lea	eax, [ebp-0Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED4D331:				; CODE XREF: .text:6ED4D31Dj
		mov	eax, [ebp+8]
		mov	dword ptr [eax], offset	off_6EDA75C8
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED48EB0
		mov	eax, [ebp-54h]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4D360	proc near		; CODE XREF: sub_6ED4D480+61p

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A116
		mov	[ebp+var_28], offset sub_6ED4D431
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_8]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED416C0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA76E8
		add	eax, 1Ch
		mov	[ebp+var_50], eax
		lea	eax, [ebp+var_C]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aDocumentFragme ; "#document-fragment"
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN7QString10fromLatin1EPKci
		sub	esp, 4
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_50]
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4D411
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED4D411:				; CODE XREF: sub_6ED4D360+A2j
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED4D360	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4D431	proc near		; DATA XREF: sub_6ED4D360+1Do
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-54h], eax
		jz	short loc_6ED4D452
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED4D452:				; CODE XREF: sub_6ED4D431+Dj
		mov	eax, [ebp+8]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED48EB0
		mov	eax, [ebp-54h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED4D431	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4D480	proc near		; CODE XREF: _ZN12QDomDocument22createDocumentFragmentEv+42p

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A11E
		mov	[ebp+var_18], offset sub_6ED4D500
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 38h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_40]
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_6ED4D360
		mov	edx, [ebp+var_40]
		lock dec dword ptr [edx+4]
		setnz	al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_40]
		leave
		retn
sub_6ED4D480	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4D500	proc near		; DATA XREF: sub_6ED4D480+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-40h]
		mov	[ebp-44h], eax
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED4D500	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp-8]
		mov	[ebp-2Ch], eax
		lea	eax, [ebp-4Ch]
		mov	dword ptr [ebp-34h], offset sub_6ED997C0
		mov	dword ptr [ebp-30h], offset dword_6ED9A124
		mov	dword ptr [ebp-28h], offset loc_6ED4D601
		mov	[ebp-24h], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+10h]
		mov	[esp+8], eax
		mov	eax, [ebp+0Ch]
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		mov	[esp], eax
		call	sub_6ED416C0
		mov	eax, [ebp+8]
		mov	dword ptr [eax], offset	off_6EDA76E8
		add	eax, 1Ch
		mov	[ebp-50h], eax
		lea	eax, [ebp-0Ch]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aDocumentFragme ; "#document-fragment"
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 2
		call	ds:_ZN7QString10fromLatin1EPKci
		sub	esp, 4
		lea	eax, [ebp-0Ch]
		mov	[esp+4], eax
		mov	eax, [ebp-50h]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp-0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4D5E1
		lea	eax, [ebp-4Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED4D5E1:				; CODE XREF: .text:6ED4D5D2j
		mov	eax, [ebp-0Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 2
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp-4Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED4D601:				; DATA XREF: .text:6ED4D54Do
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-54h], eax
		jz	short loc_6ED4D622
		lea	eax, [ebp-0Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED4D622:				; CODE XREF: .text:6ED4D60Ej
		mov	eax, [ebp+8]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED48EB0
		mov	eax, [ebp-54h]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED4D650	proc near		; DATA XREF: .rdata:6EDA6CB8o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFFCh
		jmp	short sub_6ED4D660
sub_6ED4D650	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4D660	proc near		; CODE XREF: sub_6ED4D650+5j
					; DATA XREF: .rdata:6EDA6C68o

var_4D		= byte ptr -4Dh
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_24], esp
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A12C
		mov	[ebp+var_28], offset sub_6ED4D734
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], edx
		call	_ZNK18QXmlParseException7messageEv
		mov	eax, [ebp+arg_0]
		lea	edx, [ebp+var_C]
		mov	[ebp+var_48], 1
		add	eax, 1Ch
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED4D6E8
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED4D6E8:				; CODE XREF: sub_6ED4D660+73j
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	_ZNK18QXmlParseException10lineNumberEv
		mov	edx, [ebp+arg_0]
		mov	[edx+20h], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		call	_ZNK18QXmlParseException12columnNumberEv
		mov	edx, [ebp+arg_0]
		mov	[edx+24h], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], edx
		mov	[esp+4], eax
		call	_ZN18QXmlDefaultHandler10fatalErrorERK18QXmlParseException
		mov	[ebp+var_4D], al
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_4D]
		leave
		retn
sub_6ED4D660	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4D734	proc near		; DATA XREF: sub_6ED4D660+23o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-54h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED4D734	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4D770	proc near		; CODE XREF: _ZNK12QDomNodeList6lengthEv-18p
					; sub_6ED4DC10+3Fp

var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_5D		= byte ptr -5Dh
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_51		= byte ptr -51h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A132
		mov	[ebp+var_28], offset sub_6ED4DB45
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		test	eax, eax
		jz	loc_6ED4D980
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED41890
		test	eax, eax
		jz	short loc_6ED4D7D1
		mov	ecx, [ebp+arg_0]
		mov	eax, [eax+40h]
		cmp	[ecx+14h], eax
		jz	short loc_6ED4D7D1
		mov	[ecx+14h], eax

loc_6ED4D7D1:				; CODE XREF: sub_6ED4D770+51j
					; sub_6ED4D770+5Cj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		add	edx, 10h
		mov	[ebp+var_58], edx
		mov	eax, [eax+14h]
		mov	[ebp+var_C], eax
		mov	eax, ds:_ZN9QListData11shared_nullE
		mov	[ebp+var_14], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+var_14]
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_50], ecx
		cmp	[eax+10h], ecx
		jz	short loc_6ED4D82C
		lock inc dword ptr [ecx]
		setnz	al
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+10h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED4D9B0

loc_6ED4D819:				; CODE XREF: sub_6ED4D770+256j
		mov	edx, [ebp+var_50]
		mov	eax, [ebp+arg_0]
		mov	[eax+10h], edx
		test	byte ptr [edx+10h], 1
		jz	loc_6ED4D990

loc_6ED4D82C:				; CODE XREF: sub_6ED4D770+8Dj
					; sub_6ED4D770+239j
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED942B0
		mov	edx, [ebp+arg_0]
		mov	eax, ds:_ZN7QString11shared_nullE
		cmp	[edx+8], eax
		jz	loc_6ED4D951
		mov	edx, [ebp+arg_0]
		cmp	eax, [edx+0Ch]
		jz	loc_6ED4DA05
		mov	ecx, [ebp+arg_0]
		add	edx, 8
		mov	eax, [ebp+var_C]
		mov	[ebp+var_5C], edx
		add	ecx, 0Ch
		mov	[ebp+var_64], ecx
		jmp	short loc_6ED4D881
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4D870:				; CODE XREF: sub_6ED4D770+138j
					; sub_6ED4D770+159j ...
		mov	edx, [ebp+var_C]
		mov	eax, [edx+14h]
		test	eax, eax
		jz	loc_6ED4D905

loc_6ED4D87E:				; CODE XREF: sub_6ED4D770+18Fj
					; sub_6ED4D770+19Aj ...
		mov	[ebp+var_C], eax

loc_6ED4D881:				; CODE XREF: sub_6ED4D770+FDj
					; sub_6ED4D770+270j
		test	eax, eax
		jz	loc_6ED4D980
		mov	edx, [ebp+arg_0]
		cmp	[edx+4], eax
		jz	loc_6ED4D980
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+40h]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	eax
		test	al, al
		jz	short loc_6ED4D870
		mov	eax, [ebp+var_C]
		mov	ecx, [ebp+var_5C]
		mov	[ebp+var_48], 0FFFFFFFFh
		add	eax, 1Ch
		mov	[esp+4], ecx
		mov	[esp], eax
		call	ds:_ZNK7QStringeqERKS_
		test	al, al
		jz	short loc_6ED4D870
		mov	eax, [ebp+var_64]
		mov	[esp+4], eax
		mov	eax, [ebp+var_C]
		add	eax, 28h
		mov	[esp], eax
		call	ds:_ZNK7QStringeqERKS_
		test	al, al
		jz	short loc_6ED4D870
		mov	ecx, [ebp+var_58]
		lea	edx, [ebp+var_C]
		mov	[esp+4], edx
		mov	[esp], ecx
		call	sub_6ED94100
		mov	edx, [ebp+var_C]
		mov	eax, [edx+14h]
		test	eax, eax
		jnz	loc_6ED4D87E

loc_6ED4D905:				; CODE XREF: sub_6ED4D770+108j
		mov	eax, [edx+0Ch]
		test	eax, eax
		jnz	loc_6ED4D87E
		test	byte ptr [edx+2Ch], 2
		jz	loc_6ED4D9D6
		mov	eax, [edx+10h]
		test	eax, eax
		mov	[ebp+var_C], eax
		jz	loc_6ED4D9DD
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+4]
		cmp	eax, edx
		jz	loc_6ED4D9DD
		mov	ecx, [eax+0Ch]
		test	ecx, ecx
		jz	loc_6ED4D9D0

loc_6ED4D941:				; CODE XREF: sub_6ED4D770+28Aj
		cmp	eax, edx
		jz	loc_6ED4D9DD
		mov	eax, [eax+0Ch]
		jmp	loc_6ED4D87E
; ---------------------------------------------------------------------------

loc_6ED4D951:				; CODE XREF: sub_6ED4D770+D9j
		mov	eax, [ebp+var_C]
		test	eax, eax
		jz	short loc_6ED4D980

loc_6ED4D958:				; CODE XREF: sub_6ED4D770+20Cj
		mov	ecx, [ebp+var_58]
		lea	edx, [ebp+var_C]
		mov	[esp+4], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED94100
		mov	eax, [ebp+var_C]
		mov	eax, [eax+0Ch]
		test	eax, eax
		mov	[ebp+var_C], eax
		jnz	short loc_6ED4D958
		xchg	ax, ax

loc_6ED4D980:				; CODE XREF: sub_6ED4D770+3Aj
					; sub_6ED4D770+113j ...
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4D990:				; CODE XREF: sub_6ED4D770+B6j
		mov	eax, [edx+4]
		mov	ecx, [ebp+var_58]
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		mov	[esp], ecx
		call	sub_6ED94080
		jmp	loc_6ED4D82C
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4D9B0:				; CODE XREF: sub_6ED4D770+A3j
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+10h]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	loc_6ED4D819
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4D9D0:				; CODE XREF: sub_6ED4D770+1CBj
					; sub_6ED4D770+285j
		test	byte ptr [eax+2Ch], 2
		jnz	short loc_6ED4D9E5

loc_6ED4D9D6:				; CODE XREF: sub_6ED4D770+1A4j
					; sub_6ED4D770+27Aj
		mov	[ebp+var_C], 0

loc_6ED4D9DD:				; CODE XREF: sub_6ED4D770+1B2j
					; sub_6ED4D770+1C0j ...
		mov	eax, [ebp+var_C]
		jmp	loc_6ED4D881
; ---------------------------------------------------------------------------

loc_6ED4D9E5:				; CODE XREF: sub_6ED4D770+264j
		mov	eax, [eax+10h]
		test	eax, eax
		jz	short loc_6ED4D9D6
		cmp	eax, edx
		jz	short loc_6ED4DA00
		mov	ecx, [eax+0Ch]
		test	ecx, ecx
		jz	short loc_6ED4D9D0
		mov	[ebp+var_C], eax
		jmp	loc_6ED4D941
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4DA00:				; CODE XREF: sub_6ED4D770+27Ej
		mov	[ebp+var_C], edx
		jmp	short loc_6ED4D9DD
; ---------------------------------------------------------------------------

loc_6ED4DA05:				; CODE XREF: sub_6ED4D770+E5j
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_C]
		add	edx, 8
		mov	[ebp+var_68], edx
		jmp	short loc_6ED4DA24
; ---------------------------------------------------------------------------

loc_6ED4DA13:				; CODE XREF: sub_6ED4D770+2DFj
					; sub_6ED4D770+338j
		mov	edx, [ebp+var_C]
		mov	eax, [edx+14h]
		test	eax, eax
		jz	loc_6ED4DAD5

loc_6ED4DA21:				; CODE XREF: sub_6ED4D770+35Fj
					; sub_6ED4D770+36Aj ...
		mov	[ebp+var_C], eax

loc_6ED4DA24:				; CODE XREF: sub_6ED4D770+2A1j
					; sub_6ED4D770+3AAj
		test	eax, eax
		jz	loc_6ED4D980
		mov	edx, [ebp+arg_0]
		cmp	[edx+4], eax
		jz	loc_6ED4D980
		mov	edx, [eax]
		mov	[esp], eax
		mov	[ebp+var_51], 0
		mov	eax, [edx+40h]
		mov	[ebp+var_48], 2
		call	eax
		test	al, al
		jz	short loc_6ED4DA13
		mov	eax, [ebp+var_C]
		mov	eax, [eax+1Ch]
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+var_68]
		lea	eax, [ebp+var_10]
		mov	[ebp+var_51], 1
		mov	[esp], eax
		mov	[ebp+var_48], 2
		mov	[esp+4], ecx
		call	ds:_ZNK7QStringeqERKS_
		test	al, al
		mov	eax, [ebp+var_10]
		setnz	[ebp+var_5D]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED4DAA4
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED4DAA4:				; CODE XREF: sub_6ED4D770+31Fj
		cmp	[ebp+var_5D], 0
		jz	loc_6ED4DA13
		mov	edx, [ebp+var_58]
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED94100
		mov	edx, [ebp+var_C]
		mov	eax, [edx+14h]
		test	eax, eax
		jnz	loc_6ED4DA21

loc_6ED4DAD5:				; CODE XREF: sub_6ED4D770+2ABj
		mov	eax, [edx+0Ch]
		test	eax, eax
		jnz	loc_6ED4DA21
		test	byte ptr [edx+2Ch], 2
		jz	short loc_6ED4DB10
		mov	eax, [edx+10h]
		test	eax, eax
		mov	[ebp+var_C], eax
		jz	short loc_6ED4DB17
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+4]
		cmp	edx, eax
		jz	short loc_6ED4DB17
		mov	ecx, [eax+0Ch]
		test	ecx, ecx
		jz	short loc_6ED4DB20

loc_6ED4DB01:				; CODE XREF: sub_6ED4D770+3CCj
		mov	eax, [eax+0Ch]
		jmp	loc_6ED4DA21
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4DB10:				; CODE XREF: sub_6ED4D770+374j
					; sub_6ED4D770+3B4j ...
		mov	[ebp+var_C], 0

loc_6ED4DB17:				; CODE XREF: sub_6ED4D770+37Ej
					; sub_6ED4D770+388j ...
		mov	eax, [ebp+var_C]
		jmp	loc_6ED4DA24
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4DB20:				; CODE XREF: sub_6ED4D770+38Fj
					; sub_6ED4D770+3C7j
		test	byte ptr [eax+2Ch], 2
		jz	short loc_6ED4DB10
		mov	eax, [eax+10h]
		test	eax, eax
		jz	short loc_6ED4DB10
		cmp	edx, eax
		nop
		jz	short loc_6ED4DB40
		mov	ecx, [eax+0Ch]
		test	ecx, ecx
		jz	short loc_6ED4DB20
		mov	[ebp+var_C], eax
		jmp	short loc_6ED4DB01
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4DB40:				; CODE XREF: sub_6ED4D770+3C0j
		mov	[ebp+var_C], edx
		jmp	short loc_6ED4DB17
sub_6ED4D770	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4DB45	proc near		; DATA XREF: sub_6ED4D770+23o
		add	ebp, 8
		mov	ecx, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-70h], ecx
		jz	short loc_6ED4DB78
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED942B0
		mov	eax, [ebp-70h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED4DB78:				; CODE XREF: sub_6ED4DB45+Dj
		mov	edx, [ebp-70h]
		cmp	byte ptr [ebp-51h], 0
		mov	[ebp-6Ch], edx
		jz	short loc_6ED4DB96
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED4DB96:				; CODE XREF: sub_6ED4DB45+3Dj
		mov	ecx, [ebp-6Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
sub_6ED4DB45	endp

; ---------------------------------------------------------------------------
		align 10h
; START	OF FUNCTION CHUNK FOR _ZNK12QDomNodeList6lengthEv

loc_6ED4DBB0:				; CODE XREF: _ZNK12QDomNodeList6lengthEv+14j
		push	ebx
		xor	eax, eax
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	edx, [ebx+4]
		test	edx, edx
		jz	short loc_6ED4DBE6
		mov	[esp+1Ch+var_1C], edx
		call	sub_6ED41890
		test	eax, eax
		jz	short loc_6ED4DBD5
		mov	edx, [ebx+14h]
		cmp	edx, [eax+40h]
		jz	short loc_6ED4DBDD

loc_6ED4DBD5:				; CODE XREF: _ZNK12QDomNodeList6lengthEv-25j
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED4D770

loc_6ED4DBDD:				; CODE XREF: _ZNK12QDomNodeList6lengthEv-1Dj
		mov	edx, [ebx+10h]
		mov	eax, [edx+0Ch]
		sub	eax, [edx+8]

loc_6ED4DBE6:				; CODE XREF: _ZNK12QDomNodeList6lengthEv-31j
		add	esp, 18h
		pop	ebx
		retn
; END OF FUNCTION CHUNK	FOR _ZNK12QDomNodeList6lengthEv
; ---------------------------------------------------------------------------
		align 10h
; Exported entry 424. _ZNK12QDomNodeList6lengthEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK12QDomNodeList6lengthEv
_ZNK12QDomNodeList6lengthEv proc near

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

; FUNCTION CHUNK AT 6ED4DBB0 SIZE 0000003B BYTES

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED4DC06
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	short loc_6ED4DBB0
; ---------------------------------------------------------------------------

loc_6ED4DC06:				; CODE XREF: _ZNK12QDomNodeList6lengthEv+Bj
		add	esp, 0Ch
		retn
_ZNK12QDomNodeList6lengthEv endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED4DC10	proc near		; CODE XREF: _ZNK12QDomNodeList4itemEi+1Dp

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	eax, [ebx+4]
		test	eax, eax
		jnz	short loc_6ED4DC38

loc_6ED4DC2A:				; CODE XREF: sub_6ED4DC10+51j
		xor	eax, eax
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED4DC38:				; CODE XREF: sub_6ED4DC10+18j
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED41890
		test	eax, eax
		jz	short loc_6ED4DC4C
		mov	edx, [ebx+14h]
		cmp	edx, [eax+40h]
		jz	short loc_6ED4DC54

loc_6ED4DC4C:				; CODE XREF: sub_6ED4DC10+32j
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED4D770

loc_6ED4DC54:				; CODE XREF: sub_6ED4DC10+3Aj
		mov	edx, [ebx+10h]
		mov	ecx, [edx+8]
		mov	eax, [edx+0Ch]
		sub	eax, ecx
		cmp	esi, eax
		jge	short loc_6ED4DC2A
		lea	eax, [ecx+esi+4]
		mov	ebx, [esp+1Ch+var_8]
		mov	eax, [edx+eax*4+4]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_6ED4DC10	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 423. _ZNK12QDomNodeList4itemEi

; =============== S U B	R O U T	I N E =======================================


		public _ZNK12QDomNodeList4itemEi
_ZNK12QDomNodeList4itemEi proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED4DCB8
		mov	edx, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_1C], eax
		mov	[esp+1Ch+var_18], edx
		call	sub_6ED4DC10
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED4DCAF
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED4DCAF:				; CODE XREF: _ZNK12QDomNodeList4itemEi+26j
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
; ---------------------------------------------------------------------------

loc_6ED4DCB8:				; CODE XREF: _ZNK12QDomNodeList4itemEi+10j
		mov	dword ptr [ebx], 0
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
_ZNK12QDomNodeList4itemEi endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED4DCD0	proc near		; DATA XREF: .rdata:6EDA6D10o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF0h
		jmp	short sub_6ED4DCE0
sub_6ED4DCD0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4DCE0	proc near		; CODE XREF: sub_6ED4DCD0+5j
					; DATA XREF: .rdata:6EDA6C84o

var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A13A
		mov	[ebp+var_28], offset sub_6ED4DD76
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, ds:_ZN7QString11shared_nullE
		cmp	[edx+30h], eax
		jz	short loc_6ED4DD4F
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 1
		add	eax, 30h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4DD61

loc_6ED4DD4F:				; CODE XREF: sub_6ED4DCE0+3Aj
					; sub_6ED4DCE0+94j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, 1
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED4DD61:				; CODE XREF: sub_6ED4DCE0+6Dj
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED4DD4F
sub_6ED4DCE0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4DD76	proc near		; DATA XREF: sub_6ED4DCE0+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-50h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-50h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED4DD76	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4DDB0	proc near		; CODE XREF: sub_6ED4E060+93p
					; .text:6ED4E573p ...

var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A140
		mov	[ebp+var_28], offset sub_6ED4DF98
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 10h ; size_t
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	edx, ds:_ZN9QHashData11shared_nullE
		mov	dword ptr [eax], 0
		mov	[ebp+var_54], edx
		mov	[eax+4], edx
		mov	ecx, [ebp+var_54]
		lock inc dword ptr [ecx+8]
		setnz	dl
		mov	dword ptr [eax], 1
		mov	edx, [ebp+arg_0]
		mov	byte ptr [eax+0Ch], 0
		mov	byte ptr [eax+0Dh], 0
		mov	[eax+8], edx
		mov	[edx+38h], eax
		mov	dword ptr [esp], 10h ; size_t
		mov	[ebp+var_48], 5
		call	sub_6ED988D0
		mov	dword ptr [eax], 0
		mov	ecx, [ebp+var_54]
		mov	[eax+4], ecx
		lock inc dword ptr [ecx+8]
		setnz	dl
		mov	dword ptr [eax], 1
		mov	edx, [ebp+arg_0]
		mov	ecx, ds:_ZN7QString11shared_nullE
		mov	byte ptr [eax+0Ch], 0
		mov	byte ptr [eax+0Dh], 0
		cmp	[edx+40h], ecx
		mov	[eax+8], edx
		mov	[edx+3Ch], eax
		mov	[ebp+var_50], ecx
		jz	short loc_6ED4DEA6
		mov	[ebp+var_C], ecx
		lock inc dword ptr [ecx]
		setnz	al
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 40h
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED4DF80

loc_6ED4DEA6:				; CODE XREF: sub_6ED4DDB0+BEj
					; sub_6ED4DDB0+1E3j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_50]
		cmp	edx, [eax+44h]
		jz	short loc_6ED4DEE9
		mov	[ebp+var_10], edx
		mov	eax, ds:_ZN7QString11shared_nullE
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 2
		add	eax, 44h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4DF65

loc_6ED4DEE9:				; CODE XREF: sub_6ED4DDB0+FFj
					; sub_6ED4DDB0+1C8j
		mov	ecx, [ebp+arg_0]
		mov	eax, [ebp+var_50]
		cmp	eax, [ecx+48h]
		jz	short loc_6ED4DF2B
		mov	[ebp+var_14], eax
		mov	eax, ds:_ZN7QString11shared_nullE
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	eax, ecx
		add	eax, 48h
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4DF50

loc_6ED4DF2B:				; CODE XREF: sub_6ED4DDB0+142j
					; sub_6ED4DDB0+1B3j
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+38h]
		mov	byte ptr [eax+0Dh], 1
		mov	eax, [ecx+3Ch]
		mov	byte ptr [eax+0Dh], 1
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4DF50:				; CODE XREF: sub_6ED4DDB0+179j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_48], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED4DF2B
; ---------------------------------------------------------------------------

loc_6ED4DF65:				; CODE XREF: sub_6ED4DDB0+137j
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED4DEE9
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4DF80:				; CODE XREF: sub_6ED4DDB0+F0j
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED4DEA6
sub_6ED4DDB0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4DF98	proc near		; DATA XREF: sub_6ED4DDB0+20o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-5Ch], edx
		jz	loc_6ED4E03E
		cmp	eax, 2
		jz	short loc_6ED4E02A
		cmp	eax, 3
		jz	short loc_6ED4E00C
		cmp	eax, 4
		jz	short loc_6ED4DFCE
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED4DFCE:				; CODE XREF: sub_6ED4DF98+22j
					; sub_6ED4DF98+A4j ...
		mov	eax, [ebp-5Ch]
		mov	[esp+0], eax
		call	sub_6ED98EF0
		mov	edx, [ebp+8]
		mov	edx, [edx+38h]
		test	edx, edx
		mov	[ebp-58h], edx
		jz	short loc_6ED4E000
		mov	[esp+0], edx
		mov	dword ptr [ebp-48h], 4
		call	sub_6ED46C00
		mov	ecx, [ebp-58h]
		mov	[esp+0], ecx
		call	sub_6ED988B0

loc_6ED4E000:				; CODE XREF: sub_6ED4DF98+4Cj
		mov	dword ptr [ebp-48h], 4
		call	sub_6ED99700
; ---------------------------------------------------------------------------

loc_6ED4E00C:				; CODE XREF: sub_6ED4DF98+1Dj
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED991C0
		mov	eax, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED4E02A:				; CODE XREF: sub_6ED4DF98+18j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		jmp	short loc_6ED4DFCE
; ---------------------------------------------------------------------------

loc_6ED4E03E:				; CODE XREF: sub_6ED4DF98+Fj
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		jmp	loc_6ED4DFCE
sub_6ED4DF98	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4E060	proc near		; CODE XREF: sub_6ED4E430+68p

var_71		= byte ptr -71h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= byte ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		movzx	eax, [ebp+arg_8]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_2C], edx
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A158
		mov	[ebp+var_71], al
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_28], offset sub_6ED4E388
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		movzx	eax, [ebp+var_71]
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], ecx
		mov	[esp+4], eax
		call	sub_6ED44270
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7528
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[edx+40h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+arg_0]
		mov	[ecx+44h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ecx+48h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[esp], ecx
		mov	[ebp+var_48], 3
		call	sub_6ED4DDB0
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+14h]
		test	eax, eax
		mov	[ebp+var_50], eax
		jnz	short loc_6ED4E121
		jmp	loc_6ED4E320
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4E110:				; CODE XREF: sub_6ED4E060+1C3j
					; sub_6ED4E060+290j
		mov	eax, [ebp+var_50]
		mov	eax, [eax+0Ch]
		test	eax, eax
		mov	[ebp+var_50], eax
		jz	loc_6ED4E320

loc_6ED4E121:				; CODE XREF: sub_6ED4E060+A3j
					; sub_6ED4E060+2B4j
		mov	edx, [ebp+var_50]
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+4Ch]
		mov	[ebp+var_48], 3
		call	eax
		test	al, al
		jz	loc_6ED4E20D
		mov	ecx, [ebp+var_50]
		mov	eax, [ecx+1Ch]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+38h]
		mov	[ebp+var_54], eax
		mov	edx, [ebp+var_54]
		add	eax, 4
		mov	[ebp+var_60], eax
		mov	eax, [edx+4]
		mov	edx, [eax+8]
		cmp	edx, 1
		jz	short loc_6ED4E181
		mov	ecx, [ebp+var_60]
		mov	[ebp+var_48], 2
		mov	[esp], ecx
		call	sub_6ED92E00
		mov	edx, [ebp+var_54]
		mov	eax, [edx+4]

loc_6ED4E181:				; CODE XREF: sub_6ED4E060+107j
		mov	edx, [eax+0Ch]
		cmp	edx, [eax+18h]
		jge	loc_6ED4E348

loc_6ED4E18D:				; CODE XREF: sub_6ED4E060+303j
		mov	edx, [ebp+var_60]
		lea	ecx, [ebp+var_14]
		lea	eax, [ebp+var_C]
		mov	[esp+8], ecx
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_48], 2
		call	sub_6ED983D0
		mov	ecx, [ebp+var_14]
		mov	edx, [ebp+var_54]
		mov	[ebp+var_5C], eax
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_64], ecx
		mov	eax, [edx+4]
		mov	[esp], eax
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		jz	short loc_6ED4E1E3
		mov	edx, [ebp+var_C]
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	ecx, [ebp+var_50]
		mov	[eax+0Ch], ecx

loc_6ED4E1E3:				; CODE XREF: sub_6ED4E060+16Fj
		mov	edx, [ebp+var_64]
		mov	[eax+4], edx
		mov	ecx, [ebp+var_5C]
		mov	edx, [ecx]
		mov	[eax], edx
		mov	[ecx], eax
		mov	edx, [ebp+var_54]
		mov	eax, [edx+4]
		add	dword ptr [eax+0Ch], 1
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED4E330

loc_6ED4E20D:				; CODE XREF: sub_6ED4E060+D7j
					; sub_6ED4E060+2E3j
		mov	ecx, [ebp+var_50]
		mov	eax, [ecx]
		mov	[esp], ecx
		mov	eax, [eax+50h]
		mov	[ebp+var_48], 3
		call	eax
		test	al, al
		jz	loc_6ED4E110
		mov	edx, [ebp+var_50]
		mov	eax, [edx+1Ch]
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+arg_0]
		mov	ecx, [ecx+3Ch]
		mov	[ebp+var_58], ecx
		mov	edx, [ebp+var_58]
		add	ecx, 4
		mov	[ebp+var_6C], ecx
		mov	eax, [edx+4]
		mov	edx, [eax+8]
		cmp	edx, 1
		jz	short loc_6ED4E26A
		mov	[esp], ecx
		mov	[ebp+var_48], 1
		call	sub_6ED92E00
		mov	ecx, [ebp+var_58]
		mov	eax, [ecx+4]

loc_6ED4E26A:				; CODE XREF: sub_6ED4E060+1F3j
		mov	edx, [eax+0Ch]
		cmp	edx, [eax+18h]
		jge	loc_6ED4E368

loc_6ED4E276:				; CODE XREF: sub_6ED4E060+323j
		mov	edx, [ebp+var_6C]
		lea	eax, [ebp+var_14]
		mov	[esp+8], eax
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	[ebp+var_48], 1
		mov	[esp], edx
		call	sub_6ED983D0
		mov	ecx, [ebp+var_14]
		mov	edx, [ebp+var_58]
		mov	[ebp+var_68], eax
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_70], ecx
		mov	eax, [edx+4]
		mov	[esp], eax
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		jz	short loc_6ED4E2CC
		mov	edx, [ebp+var_10]
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	ecx, [ebp+var_50]
		mov	[eax+0Ch], ecx

loc_6ED4E2CC:				; CODE XREF: sub_6ED4E060+258j
		mov	edx, [ebp+var_70]
		mov	[eax+4], edx
		mov	ecx, [ebp+var_68]
		mov	edx, [ecx]
		mov	[eax], edx
		mov	[ecx], eax
		mov	edx, [ebp+var_58]
		mov	eax, [edx+4]
		add	dword ptr [eax+0Ch], 1
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED4E110
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	eax, [ebp+var_50]
		mov	eax, [eax+0Ch]
		test	eax, eax
		mov	[ebp+var_50], eax
		jnz	loc_6ED4E121
		lea	esi, [esi+0]

loc_6ED4E320:				; CODE XREF: sub_6ED4E060+A5j
					; sub_6ED4E060+BBj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4E330:				; CODE XREF: sub_6ED4E060+1A7j
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED4E20D
; ---------------------------------------------------------------------------

loc_6ED4E348:				; CODE XREF: sub_6ED4E060+127j
		movsx	edx, word ptr [eax+16h]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		add	edx, 1
		mov	[esp+4], edx
		call	ds:_ZN9QHashData6rehashEi
		jmp	loc_6ED4E18D
; ---------------------------------------------------------------------------

loc_6ED4E368:				; CODE XREF: sub_6ED4E060+210j
		movsx	edx, word ptr [eax+16h]
		mov	[esp], eax
		mov	[ebp+var_48], 1
		add	edx, 1
		mov	[esp+4], edx
		call	ds:_ZN9QHashData6rehashEi
		jmp	loc_6ED4E276
sub_6ED4E060	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4E388	proc near		; DATA XREF: sub_6ED4E060+2Ao
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	ecx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-78h], ecx
		jz	short loc_6ED4E413
		cmp	eax, 2
		jz	short loc_6ED4E3B0
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED4E3B0:				; CODE XREF: sub_6ED4E388+14j
					; sub_6ED4E388+9Dj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-48h], 0
		add	eax, 48h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-48h], 0
		add	eax, 44h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-48h], 0
		add	eax, 40h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], edx
		call	sub_6ED48EB0
		mov	ecx, [ebp-78h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED4E413:				; CODE XREF: sub_6ED4E388+Fj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		jmp	short loc_6ED4E3B0
sub_6ED4E388	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4E430	proc near		; DATA XREF: .rdata:6EDA7548o

var_41		= byte ptr -41h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= byte ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		movzx	eax, [ebp+arg_4]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_1C], edx
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A162
		mov	[ebp+var_41], al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_18], offset sub_6ED4E4B7
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 4Ch ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		movzx	eax, [ebp+var_41]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+4], eax
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED4E060
		mov	edx, [ebp+var_40]
		lock dec dword ptr [edx+4]
		setnz	al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_40]
		leave
		retn
sub_6ED4E430	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4E4B7	proc near		; DATA XREF: sub_6ED4E430+27o
		add	ebp, 8
		mov	edx, [ebp-34h]
		mov	eax, [ebp-40h]
		mov	[ebp-48h], edx
		mov	[esp+0], eax
		call	sub_6ED988B0
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED4E4B7	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		movzx	eax, byte ptr [ebp+10h]
		lea	edx, [ebp-8]
		mov	[ebp-2Ch], edx
		mov	dword ptr [ebp-34h], offset sub_6ED997C0
		mov	dword ptr [ebp-30h], offset dword_6ED9A168
		mov	[ebp-71h], al
		lea	eax, [ebp-4Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-28h], offset loc_6ED4E808
		mov	[ebp-24h], esp
		call	_Unwind_SjLj_Register
		movzx	eax, byte ptr [ebp-71h]
		mov	ecx, [ebp+8]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+0Ch]
		mov	[esp], ecx
		mov	[esp+4], eax
		call	sub_6ED44270
		mov	eax, [ebp+8]
		mov	edx, [ebp+8]
		mov	dword ptr [eax], offset	off_6EDA7528
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[edx+40h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+8]
		mov	[ecx+44h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ecx+48h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[esp], ecx
		mov	dword ptr [ebp-48h], 3
		call	sub_6ED4DDB0
		mov	eax, [ebp+8]
		mov	eax, [eax+14h]
		test	eax, eax
		mov	[ebp-50h], eax
		jnz	short loc_6ED4E5A1
		jmp	loc_6ED4E7A0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4E590:				; CODE XREF: .text:6ED4E6A3j
					; .text:6ED4E770j
		mov	eax, [ebp-50h]
		mov	eax, [eax+0Ch]
		test	eax, eax
		mov	[ebp-50h], eax
		jz	loc_6ED4E7A0

loc_6ED4E5A1:				; CODE XREF: .text:6ED4E583j
					; .text:6ED4E794j
		mov	edx, [ebp-50h]
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+4Ch]
		mov	dword ptr [ebp-48h], 3
		call	eax
		test	al, al
		jz	loc_6ED4E68D
		mov	ecx, [ebp-50h]
		mov	eax, [ecx+1Ch]
		mov	[ebp-0Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+8]
		mov	eax, [eax+38h]
		mov	[ebp-54h], eax
		mov	edx, [ebp-54h]
		add	eax, 4
		mov	[ebp-60h], eax
		mov	eax, [edx+4]
		mov	edx, [eax+8]
		cmp	edx, 1
		jz	short loc_6ED4E601
		mov	ecx, [ebp-60h]
		mov	dword ptr [ebp-48h], 2
		mov	[esp], ecx
		call	sub_6ED92E00
		mov	edx, [ebp-54h]
		mov	eax, [edx+4]

loc_6ED4E601:				; CODE XREF: .text:6ED4E5E7j
		mov	edx, [eax+0Ch]
		cmp	edx, [eax+18h]
		jge	loc_6ED4E7C8

loc_6ED4E60D:				; CODE XREF: .text:6ED4E7E3j
		mov	edx, [ebp-60h]
		lea	ecx, [ebp-14h]
		lea	eax, [ebp-0Ch]
		mov	[esp+8], ecx
		mov	[esp+4], eax
		mov	[esp], edx
		mov	dword ptr [ebp-48h], 2
		call	sub_6ED983D0
		mov	ecx, [ebp-14h]
		mov	edx, [ebp-54h]
		mov	[ebp-5Ch], eax
		mov	dword ptr [esp+4], 4
		mov	[ebp-64h], ecx
		mov	eax, [edx+4]
		mov	[esp], eax
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		jz	short loc_6ED4E663
		mov	edx, [ebp-0Ch]
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	ecx, [ebp-50h]
		mov	[eax+0Ch], ecx

loc_6ED4E663:				; CODE XREF: .text:6ED4E64Fj
		mov	edx, [ebp-64h]
		mov	[eax+4], edx
		mov	ecx, [ebp-5Ch]
		mov	edx, [ecx]
		mov	[eax], edx
		mov	[ecx], eax
		mov	edx, [ebp-54h]
		mov	eax, [edx+4]
		add	dword ptr [eax+0Ch], 1
		mov	eax, [ebp-0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED4E7B0

loc_6ED4E68D:				; CODE XREF: .text:6ED4E5B7j
					; .text:6ED4E7C3j
		mov	ecx, [ebp-50h]
		mov	eax, [ecx]
		mov	[esp], ecx
		mov	eax, [eax+50h]
		mov	dword ptr [ebp-48h], 3
		call	eax
		test	al, al
		jz	loc_6ED4E590
		mov	edx, [ebp-50h]
		mov	eax, [edx+1Ch]
		mov	[ebp-10h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+8]
		mov	ecx, [ecx+3Ch]
		mov	[ebp-58h], ecx
		mov	edx, [ebp-58h]
		add	ecx, 4
		mov	[ebp-6Ch], ecx
		mov	eax, [edx+4]
		mov	edx, [eax+8]
		cmp	edx, 1
		jz	short loc_6ED4E6EA
		mov	[esp], ecx
		mov	dword ptr [ebp-48h], 1
		call	sub_6ED92E00
		mov	ecx, [ebp-58h]
		mov	eax, [ecx+4]

loc_6ED4E6EA:				; CODE XREF: .text:6ED4E6D3j
		mov	edx, [eax+0Ch]
		cmp	edx, [eax+18h]
		jge	loc_6ED4E7E8

loc_6ED4E6F6:				; CODE XREF: .text:6ED4E803j
		mov	edx, [ebp-6Ch]
		lea	eax, [ebp-14h]
		mov	[esp+8], eax
		lea	eax, [ebp-10h]
		mov	[esp+4], eax
		mov	dword ptr [ebp-48h], 1
		mov	[esp], edx
		call	sub_6ED983D0
		mov	ecx, [ebp-14h]
		mov	edx, [ebp-58h]
		mov	[ebp-68h], eax
		mov	dword ptr [esp+4], 4
		mov	[ebp-70h], ecx
		mov	eax, [edx+4]
		mov	[esp], eax
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		jz	short loc_6ED4E74C
		mov	edx, [ebp-10h]
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	ecx, [ebp-50h]
		mov	[eax+0Ch], ecx

loc_6ED4E74C:				; CODE XREF: .text:6ED4E738j
		mov	edx, [ebp-70h]
		mov	[eax+4], edx
		mov	ecx, [ebp-68h]
		mov	edx, [ecx]
		mov	[eax], edx
		mov	[ecx], eax
		mov	edx, [ebp-58h]
		mov	eax, [edx+4]
		add	dword ptr [eax+0Ch], 1
		mov	eax, [ebp-10h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED4E590
		mov	eax, [ebp-10h]
		mov	dword ptr [ebp-48h], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	eax, [ebp-50h]
		mov	eax, [eax+0Ch]
		test	eax, eax
		mov	[ebp-50h], eax
		jnz	loc_6ED4E5A1
		lea	esi, [esi+0]

loc_6ED4E7A0:				; CODE XREF: .text:6ED4E585j
					; .text:6ED4E59Bj
		lea	eax, [ebp-4Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4E7B0:				; CODE XREF: .text:6ED4E687j
		mov	eax, [ebp-0Ch]
		mov	dword ptr [ebp-48h], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED4E68D
; ---------------------------------------------------------------------------

loc_6ED4E7C8:				; CODE XREF: .text:6ED4E607j
		movsx	edx, word ptr [eax+16h]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 2
		add	edx, 1
		mov	[esp+4], edx
		call	ds:_ZN9QHashData6rehashEi
		jmp	loc_6ED4E60D
; ---------------------------------------------------------------------------

loc_6ED4E7E8:				; CODE XREF: .text:6ED4E6F0j
		movsx	edx, word ptr [eax+16h]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 1
		add	edx, 1
		mov	[esp+4], edx
		call	ds:_ZN9QHashData6rehashEi
		jmp	loc_6ED4E6F6
; ---------------------------------------------------------------------------

loc_6ED4E808:				; DATA XREF: .text:6ED4E50Ao
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	ecx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-78h], ecx
		jz	short loc_6ED4E893
		cmp	eax, 2
		jz	short loc_6ED4E830
		lea	eax, [ebp-10h]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED4E830:				; CODE XREF: .text:6ED4E81Cj
					; .text:6ED4E8A5j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-48h], 0
		add	eax, 48h
		mov	[esp], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-48h], 0
		add	eax, 44h
		mov	[esp], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-48h], 0
		add	eax, 40h
		mov	[esp], eax
		call	sub_6ED94560
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-48h], 0
		mov	[esp], edx
		call	sub_6ED48EB0
		mov	ecx, [ebp-78h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED4E893:				; CODE XREF: .text:6ED4E817j
		lea	eax, [ebp-0Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		jmp	short loc_6ED4E830
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4E8B0	proc near		; CODE XREF: sub_6ED4E9C0+17Ep
					; .text:6ED4EF2Ep ...

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A172
		mov	[ebp+var_18], offset sub_6ED4E949
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_8]
		mov	edx, [ebp+arg_0]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_6ED416C0
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7528
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[edx+40h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	[edx+44h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	[edx+48h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	sub_6ED4DDB0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED4E8B0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4E949	proc near		; DATA XREF: sub_6ED4E8B0+20o
		add	ebp, 8
		mov	eax, [ebp+8]
		mov	edx, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 48h
		mov	[ebp-40h], edx
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 44h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 40h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED48EB0
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED4E949	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4E9C0	proc near		; CODE XREF: _ZN12QDomDocumentC1ERK16QDomDocumentType+64p
					; _ZN12QDomDocumentC2ERK16QDomDocumentType+64p

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A178
		mov	[ebp+var_28], offset sub_6ED4EBAE
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp+8], 0
		mov	dword ptr [esp+4], 0
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		call	sub_6ED416C0
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [ecx], offset	off_6EDA73A8
		mov	dword ptr [esp], 4 ; size_t
		mov	[ebp+var_48], 4
		call	sub_6ED988D0
		mov	dword ptr [eax], 0
		mov	edx, [ebp+arg_0]
		mov	[edx+38h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		test	eax, eax
		mov	dword ptr [ecx+3Ch], 0
		mov	dword ptr [ecx+40h], 1
		jz	loc_6ED4EB10
		mov	edx, [ebp+arg_4]
		lock inc dword ptr [edx+4]
		setnz	al
		mov	eax, [ecx+3Ch]
		mov	[ecx+3Ch], edx
		test	eax, eax
		jz	short loc_6ED4EA73
		lock dec dword ptr [eax+4]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4EAD6

loc_6ED4EA73:				; CODE XREF: sub_6ED4E9C0+A6j
					; sub_6ED4E9C0+127j ...
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_C]
		add	ecx, 1Ch
		mov	[ebp+var_50], ecx
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aDocument ; "#document"
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	ds:_ZN7QString10fromLatin1EPKci
		sub	esp, 4
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_50]
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4EAF0
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED4EAD6:				; CODE XREF: sub_6ED4E9C0+B1j
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_48], 3
		call	eax
		jmp	short loc_6ED4EA73
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4EAF0:				; CODE XREF: sub_6ED4E9C0+107j
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED4EB10:				; CODE XREF: sub_6ED4E9C0+8Ej
		mov	dword ptr [esp], 4Ch ; size_t
		mov	[ebp+var_48], 3
		call	sub_6ED988D0
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_54], eax
		mov	[ebp+var_58], eax
		mov	[esp], eax
		mov	[esp+8], ecx
		mov	[esp+4], ecx
		mov	[ebp+var_48], 2
		call	sub_6ED4E8B0
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+3Ch]
		cmp	[ebp+var_54], eax
		jz	short loc_6ED4EB94
		mov	edx, [ebp+var_54]
		test	edx, edx
		jz	short loc_6ED4EB62
		mov	edx, [ebp+var_54]
		lock inc dword ptr [edx+4]
		setnz	al
		mov	eax, [ecx+3Ch]

loc_6ED4EB62:				; CODE XREF: sub_6ED4E9C0+193j
		mov	edx, [ebp+var_54]
		test	eax, eax
		mov	ecx, [ebp+arg_0]
		mov	[ecx+3Ch], edx
		jz	short loc_6ED4EBA3
		lock dec dword ptr [eax+4]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED4EBA3
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_48], 3
		call	eax
		mov	ecx, [ebp+arg_0]
		mov	ecx, [ecx+3Ch]
		mov	[ebp+var_58], ecx

loc_6ED4EB94:				; CODE XREF: sub_6ED4E9C0+18Cj
					; sub_6ED4E9C0+1ECj
		mov	edx, [ebp+var_58]
		lock dec dword ptr [edx+4]
		setnz	al
		jmp	loc_6ED4EA73
; ---------------------------------------------------------------------------

loc_6ED4EBA3:				; CODE XREF: sub_6ED4E9C0+1ADj
					; sub_6ED4E9C0+1B8j
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+3Ch]
		mov	[ebp+var_58], edx
		jmp	short loc_6ED4EB94
sub_6ED4E9C0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4EBAE	proc near		; DATA XREF: sub_6ED4E9C0+1Do
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-5Ch], edx
		jz	short loc_6ED4EC22
		cmp	eax, 2
		jz	short loc_6ED4EBDB
		cmp	eax, 3
		jz	short loc_6ED4EBFE
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED4EBDB:				; CODE XREF: sub_6ED4EBAE+14j
					; sub_6ED4EBAE+7Fj
		mov	eax, [ebp+8]
		add	eax, 3Ch
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED91E90
		mov	eax, [ebp+8]
		add	eax, 38h
		mov	[esp+0], eax
		call	sub_6ED91ED0

loc_6ED4EBFE:				; CODE XREF: sub_6ED4EBAE+19j
		mov	ecx, [ebp+8]
		mov	[esp+0], ecx
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED48EB0
		mov	eax, [ebp-5Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED4EC22:				; CODE XREF: sub_6ED4EBAE+Fj
		mov	edx, [ebp-54h]
		mov	[esp+0], edx
		call	sub_6ED988B0
		jmp	short loc_6ED4EBDB
sub_6ED4EBAE	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  68. _ZN12QDomDocumentC1ERK16QDomDocumentType

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QDomDocumentC1ERK16QDomDocumentType
_ZN12QDomDocumentC1ERK16QDomDocumentType proc near
					; CODE XREF: _ZN18QDomImplementation14createDocumentERK7QStringS2_RK16QDomDocumentType+43p

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A184
		mov	[ebp+var_18], offset sub_6ED4ECAE
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], 0
		mov	dword ptr [esp], 44h ; size_t
		mov	[ebp+var_38], 2
		call	sub_6ED988D0
		mov	[ebp+var_40], eax
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED4E9C0
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN12QDomDocumentC1ERK16QDomDocumentType endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4ECAE	proc near		; DATA XREF: _ZN12QDomDocumentC1ERK16QDomDocumentType+1Do
		add	ebp, 8
		mov	edx, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], edx
		jz	short loc_6ED4ECC8
		mov	eax, [ebp-40h]
		mov	[esp+0], eax
		call	sub_6ED988B0

loc_6ED4ECC8:				; CODE XREF: sub_6ED4ECAE+Dj
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], edx
		call	_ZN8QDomNodeD2Ev
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED4ECAE	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  73. _ZN12QDomDocumentC2ERK16QDomDocumentType

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QDomDocumentC2ERK16QDomDocumentType
_ZN12QDomDocumentC2ERK16QDomDocumentType proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A18C
		mov	[ebp+var_18], offset sub_6ED4ED6E
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], 0
		mov	dword ptr [esp], 44h ; size_t
		mov	[ebp+var_38], 2
		call	sub_6ED988D0
		mov	[ebp+var_40], eax
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED4E9C0
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN12QDomDocumentC2ERK16QDomDocumentType endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4ED6E	proc near		; DATA XREF: _ZN12QDomDocumentC2ERK16QDomDocumentType+1Do
		add	ebp, 8
		mov	edx, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], edx
		jz	short loc_6ED4ED88
		mov	eax, [ebp-40h]
		mov	[esp+0], eax
		call	sub_6ED988B0

loc_6ED4ED88:				; CODE XREF: sub_6ED4ED6E+Dj
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], edx
		call	_ZN8QDomNodeD2Ev
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED4ED6E	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp-8]
		mov	[ebp-2Ch], eax
		lea	eax, [ebp-4Ch]
		mov	dword ptr [ebp-34h], offset sub_6ED997C0
		mov	dword ptr [ebp-30h], offset dword_6ED9A194
		mov	dword ptr [ebp-28h], offset loc_6ED4EF9E
		mov	[ebp-24h], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp+8], 0
		mov	dword ptr [esp+4], 0
		mov	edx, [ebp+8]
		mov	[esp], edx
		call	sub_6ED416C0
		mov	ecx, [ebp+8]
		mov	dword ptr [ecx], offset	off_6EDA73A8
		mov	dword ptr [esp], 4
		mov	dword ptr [ebp-48h], 4
		call	sub_6ED988D0
		mov	dword ptr [eax], 0
		mov	edx, [ebp+8]
		mov	[edx+38h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+0Ch]
		mov	ecx, [ebp+8]
		test	eax, eax
		mov	dword ptr [ecx+3Ch], 0
		mov	dword ptr [ecx+40h], 1
		jz	loc_6ED4EF00
		mov	edx, [ebp+0Ch]
		lock inc dword ptr [edx+4]
		setnz	al
		mov	eax, [ecx+3Ch]
		mov	[ecx+3Ch], edx
		test	eax, eax
		jz	short loc_6ED4EE63
		lock dec dword ptr [eax+4]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4EEC6

loc_6ED4EE63:				; CODE XREF: .text:6ED4EE56j
					; .text:6ED4EED7j ...
		mov	ecx, [ebp+8]
		lea	eax, [ebp-0Ch]
		add	ecx, 1Ch
		mov	[ebp-50h], ecx
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aDocument ; "#document"
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 3
		call	ds:_ZN7QString10fromLatin1EPKci
		sub	esp, 4
		lea	eax, [ebp-0Ch]
		mov	[esp+4], eax
		mov	eax, [ebp-50h]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp-0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4EEE0
		lea	eax, [ebp-4Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED4EEC6:				; CODE XREF: .text:6ED4EE61j
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	dword ptr [ebp-48h], 3
		call	eax
		jmp	short loc_6ED4EE63
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4EEE0:				; CODE XREF: .text:6ED4EEB7j
		mov	eax, [ebp-0Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 3
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp-4Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED4EF00:				; CODE XREF: .text:6ED4EE3Ej
		mov	dword ptr [esp], 4Ch
		mov	dword ptr [ebp-48h], 3
		call	sub_6ED988D0
		mov	ecx, [ebp+8]
		mov	[ebp-54h], eax
		mov	[ebp-58h], eax
		mov	[esp], eax
		mov	[esp+8], ecx
		mov	[esp+4], ecx
		mov	dword ptr [ebp-48h], 2
		call	sub_6ED4E8B0
		mov	ecx, [ebp+8]
		mov	eax, [ecx+3Ch]
		cmp	[ebp-54h], eax
		jz	short loc_6ED4EF84
		mov	edx, [ebp-54h]
		test	edx, edx
		jz	short loc_6ED4EF52
		mov	edx, [ebp-54h]
		lock inc dword ptr [edx+4]
		setnz	al
		mov	eax, [ecx+3Ch]

loc_6ED4EF52:				; CODE XREF: .text:6ED4EF43j
		mov	edx, [ebp-54h]
		test	eax, eax
		mov	ecx, [ebp+8]
		mov	[ecx+3Ch], edx
		jz	short loc_6ED4EF93
		lock dec dword ptr [eax+4]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED4EF93
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	dword ptr [ebp-48h], 3
		call	eax
		mov	ecx, [ebp+8]
		mov	ecx, [ecx+3Ch]
		mov	[ebp-58h], ecx

loc_6ED4EF84:				; CODE XREF: .text:6ED4EF3Cj
					; .text:6ED4EF9Cj
		mov	edx, [ebp-58h]
		lock dec dword ptr [edx+4]
		setnz	al
		jmp	loc_6ED4EE63
; ---------------------------------------------------------------------------

loc_6ED4EF93:				; CODE XREF: .text:6ED4EF5Dj
					; .text:6ED4EF68j
		mov	edx, [ebp+8]
		mov	edx, [edx+3Ch]
		mov	[ebp-58h], edx
		jmp	short loc_6ED4EF84
; ---------------------------------------------------------------------------

loc_6ED4EF9E:				; DATA XREF: .text:6ED4EDCDo
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-5Ch], edx
		jz	short loc_6ED4F012
		cmp	eax, 2
		jz	short loc_6ED4EFCB
		cmp	eax, 3
		jz	short loc_6ED4EFEE
		lea	eax, [ebp-0Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED4EFCB:				; CODE XREF: .text:6ED4EFB2j
					; .text:6ED4F01Dj
		mov	eax, [ebp+8]
		add	eax, 3Ch
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED91E90
		mov	eax, [ebp+8]
		add	eax, 38h
		mov	[esp], eax
		call	sub_6ED91ED0

loc_6ED4EFEE:				; CODE XREF: .text:6ED4EFB7j
		mov	ecx, [ebp+8]
		mov	[esp], ecx
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED48EB0
		mov	eax, [ebp-5Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED4F012:				; CODE XREF: .text:6ED4EFADj
		mov	edx, [ebp-54h]
		mov	[esp], edx
		call	sub_6ED988B0
		jmp	short loc_6ED4EFCB
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4F020	proc near		; CODE XREF: _ZN12QDomDocumentC1ERK7QString+62p
					; _ZN12QDomDocumentC2ERK7QString+62p

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A1A0
		mov	[ebp+var_28], offset sub_6ED4F1F0
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp+8], 0
		mov	dword ptr [esp+4], 0
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		call	sub_6ED416C0
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [ecx], offset	off_6EDA73A8
		mov	dword ptr [esp], 4 ; size_t
		mov	[ebp+var_48], 4
		call	sub_6ED988D0
		mov	dword ptr [eax], 0
		mov	edx, [ebp+arg_0]
		mov	[edx+38h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [ecx+3Ch], 0
		mov	dword ptr [ecx+40h], 1
		mov	dword ptr [esp], 4Ch ; size_t
		mov	[ebp+var_48], 3
		call	sub_6ED988D0
		mov	[ebp+var_50], eax
		mov	[ebp+var_54], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+8], eax
		mov	[esp+4], eax
		mov	edx, [ebp+var_50]
		mov	[esp], edx
		mov	[ebp+var_48], 2
		call	sub_6ED4E8B0
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+3Ch]
		cmp	[ebp+var_50], eax
		jz	short loc_6ED4F123
		mov	ecx, [ebp+var_50]
		test	ecx, ecx
		jz	short loc_6ED4F0FE
		mov	ecx, [ebp+var_50]
		lock inc dword ptr [ecx+4]
		setnz	al
		mov	eax, [edx+3Ch]

loc_6ED4F0FE:				; CODE XREF: sub_6ED4F020+CFj
		mov	ecx, [ebp+var_50]
		test	eax, eax
		mov	edx, [ebp+arg_0]
		mov	[edx+3Ch], ecx
		jz	short loc_6ED4F11A
		lock dec dword ptr [eax+4]
		setnz	dl
		test	dl, dl
		jz	loc_6ED4F1B0

loc_6ED4F11A:				; CODE XREF: sub_6ED4F020+E9j
		mov	ecx, [ebp+arg_0]
		mov	ecx, [ecx+3Ch]
		mov	[ebp+var_54], ecx

loc_6ED4F123:				; CODE XREF: sub_6ED4F020+C8j
					; sub_6ED4F020+1AAj
		mov	edx, [ebp+var_54]
		lock dec dword ptr [edx+4]
		setnz	al
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+3Ch]
		add	eax, 1Ch
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+arg_0]
		add	eax, 1Ch
		mov	[ebp+var_58], eax
		lea	eax, [ebp+var_C]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aDocument ; "#document"
		mov	[esp], eax
		call	ds:_ZN7QString10fromLatin1EPKci
		sub	esp, 4
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	edx, [ebp+var_58]
		mov	[esp], edx
		mov	[ebp+var_48], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4F1D0
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4F1B0:				; CODE XREF: sub_6ED4F020+F4j
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_48], 3
		call	eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+3Ch]
		mov	[ebp+var_54], eax
		jmp	loc_6ED4F123
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4F1D0:				; CODE XREF: sub_6ED4F020+17Aj
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED4F020	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4F1F0	proc near		; DATA XREF: sub_6ED4F020+1Do
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	ecx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-5Ch], ecx
		jz	short loc_6ED4F264
		cmp	eax, 2
		jz	short loc_6ED4F21D
		cmp	eax, 3
		jz	short loc_6ED4F240
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED4F21D:				; CODE XREF: sub_6ED4F1F0+14j
					; sub_6ED4F1F0+7Fj
		mov	eax, [ebp+8]
		add	eax, 3Ch
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED91E90
		mov	eax, [ebp+8]
		add	eax, 38h
		mov	[esp+0], eax
		call	sub_6ED91ED0

loc_6ED4F240:				; CODE XREF: sub_6ED4F1F0+19j
		mov	eax, [ebp+8]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED48EB0
		mov	edx, [ebp-5Ch]
		mov	[esp+0], edx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED4F264:				; CODE XREF: sub_6ED4F1F0+Fj
		mov	ecx, [ebp-50h]
		mov	[esp+0], ecx
		call	sub_6ED988B0
		jmp	short loc_6ED4F21D
sub_6ED4F1F0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  69. _ZN12QDomDocumentC1ERK7QString

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QDomDocumentC1ERK7QString
_ZN12QDomDocumentC1ERK7QString proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A1AC
		mov	[ebp+var_18], offset sub_6ED4F2FC
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], 0
		mov	dword ptr [esp], 44h ; size_t
		mov	[ebp+var_38], 2
		call	sub_6ED988D0
		mov	[ebp+var_40], eax
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED4F020
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN12QDomDocumentC1ERK7QString endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4F2FC	proc near		; DATA XREF: _ZN12QDomDocumentC1ERK7QString+1Do
		add	ebp, 8
		mov	edx, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], edx
		jz	short loc_6ED4F316
		mov	eax, [ebp-40h]
		mov	[esp+0], eax
		call	sub_6ED988B0

loc_6ED4F316:				; CODE XREF: sub_6ED4F2FC+Dj
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], edx
		call	_ZN8QDomNodeD2Ev
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED4F2FC	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  74. _ZN12QDomDocumentC2ERK7QString

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QDomDocumentC2ERK7QString
_ZN12QDomDocumentC2ERK7QString proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A1B4
		mov	[ebp+var_18], offset sub_6ED4F3BC
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], 0
		mov	dword ptr [esp], 44h ; size_t
		mov	[ebp+var_38], 2
		call	sub_6ED988D0
		mov	[ebp+var_40], eax
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED4F020
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN12QDomDocumentC2ERK7QString endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4F3BC	proc near		; DATA XREF: _ZN12QDomDocumentC2ERK7QString+1Do
		add	ebp, 8
		mov	edx, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], edx
		jz	short loc_6ED4F3D6
		mov	eax, [ebp-40h]
		mov	[esp+0], eax
		call	sub_6ED988B0

loc_6ED4F3D6:				; CODE XREF: sub_6ED4F3BC+Dj
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], edx
		call	_ZN8QDomNodeD2Ev
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED4F3BC	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp-8]
		mov	[ebp-2Ch], eax
		lea	eax, [ebp-4Ch]
		mov	dword ptr [ebp-34h], offset sub_6ED997C0
		mov	dword ptr [ebp-30h], offset dword_6ED9A1BC
		mov	dword ptr [ebp-28h], offset loc_6ED4F5D0
		mov	[ebp-24h], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp+8], 0
		mov	dword ptr [esp+4], 0
		mov	edx, [ebp+8]
		mov	[esp], edx
		call	sub_6ED416C0
		mov	ecx, [ebp+8]
		mov	dword ptr [ecx], offset	off_6EDA73A8
		mov	dword ptr [esp], 4
		mov	dword ptr [ebp-48h], 4
		call	sub_6ED988D0
		mov	dword ptr [eax], 0
		mov	edx, [ebp+8]
		mov	[edx+38h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+8]
		mov	dword ptr [ecx+3Ch], 0
		mov	dword ptr [ecx+40h], 1
		mov	dword ptr [esp], 4Ch
		mov	dword ptr [ebp-48h], 3
		call	sub_6ED988D0
		mov	[ebp-50h], eax
		mov	[ebp-54h], eax
		mov	eax, [ebp+8]
		mov	[esp+8], eax
		mov	[esp+4], eax
		mov	edx, [ebp-50h]
		mov	[esp], edx
		mov	dword ptr [ebp-48h], 2
		call	sub_6ED4E8B0
		mov	edx, [ebp+8]
		mov	eax, [edx+3Ch]
		cmp	[ebp-50h], eax
		jz	short loc_6ED4F503
		mov	ecx, [ebp-50h]
		test	ecx, ecx
		jz	short loc_6ED4F4DE
		mov	ecx, [ebp-50h]
		lock inc dword ptr [ecx+4]
		setnz	al
		mov	eax, [edx+3Ch]

loc_6ED4F4DE:				; CODE XREF: .text:6ED4F4CFj
		mov	ecx, [ebp-50h]
		test	eax, eax
		mov	edx, [ebp+8]
		mov	[edx+3Ch], ecx
		jz	short loc_6ED4F4FA
		lock dec dword ptr [eax+4]
		setnz	dl
		test	dl, dl
		jz	loc_6ED4F590

loc_6ED4F4FA:				; CODE XREF: .text:6ED4F4E9j
		mov	ecx, [ebp+8]
		mov	ecx, [ecx+3Ch]
		mov	[ebp-54h], ecx

loc_6ED4F503:				; CODE XREF: .text:6ED4F4C8j
					; .text:6ED4F5AAj
		mov	edx, [ebp-54h]
		lock dec dword ptr [edx+4]
		setnz	al
		mov	eax, [ebp+0Ch]
		mov	[esp+4], eax
		mov	ecx, [ebp+8]
		mov	eax, [ecx+3Ch]
		add	eax, 1Ch
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 3
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+8]
		add	eax, 1Ch
		mov	[ebp-58h], eax
		lea	eax, [ebp-0Ch]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aDocument ; "#document"
		mov	[esp], eax
		call	ds:_ZN7QString10fromLatin1EPKci
		sub	esp, 4
		lea	eax, [ebp-0Ch]
		mov	[esp+4], eax
		mov	edx, [ebp-58h]
		mov	[esp], edx
		mov	dword ptr [ebp-48h], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp-0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4F5B0
		lea	eax, [ebp-4Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4F590:				; CODE XREF: .text:6ED4F4F4j
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	dword ptr [ebp-48h], 3
		call	eax
		mov	eax, [ebp+8]
		mov	eax, [eax+3Ch]
		mov	[ebp-54h], eax
		jmp	loc_6ED4F503
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4F5B0:				; CODE XREF: .text:6ED4F57Aj
		mov	eax, [ebp-0Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 3
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp-4Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED4F5D0:				; DATA XREF: .text:6ED4F41Do
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	ecx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-5Ch], ecx
		jz	short loc_6ED4F644
		cmp	eax, 2
		jz	short loc_6ED4F5FD
		cmp	eax, 3
		jz	short loc_6ED4F620
		lea	eax, [ebp-0Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED4F5FD:				; CODE XREF: .text:6ED4F5E4j
					; .text:6ED4F64Fj
		mov	eax, [ebp+8]
		add	eax, 3Ch
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED91E90
		mov	eax, [ebp+8]
		add	eax, 38h
		mov	[esp], eax
		call	sub_6ED91ED0

loc_6ED4F620:				; CODE XREF: .text:6ED4F5E9j
		mov	eax, [ebp+8]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED48EB0
		mov	edx, [ebp-5Ch]
		mov	[esp], edx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED4F644:				; CODE XREF: .text:6ED4F5DFj
		mov	ecx, [ebp-50h]
		mov	[esp], ecx
		call	sub_6ED988B0
		jmp	short loc_6ED4F5FD
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED4F660	proc near		; CODE XREF: _ZN12QDomDocument10importNodeERK8QDomNodeb+A1p
					; _ZN12QDomDocument22createDocumentFragmentEv+90p ...

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A1C8
		mov	[ebp+var_28], offset sub_6ED4F810
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp+8], 0
		mov	dword ptr [esp+4], 0
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		call	sub_6ED416C0
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [ecx], offset	off_6EDA73A8
		mov	dword ptr [esp], 4 ; size_t
		mov	[ebp+var_48], 4
		call	sub_6ED988D0
		mov	dword ptr [eax], 0
		mov	edx, [ebp+arg_0]
		mov	[edx+38h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [ecx+3Ch], 0
		mov	dword ptr [ecx+40h], 1
		mov	dword ptr [esp], 4Ch ; size_t
		mov	[ebp+var_48], 3
		call	sub_6ED988D0
		mov	[ebp+var_50], eax
		mov	[ebp+var_54], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+8], eax
		mov	[esp+4], eax
		mov	edx, [ebp+var_50]
		mov	[esp], edx
		mov	[ebp+var_48], 2
		call	sub_6ED4E8B0
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+3Ch]
		cmp	[ebp+var_50], eax
		jz	short loc_6ED4F75F
		mov	ecx, [ebp+var_50]
		test	ecx, ecx
		jz	short loc_6ED4F73E
		mov	ecx, [ebp+var_50]
		lock inc dword ptr [ecx+4]
		setnz	al
		mov	eax, [edx+3Ch]

loc_6ED4F73E:				; CODE XREF: sub_6ED4F660+CFj
		mov	ecx, [ebp+var_50]
		test	eax, eax
		mov	edx, [ebp+arg_0]
		mov	[edx+3Ch], ecx
		jz	short loc_6ED4F756
		lock dec dword ptr [eax+4]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4F7D0

loc_6ED4F756:				; CODE XREF: sub_6ED4F660+E9j
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+3Ch]
		mov	[ebp+var_54], edx

loc_6ED4F75F:				; CODE XREF: sub_6ED4F660+C8j
					; sub_6ED4F660+18Aj
		mov	edx, [ebp+var_54]
		lock dec dword ptr [edx+4]
		setnz	al
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_C]
		add	ecx, 1Ch
		mov	[ebp+var_58], ecx
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aDocument ; "#document"
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	ds:_ZN7QString10fromLatin1EPKci
		sub	esp, 4
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_58]
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4F7F0
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4F7D0:				; CODE XREF: sub_6ED4F660+F4j
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_48], 3
		call	eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+3Ch]
		mov	[ebp+var_54], eax
		jmp	loc_6ED4F75F
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4F7F0:				; CODE XREF: sub_6ED4F660+15Dj
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED4F660	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4F810	proc near		; DATA XREF: sub_6ED4F660+1Do
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-5Ch], edx
		jz	short loc_6ED4F884
		cmp	eax, 2
		jz	short loc_6ED4F83D
		cmp	eax, 3
		jz	short loc_6ED4F860
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED4F83D:				; CODE XREF: sub_6ED4F810+14j
					; sub_6ED4F810+7Fj
		mov	eax, [ebp+8]
		add	eax, 3Ch
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED91E90
		mov	eax, [ebp+8]
		add	eax, 38h
		mov	[esp+0], eax
		call	sub_6ED91ED0

loc_6ED4F860:				; CODE XREF: sub_6ED4F810+19j
		mov	ecx, [ebp+8]
		mov	[esp+0], ecx
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED48EB0
		mov	eax, [ebp-5Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED4F884:				; CODE XREF: sub_6ED4F810+Fj
		mov	ecx, [ebp-50h]
		mov	[esp+0], ecx
		call	sub_6ED988B0
		jmp	short loc_6ED4F83D
sub_6ED4F810	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  46. _ZN12QDomDocument10importNodeERK8QDomNodeb

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QDomDocument10importNodeERK8QDomNodeb
_ZN12QDomDocument10importNodeERK8QDomNodeb proc	near

var_44		= dword	ptr -44h
var_3D		= byte ptr -3Dh
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= byte ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		movzx	eax, [ebp+arg_C]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_1C], edx
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A1D4
		mov	[ebp+var_3D], al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_18], offset sub_6ED4F950
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED4F921

loc_6ED4F8DF:				; CODE XREF: _ZN12QDomDocument10importNodeERK8QDomNodeb+AEj
		movzx	edx, [ebp+var_3D]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_8]
		mov	edx, [edx]
		mov	[esp], eax
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_6ED4B0D0
		mov	edx, [ebp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short loc_6ED4F90F
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED4F90F:				; CODE XREF: _ZN12QDomDocument10importNodeERK8QDomNodeb+66j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------

loc_6ED4F921:				; CODE XREF: _ZN12QDomDocument10importNodeERK8QDomNodeb+3Dj
		mov	dword ptr [esp], 44h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_38], 1
		mov	[ebp+var_44], eax
		mov	[esp], eax
		call	sub_6ED4F660
		mov	eax, [ebp+var_44]
		mov	edx, [ebp+arg_4]
		mov	[edx], eax
		jmp	short loc_6ED4F8DF
_ZN12QDomDocument10importNodeERK8QDomNodeb endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4F950	proc near		; DATA XREF: _ZN12QDomDocument10importNodeERK8QDomNodeb+27o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-44h]
		mov	[ebp-48h], eax
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	eax, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED4F950	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  65. _ZN12QDomDocument22createDocumentFragmentEv

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QDomDocument22createDocumentFragmentEv
_ZN12QDomDocument22createDocumentFragmentEv proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A1DA
		mov	[ebp+var_18], offset sub_6ED4FA1F
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED4F9F0

loc_6ED4F9B8:				; CODE XREF: _ZN12QDomDocument22createDocumentFragmentEv+9Dj
		mov	[esp], eax
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED4D480
		mov	edx, [ebp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short loc_6ED4F9D7
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED4F9D7:				; CODE XREF: _ZN12QDomDocument22createDocumentFragmentEv+4Ej
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4F9F0:				; CODE XREF: _ZN12QDomDocument22createDocumentFragmentEv+36j
		mov	dword ptr [esp], 44h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	sub_6ED4F660
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+arg_4]
		mov	[edx], eax
		jmp	short loc_6ED4F9B8
_ZN12QDomDocument22createDocumentFragmentEv endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4FA1F	proc near		; DATA XREF: _ZN12QDomDocument22createDocumentFragmentEv+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-40h]
		mov	[ebp-44h], eax
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED4FA1F	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp-8]
		mov	[ebp-2Ch], eax
		lea	eax, [ebp-4Ch]
		mov	dword ptr [ebp-34h], offset sub_6ED997C0
		mov	dword ptr [ebp-30h], offset dword_6ED9A1E0
		mov	dword ptr [ebp-28h], offset loc_6ED4FC00
		mov	[ebp-24h], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp+8], 0
		mov	dword ptr [esp+4], 0
		mov	edx, [ebp+8]
		mov	[esp], edx
		call	sub_6ED416C0
		mov	ecx, [ebp+8]
		mov	dword ptr [ecx], offset	off_6EDA73A8
		mov	dword ptr [esp], 4
		mov	dword ptr [ebp-48h], 4
		call	sub_6ED988D0
		mov	dword ptr [eax], 0
		mov	edx, [ebp+8]
		mov	[edx+38h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+8]
		mov	dword ptr [ecx+3Ch], 0
		mov	dword ptr [ecx+40h], 1
		mov	dword ptr [esp], 4Ch
		mov	dword ptr [ebp-48h], 3
		call	sub_6ED988D0
		mov	[ebp-50h], eax
		mov	[ebp-54h], eax
		mov	eax, [ebp+8]
		mov	[esp+8], eax
		mov	[esp+4], eax
		mov	edx, [ebp-50h]
		mov	[esp], edx
		mov	dword ptr [ebp-48h], 2
		call	sub_6ED4E8B0
		mov	edx, [ebp+8]
		mov	eax, [edx+3Ch]
		cmp	[ebp-50h], eax
		jz	short loc_6ED4FB4F
		mov	ecx, [ebp-50h]
		test	ecx, ecx
		jz	short loc_6ED4FB2E
		mov	ecx, [ebp-50h]
		lock inc dword ptr [ecx+4]
		setnz	al
		mov	eax, [edx+3Ch]

loc_6ED4FB2E:				; CODE XREF: .text:6ED4FB1Fj
		mov	ecx, [ebp-50h]
		test	eax, eax
		mov	edx, [ebp+8]
		mov	[edx+3Ch], ecx
		jz	short loc_6ED4FB46
		lock dec dword ptr [eax+4]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4FBC0

loc_6ED4FB46:				; CODE XREF: .text:6ED4FB39j
		mov	edx, [ebp+8]
		mov	edx, [edx+3Ch]
		mov	[ebp-54h], edx

loc_6ED4FB4F:				; CODE XREF: .text:6ED4FB18j
					; .text:6ED4FBDAj
		mov	edx, [ebp-54h]
		lock dec dword ptr [edx+4]
		setnz	al
		mov	ecx, [ebp+8]
		lea	eax, [ebp-0Ch]
		add	ecx, 1Ch
		mov	[ebp-58h], ecx
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aDocument ; "#document"
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 3
		call	ds:_ZN7QString10fromLatin1EPKci
		sub	esp, 4
		lea	eax, [ebp-0Ch]
		mov	[esp+4], eax
		mov	eax, [ebp-58h]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp-0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4FBE0
		lea	eax, [ebp-4Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4FBC0:				; CODE XREF: .text:6ED4FB44j
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	dword ptr [ebp-48h], 3
		call	eax
		mov	eax, [ebp+8]
		mov	eax, [eax+3Ch]
		mov	[ebp-54h], eax
		jmp	loc_6ED4FB4F
; ---------------------------------------------------------------------------
		align 10h

loc_6ED4FBE0:				; CODE XREF: .text:6ED4FBADj
		mov	eax, [ebp-0Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 3
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp-4Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED4FC00:				; DATA XREF: .text:6ED4FA6Do
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-5Ch], edx
		jz	short loc_6ED4FC74
		cmp	eax, 2
		jz	short loc_6ED4FC2D
		cmp	eax, 3
		jz	short loc_6ED4FC50
		lea	eax, [ebp-0Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED4FC2D:				; CODE XREF: .text:6ED4FC14j
					; .text:6ED4FC7Fj
		mov	eax, [ebp+8]
		add	eax, 3Ch
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED91E90
		mov	eax, [ebp+8]
		add	eax, 38h
		mov	[esp], eax
		call	sub_6ED91ED0

loc_6ED4FC50:				; CODE XREF: .text:6ED4FC19j
		mov	ecx, [ebp+8]
		mov	[esp], ecx
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED48EB0
		mov	eax, [ebp-5Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED4FC74:				; CODE XREF: .text:6ED4FC0Fj
		mov	ecx, [ebp-50h]
		mov	[esp], ecx
		call	sub_6ED988B0
		jmp	short loc_6ED4FC2D
; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_6ED997C0
		mov	dword ptr [ebp-20h], offset dword_6ED9A1EC
		mov	dword ptr [ebp-18h], offset loc_6ED4FD29
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+10h]
		mov	edx, [ebp+8]
		mov	[esp+8], eax
		mov	eax, [ebp+0Ch]
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_6ED416C0
		mov	eax, [ebp+8]
		mov	edx, [ebp+8]
		mov	dword ptr [eax], offset	off_6EDA7528
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[edx+40h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+8]
		mov	[edx+44h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+8]
		mov	[edx+48h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 1
		mov	[esp], eax
		call	sub_6ED4DDB0
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED4FD29:				; DATA XREF: .text:6ED4FCB0o
		add	ebp, 8
		mov	eax, [ebp+8]
		mov	edx, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 48h
		mov	[ebp-40h], edx
		mov	[esp], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 44h
		mov	[esp], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 40h
		mov	[esp], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], eax
		call	sub_6ED48EB0
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h
; Exported entry  20. _ZN11QDomElement12setAttributeERK7QStringf

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl ZN11QDomElement12setAttributeERK7QStringf(int, int, float)
		public _ZN11QDomElement12setAttributeERK7QStringf
_ZN11QDomElement12setAttributeERK7QStringf proc	near

var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A1F2
		mov	[ebp+var_28], offset sub_6ED4FE65
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED4FE38
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	dword ptr [esp+10h], 6
		lea	eax, [ebp+var_C]
		mov	dword ptr [esp+0Ch], 67h
		fld	[ebp+arg_8]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN7QString6setNumEdci
		lea	eax, [ebp+var_C]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[esp], eax
		call	sub_6ED49E10
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4FE45

loc_6ED4FE38:				; CODE XREF: _ZN11QDomElement12setAttributeERK7QStringf+36j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED4FE45:				; CODE XREF: _ZN11QDomElement12setAttributeERK7QStringf+96j
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN11QDomElement12setAttributeERK7QStringf endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4FE65	proc near		; DATA XREF: _ZN11QDomElement12setAttributeERK7QStringf+1Do
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	[ebp-50h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	edx, [ebp-50h]
		mov	[esp+0], edx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED4FE65	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  22. _ZN11QDomElement12setAttributeERK7QStringy

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN11QDomElement12setAttributeERK7QStringy
_ZN11QDomElement12setAttributeERK7QStringy proc	near

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		mov	eax, [ebp+arg_8]
		mov	edx, [ebp+arg_C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A1F8
		mov	[ebp+var_58], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_54], edx
		lea	edx, [ebp+var_8]
		mov	[ebp+var_2C], edx
		mov	[ebp+var_28], offset sub_6ED4FF70
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	edx, [eax]
		test	edx, edx
		jz	short loc_6ED4FF43
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	dword ptr [esp+0Ch], 0Ah
		mov	eax, [ebp+var_58]
		mov	edx, [ebp+var_54]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp+8], edx
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN7QString6setNumEyi
		lea	eax, [ebp+var_C]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[esp], eax
		call	sub_6ED49E10
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED4FF50

loc_6ED4FF43:				; CODE XREF: _ZN11QDomElement12setAttributeERK7QStringy+42j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED4FF50:				; CODE XREF: _ZN11QDomElement12setAttributeERK7QStringy+A1j
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN11QDomElement12setAttributeERK7QStringy endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED4FF70	proc near		; DATA XREF: _ZN11QDomElement12setAttributeERK7QStringy+29o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	[ebp-5Ch], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	edx, [ebp-5Ch]
		mov	[esp+0], edx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED4FF70	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  21. _ZN11QDomElement12setAttributeERK7QStringx

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN11QDomElement12setAttributeERK7QStringx
_ZN11QDomElement12setAttributeERK7QStringx proc	near

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		mov	eax, [ebp+arg_8]
		mov	edx, [ebp+arg_C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A1FE
		mov	[ebp+var_58], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_54], edx
		lea	edx, [ebp+var_8]
		mov	[ebp+var_2C], edx
		mov	[ebp+var_28], offset sub_6ED50070
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		test	ecx, ecx
		jz	short loc_6ED50043
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	dword ptr [esp+0Ch], 0Ah
		mov	eax, [ebp+var_58]
		mov	edx, [ebp+var_54]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp+8], edx
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN7QString6setNumExi
		lea	eax, [ebp+var_C]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[esp], eax
		call	sub_6ED49E10
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED50050

loc_6ED50043:				; CODE XREF: _ZN11QDomElement12setAttributeERK7QStringx+42j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED50050:				; CODE XREF: _ZN11QDomElement12setAttributeERK7QStringx+A1j
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN11QDomElement12setAttributeERK7QStringx endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED50070	proc near		; DATA XREF: _ZN11QDomElement12setAttributeERK7QStringx+29o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	[ebp-5Ch], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	edx, [ebp-5Ch]
		mov	[esp+0], edx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED50070	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED500A0	proc near		; DATA XREF: .rdata:6EDA712Co

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_A		= word ptr -0Ah
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A20A
		mov	[ebp+var_28], offset sub_6ED50216
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		test	eax, eax
		jz	short loc_6ED500EE
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+48h]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	eax
		test	al, al
		jnz	short loc_6ED50156

loc_6ED500EE:				; CODE XREF: sub_6ED500A0+37j
		mov	edx, [ebp+arg_C]
		xor	eax, eax
		test	edx, edx
		jle	short loc_6ED500FE
		mov	eax, [ebp+arg_C]
		imul	eax, [ebp+arg_8]

loc_6ED500FE:				; CODE XREF: sub_6ED500A0+55j
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	word ptr [esp+8], 20h
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QStringC1Ei5QChar
		mov	eax, [ebp+arg_4]
		lea	edx, [ebp+var_10]
		mov	[esp+4], edx
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED50156
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED50156:				; CODE XREF: sub_6ED500A0+4Cj
					; sub_6ED500A0+A1j
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+4], offset asc_6EDA023C ; "<!--"
		mov	[ebp+var_48], 0FFFFFFFFh
		add	edx, 20h
		mov	[ebp+var_50], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		mov	edx, [ebp+var_50]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	eax, [ebp+var_A]
		mov	[esp+4], eax
		mov	eax, [ebp+var_50]
		mov	[ebp+var_A], 2Dh
		mov	dword ptr [esp+8], 1
		mov	[esp], eax
		call	ds:_ZNK7QString8endsWithERK5QCharN2Qt15CaseSensitivityE
		test	al, al
		jnz	short loc_6ED50200

loc_6ED501AF:				; CODE XREF: sub_6ED500A0+174j
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+4], offset asc_6EDA0241 ; "-->"
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		test	eax, eax
		jz	short loc_6ED501E0
		mov	edx, [eax]
		mov	[esp], eax
		call	dword ptr [edx+48h]
		test	al, al
		jnz	short loc_6ED501F3

loc_6ED501E0:				; CODE XREF: sub_6ED500A0+132j
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_Z4endlR11QTextStream

loc_6ED501F3:				; CODE XREF: sub_6ED500A0+13Ej
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED50200:				; CODE XREF: sub_6ED500A0+10Dj
		mov	edx, [ebp+arg_4]
		mov	dword ptr [esp+4], 20h
		mov	[esp], edx
		call	ds:_ZN11QTextStreamlsEc
		jmp	short loc_6ED501AF
sub_6ED500A0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED50216	proc near		; DATA XREF: sub_6ED500A0+20o
		add	ebp, 8
		mov	edx, [ebp-44h]
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	[ebp-54h], edx
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED50216	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  31. _ZN11QDomElement17removeAttributeNSERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN11QDomElement17removeAttributeNSERK7QStringS2_
_ZN11QDomElement17removeAttributeNSERK7QStringS2_ proc near

var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A210
		mov	[ebp+var_28], offset sub_6ED50310
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED502E0
		mov	edx, [ebp+arg_8]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		mov	[esp+4], edx
		mov	eax, [eax+38h]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED45F90
		test	eax, eax
		jz	short loc_6ED502E0
		mov	eax, [eax+1Ch]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	sub_6ED47260
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED502F0

loc_6ED502E0:				; CODE XREF: _ZN11QDomElement17removeAttributeNSERK7QStringS2_+36j
					; _ZN11QDomElement17removeAttributeNSERK7QStringS2_+5Aj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED502F0:				; CODE XREF: _ZN11QDomElement17removeAttributeNSERK7QStringS2_+8Ej
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN11QDomElement17removeAttributeNSERK7QStringS2_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED50310	proc near		; DATA XREF: _ZN11QDomElement17removeAttributeNSERK7QStringS2_+1Do
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	[ebp-50h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	edx, [ebp-50h]
		mov	[esp+0], edx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED50310	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED50340	proc near		; CODE XREF: sub_6ED504D0+3Fp
					; sub_6ED52370+F0p ...

var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5A		= word ptr -5Ah
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		mov	[ebp+var_64], eax
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_60], edx
		mov	[ebp+var_68], ecx
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A216
		mov	[ebp+var_28], offset sub_6ED5049A
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	eax, ds:dword_6EDA8004
		test	eax, eax
		jz	loc_6ED50415
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_C], eax
		mov	[ebp+var_50], eax
		lock inc dword ptr [eax]
		setnz	al
		mov	edx, [ebp+var_60]
		mov	eax, [edx]
		mov	ecx, [eax+8]
		test	ecx, ecx
		jle	loc_6ED50440
		mov	edx, ds:_ZN9QXmlUtils6isCharE5QChar
		mov	[ebp+var_58], 0
		mov	[ebp+var_54], edx
		jmp	short loc_6ED503DE
; ---------------------------------------------------------------------------
		align 10h

loc_6ED503C0:				; CODE XREF: sub_6ED50340+BCj
		cmp	ds:dword_6EDA8004, 2
		jz	loc_6ED50484

loc_6ED503CD:				; CODE XREF: sub_6ED50340+D3j
		mov	edx, [ebp+var_60]
		add	[ebp+var_58], 1
		mov	eax, [edx]
		mov	edx, [ebp+var_58]
		cmp	edx, [eax+8]
		jge	short loc_6ED50440

loc_6ED503DE:				; CODE XREF: sub_6ED50340+79j
		mov	eax, [eax+0Ch]
		mov	edx, [ebp+var_58]
		movzx	eax, word ptr [eax+edx*2]
		mov	[ebp+var_5A], ax
		mov	[esp], ax
		mov	[ebp+var_48], 1
		call	[ebp+var_54]
		test	al, al
		jz	short loc_6ED503C0
		movzx	eax, [ebp+var_5A]
		lea	edx, [ebp+var_C]
		mov	[esp], edx
		mov	[esp+4], ax
		call	ds:_ZN7QString6appendE5QChar
		jmp	short loc_6ED503CD
; ---------------------------------------------------------------------------

loc_6ED50415:				; CODE XREF: sub_6ED50340+42j
		mov	edx, [ebp+var_68]
		mov	byte ptr [edx],	1
		mov	edx, [ebp+var_60]
		mov	eax, [edx]
		mov	edx, [ebp+var_64]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED5042B:				; CODE XREF: sub_6ED50340+11Fj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_64]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED50440:				; CODE XREF: sub_6ED50340+63j
					; sub_6ED50340+9Cj
		mov	eax, [ebp+var_68]
		mov	edx, [ebp+var_64]
		mov	byte ptr [eax],	1
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED50454:				; CODE XREF: sub_6ED50340+158j
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5042B
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_64]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED50484:				; CODE XREF: sub_6ED50340+87j
		mov	eax, [ebp+var_68]
		mov	edx, [ebp+var_64]
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_50]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	al
		jmp	short loc_6ED50454
sub_6ED50340	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5049A	proc near		; DATA XREF: sub_6ED50340+29o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	[ebp-6Ch], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	edx, [ebp-6Ch]
		mov	[esp+0], edx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED5049A	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED504D0	proc near		; CODE XREF: _ZN12QDomDocument14createTextNodeERK7QString+49p
					; sub_6ED54280+74p

var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_9		= byte ptr -9
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A21C
		mov	[ebp+var_28], offset sub_6ED5059E
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_10]
		lea	ecx, [ebp+var_9]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED50340
		cmp	[ebp+var_9], 0
		jz	short loc_6ED50595
		mov	dword ptr [esp], 38h ; size_t
		mov	[ebp+var_48], 2
		call	sub_6ED988D0
		mov	[ebp+var_50], eax
		mov	edx, [ebp+var_50]
		mov	[ebp+var_54], eax
		lea	eax, [ebp+var_10]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_0]
		mov	dword ptr [esp+8], 0
		mov	[esp], edx
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		call	sub_6ED4CA50
		mov	edx, [ebp+var_50]
		lock dec dword ptr [edx+4]
		setnz	al

loc_6ED50565:				; CODE XREF: sub_6ED504D0+CCj
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED50585
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED50585:				; CODE XREF: sub_6ED504D0+A0j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_54]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED50595:				; CODE XREF: sub_6ED504D0+48j
		mov	[ebp+var_54], 0
		jmp	short loc_6ED50565
sub_6ED504D0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5059E	proc near		; DATA XREF: sub_6ED504D0+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-58h], eax
		jz	short loc_6ED505B8
		mov	edx, [ebp-50h]
		mov	[esp+0], edx
		call	sub_6ED988B0

loc_6ED505B8:				; CODE XREF: sub_6ED5059E+Dj
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED5059E	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  58. _ZN12QDomDocument14createTextNodeERK7QString

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QDomDocument14createTextNodeERK7QString
_ZN12QDomDocument14createTextNodeERK7QString proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A224
		mov	[ebp+var_18], offset sub_6ED5067F
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED50650

loc_6ED50618:				; CODE XREF: _ZN12QDomDocument14createTextNodeERK7QString+9Dj
		mov	edx, [ebp+arg_8]
		mov	[esp], eax
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_6ED504D0
		mov	edx, [ebp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short loc_6ED5063E
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED5063E:				; CODE XREF: _ZN12QDomDocument14createTextNodeERK7QString+55j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------

loc_6ED50650:				; CODE XREF: _ZN12QDomDocument14createTextNodeERK7QString+36j
		mov	dword ptr [esp], 44h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	sub_6ED4F660
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+arg_4]
		mov	[edx], eax
		jmp	short loc_6ED50618
_ZN12QDomDocument14createTextNodeERK7QString endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5067F	proc near		; DATA XREF: _ZN12QDomDocument14createTextNodeERK7QString+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-40h]
		mov	[ebp-44h], eax
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED5067F	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  19. _ZN11QDomElement12setAttributeERK7QStringd

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl ZN11QDomElement12setAttributeERK7QStringd(int, int, double)
		public _ZN11QDomElement12setAttributeERK7QStringd
_ZN11QDomElement12setAttributeERK7QStringd proc	near

var_158		= qword	ptr -158h
var_14C		= byte ptr -14Ch
var_148		= dword	ptr -148h
var_134		= dword	ptr -134h
var_130		= dword	ptr -130h
var_12C		= dword	ptr -12Ch
var_128		= dword	ptr -128h
var_124		= dword	ptr -124h
var_110		= byte ptr -110h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= qword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 188h
		lea	eax, [ebp+var_8]
		fld	[ebp+arg_8]
		mov	[ebp+var_12C], eax
		lea	eax, [ebp+var_14C]
		fstp	[ebp+var_158]
		mov	[ebp+var_134], offset sub_6ED997C0
		mov	[ebp+var_130], offset word_6ED9A22A
		mov	[ebp+var_128], offset sub_6ED50856
		mov	[ebp+var_124], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		jz	loc_6ED507CC
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		fld	[ebp+var_158]
		lea	eax, [ebp+var_110]
		fstp	qword ptr [esp+0Ch]
		mov	dword ptr [esp+8], offset a_16g	; "%.16g"
		mov	dword ptr [esp+4], 100h
		mov	[esp], eax
		mov	[ebp+var_148], 2
		call	ds:_Z9qsnprintfPcjPKcz
		test	eax, eax
		jle	loc_6ED50821
		lea	edx, [ebp+var_10]
		mov	[esp+8], eax
		lea	eax, [ebp+var_110]
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZN7QString10fromLatin1EPKci
		sub	esp, 4
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_148], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED50806

loc_6ED5079A:				; CODE XREF: _ZN11QDomElement12setAttributeERK7QStringd+16Cj
					; _ZN11QDomElement12setAttributeERK7QStringd+1A1j
		lea	eax, [ebp+var_C]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[esp], eax
		mov	[ebp+var_148], 2
		call	sub_6ED49E10
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED507E0

loc_6ED507CC:				; CODE XREF: _ZN11QDomElement12setAttributeERK7QStringd+54j
		lea	eax, [ebp+var_14C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED507E0:				; CODE XREF: _ZN11QDomElement12setAttributeERK7QStringd+11Aj
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_148], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_14C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED50806:				; CODE XREF: _ZN11QDomElement12setAttributeERK7QStringd+E8j
		mov	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_148], 2
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5079A
; ---------------------------------------------------------------------------

loc_6ED50821:				; CODE XREF: _ZN11QDomElement12setAttributeERK7QStringd+9Dj
		mov	dword ptr [esp+10h], 6
		lea	eax, [ebp+var_C]
		mov	dword ptr [esp+0Ch], 67h
		fld	[ebp+var_158]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		mov	[ebp+var_148], 2
		call	ds:_ZN7QString6setNumEdci
		jmp	loc_6ED5079A
_ZN11QDomElement12setAttributeERK7QStringd endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED50856	proc near		; DATA XREF: _ZN11QDomElement12setAttributeERK7QStringd+35o
		add	ebp, 8
		mov	eax, [ebp-144h]
		cmp	dword ptr [ebp-148h], 1
		mov	[ebp-15Ch], eax
		jz	short loc_6ED50883
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-148h], 0
		call	sub_6ED94560

loc_6ED50883:				; CODE XREF: sub_6ED50856+16j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-148h], 0
		call	sub_6ED94560
		mov	eax, [ebp-15Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-148h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED50856	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED508B0	proc near		; CODE XREF: sub_6ED50D50+84p
					; _ZN12QDomDocument10setContentEP15QXmlInputSourceP10QXmlReaderP7QStringPiS6_+65p ...

var_AD		= byte ptr -0ADh
var_AC		= dword	ptr -0ACh
var_A5		= byte ptr -0A5h
var_A4		= dword	ptr -0A4h
var_9D		= byte ptr -9Dh
var_9C		= dword	ptr -9Ch
var_95		= byte ptr -95h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= byte ptr -8Ch
var_88		= dword	ptr -88h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_4C		= byte ptr -4Ch
var_48		= byte ptr -48h
var_44		= byte ptr -44h
var_3C		= byte ptr -3Ch
var_38		= byte ptr -38h
var_30		= byte ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_6C], eax
		lea	eax, [ebp+var_8C]
		mov	[esp], eax
		mov	[ebp+var_74], offset sub_6ED997C0
		mov	[ebp+var_70], offset word_6ED9A232
		mov	[ebp+var_68], offset sub_6ED50C58
		mov	[ebp+var_64], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+28h]
		mov	[ebp+var_88], 0FFFFFFFFh
		call	eax
		mov	dword ptr [esp], 4 ; size_t
		call	sub_6ED988D0
		mov	dword ptr [eax], 0
		mov	ecx, [ebp+arg_0]
		cmp	eax, [ecx+38h]
		jz	short loc_6ED50934
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ecx+38h]
		mov	[ecx+38h], eax
		test	edx, edx
		jz	short loc_6ED50934
		lock dec dword ptr [edx]
		setnz	al
		test	al, al
		jz	loc_6ED50BA0

loc_6ED50934:				; CODE XREF: sub_6ED508B0+64j
					; sub_6ED508B0+74j ...
		mov	dword ptr [esp], 4Ch ; size_t
		mov	[ebp+var_88], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_88], 4
		mov	[ebp+var_90], eax
		mov	edx, [ebp+var_90]
		mov	[ebp+var_94], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], edx
		mov	[esp+8], eax
		mov	[esp+4], eax
		call	sub_6ED4E8B0
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+3Ch]
		cmp	[ebp+var_90], eax
		jz	short loc_6ED509CC
		mov	ecx, [ebp+var_90]
		test	ecx, ecx
		jz	short loc_6ED509A1
		mov	ecx, [ebp+var_90]
		lock inc dword ptr [ecx+4]
		setnz	al
		mov	eax, [edx+3Ch]

loc_6ED509A1:				; CODE XREF: sub_6ED508B0+DFj
		mov	ecx, [ebp+var_90]
		test	eax, eax
		mov	edx, [ebp+arg_0]
		mov	[edx+3Ch], ecx
		jz	short loc_6ED509C0
		lock dec dword ptr [eax+4]
		setnz	dl
		test	dl, dl
		jz	loc_6ED50B84

loc_6ED509C0:				; CODE XREF: sub_6ED508B0+FFj
					; sub_6ED508B0+2E8j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+3Ch]
		mov	[ebp+var_94], eax

loc_6ED509CC:				; CODE XREF: sub_6ED508B0+D5j
		mov	edx, [ebp+var_94]
		lock dec dword ptr [edx+4]
		setnz	al
		mov	ecx, [ebp+arg_8]
		mov	[ebp+var_9D], 0
		mov	[ebp+var_A5], 0
		mov	eax, [ecx]
		mov	eax, [eax+8]
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aHttpXml_orgSax	; "http://xml.org/sax/features/namespaces"
		mov	[ebp+var_88], 2
		mov	[ebp+var_A4], eax
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_C], eax
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_9D], 1
		mov	dword ptr [esp+8], 0
		mov	[esp], eax
		call	[ebp+var_A4]
		test	al, al
		mov	[ebp+var_9C], 0
		jnz	loc_6ED50BB0

loc_6ED50A4B:				; CODE XREF: sub_6ED508B0+36Bj
					; sub_6ED508B0+3A3j
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED50A6E
		mov	eax, [ebp+var_C]
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED50A6E:				; CODE XREF: sub_6ED508B0+1A6j
		mov	eax, [ebp+var_9C]
		lea	ecx, [ebp+var_4C]
		mov	edx, [ebp+arg_0]
		mov	[esp], ecx
		mov	[esp+8], eax
		mov	[esp+4], edx
		call	sub_6ED43CC0
		mov	edx, [ebp+arg_8]
		lea	ecx, [ebp+var_4C]
		mov	eax, [edx]
		mov	[esp+4], ecx
		mov	[esp], edx
		mov	eax, [eax+30h]
		mov	[ebp+var_88], 1
		call	eax
		mov	edx, [ebp+arg_8]
		mov	ecx, [ebp+arg_8]
		mov	eax, [edx]
		lea	edx, [ebp+var_48]
		mov	[esp+4], edx
		mov	[esp], ecx
		call	dword ptr [eax+38h]
		mov	edx, [ebp+arg_8]
		mov	ecx, [ebp+arg_8]
		mov	eax, [edx]
		lea	edx, [ebp+var_3C]
		mov	[esp+4], edx
		mov	[esp], ecx
		call	dword ptr [eax+40h]
		mov	edx, [ebp+arg_8]
		mov	ecx, [ebp+arg_8]
		mov	eax, [edx]
		lea	edx, [ebp+var_38]
		mov	[esp+4], edx
		mov	[esp], ecx
		call	dword ptr [eax+48h]
		mov	edx, [ebp+arg_8]
		mov	ecx, [ebp+arg_8]
		mov	eax, [edx]
		lea	edx, [ebp+var_44]
		mov	[esp+4], edx
		mov	[esp], ecx
		call	dword ptr [eax+28h]
		mov	edx, [ebp+arg_8]
		mov	ecx, [ebp+arg_8]
		mov	eax, [edx]
		mov	edx, [ebp+arg_4]
		mov	[esp], ecx
		mov	[esp+4], edx
		call	dword ptr [eax+54h]
		test	al, al
		jnz	loc_6ED50C20
		mov	edx, [ebp+arg_C]
		test	edx, edx
		jz	short loc_6ED50B33
		lea	eax, [ebp+var_30]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_C]
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_

loc_6ED50B33:				; CODE XREF: sub_6ED508B0+26Ej
		mov	eax, [ebp+arg_10]
		test	eax, eax
		jz	short loc_6ED50B42
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+arg_10]
		mov	[edx], eax

loc_6ED50B42:				; CODE XREF: sub_6ED508B0+288j
		mov	ecx, [ebp+arg_14]
		mov	[ebp+var_95], 0
		test	ecx, ecx
		jz	short loc_6ED50B58
		mov	eax, [ebp+var_28]
		mov	ecx, [ebp+arg_14]
		mov	[ecx], eax

loc_6ED50B58:				; CODE XREF: sub_6ED508B0+29Ej
					; sub_6ED508B0+377j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_88], 0FFFFFFFFh
		call	sub_6ED4BC70
		lea	eax, [ebp+var_8C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_95]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED50B84:				; CODE XREF: sub_6ED508B0+10Aj
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_88], 0FFFFFFFFh
		call	eax
		jmp	loc_6ED509C0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED50BA0:				; CODE XREF: sub_6ED508B0+7Ej
		mov	[esp], edx
		call	sub_6ED988B0
		jmp	loc_6ED50934
; ---------------------------------------------------------------------------
		align 10h

loc_6ED50BB0:				; CODE XREF: sub_6ED508B0+195j
		mov	edx, [ebp+arg_8]
		mov	eax, [edx]
		mov	eax, [eax+8]
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aHttpXml_orgS_0	; "http://xml.org/sax/features/namespace-p"...
		mov	[ebp+var_AC], eax
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	ecx, [ebp+arg_8]
		mov	[ebp+var_10], eax
		lea	eax, [ebp+var_10]
		mov	[ebp+var_A5], 1
		mov	dword ptr [esp+8], 0
		mov	[esp+4], eax
		mov	[esp], ecx
		call	[ebp+var_AC]
		test	al, al
		mov	eax, [ebp+var_10]
		setz	[ebp+var_AD]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED50C30
		movzx	ecx, [ebp+var_AD]
		mov	[ebp+var_9C], ecx
		jmp	loc_6ED50A4B
; ---------------------------------------------------------------------------

loc_6ED50C20:				; CODE XREF: sub_6ED508B0+263j
		mov	[ebp+var_95], 1
		jmp	loc_6ED50B58
; ---------------------------------------------------------------------------
		align 10h

loc_6ED50C30:				; CODE XREF: sub_6ED508B0+35Cj
		mov	eax, [ebp+var_10]
		mov	[ebp+var_88], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		movzx	ecx, [ebp+var_AD]
		mov	[ebp+var_9C], ecx
		jmp	loc_6ED50A4B
sub_6ED508B0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED50C58	proc near		; DATA XREF: sub_6ED508B0+26o
		add	ebp, 8
		mov	eax, [ebp-88h]
		mov	edx, [ebp-84h]
		cmp	eax, 1
		mov	[ebp-0BCh], edx
		jz	short loc_6ED50CAD
		cmp	eax, 2
		jz	short loc_6ED50CE3
		cmp	eax, 3
		jz	loc_6ED50D25
		lea	eax, [ebp-4Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_6ED4BC70
		mov	ecx, [ebp-0BCh]
		mov	dword ptr [ebp-88h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED50CAD:				; CODE XREF: sub_6ED50C58+18j
		mov	eax, [ebp-0BCh]
		cmp	byte ptr [ebp-0A5h], 0
		mov	[ebp-0B8h], eax
		jz	short loc_6ED50CD7
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_6ED94560

loc_6ED50CD7:				; CODE XREF: sub_6ED50C58+68j
		mov	edx, [ebp-0B8h]
		mov	[ebp-0BCh], edx

loc_6ED50CE3:				; CODE XREF: sub_6ED50C58+1Dj
		mov	eax, [ebp-0BCh]
		cmp	byte ptr [ebp-9Dh], 0
		mov	[ebp-0B4h], eax
		jz	short loc_6ED50D0D
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_6ED94560

loc_6ED50D0D:				; CODE XREF: sub_6ED50C58+9Ej
		mov	edx, [ebp-0B4h]
		mov	dword ptr [ebp-88h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED50D25:				; CODE XREF: sub_6ED50C58+22j
		mov	ecx, [ebp-90h]
		mov	[esp+0], ecx
		call	sub_6ED988B0
		mov	eax, [ebp-0BCh]
		mov	dword ptr [ebp-88h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED50C58	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED50D50	proc near		; CODE XREF: _ZN12QDomDocument10setContentEP9QIODevicebP7QStringPiS4_+8Bp
					; _ZN12QDomDocument10setContentERK10QByteArraybP7QStringPiS5_+BDp ...

var_4E		= byte ptr -4Eh
var_4D		= byte ptr -4Dh
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= byte ptr -10h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= byte ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		movzx	eax, [ebp+arg_8]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A23E
		mov	[ebp+var_28], offset sub_6ED50DFF
		mov	[ebp+var_4E], al
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	_ZN16QXmlSimpleReaderC1Ev
		movzx	edx, [ebp+var_4E]
		lea	eax, [ebp+var_10]
		mov	[ebp+var_48], 1
		call	sub_6ED4C4C0
		mov	eax, [ebp+arg_14]
		mov	[esp+14h], eax
		mov	eax, [ebp+arg_10]
		mov	[esp+10h], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+0Ch], eax
		lea	eax, [ebp+var_10]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED508B0
		mov	[ebp+var_4D], al
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	_ZN16QXmlSimpleReaderD1Ev
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_4D]
		leave
		retn
sub_6ED50D50	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED50DFF	proc near		; DATA XREF: sub_6ED50D50+18o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-54h], eax
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		call	_ZN16QXmlSimpleReaderD1Ev
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED50DFF	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  50. _ZN12QDomDocument10setContentEP9QIODevicebP7QStringPiS4_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QDomDocument10setContentEP9QIODevicebP7QStringPiS4_
_ZN12QDomDocument10setContentEP9QIODevicebP7QStringPiS4_ proc near
					; CODE XREF: _ZN12QDomDocument10setContentEP9QIODeviceP7QStringPiS4_+32p

var_54		= dword	ptr -54h
var_4E		= byte ptr -4Eh
var_4D		= byte ptr -4Dh
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= byte ptr -10h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= byte ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		movzx	eax, [ebp+arg_8]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A244
		mov	[ebp+var_2C], edx
		mov	[ebp+var_4E], al
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_28], offset sub_6ED50F18
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED50EE6

loc_6ED50E6F:				; CODE XREF: _ZN12QDomDocument10setContentEP9QIODevicebP7QStringPiS4_+E3j
		mov	eax, [ebp+arg_4]
		lea	edx, [ebp+var_10]
		mov	[esp], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	_ZN15QXmlInputSourceC1EP9QIODevice
		mov	eax, [ebp+arg_14]
		mov	edx, [ebp+arg_0]
		mov	[esp+14h], eax
		mov	eax, [ebp+arg_10]
		mov	[esp+10h], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+0Ch], eax
		movzx	eax, [ebp+var_4E]
		mov	[esp+8], eax
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	eax, [edx]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	sub_6ED50D50
		mov	[ebp+var_4D], al
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	_ZN15QXmlInputSourceD1Ev
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_4D]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED50EE6:				; CODE XREF: _ZN12QDomDocument10setContentEP9QIODevicebP7QStringPiS4_+3Dj
		mov	dword ptr [esp], 44h ; size_t
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_48], 2
		mov	[ebp+var_54], eax
		mov	[esp], eax
		call	sub_6ED4F660
		mov	eax, [ebp+var_54]
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		jmp	loc_6ED50E6F
_ZN12QDomDocument10setContentEP9QIODevicebP7QStringPiS4_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED50F18	proc near		; DATA XREF: _ZN12QDomDocument10setContentEP9QIODevicebP7QStringPiS4_+27o
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-58h], eax
		jz	short loc_6ED50F4B
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	_ZN15QXmlInputSourceD1Ev
		mov	edx, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED50F4B:				; CODE XREF: sub_6ED50F18+Dj
		mov	edx, [ebp-54h]
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	eax, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED50F18	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  49. _ZN12QDomDocument10setContentEP9QIODeviceP7QStringPiS4_

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QDomDocument10setContentEP9QIODeviceP7QStringPiS4_
_ZN12QDomDocument10setContentEP9QIODeviceP7QStringPiS4_	proc near

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		sub	esp, 2Ch
		mov	eax, [esp+2Ch+arg_10]
		mov	[esp+2Ch+var_24], 0
		mov	[esp+2Ch+var_18], eax
		mov	eax, [esp+2Ch+arg_C]
		mov	[esp+2Ch+var_1C], eax
		mov	eax, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_20], eax
		mov	eax, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_28], eax
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], eax
		call	_ZN12QDomDocument10setContentEP9QIODevicebP7QStringPiS4_
		add	esp, 2Ch
		retn
_ZN12QDomDocument10setContentEP9QIODeviceP7QStringPiS4_	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  52. _ZN12QDomDocument10setContentERK10QByteArraybP7QStringPiS5_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QDomDocument10setContentERK10QByteArraybP7QStringPiS5_
_ZN12QDomDocument10setContentERK10QByteArraybP7QStringPiS5_ proc near
					; CODE XREF: _ZN12QDomDocument10setContentERK10QByteArrayP7QStringPiS5_+32p

var_54		= dword	ptr -54h
var_4E		= byte ptr -4Eh
var_4D		= byte ptr -4Dh
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
var_10		= byte ptr -10h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= byte ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		movzx	eax, [ebp+arg_8]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_2C], edx
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A24C
		mov	[ebp+var_4E], al
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_28], offset sub_6ED510E2
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	edx, [eax]
		test	edx, edx
		jz	loc_6ED510B0

loc_6ED50FF3:				; CODE XREF: _ZN12QDomDocument10setContentERK10QByteArraybP7QStringPiS5_+12Dj
		lea	edx, [ebp+var_10]
		mov	dword ptr [esp+4], 0
		mov	[esp], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QBufferC1EP7QObject
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_48], 2
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	ds:_ZN7QBuffer7setDataERK10QByteArray
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		call	_ZN15QXmlInputSourceC1EP9QIODevice
		mov	eax, [ebp+arg_14]
		mov	edx, [ebp+arg_0]
		mov	[esp+14h], eax
		mov	eax, [ebp+arg_10]
		mov	[esp+10h], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+0Ch], eax
		movzx	eax, [ebp+var_4E]
		mov	[esp+8], eax
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		mov	eax, [edx]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	sub_6ED50D50
		mov	[ebp+var_4D], al
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	_ZN15QXmlInputSourceD1Ev
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QBufferD1Ev
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_4D]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED510B0:				; CODE XREF: _ZN12QDomDocument10setContentERK10QByteArraybP7QStringPiS5_+3Dj
		mov	dword ptr [esp], 44h ; size_t
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_48], 3
		mov	[ebp+var_54], eax
		mov	[esp], eax
		call	sub_6ED4F660
		mov	eax, [ebp+var_54]
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		jmp	loc_6ED50FF3
_ZN12QDomDocument10setContentERK10QByteArraybP7QStringPiS5_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED510E2	proc near		; DATA XREF: _ZN12QDomDocument10setContentERK10QByteArraybP7QStringPiS5_+27o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-58h], edx
		jz	short loc_6ED5110A
		cmp	eax, 2
		jz	short loc_6ED5112F
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	_ZN15QXmlInputSourceD1Ev

loc_6ED5110A:				; CODE XREF: sub_6ED510E2+Fj
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN7QBufferD1Ev
		mov	eax, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED5112F:				; CODE XREF: sub_6ED510E2+14j
		mov	edx, [ebp-54h]
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	eax, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED510E2	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  51. _ZN12QDomDocument10setContentERK10QByteArrayP7QStringPiS5_

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QDomDocument10setContentERK10QByteArrayP7QStringPiS5_
_ZN12QDomDocument10setContentERK10QByteArrayP7QStringPiS5_ proc	near

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		sub	esp, 2Ch
		mov	eax, [esp+2Ch+arg_10]
		mov	[esp+2Ch+var_24], 0
		mov	[esp+2Ch+var_18], eax
		mov	eax, [esp+2Ch+arg_C]
		mov	[esp+2Ch+var_1C], eax
		mov	eax, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_20], eax
		mov	eax, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_28], eax
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], eax
		call	_ZN12QDomDocument10setContentERK10QByteArraybP7QStringPiS5_
		add	esp, 2Ch
		retn
_ZN12QDomDocument10setContentERK10QByteArrayP7QStringPiS5_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  54. _ZN12QDomDocument10setContentERK7QStringbPS0_PiS4_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QDomDocument10setContentERK7QStringbPS0_PiS4_
_ZN12QDomDocument10setContentERK7QStringbPS0_PiS4_ proc	near
					; CODE XREF: _ZN12QDomDocument10setContentERK7QStringPS0_PiS4_+32p

var_54		= dword	ptr -54h
var_4E		= byte ptr -4Eh
var_4D		= byte ptr -4Dh
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= byte ptr -10h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= byte ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		movzx	eax, [ebp+arg_8]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A256
		mov	[ebp+var_2C], edx
		mov	[ebp+var_4E], al
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_28], offset sub_6ED51287
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		test	ecx, ecx
		jz	loc_6ED51255

loc_6ED511D3:				; CODE XREF: _ZN12QDomDocument10setContentERK7QStringbPS0_PiS4_+F2j
		lea	edx, [ebp+var_10]
		mov	[esp], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	_ZN15QXmlInputSourceC1Ev
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	_ZN15QXmlInputSource7setDataERK7QString
		mov	eax, [ebp+arg_14]
		mov	edx, [ebp+arg_0]
		mov	[esp+14h], eax
		mov	eax, [ebp+arg_10]
		mov	[esp+10h], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+0Ch], eax
		movzx	eax, [ebp+var_4E]
		mov	[esp+8], eax
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	eax, [edx]
		mov	[esp], eax
		call	sub_6ED50D50
		mov	[ebp+var_4D], al
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	_ZN15QXmlInputSourceD1Ev
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_4D]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED51255:				; CODE XREF: _ZN12QDomDocument10setContentERK7QStringbPS0_PiS4_+3Dj
		mov	dword ptr [esp], 44h ; size_t
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_48], 2
		mov	[ebp+var_54], eax
		mov	[esp], eax
		call	sub_6ED4F660
		mov	eax, [ebp+var_54]
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		jmp	loc_6ED511D3
_ZN12QDomDocument10setContentERK7QStringbPS0_PiS4_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED51287	proc near		; DATA XREF: _ZN12QDomDocument10setContentERK7QStringbPS0_PiS4_+27o
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-58h], eax
		jz	short loc_6ED512BA
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	_ZN15QXmlInputSourceD1Ev
		mov	edx, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED512BA:				; CODE XREF: sub_6ED51287+Dj
		mov	edx, [ebp-54h]
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	eax, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED51287	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  53. _ZN12QDomDocument10setContentERK7QStringPS0_PiS4_

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QDomDocument10setContentERK7QStringPS0_PiS4_
_ZN12QDomDocument10setContentERK7QStringPS0_PiS4_ proc near

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		sub	esp, 2Ch
		mov	eax, [esp+2Ch+arg_10]
		mov	[esp+2Ch+var_24], 0
		mov	[esp+2Ch+var_18], eax
		mov	eax, [esp+2Ch+arg_C]
		mov	[esp+2Ch+var_1C], eax
		mov	eax, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_20], eax
		mov	eax, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_28], eax
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], eax
		call	_ZN12QDomDocument10setContentERK7QStringbPS0_PiS4_
		add	esp, 2Ch
		retn
_ZN12QDomDocument10setContentERK7QStringPS0_PiS4_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  47. _ZN12QDomDocument10setContentEP15QXmlInputSourceP10QXmlReaderP7QStringPiS6_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QDomDocument10setContentEP15QXmlInputSourceP10QXmlReaderP7QStringPiS6_
_ZN12QDomDocument10setContentEP15QXmlInputSourceP10QXmlReaderP7QStringPiS6_ proc near

var_44		= dword	ptr -44h
var_3D		= byte ptr -3Dh
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A25E
		mov	[ebp+var_18], offset sub_6ED513CF
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED513A0

loc_6ED51358:				; CODE XREF: _ZN12QDomDocument10setContentEP15QXmlInputSourceP10QXmlReaderP7QStringPiS6_+ADj
		mov	edx, [ebp+arg_14]
		mov	[esp], eax
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+14h], edx
		mov	edx, [ebp+arg_10]
		mov	[esp+10h], edx
		mov	edx, [ebp+arg_C]
		mov	[esp+0Ch], edx
		mov	edx, [ebp+arg_8]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		mov	[esp+4], edx
		call	sub_6ED508B0
		mov	[ebp+var_3D], al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_3D]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED513A0:				; CODE XREF: _ZN12QDomDocument10setContentEP15QXmlInputSourceP10QXmlReaderP7QStringPiS6_+36j
		mov	dword ptr [esp], 44h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_38], 1
		mov	[ebp+var_44], eax
		mov	[esp], eax
		call	sub_6ED4F660
		mov	eax, [ebp+var_44]
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		jmp	short loc_6ED51358
_ZN12QDomDocument10setContentEP15QXmlInputSourceP10QXmlReaderP7QStringPiS6_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED513CF	proc near		; DATA XREF: _ZN12QDomDocument10setContentEP15QXmlInputSourceP10QXmlReaderP7QStringPiS6_+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-44h]
		mov	[ebp-48h], eax
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	eax, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED513CF	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  48. _ZN12QDomDocument10setContentEP15QXmlInputSourcebP7QStringPiS4_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QDomDocument10setContentEP15QXmlInputSourcebP7QStringPiS4_
_ZN12QDomDocument10setContentEP15QXmlInputSourcebP7QStringPiS4_	proc near

var_54		= dword	ptr -54h
var_4E		= byte ptr -4Eh
var_4D		= byte ptr -4Dh
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= byte ptr -10h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= byte ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		movzx	eax, [ebp+arg_8]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A264
		mov	[ebp+var_2C], edx
		mov	[ebp+var_4E], al
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_28], offset sub_6ED514F2
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	loc_6ED514C0

loc_6ED51443:				; CODE XREF: _ZN12QDomDocument10setContentEP15QXmlInputSourcebP7QStringPiS4_+EDj
		lea	edx, [ebp+var_10]
		mov	[esp], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	_ZN16QXmlSimpleReaderC1Ev
		movzx	edx, [ebp+var_4E]
		lea	eax, [ebp+var_10]
		mov	[ebp+var_48], 1
		call	sub_6ED4C4C0
		mov	eax, [ebp+arg_14]
		mov	edx, [ebp+arg_0]
		mov	[esp+14h], eax
		mov	eax, [ebp+arg_10]
		mov	[esp+10h], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+0Ch], eax
		lea	eax, [ebp+var_10]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	eax, [edx]
		mov	[esp], eax
		call	sub_6ED508B0
		mov	[ebp+var_4D], al
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	_ZN16QXmlSimpleReaderD1Ev
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_4D]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED514C0:				; CODE XREF: _ZN12QDomDocument10setContentEP15QXmlInputSourcebP7QStringPiS4_+3Dj
		mov	dword ptr [esp], 44h ; size_t
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_48], 2
		mov	[ebp+var_54], eax
		mov	[esp], eax
		call	sub_6ED4F660
		mov	eax, [ebp+var_54]
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		jmp	loc_6ED51443
_ZN12QDomDocument10setContentEP15QXmlInputSourcebP7QStringPiS4_	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED514F2	proc near		; DATA XREF: _ZN12QDomDocument10setContentEP15QXmlInputSourcebP7QStringPiS4_+27o
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-58h], eax
		jz	short loc_6ED51525
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	_ZN16QXmlSimpleReaderD1Ev
		mov	edx, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED51525:				; CODE XREF: sub_6ED514F2+Dj
		mov	edx, [ebp-54h]
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	eax, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED514F2	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED51550	proc near		; DATA XREF: .rdata:6EDA71ACo

var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_D0		= dword	ptr -0D0h
var_CC		= dword	ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= byte ptr -9Ch
var_98		= dword	ptr -98h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1A		= byte ptr -1Ah
var_19		= byte ptr -19h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 0FCh
		mov	[ebp+var_7C], eax
		lea	eax, [ebp+var_9C]
		mov	[esp], eax
		mov	[ebp+var_84], offset sub_6ED997C0
		mov	[ebp+var_80], offset dword_6ED9A26C
		mov	[ebp+var_78], offset sub_6ED5219E
		mov	[ebp+var_74], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		test	eax, eax
		jz	short loc_6ED515AD
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+48h]
		mov	[ebp+var_98], 0FFFFFFFFh
		call	eax
		test	al, al
		jnz	short loc_6ED5161E

loc_6ED515AD:				; CODE XREF: sub_6ED51550+43j
		mov	edx, [ebp+arg_C]
		xor	eax, eax
		test	edx, edx
		jle	short loc_6ED515BD
		mov	eax, [ebp+arg_C]
		imul	eax, [ebp+arg_8]

loc_6ED515BD:				; CODE XREF: sub_6ED51550+64j
		lea	ecx, [ebp+var_20]
		mov	[esp+4], eax
		lea	edi, [ebp+var_20]
		mov	word ptr [esp+8], 20h
		mov	[esp], ecx
		mov	[ebp+var_98], 0FFFFFFFFh
		call	ds:_ZN7QStringC1Ei5QChar
		mov	eax, [ebp+arg_4]
		mov	[esp+4], edi
		mov	[ebp+var_98], 0Eh
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5161E
		mov	eax, [ebp+var_20]
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED5161E:				; CODE XREF: sub_6ED51550+5Bj
					; sub_6ED51550+B6j
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+1Ch]
		mov	[ebp+var_24], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	byte_6EDA00BB
		mov	[ebp+var_98], 0Dh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_28], eax
		mov	eax, [ebp+arg_0]
		mov	edi, ds:_ZN7QString11shared_nullE
		cmp	[eax+28h], edi
		mov	[ebp+var_A0], edi
		jz	loc_6ED5193B
		mov	eax, [eax+24h]
		mov	eax, [eax+8]
		test	eax, eax
		jz	loc_6ED51850
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_19], 3Ah
		mov	dword ptr [esp+8], 0
		mov	eax, [ecx+24h]
		mov	edx, [ecx+1Ch]
		mov	eax, [eax+8]
		add	eax, [edx+8]
		mov	[ebp+var_98], 0Ch
		add	eax, 1
		mov	[esp+4], eax
		lea	eax, [ebp+var_2C]
		mov	[esp], eax
		call	ds:_ZN7QStringC1EiN2Qt14InitializationE
		mov	eax, [ebp+var_2C]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED52185

loc_6ED516BB:				; CODE XREF: sub_6ED51550+C43j
		lea	eax, [ebp+var_2C]
		mov	[esp], eax
		mov	[ebp+var_98], 2
		call	ds:_ZN7QString7reallocEv
		mov	eax, [ebp+var_2C]
		mov	eax, [eax+0Ch]
		mov	[ebp+var_D0], eax

loc_6ED516DD:				; CODE XREF: sub_6ED51550+C49j
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_D0]
		mov	eax, [edx+24h]
		mov	edx, [eax+8]
		mov	eax, [eax+0Ch]
		mov	[esp], ecx	; void *
		add	edx, edx
		mov	[ebp+var_D4], edx
		mov	[esp+8], edx	; size_t
		mov	[esp+4], eax	; void *
		call	memcpy
		movzx	eax, [ebp+var_19]
		mov	edx, [ebp+var_D0]
		mov	edi, [ebp+arg_0]
		add	edx, [ebp+var_D4]
		mov	[edx], ax
		mov	eax, [edi+1Ch]
		add	edx, 2
		mov	ecx, [eax+8]
		mov	eax, [eax+0Ch]
		mov	[esp], edx	; void *
		add	ecx, ecx
		mov	[esp+8], ecx	; size_t
		mov	[esp+4], eax	; void *
		call	memcpy
		lea	eax, [ebp+var_2C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		mov	[ebp+var_98], 0Bh
		call	ds:_ZN7QStringaSERKS_
		mov	edx, [ebp+var_2C]
		lock dec dword ptr [edx]
		setnz	al
		test	al, al
		mov	[ebp+var_D8], offset aXmlns ; "	xmlns:"
		jz	loc_6ED52126

loc_6ED51773:				; CODE XREF: sub_6ED51550+BF6j
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+8], 0
		mov	eax, [edx+24h]
		mov	eax, [eax+8]
		mov	[ebp+var_98], 0Ch
		add	eax, 7
		mov	[esp+4], eax
		lea	eax, [ebp+var_30]
		mov	[esp], eax
		call	ds:_ZN7QStringC1EiN2Qt14InitializationE
		mov	edx, [ebp+var_30]
		mov	eax, [edx]
		cmp	eax, 1
		jz	loc_6ED5216E

loc_6ED517AF:				; CODE XREF: sub_6ED51550+C26j
		lea	eax, [ebp+var_30]
		mov	[esp], eax
		mov	[ebp+var_98], 1
		call	ds:_ZN7QString7reallocEv
		mov	eax, [ebp+var_30]
		mov	eax, [eax+0Ch]

loc_6ED517CB:				; CODE XREF: sub_6ED51550+C30j
		mov	ecx, [ebp+var_D8]
		movzx	edx, byte ptr [ecx]
		test	dl, dl
		jz	short loc_6ED517EB

loc_6ED517D8:				; CODE XREF: sub_6ED51550+299j
		add	ecx, 1
		movzx	edx, dl
		mov	[eax], dx
		movzx	edx, byte ptr [ecx]
		add	eax, 2
		test	dl, dl
		jnz	short loc_6ED517D8

loc_6ED517EB:				; CODE XREF: sub_6ED51550+286j
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+24h]
		mov	ecx, [edx+8]
		mov	edx, [edx+0Ch]
		mov	[esp], eax	; void *
		add	ecx, ecx
		mov	[esp+8], ecx	; size_t
		mov	[esp+4], edx	; void *
		call	memcpy
		lea	eax, [ebp+var_30]
		mov	[esp+4], eax
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_98], 0Ah
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_30]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED518A7
		mov	eax, [ebp+var_30]
		mov	[ebp+var_98], 0Ch
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED518A7
; ---------------------------------------------------------------------------
		align 10h

loc_6ED51850:				; CODE XREF: sub_6ED51550+11Fj
		lea	eax, [ebp+var_54]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aXmlns_0 ; " xmlns"
		mov	[esp], eax
		mov	[ebp+var_98], 0Ch
		call	ds:_ZN7QString10fromLatin1EPKci
		sub	esp, 4
		lea	eax, [ebp+var_54]
		mov	[esp+4], eax
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_98], 3
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_54]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5210B

loc_6ED518A7:				; CODE XREF: sub_6ED51550+2E1j
					; sub_6ED51550+2F9j ...
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_38]
		mov	ecx, [ebp+arg_4]
		mov	[ebp+var_1A], 22h
		mov	dword ptr [esp+8], 0
		add	edx, 28h
		mov	dword ptr [esp+4], 0
		mov	dword ptr [esp], 1
		mov	[ebp+var_98], 0Ch
		call	sub_6ED480B0
		lea	eax, [ebp+var_38]
		mov	[ebp+var_58], eax
		lea	eax, [ebp+var_34]
		mov	[ebp+var_5C], eax
		lea	eax, [ebp+var_1A]
		mov	[ebp+var_60], eax
		lea	eax, [ebp+var_5C]
		mov	[ebp+var_64], eax
		lea	eax, [ebp+var_64]
		mov	[esp+4], eax
		lea	eax, [ebp+var_28]
		mov	[ebp+var_34], offset asc_6EDA025A ; "=\""
		mov	[esp], eax
		mov	[ebp+var_98], 9
		call	sub_6ED989A0
		mov	eax, [ebp+var_38]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5193B
		mov	eax, [ebp+var_38]
		mov	[ebp+var_98], 0Ch
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED5193B:				; CODE XREF: sub_6ED51550+111j
					; sub_6ED51550+3D3j
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+4], 3Ch
		mov	[ebp+var_98], 0Ch
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEc
		lea	edx, [ebp+var_24]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_28]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, ds:_ZN9QHashData11shared_nullE
		mov	[ebp+var_3C], eax
		lock inc dword ptr [eax+8]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+38h]
		mov	esi, [eax+4]
		mov	edi, [esi+0Ch]
		test	edi, edi
		jz	loc_6ED51BB0
		mov	ecx, [esi+18h]
		mov	ebx, esi
		mov	edx, [esi+4]
		test	ecx, ecx
		jz	short loc_6ED519D4
		mov	edi, [edx]
		cmp	esi, edi
		mov	[ebp+var_A4], edi
		jnz	short loc_6ED519DA
		sub	ecx, 1
		jmp	short loc_6ED519D0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED519C0:				; CODE XREF: sub_6ED51550+482j
		add	edx, 4
		sub	ecx, 1
		mov	edi, [edx]
		cmp	ebx, edi
		jnz	loc_6ED52100

loc_6ED519D0:				; CODE XREF: sub_6ED51550+467j
		test	ecx, ecx
		jnz	short loc_6ED519C0

loc_6ED519D4:				; CODE XREF: sub_6ED51550+456j
		mov	[ebp+var_A4], esi

loc_6ED519DA:				; CODE XREF: sub_6ED51550+462j
					; sub_6ED51550+BB6j
		mov	ecx, ds:_ZN11QTextStreamlsEc
		mov	edi, ds:_ZN11QTextStreamlsERK7QString
		mov	[ebp+var_B0], ecx
		mov	[ebp+var_B4], edi
		jmp	loc_6ED51A85
; ---------------------------------------------------------------------------

loc_6ED519F7:				; CODE XREF: sub_6ED51550+63Fj
					; sub_6ED51550+65Bj
		mov	ecx, [ebp+var_A8]
		mov	eax, [ecx+0Ch]
		mov	edx, [eax+10h]
		test	edx, edx
		jz	short loc_6ED51A31
		add	eax, 24h
		add	edx, 24h
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_98], 8
		call	ds:_ZNK7QStringeqERKS_
		test	al, al
		jnz	short loc_6ED51A60
		mov	edi, [ebp+var_A8]
		mov	eax, [edi+0Ch]

loc_6ED51A31:				; CODE XREF: sub_6ED51550+4B5j
		add	eax, 24h
		mov	[esp+4], eax
		lea	eax, [ebp+var_3C]
		mov	dword ptr [esp+8], 0
		mov	[esp], eax
		mov	[ebp+var_98], 8
		call	sub_6ED98290
		mov	eax, [eax]
		cmp	eax, [ebp+var_3C]
		jz	loc_6ED51E70

loc_6ED51A60:				; CODE XREF: sub_6ED51550+4D6j
					; sub_6ED51550+8F8j ...
		mov	edi, [ebp+var_A4]
		mov	[ebp+var_98], 8
		mov	[esp], edi
		call	ds:_ZN9QHashData8nextNodeEPNS_4NodeE
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_A4], eax
		mov	eax, [edx+38h]

loc_6ED51A85:				; CODE XREF: sub_6ED51550+4A2j
		mov	edx, [ebp+var_A4]
		cmp	edx, [eax+4]
		jz	loc_6ED51BB0
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+4], 20h
		mov	[ebp+var_98], 8
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEc
		mov	edx, [ebp+var_A4]
		mov	edi, [ebp+var_A0]
		mov	[ebp+var_A8], edx
		mov	edx, [edx+0Ch]
		cmp	edi, [edx+28h]
		jz	loc_6ED51DC0
		mov	ecx, [ebp+arg_4]
		add	edx, 20h
		lea	eax, [ebp+var_44]
		mov	dword ptr [esp+8], 0
		mov	dword ptr [esp+4], 1
		mov	dword ptr [esp], 1
		mov	[ebp+var_98], 8
		call	sub_6ED480B0
		mov	edi, [ebp+var_A8]
		mov	ecx, [ebp+arg_4]
		mov	eax, [edi+0Ch]
		mov	[esp], ecx
		mov	[ebp+var_98], 6
		lea	edx, [eax+1Ch]
		add	eax, 24h
		mov	[ebp+var_AC], edx
		mov	[esp+4], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	dword ptr [esp+4], 3Ah
		mov	[esp], eax
		call	[ebp+var_B0]
		mov	edi, [ebp+var_AC]
		mov	[esp], eax
		mov	[esp+4], edi
		call	[ebp+var_B4]
		mov	dword ptr [esp+4], offset asc_6EDA025A ; "=\""
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		lea	edx, [ebp+var_44]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	dword ptr [esp+4], 22h
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEc
		mov	eax, [ebp+var_44]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED519F7
		mov	eax, [ebp+var_44]
		mov	[ebp+var_98], 8
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED519F7
; ---------------------------------------------------------------------------

loc_6ED51BB0:				; CODE XREF: sub_6ED51550+446j
					; sub_6ED51550+53Ej
		mov	ecx, [ebp+arg_0]
		mov	ebx, [ecx+18h]
		test	ebx, ebx
		jz	loc_6ED5214B
		mov	eax, [ecx+14h]
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+48h]
		mov	[ebp+var_98], 8
		call	eax
		test	al, al
		jnz	loc_6ED51DA0
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+4], 3Eh
		mov	[ebp+var_98], 8
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEc
		cmp	[ebp+arg_C], 0FFFFFFFFh
		jz	short loc_6ED51C0D
		mov	edx, [ebp+arg_4]
		mov	[esp], edx
		call	ds:_Z4endlR11QTextStream

loc_6ED51C0D:				; CODE XREF: sub_6ED51550+6AFj
					; sub_6ED51550+864j
		mov	eax, [ebp+arg_8]
		mov	ecx, [ebp+arg_C]
		mov	edi, [ebp+arg_4]
		mov	[ebp+var_98], 8
		add	eax, 1
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+0Ch], ecx
		mov	[esp+4], edi
		mov	[esp], eax
		call	sub_6ED41BA0
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+18h]
		mov	edx, [eax]
		mov	[esp], eax
		call	dword ptr [edx+48h]
		test	al, al
		jnz	short loc_6ED51CAB
		mov	edx, [ebp+arg_C]
		xor	eax, eax
		test	edx, edx
		jle	short loc_6ED51C5C
		mov	eax, [ebp+arg_C]
		imul	eax, [ebp+arg_8]

loc_6ED51C5C:				; CODE XREF: sub_6ED51550+703j
		mov	[esp+4], eax
		lea	eax, [ebp+var_4C]
		mov	word ptr [esp+8], 20h
		mov	[esp], eax
		mov	[ebp+var_98], 8
		call	ds:_ZN7QStringC1Ei5QChar
		mov	ecx, [ebp+arg_4]
		lea	eax, [ebp+var_4C]
		mov	[esp+4], eax
		mov	[ebp+var_98], 4
		mov	[esp], ecx
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_4C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED520E5

loc_6ED51CAB:				; CODE XREF: sub_6ED51550+6FAj
					; sub_6ED51550+BABj
		mov	edi, [ebp+arg_4]
		mov	dword ptr [esp+4], offset asc_6EDA025D ; "</"
		mov	[ebp+var_98], 8
		mov	[esp], edi
		call	ds:_ZN11QTextStreamlsEPKc
		lea	edx, [ebp+var_24]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	dword ptr [esp+4], 3Eh
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEc

loc_6ED51CEA:				; CODE XREF: sub_6ED51550+C19j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		test	eax, eax
		jz	short loc_6ED51D0C
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+48h]
		mov	[ebp+var_98], 8
		call	eax
		test	al, al
		jnz	short loc_6ED51D28

loc_6ED51D0C:				; CODE XREF: sub_6ED51550+7A2j
		cmp	[ebp+arg_C], 0FFFFFFFFh
		jz	short loc_6ED51D28
		mov	ecx, [ebp+arg_4]
		mov	[ebp+var_98], 8
		mov	[esp], ecx
		call	ds:_Z4endlR11QTextStream

loc_6ED51D28:				; CODE XREF: sub_6ED51550+7BAj
					; sub_6ED51550+7C0j
		mov	eax, [ebp+var_3C]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED51D54
		mov	eax, [ebp+var_3C]
		mov	dword ptr [esp+4], offset sub_6ED928B0
		mov	[ebp+var_98], 0Ch
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_6ED51D54:				; CODE XREF: sub_6ED51550+7E4j
		mov	eax, [ebp+var_28]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED52080

loc_6ED51D65:				; CODE XREF: sub_6ED51550+B46j
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED51D88
		mov	eax, [ebp+var_24]
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED51D88:				; CODE XREF: sub_6ED51550+820j
		lea	eax, [ebp+var_9C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED51DA0:				; CODE XREF: sub_6ED51550+687j
		mov	edi, [ebp+arg_4]
		mov	dword ptr [esp+4], 3Eh
		mov	[esp], edi
		call	ds:_ZN11QTextStreamlsEc
		jmp	loc_6ED51C0D
; ---------------------------------------------------------------------------
		align 10h

loc_6ED51DC0:				; CODE XREF: sub_6ED51550+57Aj
		mov	ecx, [ebp+arg_4]
		lea	eax, [ebp+var_40]
		add	edx, 20h
		mov	dword ptr [esp+8], 0
		mov	dword ptr [esp+4], 1
		mov	dword ptr [esp], 1
		call	sub_6ED480B0
		mov	edx, [ebp+var_A8]
		mov	ecx, [ebp+arg_4]
		mov	eax, [edx+0Ch]
		mov	[esp], ecx
		mov	[ebp+var_98], 7
		add	eax, 1Ch
		mov	[esp+4], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	dword ptr [esp+4], offset asc_6EDA025A ; "=\""
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		lea	edx, [ebp+var_40]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	dword ptr [esp+4], 22h
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEc
		mov	eax, [ebp+var_40]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED51A60
		mov	eax, [ebp+var_40]
		mov	[ebp+var_98], 8
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED51A60
; ---------------------------------------------------------------------------
		align 10h

loc_6ED51E70:				; CODE XREF: sub_6ED51550+50Aj
		mov	ecx, [ebp+var_A8]
		lea	eax, [ebp+var_48]
		mov	edx, [ecx+0Ch]
		mov	ecx, [ebp+arg_4]
		mov	dword ptr [esp+8], 0
		mov	dword ptr [esp+4], 1
		add	edx, 28h
		mov	dword ptr [esp], 1
		call	sub_6ED480B0
		mov	edi, [ebp+var_A8]
		mov	eax, [edi+0Ch]
		mov	dword ptr [esp+4], offset aXmlns ; " xmlns:"
		mov	[ebp+var_98], 5
		add	eax, 24h
		mov	[ebp+var_C4], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		mov	edx, [ebp+var_C4]
		mov	[esp], eax
		mov	[esp+4], edx
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	dword ptr [esp+4], offset asc_6EDA025A ; "=\""
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		lea	edx, [ebp+var_48]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	dword ptr [esp+4], 22h
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEc
		mov	eax, [ebp+var_48]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED52048

loc_6ED51F24:				; CODE XREF: sub_6ED51550+B0Ej
		mov	ecx, [ebp+var_A8]
		mov	eax, [ebp+var_3C]
		mov	ecx, [ecx+0Ch]
		mov	[ebp+var_BC], ecx
		mov	edx, [eax+8]
		cmp	edx, 1
		jz	short loc_6ED51F92
		mov	dword ptr [esp+10h], 4
		mov	dword ptr [esp+0Ch], 0Ch
		mov	dword ptr [esp+8], offset sub_6ED928B0
		mov	dword ptr [esp+4], offset sub_6ED928E0
		mov	[esp], eax
		mov	[ebp+var_98], 8
		call	ds:_ZN9QHashData14detach_helper2EPFvPNS_4NodeEPvEPFvS1_Eii
		mov	[ebp+var_C8], eax
		mov	eax, [ebp+var_3C]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_6ED52063

loc_6ED51F89:				; CODE XREF: sub_6ED51550+B27j
		mov	edi, [ebp+var_C8]
		mov	[ebp+var_3C], edi

loc_6ED51F92:				; CODE XREF: sub_6ED51550+9ECj
		mov	eax, [ebp+var_BC]
		mov	[ebp+var_98], 8
		add	eax, 24h
		mov	[ebp+var_C0], eax
		mov	edx, [ebp+var_C0]
		lea	eax, [ebp+var_50]
		mov	[esp+8], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[esp+4], edx
		call	sub_6ED98290
		mov	[ebp+var_B8], eax
		mov	eax, [eax]
		cmp	eax, [ebp+var_3C]
		jnz	loc_6ED51A60
		mov	edx, [eax+0Ch]
		cmp	edx, [eax+18h]
		jge	loc_6ED520A0

loc_6ED51FE4:				; CODE XREF: sub_6ED51550+B90j
		mov	edi, [ebp+var_50]
		mov	eax, [ebp+var_3C]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_98], 8
		mov	[ebp+var_CC], edi
		mov	[esp], eax
		call	ds:_ZN9QHashData12allocateNodeEi
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_6ED52027
		mov	ecx, [ebp+var_BC]
		mov	eax, [ecx+24h]
		mov	[edx+8], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	eax, edx

loc_6ED52027:				; CODE XREF: sub_6ED51550+AC1j
		mov	edi, [ebp+var_CC]
		mov	[eax+4], edi
		mov	ecx, [ebp+var_B8]
		mov	edx, [ecx]
		mov	[eax], edx
		mov	[ecx], eax
		mov	eax, [ebp+var_3C]
		add	dword ptr [eax+0Ch], 1
		jmp	loc_6ED51A60
; ---------------------------------------------------------------------------

loc_6ED52048:				; CODE XREF: sub_6ED51550+9CEj
		mov	eax, [ebp+var_48]
		mov	[ebp+var_98], 8
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED51F24
; ---------------------------------------------------------------------------

loc_6ED52063:				; CODE XREF: sub_6ED51550+A33j
		mov	eax, [ebp+var_3C]
		mov	dword ptr [esp+4], offset sub_6ED928B0
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_6ED51F89
; ---------------------------------------------------------------------------
		align 10h

loc_6ED52080:				; CODE XREF: sub_6ED51550+80Fj
		mov	eax, [ebp+var_28]
		mov	[ebp+var_98], 0Dh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED51D65
; ---------------------------------------------------------------------------
		align 10h

loc_6ED520A0:				; CODE XREF: sub_6ED51550+A8Ej
		movsx	edx, word ptr [eax+16h]
		mov	[esp], eax
		add	edx, 1
		mov	[esp+4], edx
		call	ds:_ZN9QHashData6rehashEi
		mov	ecx, [ebp+var_C0]
		lea	eax, [ebp+var_50]
		mov	[esp+8], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_98], 8
		mov	[esp+4], ecx
		call	sub_6ED98290
		mov	[ebp+var_B8], eax
		jmp	loc_6ED51FE4
; ---------------------------------------------------------------------------

loc_6ED520E5:				; CODE XREF: sub_6ED51550+755j
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_98], 8
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED51CAB
; ---------------------------------------------------------------------------

loc_6ED52100:				; CODE XREF: sub_6ED51550+47Aj
		mov	[ebp+var_A4], edi
		jmp	loc_6ED519DA
; ---------------------------------------------------------------------------

loc_6ED5210B:				; CODE XREF: sub_6ED51550+351j
		mov	eax, [ebp+var_54]
		mov	[ebp+var_98], 0Ch
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED518A7
; ---------------------------------------------------------------------------

loc_6ED52126:				; CODE XREF: sub_6ED51550+21Dj
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_98], 0Ch
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_D8], offset aXmlns ; "	xmlns:"
		jmp	loc_6ED51773
; ---------------------------------------------------------------------------

loc_6ED5214B:				; CODE XREF: sub_6ED51550+668j
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+4], offset asc_6EDA0260 ; "/>"
		mov	[ebp+var_98], 8
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		jmp	loc_6ED51CEA
; ---------------------------------------------------------------------------

loc_6ED5216E:				; CODE XREF: sub_6ED51550+259j
		mov	eax, [edx+0Ch]
		add	edx, 12h
		cmp	eax, edx
		jnz	loc_6ED517AF
		lea	esi, [esi+0]
		jmp	loc_6ED517CB
; ---------------------------------------------------------------------------

loc_6ED52185:				; CODE XREF: sub_6ED51550+165j
		mov	edi, [eax+0Ch]
		add	eax, 12h
		cmp	edi, eax
		mov	[ebp+var_D0], edi
		jnz	loc_6ED516BB
		jmp	loc_6ED516DD
sub_6ED51550	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5219E	proc near		; DATA XREF: sub_6ED51550+2Co

arg_0		= dword	ptr  4

		add	ebp, 18h
		mov	eax, [ebp-98h]
		mov	edi, [ebp-94h]
		cmp	eax, 1
		mov	[ebp-0E0h], edi
		jz	loc_6ED5231A
		cmp	eax, 2
		jz	loc_6ED52356
		cmp	eax, 3
		jz	loc_6ED5233C
		cmp	eax, 4
		jz	loc_6ED52303
		cmp	eax, 5
		jz	loc_6ED5228E
		cmp	eax, 6
		jz	loc_6ED522EC
		cmp	eax, 7
		lea	esi, [esi+0]
		jz	loc_6ED522A3
		cmp	eax, 8
		jz	short loc_6ED52277
		cmp	eax, 9
		xchg	ax, ax
		jz	short loc_6ED52220
		cmp	eax, 0Ah
		jz	loc_6ED5231A
		cmp	eax, 0Bh
		xchg	ax, ax
		jz	short loc_6ED52235
		cmp	eax, 0Ch
		jz	short loc_6ED5224A
		cmp	eax, 0Dh
		jz	loc_6ED52334

loc_6ED52220:				; CODE XREF: sub_6ED5219E+62j
		lea	eax, [ebp-30h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560

loc_6ED52235:				; CODE XREF: sub_6ED5219E+72j
					; sub_6ED5219E+EEj ...
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560

loc_6ED5224A:				; CODE XREF: sub_6ED5219E+77j
		lea	eax, [ebp-24h]

loc_6ED5224D:				; CODE XREF: sub_6ED5219E+199j
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560
		mov	edx, [ebp-0E0h]
		mov	dword ptr [ebp-98h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED52277:				; CODE XREF: sub_6ED5219E+5Bj
		lea	eax, [ebp-38h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560
		jmp	short loc_6ED52235
; ---------------------------------------------------------------------------

loc_6ED5228E:				; CODE XREF: sub_6ED5219E+3Cj
		lea	eax, [ebp-44h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560

loc_6ED522A3:				; CODE XREF: sub_6ED5219E+52j
					; sub_6ED5219E+163j ...
		mov	edi, [ebp-0E0h]
		mov	eax, [ebp-3Ch]
		mov	[ebp-0DCh], edi
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED522DB
		mov	eax, [ebp-3Ch]
		mov	[esp+arg_0], offset sub_6ED928B0
		mov	dword ptr [ebp-98h], 0
		mov	[esp+0], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_6ED522DB:				; CODE XREF: sub_6ED5219E+11Dj
		mov	eax, [ebp-0DCh]
		mov	[ebp-0E0h], eax
		jmp	loc_6ED52235
; ---------------------------------------------------------------------------

loc_6ED522EC:				; CODE XREF: sub_6ED5219E+45j
		lea	eax, [ebp-40h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560
		jmp	short loc_6ED522A3
; ---------------------------------------------------------------------------

loc_6ED52303:				; CODE XREF: sub_6ED5219E+33j
		lea	eax, [ebp-48h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560
		jmp	short loc_6ED522A3
; ---------------------------------------------------------------------------

loc_6ED5231A:				; CODE XREF: sub_6ED5219E+18j
					; sub_6ED5219E+67j
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560
		jmp	loc_6ED52235
; ---------------------------------------------------------------------------

loc_6ED52334:				; CODE XREF: sub_6ED5219E+7Cj
		lea	eax, [ebp-20h]
		jmp	loc_6ED5224D
; ---------------------------------------------------------------------------

loc_6ED5233C:				; CODE XREF: sub_6ED5219E+2Aj
		lea	eax, [ebp-4Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560
		jmp	loc_6ED522A3
; ---------------------------------------------------------------------------

loc_6ED52356:				; CODE XREF: sub_6ED5219E+21j
		lea	eax, [ebp-54h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560
		jmp	loc_6ED52235
sub_6ED5219E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED52370	proc near		; CODE XREF: _ZN12QDomDocument18createCDATASectionERK7QString+49p
					; sub_6ED54280+211p

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_9		= byte ptr -9
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A28C
		mov	[ebp+var_28], offset sub_6ED5251D
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	ecx, ds:dword_6EDA8004
		test	ecx, ecx
		jnz	loc_6ED52450
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_9], 1
		mov	eax, [edx]
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED523BF:				; CODE XREF: sub_6ED52370+18Fj
					; sub_6ED52370+1A8j
		cmp	[ebp+var_9], 0
		jz	short loc_6ED52440
		mov	dword ptr [esp], 38h ; size_t
		mov	[ebp+var_48], 3
		call	sub_6ED988D0
		mov	[ebp+var_54], eax
		mov	edx, [ebp+var_54]
		mov	[ebp+var_58], eax
		lea	eax, [ebp+var_10]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_0]
		mov	dword ptr [esp+8], 0
		mov	[esp], edx
		mov	[ebp+var_48], 2
		mov	[esp+4], eax
		call	sub_6ED4D100
		mov	edx, [ebp+var_54]
		lock dec dword ptr [edx+4]
		setnz	al

loc_6ED52410:				; CODE XREF: sub_6ED52370+D7j
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED52430
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED52430:				; CODE XREF: sub_6ED52370+ABj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_58]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED52440:				; CODE XREF: sub_6ED52370+53j
		mov	[ebp+var_58], 0
		jmp	short loc_6ED52410
; ---------------------------------------------------------------------------
		align 10h

loc_6ED52450:				; CODE XREF: sub_6ED52370+37j
		mov	edx, [ebp+arg_4]
		lea	ecx, [ebp+var_9]
		lea	eax, [ebp+var_14]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED50340
		cmp	[ebp+var_9], 0
		jz	short loc_6ED524E6
		mov	eax, ds:_ZNK7QString7indexOfERK13QLatin1StringiN2Qt15CaseSensitivityE
		mov	[ebp+var_50], eax
		jmp	short loc_6ED5249D
; ---------------------------------------------------------------------------

loc_6ED52475:				; CODE XREF: sub_6ED52370+15Ej
		cmp	ds:dword_6EDA8004, 2
		jz	short loc_6ED524E2
		lea	edx, [ebp+var_14]
		mov	dword ptr [esp+8], 3
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_48], 1
		call	ds:_ZN7QString6removeEii

loc_6ED5249D:				; CODE XREF: sub_6ED52370+103j
		lea	edx, [ebp+var_18]
		lea	eax, [ebp+var_14]
		mov	[ebp+var_18], offset asc_6EDA00B1 ; "]]>"
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	[ebp+var_50]
		cmp	eax, 0FFFFFFFFh
		jnz	short loc_6ED52475
		mov	eax, [ebp+var_14]
		mov	[ebp+var_9], 1
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax]
		setnz	dl
		jmp	short loc_6ED524F4
; ---------------------------------------------------------------------------

loc_6ED524E2:				; CODE XREF: sub_6ED52370+10Cj
		mov	[ebp+var_9], 0

loc_6ED524E6:				; CODE XREF: sub_6ED52370+F9j
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED524F4:				; CODE XREF: sub_6ED52370+170j
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED523BF
		mov	eax, [ebp+var_14]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED523BF
sub_6ED52370	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5251D	proc near		; DATA XREF: sub_6ED52370+1Do
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-5Ch], edx
		jz	short loc_6ED52557
		cmp	eax, 2
		jz	short loc_6ED52562
		lea	eax, [ebp-14h]

loc_6ED52536:				; CODE XREF: sub_6ED5251D+48j
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED52557:				; CODE XREF: sub_6ED5251D+Fj
		mov	eax, [ebp-54h]
		mov	[esp+0], eax
		call	sub_6ED988B0

loc_6ED52562:				; CODE XREF: sub_6ED5251D+14j
		lea	eax, [ebp-10h]
		jmp	short loc_6ED52536
sub_6ED5251D	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  62. _ZN12QDomDocument18createCDATASectionERK7QString

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QDomDocument18createCDATASectionERK7QString
_ZN12QDomDocument18createCDATASectionERK7QString proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A296
		mov	[ebp+var_18], offset sub_6ED5260F
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED525E0

loc_6ED525A8:				; CODE XREF: _ZN12QDomDocument18createCDATASectionERK7QString+9Dj
		mov	edx, [ebp+arg_8]
		mov	[esp], eax
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_6ED52370
		mov	edx, [ebp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short loc_6ED525CE
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED525CE:				; CODE XREF: _ZN12QDomDocument18createCDATASectionERK7QString+55j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------

loc_6ED525E0:				; CODE XREF: _ZN12QDomDocument18createCDATASectionERK7QString+36j
		mov	dword ptr [esp], 44h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	sub_6ED4F660
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+arg_4]
		mov	[edx], eax
		jmp	short loc_6ED525A8
_ZN12QDomDocument18createCDATASectionERK7QString endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5260F	proc near		; DATA XREF: _ZN12QDomDocument18createCDATASectionERK7QString+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-40h]
		mov	[ebp-44h], eax
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED5260F	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED52640	proc near		; CODE XREF: sub_6ED52850+21p
					; _ZN12QDomDocument13createCommentERK7QString+49p

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_9		= byte ptr -9
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A29C
		mov	[ebp+var_28], offset sub_6ED527ED
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, ds:dword_6EDA8004
		test	eax, eax
		jnz	loc_6ED52720
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_9], 1
		mov	eax, [edx]
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED5268E:				; CODE XREF: sub_6ED52640+18Fj
					; sub_6ED52640+1A8j
		cmp	[ebp+var_9], 0
		jz	short loc_6ED52710
		mov	dword ptr [esp], 38h ; size_t
		mov	[ebp+var_48], 3
		call	sub_6ED988D0
		mov	[ebp+var_54], eax
		mov	edx, [ebp+var_54]
		mov	[ebp+var_58], eax
		lea	eax, [ebp+var_10]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_0]
		mov	dword ptr [esp+8], 0
		mov	[esp], edx
		mov	[ebp+var_48], 2
		mov	[esp+4], eax
		call	sub_6ED4C7F0
		mov	edx, [ebp+var_54]
		lock dec dword ptr [edx+4]
		setnz	al

loc_6ED526DF:				; CODE XREF: sub_6ED52640+D7j
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED526FF
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED526FF:				; CODE XREF: sub_6ED52640+AAj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_58]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED52710:				; CODE XREF: sub_6ED52640+52j
		mov	[ebp+var_58], 0
		jmp	short loc_6ED526DF
; ---------------------------------------------------------------------------
		align 10h

loc_6ED52720:				; CODE XREF: sub_6ED52640+36j
		mov	edx, [ebp+arg_4]
		lea	ecx, [ebp+var_9]
		lea	eax, [ebp+var_14]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED50340
		cmp	[ebp+var_9], 0
		jz	short loc_6ED527B6
		mov	eax, ds:_ZNK7QString7indexOfERK13QLatin1StringiN2Qt15CaseSensitivityE
		mov	[ebp+var_50], eax
		jmp	short loc_6ED5276D
; ---------------------------------------------------------------------------

loc_6ED52745:				; CODE XREF: sub_6ED52640+15Ej
		cmp	ds:dword_6EDA8004, 2
		jz	short loc_6ED527B2
		lea	edx, [ebp+var_14]
		mov	dword ptr [esp+8], 2
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_48], 1
		call	ds:_ZN7QString6removeEii

loc_6ED5276D:				; CODE XREF: sub_6ED52640+103j
		lea	edx, [ebp+var_18]
		lea	eax, [ebp+var_14]
		mov	[ebp+var_18], offset asc_6EDA0263 ; "--"
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	[ebp+var_50]
		cmp	eax, 0FFFFFFFFh
		jnz	short loc_6ED52745
		mov	eax, [ebp+var_14]
		mov	[ebp+var_9], 1
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax]
		setnz	dl
		jmp	short loc_6ED527C4
; ---------------------------------------------------------------------------

loc_6ED527B2:				; CODE XREF: sub_6ED52640+10Cj
		mov	[ebp+var_9], 0

loc_6ED527B6:				; CODE XREF: sub_6ED52640+F9j
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED527C4:				; CODE XREF: sub_6ED52640+170j
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED5268E
		mov	eax, [ebp+var_14]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5268E
sub_6ED52640	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED527ED	proc near		; DATA XREF: sub_6ED52640+20o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-5Ch], edx
		jz	short loc_6ED52827
		cmp	eax, 2
		jz	short loc_6ED52832
		lea	eax, [ebp-14h]

loc_6ED52806:				; CODE XREF: sub_6ED527ED+48j
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED52827:				; CODE XREF: sub_6ED527ED+Fj
		mov	eax, [ebp-54h]
		mov	[esp+0], eax
		call	sub_6ED988B0

loc_6ED52832:				; CODE XREF: sub_6ED527ED+14j
		lea	eax, [ebp-10h]
		jmp	short loc_6ED52806
sub_6ED527ED	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED52840	proc near		; DATA XREF: .rdata:6EDA6D1Co

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF0h
		jmp	short sub_6ED52850
sub_6ED52840	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED52850	proc near		; CODE XREF: sub_6ED52840+5j
					; DATA XREF: .rdata:6EDA6C90o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_C], ebx
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_8], esi
		mov	[esp+1Ch+var_4], edi
		mov	[esp+1Ch+var_18], eax
		mov	eax, [ebx+28h]
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED52640
		mov	esi, eax
		mov	eax, [ebx+38h]
		mov	edx, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+8]
		mov	edi, eax
		mov	eax, [ebx+38h]
		mov	edx, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+0Ch]
		mov	[esi+34h], edi
		mov	[esi+30h], eax
		mov	eax, [ebx+2Ch]
		mov	edx, [eax]
		mov	[esp+1Ch+var_18], esi
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+1Ch]
		mov	eax, 1
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_6ED52850	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  56. _ZN12QDomDocument13createCommentERK7QString

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QDomDocument13createCommentERK7QString
_ZN12QDomDocument13createCommentERK7QString proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A2A6
		mov	[ebp+var_18], offset sub_6ED5295F
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED52930

loc_6ED528F8:				; CODE XREF: _ZN12QDomDocument13createCommentERK7QString+9Dj
		mov	edx, [ebp+arg_8]
		mov	[esp], eax
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_6ED52640
		mov	edx, [ebp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short loc_6ED5291E
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED5291E:				; CODE XREF: _ZN12QDomDocument13createCommentERK7QString+55j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------

loc_6ED52930:				; CODE XREF: _ZN12QDomDocument13createCommentERK7QString+36j
		mov	dword ptr [esp], 44h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	sub_6ED4F660
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+arg_4]
		mov	[edx], eax
		jmp	short loc_6ED528F8
_ZN12QDomDocument13createCommentERK7QString endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5295F	proc near		; DATA XREF: _ZN12QDomDocument13createCommentERK7QString+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-40h]
		mov	[ebp-44h], eax
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED5295F	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED52990	proc near		; DATA XREF: .rdata:6EDA70ACo

var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= byte ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_A		= word ptr -0Ah
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0A8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_4C], eax
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		mov	[ebp+var_54], offset sub_6ED997C0
		mov	[ebp+var_50], offset dword_6ED9A2AC
		mov	[ebp+var_48], offset sub_6ED52F6B
		mov	[ebp+var_44], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+1Ch]
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_A]
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[ebp+var_A], 25h
		mov	dword ptr [esp+8], 1
		mov	[esp], eax
		mov	[ebp+var_68], 0Ah
		call	ds:_ZNK7QString10startsWithERK5QCharN2Qt15CaseSensitivityE
		test	al, al
		jnz	loc_6ED52B95

loc_6ED52A01:				; CODE XREF: sub_6ED52990+2E4j
					; sub_6ED52990+2FDj
		mov	ecx, [ebp+arg_0]
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	eax, [ecx+38h]
		mov	[ebp+var_70], edx
		cmp	eax, edx
		jz	loc_6ED52D27

loc_6ED52A18:				; CODE XREF: sub_6ED52990+39Aj
		mov	edx, [ebp+arg_4]
		mov	dword ptr [esp+4], offset aEntity ; "<!ENTITY "
		mov	[ebp+var_68], 0Ah
		mov	[esp], edx
		call	ds:_ZN11QTextStreamlsEPKc
		lea	edx, [ebp+var_10]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_68], 0Ah
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	dword ptr [esp+4], 20h
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEc
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_70]
		cmp	edx, [eax+3Ch]
		jz	loc_6ED52CA7
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_2C]
		mov	[ebp+var_68], 0Ah
		add	edx, 38h
		call	sub_6ED46640
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_28]
		mov	[ebp+var_68], 4
		add	edx, 3Ch
		call	sub_6ED46640
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+4], offset aPublic ; "PUBLIC "
		mov	[ebp+var_68], 3
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		lea	edx, [ebp+var_28]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	dword ptr [esp+4], 20h
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEc
		lea	edx, [ebp+var_2C]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_28]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED52D0F

loc_6ED52AF1:				; CODE XREF: sub_6ED52990+392j
		mov	eax, [ebp+var_2C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED52CF7

loc_6ED52B02:				; CODE XREF: sub_6ED52990+362j
					; sub_6ED52990+37Aj
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_70]
		cmp	ecx, [edx+40h]
		jz	short loc_6ED52B44
		mov	eax, [ebp+arg_4]
		add	edx, 40h
		mov	[ebp+var_88], edx
		mov	dword ptr [esp+4], offset aNdata ; " NDATA "
		mov	[ebp+var_68], 0Ah
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		mov	edx, [ebp+var_88]
		mov	[esp], eax
		mov	[esp+4], edx
		call	ds:_ZN11QTextStreamlsERK7QString

loc_6ED52B44:				; CODE XREF: sub_6ED52990+17Bj
		mov	ecx, [ebp+arg_4]
		mov	dword ptr [esp+4], 3Eh
		mov	[ebp+var_68], 0Ah
		mov	[esp], ecx
		call	ds:_ZN11QTextStreamlsEc
		mov	[esp], eax
		call	ds:_Z4endlR11QTextStream

loc_6ED52B68:				; CODE XREF: sub_6ED52990+527j
					; sub_6ED52990+540j
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED52B88
		mov	eax, [ebp+var_10]
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED52B88:				; CODE XREF: sub_6ED52990+1E3j
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED52B95:				; CODE XREF: sub_6ED52990+6Bj
		lea	eax, [ebp+var_14]
		lea	edx, [ebp+var_10]
		mov	dword ptr [esp+0Ch], 0FFFFFFFFh
		mov	dword ptr [esp+8], 1
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK7QString3midEii
		mov	eax, [ebp+var_14]
		sub	esp, 4
		mov	dword ptr [esp+8], 0
		mov	eax, [eax+8]
		mov	[ebp+var_68], 9
		add	eax, 2
		mov	[esp+4], eax
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		call	ds:_ZN7QStringC1EiN2Qt14InitializationE
		mov	edx, [ebp+var_18]
		mov	eax, [edx]
		cmp	eax, 1
		jz	loc_6ED52ED5

loc_6ED52BF1:				; CODE XREF: sub_6ED52990+54Dj
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_68], 2
		call	ds:_ZN7QString7reallocEv
		mov	eax, [ebp+var_18]
		mov	eax, [eax+0Ch]

loc_6ED52C0A:				; CODE XREF: sub_6ED52990+553j
		mov	ecx, 25h
		mov	edx, offset asc_6EDA0266 ; "% "

loc_6ED52C14:				; CODE XREF: sub_6ED52990+295j
		add	edx, 1
		movzx	ecx, cl
		mov	[eax], cx
		movzx	ecx, byte ptr [edx]
		add	eax, 2
		test	cl, cl
		jnz	short loc_6ED52C14
		mov	edx, [ebp+var_14]
		mov	ecx, [edx+8]
		mov	edx, [edx+0Ch]
		mov	[esp], eax	; void *
		add	ecx, ecx
		mov	[esp+8], ecx	; size_t
		mov	[esp+4], edx	; void *
		call	memcpy
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_68], 8
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED52C92

loc_6ED52C69:				; CODE XREF: sub_6ED52990+315j
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED52A01
		mov	eax, [ebp+var_14]
		mov	[ebp+var_68], 0Ah
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED52A01
; ---------------------------------------------------------------------------

loc_6ED52C92:				; CODE XREF: sub_6ED52990+2D7j
		mov	eax, [ebp+var_18]
		mov	[ebp+var_68], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED52C69
; ---------------------------------------------------------------------------

loc_6ED52CA7:				; CODE XREF: sub_6ED52990+D4j
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_24]
		add	edx, 38h
		call	sub_6ED46640
		mov	ecx, [ebp+arg_4]
		mov	dword ptr [esp+4], offset aSystem ; "SYSTEM "
		mov	[ebp+var_68], 5
		mov	[esp], ecx
		call	ds:_ZN11QTextStreamlsEPKc
		lea	edx, [ebp+var_24]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		mov	[ebp+var_68], 0Ah
		call	sub_6ED94560
		jmp	loc_6ED52B02
; ---------------------------------------------------------------------------

loc_6ED52CF7:				; CODE XREF: sub_6ED52990+16Cj
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_68], 0Ah
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED52B02
; ---------------------------------------------------------------------------

loc_6ED52D0F:				; CODE XREF: sub_6ED52990+15Bj
		mov	eax, [ebp+var_28]
		mov	[ebp+var_68], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED52AF1
; ---------------------------------------------------------------------------

loc_6ED52D27:				; CODE XREF: sub_6ED52990+82j
		cmp	eax, [ecx+3Ch]
		jnz	loc_6ED52A18
		mov	edx, ecx
		lea	eax, [ebp+var_1C]
		add	edx, 20h
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_68], 0Ah
		call	ds:_ZNK7QString6toUtf8Ev
		mov	eax, [ebp+var_1C]
		sub	esp, 4
		mov	[ebp+var_20], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_20]
		mov	ecx, [eax+8]
		mov	[ebp+var_7C], ecx
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED52F58

loc_6ED52D6F:				; CODE XREF: sub_6ED52990+5D0j
		mov	eax, [ebp+var_7C]
		mov	[ebp+var_68], 1
		mov	[esp+4], eax
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		call	ds:_ZN10QByteArray7reallocEi
		mov	eax, [ebp+var_20]
		mov	edx, [eax+0Ch]

loc_6ED52D8F:				; CODE XREF: sub_6ED52990+5D6j
		mov	ecx, [ebp+var_7C]
		test	ecx, ecx
		mov	[ebp+var_78], ecx
		jz	loc_6ED52E35
		mov	eax, ds:_ZN10QByteArray7replaceEiiPKc
		mov	[ebp+var_74], 0
		mov	[ebp+var_84], eax
		mov	[ebp+var_80], eax
		jmp	short loc_6ED52DC2
; ---------------------------------------------------------------------------

loc_6ED52DB4:				; CODE XREF: sub_6ED52990+44Bj
		mov	eax, [ebp+var_74]
		add	eax, 1

loc_6ED52DBA:				; CODE XREF: sub_6ED52990+456j
					; sub_6ED52990+460j
		cmp	eax, [ebp+var_78]
		jnb	short loc_6ED52E35

loc_6ED52DBF:				; CODE XREF: sub_6ED52990+4A3j
		mov	[ebp+var_74], eax

loc_6ED52DC2:				; CODE XREF: sub_6ED52990+422j
		mov	ecx, [ebp+var_74]
		movzx	eax, byte ptr [edx+ecx]
		cmp	al, 25h
		jz	loc_6ED52EE8
		cmp	al, 22h
		jz	loc_6ED52F11
		cmp	al, 26h
		jnz	short loc_6ED52DB4
		mov	eax, [ebp+var_74]
		add	eax, 1
		cmp	[ebp+var_78], eax
		jbe	short loc_6ED52DBA
		mov	ecx, [ebp+var_74]
		cmp	byte ptr [edx+ecx+1], 23h
		jnz	short loc_6ED52DBA
		lea	eax, [ebp+var_20]
		mov	dword ptr [esp+0Ch], offset a38	; "&#38;"
		mov	dword ptr [esp+8], 1
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	[ebp+var_68], 1
		call	ds:_ZN10QByteArray7replaceEiiPKc
		lea	esi, [esi+0]

loc_6ED52E20:				; CODE XREF: sub_6ED52990+57Cj
					; sub_6ED52990+5ABj
		mov	eax, [ebp+var_20]
		add	[ebp+var_78], 4
		mov	edx, [eax+0Ch]
		mov	eax, [ebp+var_74]
		add	eax, 5
		cmp	eax, [ebp+var_78]
		jb	short loc_6ED52DBF

loc_6ED52E35:				; CODE XREF: sub_6ED52990+407j
					; sub_6ED52990+42Dj
		mov	ecx, [ebp+arg_4]
		mov	dword ptr [esp+4], offset aEntity ; "<!ENTITY "
		mov	[ebp+var_68], 6
		mov	[esp], ecx
		call	ds:_ZN11QTextStreamlsEPKc
		lea	edx, [ebp+var_10]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	dword ptr [esp+4], offset asc_6EDA0285 ; " \""
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		lea	edx, [ebp+var_20]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK10QByteArray
		mov	dword ptr [esp+4], offset asc_6EDA0288 ; "\">"
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		mov	[esp], eax
		call	ds:_Z4endlR11QTextStream
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED52F40

loc_6ED52EAC:				; CODE XREF: sub_6ED52990+5C3j
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED52B68
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_68], 0Ah
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	loc_6ED52B68
; ---------------------------------------------------------------------------

loc_6ED52ED5:				; CODE XREF: sub_6ED52990+25Bj
		mov	eax, [edx+0Ch]
		add	edx, 12h
		cmp	eax, edx
		jnz	loc_6ED52BF1
		jmp	loc_6ED52C0A
; ---------------------------------------------------------------------------

loc_6ED52EE8:				; CODE XREF: sub_6ED52990+43Bj
		lea	eax, [ebp+var_20]
		mov	dword ptr [esp+0Ch], offset a60	; "&#60;"
		mov	dword ptr [esp+8], 1
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	[ebp+var_68], 1
		call	[ebp+var_80]
		jmp	loc_6ED52E20
; ---------------------------------------------------------------------------

loc_6ED52F11:				; CODE XREF: sub_6ED52990+443j
		mov	edx, [ebp+var_74]
		lea	ecx, [ebp+var_20]
		mov	dword ptr [esp+0Ch], offset a34	; "&#34;"
		mov	dword ptr [esp+8], 1
		mov	[esp], ecx
		mov	[esp+4], edx
		mov	[ebp+var_68], 1
		call	[ebp+var_84]
		jmp	loc_6ED52E20
; ---------------------------------------------------------------------------

loc_6ED52F40:				; CODE XREF: sub_6ED52990+516j
		mov	eax, [ebp+var_20]
		mov	[ebp+var_68], 7
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	loc_6ED52EAC
; ---------------------------------------------------------------------------

loc_6ED52F58:				; CODE XREF: sub_6ED52990+3D9j
		mov	edx, [eax+0Ch]
		add	eax, 10h
		cmp	edx, eax
		jnz	loc_6ED52D6F
		jmp	loc_6ED52D8F
sub_6ED52990	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED52F6B	proc near		; DATA XREF: sub_6ED52990+23o
		add	ebp, 8
		mov	eax, [ebp-68h]
		mov	edx, [ebp-64h]
		cmp	eax, 1
		mov	[ebp-8Ch], edx
		jz	loc_6ED53016
		cmp	eax, 2
		jz	loc_6ED5303C
		cmp	eax, 3
		jz	loc_6ED5304E
		cmp	eax, 4
		jz	short loc_6ED53002
		cmp	eax, 5
		lea	esi, [esi+0]
		jz	short loc_6ED52FB7
		cmp	eax, 6
		jz	short loc_6ED52FC9
		cmp	eax, 7
		jz	short loc_6ED53016
		cmp	eax, 8
		nop
		jz	short loc_6ED53028
		cmp	eax, 9
		jz	short loc_6ED52FDB

loc_6ED52FB7:				; CODE XREF: sub_6ED52F6B+35j
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED90150

loc_6ED52FC9:				; CODE XREF: sub_6ED52F6B+3Aj
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED90150

loc_6ED52FDB:				; CODE XREF: sub_6ED52F6B+4Aj
					; sub_6ED52F6B+A9j ...
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		mov	eax, [ebp-8Ch]
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED53002:				; CODE XREF: sub_6ED52F6B+2Dj
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		jmp	short loc_6ED52FDB
; ---------------------------------------------------------------------------

loc_6ED53016:				; CODE XREF: sub_6ED52F6B+12j
					; sub_6ED52F6B+3Fj
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560

loc_6ED53028:				; CODE XREF: sub_6ED52F6B+45j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		jmp	short loc_6ED52FDB
; ---------------------------------------------------------------------------

loc_6ED5303C:				; CODE XREF: sub_6ED52F6B+1Bj
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560

loc_6ED5304E:				; CODE XREF: sub_6ED52F6B+24j
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		jmp	loc_6ED52FDB
sub_6ED52F6B	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED53070	proc near		; DATA XREF: .rdata:6EDA7540o

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A2C4
		mov	[ebp+var_28], offset sub_6ED531B9
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED46790
		test	eax, eax
		mov	[ebp+var_50], eax
		jz	short loc_6ED5310C
		mov	edx, eax
		mov	eax, [eax]
		mov	[esp], edx
		call	dword ptr [eax+4Ch]
		test	al, al
		jz	short loc_6ED53120
		mov	edx, [ebp+var_50]
		mov	eax, [edx+1Ch]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+38h]
		add	eax, 4
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	sub_6ED92EA0
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED53196

loc_6ED5310C:				; CODE XREF: sub_6ED53070+4Dj
					; sub_6ED53070+C6j ...
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_50]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED53120:				; CODE XREF: sub_6ED53070+5Bj
		mov	edx, [ebp+var_50]
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+50h]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	eax
		test	al, al
		jz	short loc_6ED5310C
		mov	edx, [ebp+var_50]
		mov	eax, [edx+1Ch]
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+3Ch]
		add	eax, 4
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	sub_6ED92EA0
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5310C
		mov	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_50]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED53196:				; CODE XREF: sub_6ED53070+96j
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_50]
		leave
		retn
sub_6ED53070	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED531B9	proc near		; DATA XREF: sub_6ED53070+1Do
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-54h], eax
		jz	short loc_6ED531EC
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	edx, [ebp-54h]
		mov	[esp+0], edx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED531EC:				; CODE XREF: sub_6ED531B9+Dj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-54h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED531B9	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED53210	proc near		; DATA XREF: .rdata:6EDA758Co

var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= byte ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		lea	eax, [ebp+var_8]
		sub	esp, 70h
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A2CC
		mov	[ebp+var_28], offset sub_6ED535A5
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+1Ch]
		mov	ebx, [eax+8]
		test	ebx, ebx
		jnz	short loc_6ED53260

loc_6ED5324E:				; CODE XREF: sub_6ED53210+2EEj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 70h
		pop	ebx
		pop	esi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED53260:				; CODE XREF: sub_6ED53210+3Cj
		mov	ecx, [ebp+arg_4]
		mov	esi, ds:_ZN11QTextStreamlsEPKc
		mov	dword ptr [esp+4], offset aDoctype ; "<!DOCTYPE	"
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], ecx
		mov	[ebp+var_54], esi
		call	esi ; _ZN11QTextStreamlsEPKc
		mov	edx, [ebp+arg_0]
		add	edx, 1Ch
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	edx, [ebp+arg_0]
		mov	ecx, ds:_ZN7QString11shared_nullE
		mov	eax, [edx+40h]
		mov	[ebp+var_50], ecx
		cmp	eax, ecx
		jz	loc_6ED53530
		lea	eax, [ebp+var_C]
		add	edx, 40h
		call	sub_6ED46640
		mov	esi, [ebp+arg_4]
		mov	dword ptr [esp+4], offset aPublic_0 ; "	PUBLIC "
		mov	[ebp+var_48], 3
		mov	[esp], esi
		call	[ebp+var_54]
		lea	edx, [ebp+var_C]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED53503
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_50]
		cmp	ecx, [edx+44h]
		jz	short loc_6ED53356

loc_6ED532F9:				; CODE XREF: sub_6ED53210+30Fj
		lea	eax, [ebp+var_10]
		add	edx, 44h
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED46640
		mov	esi, [ebp+arg_4]
		mov	dword ptr [esp+4], 20h
		mov	[ebp+var_48], 2
		mov	[esp], esi
		call	ds:_ZN11QTextStreamlsEc
		lea	edx, [ebp+var_10]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED53356
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED53356:				; CODE XREF: sub_6ED53210+E7j
					; sub_6ED53210+131j ...
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+38h]
		mov	eax, [eax+4]
		mov	ecx, [eax+0Ch]
		test	ecx, ecx
		jnz	short loc_6ED53377
		mov	eax, [edx+3Ch]
		mov	eax, [eax+4]
		mov	edx, [eax+0Ch]
		test	edx, edx
		jz	loc_6ED534DA

loc_6ED53377:				; CODE XREF: sub_6ED53210+154j
		mov	ecx, [ebp+arg_4]
		mov	dword ptr [esp+4], offset asc_6EDA02C0 ; " ["
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], ecx
		call	ds:_ZN11QTextStreamlsEPKc
		mov	[esp], eax
		call	ds:_Z4endlR11QTextStream
		mov	esi, [ebp+arg_0]
		mov	ebx, [esi+3Ch]
		mov	ecx, [ebx+4]
		mov	edx, [ecx+18h]
		mov	eax, [ecx+4]
		test	edx, edx
		jz	short loc_6ED533D4
		mov	esi, [eax]
		cmp	ecx, esi
		mov	[ebp+var_64], esi
		jnz	short loc_6ED533D7
		sub	edx, 1
		jmp	short loc_6ED533D0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED533C0:				; CODE XREF: sub_6ED53210+1C2j
		add	eax, 4
		sub	edx, 1
		mov	esi, [eax]
		cmp	ecx, esi
		jnz	loc_6ED53590

loc_6ED533D0:				; CODE XREF: sub_6ED53210+1AAj
		test	edx, edx
		jnz	short loc_6ED533C0

loc_6ED533D4:				; CODE XREF: sub_6ED53210+19Cj
		mov	[ebp+var_64], ecx

loc_6ED533D7:				; CODE XREF: sub_6ED53210+1A5j
					; sub_6ED53210+383j
		mov	eax, [ebp+var_64]
		cmp	eax, [ebx+4]
		jz	short loc_6ED5342F
		mov	edx, ds:_ZN9QHashData8nextNodeEPNS_4NodeE
		mov	[ebp+var_5C], edx

loc_6ED533E8:				; CODE XREF: sub_6ED53210+21Dj
		mov	ecx, [ebp+var_64]
		mov	esi, [ebp+arg_C]
		mov	eax, [ecx+0Ch]
		mov	ecx, [ebp+arg_4]
		mov	edx, [eax]
		mov	[esp+4], ecx
		mov	[esp+0Ch], esi
		mov	dword ptr [esp+8], 0
		mov	[esp], eax
		mov	eax, [edx+64h]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	eax
		mov	esi, [ebp+var_64]
		mov	[esp], esi
		call	[ebp+var_5C]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_64], eax
		mov	eax, [edx+3Ch]
		mov	ecx, [ebp+var_64]
		cmp	ecx, [eax+4]
		jnz	short loc_6ED533E8

loc_6ED5342F:				; CODE XREF: sub_6ED53210+1CDj
		mov	esi, [ebp+arg_0]
		mov	ebx, [esi+38h]
		mov	ecx, [ebx+4]
		mov	edx, [ecx+18h]
		mov	eax, [ecx+4]
		test	edx, edx
		jz	short loc_6ED53464
		mov	esi, [eax]
		cmp	ecx, esi
		mov	[ebp+var_60], esi
		jnz	short loc_6ED53467
		sub	edx, 1
		jmp	short loc_6ED53460
; ---------------------------------------------------------------------------

loc_6ED53450:				; CODE XREF: sub_6ED53210+252j
		add	eax, 4
		sub	edx, 1
		mov	esi, [eax]
		cmp	ecx, esi
		jnz	loc_6ED53598

loc_6ED53460:				; CODE XREF: sub_6ED53210+23Ej
		test	edx, edx
		jnz	short loc_6ED53450

loc_6ED53464:				; CODE XREF: sub_6ED53210+230j
		mov	[ebp+var_60], ecx

loc_6ED53467:				; CODE XREF: sub_6ED53210+239j
					; sub_6ED53210+390j
		mov	eax, [ebp+var_60]
		cmp	eax, [ebx+4]
		jz	short loc_6ED534BF
		mov	edx, ds:_ZN9QHashData8nextNodeEPNS_4NodeE
		mov	[ebp+var_58], edx

loc_6ED53478:				; CODE XREF: sub_6ED53210+2ADj
		mov	ecx, [ebp+var_60]
		mov	esi, [ebp+arg_C]
		mov	eax, [ecx+0Ch]
		mov	ecx, [ebp+arg_4]
		mov	edx, [eax]
		mov	[esp+4], ecx
		mov	[esp+0Ch], esi
		mov	dword ptr [esp+8], 0
		mov	[esp], eax
		mov	eax, [edx+64h]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	eax
		mov	esi, [ebp+var_60]
		mov	[esp], esi
		call	[ebp+var_58]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_60], eax
		mov	eax, [edx+38h]
		mov	ecx, [ebp+var_60]
		cmp	ecx, [eax+4]
		jnz	short loc_6ED53478

loc_6ED534BF:				; CODE XREF: sub_6ED53210+25Dj
		mov	esi, [ebp+arg_4]
		mov	dword ptr [esp+4], 5Dh
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], esi
		call	ds:_ZN11QTextStreamlsEc

loc_6ED534DA:				; CODE XREF: sub_6ED53210+161j
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+4], 3Eh
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEc
		mov	[esp], eax
		call	ds:_Z4endlR11QTextStream
		jmp	loc_6ED5324E
; ---------------------------------------------------------------------------

loc_6ED53503:				; CODE XREF: sub_6ED53210+D8j
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_50]
		cmp	ecx, [edx+44h]
		jnz	loc_6ED532F9
		jmp	loc_6ED53356
; ---------------------------------------------------------------------------
		align 10h

loc_6ED53530:				; CODE XREF: sub_6ED53210+94j
		mov	edx, [ebp+arg_0]
		cmp	eax, [edx+44h]
		jz	loc_6ED53356
		lea	eax, [ebp+var_14]
		add	edx, 44h
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED46640
		mov	ecx, [ebp+arg_4]
		mov	dword ptr [esp+4], offset aSystem_0 ; "	SYSTEM "
		mov	[ebp+var_48], 1
		mov	[esp], ecx
		call	[ebp+var_54]
		lea	edx, [ebp+var_14]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED94560
		jmp	loc_6ED53356
; ---------------------------------------------------------------------------
		align 10h

loc_6ED53590:				; CODE XREF: sub_6ED53210+1BAj
		mov	[ebp+var_64], esi
		jmp	loc_6ED533D7
; ---------------------------------------------------------------------------

loc_6ED53598:				; CODE XREF: sub_6ED53210+24Aj
		mov	[ebp+var_60], esi
		nop
		lea	esi, [esi+0]
		jmp	loc_6ED53467
sub_6ED53210	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED535A5	proc near		; DATA XREF: sub_6ED53210+22o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	esi, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-68h], esi
		jz	short loc_6ED535DC
		cmp	eax, 2
		jz	short loc_6ED53600
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	[esp+0], esi
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED535DC:				; CODE XREF: sub_6ED535A5+Fj
		lea	eax, [ebp-10h]

loc_6ED535DF:				; CODE XREF: sub_6ED535A5+5Ej
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-68h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED53600:				; CODE XREF: sub_6ED535A5+14j
		lea	eax, [ebp-0Ch]
		jmp	short loc_6ED535DF
sub_6ED535A5	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED53610	proc near		; CODE XREF: sub_6ED538D0+7Ap
					; .text:6ED53A5Ap ...

var_5D		= byte ptr -5Dh
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= byte ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		mov	[ebp+var_58], eax
		movzx	eax, [ebp+arg_0]
		mov	[ebp+var_5C], edx
		lea	edx, [ebp+var_8]
		mov	[ebp+var_50], ecx
		mov	[ebp+var_2C], edx
		mov	[ebp+var_5D], al
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A2D6
		mov	[ebp+var_28], offset sub_6ED53858
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0
		mov	word ptr [esp+4], 3Ah
		mov	eax, [ebp+var_50]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZNK7QString7indexOfE5QChariN2Qt15CaseSensitivityE
		cmp	eax, 0FFFFFFFFh
		mov	[ebp+var_54], eax
		jz	loc_6ED53740
		mov	edx, [ebp+var_54]
		mov	[esp+8], edx
		mov	eax, [ebp+var_50]
		lea	edx, [ebp+var_C]
		mov	[esp], edx
		mov	[esp+4], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZNK7QString4leftEi
		lea	eax, [ebp+var_C]
		sub	esp, 4
		mov	[esp+4], eax
		mov	edx, [ebp+var_58]
		mov	[esp], edx
		mov	[ebp+var_48], 4
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED53828

loc_6ED536D4:				; CODE XREF: sub_6ED53610+22Bj
		mov	dword ptr [esp+0Ch], 0FFFFFFFFh
		mov	eax, [ebp+var_54]
		add	eax, 1
		mov	[esp+8], eax
		mov	edx, [ebp+var_50]
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[esp+4], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZNK7QString3midEii
		lea	edx, [ebp+var_10]
		sub	esp, 4
		mov	[esp+4], edx
		mov	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED53808
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED53740:				; CODE XREF: sub_6ED53610+6Fj
		cmp	[ebp+var_5D], 0
		jz	short loc_6ED537B7
		lea	edx, [ebp+var_14]
		mov	[esp], edx
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset byte_6EDA00BB
		call	ds:_ZN7QString10fromLatin1EPKci
		lea	eax, [ebp+var_14]
		sub	esp, 4
		mov	[esp+4], eax
		mov	edx, [ebp+var_58]
		mov	[esp], edx
		mov	[ebp+var_48], 2
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED53840

loc_6ED53790:				; CODE XREF: sub_6ED53610+1B1j
					; sub_6ED53610+1E1j ...
		mov	edx, [ebp+var_50]
		mov	[esp+4], edx
		mov	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED537B7:				; CODE XREF: sub_6ED53610+134j
		mov	edx, [ebp+var_58]
		mov	eax, ds:_ZN7QString11shared_nullE
		cmp	[edx], eax
		jz	short loc_6ED53790
		mov	[ebp+var_18], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		mov	eax, [ebp+var_58]
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED53790
		mov	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED53790
; ---------------------------------------------------------------------------

loc_6ED53808:				; CODE XREF: sub_6ED53610+118j
		mov	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED53828:				; CODE XREF: sub_6ED53610+BEj
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED536D4
; ---------------------------------------------------------------------------

loc_6ED53840:				; CODE XREF: sub_6ED53610+17Aj
		mov	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED53790
sub_6ED53610	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED53858	proc near		; DATA XREF: sub_6ED53610+2Do
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-64h], edx
		jz	short loc_6ED53897
		cmp	eax, 2
		jz	short loc_6ED538A1
		cmp	eax, 3
		jz	short loc_6ED5389C
		lea	eax, [ebp-18h]

loc_6ED53876:				; CODE XREF: sub_6ED53858+42j
					; sub_6ED53858+47j
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-64h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED53897:				; CODE XREF: sub_6ED53858+Fj
		lea	eax, [ebp-14h]
		jmp	short loc_6ED53876
; ---------------------------------------------------------------------------

loc_6ED5389C:				; CODE XREF: sub_6ED53858+19j
		lea	eax, [ebp-0Ch]
		jmp	short loc_6ED53876
; ---------------------------------------------------------------------------

loc_6ED538A1:				; CODE XREF: sub_6ED53858+14j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	edx, [ebp-64h]
		mov	[esp+0], edx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED53858	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED538D0	proc near		; CODE XREF: sub_6ED54AC0+98p

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 54h
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A2E2
		mov	[ebp+var_18], offset sub_6ED539B3
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_8]
		mov	edx, [ebp+arg_0]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_6ED416C0
		mov	ebx, [ebp+arg_0]
		mov	ecx, ds:_ZN7QString11shared_nullE
		mov	dword ptr [ebx], offset	off_6EDA7148
		mov	edx, ebx
		mov	eax, ebx
		mov	ebx, [ebp+arg_C]
		add	edx, 1Ch
		add	eax, 24h
		cmp	[ebx], ecx
		mov	[ebp+var_38], 1
		setnz	cl
		movzx	ecx, cl
		mov	[esp], ecx
		mov	ecx, [ebp+arg_10]
		call	sub_6ED53610
		mov	eax, [ebp+arg_0]
		mov	[esp+4], ebx
		add	eax, 28h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+arg_0]
		and	byte ptr [eax+2Ch], 0FEh
		mov	dword ptr [esp], 10h ; size_t
		call	sub_6ED988D0
		mov	edx, ds:_ZN9QHashData11shared_nullE
		mov	dword ptr [eax], 0
		mov	[eax+4], edx
		lock inc dword ptr [edx+8]
		setnz	cl
		mov	dword ptr [eax], 1
		mov	edx, [ebp+arg_0]
		mov	byte ptr [eax+0Ch], 0
		mov	byte ptr [eax+0Dh], 0
		mov	[eax+8], edx
		mov	[edx+38h], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 54h
		pop	ebx
		pop	ebp
		retn
sub_6ED538D0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED539B3	proc near		; DATA XREF: sub_6ED538D0+21o
		add	ebp, 8
		mov	ebx, [ebp-34h]
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED48EB0
		mov	[esp+0], ebx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED539B3	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		lea	eax, [ebp-8]
		push	ebx
		sub	esp, 54h
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_6ED997C0
		mov	dword ptr [ebp-20h], offset dword_6ED9A2E8
		mov	dword ptr [ebp-18h], offset loc_6ED53AC3
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+10h]
		mov	edx, [ebp+8]
		mov	[esp+8], eax
		mov	eax, [ebp+0Ch]
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_6ED416C0
		mov	ebx, [ebp+8]
		mov	ecx, ds:_ZN7QString11shared_nullE
		mov	dword ptr [ebx], offset	off_6EDA7148
		mov	edx, ebx
		mov	eax, ebx
		mov	ebx, [ebp+14h]
		add	edx, 1Ch
		add	eax, 24h
		cmp	[ebx], ecx
		mov	dword ptr [ebp-38h], 1
		setnz	cl
		movzx	ecx, cl
		mov	[esp], ecx
		mov	ecx, [ebp+18h]
		call	sub_6ED53610
		mov	eax, [ebp+8]
		mov	[esp+4], ebx
		add	eax, 28h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+8]
		and	byte ptr [eax+2Ch], 0FEh
		mov	dword ptr [esp], 10h
		call	sub_6ED988D0
		mov	edx, ds:_ZN9QHashData11shared_nullE
		mov	dword ptr [eax], 0
		mov	[eax+4], edx
		lock inc dword ptr [edx+8]
		setnz	cl
		mov	dword ptr [eax], 1
		mov	edx, [ebp+8]
		mov	byte ptr [eax+0Ch], 0
		mov	byte ptr [eax+0Dh], 0
		mov	[eax+8], edx
		mov	[edx+38h], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 54h
		pop	ebx
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED53AC3:				; DATA XREF: .text:6ED53A01o
		add	ebp, 8
		mov	ebx, [ebp-34h]
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], eax
		call	sub_6ED48EB0
		mov	[esp], ebx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED53AF0	proc near		; CODE XREF: sub_6ED546E0+98p
					; sub_6ED553A0+15Bp

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 54h
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A2EE
		mov	[ebp+var_18], offset sub_6ED53B9B
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_8]
		mov	ebx, [ebp+arg_0]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], ebx
		mov	[esp+4], eax
		call	sub_6ED416C0
		mov	edx, ebx
		mov	eax, ebx
		mov	dword ptr [ebx], offset	off_6EDA6DC8
		mov	ebx, [ebp+arg_C]
		add	edx, 1Ch
		mov	ecx, ds:_ZN7QString11shared_nullE
		add	eax, 24h
		cmp	[ebx], ecx
		mov	[ebp+var_38], 1
		setnz	cl
		movzx	ecx, cl
		mov	[esp], ecx
		mov	ecx, [ebp+arg_10]
		call	sub_6ED53610
		mov	eax, [ebp+arg_0]
		mov	[esp+4], ebx
		add	eax, 28h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+arg_0]
		and	byte ptr [eax+2Ch], 0FEh
		mov	byte ptr [eax+38h], 0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 54h
		pop	ebx
		pop	ebp
		retn
sub_6ED53AF0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED53B9B	proc near		; DATA XREF: sub_6ED53AF0+21o
		add	ebp, 8
		mov	ebx, [ebp-34h]
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED48EB0
		mov	[esp+0], ebx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED53B9B	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		lea	eax, [ebp-8]
		push	ebx
		sub	esp, 54h
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_6ED997C0
		mov	dword ptr [ebp-20h], offset dword_6ED9A2F4
		mov	dword ptr [ebp-18h], offset loc_6ED53C7B
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+10h]
		mov	ebx, [ebp+8]
		mov	[esp+8], eax
		mov	eax, [ebp+0Ch]
		mov	[esp], ebx
		mov	[esp+4], eax
		call	sub_6ED416C0
		mov	edx, ebx
		mov	eax, ebx
		mov	dword ptr [ebx], offset	off_6EDA6DC8
		mov	ebx, [ebp+14h]
		add	edx, 1Ch
		mov	ecx, ds:_ZN7QString11shared_nullE
		add	eax, 24h
		cmp	[ebx], ecx
		mov	dword ptr [ebp-38h], 1
		setnz	cl
		movzx	ecx, cl
		mov	[esp], ecx
		mov	ecx, [ebp+18h]
		call	sub_6ED53610
		mov	eax, [ebp+8]
		mov	[esp+4], ebx
		add	eax, 28h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+8]
		and	byte ptr [eax+2Ch], 0FEh
		mov	byte ptr [eax+38h], 0
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 54h
		pop	ebx
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED53C7B:				; DATA XREF: .text:6ED53BF1o
		add	ebp, 8
		mov	ebx, [ebp-34h]
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], eax
		call	sub_6ED48EB0
		mov	[esp], ebx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED53CB0	proc near		; CODE XREF: sub_6ED540E0+46p
					; sub_6ED546E0+46p ...

var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_61		= byte ptr -61h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_57		= byte ptr -57h
var_56		= word ptr -56h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_9		= byte ptr -9
var_8		= byte ptr -8
arg_0		= byte ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 98h
		mov	[ebp+var_5C], eax
		movzx	eax, [ebp+arg_0]
		mov	[ebp+var_60], edx
		lea	edx, [ebp+var_8]
		mov	[ebp+var_68], ecx
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_61], al
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_30], offset word_6ED9A2FA
		mov	[ebp+var_2C], edx
		mov	[ebp+var_28], offset sub_6ED5405D
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	ecx, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_50], ecx
		mov	[ebp+var_10], ecx
		lock inc dword ptr [ecx]
		setnz	al
		mov	[ebp+var_14], ecx
		lock inc dword ptr [ecx]
		setnz	al
		cmp	[ebp+var_61], 0
		jz	short loc_6ED53D90
		mov	ecx, [ebp+var_60]
		lea	edx, [ebp+var_10]
		lea	eax, [ebp+var_14]
		mov	dword ptr [esp], 1
		mov	[ebp+var_48], 3
		call	sub_6ED53610
		mov	eax, [ebp+var_10]
		mov	edx, [eax+8]
		test	edx, edx
		jnz	short loc_6ED53DB4

loc_6ED53D39:				; CODE XREF: sub_6ED53CB0+102j
		mov	edx, [ebp+var_68]
		mov	eax, [ebp+var_50]
		mov	ecx, [ebp+var_5C]
		mov	byte ptr [edx],	0
		mov	[ecx], eax
		lock inc dword ptr [eax]
		setnz	al

loc_6ED53D4D:				; CODE XREF: sub_6ED53CB0+1E3j
					; sub_6ED53CB0+1FCj ...
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED53F60

loc_6ED53D5E:				; CODE XREF: sub_6ED53CB0+2C3j
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED53D7E
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED53D7E:				; CODE XREF: sub_6ED53CB0+B9j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_5C]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED53D90:				; CODE XREF: sub_6ED53CB0+61j
		mov	eax, [ebp+var_60]
		mov	[ebp+var_48], 3
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_10]
		mov	edx, [eax+8]
		test	edx, edx
		jz	short loc_6ED53D39

loc_6ED53DB4:				; CODE XREF: sub_6ED53CB0+87j
		mov	eax, ds:dword_6EDA8004
		test	eax, eax
		jz	loc_6ED53EB1
		mov	eax, [ebp+var_50]
		mov	[ebp+var_18], eax
		lock inc dword ptr [eax]
		setnz	al
		mov	eax, [ebp+var_10]
		mov	ecx, [eax+8]
		test	ecx, ecx
		jle	loc_6ED53F38
		mov	ecx, ds:_ZN7QString6appendE5QChar
		mov	[ebp+var_54], 0
		mov	[ebp+var_57], 1
		mov	[ebp+var_6C], ecx
		jmp	short loc_6ED53E3A
; ---------------------------------------------------------------------------

loc_6ED53DF1:				; CODE XREF: sub_6ED53CB0+19Cj
		mov	[esp], ax
		mov	[ebp+var_48], 2
		call	ds:_ZN9QXmlUtils8isLetterE5QChar
		test	al, al
		jz	loc_6ED53ED0

loc_6ED53E0A:				; CODE XREF: sub_6ED53CB0+225j
					; sub_6ED53CB0+230j
		movzx	ecx, [ebp+var_56]
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		mov	[esp+4], cx
		call	[ebp+var_6C]
		mov	[ebp+var_57], 0

loc_6ED53E27:				; CODE XREF: sub_6ED53CB0+1C2j
					; sub_6ED53CB0+23Dj
		mov	eax, [ebp+var_10]
		add	[ebp+var_54], 1
		mov	ecx, [ebp+var_54]
		cmp	ecx, [eax+8]
		jge	loc_6ED53F38

loc_6ED53E3A:				; CODE XREF: sub_6ED53CB0+13Fj
					; sub_6ED53CB0+282j
		mov	eax, [eax+0Ch]
		mov	edx, [ebp+var_54]
		cmp	[ebp+var_57], 0
		movzx	eax, word ptr [eax+edx*2]
		mov	[ebp+var_56], ax
		jnz	short loc_6ED53DF1
		movzx	ecx, [ebp+var_56]
		mov	[ebp+var_48], 2
		mov	[esp], cx
		call	ds:_ZN9QXmlUtils10isNameCharE5QChar
		test	al, al
		jnz	loc_6ED53F10
		cmp	ds:dword_6EDA8004, 2
		jnz	short loc_6ED53E27
		mov	ecx, [ebp+var_68]
		mov	edx, [ebp+var_50]
		mov	eax, [ebp+var_5C]
		mov	byte ptr [ecx],	0
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	al

loc_6ED53E88:				; CODE XREF: sub_6ED53CB0+257j
					; sub_6ED53CB0+2A6j ...
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED53D4D
		mov	eax, [ebp+var_18]
		mov	[ebp+var_48], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED53D4D
; ---------------------------------------------------------------------------

loc_6ED53EB1:				; CODE XREF: sub_6ED53CB0+10Bj
		mov	ecx, [ebp+var_68]
		mov	edx, [ebp+var_60]
		mov	byte ptr [ecx],	1
		mov	ecx, [ebp+var_5C]
		mov	eax, [edx]
		mov	[ecx], eax
		lock inc dword ptr [eax]
		setnz	dl
		jmp	loc_6ED53D4D
; ---------------------------------------------------------------------------
		align 10h

loc_6ED53ED0:				; CODE XREF: sub_6ED53CB0+154j
		cmp	[ebp+var_56], 5Fh
		jz	loc_6ED53E0A
		cmp	[ebp+var_56], 3Ah
		jz	loc_6ED53E0A
		cmp	ds:dword_6EDA8004, 2
		jnz	loc_6ED53E27
		mov	edx, [ebp+var_68]
		mov	eax, [ebp+var_50]
		mov	ecx, [ebp+var_5C]
		mov	byte ptr [edx],	0
		mov	[ecx], eax
		lock inc dword ptr [eax]
		setnz	al
		jmp	loc_6ED53E88
; ---------------------------------------------------------------------------
		align 10h

loc_6ED53F10:				; CODE XREF: sub_6ED53CB0+1B5j
		movzx	eax, [ebp+var_56]
		lea	edx, [ebp+var_18]
		mov	[esp], edx
		mov	[esp+4], ax
		call	ds:_ZN7QString6appendE5QChar
		mov	eax, [ebp+var_10]
		add	[ebp+var_54], 1
		mov	ecx, [ebp+var_54]
		cmp	ecx, [eax+8]
		jl	loc_6ED53E3A

loc_6ED53F38:				; CODE XREF: sub_6ED53CB0+125j
					; sub_6ED53CB0+184j
		mov	eax, [ebp+var_18]
		mov	edx, [eax+8]
		test	edx, edx
		jnz	short loc_6ED53F78
		mov	eax, [ebp+var_68]
		mov	ecx, [ebp+var_50]
		mov	edx, [ebp+var_5C]
		mov	byte ptr [eax],	0
		mov	[edx], ecx
		lock inc dword ptr [ecx]
		setnz	al
		jmp	loc_6ED53E88
; ---------------------------------------------------------------------------
		align 10h

loc_6ED53F60:				; CODE XREF: sub_6ED53CB0+A8j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_48], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED53D5E
; ---------------------------------------------------------------------------

loc_6ED53F78:				; CODE XREF: sub_6ED53CB0+290j
		mov	edx, [ebp+var_68]
		cmp	[ebp+var_61], 0
		mov	byte ptr [edx],	1
		jz	loc_6ED5403F
		mov	edx, [ebp+var_14]
		mov	edx, [edx+8]
		test	edx, edx
		jz	loc_6ED5403F
		mov	[ebp+var_9], 3Ah
		mov	ecx, [ebp+var_5C]
		mov	dword ptr [esp+8], 0
		add	edx, [eax+8]
		mov	[ebp+var_48], 2
		mov	[ebp+var_78], ecx
		mov	eax, edx
		add	eax, 1
		mov	[esp+4], eax
		mov	[esp], ecx
		call	ds:_ZN7QStringC1EiN2Qt14InitializationE
		mov	edx, [ebp+var_5C]
		mov	eax, [edx]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED5404F

loc_6ED53FD0:				; CODE XREF: sub_6ED53CB0+3A5j
		mov	ecx, [ebp+var_5C]
		mov	[ebp+var_48], 1
		mov	[esp], ecx
		call	ds:_ZN7QString7reallocEv

loc_6ED53FE3:				; CODE XREF: sub_6ED53CB0+3ABj
		mov	edx, [ebp+var_5C]
		mov	eax, [edx]
		mov	eax, [eax+0Ch]
		mov	[ebp+var_70], eax
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+var_70]
		mov	edx, [eax+8]
		mov	eax, [eax+0Ch]
		mov	[esp], ecx	; void *
		add	edx, edx
		mov	[ebp+var_74], edx
		mov	[esp+8], edx	; size_t
		mov	[esp+4], eax	; void *
		call	memcpy
		movzx	eax, [ebp+var_9]
		mov	edx, [ebp+var_70]
		add	edx, [ebp+var_74]
		mov	[edx], ax
		mov	eax, [ebp+var_18]
		add	edx, 2
		mov	ecx, [eax+8]
		mov	eax, [eax+0Ch]
		mov	[esp], edx	; void *
		add	ecx, ecx
		mov	[esp+8], ecx	; size_t
		mov	[esp+4], eax	; void *
		call	memcpy
		jmp	loc_6ED53E88
; ---------------------------------------------------------------------------

loc_6ED5403F:				; CODE XREF: sub_6ED53CB0+2D2j
					; sub_6ED53CB0+2E0j
		mov	edx, [ebp+var_5C]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		jmp	loc_6ED53E88
; ---------------------------------------------------------------------------

loc_6ED5404F:				; CODE XREF: sub_6ED53CB0+31Ej
		lea	edx, [eax+12h]
		cmp	[eax+0Ch], edx
		jnz	loc_6ED53FD0
		jmp	short loc_6ED53FE3
sub_6ED53CB0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5405D	proc near		; DATA XREF: sub_6ED53CB0+30o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-7Ch], edx
		jz	short loc_6ED5408A
		cmp	eax, 2
		jz	short loc_6ED5409C
		cmp	eax, 3
		jz	short loc_6ED540AE
		mov	ecx, [ebp-78h]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], ecx
		call	sub_6ED94560

loc_6ED5408A:				; CODE XREF: sub_6ED5405D+Fj
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED5409C:				; CODE XREF: sub_6ED5405D+14j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED540AE:				; CODE XREF: sub_6ED5405D+19j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-7Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED5405D	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED540E0	proc near		; CODE XREF: sub_6ED54200+2Ap
					; sub_6ED54280+1F4p ...

var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_9		= byte ptr -9
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A306
		mov	[ebp+var_28], offset sub_6ED541B9
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_10]
		lea	ecx, [ebp+var_9]
		mov	dword ptr [esp], 0
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED53CB0
		cmp	[ebp+var_9], 0
		jz	short loc_6ED541B0
		mov	dword ptr [esp], 38h ; size_t
		mov	[ebp+var_48], 2
		call	sub_6ED988D0
		mov	[ebp+var_50], eax
		mov	edx, [ebp+var_50]
		mov	[ebp+var_54], eax
		lea	eax, [ebp+var_10]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_0]
		mov	dword ptr [esp+8], 0
		mov	[esp], edx
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		call	sub_6ED49500
		mov	edx, [ebp+var_50]
		lock dec dword ptr [edx+4]
		setnz	al

loc_6ED5417C:				; CODE XREF: sub_6ED540E0+D7j
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5419C
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED5419C:				; CODE XREF: sub_6ED540E0+A7j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_54]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED541B0:				; CODE XREF: sub_6ED540E0+4Fj
		mov	[ebp+var_54], 0
		jmp	short loc_6ED5417C
sub_6ED540E0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED541B9	proc near		; DATA XREF: sub_6ED540E0+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-58h], eax
		jz	short loc_6ED541D3
		mov	edx, [ebp-50h]
		mov	[esp+0], edx
		call	sub_6ED988B0

loc_6ED541D3:				; CODE XREF: sub_6ED541B9+Dj
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED541B9	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED54200	proc near		; DATA XREF: .rdata:6EDA6C58o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		cmp	ds:byte_6EDA8008, 0
		mov	[esp+1Ch+var_C], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_8], esi
		mov	[esp+1Ch+var_4], edi
		jz	short loc_6ED5425E
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [ebx+28h]
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED540E0
		mov	esi, eax
		mov	eax, [ebx+38h]
		mov	edx, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+8]
		mov	edi, eax
		mov	eax, [ebx+38h]
		mov	edx, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+0Ch]
		mov	[esi+34h], edi
		mov	[esi+30h], eax
		mov	eax, [ebx+2Ch]
		mov	edx, [eax]
		mov	[esp+1Ch+var_18], esi
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+1Ch]

loc_6ED5425E:				; CODE XREF: sub_6ED54200+1Aj
		mov	eax, 1
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_6ED54200	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED54280	proc near		; DATA XREF: .rdata:6EDA6C4Co

var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_51		= byte ptr -51h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0A8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A30E
		mov	[ebp+var_28], offset sub_6ED544E8
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_51], 0
		mov	eax, [edx+28h]
		cmp	[edx+2Ch], eax
		jz	loc_6ED5434A
		cmp	byte ptr [edx+34h], 0
		mov	[ebp+var_50], 0
		jnz	loc_6ED54480
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+30h]
		mov	ecx, [edx+8]
		test	ecx, ecx
		jnz	short loc_6ED54360
		mov	edx, [ebp+arg_4]
		mov	[esp], eax
		mov	[ebp+var_48], 6
		mov	[esp+4], edx
		call	sub_6ED504D0

loc_6ED542F9:				; CODE XREF: sub_6ED54280+1F9j
					; sub_6ED54280+216j
		test	eax, eax
		jz	short loc_6ED54300
		mov	[ebp+var_50], eax

loc_6ED54300:				; CODE XREF: sub_6ED54280+7Bj
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+38h]
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+8]
		mov	[ebp+var_48], 6
		call	eax
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_5C], eax
		mov	eax, [edx+38h]
		mov	edx, [eax]
		mov	[esp], eax
		call	dword ptr [edx+0Ch]
		mov	ecx, [ebp+var_50]
		mov	edx, [ebp+arg_0]
		mov	[ecx+30h], eax
		mov	eax, [ebp+var_5C]
		mov	[ecx+34h], eax
		mov	eax, [edx+2Ch]
		mov	edx, [eax]
		mov	[esp+4], ecx
		mov	[esp], eax
		call	dword ptr [edx+1Ch]
		mov	[ebp+var_51], 1

loc_6ED5434A:				; CODE XREF: sub_6ED54280+3Fj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_51]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED54360:				; CODE XREF: sub_6ED54280+61j
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ebp+var_14], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	dword ptr [esp], 44h ; size_t
		mov	[ebp+var_48], 5
		call	sub_6ED988D0
		mov	[ebp+var_58], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_58]
		mov	dword ptr [esp+8], 0
		add	eax, 30h
		mov	[ebp+var_60], eax
		mov	ecx, [ebp+var_60]
		lea	eax, [ebp+var_14]
		mov	[ebp+var_68], edx
		mov	edx, [ebp+arg_0]
		mov	[esp+18h], eax
		lea	eax, [ebp+var_10]
		mov	[esp+14h], eax
		lea	eax, [ebp+var_C]
		mov	[esp+0Ch], ecx
		mov	ecx, [ebp+var_58]
		mov	[esp+10h], eax
		mov	eax, [edx+28h]
		mov	[ebp+var_48], 4
		mov	[esp], ecx
		mov	[esp+4], eax
		call	sub_6ED49660
		mov	edx, [ebp+var_58]
		mov	eax, [ebp+var_14]
		mov	[ebp+var_64], edx
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED544D0

loc_6ED543FC:				; CODE XREF: sub_6ED54280+263j
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED544B8

loc_6ED5440D:				; CODE XREF: sub_6ED54280+24Bj
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED544A0

loc_6ED5441E:				; CODE XREF: sub_6ED54280+233j
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		mov	eax, [ebp+var_58]
		add	eax, 20h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	edx, [ebp+var_58]
		lock dec dword ptr [edx+4]
		setnz	al
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+28h]
		mov	ecx, [ebp+var_58]
		mov	eax, [eax+3Ch]
		mov	edx, [eax]
		mov	[esp+4], ecx
		mov	[esp], eax
		call	dword ptr [edx+1Ch]
		mov	eax, [ebp+var_60]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_64], 0
		mov	[esp+4], eax
		mov	eax, [edx+28h]
		mov	[esp], eax
		call	sub_6ED540E0
		jmp	loc_6ED542F9
; ---------------------------------------------------------------------------
		align 10h

loc_6ED54480:				; CODE XREF: sub_6ED54280+50j
		mov	edx, [ebp+arg_4]
		mov	[esp], eax
		mov	[ebp+var_48], 6
		mov	[esp+4], edx
		call	sub_6ED52370
		jmp	loc_6ED542F9
; ---------------------------------------------------------------------------
		align 10h

loc_6ED544A0:				; CODE XREF: sub_6ED54280+198j
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5441E
; ---------------------------------------------------------------------------

loc_6ED544B8:				; CODE XREF: sub_6ED54280+187j
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5440D
; ---------------------------------------------------------------------------

loc_6ED544D0:				; CODE XREF: sub_6ED54280+176j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_48], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED543FC
sub_6ED54280	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED544E8	proc near		; DATA XREF: sub_6ED54280+23o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	ecx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-7Ch], ecx
		jz	loc_6ED545DC
		cmp	eax, 2
		jz	loc_6ED545B1
		cmp	eax, 3
		jz	short loc_6ED5456E
		cmp	eax, 4
		xchg	ax, ax
		jz	short loc_6ED54579
		cmp	eax, 5
		jz	short loc_6ED5453C
		cmp	dword ptr [ebp-64h], 0
		mov	[ebp-70h], ecx
		xchg	ax, ax
		jz	short loc_6ED54536
		mov	edx, [ebp-64h]
		mov	eax, [edx]
		mov	[esp+0], edx
		mov	eax, [eax+4]
		mov	dword ptr [ebp-48h], 0
		call	eax

loc_6ED54536:				; CODE XREF: sub_6ED544E8+38j
		mov	ecx, [ebp-70h]
		mov	[ebp-7Ch], ecx

loc_6ED5453C:				; CODE XREF: sub_6ED544E8+2Dj
					; sub_6ED544E8+C7j
		mov	ecx, [ebp-7Ch]
		cmp	dword ptr [ebp-50h], 0
		mov	[ebp-6Ch], ecx
		jz	short loc_6ED5455C
		mov	edx, [ebp-50h]
		mov	eax, [edx]
		mov	[esp+0], edx
		mov	eax, [eax+4]
		mov	dword ptr [ebp-48h], 0
		call	eax

loc_6ED5455C:				; CODE XREF: sub_6ED544E8+5Ej
		mov	ecx, [ebp-6Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED5456E:				; CODE XREF: sub_6ED544E8+21j
		mov	eax, [ebp-58h]
		mov	[esp+0], eax
		call	sub_6ED988B0

loc_6ED54579:				; CODE XREF: sub_6ED544E8+28j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED5458B:				; CODE XREF: sub_6ED544E8+F2j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED5459D:				; CODE XREF: sub_6ED544E8+11Dj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		jmp	short loc_6ED5453C
; ---------------------------------------------------------------------------

loc_6ED545B1:				; CODE XREF: sub_6ED544E8+18j
		mov	ecx, [ebp-7Ch]
		cmp	dword ptr [ebp-68h], 0
		mov	[ebp-78h], ecx
		jz	short loc_6ED545D4
		mov	edx, [ebp-68h]
		mov	ecx, [ebp-64h]
		mov	eax, [edx]
		mov	[esp+0], ecx
		mov	eax, [eax+4]
		mov	dword ptr [ebp-48h], 0
		call	eax

loc_6ED545D4:				; CODE XREF: sub_6ED544E8+D3j
		mov	eax, [ebp-78h]
		mov	[ebp-7Ch], eax
		jmp	short loc_6ED5458B
; ---------------------------------------------------------------------------

loc_6ED545DC:				; CODE XREF: sub_6ED544E8+Fj
		mov	edx, [ebp-7Ch]
		cmp	dword ptr [ebp-68h], 0
		mov	[ebp-74h], edx
		jz	short loc_6ED545FF
		mov	ecx, [ebp-68h]
		mov	edx, [ebp-64h]
		mov	eax, [ecx]
		mov	[esp+0], edx
		mov	eax, [eax+4]
		mov	dword ptr [ebp-48h], 0
		call	eax

loc_6ED545FF:				; CODE XREF: sub_6ED544E8+FEj
		mov	ecx, [ebp-74h]
		mov	[ebp-7Ch], ecx
		jmp	short loc_6ED5459D
sub_6ED544E8	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  64. _ZN12QDomDocument21createEntityReferenceERK7QString

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QDomDocument21createEntityReferenceERK7QString
_ZN12QDomDocument21createEntityReferenceERK7QString proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A31E
		mov	[ebp+var_18], offset sub_6ED546AF
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED54680

loc_6ED54648:				; CODE XREF: _ZN12QDomDocument21createEntityReferenceERK7QString+9Dj
		mov	edx, [ebp+arg_8]
		mov	[esp], eax
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_6ED540E0
		mov	edx, [ebp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short loc_6ED5466E
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED5466E:				; CODE XREF: _ZN12QDomDocument21createEntityReferenceERK7QString+55j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------

loc_6ED54680:				; CODE XREF: _ZN12QDomDocument21createEntityReferenceERK7QString+36j
		mov	dword ptr [esp], 44h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	sub_6ED4F660
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+arg_4]
		mov	[edx], eax
		jmp	short loc_6ED54648
_ZN12QDomDocument21createEntityReferenceERK7QString endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED546AF	proc near		; DATA XREF: _ZN12QDomDocument21createEntityReferenceERK7QString+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-40h]
		mov	[ebp-44h], eax
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED546AF	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED546E0	proc near		; CODE XREF: _ZN12QDomDocument17createAttributeNSERK7QStringS2_+50p

var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_9		= byte ptr -9
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A324
		mov	[ebp+var_28], offset sub_6ED547C0
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_8]
		lea	eax, [ebp+var_10]
		lea	ecx, [ebp+var_9]
		mov	dword ptr [esp], 1
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED53CB0
		cmp	[ebp+var_9], 0
		jz	loc_6ED547B7
		mov	dword ptr [esp], 3Ch ; size_t
		mov	[ebp+var_48], 2
		call	sub_6ED988D0
		mov	[ebp+var_50], eax
		mov	edx, [ebp+var_50]
		mov	[ebp+var_54], eax
		lea	eax, [ebp+var_10]
		mov	[esp+10h], eax
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+8], 0
		mov	[esp], edx
		mov	[ebp+var_48], 1
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+4], eax
		call	sub_6ED53AF0
		mov	edx, [ebp+var_50]
		lock dec dword ptr [edx+4]
		setnz	al

loc_6ED54787:				; CODE XREF: sub_6ED546E0+DEj
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED547A7
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED547A7:				; CODE XREF: sub_6ED546E0+B2j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_54]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED547B7:				; CODE XREF: sub_6ED546E0+4Fj
		mov	[ebp+var_54], 0
		jmp	short loc_6ED54787
sub_6ED546E0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED547C0	proc near		; DATA XREF: sub_6ED546E0+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-58h], eax
		jz	short loc_6ED547DA
		mov	edx, [ebp-50h]
		mov	[esp+0], edx
		call	sub_6ED988B0

loc_6ED547DA:				; CODE XREF: sub_6ED547C0+Dj
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED547C0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  61. _ZN12QDomDocument17createAttributeNSERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QDomDocument17createAttributeNSERK7QStringS2_
_ZN12QDomDocument17createAttributeNSERK7QStringS2_ proc	near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A32C
		mov	[ebp+var_18], offset sub_6ED548A6
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED54877

loc_6ED54838:				; CODE XREF: _ZN12QDomDocument17createAttributeNSERK7QStringS2_+A4j
		mov	edx, [ebp+arg_C]
		mov	[esp], eax
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+8], edx
		mov	edx, [ebp+arg_8]
		mov	[esp+4], edx
		call	sub_6ED546E0
		mov	edx, [ebp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short loc_6ED54865
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED54865:				; CODE XREF: _ZN12QDomDocument17createAttributeNSERK7QStringS2_+5Cj
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------

loc_6ED54877:				; CODE XREF: _ZN12QDomDocument17createAttributeNSERK7QStringS2_+36j
		mov	dword ptr [esp], 44h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	sub_6ED4F660
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+arg_4]
		mov	[edx], eax
		jmp	short loc_6ED54838
_ZN12QDomDocument17createAttributeNSERK7QStringS2_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED548A6	proc near		; DATA XREF: _ZN12QDomDocument17createAttributeNSERK7QStringS2_+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-40h]
		mov	[ebp-44h], eax
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED548A6	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED548D0	proc near		; CODE XREF: _ZN12QDomDocument15createAttributeERK7QString+49p

var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_9		= byte ptr -9
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A332
		mov	[ebp+var_28], offset sub_6ED549A9
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_10]
		lea	ecx, [ebp+var_9]
		mov	dword ptr [esp], 0
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED53CB0
		cmp	[ebp+var_9], 0
		jz	short loc_6ED549A0
		mov	dword ptr [esp], 3Ch ; size_t
		mov	[ebp+var_48], 2
		call	sub_6ED988D0
		mov	[ebp+var_50], eax
		mov	edx, [ebp+var_50]
		mov	[ebp+var_54], eax
		lea	eax, [ebp+var_10]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_0]
		mov	dword ptr [esp+8], 0
		mov	[esp], edx
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		call	sub_6ED49D60
		mov	edx, [ebp+var_50]
		lock dec dword ptr [edx+4]
		setnz	al

loc_6ED5496C:				; CODE XREF: sub_6ED548D0+D7j
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5498C
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED5498C:				; CODE XREF: sub_6ED548D0+A7j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_54]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED549A0:				; CODE XREF: sub_6ED548D0+4Fj
		mov	[ebp+var_54], 0
		jmp	short loc_6ED5496C
sub_6ED548D0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED549A9	proc near		; DATA XREF: sub_6ED548D0+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-58h], eax
		jz	short loc_6ED549C3
		mov	edx, [ebp-50h]
		mov	[esp+0], edx
		call	sub_6ED988B0

loc_6ED549C3:				; CODE XREF: sub_6ED549A9+Dj
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED549A9	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  59. _ZN12QDomDocument15createAttributeERK7QString

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QDomDocument15createAttributeERK7QString
_ZN12QDomDocument15createAttributeERK7QString proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A33A
		mov	[ebp+var_18], offset sub_6ED54A8F
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED54A60

loc_6ED54A28:				; CODE XREF: _ZN12QDomDocument15createAttributeERK7QString+9Dj
		mov	edx, [ebp+arg_8]
		mov	[esp], eax
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_6ED548D0
		mov	edx, [ebp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short loc_6ED54A4E
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED54A4E:				; CODE XREF: _ZN12QDomDocument15createAttributeERK7QString+55j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------

loc_6ED54A60:				; CODE XREF: _ZN12QDomDocument15createAttributeERK7QString+36j
		mov	dword ptr [esp], 44h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	sub_6ED4F660
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+arg_4]
		mov	[edx], eax
		jmp	short loc_6ED54A28
_ZN12QDomDocument15createAttributeERK7QString endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED54A8F	proc near		; DATA XREF: _ZN12QDomDocument15createAttributeERK7QString+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-40h]
		mov	[ebp-44h], eax
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED54A8F	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED54AC0	proc near		; CODE XREF: _ZN12QDomDocument15createElementNSERK7QStringS2_+50p
					; sub_6ED555A0+5Ap

var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_9		= byte ptr -9
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A340
		mov	[ebp+var_28], offset sub_6ED54BA0
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_8]
		lea	eax, [ebp+var_10]
		lea	ecx, [ebp+var_9]
		mov	dword ptr [esp], 1
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED53CB0
		cmp	[ebp+var_9], 0
		jz	loc_6ED54B97
		mov	dword ptr [esp], 3Ch ; size_t
		mov	[ebp+var_48], 2
		call	sub_6ED988D0
		mov	[ebp+var_50], eax
		mov	edx, [ebp+var_50]
		mov	[ebp+var_54], eax
		lea	eax, [ebp+var_10]
		mov	[esp+10h], eax
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+8], 0
		mov	[esp], edx
		mov	[ebp+var_48], 1
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+4], eax
		call	sub_6ED538D0
		mov	edx, [ebp+var_50]
		lock dec dword ptr [edx+4]
		setnz	al

loc_6ED54B67:				; CODE XREF: sub_6ED54AC0+DEj
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED54B87
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED54B87:				; CODE XREF: sub_6ED54AC0+B2j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_54]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED54B97:				; CODE XREF: sub_6ED54AC0+4Fj
		mov	[ebp+var_54], 0
		jmp	short loc_6ED54B67
sub_6ED54AC0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED54BA0	proc near		; DATA XREF: sub_6ED54AC0+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-58h], eax
		jz	short loc_6ED54BBA
		mov	edx, [ebp-50h]
		mov	[esp+0], edx
		call	sub_6ED988B0

loc_6ED54BBA:				; CODE XREF: sub_6ED54BA0+Dj
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED54BA0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  60. _ZN12QDomDocument15createElementNSERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QDomDocument15createElementNSERK7QStringS2_
_ZN12QDomDocument15createElementNSERK7QStringS2_ proc near
					; CODE XREF: _ZN18QDomImplementation14createDocumentERK7QStringS2_RK16QDomDocumentType+6Ap

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A348
		mov	[ebp+var_18], offset sub_6ED54C86
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED54C57

loc_6ED54C18:				; CODE XREF: _ZN12QDomDocument15createElementNSERK7QStringS2_+A4j
		mov	edx, [ebp+arg_C]
		mov	[esp], eax
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+8], edx
		mov	edx, [ebp+arg_8]
		mov	[esp+4], edx
		call	sub_6ED54AC0
		mov	edx, [ebp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short loc_6ED54C45
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED54C45:				; CODE XREF: _ZN12QDomDocument15createElementNSERK7QStringS2_+5Cj
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------

loc_6ED54C57:				; CODE XREF: _ZN12QDomDocument15createElementNSERK7QStringS2_+36j
		mov	dword ptr [esp], 44h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	sub_6ED4F660
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+arg_4]
		mov	[edx], eax
		jmp	short loc_6ED54C18
_ZN12QDomDocument15createElementNSERK7QStringS2_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED54C86	proc near		; DATA XREF: _ZN12QDomDocument15createElementNSERK7QStringS2_+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-40h]
		mov	[ebp-44h], eax
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED54C86	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 245. _ZN18QDomImplementation14createDocumentERK7QStringS2_RK16QDomDocumentType

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN18QDomImplementation14createDocumentERK7QStringS2_RK16QDomDocumentType
_ZN18QDomImplementation14createDocumentERK7QStringS2_RK16QDomDocumentType proc near

var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= byte ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A34E
		mov	[ebp+var_28], offset sub_6ED54DAB
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_10]
		lea	edx, [ebp+var_C]
		mov	[esp], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	_ZN12QDomDocumentC1ERK16QDomDocumentType
		mov	edx, [ebp+arg_C]
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		mov	[esp+0Ch], edx
		mov	edx, [ebp+arg_8]
		mov	[esp+8], edx
		lea	edx, [ebp+var_C]
		mov	[esp+4], edx
		call	_ZN12QDomDocument15createElementNSERK7QStringS2_
		mov	eax, [ebp+var_10]
		sub	esp, 4
		test	eax, eax
		jz	short loc_6ED54DA0
		lea	edx, [ebp+var_10]
		lea	eax, [ebp+var_14]
		mov	[esp+8], edx
		lea	edx, [ebp+var_C]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	_ZN8QDomNode11appendChildERKS_
		sub	esp, 4
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		call	_ZN8QDomNodeD1Ev
		mov	eax, [ebp+var_C]
		mov	edx, [ebp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short loc_6ED54D6A
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED54D6A:				; CODE XREF: _ZN18QDomImplementation14createDocumentERK7QStringS2_RK16QDomDocumentType+B1j
					; _ZN18QDomImplementation14createDocumentERK7QStringS2_RK16QDomDocumentType+F9j
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	_ZN8QDomNodeD2Ev
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	_ZN8QDomNodeD2Ev
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------

loc_6ED54DA0:				; CODE XREF: _ZN18QDomImplementation14createDocumentERK7QStringS2_RK16QDomDocumentType+77j
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 0
		jmp	short loc_6ED54D6A
_ZN18QDomImplementation14createDocumentERK7QStringS2_RK16QDomDocumentType endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED54DAB	proc near		; DATA XREF: _ZN18QDomImplementation14createDocumentERK7QStringS2_RK16QDomDocumentType+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-50h], eax
		jz	short loc_6ED54DCC
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	_ZN8QDomNodeD2Ev

loc_6ED54DCC:				; CODE XREF: sub_6ED54DAB+Dj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	_ZN8QDomNodeD2Ev
		mov	edx, [ebp-50h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED54DAB	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED54DF0	proc near		; CODE XREF: _ZN12QDomDocument13createElementERK7QString+49p
					; sub_6ED555A0+2F7p

var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_9		= byte ptr -9
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A356
		mov	[ebp+var_28], offset sub_6ED54EC9
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_10]
		lea	ecx, [ebp+var_9]
		mov	dword ptr [esp], 0
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED53CB0
		cmp	[ebp+var_9], 0
		jz	short loc_6ED54EC0
		mov	dword ptr [esp], 3Ch ; size_t
		mov	[ebp+var_48], 2
		call	sub_6ED988D0
		mov	[ebp+var_50], eax
		mov	edx, [ebp+var_50]
		mov	[ebp+var_54], eax
		lea	eax, [ebp+var_10]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_0]
		mov	dword ptr [esp+8], 0
		mov	[esp], edx
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		call	sub_6ED4A680
		mov	edx, [ebp+var_50]
		lock dec dword ptr [edx+4]
		setnz	al

loc_6ED54E8C:				; CODE XREF: sub_6ED54DF0+D7j
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED54EAC
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED54EAC:				; CODE XREF: sub_6ED54DF0+A7j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_54]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED54EC0:				; CODE XREF: sub_6ED54DF0+4Fj
		mov	[ebp+var_54], 0
		jmp	short loc_6ED54E8C
sub_6ED54DF0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED54EC9	proc near		; DATA XREF: sub_6ED54DF0+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-58h], eax
		jz	short loc_6ED54EE3
		mov	edx, [ebp-50h]
		mov	[esp+0], edx
		call	sub_6ED988B0

loc_6ED54EE3:				; CODE XREF: sub_6ED54EC9+Dj
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED54EC9	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  57. _ZN12QDomDocument13createElementERK7QString

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QDomDocument13createElementERK7QString
_ZN12QDomDocument13createElementERK7QString proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A35E
		mov	[ebp+var_18], offset sub_6ED54FAF
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED54F80

loc_6ED54F48:				; CODE XREF: _ZN12QDomDocument13createElementERK7QString+9Dj
		mov	edx, [ebp+arg_8]
		mov	[esp], eax
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_6ED54DF0
		mov	edx, [ebp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short loc_6ED54F6E
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED54F6E:				; CODE XREF: _ZN12QDomDocument13createElementERK7QString+55j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------

loc_6ED54F80:				; CODE XREF: _ZN12QDomDocument13createElementERK7QString+36j
		mov	dword ptr [esp], 44h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	sub_6ED4F660
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+arg_4]
		mov	[edx], eax
		jmp	short loc_6ED54F48
_ZN12QDomDocument13createElementERK7QString endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED54FAF	proc near		; DATA XREF: _ZN12QDomDocument13createElementERK7QString+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-40h]
		mov	[ebp-44h], eax
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED54FAF	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED54FE0	proc near		; CODE XREF: sub_6ED55250+29p
					; _ZN12QDomDocument27createProcessingInstructionERK7QStringS2_+50p

var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_9		= byte ptr -9
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 98h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset dword_6ED9A364
		mov	[ebp+var_38], offset sub_6ED551ED
		mov	[ebp+var_34], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, ds:dword_6EDA8004
		test	edx, edx
		jnz	loc_6ED55120
		mov	edx, [ebp+arg_8]
		mov	[ebp+var_9], 1
		mov	eax, [edx]
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED55032:				; CODE XREF: sub_6ED54FE0+1EFj
					; sub_6ED54FE0+208j
		cmp	[ebp+var_9], 0
		jz	loc_6ED55110
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_14]
		lea	ecx, [ebp+var_9]
		mov	dword ptr [esp], 0
		mov	[ebp+var_58], 4
		call	sub_6ED53CB0
		cmp	[ebp+var_9], 0
		mov	[ebp+var_64], 0
		jz	short loc_6ED550B7
		mov	dword ptr [esp], 38h ; size_t
		mov	[ebp+var_58], 3
		call	sub_6ED988D0
		mov	[ebp+var_68], eax
		mov	edx, [ebp+var_68]
		mov	[ebp+var_64], eax
		lea	eax, [ebp+var_10]
		mov	[esp+10h], eax
		lea	eax, [ebp+var_14]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_0]
		mov	dword ptr [esp+8], 0
		mov	[esp], edx
		mov	[ebp+var_58], 2
		mov	[esp+4], eax
		call	sub_6ED49380
		mov	edx, [ebp+var_68]
		lock dec dword ptr [edx+4]
		setnz	al

loc_6ED550B7:				; CODE XREF: sub_6ED54FE0+83j
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED550F4

loc_6ED550C4:				; CODE XREF: sub_6ED54FE0+127j
					; sub_6ED54FE0+137j
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED550E4
		mov	eax, [ebp+var_10]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED550E4:				; CODE XREF: sub_6ED54FE0+EFj
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_64]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED550F4:				; CODE XREF: sub_6ED54FE0+E2j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_58], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED550C4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED55110:				; CODE XREF: sub_6ED54FE0+56j
		mov	[ebp+var_64], 0
		jmp	short loc_6ED550C4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED55120:				; CODE XREF: sub_6ED54FE0+3Aj
		mov	edx, [ebp+arg_8]
		lea	ecx, [ebp+var_9]
		lea	eax, [ebp+var_18]
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED50340
		cmp	[ebp+var_9], 0
		jz	short loc_6ED551B6
		mov	eax, ds:_ZNK7QString7indexOfERK13QLatin1StringiN2Qt15CaseSensitivityE
		mov	[ebp+var_60], eax
		jmp	short loc_6ED5516D
; ---------------------------------------------------------------------------

loc_6ED55145:				; CODE XREF: sub_6ED54FE0+1BEj
		cmp	ds:dword_6EDA8004, 2
		jz	short loc_6ED551B2
		lea	edx, [ebp+var_18]
		mov	dword ptr [esp+8], 2
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_58], 1
		call	ds:_ZN7QString6removeEii

loc_6ED5516D:				; CODE XREF: sub_6ED54FE0+163j
		lea	edx, [ebp+var_1C]
		lea	eax, [ebp+var_18]
		mov	[ebp+var_1C], offset a?_4 ; "?>"
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_58], 1
		call	[ebp+var_60]
		cmp	eax, 0FFFFFFFFh
		jnz	short loc_6ED55145
		mov	eax, [ebp+var_18]
		mov	[ebp+var_9], 1
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax]
		setnz	dl
		jmp	short loc_6ED551C4
; ---------------------------------------------------------------------------

loc_6ED551B2:				; CODE XREF: sub_6ED54FE0+16Cj
		mov	[ebp+var_9], 0

loc_6ED551B6:				; CODE XREF: sub_6ED54FE0+159j
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED551C4:				; CODE XREF: sub_6ED54FE0+1D0j
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED55032
		mov	eax, [ebp+var_18]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED55032
sub_6ED54FE0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED551ED	proc near		; DATA XREF: sub_6ED54FE0+20o
		add	ebp, 8
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-6Ch], edx
		jz	short loc_6ED5522C
		cmp	eax, 2
		jz	short loc_6ED55237
		cmp	eax, 3
		jz	short loc_6ED55249
		lea	eax, [ebp-18h]

loc_6ED5520B:				; CODE XREF: sub_6ED551ED+5Fj
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		mov	eax, [ebp-6Ch]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED5522C:				; CODE XREF: sub_6ED551ED+Fj
		mov	eax, [ebp-68h]
		mov	[esp+0], eax
		call	sub_6ED988B0

loc_6ED55237:				; CODE XREF: sub_6ED551ED+14j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560

loc_6ED55249:				; CODE XREF: sub_6ED551ED+19j
		lea	eax, [ebp-10h]
		jmp	short loc_6ED5520B
sub_6ED551ED	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED55250	proc near		; DATA XREF: .rdata:6EDA6C54o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_8], esi
		mov	esi, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_C], ebx
		mov	[esp+1Ch+var_4], edi
		mov	[esp+1Ch+var_14], eax
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [esi+28h]
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED54FE0
		mov	ebx, eax
		xor	eax, eax
		test	ebx, ebx
		jz	short loc_6ED552B8
		mov	eax, [esi+38h]
		mov	edx, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+8]
		mov	edi, eax
		mov	eax, [esi+38h]
		mov	edx, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+0Ch]
		mov	[ebx+34h], edi
		mov	[ebx+30h], eax
		mov	eax, [esi+2Ch]
		mov	edx, [eax]
		mov	[esp+1Ch+var_18], ebx
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+1Ch]
		mov	eax, 1

loc_6ED552B8:				; CODE XREF: sub_6ED55250+34j
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_6ED55250	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  66. _ZN12QDomDocument27createProcessingInstructionERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QDomDocument27createProcessingInstructionERK7QStringS2_
_ZN12QDomDocument27createProcessingInstructionERK7QStringS2_ proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A370
		mov	[ebp+var_18], offset sub_6ED55376
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED55347

loc_6ED55308:				; CODE XREF: _ZN12QDomDocument27createProcessingInstructionERK7QStringS2_+A4j
		mov	edx, [ebp+arg_C]
		mov	[esp], eax
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+8], edx
		mov	edx, [ebp+arg_8]
		mov	[esp+4], edx
		call	sub_6ED54FE0
		mov	edx, [ebp+arg_0]
		test	eax, eax
		mov	[edx], eax
		jz	short loc_6ED55335
		lock inc dword ptr [eax+4]
		setnz	dl

loc_6ED55335:				; CODE XREF: _ZN12QDomDocument27createProcessingInstructionERK7QStringS2_+5Cj
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------

loc_6ED55347:				; CODE XREF: _ZN12QDomDocument27createProcessingInstructionERK7QStringS2_+36j
		mov	dword ptr [esp], 44h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	sub_6ED4F660
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+arg_4]
		mov	[edx], eax
		jmp	short loc_6ED55308
_ZN12QDomDocument27createProcessingInstructionERK7QStringS2_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED55376	proc near		; DATA XREF: _ZN12QDomDocument27createProcessingInstructionERK7QStringS2_+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-40h]
		mov	[ebp-44h], eax
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED55376	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED553A0	proc near		; CODE XREF: sub_6ED555A0+163p
					; _ZN11QDomElement14setAttributeNSE7QStringRKS0_d+96p ...

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A376
		mov	[ebp+var_28], offset sub_6ED5553F
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+arg_8]
		lea	edx, [ebp+var_10]
		lea	eax, [ebp+var_C]
		mov	dword ptr [esp], 1
		mov	[ebp+var_48], 2
		call	sub_6ED53610
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_10]
		mov	[esp+8], eax
		mov	[esp+4], edx
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+38h]
		mov	[esp], eax
		call	sub_6ED45F90
		test	eax, eax
		mov	[ebp+var_50], eax
		jz	loc_6ED554B5
		mov	edx, [ebp+var_50]
		mov	eax, [edx]
		mov	edx, [ebp+arg_C]
		mov	[esp+4], edx
		mov	edx, [ebp+var_50]
		mov	[esp], edx
		mov	eax, [eax+8]
		mov	[ebp+var_48], 2
		call	eax
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_50]
		add	eax, 24h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_

loc_6ED55460:				; CODE XREF: sub_6ED553A0+19Aj
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED554A0

loc_6ED5546D:				; CODE XREF: sub_6ED553A0+113j
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5548D
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED5548D:				; CODE XREF: sub_6ED553A0+D8j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED554A0:				; CODE XREF: sub_6ED553A0+CBj
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED5546D
; ---------------------------------------------------------------------------

loc_6ED554B5:				; CODE XREF: sub_6ED553A0+86j
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED41890
		mov	[ebp+var_58], eax
		mov	dword ptr [esp], 3Ch ; size_t
		call	sub_6ED988D0
		mov	edx, [ebp+arg_8]
		mov	[ebp+var_54], eax
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_48], 1
		mov	[esp+10h], edx
		mov	edx, [ebp+arg_0]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+var_58]
		mov	[esp+8], edx
		mov	edx, [ebp+var_54]
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_6ED53AF0
		mov	edx, [ebp+var_54]
		mov	eax, [edx]
		mov	edx, [ebp+arg_C]
		mov	[esp+4], edx
		mov	edx, [ebp+var_54]
		mov	[esp], edx
		mov	eax, [eax+8]
		mov	[ebp+var_48], 2
		call	eax
		mov	edx, [ebp+var_54]
		lock dec dword ptr [edx+4]
		setnz	al
		mov	[esp+4], edx
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+38h]
		mov	[esp], eax
		call	sub_6ED45D90
		jmp	loc_6ED55460
sub_6ED553A0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5553F	proc near		; DATA XREF: sub_6ED553A0+23o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-5Ch], edx
		jz	short loc_6ED55560
		cmp	eax, 2
		jz	short loc_6ED55572
		mov	eax, [ebp-54h]
		mov	[esp+0], eax
		call	sub_6ED988B0

loc_6ED55560:				; CODE XREF: sub_6ED5553F+Fj
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED55572:				; CODE XREF: sub_6ED5553F+14j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED5553F	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED555A0	proc near		; DATA XREF: .rdata:6EDA6C44o

var_70		= dword	ptr -70h
var_69		= byte ptr -69h
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset dword_6ED9A380
		mov	[ebp+var_38], offset sub_6ED558A4
		mov	[ebp+var_34], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		cmp	byte ptr [edx+35h], 0
		jz	loc_6ED55880
		mov	eax, [ebp+arg_4]
		mov	ecx, [ebp+arg_C]
		mov	[esp+4], eax
		mov	[esp+8], ecx
		mov	eax, [edx+28h]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED54AC0
		mov	[ebp+var_68], eax

loc_6ED55602:				; CODE XREF: sub_6ED555A0+2FFj
		mov	ecx, [ebp+var_68]
		mov	[ebp+var_69], 0
		test	ecx, ecx
		jz	loc_6ED5586C
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+38h]
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+8]
		mov	[ebp+var_58], 0FFFFFFFFh
		call	eax
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_70], eax
		mov	eax, [edx+38h]
		mov	edx, [eax]
		mov	[esp], eax
		call	dword ptr [edx+0Ch]
		mov	ecx, [ebp+var_68]
		mov	edx, [ebp+arg_0]
		mov	[ecx+30h], eax
		mov	eax, [ebp+var_70]
		mov	[ecx+34h], eax
		mov	eax, [edx+2Ch]
		mov	edx, [eax]
		mov	[esp+4], ecx
		mov	[esp], eax
		call	dword ptr [edx+1Ch]
		mov	eax, [ebp+var_68]
		mov	ecx, [ebp+arg_0]
		mov	edx, ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_60], 0
		mov	[ecx+2Ch], eax
		mov	[ebp+var_64], edx
		jmp	loc_6ED55754
; ---------------------------------------------------------------------------

loc_6ED55675:				; CODE XREF: sub_6ED555A0+1D6j
		mov	eax, [ebp+var_60]
		lea	ecx, [ebp+var_14]
		mov	edx, [ebp+arg_10]
		mov	[esp], ecx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	[esp+4], edx
		call	_ZNK14QXmlAttributes5valueEi
		mov	edx, [ebp+var_60]
		lea	eax, [ebp+var_10]
		mov	ecx, [ebp+arg_10]
		mov	[ebp+var_58], 5
		sub	esp, 4
		mov	[esp+8], edx
		mov	[esp+4], ecx
		mov	[esp], eax
		call	_ZNK14QXmlAttributes5qNameEi
		mov	edx, [ebp+var_60]
		sub	esp, 4
		mov	ecx, [ebp+arg_10]
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_58], 4
		mov	[esp+8], edx
		mov	[esp+4], ecx
		call	_ZNK14QXmlAttributes3uriEi
		mov	edx, [ebp+arg_0]
		sub	esp, 4
		lea	eax, [ebp+var_14]
		mov	[esp+0Ch], eax
		lea	eax, [ebp+var_10]
		mov	[esp+8], eax
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [edx+2Ch]
		mov	[ebp+var_58], 3
		mov	[esp], eax
		call	sub_6ED553A0
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED55850

loc_6ED55719:				; CODE XREF: sub_6ED555A0+2C3j
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED55832

loc_6ED5572A:				; CODE XREF: sub_6ED555A0+2A5j
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED55750
		mov	eax, [ebp+var_14]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	esi, [esi+0]

loc_6ED55750:				; CODE XREF: sub_6ED555A0+195j
					; sub_6ED555A0+25Dj ...
		add	[ebp+var_60], 1

loc_6ED55754:				; CODE XREF: sub_6ED555A0+D0j
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	_ZNK14QXmlAttributes6lengthEv
		cmp	[ebp+var_60], eax
		jge	loc_6ED55868
		mov	ecx, [ebp+arg_0]
		cmp	byte ptr [ecx+35h], 0
		jnz	loc_6ED55675
		mov	eax, [ebp+var_60]
		lea	ecx, [ebp+var_1C]
		mov	edx, [ebp+arg_10]
		mov	[esp], ecx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	[esp+4], edx
		call	_ZNK14QXmlAttributes5valueEi
		mov	eax, [ebp+var_60]
		lea	ecx, [ebp+var_18]
		mov	edx, [ebp+arg_10]
		mov	[ebp+var_58], 2
		sub	esp, 4
		mov	[esp+8], eax
		mov	[esp+4], edx
		mov	[esp], ecx
		call	_ZNK14QXmlAttributes5qNameEi
		mov	ecx, [ebp+arg_0]
		sub	esp, 4
		lea	eax, [ebp+var_1C]
		lea	edx, [ebp+var_18]
		mov	[esp+8], eax
		mov	[esp+4], edx
		mov	eax, [ecx+2Ch]
		mov	[ebp+var_58], 1
		mov	[esp], eax
		call	sub_6ED49E10
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED55820

loc_6ED557F2:				; CODE XREF: sub_6ED555A0+290j
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED55750
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED55750
; ---------------------------------------------------------------------------
		align 10h

loc_6ED55820:				; CODE XREF: sub_6ED555A0+250j
		mov	eax, [ebp+var_18]
		mov	[ebp+var_58], 2
		mov	[esp], eax
		call	[ebp+var_64]
		jmp	short loc_6ED557F2
; ---------------------------------------------------------------------------

loc_6ED55832:				; CODE XREF: sub_6ED555A0+184j
		mov	eax, [ebp+var_10]
		mov	[ebp+var_58], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5572A
; ---------------------------------------------------------------------------
		align 10h

loc_6ED55850:				; CODE XREF: sub_6ED555A0+173j
		mov	eax, [ebp+var_C]
		mov	[ebp+var_58], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED55719
; ---------------------------------------------------------------------------

loc_6ED55868:				; CODE XREF: sub_6ED555A0+1C9j
		mov	[ebp+var_69], 1

loc_6ED5586C:				; CODE XREF: sub_6ED555A0+6Bj
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_69]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED55880:				; CODE XREF: sub_6ED555A0+39j
		mov	eax, [ebp+arg_C]
		mov	edx, [ebp+arg_0]
		mov	[esp+4], eax
		mov	eax, [edx+28h]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED54DF0
		mov	[ebp+var_68], eax
		jmp	loc_6ED55602
sub_6ED555A0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED558A4	proc near		; DATA XREF: sub_6ED555A0+20o
		add	ebp, 8
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-74h], edx
		jz	short loc_6ED558D6
		cmp	eax, 2
		jz	short loc_6ED558FA
		cmp	eax, 3
		jz	short loc_6ED5590C
		cmp	eax, 4
		jz	short loc_6ED5591E
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560

loc_6ED558D6:				; CODE XREF: sub_6ED558A4+Fj
		lea	eax, [ebp-1Ch]

loc_6ED558D9:				; CODE XREF: sub_6ED558A4+7Dj
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-74h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED558FA:				; CODE XREF: sub_6ED558A4+14j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560

loc_6ED5590C:				; CODE XREF: sub_6ED558A4+19j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560

loc_6ED5591E:				; CODE XREF: sub_6ED558A4+1Ej
		lea	eax, [ebp-14h]
		jmp	short loc_6ED558D9
sub_6ED558A4	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  25. _ZN11QDomElement14setAttributeNSE7QStringRKS0_d

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl ZN11QDomElement14setAttributeNSE7QStringRKS0_d(int, int, int, double)
		public _ZN11QDomElement14setAttributeNSE7QStringRKS0_d
_ZN11QDomElement14setAttributeNSE7QStringRKS0_d	proc near

var_58		= qword	ptr -58h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= qword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		lea	eax, [ebp+var_8]
		fld	[ebp+arg_C]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		fstp	[ebp+var_58]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A38E
		mov	[ebp+var_28], offset sub_6ED55A05
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED559D8
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	dword ptr [esp+10h], 6
		lea	eax, [ebp+var_C]
		mov	dword ptr [esp+0Ch], 67h
		fld	[ebp+var_58]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN7QString6setNumEdci
		lea	eax, [ebp+var_C]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[esp], eax
		call	sub_6ED553A0
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED559E5

loc_6ED559D8:				; CODE XREF: _ZN11QDomElement14setAttributeNSE7QStringRKS0_d+3Fj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED559E5:				; CODE XREF: _ZN11QDomElement14setAttributeNSE7QStringRKS0_d+A6j
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN11QDomElement14setAttributeNSE7QStringRKS0_d	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED55A05	proc near		; DATA XREF: _ZN11QDomElement14setAttributeNSE7QStringRKS0_d+26o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	[ebp-5Ch], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	edx, [ebp-5Ch]
		mov	[esp+0], edx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED55A05	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  27. _ZN11QDomElement14setAttributeNSE7QStringRKS0_y

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN11QDomElement14setAttributeNSE7QStringRKS0_y
_ZN11QDomElement14setAttributeNSE7QStringRKS0_y	proc near

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		mov	eax, [ebp+arg_C]
		mov	edx, [ebp+arg_10]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A394
		mov	[ebp+var_58], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_54], edx
		lea	edx, [ebp+var_8]
		mov	[ebp+var_2C], edx
		mov	[ebp+var_28], offset sub_6ED55B17
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	edx, [eax]
		test	edx, edx
		jz	short loc_6ED55AEA
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	dword ptr [esp+0Ch], 0Ah
		mov	eax, [ebp+var_58]
		mov	edx, [ebp+var_54]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp+8], edx
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN7QString6setNumEyi
		lea	eax, [ebp+var_C]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[esp], eax
		call	sub_6ED553A0
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED55AF7

loc_6ED55AEA:				; CODE XREF: _ZN11QDomElement14setAttributeNSE7QStringRKS0_y+42j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED55AF7:				; CODE XREF: _ZN11QDomElement14setAttributeNSE7QStringRKS0_y+A8j
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN11QDomElement14setAttributeNSE7QStringRKS0_y	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED55B17	proc near		; DATA XREF: _ZN11QDomElement14setAttributeNSE7QStringRKS0_y+29o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	[ebp-5Ch], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	edx, [ebp-5Ch]
		mov	[esp+0], edx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED55B17	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  26. _ZN11QDomElement14setAttributeNSE7QStringRKS0_x

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN11QDomElement14setAttributeNSE7QStringRKS0_x
_ZN11QDomElement14setAttributeNSE7QStringRKS0_x	proc near

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		mov	eax, [ebp+arg_C]
		mov	edx, [ebp+arg_10]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A39A
		mov	[ebp+var_58], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_54], edx
		lea	edx, [ebp+var_8]
		mov	[ebp+var_2C], edx
		mov	[ebp+var_28], offset sub_6ED55C27
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		test	ecx, ecx
		jz	short loc_6ED55BFA
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	dword ptr [esp+0Ch], 0Ah
		mov	eax, [ebp+var_58]
		mov	edx, [ebp+var_54]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp+8], edx
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN7QString6setNumExi
		lea	eax, [ebp+var_C]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[esp], eax
		call	sub_6ED553A0
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED55C07

loc_6ED55BFA:				; CODE XREF: _ZN11QDomElement14setAttributeNSE7QStringRKS0_x+42j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED55C07:				; CODE XREF: _ZN11QDomElement14setAttributeNSE7QStringRKS0_x+A8j
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN11QDomElement14setAttributeNSE7QStringRKS0_x	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED55C27	proc near		; DATA XREF: _ZN11QDomElement14setAttributeNSE7QStringRKS0_x+29o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	[ebp-5Ch], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	edx, [ebp-5Ch]
		mov	[esp+0], edx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED55C27	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  24. _ZN11QDomElement14setAttributeNSE7QStringRKS0_S2_

; =============== S U B	R O U T	I N E =======================================


		public _ZN11QDomElement14setAttributeNSE7QStringRKS0_S2_
_ZN11QDomElement14setAttributeNSE7QStringRKS0_S2_ proc near

arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 8
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED55C80
		mov	[esp+0Ch+arg_0], eax
		add	esp, 8
		pop	ebx
		jmp	sub_6ED553A0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED55C80:				; CODE XREF: _ZN11QDomElement14setAttributeNSE7QStringRKS0_S2_+Cj
		add	esp, 8
		pop	ebx
		retn
_ZN11QDomElement14setAttributeNSE7QStringRKS0_S2_ endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED55C90	proc near		; DATA XREF: .rdata:6EDA6E2Co

var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A3A0
		mov	[ebp+var_28], offset sub_6ED55F34
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, ds:_ZN7QString11shared_nullE
		cmp	[edx+28h], eax
		jz	loc_6ED55E90
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_10]
		mov	dword ptr [esp+8], 0
		mov	dword ptr [esp+4], 1
		mov	dword ptr [esp], 1
		mov	ecx, [ebp+arg_4]
		add	edx, 20h
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED480B0
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		add	eax, 1Ch
		add	edx, 24h
		mov	[ebp+var_54], eax
		mov	[ebp+var_50], edx
		mov	[esp+4], edx
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	dword ptr [esp+4], 3Ah
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEc
		mov	edx, [ebp+var_54]
		mov	[esp], eax
		mov	[esp+4], edx
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	dword ptr [esp+4], offset asc_6EDA025A ; "=\""
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		lea	edx, [ebp+var_10]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	dword ptr [esp+4], 22h
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEc
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED55D9B
		mov	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED55D9B:				; CODE XREF: sub_6ED55C90+F6j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+10h]
		test	eax, eax
		jz	short loc_6ED55DC7
		mov	edx, [ebp+var_50]
		add	eax, 24h
		mov	[esp], eax
		mov	[esp+4], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZNK7QStringeqERKS_
		test	al, al
		jnz	loc_6ED55E60

loc_6ED55DC7:				; CODE XREF: sub_6ED55C90+113j
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_14]
		mov	dword ptr [esp+8], 0
		mov	dword ptr [esp+4], 1
		mov	dword ptr [esp], 1
		mov	ecx, [ebp+arg_4]
		add	edx, 28h
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED480B0
		mov	dword ptr [esp+4], offset aXmlns ; " xmlns:"
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN11QTextStreamlsEPKc
		mov	edx, [ebp+var_50]
		mov	[esp], eax
		mov	[esp+4], edx
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	dword ptr [esp+4], offset asc_6EDA025A ; "=\""
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		lea	edx, [ebp+var_14]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	dword ptr [esp+4], 22h
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEc
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED55E70

loc_6ED55E60:				; CODE XREF: sub_6ED55C90+131j
					; sub_6ED55C90+286j ...
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED55E70:				; CODE XREF: sub_6ED55C90+1CEj
		mov	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED55E90:				; CODE XREF: sub_6ED55C90+3Aj
		mov	dword ptr [esp+8], 0
		lea	eax, [ebp+var_C]
		add	edx, 20h
		mov	dword ptr [esp+4], 1
		mov	dword ptr [esp], 1
		mov	ecx, [ebp+arg_4]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED480B0
		mov	eax, [ebp+arg_0]
		add	eax, 1Ch
		mov	[esp+4], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	dword ptr [esp+4], offset asc_6EDA025A ; "=\""
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		lea	edx, [ebp+var_C]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	dword ptr [esp+4], 22h
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEc
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED55E60
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED55E60
sub_6ED55C90	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED55F34	proc near		; DATA XREF: sub_6ED55C90+1Do
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-58h], edx
		jz	short loc_6ED55F6E
		cmp	eax, 2
		jz	short loc_6ED55F73
		lea	eax, [ebp-14h]

loc_6ED55F4D:				; CODE XREF: sub_6ED55F34+3Dj
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-58h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED55F6E:				; CODE XREF: sub_6ED55F34+Fj
		lea	eax, [ebp-10h]
		jmp	short loc_6ED55F4D
; ---------------------------------------------------------------------------

loc_6ED55F73:				; CODE XREF: sub_6ED55F34+14j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	edx, [ebp-58h]
		mov	[esp+0], edx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED55F34	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED55FA0	proc near		; DATA XREF: .rdata:6EDA748Co

var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A3AA
		mov	[ebp+var_28], offset sub_6ED5617E
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	eax, ds:_ZN11QTextStreamlsEPKc
		mov	dword ptr [esp+4], offset aNotation ; "<!NOTATION "
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], edx
		mov	[ebp+var_54], eax
		call	eax ; _ZN11QTextStreamlsEPKc
		mov	edx, [ebp+arg_0]
		add	edx, 1Ch
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	dword ptr [esp+4], 20h
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEc
		mov	eax, [ebp+arg_0]
		mov	edx, ds:_ZN7QString11shared_nullE
		cmp	[eax+3Ch], edx
		mov	[ebp+var_50], edx
		jz	loc_6ED56118
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_C]
		add	edx, 3Ch
		call	sub_6ED46640
		mov	edx, [ebp+arg_4]
		mov	dword ptr [esp+4], offset aPublic ; "PUBLIC "
		mov	[ebp+var_48], 3
		mov	[esp], edx
		call	[ebp+var_54]
		lea	edx, [ebp+var_C]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5607D
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED5607D:				; CODE XREF: sub_6ED55FA0+C8j
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_50]
		cmp	eax, [edx+38h]
		jz	short loc_6ED560D2
		add	edx, 38h
		lea	eax, [ebp+var_10]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED46640
		mov	edx, [ebp+arg_4]
		mov	dword ptr [esp+4], 20h
		mov	[ebp+var_48], 2
		mov	[esp], edx
		call	ds:_ZN11QTextStreamlsEc
		lea	edx, [ebp+var_10]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED56103

loc_6ED560D2:				; CODE XREF: sub_6ED55FA0+E6j
					; sub_6ED55FA0+176j ...
		mov	edx, [ebp+arg_4]
		mov	dword ptr [esp+4], 3Eh
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], edx
		call	ds:_ZN11QTextStreamlsEc
		mov	[esp], eax
		call	ds:_Z4endlR11QTextStream
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED56103:				; CODE XREF: sub_6ED55FA0+130j
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED560D2
; ---------------------------------------------------------------------------

loc_6ED56118:				; CODE XREF: sub_6ED55FA0+81j
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_14]
		mov	[ebp+var_48], 0FFFFFFFFh
		add	edx, 38h
		call	sub_6ED46640
		mov	edx, [ebp+arg_4]
		mov	dword ptr [esp+4], offset aSystem ; "SYSTEM "
		mov	[ebp+var_48], 1
		mov	[esp], edx
		call	[ebp+var_54]
		lea	edx, [ebp+var_14]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED560D2
		mov	eax, [ebp+var_14]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED560D2
sub_6ED55FA0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5617E	proc near		; DATA XREF: sub_6ED55FA0+20o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-58h], edx
		jz	short loc_6ED561B8
		cmp	eax, 2
		jz	short loc_6ED561BD
		lea	eax, [ebp-14h]

loc_6ED56197:				; CODE XREF: sub_6ED5617E+3Dj
					; sub_6ED5617E+42j
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED561B8:				; CODE XREF: sub_6ED5617E+Fj
		lea	eax, [ebp-10h]
		jmp	short loc_6ED56197
; ---------------------------------------------------------------------------

loc_6ED561BD:				; CODE XREF: sub_6ED5617E+14j
		lea	eax, [ebp-0Ch]
		jmp	short loc_6ED56197
sub_6ED5617E	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED561D0	proc near		; CODE XREF: _ZNK8QDomNode4saveER11QTextStreamiNS_14EncodingPolicyE+8Aj

var_A9		= byte ptr -0A9h
var_98		= dword	ptr -98h
var_92		= byte ptr -92h
var_91		= byte ptr -91h
var_90		= byte ptr -90h
var_8F		= byte ptr -8Fh
var_8E		= byte ptr -8Eh
var_8D		= byte ptr -8Dh
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= byte ptr -7Ch
var_78		= dword	ptr -78h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= byte ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= byte ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 0C8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_5C], eax
		lea	eax, [ebp+var_7C]
		mov	[ebp+var_64], offset sub_6ED997C0
		mov	[ebp+var_60], offset dword_6ED9A3B4
		mov	[ebp+var_58], offset sub_6ED56833
		mov	[ebp+var_54], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		cmp	[ebp+arg_C], 1
		mov	edx, [edx+14h]
		mov	[ebp+var_88], edx
		jz	loc_6ED563C0
		mov	edx, [ebp+arg_4]
		mov	[esp], edx
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZNK11QTextStream5codecEv
		lea	ecx, [ebp+var_34]
		mov	edx, [eax]
		mov	[esp], ecx
		mov	[esp+4], eax
		call	dword ptr [edx]
		sub	esp, 4
		mov	dword ptr [esp+4], offset a?xmlVersion1_0 ; "<?xml version=\"1.0\" encoding=\""
		mov	ecx, [ebp+arg_4]
		mov	[esp], ecx
		mov	[ebp+var_78], 2
		call	ds:_ZN11QTextStreamlsEPKc
		lea	edx, [ebp+var_34]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK10QByteArray
		mov	dword ptr [esp+4], offset a? ; "\"?>\n"
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		mov	eax, [ebp+var_88]
		test	eax, eax
		jz	loc_6ED5636D
		mov	eax, [ebp+var_88]
		mov	[ebp+var_8C], eax
		jmp	short loc_6ED562AB
; ---------------------------------------------------------------------------

loc_6ED56294:				; CODE XREF: sub_6ED561D0+FBj
					; sub_6ED561D0+14Dj
		mov	ecx, [ebp+var_8C]
		mov	ecx, [ecx+0Ch]
		test	ecx, ecx
		mov	[ebp+var_8C], ecx
		jz	loc_6ED56580

loc_6ED562AB:				; CODE XREF: sub_6ED561D0+C2j
		mov	edx, [ebp+var_8C]
		mov	[ebp+var_90], 0
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+54h]
		mov	[ebp+var_78], 1
		call	eax
		test	al, al
		jz	short loc_6ED56294
		mov	ecx, [ebp+var_8C]
		mov	[ebp+var_3C], offset aXml_0 ; "xml"
		mov	eax, [ecx+1Ch]
		mov	[ebp+var_38], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_3C]
		lea	edx, [ebp+var_38]
		mov	[ebp+var_90], 1
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	eax, [ebp+var_38]
		setnz	[ebp+var_91]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED56387

loc_6ED56316:				; CODE XREF: sub_6ED561D0+1CAj
		cmp	[ebp+var_91], 0
		jz	loc_6ED56294
		mov	edx, [ebp+var_8C]
		mov	edx, [edx+0Ch]
		test	edx, edx
		mov	[ebp+var_80], edx
		jz	short loc_6ED5636D

loc_6ED56333:				; CODE XREF: sub_6ED561D0+19Bj
					; sub_6ED561D0+3B9j
		mov	edx, [ebp+var_80]
		mov	ecx, [ebp+arg_8]
		mov	eax, [edx]
		mov	[esp+0Ch], ecx
		mov	dword ptr [esp+8], 0
		mov	edx, [ebp+arg_4]
		mov	[esp+4], edx
		mov	ecx, [ebp+var_80]
		mov	[esp], ecx
		mov	eax, [eax+64h]
		mov	[ebp+var_78], 2
		call	eax
		mov	eax, [ebp+var_80]
		mov	eax, [eax+0Ch]
		test	eax, eax
		mov	[ebp+var_80], eax
		jnz	short loc_6ED56333

loc_6ED5636D:				; CODE XREF: sub_6ED561D0+B0j
					; sub_6ED561D0+161j
		mov	eax, [ebp+var_34]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED563A0

loc_6ED5637A:				; CODE XREF: sub_6ED561D0+256j
					; sub_6ED561D0+2C2j
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED56387:				; CODE XREF: sub_6ED561D0+144j
		mov	eax, [ebp+var_38]
		mov	[esp], eax
		mov	[ebp+var_78], 2
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED56316
; ---------------------------------------------------------------------------
		align 10h

loc_6ED563A0:				; CODE XREF: sub_6ED561D0+1A8j
		mov	eax, [ebp+var_34]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_Z5qFreePv
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED563C0:				; CODE XREF: sub_6ED561D0+42j
		test	edx, edx
		mov	[ebp+var_92], 0
		jz	short loc_6ED563E4
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+54h]
		mov	[ebp+var_78], 0Ah
		call	eax
		test	al, al
		jnz	loc_6ED5658E

loc_6ED563E4:				; CODE XREF: sub_6ED561D0+1F9j
					; sub_6ED561D0+421j ...
		mov	dword ptr [esp], offset	aUtf8 ;	"UTF-8"
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED90180
		test	eax, eax
		mov	[ebp+var_98], eax
		jz	short loc_6ED5641E

loc_6ED56401:				; CODE XREF: sub_6ED561D0+5AAj
		mov	edx, [ebp+var_98]
		mov	[esp+4], edx
		mov	ecx, [ebp+arg_4]
		mov	[esp], ecx
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZN11QTextStream8setCodecEP10QTextCodec

loc_6ED5641E:				; CODE XREF: sub_6ED561D0+22Fj
		mov	edx, [ebp+var_88]
		test	edx, edx
		jz	loc_6ED5637A
		mov	eax, [ebp+var_88]
		mov	[ebp+var_8E], 0
		mov	[ebp+var_84], eax
		jmp	short loc_6ED56498
; ---------------------------------------------------------------------------

loc_6ED56441:				; CODE XREF: sub_6ED561D0+2DDj
					; sub_6ED561D0+2FFj ...
		cmp	[ebp+var_8D], 0
		jnz	loc_6ED56542

loc_6ED5644E:				; CODE XREF: sub_6ED561D0+36Cj
					; sub_6ED561D0+3A6j
		mov	edx, [ebp+var_84]
		mov	ecx, [ebp+arg_8]
		mov	eax, [edx]
		mov	[esp+0Ch], ecx
		mov	dword ptr [esp+8], 0
		mov	edx, [ebp+arg_4]
		mov	[esp+4], edx
		mov	ecx, [ebp+var_84]
		mov	[esp], ecx
		mov	eax, [eax+64h]
		mov	[ebp+var_78], 0FFFFFFFFh
		call	eax
		mov	eax, [ebp+var_84]
		mov	eax, [eax+0Ch]
		test	eax, eax
		mov	[ebp+var_84], eax
		jz	loc_6ED5637A

loc_6ED56498:				; CODE XREF: sub_6ED561D0+26Fj
		cmp	[ebp+var_8E], 0
		mov	[ebp+var_8F], 0
		mov	[ebp+var_8D], 0
		jnz	short loc_6ED56441
		mov	edx, [ebp+var_84]
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+54h]
		mov	[ebp+var_78], 3
		call	eax
		test	al, al
		mov	[ebp+var_8D], 1
		jz	loc_6ED56441
		mov	ecx, [ebp+var_84]
		mov	[ebp+var_30], offset aXml_0 ; "xml"
		mov	eax, [ecx+1Ch]
		mov	[ebp+var_2C], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_30]
		lea	edx, [ebp+var_2C]
		mov	[ebp+var_8F], 1
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	eax, [ebp+var_2C]
		setz	[ebp+var_8D]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED56441
		mov	eax, [ebp+var_2C]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		cmp	[ebp+var_8D], 0
		jz	loc_6ED5644E

loc_6ED56542:				; CODE XREF: sub_6ED561D0+278j
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_8]
		mov	eax, [edx+3Ch]
		mov	edx, [eax]
		mov	[esp+0Ch], ecx
		mov	dword ptr [esp+8], 0
		mov	ecx, [ebp+arg_4]
		mov	[esp], eax
		mov	[esp+4], ecx
		mov	eax, [edx+64h]
		mov	[ebp+var_78], 0FFFFFFFFh
		call	eax
		mov	[ebp+var_8E], 1
		jmp	loc_6ED5644E
; ---------------------------------------------------------------------------
		align 10h

loc_6ED56580:				; CODE XREF: sub_6ED561D0+D5j
		mov	ecx, [ebp+var_88]
		mov	[ebp+var_80], ecx
		jmp	loc_6ED56333
; ---------------------------------------------------------------------------

loc_6ED5658E:				; CODE XREF: sub_6ED561D0+20Ej
		mov	ecx, [ebp+var_88]
		mov	[ebp+var_10], offset aXml_0 ; "xml"
		mov	eax, [ecx+1Ch]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_10]
		mov	[ebp+var_92], 1
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	eax, [ebp+var_C]
		setnz	[ebp+var_A9]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED565EA
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED565EA:				; CODE XREF: sub_6ED561D0+405j
		cmp	[ebp+var_A9], 0
		jz	loc_6ED563E4
		mov	ecx, [ebp+var_88]
		mov	eax, [ecx+20h]
		mov	[ebp+var_14], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_1C]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aEncodingSS ;	"encoding\\s*=\\s*((\"([^\"]*)\")|('([^'"...
		mov	[esp], eax
		mov	[ebp+var_78], 9
		call	ds:_ZN7QString10fromLatin1EPKci
		sub	esp, 4
		lea	eax, [ebp+var_1C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_18]
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 1
		mov	[esp], eax
		mov	[ebp+var_78], 8
		call	ds:_ZN7QRegExpC1ERK7QStringN2Qt15CaseSensitivityENS_13PatternSyntaxE
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5679A

loc_6ED5666A:				; CODE XREF: sub_6ED561D0+5DDj
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		lea	eax, [ebp+var_18]
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 0
		mov	[esp], eax
		mov	[ebp+var_78], 7
		call	ds:_ZNK7QRegExp7indexInERK7QStringiNS_9CaretModeE
		lea	edx, [ebp+var_20]
		lea	eax, [ebp+var_18]
		mov	dword ptr [esp+8], 3
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZN7QRegExp3capEi
		mov	eax, [ebp+var_20]
		sub	esp, 4
		mov	ecx, [eax+8]
		test	ecx, ecx
		jz	loc_6ED567B2

loc_6ED566C0:				; CODE XREF: sub_6ED561D0+63Bj
		lea	edx, [ebp+var_28]
		lea	eax, [ebp+var_20]
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_78], 6
		call	ds:_ZNK7QString8toLatin1Ev
		mov	eax, [ebp+var_28]
		sub	esp, 4
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED56820

loc_6ED566EB:				; CODE XREF: sub_6ED561D0+658j
		mov	eax, [eax+8]
		mov	[esp+4], eax
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_78], 4
		call	ds:_ZN10QByteArray7reallocEi
		mov	eax, [ebp+var_28]
		mov	edx, [eax+0Ch]

loc_6ED5670B:				; CODE XREF: sub_6ED561D0+65Ej
		mov	[esp], edx
		mov	[ebp+var_78], 4
		call	sub_6ED90180
		mov	[ebp+var_98], eax
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_78], 6
		call	sub_6ED90150
		mov	eax, [ebp+var_20]

loc_6ED56735:				; CODE XREF: sub_6ED561D0+64Bj
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED56785

loc_6ED5673F:				; CODE XREF: sub_6ED561D0+5C8j
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_78], 9
		call	ds:_ZN7QRegExpD1Ev
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED56772
		mov	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED56772:				; CODE XREF: sub_6ED561D0+58Dj
		mov	ecx, [ebp+var_98]
		test	ecx, ecx
		jnz	loc_6ED56401
		jmp	loc_6ED563E4
; ---------------------------------------------------------------------------

loc_6ED56785:				; CODE XREF: sub_6ED561D0+56Dj
		mov	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_78], 7
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED5673F
; ---------------------------------------------------------------------------

loc_6ED5679A:				; CODE XREF: sub_6ED561D0+494j
		mov	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_78], 7
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5666A
; ---------------------------------------------------------------------------

loc_6ED567B2:				; CODE XREF: sub_6ED561D0+4EAj
		lea	edx, [ebp+var_24]
		lea	eax, [ebp+var_18]
		mov	dword ptr [esp+8], 5
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_78], 6
		call	ds:_ZN7QRegExp3capEi
		sub	esp, 4
		lea	eax, [ebp+var_24]
		mov	[esp+4], eax
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_78], 5
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		mov	[ebp+var_78], 6
		call	sub_6ED94560
		mov	eax, [ebp+var_20]
		mov	edx, [eax+8]
		test	edx, edx
		jnz	loc_6ED566C0
		mov	[ebp+var_98], 0
		jmp	loc_6ED56735
; ---------------------------------------------------------------------------

loc_6ED56820:				; CODE XREF: sub_6ED561D0+515j
		mov	edx, [eax+0Ch]
		lea	ecx, [eax+10h]
		cmp	edx, ecx
		jnz	loc_6ED566EB
		jmp	loc_6ED5670B
sub_6ED561D0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED56833	proc near		; DATA XREF: sub_6ED561D0+20o
		add	ebp, 8
		mov	eax, [ebp-78h]
		mov	ecx, [ebp-74h]
		cmp	eax, 1
		mov	[ebp-0A8h], ecx
		jz	short loc_6ED568C1
		cmp	eax, 2
		jz	loc_6ED569AA
		cmp	eax, 3
		jz	loc_6ED5695D
		cmp	eax, 4
		lea	esi, [esi+0]
		jz	loc_6ED56996
		cmp	eax, 5
		jz	loc_6ED5696F
		cmp	eax, 6
		jz	loc_6ED56981
		cmp	eax, 7
		nop
		lea	esi, [esi+0]
		jz	loc_6ED56924
		cmp	eax, 8
		jz	loc_6ED56936
		cmp	eax, 9
		jz	short loc_6ED568E8
		cmp	byte ptr [ebp-90h], 0
		mov	[ebp-9Ch], ecx
		jz	short loc_6ED568B5
		lea	eax, [ebp-38h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560

loc_6ED568B5:				; CODE XREF: sub_6ED56833+6Ej
		mov	eax, [ebp-9Ch]
		mov	[ebp-0A8h], eax

loc_6ED568C1:				; CODE XREF: sub_6ED56833+12j
		lea	eax, [ebp-34h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED90150
		mov	edx, [ebp-0A8h]
		mov	[esp+0], edx
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED568E8:				; CODE XREF: sub_6ED56833+5Fj
		mov	eax, [ebp-0A8h]
		cmp	byte ptr [ebp-92h], 0
		mov	[ebp-0A4h], eax
		jz	short loc_6ED5690F
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560

loc_6ED5690F:				; CODE XREF: sub_6ED56833+C8j
		mov	edx, [ebp-0A4h]
		mov	[esp+0], edx
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED56924:				; CODE XREF: sub_6ED56833+4Dj
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560

loc_6ED56936:				; CODE XREF: sub_6ED56833+56j
					; sub_6ED56833+161j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560
		mov	eax, [ebp-0A8h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED5695D:				; CODE XREF: sub_6ED56833+20j
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED90150

loc_6ED5696F:				; CODE XREF: sub_6ED56833+36j
					; sub_6ED56833+175j
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560

loc_6ED56981:				; CODE XREF: sub_6ED56833+3Fj
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	ds:_ZN7QRegExpD1Ev
		jmp	short loc_6ED56936
; ---------------------------------------------------------------------------

loc_6ED56996:				; CODE XREF: sub_6ED56833+2Dj
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560
		jmp	short loc_6ED5696F
; ---------------------------------------------------------------------------

loc_6ED569AA:				; CODE XREF: sub_6ED56833+17j
		mov	ecx, [ebp-0A8h]
		cmp	byte ptr [ebp-8Fh], 0
		mov	[ebp-0A0h], ecx
		jz	short loc_6ED569D1
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560

loc_6ED569D1:				; CODE XREF: sub_6ED56833+18Aj
		mov	eax, [ebp-0A0h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED56833	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 565. _ZNK8QDomNode4saveER11QTextStreamiNS_14EncodingPolicyE

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode4saveER11QTextStreamiNS_14EncodingPolicyE
_ZNK8QDomNode4saveER11QTextStreamiNS_14EncodingPolicyE proc near
					; CODE XREF: _ZNK8QDomNode4saveER11QTextStreami+22p

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 2Ch
		mov	[esp+2Ch+var_10], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_C], esi
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_8], edi
		mov	edi, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_4], ebp
		mov	ebp, [esp+2Ch+arg_C]
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_6ED56A80
		mov	[esp+2Ch+var_2C], ebx
		call	_ZNK8QDomNode10isDocumentEv
		test	al, al
		jnz	short loc_6ED56A55
		mov	eax, [ebx]
		mov	ebp, [esp+2Ch+var_4]
		mov	ebx, [esp+2Ch+var_10]
		mov	edx, [eax]
		mov	[esp+2Ch+arg_C], edi
		mov	edi, [esp+2Ch+var_8]
		mov	[esp+2Ch+arg_4], esi
		mov	esi, [esp+2Ch+var_C]
		mov	[esp+2Ch+arg_8], 1
		mov	[esp+2Ch+arg_0], eax
		mov	eax, [edx+64h]
		add	esp, 2Ch
		jmp	eax
; ---------------------------------------------------------------------------

loc_6ED56A55:				; CODE XREF: _ZNK8QDomNode4saveER11QTextStreamiNS_14EncodingPolicyE+33j
		mov	[esp+2Ch+arg_C], ebp
		mov	ebp, [esp+2Ch+var_4]
		mov	[esp+2Ch+arg_8], edi
		mov	edi, [esp+2Ch+var_8]
		mov	[esp+2Ch+arg_4], esi
		mov	eax, [ebx]
		mov	esi, [esp+2Ch+var_C]
		mov	ebx, [esp+2Ch+var_10]
		mov	[esp+2Ch+arg_0], eax
		add	esp, 2Ch
		jmp	sub_6ED561D0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED56A80:				; CODE XREF: _ZNK8QDomNode4saveER11QTextStreamiNS_14EncodingPolicyE+27j
		mov	ebx, [esp+2Ch+var_10]
		mov	esi, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_8]
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
_ZNK8QDomNode4saveER11QTextStreamiNS_14EncodingPolicyE endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 564. _ZNK8QDomNode4saveER11QTextStreami

; =============== S U B	R O U T	I N E =======================================


		public _ZNK8QDomNode4saveER11QTextStreami
_ZNK8QDomNode4saveER11QTextStreami proc	near ; CODE XREF: _ZNK12QDomDocument8toStringEi+82p
					; _ZlsR11QTextStreamRK8QDomNode+1Bp

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_10], 1
		mov	[esp+1Ch+var_14], eax
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], eax
		call	_ZNK8QDomNode4saveER11QTextStreamiNS_14EncodingPolicyE
		add	esp, 1Ch
		retn
_ZNK8QDomNode4saveER11QTextStreami endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 422. _ZNK12QDomDocument8toStringEi

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZNK12QDomDocument8toStringEi
_ZNK12QDomDocument8toStringEi proc near	; CODE XREF: _ZNK12QDomDocument11toByteArrayEi+4Ap

var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= byte ptr -14h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A3CC
		mov	[ebp+var_28], offset sub_6ED56B7C
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_C]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], 2
		mov	[ebp+var_48], 2
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		call	ds:_ZN11QTextStreamC1EP7QString6QFlagsIN9QIODevice12OpenModeFlagEE
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_48], 1
		mov	[esp+8], eax
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		call	_ZNK8QDomNode4saveER11QTextStreami
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN11QTextStreamD1Ev
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
_ZNK12QDomDocument8toStringEi endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED56B7C	proc near		; DATA XREF: _ZNK12QDomDocument8toStringEi+20o
		add	ebp, 8
		mov	edx, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-50h], edx
		jz	short loc_6ED56B9E
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN11QTextStreamD1Ev

loc_6ED56B9E:				; CODE XREF: sub_6ED56B7C+Dj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-50h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED56B7C	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 417. _ZNK12QDomDocument11toByteArrayEi

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZNK12QDomDocument11toByteArrayEi
_ZNK12QDomDocument11toByteArrayEi proc near

var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_24], esp
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A3D4
		mov	[ebp+var_28], offset sub_6ED56C71
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	_ZNK12QDomDocument8toStringEi
		lea	eax, [ebp+var_C]
		mov	[ebp+var_48], 1
		sub	esp, 4
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	ds:_ZNK7QString6toUtf8Ev
		sub	esp, 4
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED56C5F
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED56C5F:				; CODE XREF: _ZNK12QDomDocument11toByteArrayEi+7Aj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
_ZNK12QDomDocument11toByteArrayEi endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED56C71	proc near		; DATA XREF: _ZNK12QDomDocument11toByteArrayEi+23o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-50h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp-50h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED56C71	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 631. _ZlsR11QTextStreamRK8QDomNode

; =============== S U B	R O U T	I N E =======================================


		public _ZlsR11QTextStreamRK8QDomNode
_ZlsR11QTextStreamRK8QDomNode proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_14], 1
		mov	[esp+1Ch+var_18], ebx
		mov	[esp+1Ch+var_1C], eax
		call	_ZNK8QDomNode4saveER11QTextStreami
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn
_ZlsR11QTextStreamRK8QDomNode endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 247. _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_
_ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_ proc near

var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_9		= byte ptr -9
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset word_6ED9A3DA
		mov	[ebp+var_38], offset sub_6ED570F2
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_8]
		lea	eax, [ebp+var_10]
		lea	ecx, [ebp+var_9]
		mov	dword ptr [esp], 1
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED53CB0
		cmp	[ebp+var_9], 0
		jnz	short loc_6ED56D60
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], 0

loc_6ED56D2A:				; CODE XREF: _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+CAj
					; _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+DFj
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED56D4A
		mov	eax, [ebp+var_10]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED56D4A:				; CODE XREF: _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+65j
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED56D60:				; CODE XREF: _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+4Fj
		mov	ecx, ds:dword_6EDA8004
		test	ecx, ecx
		jnz	short loc_6ED56DB4
		mov	edx, [ebp+arg_C]
		mov	[ebp+var_9], 1
		mov	eax, [edx]
		mov	[ebp+var_14], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED56D7C:				; CODE XREF: _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+1BEj
					; _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+1D7j
		cmp	[ebp+var_9], 0
		jnz	loc_6ED56EB0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 0

loc_6ED56D8F:				; CODE XREF: _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+21Aj
					; _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+233j
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED56D2A
		mov	eax, [ebp+var_14]
		mov	[ebp+var_58], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED56D2A
; ---------------------------------------------------------------------------

loc_6ED56DB4:				; CODE XREF: _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+98j
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_60], eax
		mov	[ebp+var_1C], eax
		lock inc dword ptr [eax]
		setnz	al
		mov	eax, [ebp+arg_C]
		mov	[ebp+var_58], 2
		mov	[esp], eax
		call	ds:_ZN9QXmlUtils10isPublicIDERK7QString
		test	al, al
		jnz	loc_6ED56F20
		cmp	ds:dword_6EDA8004, 2
		jz	loc_6ED56F08

loc_6ED56DED:				; CODE XREF: _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+263j
		lea	eax, [ebp+var_1C]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0
		mov	word ptr [esp+4], 27h
		mov	[esp], eax
		mov	[ebp+var_58], 2
		call	ds:_ZNK7QString7indexOfE5QChariN2Qt15CaseSensitivityE
		cmp	eax, 0FFFFFFFFh
		jz	short loc_6ED56E73
		lea	eax, [ebp+var_1C]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0
		mov	word ptr [esp+4], 22h
		mov	[esp], eax
		call	ds:_ZNK7QString7indexOfE5QChariN2Qt15CaseSensitivityE
		cmp	eax, 0FFFFFFFFh
		jz	short loc_6ED56E73
		cmp	ds:dword_6EDA8004, 2
		jz	loc_6ED56F08
		lea	eax, [ebp+var_1C]
		mov	dword ptr [esp+8], 1
		mov	word ptr [esp+4], 27h
		mov	[esp], eax
		mov	[ebp+var_58], 2
		call	ds:_ZN7QString6removeE5QCharN2Qt15CaseSensitivityE

loc_6ED56E73:				; CODE XREF: _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+14Aj
					; _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+172j
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_9], 1
		mov	[ebp+var_14], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED56E83:				; CODE XREF: _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+248j
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED56D7C
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_58], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED56D7C
; ---------------------------------------------------------------------------
		align 10h

loc_6ED56EB0:				; CODE XREF: _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+B0j
		mov	edx, ds:dword_6EDA8004
		test	edx, edx
		jnz	short loc_6ED56F38
		mov	edx, [ebp+arg_10]
		mov	[ebp+var_9], 1
		mov	eax, [edx]
		mov	[ebp+var_18], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED56ECC:				; CODE XREF: _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+2F7j
					; _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+310j
		cmp	[ebp+var_9], 0
		jnz	loc_6ED57020
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 0

loc_6ED56EDF:				; CODE XREF: _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+3F2j
					; _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+3FFj
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED56D8F
		mov	eax, [ebp+var_18]
		mov	[ebp+var_58], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED56D8F
; ---------------------------------------------------------------------------

loc_6ED56F08:				; CODE XREF: _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+117j
					; _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+17Bj
		mov	eax, [ebp+var_60]
		mov	[ebp+var_9], 0
		mov	[ebp+var_14], eax
		lock inc dword ptr [eax]
		setnz	al
		jmp	loc_6ED56E83
; ---------------------------------------------------------------------------
		align 10h

loc_6ED56F20:				; CODE XREF: _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+10Aj
		mov	edx, [ebp+arg_C]
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[esp+4], edx
		call	ds:_ZN7QStringaSERKS_
		jmp	loc_6ED56DED
; ---------------------------------------------------------------------------

loc_6ED56F38:				; CODE XREF: _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+1E8j
		mov	edx, [ebp+arg_10]
		mov	eax, [edx]
		mov	[ebp+var_1C], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_1C]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0
		mov	word ptr [esp+4], 27h
		mov	[esp], eax
		mov	[ebp+var_58], 1
		call	ds:_ZNK7QString7indexOfE5QChariN2Qt15CaseSensitivityE
		cmp	eax, 0FFFFFFFFh
		jz	loc_6ED57007
		lea	eax, [ebp+var_1C]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0
		mov	word ptr [esp+4], 22h
		mov	[esp], eax
		call	ds:_ZNK7QString7indexOfE5QChariN2Qt15CaseSensitivityE
		cmp	eax, 0FFFFFFFFh
		jz	short loc_6ED57007
		cmp	ds:dword_6EDA8004, 2
		jnz	short loc_6ED56FE5
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_9], 0
		mov	[ebp+var_18], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED56FBC:				; CODE XREF: _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+347j
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED56ECC
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_58], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED56ECC
; ---------------------------------------------------------------------------

loc_6ED56FE5:				; CODE XREF: _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+2D8j
		lea	eax, [ebp+var_1C]
		mov	dword ptr [esp+8], 1
		mov	word ptr [esp+4], 27h
		mov	[esp], eax
		mov	[ebp+var_58], 1
		call	ds:_ZN7QString6removeE5QCharN2Qt15CaseSensitivityE

loc_6ED57007:				; CODE XREF: _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+2A3j
					; _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+2CFj
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_9], 1
		mov	[ebp+var_18], eax
		lock inc dword ptr [eax]
		setnz	dl
		jmp	short loc_6ED56FBC
; ---------------------------------------------------------------------------
		align 10h

loc_6ED57020:				; CODE XREF: _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+200j
		mov	dword ptr [esp], 4Ch ; size_t
		mov	[ebp+var_58], 4
		call	sub_6ED988D0
		mov	[ebp+var_64], eax
		mov	dword ptr [esp+8], 0
		mov	dword ptr [esp+4], 0
		mov	[esp], eax
		mov	[ebp+var_58], 3
		call	sub_6ED4E8B0
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	eax, [ebp+var_64]
		mov	[ebp+var_58], 4
		add	eax, 1Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	edx, [ebp+arg_10]
		mov	eax, ds:_ZN7QString11shared_nullE
		cmp	[edx], eax
		jz	short loc_6ED570D4
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	eax, [ebp+var_64]
		mov	[ebp+var_58], 4
		add	eax, 40h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		mov	eax, [ebp+var_64]
		add	eax, 44h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_

loc_6ED570B1:				; CODE XREF: _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+420j
		mov	edx, [ebp+var_64]
		lock dec dword ptr [edx+4]
		setnz	al
		mov	eax, [ebp+arg_0]
		test	edx, edx
		mov	[eax], edx
		jz	loc_6ED56EDF
		lock inc dword ptr [edx+4]
		setnz	al
		jmp	loc_6ED56EDF
; ---------------------------------------------------------------------------

loc_6ED570D4:				; CODE XREF: _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+3ACj
		mov	eax, [ebp+var_64]
		add	eax, 40h
		mov	[esp], eax
		call	sub_6ED94460
		mov	eax, [ebp+var_64]
		add	eax, 44h
		mov	[esp], eax
		call	sub_6ED94460
		jmp	short loc_6ED570B1
_ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED570F2	proc near		; DATA XREF: _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+20o
		add	ebp, 8
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-68h], edx
		jz	short loc_6ED5717E
		cmp	eax, 2
		jz	short loc_6ED5715F
		cmp	eax, 3
		jz	short loc_6ED5716A
		cmp	eax, 4
		jz	short loc_6ED57129
		cmp	eax, 5
		jz	short loc_6ED5713B
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560

loc_6ED57129:				; CODE XREF: sub_6ED570F2+1Ej
					; sub_6ED570F2+8Aj
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560

loc_6ED5713B:				; CODE XREF: sub_6ED570F2+23j
					; sub_6ED570F2+9Ej
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		mov	edx, [ebp-68h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED5715F:				; CODE XREF: sub_6ED570F2+14j
		mov	edx, [ebp-64h]
		mov	[esp+0], edx
		call	sub_6ED988B0

loc_6ED5716A:				; CODE XREF: sub_6ED570F2+19j
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		jmp	short loc_6ED57129
; ---------------------------------------------------------------------------

loc_6ED5717E:				; CODE XREF: sub_6ED570F2+Fj
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		jmp	short loc_6ED5713B
sub_6ED570F2	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED571A0	proc near		; DATA XREF: .rdata:6EDA7538o

var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A3EA
		mov	[ebp+var_28], offset sub_6ED57460
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_8]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED418D0
		test	eax, eax
		mov	[ebp+var_50], eax
		jz	loc_6ED572DC
		mov	ecx, eax
		mov	eax, [eax]
		mov	[esp], ecx
		call	dword ptr [eax+4Ch]
		test	al, al
		jz	loc_6ED572F0
		mov	edx, [ebp+var_50]
		mov	eax, [edx+1Ch]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+arg_0]
		mov	ecx, [ecx+38h]
		mov	[ebp+var_54], ecx
		mov	edx, [ebp+var_54]
		add	ecx, 4
		mov	[ebp+var_64], ecx
		mov	eax, [edx+4]
		mov	edx, [eax+8]
		cmp	edx, 1
		jz	short loc_6ED57250
		mov	[esp], ecx
		mov	[ebp+var_48], 2
		call	sub_6ED92E00
		mov	ecx, [ebp+var_54]
		mov	eax, [ecx+4]

loc_6ED57250:				; CODE XREF: sub_6ED571A0+99j
		mov	edx, [eax+0Ch]
		cmp	edx, [eax+18h]
		jge	loc_6ED57440

loc_6ED5725C:				; CODE XREF: sub_6ED571A0+2BBj
		lea	eax, [ebp+var_14]
		mov	[esp+8], eax
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_64]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	sub_6ED983D0
		mov	edx, [ebp+var_14]
		mov	[ebp+var_5C], eax
		mov	[ebp+var_6C], edx
		mov	dword ptr [esp+4], 4
		mov	ecx, [ebp+var_54]
		mov	eax, [ecx+4]
		mov	[esp], eax
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		jz	short loc_6ED572B2
		mov	edx, [ebp+var_C]
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+var_50]
		mov	[eax+0Ch], edx

loc_6ED572B2:				; CODE XREF: sub_6ED571A0+FEj
		mov	ecx, [ebp+var_6C]
		mov	[eax+4], ecx
		mov	ecx, [ebp+var_5C]
		mov	edx, [ecx]
		mov	[eax], edx
		mov	[ecx], eax
		mov	edx, [ebp+var_54]
		mov	eax, [edx+4]
		add	dword ptr [eax+0Ch], 1
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED573F8

loc_6ED572DC:				; CODE XREF: sub_6ED571A0+57j
					; sub_6ED571A0+166j ...
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_50]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED572F0:				; CODE XREF: sub_6ED571A0+69j
		mov	edx, [ebp+var_50]
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+50h]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	eax
		test	al, al
		jz	short loc_6ED572DC
		mov	edx, [ebp+var_50]
		mov	eax, [edx+1Ch]
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+arg_0]
		mov	ecx, [ecx+3Ch]
		mov	[ebp+var_58], ecx
		mov	edx, [ebp+var_58]
		add	ecx, 4
		mov	[ebp+var_68], ecx
		mov	eax, [edx+4]
		mov	edx, [eax+8]
		cmp	edx, 1
		jz	short loc_6ED57349
		mov	[esp], ecx
		mov	[ebp+var_48], 1
		call	sub_6ED92E00
		mov	ecx, [ebp+var_58]
		mov	eax, [ecx+4]

loc_6ED57349:				; CODE XREF: sub_6ED571A0+192j
		mov	edx, [eax+0Ch]
		cmp	edx, [eax+18h]
		jge	loc_6ED57420

loc_6ED57355:				; CODE XREF: sub_6ED571A0+29Bj
		lea	eax, [ebp+var_14]
		mov	[esp+8], eax
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	eax, [ebp+var_68]
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	sub_6ED983D0
		mov	edx, [ebp+var_14]
		mov	[ebp+var_60], eax
		mov	[ebp+var_70], edx
		mov	dword ptr [esp+4], 4
		mov	ecx, [ebp+var_58]
		mov	eax, [ecx+4]
		mov	[esp], eax
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		jz	short loc_6ED573AB
		mov	edx, [ebp+var_10]
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+var_50]
		mov	[eax+0Ch], edx

loc_6ED573AB:				; CODE XREF: sub_6ED571A0+1F7j
		mov	ecx, [ebp+var_70]
		mov	[eax+4], ecx
		mov	ecx, [ebp+var_60]
		mov	edx, [ecx]
		mov	[eax], edx
		mov	[ecx], eax
		mov	edx, [ebp+var_58]
		mov	eax, [edx+4]
		add	dword ptr [eax+0Ch], 1
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED572DC
		mov	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_50]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED573F8:				; CODE XREF: sub_6ED571A0+136j
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_50]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED57420:				; CODE XREF: sub_6ED571A0+1AFj
		movsx	edx, word ptr [eax+16h]
		mov	[esp], eax
		add	edx, 1
		mov	[esp+4], edx
		mov	[ebp+var_48], 1
		call	ds:_ZN9QHashData6rehashEi
		jmp	loc_6ED57355
; ---------------------------------------------------------------------------

loc_6ED57440:				; CODE XREF: sub_6ED571A0+B6j
		movsx	edx, word ptr [eax+16h]
		mov	[esp], eax
		add	edx, 1
		mov	[esp+4], edx
		mov	[ebp+var_48], 2
		call	ds:_ZN9QHashData6rehashEi
		jmp	loc_6ED5725C
sub_6ED571A0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED57460	proc near		; DATA XREF: sub_6ED571A0+20o
		add	ebp, 8
		mov	ecx, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-74h], ecx
		jz	short loc_6ED57493
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-74h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED57493:				; CODE XREF: sub_6ED57460+Dj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-74h]
		mov	[esp+0], ecx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED57460	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED574C0	proc near		; DATA XREF: .rdata:6EDA7534o

var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A3F2
		mov	[ebp+var_28], offset sub_6ED57780
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_8]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED41A30
		test	eax, eax
		mov	[ebp+var_50], eax
		jz	loc_6ED575FC
		mov	ecx, eax
		mov	eax, [eax]
		mov	[esp], ecx
		call	dword ptr [eax+4Ch]
		test	al, al
		jz	loc_6ED57610
		mov	edx, [ebp+var_50]
		mov	eax, [edx+1Ch]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+arg_0]
		mov	ecx, [ecx+38h]
		mov	[ebp+var_54], ecx
		mov	edx, [ebp+var_54]
		add	ecx, 4
		mov	[ebp+var_64], ecx
		mov	eax, [edx+4]
		mov	edx, [eax+8]
		cmp	edx, 1
		jz	short loc_6ED57570
		mov	[esp], ecx
		mov	[ebp+var_48], 2
		call	sub_6ED92E00
		mov	ecx, [ebp+var_54]
		mov	eax, [ecx+4]

loc_6ED57570:				; CODE XREF: sub_6ED574C0+99j
		mov	edx, [eax+0Ch]
		cmp	edx, [eax+18h]
		jge	loc_6ED57760

loc_6ED5757C:				; CODE XREF: sub_6ED574C0+2BBj
		lea	eax, [ebp+var_14]
		mov	[esp+8], eax
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_64]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	sub_6ED983D0
		mov	edx, [ebp+var_14]
		mov	[ebp+var_5C], eax
		mov	[ebp+var_6C], edx
		mov	dword ptr [esp+4], 4
		mov	ecx, [ebp+var_54]
		mov	eax, [ecx+4]
		mov	[esp], eax
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		jz	short loc_6ED575D2
		mov	edx, [ebp+var_C]
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+var_50]
		mov	[eax+0Ch], edx

loc_6ED575D2:				; CODE XREF: sub_6ED574C0+FEj
		mov	ecx, [ebp+var_6C]
		mov	[eax+4], ecx
		mov	ecx, [ebp+var_5C]
		mov	edx, [ecx]
		mov	[eax], edx
		mov	[ecx], eax
		mov	edx, [ebp+var_54]
		mov	eax, [edx+4]
		add	dword ptr [eax+0Ch], 1
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED57718

loc_6ED575FC:				; CODE XREF: sub_6ED574C0+57j
					; sub_6ED574C0+166j ...
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_50]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED57610:				; CODE XREF: sub_6ED574C0+69j
		mov	edx, [ebp+var_50]
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+50h]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	eax
		test	al, al
		jz	short loc_6ED575FC
		mov	edx, [ebp+var_50]
		mov	eax, [edx+1Ch]
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+arg_0]
		mov	ecx, [ecx+3Ch]
		mov	[ebp+var_58], ecx
		mov	edx, [ebp+var_58]
		add	ecx, 4
		mov	[ebp+var_68], ecx
		mov	eax, [edx+4]
		mov	edx, [eax+8]
		cmp	edx, 1
		jz	short loc_6ED57669
		mov	[esp], ecx
		mov	[ebp+var_48], 1
		call	sub_6ED92E00
		mov	ecx, [ebp+var_58]
		mov	eax, [ecx+4]

loc_6ED57669:				; CODE XREF: sub_6ED574C0+192j
		mov	edx, [eax+0Ch]
		cmp	edx, [eax+18h]
		jge	loc_6ED57740

loc_6ED57675:				; CODE XREF: sub_6ED574C0+29Bj
		lea	eax, [ebp+var_14]
		mov	[esp+8], eax
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	eax, [ebp+var_68]
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	sub_6ED983D0
		mov	edx, [ebp+var_14]
		mov	[ebp+var_60], eax
		mov	[ebp+var_70], edx
		mov	dword ptr [esp+4], 4
		mov	ecx, [ebp+var_58]
		mov	eax, [ecx+4]
		mov	[esp], eax
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		jz	short loc_6ED576CB
		mov	edx, [ebp+var_10]
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+var_50]
		mov	[eax+0Ch], edx

loc_6ED576CB:				; CODE XREF: sub_6ED574C0+1F7j
		mov	ecx, [ebp+var_70]
		mov	[eax+4], ecx
		mov	ecx, [ebp+var_60]
		mov	edx, [ecx]
		mov	[eax], edx
		mov	[ecx], eax
		mov	edx, [ebp+var_58]
		mov	eax, [edx+4]
		add	dword ptr [eax+0Ch], 1
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED575FC
		mov	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_50]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED57718:				; CODE XREF: sub_6ED574C0+136j
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_50]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED57740:				; CODE XREF: sub_6ED574C0+1AFj
		movsx	edx, word ptr [eax+16h]
		mov	[esp], eax
		add	edx, 1
		mov	[esp+4], edx
		mov	[ebp+var_48], 1
		call	ds:_ZN9QHashData6rehashEi
		jmp	loc_6ED57675
; ---------------------------------------------------------------------------

loc_6ED57760:				; CODE XREF: sub_6ED574C0+B6j
		movsx	edx, word ptr [eax+16h]
		mov	[esp], eax
		add	edx, 1
		mov	[esp+4], edx
		mov	[ebp+var_48], 2
		call	ds:_ZN9QHashData6rehashEi
		jmp	loc_6ED5757C
sub_6ED574C0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED57780	proc near		; DATA XREF: sub_6ED574C0+20o
		add	ebp, 8
		mov	ecx, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-74h], ecx
		jz	short loc_6ED577B3
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-74h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED577B3:				; CODE XREF: sub_6ED57780+Dj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-74h]
		mov	[esp+0], ecx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED57780	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 573. _ZNK8QDomNode8nodeNameEv

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZNK8QDomNode8nodeNameEv
_ZNK8QDomNode8nodeNameEv proc near

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_9		= byte ptr -9
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A3FA
		mov	[ebp+var_28], offset sub_6ED57927
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		test	eax, eax
		mov	[ebp+var_50], eax
		jz	loc_6ED57901
		mov	ecx, [ebp+var_50]
		mov	eax, [ecx+24h]
		mov	eax, [eax+8]
		test	eax, eax
		jnz	short loc_6ED57850
		mov	edx, [ebp+var_50]
		mov	ecx, [ebp+arg_0]
		mov	eax, [edx+1Ch]
		mov	[ecx], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED5783D:				; CODE XREF: _ZNK8QDomNode8nodeNameEv+11Cj
					; _ZNK8QDomNode8nodeNameEv+131j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED57850:				; CODE XREF: _ZNK8QDomNode8nodeNameEv+4Aj
		mov	[ebp+var_9], 3Ah
		mov	dword ptr [esp+8], 0
		mov	edx, [ecx+1Ch]
		add	eax, [edx+8]
		mov	[ebp+var_48], 0FFFFFFFFh
		add	eax, 1
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	ds:_ZN7QStringC1EiN2Qt14InitializationE
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED57916

loc_6ED5788C:				; CODE XREF: _ZNK8QDomNode8nodeNameEv+13Cj
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_48], 1
		mov	[esp], ecx
		call	ds:_ZN7QString7reallocEv

loc_6ED5789F:				; CODE XREF: _ZNK8QDomNode8nodeNameEv+142j
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_50]
		mov	eax, [edx]
		mov	eax, [eax+0Ch]
		mov	[ebp+var_54], eax
		mov	eax, [ecx+24h]
		mov	edx, [eax+8]
		mov	eax, [eax+0Ch]
		add	edx, edx
		mov	[esp+4], eax	; void *
		mov	eax, [ebp+var_54]
		mov	[ebp+var_58], edx
		mov	[esp+8], edx	; size_t
		mov	[esp], eax	; void *
		call	memcpy
		movzx	eax, [ebp+var_9]
		mov	ecx, [ebp+var_50]
		mov	edx, [ebp+var_54]
		add	edx, [ebp+var_58]
		mov	[edx], ax
		mov	eax, [ecx+1Ch]
		add	edx, 2
		mov	ecx, [eax+8]
		mov	eax, [eax+0Ch]
		mov	[esp], edx	; void *
		add	ecx, ecx
		mov	[esp+8], ecx	; size_t
		mov	[esp+4], eax	; void *
		call	memcpy
		jmp	loc_6ED5783D
; ---------------------------------------------------------------------------

loc_6ED57901:				; CODE XREF: _ZNK8QDomNode8nodeNameEv+39j
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		jmp	loc_6ED5783D
; ---------------------------------------------------------------------------

loc_6ED57916:				; CODE XREF: _ZNK8QDomNode8nodeNameEv+A6j
		lea	edx, [eax+12h]
		cmp	[eax+0Ch], edx
		jnz	loc_6ED5788C
		jmp	loc_6ED5789F
_ZNK8QDomNode8nodeNameEv endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED57927	proc near		; DATA XREF: _ZNK8QDomNode8nodeNameEv+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-5Ch], eax
		mov	[esp+0], edx
		call	sub_6ED94560
		mov	ecx, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
sub_6ED57927	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED57960	proc near		; DATA XREF: .rdata:6EDA753Co

var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 98h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset dword_6ED9A400
		mov	[ebp+var_38], offset sub_6ED57D00
		mov	[ebp+var_34], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_8]
		mov	[esp+8], edx
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	ecx, [ebp+arg_0]
		mov	[esp], ecx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED46860
		test	eax, eax
		mov	[ebp+var_60], eax
		jz	loc_6ED57B02
		mov	eax, [ebp+arg_8]
		test	eax, eax
		jz	short loc_6ED57A16
		mov	edx, [ebp+arg_8]
		mov	eax, [edx]
		mov	[esp], edx
		call	dword ptr [eax+4Ch]
		test	al, al
		jz	loc_6ED57C12
		mov	ecx, [ebp+arg_8]
		mov	eax, [ecx+1Ch]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+38h]
		add	eax, 4
		mov	[esp], eax
		mov	[ebp+var_58], 4
		call	sub_6ED92EA0
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED57CA8

loc_6ED57A16:				; CODE XREF: sub_6ED57960+62j
					; sub_6ED57960+2C8j ...
		mov	edx, [ebp+var_60]
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+4Ch]
		mov	[ebp+var_58], 0FFFFFFFFh
		call	eax
		test	al, al
		jz	loc_6ED57B12
		mov	ecx, [ebp+var_60]
		mov	eax, [ecx+1Ch]
		mov	[ebp+var_14], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+38h]
		mov	[ebp+var_64], eax
		mov	edx, [ebp+var_64]
		add	eax, 4
		mov	[ebp+var_6C], eax
		mov	eax, [edx+4]
		mov	edx, [eax+8]
		cmp	edx, 1
		jz	short loc_6ED57A76
		mov	ecx, [ebp+var_6C]
		mov	[esp], ecx
		mov	[ebp+var_58], 2
		call	sub_6ED92E00
		mov	edx, [ebp+var_64]
		mov	eax, [edx+4]

loc_6ED57A76:				; CODE XREF: sub_6ED57960+FCj
		mov	edx, [eax+0Ch]
		cmp	edx, [eax+18h]
		jge	loc_6ED57CC0

loc_6ED57A82:				; CODE XREF: sub_6ED57960+37Bj
		lea	eax, [ebp+var_1C]
		mov	[esp+8], eax
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	ecx, [ebp+var_6C]
		mov	[esp], ecx
		mov	[ebp+var_58], 2
		call	sub_6ED983D0
		mov	[ebp+var_68], eax
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_74], eax
		mov	dword ptr [esp+4], 4
		mov	edx, [ebp+var_64]
		mov	eax, [edx+4]
		mov	[esp], eax
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		jz	short loc_6ED57AD8
		mov	edx, [ebp+var_14]
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	ecx, [ebp+var_60]
		mov	[eax+0Ch], ecx

loc_6ED57AD8:				; CODE XREF: sub_6ED57960+164j
		mov	edx, [ebp+var_74]
		mov	[eax+4], edx
		mov	ecx, [ebp+var_68]
		mov	edx, [ecx]
		mov	[eax], edx
		mov	[ecx], eax
		mov	edx, [ebp+var_64]
		mov	eax, [edx+4]
		add	dword ptr [eax+0Ch], 1
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED57C85

loc_6ED57B02:				; CODE XREF: sub_6ED57960+57j
					; sub_6ED57960+1C8j ...
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_60]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED57B12:				; CODE XREF: sub_6ED57960+CCj
		mov	edx, [ebp+var_60]
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+50h]
		mov	[ebp+var_58], 0FFFFFFFFh
		call	eax
		test	al, al
		jz	short loc_6ED57B02
		mov	ecx, [ebp+var_60]
		mov	eax, [ecx+1Ch]
		mov	[ebp+var_18], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+3Ch]
		mov	[ebp+var_70], eax
		mov	edx, [ebp+var_70]
		add	eax, 4
		mov	[ebp+var_7C], eax
		mov	eax, [edx+4]
		mov	edx, [eax+8]
		cmp	edx, 1
		jz	short loc_6ED57B6E
		mov	ecx, [ebp+var_7C]
		mov	[esp], ecx
		mov	[ebp+var_58], 1
		call	sub_6ED92E00
		mov	edx, [ebp+var_70]
		mov	eax, [edx+4]

loc_6ED57B6E:				; CODE XREF: sub_6ED57960+1F4j
		mov	edx, [eax+0Ch]
		cmp	edx, [eax+18h]
		jge	loc_6ED57CE0

loc_6ED57B7A:				; CODE XREF: sub_6ED57960+39Bj
		lea	eax, [ebp+var_1C]
		mov	[esp+8], eax
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		mov	ecx, [ebp+var_7C]
		mov	[esp], ecx
		mov	[ebp+var_58], 1
		call	sub_6ED983D0
		mov	[ebp+var_78], eax
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_80], eax
		mov	dword ptr [esp+4], 4
		mov	edx, [ebp+var_70]
		mov	eax, [edx+4]
		mov	[esp], eax
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		jz	short loc_6ED57BD0
		mov	edx, [ebp+var_18]
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	ecx, [ebp+var_60]
		mov	[eax+0Ch], ecx

loc_6ED57BD0:				; CODE XREF: sub_6ED57960+25Cj
		mov	edx, [ebp+var_80]
		mov	[eax+4], edx
		mov	ecx, [ebp+var_78]
		mov	edx, [ecx]
		mov	[eax], edx
		mov	[ecx], eax
		mov	edx, [ebp+var_70]
		mov	eax, [edx+4]
		add	dword ptr [eax+0Ch], 1
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED57B02
		mov	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED57B02
; ---------------------------------------------------------------------------

loc_6ED57C12:				; CODE XREF: sub_6ED57960+71j
		mov	edx, [ebp+arg_8]
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+50h]
		mov	[ebp+var_58], 0FFFFFFFFh
		call	eax
		test	al, al
		jz	loc_6ED57A16
		mov	edx, [ebp+arg_8]
		mov	eax, [edx+1Ch]
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+3Ch]
		add	eax, 4
		mov	[esp], eax
		mov	[ebp+var_58], 3
		call	sub_6ED92EA0
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED57A16
		mov	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED57A16
; ---------------------------------------------------------------------------

loc_6ED57C85:				; CODE XREF: sub_6ED57960+19Cj
		mov	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_60]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED57CA8:				; CODE XREF: sub_6ED57960+B0j
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED57A16
; ---------------------------------------------------------------------------

loc_6ED57CC0:				; CODE XREF: sub_6ED57960+11Cj
		movsx	edx, word ptr [eax+16h]
		mov	[esp], eax
		add	edx, 1
		mov	[esp+4], edx
		mov	[ebp+var_58], 2
		call	ds:_ZN9QHashData6rehashEi
		jmp	loc_6ED57A82
; ---------------------------------------------------------------------------

loc_6ED57CE0:				; CODE XREF: sub_6ED57960+214j
		movsx	edx, word ptr [eax+16h]
		mov	[esp], eax
		add	edx, 1
		mov	[esp+4], edx
		mov	[ebp+var_58], 1
		call	ds:_ZN9QHashData6rehashEi
		jmp	loc_6ED57B7A
sub_6ED57960	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED57D00	proc near		; DATA XREF: sub_6ED57960+20o
		add	ebp, 8
		mov	eax, [ebp-58h]
		mov	ecx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-84h], ecx
		jz	short loc_6ED57D45
		cmp	eax, 2
		jz	short loc_6ED57D71
		cmp	eax, 3
		jz	short loc_6ED57D6C
		lea	eax, [ebp-18h]

loc_6ED57D21:				; CODE XREF: sub_6ED57D00+74j
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		mov	eax, [ebp-84h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED57D45:				; CODE XREF: sub_6ED57D00+12j
		lea	eax, [ebp-14h]

loc_6ED57D48:				; CODE XREF: sub_6ED57D00+6Fj
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-84h]
		mov	[esp+0], ecx
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED57D6C:				; CODE XREF: sub_6ED57D00+1Cj
		lea	eax, [ebp-0Ch]
		jmp	short loc_6ED57D48
; ---------------------------------------------------------------------------

loc_6ED57D71:				; CODE XREF: sub_6ED57D00+17j
		lea	eax, [ebp-10h]
		jmp	short loc_6ED57D21
sub_6ED57D00	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 511. _ZNK18QXmlParseException7messageEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK18QXmlParseException7messageEv
_ZNK18QXmlParseException7messageEv proc	near ; CODE XREF: sub_6ED4D660+43p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		mov	edx, [edx]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK18QXmlParseException7messageEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 510. _ZNK18QXmlParseException12columnNumberEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK18QXmlParseException12columnNumberEv
_ZNK18QXmlParseException12columnNumberEv proc near ; CODE XREF:	sub_6ED4D660+A6p

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax]
		mov	eax, [eax+4]
		retn
_ZNK18QXmlParseException12columnNumberEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 509. _ZNK18QXmlParseException10lineNumberEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK18QXmlParseException10lineNumberEv
_ZNK18QXmlParseException10lineNumberEv proc near ; CODE	XREF: sub_6ED4D660+95p

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax]
		mov	eax, [eax+8]
		retn
_ZNK18QXmlParseException10lineNumberEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 512. _ZNK18QXmlParseException8publicIdEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK18QXmlParseException8publicIdEv
_ZNK18QXmlParseException8publicIdEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		mov	edx, [edx+0Ch]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK18QXmlParseException8publicIdEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 513. _ZNK18QXmlParseException8systemIdEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK18QXmlParseException8systemIdEv
_ZNK18QXmlParseException8systemIdEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		mov	edx, [edx+10h]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK18QXmlParseException8systemIdEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  42. _ZN11QXmlLocatorC2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN11QXmlLocatorC2Ev
_ZN11QXmlLocatorC2Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA6D68
		retn
_ZN11QXmlLocatorC2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  41. _ZN11QXmlLocatorC1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN11QXmlLocatorC1Ev
_ZN11QXmlLocatorC1Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA6D68
		retn
_ZN11QXmlLocatorC1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  45. _ZN11QXmlLocatorD2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN11QXmlLocatorD2Ev
_ZN11QXmlLocatorD2Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA6D68
		retn
_ZN11QXmlLocatorD2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  44. _ZN11QXmlLocatorD1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN11QXmlLocatorD1Ev
_ZN11QXmlLocatorD1Ev proc near		; DATA XREF: .rdata:off_6EDA6D68o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA6D68
		retn
_ZN11QXmlLocatorD1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 441. _ZNK14QXmlAttributes6lengthEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK14QXmlAttributes6lengthEv
_ZNK14QXmlAttributes6lengthEv proc near	; CODE XREF: sub_6ED555A0+1C1p

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	edx, [eax+4]
		mov	eax, [edx+0Ch]
		sub	eax, [edx+8]
		retn
_ZNK14QXmlAttributes6lengthEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 442. _ZNK14QXmlAttributes9localNameEi

; =============== S U B	R O U T	I N E =======================================


		public _ZNK14QXmlAttributes9localNameEi
_ZNK14QXmlAttributes9localNameEi proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	ecx, [esp+arg_4]
		mov	edx, [esp+arg_8]
		mov	eax, [esp+arg_0]
		mov	ecx, [ecx+4]
		add	edx, [ecx+8]
		mov	edx, [ecx+edx*4+14h]
		mov	edx, [edx+8]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK14QXmlAttributes9localNameEi endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 436. _ZNK14QXmlAttributes5qNameEi

; =============== S U B	R O U T	I N E =======================================


		public _ZNK14QXmlAttributes5qNameEi
_ZNK14QXmlAttributes5qNameEi proc near	; CODE XREF: sub_6ED555A0+113p
					; sub_6ED555A0+21Ap

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	ecx, [esp+arg_4]
		mov	edx, [esp+arg_8]
		mov	eax, [esp+arg_0]
		mov	ecx, [ecx+4]
		add	edx, [ecx+8]
		mov	edx, [ecx+edx*4+14h]
		mov	edx, [edx]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK14QXmlAttributes5qNameEi endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 429. _ZNK14QXmlAttributes3uriEi

; =============== S U B	R O U T	I N E =======================================


		public _ZNK14QXmlAttributes3uriEi
_ZNK14QXmlAttributes3uriEi proc	near	; CODE XREF: sub_6ED555A0+136p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	ecx, [esp+arg_4]
		mov	edx, [esp+arg_8]
		mov	eax, [esp+arg_0]
		mov	ecx, [ecx+4]
		add	edx, [ecx+8]
		mov	edx, [ecx+edx*4+14h]
		mov	edx, [edx+4]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK14QXmlAttributes3uriEi endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 440. _ZNK14QXmlAttributes5valueEi

; =============== S U B	R O U T	I N E =======================================


		public _ZNK14QXmlAttributes5valueEi
_ZNK14QXmlAttributes5valueEi proc near	; CODE XREF: sub_6ED555A0+F0p
					; sub_6ED555A0+1F7p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	ecx, [esp+arg_4]
		mov	edx, [esp+arg_8]
		mov	eax, [esp+arg_0]
		mov	ecx, [ecx+4]
		add	edx, [ecx+8]
		mov	edx, [ecx+edx*4+14h]
		mov	edx, [edx+0Ch]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK14QXmlAttributes5valueEi endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 107. _ZN15QXmlInputSource4nextEv

; =============== S U B	R O U T	I N E =======================================


		public _ZN15QXmlInputSource4nextEv
_ZN15QXmlInputSource4nextEv proc near	; DATA XREF: .rdata:6EDA6F80o

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	edx, [ebx+4]
		mov	ecx, [edx+10h]
		cmp	ecx, [edx+14h]
		jl	short loc_6ED57F37
		cmp	byte ptr [edx+18h], 0
		jnz	short loc_6ED57F54
		mov	byte ptr [edx+18h], 1
		mov	eax, 0FFFFFFFEh

loc_6ED57F32:				; CODE XREF: _ZN15QXmlInputSource4nextEv+38j
					; _ZN15QXmlInputSource4nextEv+63j
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_6ED57F37:				; CODE XREF: _ZN15QXmlInputSource4nextEv+11j
		mov	eax, [edx+0Ch]
		movzx	eax, word ptr [eax+ecx*2]
		add	ecx, 1
		mov	[edx+10h], ecx
		cmp	ax, 0FFFEh
		jnz	short loc_6ED57F32

loc_6ED57F4A:				; CODE XREF: _ZN15QXmlInputSource4nextEv+59j
		mov	eax, 0FFFFFFFFh
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_6ED57F54:				; CODE XREF: _ZN15QXmlInputSource4nextEv+17j
		mov	eax, [ebx]
		mov	byte ptr [edx+18h], 0
		mov	[esp+1Ch+var_1C], ebx
		call	dword ptr [eax+10h]
		mov	eax, [ebx+4]
		mov	edx, [eax+10h]
		cmp	edx, [eax+14h]
		jge	short loc_6ED57F4A
		mov	eax, [ebx]
		mov	[esp+1Ch+var_1C], ebx
		call	dword ptr [eax+18h]
		jmp	short loc_6ED57F32
_ZN15QXmlInputSource4nextEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 108. _ZN15QXmlInputSource5resetEv

; =============== S U B	R O U T	I N E =======================================


		public _ZN15QXmlInputSource5resetEv
_ZN15QXmlInputSource5resetEv proc near	; DATA XREF: .rdata:6EDA6F84o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+4]
		mov	byte ptr [eax+18h], 0
		mov	dword ptr [eax+10h], 0
		retn
_ZN15QXmlInputSource5resetEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 443. _ZNK15QXmlInputSource4dataEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK15QXmlInputSource4dataEv
_ZNK15QXmlInputSource4dataEv proc near	; DATA XREF: .rdata:6EDA6F7Co

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_0]
		mov	edx, [ebx+4]
		cmp	byte ptr [edx+18h], 0
		jz	short loc_6ED57FCB
		mov	eax, [ebx]
		mov	byte ptr [edx+18h], 0
		mov	[esp+1Ch+var_1C], ebx
		call	dword ptr [eax+10h]
		mov	edx, [ebx+4]

loc_6ED57FCB:				; CODE XREF: _ZNK15QXmlInputSource4dataEv+1Aj
		mov	edx, [edx+8]
		mov	[esi], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, esi
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn	4
_ZNK15QXmlInputSource4dataEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 276. _ZN18QXmlDefaultHandler18setDocumentLocatorEP11QXmlLocator

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlDefaultHandler18setDocumentLocatorEP11QXmlLocator
_ZN18QXmlDefaultHandler18setDocumentLocatorEP11QXmlLocator proc	near
					; DATA XREF: .rdata:6EDA7210o
		rep retn
_ZN18QXmlDefaultHandler18setDocumentLocatorEP11QXmlLocator endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 272. _ZN18QXmlDefaultHandler13startDocumentEv

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlDefaultHandler13startDocumentEv
_ZN18QXmlDefaultHandler13startDocumentEv proc near ; DATA XREF:	.rdata:6EDA6C34o
					; .rdata:6EDA7214o
		mov	eax, 1
		retn
_ZN18QXmlDefaultHandler13startDocumentEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 265. _ZN18QXmlDefaultHandler11endDocumentEv

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlDefaultHandler11endDocumentEv
_ZN18QXmlDefaultHandler11endDocumentEv proc near ; DATA	XREF: .rdata:6EDA7218o
		mov	eax, 1
		retn
_ZN18QXmlDefaultHandler11endDocumentEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 277. _ZN18QXmlDefaultHandler18startPrefixMappingERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlDefaultHandler18startPrefixMappingERK7QStringS2_
_ZN18QXmlDefaultHandler18startPrefixMappingERK7QStringS2_ proc near
					; DATA XREF: .rdata:6EDA6C3Co
					; .rdata:6EDA721Co
		mov	eax, 1
		retn
_ZN18QXmlDefaultHandler18startPrefixMappingERK7QStringS2_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 273. _ZN18QXmlDefaultHandler16endPrefixMappingERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlDefaultHandler16endPrefixMappingERK7QString
_ZN18QXmlDefaultHandler16endPrefixMappingERK7QString proc near ; DATA XREF: .rdata:6EDA6C40o
					; .rdata:6EDA7220o
		mov	eax, 1
		retn
_ZN18QXmlDefaultHandler16endPrefixMappingERK7QString endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 268. _ZN18QXmlDefaultHandler12startElementERK7QStringS2_S2_RK14QXmlAttributes

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlDefaultHandler12startElementERK7QStringS2_S2_RK14QXmlAttributes
_ZN18QXmlDefaultHandler12startElementERK7QStringS2_S2_RK14QXmlAttributes proc near
					; DATA XREF: .rdata:6EDA7224o
		mov	eax, 1
		retn
_ZN18QXmlDefaultHandler12startElementERK7QStringS2_S2_RK14QXmlAttributes endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 262. _ZN18QXmlDefaultHandler10endElementERK7QStringS2_S2_

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlDefaultHandler10endElementERK7QStringS2_S2_
_ZN18QXmlDefaultHandler10endElementERK7QStringS2_S2_ proc near ; DATA XREF: .rdata:6EDA7228o
		mov	eax, 1
		retn
_ZN18QXmlDefaultHandler10endElementERK7QStringS2_S2_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 261. _ZN18QXmlDefaultHandler10charactersERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlDefaultHandler10charactersERK7QString
_ZN18QXmlDefaultHandler10charactersERK7QString proc near ; DATA	XREF: .rdata:6EDA722Co
		mov	eax, 1
		retn
_ZN18QXmlDefaultHandler10charactersERK7QString endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 279. _ZN18QXmlDefaultHandler19ignorableWhitespaceERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlDefaultHandler19ignorableWhitespaceERK7QString
_ZN18QXmlDefaultHandler19ignorableWhitespaceERK7QString	proc near
					; DATA XREF: .rdata:6EDA6C50o
					; .rdata:6EDA7230o
		mov	eax, 1
		retn
_ZN18QXmlDefaultHandler19ignorableWhitespaceERK7QString	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 280. _ZN18QXmlDefaultHandler21processingInstructionERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlDefaultHandler21processingInstructionERK7QStringS2_
_ZN18QXmlDefaultHandler21processingInstructionERK7QStringS2_ proc near
					; DATA XREF: .rdata:6EDA7234o
		mov	eax, 1
		retn
_ZN18QXmlDefaultHandler21processingInstructionERK7QStringS2_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 271. _ZN18QXmlDefaultHandler13skippedEntityERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlDefaultHandler13skippedEntityERK7QString
_ZN18QXmlDefaultHandler13skippedEntityERK7QString proc near ; DATA XREF: .rdata:6EDA7238o
		mov	eax, 1
		retn
_ZN18QXmlDefaultHandler13skippedEntityERK7QString endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 622. _ZThn4_N18QXmlDefaultHandler7warningERK18QXmlParseException

; =============== S U B	R O U T	I N E =======================================


		public _ZThn4_N18QXmlDefaultHandler7warningERK18QXmlParseException
_ZThn4_N18QXmlDefaultHandler7warningERK18QXmlParseException proc near
					; DATA XREF: .rdata:6EDA6CB0o
					; .rdata:6EDA7290o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFFCh
		jmp	short _ZN18QXmlDefaultHandler7warningERK18QXmlParseException
_ZThn4_N18QXmlDefaultHandler7warningERK18QXmlParseException endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 284. _ZN18QXmlDefaultHandler7warningERK18QXmlParseException

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlDefaultHandler7warningERK18QXmlParseException
_ZN18QXmlDefaultHandler7warningERK18QXmlParseException proc near
					; CODE XREF: _ZThn4_N18QXmlDefaultHandler7warningERK18QXmlParseException+5j
					; DATA XREF: .rdata:6EDA6C60o ...
		mov	eax, 1
		retn
_ZN18QXmlDefaultHandler7warningERK18QXmlParseException endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 621. _ZThn4_N18QXmlDefaultHandler5errorERK18QXmlParseException

; =============== S U B	R O U T	I N E =======================================


		public _ZThn4_N18QXmlDefaultHandler5errorERK18QXmlParseException
_ZThn4_N18QXmlDefaultHandler5errorERK18QXmlParseException proc near
					; DATA XREF: .rdata:6EDA6CB4o
					; .rdata:6EDA7294o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFFCh
		jmp	short _ZN18QXmlDefaultHandler5errorERK18QXmlParseException
_ZThn4_N18QXmlDefaultHandler5errorERK18QXmlParseException endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 281. _ZN18QXmlDefaultHandler5errorERK18QXmlParseException

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlDefaultHandler5errorERK18QXmlParseException
_ZN18QXmlDefaultHandler5errorERK18QXmlParseException proc near
					; CODE XREF: _ZThn4_N18QXmlDefaultHandler5errorERK18QXmlParseException+5j
					; DATA XREF: .rdata:6EDA6C64o ...
		mov	eax, 1
		retn
_ZN18QXmlDefaultHandler5errorERK18QXmlParseException endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 620. _ZThn4_N18QXmlDefaultHandler10fatalErrorERK18QXmlParseException

; =============== S U B	R O U T	I N E =======================================


		public _ZThn4_N18QXmlDefaultHandler10fatalErrorERK18QXmlParseException
_ZThn4_N18QXmlDefaultHandler10fatalErrorERK18QXmlParseException	proc near
					; DATA XREF: .rdata:6EDA7298o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFFCh
		jmp	short _ZN18QXmlDefaultHandler10fatalErrorERK18QXmlParseException
_ZThn4_N18QXmlDefaultHandler10fatalErrorERK18QXmlParseException	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 263. _ZN18QXmlDefaultHandler10fatalErrorERK18QXmlParseException

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlDefaultHandler10fatalErrorERK18QXmlParseException
_ZN18QXmlDefaultHandler10fatalErrorERK18QXmlParseException proc	near
					; CODE XREF: sub_6ED4D660+BBp
					; _ZThn4_N18QXmlDefaultHandler10fatalErrorERK18QXmlParseException+5j
					; DATA XREF: ...
		mov	eax, 1
		retn
_ZN18QXmlDefaultHandler10fatalErrorERK18QXmlParseException endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 626. _ZThn8_N18QXmlDefaultHandler12notationDeclERK7QStringS2_S2_

; =============== S U B	R O U T	I N E =======================================


		public _ZThn8_N18QXmlDefaultHandler12notationDeclERK7QStringS2_S2_
_ZThn8_N18QXmlDefaultHandler12notationDeclERK7QStringS2_S2_ proc near
					; DATA XREF: .rdata:6EDA72B0o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF8h
		jmp	short _ZN18QXmlDefaultHandler12notationDeclERK7QStringS2_S2_
_ZThn8_N18QXmlDefaultHandler12notationDeclERK7QStringS2_S2_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 267. _ZN18QXmlDefaultHandler12notationDeclERK7QStringS2_S2_

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlDefaultHandler12notationDeclERK7QStringS2_S2_
_ZN18QXmlDefaultHandler12notationDeclERK7QStringS2_S2_ proc near
					; CODE XREF: _ZThn8_N18QXmlDefaultHandler12notationDeclERK7QStringS2_S2_+5j
					; DATA XREF: .rdata:6EDA724Co
		mov	eax, 1
		retn
_ZN18QXmlDefaultHandler12notationDeclERK7QStringS2_S2_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 627. _ZThn8_N18QXmlDefaultHandler18unparsedEntityDeclERK7QStringS2_S2_S2_

; =============== S U B	R O U T	I N E =======================================


		public _ZThn8_N18QXmlDefaultHandler18unparsedEntityDeclERK7QStringS2_S2_S2_
_ZThn8_N18QXmlDefaultHandler18unparsedEntityDeclERK7QStringS2_S2_S2_ proc near
					; DATA XREF: .rdata:6EDA72B4o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF8h
		jmp	short _ZN18QXmlDefaultHandler18unparsedEntityDeclERK7QStringS2_S2_S2_
_ZThn8_N18QXmlDefaultHandler18unparsedEntityDeclERK7QStringS2_S2_S2_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 278. _ZN18QXmlDefaultHandler18unparsedEntityDeclERK7QStringS2_S2_S2_

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlDefaultHandler18unparsedEntityDeclERK7QStringS2_S2_S2_
_ZN18QXmlDefaultHandler18unparsedEntityDeclERK7QStringS2_S2_S2_	proc near
					; CODE XREF: _ZThn8_N18QXmlDefaultHandler18unparsedEntityDeclERK7QStringS2_S2_S2_+5j
					; DATA XREF: .rdata:6EDA7250o
		mov	eax, 1
		retn
_ZN18QXmlDefaultHandler18unparsedEntityDeclERK7QStringS2_S2_S2_	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 600. _ZThn12_N18QXmlDefaultHandler13resolveEntityERK7QStringS2_RP15QXmlInputSource

; =============== S U B	R O U T	I N E =======================================


		public _ZThn12_N18QXmlDefaultHandler13resolveEntityERK7QStringS2_RP15QXmlInputSource
_ZThn12_N18QXmlDefaultHandler13resolveEntityERK7QStringS2_RP15QXmlInputSource proc near
					; DATA XREF: .rdata:6EDA6CECo
					; .rdata:6EDA72CCo

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF4h
		jmp	short _ZN18QXmlDefaultHandler13resolveEntityERK7QStringS2_RP15QXmlInputSource
_ZThn12_N18QXmlDefaultHandler13resolveEntityERK7QStringS2_RP15QXmlInputSource endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 270. _ZN18QXmlDefaultHandler13resolveEntityERK7QStringS2_RP15QXmlInputSource

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlDefaultHandler13resolveEntityERK7QStringS2_RP15QXmlInputSource
_ZN18QXmlDefaultHandler13resolveEntityERK7QStringS2_RP15QXmlInputSource	proc near
					; CODE XREF: _ZThn12_N18QXmlDefaultHandler13resolveEntityERK7QStringS2_RP15QXmlInputSource+5j
					; DATA XREF: .rdata:6EDA6C74o ...

arg_C		= dword	ptr  10h

		mov	eax, [esp+arg_C]
		mov	dword ptr [eax], 0
		mov	eax, 1
		retn
_ZN18QXmlDefaultHandler13resolveEntityERK7QStringS2_RP15QXmlInputSource	endp

; Exported entry 609. _ZThn16_N18QXmlDefaultHandler8startDTDERK7QStringS2_S2_

; =============== S U B	R O U T	I N E =======================================


		public _ZThn16_N18QXmlDefaultHandler8startDTDERK7QStringS2_S2_
_ZThn16_N18QXmlDefaultHandler8startDTDERK7QStringS2_S2_	proc near
					; DATA XREF: .rdata:6EDA72E4o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF0h
		jmp	short _ZN18QXmlDefaultHandler8startDTDERK7QStringS2_S2_
_ZThn16_N18QXmlDefaultHandler8startDTDERK7QStringS2_S2_	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 286. _ZN18QXmlDefaultHandler8startDTDERK7QStringS2_S2_

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlDefaultHandler8startDTDERK7QStringS2_S2_
_ZN18QXmlDefaultHandler8startDTDERK7QStringS2_S2_ proc near
					; CODE XREF: _ZThn16_N18QXmlDefaultHandler8startDTDERK7QStringS2_S2_+5j
					; DATA XREF: .rdata:6EDA7258o
		mov	eax, 1
		retn
_ZN18QXmlDefaultHandler8startDTDERK7QStringS2_S2_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 606. _ZThn16_N18QXmlDefaultHandler6endDTDEv

; =============== S U B	R O U T	I N E =======================================


		public _ZThn16_N18QXmlDefaultHandler6endDTDEv
_ZThn16_N18QXmlDefaultHandler6endDTDEv proc near ; DATA	XREF: .rdata:6EDA6D08o
					; .rdata:6EDA72E8o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF0h
		jmp	short _ZN18QXmlDefaultHandler6endDTDEv
_ZThn16_N18QXmlDefaultHandler6endDTDEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 282. _ZN18QXmlDefaultHandler6endDTDEv

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlDefaultHandler6endDTDEv
_ZN18QXmlDefaultHandler6endDTDEv proc near
					; CODE XREF: _ZThn16_N18QXmlDefaultHandler6endDTDEv+5j
					; DATA XREF: .rdata:6EDA6C7Co ...
		mov	eax, 1
		retn
_ZN18QXmlDefaultHandler6endDTDEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 605. _ZThn16_N18QXmlDefaultHandler11startEntityERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZThn16_N18QXmlDefaultHandler11startEntityERK7QString
_ZThn16_N18QXmlDefaultHandler11startEntityERK7QString proc near
					; DATA XREF: .rdata:6EDA72ECo

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF0h
		jmp	short _ZN18QXmlDefaultHandler11startEntityERK7QString
_ZThn16_N18QXmlDefaultHandler11startEntityERK7QString endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 266. _ZN18QXmlDefaultHandler11startEntityERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlDefaultHandler11startEntityERK7QString
_ZN18QXmlDefaultHandler11startEntityERK7QString	proc near
					; CODE XREF: _ZThn16_N18QXmlDefaultHandler11startEntityERK7QString+5j
					; DATA XREF: .rdata:6EDA7260o
		mov	eax, 1
		retn
_ZN18QXmlDefaultHandler11startEntityERK7QString	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 610. _ZThn16_N18QXmlDefaultHandler9endEntityERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZThn16_N18QXmlDefaultHandler9endEntityERK7QString
_ZThn16_N18QXmlDefaultHandler9endEntityERK7QString proc	near ; DATA XREF: .rdata:6EDA72F0o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF0h
		jmp	short _ZN18QXmlDefaultHandler9endEntityERK7QString
_ZThn16_N18QXmlDefaultHandler9endEntityERK7QString endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 287. _ZN18QXmlDefaultHandler9endEntityERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlDefaultHandler9endEntityERK7QString
_ZN18QXmlDefaultHandler9endEntityERK7QString proc near
					; CODE XREF: _ZThn16_N18QXmlDefaultHandler9endEntityERK7QString+5j
					; DATA XREF: .rdata:6EDA7264o
		mov	eax, 1
		retn
_ZN18QXmlDefaultHandler9endEntityERK7QString endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 604. _ZThn16_N18QXmlDefaultHandler10startCDATAEv

; =============== S U B	R O U T	I N E =======================================


		public _ZThn16_N18QXmlDefaultHandler10startCDATAEv
_ZThn16_N18QXmlDefaultHandler10startCDATAEv proc near ;	DATA XREF: .rdata:6EDA72F4o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF0h
		jmp	short _ZN18QXmlDefaultHandler10startCDATAEv
_ZThn16_N18QXmlDefaultHandler10startCDATAEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 264. _ZN18QXmlDefaultHandler10startCDATAEv

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlDefaultHandler10startCDATAEv
_ZN18QXmlDefaultHandler10startCDATAEv proc near
					; CODE XREF: _ZThn16_N18QXmlDefaultHandler10startCDATAEv+5j
					; DATA XREF: .rdata:6EDA7268o
		mov	eax, 1
		retn
_ZN18QXmlDefaultHandler10startCDATAEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 608. _ZThn16_N18QXmlDefaultHandler8endCDATAEv

; =============== S U B	R O U T	I N E =======================================


		public _ZThn16_N18QXmlDefaultHandler8endCDATAEv
_ZThn16_N18QXmlDefaultHandler8endCDATAEv proc near ; DATA XREF:	.rdata:6EDA72F8o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF0h
		jmp	short _ZN18QXmlDefaultHandler8endCDATAEv
_ZThn16_N18QXmlDefaultHandler8endCDATAEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 285. _ZN18QXmlDefaultHandler8endCDATAEv

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlDefaultHandler8endCDATAEv
_ZN18QXmlDefaultHandler8endCDATAEv proc	near
					; CODE XREF: _ZThn16_N18QXmlDefaultHandler8endCDATAEv+5j
					; DATA XREF: .rdata:6EDA726Co
		mov	eax, 1
		retn
_ZN18QXmlDefaultHandler8endCDATAEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 607. _ZThn16_N18QXmlDefaultHandler7commentERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZThn16_N18QXmlDefaultHandler7commentERK7QString
_ZThn16_N18QXmlDefaultHandler7commentERK7QString proc near ; DATA XREF:	.rdata:6EDA72FCo

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF0h
		jmp	short _ZN18QXmlDefaultHandler7commentERK7QString
_ZThn16_N18QXmlDefaultHandler7commentERK7QString endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 283. _ZN18QXmlDefaultHandler7commentERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlDefaultHandler7commentERK7QString
_ZN18QXmlDefaultHandler7commentERK7QString proc	near
					; CODE XREF: _ZThn16_N18QXmlDefaultHandler7commentERK7QString+5j
					; DATA XREF: .rdata:6EDA7270o
		mov	eax, 1
		retn
_ZN18QXmlDefaultHandler7commentERK7QString endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 614. _ZThn20_N18QXmlDefaultHandler13attributeDeclERK7QStringS2_S2_S2_S2_

; =============== S U B	R O U T	I N E =======================================


		public _ZThn20_N18QXmlDefaultHandler13attributeDeclERK7QStringS2_S2_S2_S2_
_ZThn20_N18QXmlDefaultHandler13attributeDeclERK7QStringS2_S2_S2_S2_ proc near
					; DATA XREF: .rdata:6EDA6D34o
					; .rdata:6EDA7314o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFECh
		jmp	short _ZN18QXmlDefaultHandler13attributeDeclERK7QStringS2_S2_S2_S2_
_ZThn20_N18QXmlDefaultHandler13attributeDeclERK7QStringS2_S2_S2_S2_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 269. _ZN18QXmlDefaultHandler13attributeDeclERK7QStringS2_S2_S2_S2_

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlDefaultHandler13attributeDeclERK7QStringS2_S2_S2_S2_
_ZN18QXmlDefaultHandler13attributeDeclERK7QStringS2_S2_S2_S2_ proc near
					; CODE XREF: _ZThn20_N18QXmlDefaultHandler13attributeDeclERK7QStringS2_S2_S2_S2_+5j
					; DATA XREF: .rdata:6EDA6C94o ...
		mov	eax, 1
		retn
_ZN18QXmlDefaultHandler13attributeDeclERK7QStringS2_S2_S2_S2_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 616. _ZThn20_N18QXmlDefaultHandler18internalEntityDeclERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================


		public _ZThn20_N18QXmlDefaultHandler18internalEntityDeclERK7QStringS2_
_ZThn20_N18QXmlDefaultHandler18internalEntityDeclERK7QStringS2_	proc near
					; DATA XREF: .rdata:6EDA6D38o
					; .rdata:6EDA7318o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFECh
		jmp	short _ZN18QXmlDefaultHandler18internalEntityDeclERK7QStringS2_
_ZThn20_N18QXmlDefaultHandler18internalEntityDeclERK7QStringS2_	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 275. _ZN18QXmlDefaultHandler18internalEntityDeclERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlDefaultHandler18internalEntityDeclERK7QStringS2_
_ZN18QXmlDefaultHandler18internalEntityDeclERK7QStringS2_ proc near
					; CODE XREF: _ZThn20_N18QXmlDefaultHandler18internalEntityDeclERK7QStringS2_+5j
					; DATA XREF: .rdata:6EDA6C98o ...
		mov	eax, 1
		retn
_ZN18QXmlDefaultHandler18internalEntityDeclERK7QStringS2_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 615. _ZThn20_N18QXmlDefaultHandler18externalEntityDeclERK7QStringS2_S2_

; =============== S U B	R O U T	I N E =======================================


		public _ZThn20_N18QXmlDefaultHandler18externalEntityDeclERK7QStringS2_S2_
_ZThn20_N18QXmlDefaultHandler18externalEntityDeclERK7QStringS2_S2_ proc	near
					; DATA XREF: .rdata:6EDA731Co

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFECh
		jmp	short _ZN18QXmlDefaultHandler18externalEntityDeclERK7QStringS2_S2_
_ZThn20_N18QXmlDefaultHandler18externalEntityDeclERK7QStringS2_S2_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 274. _ZN18QXmlDefaultHandler18externalEntityDeclERK7QStringS2_S2_

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlDefaultHandler18externalEntityDeclERK7QStringS2_S2_
_ZN18QXmlDefaultHandler18externalEntityDeclERK7QStringS2_S2_ proc near
					; CODE XREF: _ZThn20_N18QXmlDefaultHandler18externalEntityDeclERK7QStringS2_S2_+5j
					; DATA XREF: .rdata:6EDA727Co
		mov	eax, 1
		retn
_ZN18QXmlDefaultHandler18externalEntityDeclERK7QStringS2_S2_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 466. _ZNK16QXmlSimpleReader8propertyERK7QStringPb

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlSimpleReader8propertyERK7QStringPb
_ZNK16QXmlSimpleReader8propertyERK7QStringPb proc near ; DATA XREF: .rdata:6EDA6FDCo

arg_8		= dword	ptr  0Ch

		mov	eax, [esp+arg_8]
		test	eax, eax
		jz	short loc_6ED582AB
		mov	byte ptr [eax],	0

loc_6ED582AB:				; CODE XREF: _ZNK16QXmlSimpleReader8propertyERK7QStringPb+6j
		xor	eax, eax
		retn
_ZNK16QXmlSimpleReader8propertyERK7QStringPb endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 150. _ZN16QXmlSimpleReader11setPropertyERK7QStringPv

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlSimpleReader11setPropertyERK7QStringPv
_ZN16QXmlSimpleReader11setPropertyERK7QStringPv	proc near ; DATA XREF: .rdata:6EDA6FE0o
		rep retn
_ZN16QXmlSimpleReader11setPropertyERK7QStringPv	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 460. _ZNK16QXmlSimpleReader11hasPropertyERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlSimpleReader11hasPropertyERK7QString
_ZNK16QXmlSimpleReader11hasPropertyERK7QString proc near ; DATA	XREF: .rdata:6EDA6FE4o
		xor	eax, eax
		retn
_ZNK16QXmlSimpleReader11hasPropertyERK7QString endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 156. _ZN16QXmlSimpleReader17setEntityResolverEP18QXmlEntityResolver

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlSimpleReader17setEntityResolverEP18QXmlEntityResolver
_ZN16QXmlSimpleReader17setEntityResolverEP18QXmlEntityResolver proc near
					; DATA XREF: .rdata:6EDA6FE8o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		mov	edx, [esp+arg_4]
		mov	eax, [eax+4]
		mov	[eax+88h], edx
		retn
_ZN16QXmlSimpleReader17setEntityResolverEP18QXmlEntityResolver endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 463. _ZNK16QXmlSimpleReader14entityResolverEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlSimpleReader14entityResolverEv
_ZNK16QXmlSimpleReader14entityResolverEv proc near ; DATA XREF:	.rdata:6EDA6FECo

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+4]
		mov	eax, [eax+88h]
		retn
_ZNK16QXmlSimpleReader14entityResolverEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 152. _ZN16QXmlSimpleReader13setDTDHandlerEP14QXmlDTDHandler

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlSimpleReader13setDTDHandlerEP14QXmlDTDHandler
_ZN16QXmlSimpleReader13setDTDHandlerEP14QXmlDTDHandler proc near
					; DATA XREF: .rdata:6EDA6FF0o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		mov	edx, [esp+arg_4]
		mov	eax, [eax+4]
		mov	[eax+84h], edx
		retn
_ZN16QXmlSimpleReader13setDTDHandlerEP14QXmlDTDHandler endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 457. _ZNK16QXmlSimpleReader10DTDHandlerEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlSimpleReader10DTDHandlerEv
_ZNK16QXmlSimpleReader10DTDHandlerEv proc near ; DATA XREF: .rdata:6EDA6FF4o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+4]
		mov	eax, [eax+84h]
		retn
_ZNK16QXmlSimpleReader10DTDHandlerEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 155. _ZN16QXmlSimpleReader17setContentHandlerEP18QXmlContentHandler

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlSimpleReader17setContentHandlerEP18QXmlContentHandler
_ZN16QXmlSimpleReader17setContentHandlerEP18QXmlContentHandler proc near
					; DATA XREF: .rdata:6EDA6FF8o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		mov	edx, [esp+arg_4]
		mov	eax, [eax+4]
		mov	[eax+7Ch], edx
		retn
_ZN16QXmlSimpleReader17setContentHandlerEP18QXmlContentHandler endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 462. _ZNK16QXmlSimpleReader14contentHandlerEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlSimpleReader14contentHandlerEv
_ZNK16QXmlSimpleReader14contentHandlerEv proc near ; DATA XREF:	.rdata:6EDA6FFCo

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+4]
		mov	eax, [eax+7Ch]
		retn
_ZNK16QXmlSimpleReader14contentHandlerEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 154. _ZN16QXmlSimpleReader15setErrorHandlerEP16QXmlErrorHandler

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlSimpleReader15setErrorHandlerEP16QXmlErrorHandler
_ZN16QXmlSimpleReader15setErrorHandlerEP16QXmlErrorHandler proc	near
					; DATA XREF: .rdata:6EDA7000o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		mov	edx, [esp+arg_4]
		mov	eax, [eax+4]
		mov	[eax+80h], edx
		retn
_ZN16QXmlSimpleReader15setErrorHandlerEP16QXmlErrorHandler endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 461. _ZNK16QXmlSimpleReader12errorHandlerEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlSimpleReader12errorHandlerEv
_ZNK16QXmlSimpleReader12errorHandlerEv proc near ; DATA	XREF: .rdata:6EDA7004o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+4]
		mov	eax, [eax+80h]
		retn
_ZNK16QXmlSimpleReader12errorHandlerEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 157. _ZN16QXmlSimpleReader17setLexicalHandlerEP18QXmlLexicalHandler

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlSimpleReader17setLexicalHandlerEP18QXmlLexicalHandler
_ZN16QXmlSimpleReader17setLexicalHandlerEP18QXmlLexicalHandler proc near
					; DATA XREF: .rdata:6EDA7008o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		mov	edx, [esp+arg_4]
		mov	eax, [eax+4]
		mov	[eax+8Ch], edx
		retn
_ZN16QXmlSimpleReader17setLexicalHandlerEP18QXmlLexicalHandler endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 464. _ZNK16QXmlSimpleReader14lexicalHandlerEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlSimpleReader14lexicalHandlerEv
_ZNK16QXmlSimpleReader14lexicalHandlerEv proc near ; DATA XREF:	.rdata:6EDA700Co

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+4]
		mov	eax, [eax+8Ch]
		retn
_ZNK16QXmlSimpleReader14lexicalHandlerEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 153. _ZN16QXmlSimpleReader14setDeclHandlerEP15QXmlDeclHandler

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlSimpleReader14setDeclHandlerEP15QXmlDeclHandler
_ZN16QXmlSimpleReader14setDeclHandlerEP15QXmlDeclHandler proc near
					; DATA XREF: .rdata:6EDA7010o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		mov	edx, [esp+arg_4]
		mov	eax, [eax+4]
		mov	[eax+90h], edx
		retn
_ZN16QXmlSimpleReader14setDeclHandlerEP15QXmlDeclHandler endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 459. _ZNK16QXmlSimpleReader11declHandlerEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlSimpleReader11declHandlerEv
_ZNK16QXmlSimpleReader11declHandlerEv proc near	; DATA XREF: .rdata:6EDA7014o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+4]
		mov	eax, [eax+90h]
		retn
_ZNK16QXmlSimpleReader11declHandlerEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 160. _ZN16QXmlSimpleReader5parseERK15QXmlInputSource

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlSimpleReader5parseERK15QXmlInputSource
_ZN16QXmlSimpleReader5parseERK15QXmlInputSource	proc near ; DATA XREF: .rdata:6EDA7018o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	ecx, [esp+1Ch+arg_4]
		mov	edx, [eax]
		mov	[esp+1Ch+var_14], 0
		mov	[esp+1Ch+var_18], ecx
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+58h]
		add	esp, 1Ch
		retn
_ZN16QXmlSimpleReader5parseERK15QXmlInputSource	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 158. _ZN16QXmlSimpleReader5parseEPK15QXmlInputSource

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlSimpleReader5parseEPK15QXmlInputSource
_ZN16QXmlSimpleReader5parseEPK15QXmlInputSource	proc near ; DATA XREF: .rdata:6EDA701Co

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	ecx, [esp+1Ch+arg_4]
		mov	edx, [eax]
		mov	[esp+1Ch+var_14], 0
		mov	[esp+1Ch+var_18], ecx
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+58h]
		add	esp, 1Ch
		retn
_ZN16QXmlSimpleReader5parseEPK15QXmlInputSource	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  43. _ZN11QXmlLocatorD0Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN11QXmlLocatorD0Ev
_ZN11QXmlLocatorD0Ev proc near		; DATA XREF: .rdata:6EDA6D6Co

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA6D68
		add	esp, 0Ch
		jmp	sub_6ED988B0
_ZN11QXmlLocatorD0Ev endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED58460	proc near		; CODE XREF: sub_6ED65310+D4p
					; sub_6ED65310+31Dp ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= word ptr  8

		sub	esp, 2Ch
		mov	[esp+2Ch+var_10], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_C], esi
		mov	[esp+2Ch+var_8], edi
		mov	[esp+2Ch+var_4], ebp
		mov	eax, [ebx+2A8h]
		cmp	eax, 100h
		lea	edx, [eax+1]
		jz	short loc_6ED584B0

loc_6ED58487:				; CODE XREF: sub_6ED58460+D1j
		movzx	ecx, [esp+2Ch+arg_4]
		mov	[ebx+2A8h], edx
		mov	[ebx+eax*2+0A4h], cx
		mov	ebx, [esp+2Ch+var_10]
		mov	esi, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_8]
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED584B0:				; CODE XREF: sub_6ED58460+25j
		mov	eax, [ebx+2ACh]
		lea	esi, [ebx+2A4h]
		mov	[esp+2Ch+var_2C], esi
		lea	edi, [ebx+0A4h]
		add	eax, 100h
		mov	[esp+2Ch+var_28], eax
		call	ds:_ZN7QString6resizeEi
		mov	eax, [ebx+2A4h]
		mov	ebp, [ebx+2A8h]
		mov	edx, [eax]
		add	ebp, ebp
		cmp	edx, 1
		jz	short loc_6ED58536

loc_6ED584E9:				; CODE XREF: sub_6ED58460+DEj
		mov	[esp+2Ch+var_2C], esi
		call	ds:_ZN7QString7reallocEv
		mov	eax, [ebx+2A4h]
		mov	edx, [eax+0Ch]

loc_6ED584FB:				; CODE XREF: sub_6ED58460+E0j
		mov	eax, [ebx+2ACh]
		mov	[esp+2Ch+var_24], ebp ;	size_t
		mov	[esp+2Ch+var_28], edi ;	void *
		lea	eax, [edx+eax*2]
		mov	[esp+2Ch+var_2C], eax ;	void *
		call	memcpy
		mov	eax, [ebx+2A8h]
		mov	edx, 1
		add	[ebx+2ACh], eax
		xor	eax, eax
		mov	dword ptr [ebx+2A8h], 0
		jmp	loc_6ED58487
; ---------------------------------------------------------------------------

loc_6ED58536:				; CODE XREF: sub_6ED58460+87j
		mov	edx, [eax+0Ch]
		add	eax, 12h
		cmp	edx, eax
		jnz	short loc_6ED584E9
		jmp	short loc_6ED584FB
sub_6ED58460	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED58550	proc near		; CODE XREF: sub_6ED58610+3Bj
					; sub_6ED60E40+6Cp ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 2Ch
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_C], esi
		mov	esi, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_8], edi
		mov	edi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_4], ebp
		mov	ebp, [esp+2Ch+arg_C]
		mov	[esp+2Ch+var_10], ebx
		mov	ebx, [eax+74h]
		mov	eax, [ebx]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED585F0
		mov	edx, [eax+8]

loc_6ED58582:				; CODE XREF: sub_6ED58550+A6j
		add	edx, 1
		mov	[esp+2Ch+var_28], edx
		mov	[esp+2Ch+var_20], 1
		mov	[esp+2Ch+var_24], 0Ch
		mov	[esp+2Ch+var_2C], 1Ch
		call	ds:_ZN11QVectorData4growEiiib
		mov	[esp+2Ch+var_24], eax
		mov	eax, [ebx]
		mov	eax, [eax+8]
		mov	[esp+2Ch+var_2C], ebx
		mov	[esp+2Ch+var_28], eax
		call	sub_6ED96400
		mov	eax, [ebx]
		mov	edx, [eax+8]
		lea	edx, [edx+edx*2]
		lea	eax, [eax+edx*4]
		mov	[eax+18h], ebp
		mov	[eax+14h], esi
		mov	[eax+10h], edi

loc_6ED585CF:				; CODE XREF: sub_6ED58550+B7j
		mov	eax, [ebx]
		add	dword ptr [eax+8], 1
		mov	ebx, [esp+2Ch+var_10]
		mov	esi, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_8]
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED585F0:				; CODE XREF: sub_6ED58550+2Dj
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jge	short loc_6ED58582
		lea	edx, [edx+edx*2]
		lea	eax, [eax+edx*4]
		mov	[eax+18h], ebp
		mov	[eax+10h], edi
		mov	[eax+14h], esi
		jmp	short loc_6ED585CF
sub_6ED58550	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED58610	proc near		; CODE XREF: sub_6ED64390+319p
					; sub_6ED64710+2EAp ...

var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	[esp+0Ch+var_8], ebx
		mov	[esp+0Ch+var_4], esi
		mov	edx, [eax+74h]
		test	edx, edx
		jz	short loc_6ED58631
		mov	edx, ds:_ZN7QString11shared_nullE
		cmp	[eax+5Ch], edx
		jz	short loc_6ED58640

loc_6ED58631:				; CODE XREF: sub_6ED58610+14j
		mov	ebx, [esp+0Ch+var_8]
		mov	esi, [esp+0Ch+var_4]
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED58640:				; CODE XREF: sub_6ED58610+1Fj
		mov	ebx, [esp+0Ch+var_8]
		mov	esi, [esp+0Ch+var_4]
		add	esp, 0Ch
		jmp	sub_6ED58550
sub_6ED58610	endp

; Exported entry 110. _ZN15QXmlInputSource7setDataERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN15QXmlInputSource7setDataERK7QString
_ZN15QXmlInputSource7setDataERK7QString	proc near
					; CODE XREF: _ZN12QDomDocument10setContentERK7QStringbPS0_PiS4_+69p
					; DATA XREF: .rdata:6EDA6F70o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_18], ebx
		mov	eax, [esi+4]
		add	eax, 8
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN7QStringaSERKS_
		mov	edx, [ebx]
		mov	eax, [esi+4]
		mov	edx, [edx+0Ch]
		mov	dword ptr [eax+10h], 0
		mov	byte ptr [eax+18h], 0
		mov	[eax+0Ch], edx
		mov	edx, [eax+8]
		mov	edx, [edx+8]
		mov	[eax+14h], edx
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
_ZN15QXmlInputSource7setDataERK7QString	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 458. _ZNK16QXmlSimpleReader10hasFeatureERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlSimpleReader10hasFeatureERK7QString
_ZNK16QXmlSimpleReader10hasFeatureERK7QString proc near	; DATA XREF: .rdata:6EDA6FD8o

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_4		= dword	ptr  8

		sub	esp, 2Ch
		mov	[esp+2Ch+var_4], esi
		mov	esi, [esp+2Ch+arg_4]
		lea	eax, [esp+2Ch+var_10]
		mov	[esp+2Ch+var_8], ebx
		mov	ebx, ds:_ZNK7QStringeqERK13QLatin1String
		mov	[esp+2Ch+var_10], offset aHttpXml_orgS_1 ; "http://xml.org/sax/features/namespaces"
		mov	[esp+2Ch+var_28], eax
		mov	[esp+2Ch+var_2C], esi
		call	ebx ; _ZNK7QStringeqERK13QLatin1String
		test	al, al
		jz	short loc_6ED586F0

loc_6ED586DE:				; CODE XREF: _ZNK16QXmlSimpleReader10hasFeatureERK7QString+57j
					; _ZNK16QXmlSimpleReader10hasFeatureERK7QString+70j
		mov	eax, 1

loc_6ED586E3:				; CODE XREF: _ZNK16QXmlSimpleReader10hasFeatureERK7QString+87j
		mov	ebx, [esp+2Ch+var_8]
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED586F0:				; CODE XREF: _ZNK16QXmlSimpleReader10hasFeatureERK7QString+2Cj
		lea	eax, [esp+2Ch+var_14]
		mov	[esp+2Ch+var_14], offset aHttpXml_orgS_2 ; "http://xml.org/sax/features/namespace-p"...
		mov	[esp+2Ch+var_28], eax
		mov	[esp+2Ch+var_2C], esi
		call	ebx ; _ZNK7QStringeqERK13QLatin1String
		test	al, al
		jnz	short loc_6ED586DE
		lea	eax, [esp+2Ch+var_18]
		mov	[esp+2Ch+var_18], offset aHttpTrolltec_0 ; "http://trolltech.com/xml/features/repor"...
		mov	[esp+2Ch+var_28], eax
		mov	[esp+2Ch+var_2C], esi
		call	ebx ; _ZNK7QStringeqERK13QLatin1String
		test	al, al
		jnz	short loc_6ED586DE
		lea	eax, [esp+2Ch+var_1C]
		mov	[esp+2Ch+var_1C], offset aHttpTrolltec_1 ; "http://trolltech.com/xml/features/repor"...
		mov	[esp+2Ch+var_28], eax
		mov	[esp+2Ch+var_2C], esi
		call	ebx ; _ZNK7QStringeqERK13QLatin1String
		jmp	short loc_6ED586E3
_ZNK16QXmlSimpleReader10hasFeatureERK7QString endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 433. _ZNK14QXmlAttributes5indexERK13QLatin1String

; =============== S U B	R O U T	I N E =======================================


		public _ZNK14QXmlAttributes5indexERK13QLatin1String
_ZNK14QXmlAttributes5indexERK13QLatin1String proc near
					; CODE XREF: _ZNK14QXmlAttributes5valueERK13QLatin1String+1Ep

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	esi, [esp+2Ch+arg_0]
		mov	edi, [esp+2Ch+arg_4]
		mov	eax, [esi+4]
		mov	ecx, [eax+8]
		mov	edx, [eax+0Ch]
		sub	edx, ecx
		test	edx, edx
		jle	short loc_6ED587A0
		xor	ebx, ebx
		mov	ebp, ds:_ZNK7QStringeqERK13QLatin1String
		jmp	short loc_6ED5877A
; ---------------------------------------------------------------------------

loc_6ED58768:				; CODE XREF: _ZNK14QXmlAttributes5indexERK13QLatin1String+4Dj
		mov	eax, [esi+4]
		add	ebx, 1
		mov	ecx, [eax+8]
		mov	edx, [eax+0Ch]
		sub	edx, ecx
		cmp	ebx, edx
		jge	short loc_6ED587A0

loc_6ED5877A:				; CODE XREF: _ZNK14QXmlAttributes5indexERK13QLatin1String+26j
		lea	edx, [ecx+ebx+4]
		mov	[esp+2Ch+var_28], edi
		mov	eax, [eax+edx*4+4]
		mov	[esp+2Ch+var_2C], eax
		call	ebp ; _ZNK7QStringeqERK13QLatin1String
		test	al, al
		jz	short loc_6ED58768
		add	esp, 1Ch
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED587A0:				; CODE XREF: _ZNK14QXmlAttributes5indexERK13QLatin1String+1Cj
					; _ZNK14QXmlAttributes5indexERK13QLatin1String+38j
		mov	ebx, 0FFFFFFFFh
		add	esp, 1Ch
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
_ZNK14QXmlAttributes5indexERK13QLatin1String endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 437. _ZNK14QXmlAttributes5valueERK13QLatin1String

; =============== S U B	R O U T	I N E =======================================


		public _ZNK14QXmlAttributes5valueERK13QLatin1String
_ZNK14QXmlAttributes5valueERK13QLatin1String proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	[esp+1Ch+var_4], esi
		mov	eax, [esp+1Ch+arg_8]
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_18], eax
		mov	[esp+1Ch+var_1C], esi
		call	_ZNK14QXmlAttributes5indexERK13QLatin1String
		cmp	eax, 0FFFFFFFFh
		jz	short loc_6ED58800
		mov	edx, [esi+4]
		add	eax, [edx+8]
		mov	eax, [edx+eax*4+14h]
		mov	eax, [eax+0Ch]
		mov	[ebx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED58800:				; CODE XREF: _ZNK14QXmlAttributes5valueERK13QLatin1String+26j
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
_ZNK14QXmlAttributes5valueERK13QLatin1String endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 619. _ZThn20_NK18QXmlDefaultHandler11errorStringEv

; =============== S U B	R O U T	I N E =======================================


		public _ZThn20_NK18QXmlDefaultHandler11errorStringEv
_ZThn20_NK18QXmlDefaultHandler11errorStringEv proc near	; DATA XREF: .rdata:6EDA6D40o
					; .rdata:6EDA7320o

arg_4		= dword	ptr  8

		add	[esp+arg_4], 0FFFFFFECh
		jmp	short _ZNK18QXmlDefaultHandler11errorStringEv
_ZThn20_NK18QXmlDefaultHandler11errorStringEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 613. _ZThn16_NK18QXmlDefaultHandler11errorStringEv

; =============== S U B	R O U T	I N E =======================================


		public _ZThn16_NK18QXmlDefaultHandler11errorStringEv
_ZThn16_NK18QXmlDefaultHandler11errorStringEv proc near	; DATA XREF: .rdata:6EDA6D20o
					; .rdata:6EDA7300o

arg_4		= dword	ptr  8

		add	[esp+arg_4], 0FFFFFFF0h
		jmp	short _ZNK18QXmlDefaultHandler11errorStringEv
_ZThn16_NK18QXmlDefaultHandler11errorStringEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 603. _ZThn12_NK18QXmlDefaultHandler11errorStringEv

; =============== S U B	R O U T	I N E =======================================


		public _ZThn12_NK18QXmlDefaultHandler11errorStringEv
_ZThn12_NK18QXmlDefaultHandler11errorStringEv proc near	; DATA XREF: .rdata:6EDA6CF0o
					; .rdata:6EDA72D0o

arg_4		= dword	ptr  8

		add	[esp+arg_4], 0FFFFFFF4h
		jmp	short _ZNK18QXmlDefaultHandler11errorStringEv
_ZThn12_NK18QXmlDefaultHandler11errorStringEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 630. _ZThn8_NK18QXmlDefaultHandler11errorStringEv

; =============== S U B	R O U T	I N E =======================================


		public _ZThn8_NK18QXmlDefaultHandler11errorStringEv
_ZThn8_NK18QXmlDefaultHandler11errorStringEv proc near ; DATA XREF: .rdata:6EDA6CD8o
					; .rdata:6EDA72B8o

arg_4		= dword	ptr  8

		add	[esp+arg_4], 0FFFFFFF8h
		jmp	short _ZNK18QXmlDefaultHandler11errorStringEv
_ZThn8_NK18QXmlDefaultHandler11errorStringEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 625. _ZThn4_NK18QXmlDefaultHandler11errorStringEv

; =============== S U B	R O U T	I N E =======================================


		public _ZThn4_NK18QXmlDefaultHandler11errorStringEv
_ZThn4_NK18QXmlDefaultHandler11errorStringEv proc near ; DATA XREF: .rdata:6EDA6CBCo
					; .rdata:6EDA729Co

arg_4		= dword	ptr  8

		add	[esp+arg_4], 0FFFFFFFCh
		jmp	short _ZNK18QXmlDefaultHandler11errorStringEv
_ZThn4_NK18QXmlDefaultHandler11errorStringEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 508. _ZNK18QXmlDefaultHandler11errorStringEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK18QXmlDefaultHandler11errorStringEv
_ZNK18QXmlDefaultHandler11errorStringEv	proc near
					; CODE XREF: _ZThn20_NK18QXmlDefaultHandler11errorStringEv+5j
					; _ZThn16_NK18QXmlDefaultHandler11errorStringEv+5j ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_14], 0FFFFFFFFh
		mov	[esp+1Ch+var_18], offset aErrorTriggered ; "error triggered by consumer"
		mov	[esp+1Ch+var_1C], ebx
		call	ds:_ZN7QString10fromLatin1EPKci
		mov	eax, ebx
		sub	esp, 4
		add	esp, 18h
		pop	ebx
		retn	4
_ZNK18QXmlDefaultHandler11errorStringEv	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 435. _ZNK14QXmlAttributes5indexERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================


		public _ZNK14QXmlAttributes5indexERK7QStringS2_
_ZNK14QXmlAttributes5indexERK7QStringS2_ proc near
					; CODE XREF: _ZNK14QXmlAttributes5valueERK7QStringS2_+26p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	edx, [esp+2Ch+arg_0]
		mov	ebp, [esp+2Ch+arg_4]
		mov	eax, [edx+4]
		mov	ecx, [eax+8]
		mov	edx, [eax+0Ch]
		sub	edx, ecx
		test	edx, edx
		jle	short loc_6ED58914
		xor	ebx, ebx
		mov	edi, ds:_ZNK7QStringeqERKS_
		jmp	short loc_6ED588DE
; ---------------------------------------------------------------------------

loc_6ED588C8:				; CODE XREF: _ZNK14QXmlAttributes5indexERK7QStringS2_+54j
					; _ZNK14QXmlAttributes5indexERK7QStringS2_+68j
		mov	edx, [esp+2Ch+arg_0]
		add	ebx, 1
		mov	eax, [edx+4]
		mov	ecx, [eax+8]
		mov	edx, [eax+0Ch]
		sub	edx, ecx
		cmp	ebx, edx
		jge	short loc_6ED58914

loc_6ED588DE:				; CODE XREF: _ZNK14QXmlAttributes5indexERK7QStringS2_+26j
		lea	edx, [ecx+ebx+4]
		mov	esi, [eax+edx*4+4]
		mov	[esp+2Ch+var_28], ebp
		lea	eax, [esi+4]
		mov	[esp+2Ch+var_2C], eax
		call	edi ; _ZNK7QStringeqERKS_
		test	al, al
		jz	short loc_6ED588C8
		mov	eax, [esp+2Ch+arg_8]
		add	esi, 8
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_28], eax
		call	edi ; _ZNK7QStringeqERKS_
		test	al, al
		jz	short loc_6ED588C8

loc_6ED5890A:				; CODE XREF: _ZNK14QXmlAttributes5indexERK7QStringS2_+77j
		add	esp, 1Ch
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED58914:				; CODE XREF: _ZNK14QXmlAttributes5indexERK7QStringS2_+1Cj
					; _ZNK14QXmlAttributes5indexERK7QStringS2_+3Cj
		or	ebx, 0FFFFFFFFh
		jmp	short loc_6ED5890A
_ZNK14QXmlAttributes5indexERK7QStringS2_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 439. _ZNK14QXmlAttributes5valueERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================


		public _ZNK14QXmlAttributes5valueERK7QStringS2_
_ZNK14QXmlAttributes5valueERK7QStringS2_ proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_C]
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_14], eax
		mov	eax, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_1C], esi
		mov	[esp+1Ch+var_18], eax
		call	_ZNK14QXmlAttributes5indexERK7QStringS2_
		cmp	eax, 0FFFFFFFFh
		jz	short loc_6ED58975
		mov	edx, [esi+4]
		add	eax, [edx+8]
		mov	eax, [edx+eax*4+14h]
		mov	eax, [eax+0Ch]
		mov	[ebx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
; ---------------------------------------------------------------------------

loc_6ED58975:				; CODE XREF: _ZNK14QXmlAttributes5valueERK7QStringS2_+2Ej
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
_ZNK14QXmlAttributes5valueERK7QStringS2_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 434. _ZNK14QXmlAttributes5indexERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZNK14QXmlAttributes5indexERK7QString
_ZNK14QXmlAttributes5indexERK7QString proc near
					; CODE XREF: _ZNK14QXmlAttributes5valueERK7QString+1Ep

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	esi, [esp+2Ch+arg_0]
		mov	edi, [esp+2Ch+arg_4]
		mov	eax, [esi+4]
		mov	ecx, [eax+8]
		mov	edx, [eax+0Ch]
		sub	edx, ecx
		test	edx, edx
		jle	short loc_6ED58A00
		xor	ebx, ebx
		mov	ebp, ds:_ZNK7QStringeqERKS_
		jmp	short loc_6ED589DA
; ---------------------------------------------------------------------------

loc_6ED589C8:				; CODE XREF: _ZNK14QXmlAttributes5indexERK7QString+4Dj
		mov	eax, [esi+4]
		add	ebx, 1
		mov	ecx, [eax+8]
		mov	edx, [eax+0Ch]
		sub	edx, ecx
		cmp	ebx, edx
		jge	short loc_6ED58A00

loc_6ED589DA:				; CODE XREF: _ZNK14QXmlAttributes5indexERK7QString+26j
		lea	edx, [ecx+ebx+4]
		mov	[esp+2Ch+var_28], edi
		mov	eax, [eax+edx*4+4]
		mov	[esp+2Ch+var_2C], eax
		call	ebp ; _ZNK7QStringeqERKS_
		test	al, al
		jz	short loc_6ED589C8
		add	esp, 1Ch
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED58A00:				; CODE XREF: _ZNK14QXmlAttributes5indexERK7QString+1Cj
					; _ZNK14QXmlAttributes5indexERK7QString+38j
		mov	ebx, 0FFFFFFFFh
		add	esp, 1Ch
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
_ZNK14QXmlAttributes5indexERK7QString endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 438. _ZNK14QXmlAttributes5valueERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZNK14QXmlAttributes5valueERK7QString
_ZNK14QXmlAttributes5valueERK7QString proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	[esp+1Ch+var_4], esi
		mov	eax, [esp+1Ch+arg_8]
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_18], eax
		mov	[esp+1Ch+var_1C], esi
		call	_ZNK14QXmlAttributes5indexERK7QString
		cmp	eax, 0FFFFFFFFh
		jz	short loc_6ED58A60
		mov	edx, [esi+4]
		add	eax, [edx+8]
		mov	eax, [edx+eax*4+14h]
		mov	eax, [eax+0Ch]
		mov	[ebx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED58A60:				; CODE XREF: _ZNK14QXmlAttributes5valueERK7QString+26j
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
_ZNK14QXmlAttributes5valueERK7QString endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 465. _ZNK16QXmlSimpleReader7featureERK7QStringPb

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZNK16QXmlSimpleReader7featureERK7QStringPb
_ZNK16QXmlSimpleReader7featureERK7QStringPb proc near ;	DATA XREF: .rdata:6EDA6FD0o

var_68		= dword	ptr -68h
var_61		= byte ptr -61h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset dword_6ED9A418
		mov	[ebp+var_38], offset sub_6ED58C38
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_8]
		mov	eax, [eax+4]
		test	edx, edx
		mov	[ebp+var_68], eax
		jz	short loc_6ED58AC8
		mov	edx, [ebp+arg_8]
		mov	byte ptr [edx],	1

loc_6ED58AC8:				; CODE XREF: _ZNK16QXmlSimpleReader7featureERK7QStringPb+40j
		lea	eax, [ebp+var_C]
		mov	edx, ds:_ZNK7QStringeqERK13QLatin1String
		mov	[esp+4], eax
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_C], offset aHttpXml_orgS_1 ; "http://xml.org/sax/features/namespaces"
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[ebp+var_60], edx
		mov	[esp], eax
		call	edx ; _ZNK7QStringeqERK13QLatin1String
		test	al, al
		jz	short loc_6ED58B10
		mov	eax, [ebp+var_68]
		movzx	eax, byte ptr [eax+40h]
		mov	[ebp+var_61], al

loc_6ED58AFC:				; CODE XREF: _ZNK16QXmlSimpleReader7featureERK7QStringPb+BCj
					; _ZNK16QXmlSimpleReader7featureERK7QStringPb+ECj ...
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_61]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED58B10:				; CODE XREF: _ZNK16QXmlSimpleReader7featureERK7QStringPb+70j
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_10]
		mov	[ebp+var_10], offset aHttpXml_orgS_2 ; "http://xml.org/sax/features/namespace-p"...
		mov	[esp+4], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], edx
		call	[ebp+var_60]
		test	al, al
		jz	short loc_6ED58B40
		mov	eax, [ebp+var_68]
		movzx	eax, byte ptr [eax+41h]
		mov	[ebp+var_61], al
		jmp	short loc_6ED58AFC
; ---------------------------------------------------------------------------
		align 10h

loc_6ED58B40:				; CODE XREF: _ZNK16QXmlSimpleReader7featureERK7QStringPb+B0j
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_14]
		mov	[ebp+var_14], offset aHttpTrolltec_0 ; "http://trolltech.com/xml/features/repor"...
		mov	[esp+4], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], edx
		call	[ebp+var_60]
		test	al, al
		jz	short loc_6ED58B70
		mov	eax, [ebp+var_68]
		movzx	eax, byte ptr [eax+42h]
		mov	[ebp+var_61], al
		jmp	short loc_6ED58AFC
; ---------------------------------------------------------------------------
		align 10h

loc_6ED58B70:				; CODE XREF: _ZNK16QXmlSimpleReader7featureERK7QStringPb+E0j
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_18]
		mov	[ebp+var_18], offset aHttpTrolltec_1 ; "http://trolltech.com/xml/features/repor"...
		mov	[esp+4], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], edx
		call	[ebp+var_60]
		test	al, al
		jz	short loc_6ED58BA1
		mov	eax, [ebp+var_68]
		movzx	eax, byte ptr [eax+43h]
		mov	[ebp+var_61], al
		jmp	loc_6ED58AFC
; ---------------------------------------------------------------------------

loc_6ED58BA1:				; CODE XREF: _ZNK16QXmlSimpleReader7featureERK7QStringPb+110j
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], edx
		call	ds:_ZNK7QString8toLatin1Ev
		mov	eax, [ebp+var_1C]
		mov	edx, [eax]
		sub	esp, 4
		cmp	edx, 1
		jz	short loc_6ED58C2C

loc_6ED58BC8:				; CODE XREF: _ZNK16QXmlSimpleReader7featureERK7QStringPb+1B4j
		mov	eax, [eax+8]
		mov	[ebp+var_58], 1
		mov	[esp+4], eax
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		call	ds:_ZN10QByteArray7reallocEi
		mov	eax, [ebp+var_1C]
		mov	edx, [eax+0Ch]

loc_6ED58BE8:				; CODE XREF: _ZNK16QXmlSimpleReader7featureERK7QStringPb+1B6j
		mov	[esp+4], edx
		mov	dword ptr [esp], offset	aUnknownFeature	; "Unknown feature %s"
		mov	[ebp+var_58], 1
		call	ds:_Z8qWarningPKcz
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED90150
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_61], 0
		test	eax, eax
		jz	loc_6ED58AFC
		mov	eax, [ebp+arg_8]
		mov	byte ptr [eax],	0
		jmp	loc_6ED58AFC
; ---------------------------------------------------------------------------

loc_6ED58C2C:				; CODE XREF: _ZNK16QXmlSimpleReader7featureERK7QStringPb+146j
		mov	edx, [eax+0Ch]
		lea	ecx, [eax+10h]
		cmp	edx, ecx
		jnz	short loc_6ED58BC8
		jmp	short loc_6ED58BE8
_ZNK16QXmlSimpleReader7featureERK7QStringPb endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED58C38	proc near		; DATA XREF: _ZNK16QXmlSimpleReader7featureERK7QStringPb+23o
		add	ebp, 8
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-58h], 0
		mov	[ebp-6Ch], eax
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		call	sub_6ED90150
		mov	edx, [ebp-6Ch]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED58C38	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED58C70	proc near		; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+2DDp

var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A41E
		mov	[ebp+var_28], offset sub_6ED58DA2
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+74h]
		test	edx, edx
		mov	[ebp+var_54], edx
		jz	loc_6ED58D76
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_C]
		mov	[ebp+var_50], eax
		lock inc dword ptr [eax]
		setnz	al
		mov	edx, [ebp+var_54]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED58D05
		mov	edx, [ebp+var_50]
		mov	eax, [ebp+var_54]
		mov	[eax], edx
		test	byte ptr [edx+0Ch], 1
		jz	short loc_6ED58D2B

loc_6ED58CE7:				; CODE XREF: sub_6ED58C70+B9j
					; sub_6ED58C70+DBj
		mov	eax, [ebp+var_C]
		test	eax, eax
		jz	short loc_6ED58CF8
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED58D50

loc_6ED58CF8:				; CODE XREF: sub_6ED58C70+7Cj
					; sub_6ED58C70+12Dj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED58D05:				; CODE XREF: sub_6ED58C70+67j
		mov	edx, [ebp+var_54]
		mov	eax, [edx]
		mov	[esp], edx
		mov	[esp+4], eax
		mov	[ebp+var_48], 1
		call	sub_6ED963E0
		mov	edx, [ebp+var_50]
		mov	eax, [ebp+var_54]
		mov	[eax], edx
		test	byte ptr [edx+0Ch], 1
		jnz	short loc_6ED58CE7

loc_6ED58D2B:				; CODE XREF: sub_6ED58C70+75j
		mov	eax, [edx+4]
		mov	[esp+8], eax
		mov	eax, [edx+8]
		mov	[esp+4], eax
		mov	eax, [ebp+var_54]
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	sub_6ED96400
		jmp	short loc_6ED58CE7
; ---------------------------------------------------------------------------
		align 10h

loc_6ED58D50:				; CODE XREF: sub_6ED58C70+86j
		mov	eax, [ebp+var_C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED963E0
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED58D76:				; CODE XREF: sub_6ED58C70+3Aj
		mov	dword ptr [esp], 4 ; size_t
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	edx, ds:_ZN11QVectorData11shared_nullE
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+arg_0]
		mov	[edx+74h], eax
		jmp	loc_6ED58CF8
sub_6ED58C70	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED58DA2	proc near		; DATA XREF: sub_6ED58C70+1Do

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-0Ch]
		mov	edx, [ebp-44h]
		test	eax, eax
		mov	[ebp-58h], edx
		jz	short loc_6ED58DD5
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED58DD5
		mov	eax, [ebp-0Ch]
		mov	[esp+arg_0], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED963E0

loc_6ED58DD5:				; CODE XREF: sub_6ED58DA2+Ej
					; sub_6ED58DA2+18j
		mov	eax, [ebp-58h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED58DA2	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 295. _ZN18QXmlParseExceptionC1ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlParseExceptionC1ERKS_
_ZN18QXmlParseExceptionC1ERKS_ proc near

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [eax]
		mov	[esp+1Ch+var_1C], 14h ;	size_t
		call	sub_6ED988D0
		mov	edx, [ebx]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebx+4]
		mov	[eax+4], edx
		mov	edx, [ebx+8]
		mov	[eax+8], edx
		mov	edx, [ebx+0Ch]
		mov	[eax+0Ch], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebx+10h]
		mov	[eax+10h], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [esp+1Ch+arg_0]
		mov	[edx], eax
		add	esp, 18h
		pop	ebx
		retn
_ZN18QXmlParseExceptionC1ERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 297. _ZN18QXmlParseExceptionC2ERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlParseExceptionC2ERKS_
_ZN18QXmlParseExceptionC2ERKS_ proc near

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [eax]
		mov	[esp+1Ch+var_1C], 14h ;	size_t
		call	sub_6ED988D0
		mov	edx, [ebx]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebx+4]
		mov	[eax+4], edx
		mov	edx, [ebx+8]
		mov	[eax+8], edx
		mov	edx, [ebx+0Ch]
		mov	[eax+0Ch], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebx+10h]
		mov	[eax+10h], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [esp+1Ch+arg_0]
		mov	[edx], eax
		add	esp, 18h
		pop	ebx
		retn
_ZN18QXmlParseExceptionC2ERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 431. _ZNK14QXmlAttributes4typeERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================


		public _ZNK14QXmlAttributes4typeERK7QStringS2_
_ZNK14QXmlAttributes4typeERK7QStringS2_	proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_18], 0FFFFFFFFh
		mov	[esp+1Ch+var_1C], offset aCdata	; "CDATA"
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebx], eax
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
_ZNK14QXmlAttributes4typeERK7QStringS2_	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 430. _ZNK14QXmlAttributes4typeERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZNK14QXmlAttributes4typeERK7QString
_ZNK14QXmlAttributes4typeERK7QString proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_18], 0FFFFFFFFh
		mov	[esp+1Ch+var_1C], offset aCdata	; "CDATA"
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebx], eax
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
_ZNK14QXmlAttributes4typeERK7QString endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 432. _ZNK14QXmlAttributes4typeEi

; =============== S U B	R O U T	I N E =======================================


		public _ZNK14QXmlAttributes4typeEi
_ZNK14QXmlAttributes4typeEi proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_18], 0FFFFFFFFh
		mov	[esp+1Ch+var_1C], offset aCdata	; "CDATA"
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebx], eax
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
_ZNK14QXmlAttributes4typeEi endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 516. _ZNK20QXmlNamespaceSupport6prefixERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZNK20QXmlNamespaceSupport6prefixERK7QString
_ZNK20QXmlNamespaceSupport6prefixERK7QString proc near

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	ebp, ds:_ZNK7QStringeqERKS_
		mov	edi, [esp+2Ch+arg_4]
		mov	eax, [edi]
		mov	eax, [eax+4]
		mov	ebx, [eax+4]
		cmp	ebx, eax
		jz	short loc_6ED58F8B
		lea	esi, [esi+0]

loc_6ED58F40:				; CODE XREF: _ZNK20QXmlNamespaceSupport6prefixERK7QString+69j
		mov	eax, [esp+2Ch+arg_8]
		mov	esi, [ebx+4]
		mov	[esp+2Ch+var_28], eax
		lea	eax, [ebx-4]
		mov	[esp+2Ch+var_2C], eax
		call	ebp ; _ZNK7QStringeqERKS_
		test	al, al
		jz	short loc_6ED58F80
		mov	eax, [ebx-8]
		mov	ecx, [eax+8]
		test	ecx, ecx
		jz	short loc_6ED58F80
		mov	edx, [esp+2Ch+arg_0]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [esp+2Ch+arg_0]
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED58F80:				; CODE XREF: _ZNK20QXmlNamespaceSupport6prefixERK7QString+35j
					; _ZNK20QXmlNamespaceSupport6prefixERK7QString+3Fj
		mov	eax, [edi]
		mov	ebx, esi
		mov	eax, [eax+4]
		cmp	ebx, eax
		jnz	short loc_6ED58F40

loc_6ED58F8B:				; CODE XREF: _ZNK20QXmlNamespaceSupport6prefixERK7QString+1Bj
		mov	[esp+2Ch+var_28], 0FFFFFFFFh
		mov	[esp+2Ch+var_2C], offset byte_6EDA044B
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [esp+2Ch+arg_0]
		mov	[edx], eax
		mov	eax, [esp+2Ch+arg_0]
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	4
_ZNK20QXmlNamespaceSupport6prefixERK7QString endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED58FC0	proc near		; CODE XREF: sub_6ED6CA30+19Fp
					; sub_6ED6CA30+33Fp ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	eax, [esp+3Ch+arg_0]
		mov	ebp, [esp+3Ch+arg_0]
		mov	eax, [eax+8]
		add	ebp, 8
		mov	esi, [eax+38h]
		mov	ebx, eax
		mov	[esp+3Ch+var_20], eax
		test	esi, esi
		js	short loc_6ED59036
		mov	edi, eax

loc_6ED58FE4:				; CODE XREF: sub_6ED58FC0+53j
		mov	ebx, [edi+esi*4+4]
		cmp	ebx, [ebp+0]
		jz	short loc_6ED59010

loc_6ED58FED:				; CODE XREF: sub_6ED58FC0+4Ej
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_38], eax
		lea	eax, [ebx-8]
		mov	[esp+3Ch+var_3C], eax
		call	ds:_ZNK7QStringltERKS_
		test	al, al
		jz	short loc_6ED59010
		mov	edi, ebx
		mov	ebx, [edi+esi*4+4]
		cmp	ebx, [ebp+0]
		jnz	short loc_6ED58FED

loc_6ED59010:				; CODE XREF: sub_6ED58FC0+2Bj
					; sub_6ED58FC0+43j
		sub	esi, 1
		jns	short loc_6ED58FE4
		mov	eax, [esp+3Ch+arg_0]
		cmp	[eax+8], ebx
		jz	short loc_6ED59036
		lea	eax, [ebx-8]
		mov	[esp+3Ch+var_38], eax
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_3C], eax
		call	ds:_ZNK7QStringltERKS_
		test	al, al
		jnz	short loc_6ED59050

loc_6ED59036:				; CODE XREF: sub_6ED58FC0+20j
					; sub_6ED58FC0+5Cj ...
		cmp	[esp+3Ch+var_20], ebx
		jz	short loc_6ED59060

loc_6ED5903C:				; CODE XREF: sub_6ED58FC0+121j
					; sub_6ED58FC0+147j
		mov	eax, 1

loc_6ED59041:				; CODE XREF: sub_6ED58FC0+191j
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED59050:				; CODE XREF: sub_6ED58FC0+74j
		mov	eax, [esp+3Ch+arg_0]
		mov	ebx, [eax+8]
		jmp	short loc_6ED59036
; ---------------------------------------------------------------------------
		align 10h

loc_6ED59060:				; CODE XREF: sub_6ED58FC0+7Aj
		mov	eax, [esp+3Ch+arg_0]
		mov	ebp, [esp+3Ch+arg_0]
		mov	eax, [eax+4]
		add	ebp, 4
		mov	esi, [eax+38h]
		mov	ebx, eax
		mov	[esp+3Ch+var_20], eax
		test	esi, esi
		js	short loc_6ED590DD
		mov	edi, eax
		lea	esi, [esi+0]

loc_6ED59080:				; CODE XREF: sub_6ED58FC0+F3j
		mov	ebx, [edi+esi*4+4]
		cmp	ebx, [ebp+0]
		jz	short loc_6ED590B0

loc_6ED59089:				; CODE XREF: sub_6ED58FC0+EAj
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_38], eax
		lea	eax, [ebx-0Ch]
		mov	[esp+3Ch+var_3C], eax
		call	ds:_ZNK7QStringltERKS_
		test	al, al
		jz	short loc_6ED590B0
		mov	edi, ebx
		mov	ebx, [edi+esi*4+4]
		cmp	ebx, [ebp+0]
		jnz	short loc_6ED59089
		lea	esi, [esi+0]

loc_6ED590B0:				; CODE XREF: sub_6ED58FC0+C7j
					; sub_6ED58FC0+DFj
		sub	esi, 1
		jns	short loc_6ED59080
		mov	eax, [esp+3Ch+arg_0]
		cmp	[eax+4], ebx
		jz	short loc_6ED590DD
		lea	eax, [ebx-0Ch]
		mov	[esp+3Ch+var_38], eax
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_3C], eax
		call	ds:_ZNK7QStringltERKS_
		test	al, al
		jz	short loc_6ED590DD
		mov	eax, [esp+3Ch+arg_0]
		mov	ebx, [eax+4]

loc_6ED590DD:				; CODE XREF: sub_6ED58FC0+B9j
					; sub_6ED58FC0+FCj ...
		cmp	[esp+3Ch+var_20], ebx
		jnz	loc_6ED5903C
		mov	eax, [esp+3Ch+arg_0]
		mov	ebx, [eax+0Ch]
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_38], eax
		mov	eax, [esp+3Ch+arg_0]
		add	eax, 0Ch
		mov	[esp+3Ch+var_3C], eax
		call	sub_6ED98170
		cmp	ebx, eax
		jnz	loc_6ED5903C
		mov	eax, [esp+3Ch+arg_0]
		mov	esi, [eax+10h]
		mov	edx, eax
		add	edx, 10h
		mov	edi, [esi+38h]
		mov	ebx, esi
		mov	ebp, esi

loc_6ED59120:				; CODE XREF: sub_6ED58FC0+1C5j
		test	edi, edi
		jns	short loc_6ED59156
		mov	eax, [esp+3Ch+arg_0]
		cmp	[eax+10h], ebx
		jz	short loc_6ED5914C
		lea	eax, [ebx-8]
		mov	[esp+3Ch+var_38], eax
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_3C], eax
		call	ds:_ZNK7QStringltERKS_
		test	al, al
		jz	short loc_6ED5914C
		mov	eax, [esp+3Ch+arg_0]
		mov	ebx, [eax+10h]

loc_6ED5914C:				; CODE XREF: sub_6ED58FC0+16Bj
					; sub_6ED58FC0+183j
		cmp	esi, ebx
		setnz	al
		jmp	loc_6ED59041
; ---------------------------------------------------------------------------

loc_6ED59156:				; CODE XREF: sub_6ED58FC0+162j
					; sub_6ED58FC0+1C0j
		mov	ebx, [ebp+edi*4+4]
		cmp	ebx, [edx]
		jz	short loc_6ED59182
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_24], edx
		mov	[esp+3Ch+var_38], eax
		lea	eax, [ebx-8]
		mov	[esp+3Ch+var_3C], eax
		call	ds:_ZNK7QStringltERKS_
		mov	edx, [esp+3Ch+var_24]
		test	al, al
		jz	short loc_6ED59182
		mov	ebp, ebx
		jmp	short loc_6ED59156
; ---------------------------------------------------------------------------

loc_6ED59182:				; CODE XREF: sub_6ED58FC0+19Cj
					; sub_6ED58FC0+1BCj
		sub	edi, 1
		jmp	short loc_6ED59120
sub_6ED58FC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED59190	proc near		; CODE XREF: sub_6ED61480+54p
					; sub_6ED66E40+1ACp ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 2Ch
		mov	[esp+2Ch+var_10], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_C], esi
		mov	[esp+2Ch+var_8], edi
		mov	[esp+2Ch+var_4], ebp
		mov	eax, [ebx+4B4h]
		lea	esi, [ebx+4B0h]
		add	eax, [ebx+4B8h]
		mov	[esp+2Ch+var_2C], esi
		lea	edi, [ebx+2B0h]
		mov	[esp+2Ch+var_28], eax
		call	ds:_ZN7QString6resizeEi
		mov	eax, [ebx+4B0h]
		mov	ebp, [ebx+4B4h]
		mov	edx, [eax]
		add	ebp, ebp
		cmp	edx, 1
		jz	short loc_6ED59238

loc_6ED591E1:				; CODE XREF: sub_6ED59190+B0j
		mov	[esp+2Ch+var_2C], esi
		call	ds:_ZN7QString7reallocEv
		mov	eax, [ebx+4B0h]
		mov	edx, [eax+0Ch]

loc_6ED591F3:				; CODE XREF: sub_6ED59190+B2j
		mov	eax, [ebx+4B8h]
		mov	[esp+2Ch+var_24], ebp ;	size_t
		mov	[esp+2Ch+var_28], edi ;	void *
		lea	eax, [edx+eax*2]
		mov	[esp+2Ch+var_2C], eax ;	void *
		call	memcpy
		mov	eax, [ebx+4B4h]
		add	[ebx+4B8h], eax
		mov	eax, esi
		mov	dword ptr [ebx+4B4h], 0
		mov	ebx, [esp+2Ch+var_10]
		mov	esi, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_8]
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED59238:				; CODE XREF: sub_6ED59190+4Fj
		mov	edx, [eax+0Ch]
		add	eax, 12h
		cmp	edx, eax
		jnz	short loc_6ED591E1
		jmp	short loc_6ED591F3
sub_6ED59190	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED59250	proc near		; CODE XREF: sub_6ED628B0+3Fp
					; sub_6ED64010+5Fp ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 2Ch
		mov	[esp+2Ch+var_10], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_C], esi
		mov	[esp+2Ch+var_8], edi
		mov	[esp+2Ch+var_4], ebp
		mov	eax, [ebx+2A8h]
		lea	esi, [ebx+2A4h]
		add	eax, [ebx+2ACh]
		mov	[esp+2Ch+var_2C], esi
		lea	edi, [ebx+0A4h]
		mov	[esp+2Ch+var_28], eax
		call	ds:_ZN7QString6resizeEi
		mov	eax, [ebx+2A4h]
		mov	ebp, [ebx+2A8h]
		mov	edx, [eax]
		add	ebp, ebp
		cmp	edx, 1
		jz	short loc_6ED592F8

loc_6ED592A1:				; CODE XREF: sub_6ED59250+B0j
		mov	[esp+2Ch+var_2C], esi
		call	ds:_ZN7QString7reallocEv
		mov	eax, [ebx+2A4h]
		mov	edx, [eax+0Ch]

loc_6ED592B3:				; CODE XREF: sub_6ED59250+B2j
		mov	eax, [ebx+2ACh]
		mov	[esp+2Ch+var_24], ebp ;	size_t
		mov	[esp+2Ch+var_28], edi ;	void *
		lea	eax, [edx+eax*2]
		mov	[esp+2Ch+var_2C], eax ;	void *
		call	memcpy
		mov	eax, [ebx+2A8h]
		add	[ebx+2ACh], eax
		mov	eax, esi
		mov	dword ptr [ebx+2A8h], 0
		mov	ebx, [esp+2Ch+var_10]
		mov	esi, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_8]
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED592F8:				; CODE XREF: sub_6ED59250+4Fj
		mov	edx, [eax+0Ch]
		add	eax, 12h
		cmp	edx, eax
		jnz	short loc_6ED592A1
		jmp	short loc_6ED592B3
sub_6ED59250	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED59310	proc near		; CODE XREF: sub_6ED61480+C9Ep
					; sub_6ED61480+EE9p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 2Ch
		mov	[esp+2Ch+var_10], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_C], esi
		mov	[esp+2Ch+var_8], edi
		mov	[esp+2Ch+var_4], ebp
		mov	eax, [ebx+6C0h]
		lea	esi, [ebx+6BCh]
		add	eax, [ebx+6C4h]
		mov	[esp+2Ch+var_2C], esi
		lea	edi, [ebx+4BCh]
		mov	[esp+2Ch+var_28], eax
		call	ds:_ZN7QString6resizeEi
		mov	eax, [ebx+6BCh]
		mov	ebp, [ebx+6C0h]
		mov	edx, [eax]
		add	ebp, ebp
		cmp	edx, 1
		jz	short loc_6ED593B8

loc_6ED59361:				; CODE XREF: sub_6ED59310+B0j
		mov	[esp+2Ch+var_2C], esi
		call	ds:_ZN7QString7reallocEv
		mov	eax, [ebx+6BCh]
		mov	edx, [eax+0Ch]

loc_6ED59373:				; CODE XREF: sub_6ED59310+B2j
		mov	eax, [ebx+6C4h]
		mov	[esp+2Ch+var_24], ebp ;	size_t
		mov	[esp+2Ch+var_28], edi ;	void *
		lea	eax, [edx+eax*2]
		mov	[esp+2Ch+var_2C], eax ;	void *
		call	memcpy
		mov	eax, [ebx+6C0h]
		add	[ebx+6C4h], eax
		mov	eax, esi
		mov	dword ptr [ebx+6C0h], 0
		mov	ebx, [esp+2Ch+var_10]
		mov	esi, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_8]
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED593B8:				; CODE XREF: sub_6ED59310+4Fj
		mov	edx, [eax+0Ch]
		add	eax, 12h
		cmp	edx, eax
		jnz	short loc_6ED59361
		jmp	short loc_6ED59373
sub_6ED59310	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED593D0	proc near		; CODE XREF: sub_6ED61480+B0p
					; sub_6ED61480+14Cp ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= word ptr  8

		sub	esp, 2Ch
		mov	[esp+2Ch+var_10], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_C], esi
		mov	[esp+2Ch+var_8], edi
		mov	[esp+2Ch+var_4], ebp
		mov	eax, [ebx+6C0h]
		cmp	eax, 100h
		lea	edx, [eax+1]
		jz	short loc_6ED59420

loc_6ED593F7:				; CODE XREF: sub_6ED593D0+D1j
		movzx	ecx, [esp+2Ch+arg_4]
		mov	[ebx+6C0h], edx
		mov	[ebx+eax*2+4BCh], cx
		mov	ebx, [esp+2Ch+var_10]
		mov	esi, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_8]
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED59420:				; CODE XREF: sub_6ED593D0+25j
		mov	eax, [ebx+6C4h]
		lea	esi, [ebx+6BCh]
		mov	[esp+2Ch+var_2C], esi
		lea	edi, [ebx+4BCh]
		add	eax, 100h
		mov	[esp+2Ch+var_28], eax
		call	ds:_ZN7QString6resizeEi
		mov	eax, [ebx+6BCh]
		mov	ebp, [ebx+6C0h]
		mov	edx, [eax]
		add	ebp, ebp
		cmp	edx, 1
		jz	short loc_6ED594A6

loc_6ED59459:				; CODE XREF: sub_6ED593D0+DEj
		mov	[esp+2Ch+var_2C], esi
		call	ds:_ZN7QString7reallocEv
		mov	eax, [ebx+6BCh]
		mov	edx, [eax+0Ch]

loc_6ED5946B:				; CODE XREF: sub_6ED593D0+E0j
		mov	eax, [ebx+6C4h]
		mov	[esp+2Ch+var_24], ebp ;	size_t
		mov	[esp+2Ch+var_28], edi ;	void *
		lea	eax, [edx+eax*2]
		mov	[esp+2Ch+var_2C], eax ;	void *
		call	memcpy
		mov	eax, [ebx+6C0h]
		mov	edx, 1
		add	[ebx+6C4h], eax
		xor	eax, eax
		mov	dword ptr [ebx+6C0h], 0
		jmp	loc_6ED593F7
; ---------------------------------------------------------------------------

loc_6ED594A6:				; CODE XREF: sub_6ED593D0+87j
		mov	edx, [eax+0Ch]
		add	eax, 12h
		cmp	edx, eax
		jnz	short loc_6ED59459
		jmp	short loc_6ED5946B
sub_6ED593D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED594C0	proc near		; CODE XREF: sub_6ED656F0+315p
					; sub_6ED68110+3A0p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= word ptr  8

		sub	esp, 2Ch
		mov	[esp+2Ch+var_10], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_C], esi
		mov	[esp+2Ch+var_8], edi
		mov	[esp+2Ch+var_4], ebp
		mov	eax, [ebx+4B4h]
		cmp	eax, 100h
		lea	edx, [eax+1]
		jz	short loc_6ED59510

loc_6ED594E7:				; CODE XREF: sub_6ED594C0+D1j
		movzx	ecx, [esp+2Ch+arg_4]
		mov	[ebx+4B4h], edx
		mov	[ebx+eax*2+2B0h], cx
		mov	ebx, [esp+2Ch+var_10]
		mov	esi, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_8]
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED59510:				; CODE XREF: sub_6ED594C0+25j
		mov	eax, [ebx+4B8h]
		lea	esi, [ebx+4B0h]
		mov	[esp+2Ch+var_2C], esi
		lea	edi, [ebx+2B0h]
		add	eax, 100h
		mov	[esp+2Ch+var_28], eax
		call	ds:_ZN7QString6resizeEi
		mov	eax, [ebx+4B0h]
		mov	ebp, [ebx+4B4h]
		mov	edx, [eax]
		add	ebp, ebp
		cmp	edx, 1
		jz	short loc_6ED59596

loc_6ED59549:				; CODE XREF: sub_6ED594C0+DEj
		mov	[esp+2Ch+var_2C], esi
		call	ds:_ZN7QString7reallocEv
		mov	eax, [ebx+4B0h]
		mov	edx, [eax+0Ch]

loc_6ED5955B:				; CODE XREF: sub_6ED594C0+E0j
		mov	eax, [ebx+4B8h]
		mov	[esp+2Ch+var_24], ebp ;	size_t
		mov	[esp+2Ch+var_28], edi ;	void *
		lea	eax, [edx+eax*2]
		mov	[esp+2Ch+var_2C], eax ;	void *
		call	memcpy
		mov	eax, [ebx+4B4h]
		mov	edx, 1
		add	[ebx+4B8h], eax
		xor	eax, eax
		mov	dword ptr [ebx+4B4h], 0
		jmp	loc_6ED594E7
; ---------------------------------------------------------------------------

loc_6ED59596:				; CODE XREF: sub_6ED594C0+87j
		mov	edx, [eax+0Ch]
		add	eax, 12h
		cmp	edx, eax
		jnz	short loc_6ED59549
		jmp	short loc_6ED5955B
sub_6ED594C0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 149. _ZN16QXmlSimpleReader10setFeatureERK7QStringb

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlSimpleReader10setFeatureERK7QStringb
_ZN16QXmlSimpleReader10setFeatureERK7QStringb proc near	; DATA XREF: .rdata:6EDA6FD4o

var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		mov	eax, [ebp+arg_8]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_3C], edx
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset dword_6ED9A424
		mov	[ebp+var_68], eax
		lea	eax, [ebp+var_5C]
		mov	[ebp+var_38], offset sub_6ED59753
		mov	[ebp+var_34], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], offset aHttpXml_orgS_1 ; "http://xml.org/sax/features/namespaces"
		mov	edx, ds:_ZNK7QStringeqERK13QLatin1String
		mov	eax, [eax+4]
		mov	[ebp+var_64], eax
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		mov	[ebp+var_60], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	edx ; _ZNK7QStringeqERK13QLatin1String
		test	al, al
		jz	short loc_6ED59632
		movzx	eax, byte ptr [ebp+var_68]
		mov	edx, [ebp+var_64]
		mov	[edx+40h], al

loc_6ED59625:				; CODE XREF: _ZN16QXmlSimpleReader10setFeatureERK7QStringb+ECj
					; _ZN16QXmlSimpleReader10setFeatureERK7QStringb+11Cj ...
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED59632:				; CODE XREF: _ZN16QXmlSimpleReader10setFeatureERK7QStringb+69j
		lea	eax, [ebp+var_10]
		mov	[ebp+var_10], offset aHttpXml_orgS_2 ; "http://xml.org/sax/features/namespace-p"...
		mov	[esp+4], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	[ebp+var_60]
		test	al, al
		jz	short loc_6ED59670
		mov	eax, [ebp+var_64]
		movzx	edx, byte ptr [ebp+var_68]
		mov	[eax+41h], dl
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED59670:				; CODE XREF: _ZN16QXmlSimpleReader10setFeatureERK7QStringb+A2j
		lea	eax, [ebp+var_14]
		mov	[ebp+var_14], offset aHttpTrolltec_0 ; "http://trolltech.com/xml/features/repor"...
		mov	[esp+4], eax
		mov	edx, [ebp+arg_4]
		mov	[esp], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	[ebp+var_60]
		test	al, al
		jz	short loc_6ED596A0
		movzx	eax, byte ptr [ebp+var_68]
		mov	edx, [ebp+var_64]
		mov	[edx+42h], al
		jmp	short loc_6ED59625
; ---------------------------------------------------------------------------
		align 10h

loc_6ED596A0:				; CODE XREF: _ZN16QXmlSimpleReader10setFeatureERK7QStringb+E0j
		lea	eax, [ebp+var_18]
		mov	[ebp+var_18], offset aHttpTrolltec_1 ; "http://trolltech.com/xml/features/repor"...
		mov	[esp+4], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	[ebp+var_60]
		test	al, al
		jz	short loc_6ED596D1
		movzx	edx, byte ptr [ebp+var_68]
		mov	eax, [ebp+var_64]
		mov	[eax+43h], dl
		jmp	loc_6ED59625
; ---------------------------------------------------------------------------

loc_6ED596D1:				; CODE XREF: _ZN16QXmlSimpleReader10setFeatureERK7QStringb+110j
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[esp+4], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZNK7QString8toLatin1Ev
		mov	eax, [ebp+var_1C]
		mov	edx, [eax]
		sub	esp, 4
		cmp	edx, 1
		jz	short loc_6ED59747

loc_6ED596F8:				; CODE XREF: _ZN16QXmlSimpleReader10setFeatureERK7QStringb+19Fj
		mov	eax, [eax+8]
		mov	[esp+4], eax
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_58], 1
		call	ds:_ZN10QByteArray7reallocEi
		mov	eax, [ebp+var_1C]
		mov	edx, [eax+0Ch]

loc_6ED59718:				; CODE XREF: _ZN16QXmlSimpleReader10setFeatureERK7QStringb+1A1j
		mov	[esp+4], edx
		mov	dword ptr [esp], offset	aUnknownFeature	; "Unknown feature %s"
		mov	[ebp+var_58], 1
		call	ds:_Z8qWarningPKcz
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED90150
		jmp	loc_6ED59625
; ---------------------------------------------------------------------------

loc_6ED59747:				; CODE XREF: _ZN16QXmlSimpleReader10setFeatureERK7QStringb+146j
		mov	edx, [eax+0Ch]
		lea	ecx, [eax+10h]
		cmp	edx, ecx
		jnz	short loc_6ED596F8
		jmp	short loc_6ED59718
_ZN16QXmlSimpleReader10setFeatureERK7QStringb endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED59753	proc near		; DATA XREF: _ZN16QXmlSimpleReader10setFeatureERK7QStringb+26o
		add	ebp, 8
		mov	eax, [ebp-54h]
		mov	[ebp-6Ch], eax
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED90150
		mov	edx, [ebp-6Ch]
		mov	[esp+0], edx
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED59753	endp

; Exported entry 517. _ZNK20QXmlNamespaceSupport8prefixesERK7QString

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZNK20QXmlNamespaceSupport8prefixesERK7QString
_ZNK20QXmlNamespaceSupport8prefixesERK7QString proc near

var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A43C
		mov	[ebp+var_18], offset sub_6ED59838
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, ds:_ZN9QListData11shared_nullE
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+arg_4]
		mov	eax, [ecx]
		mov	ecx, [ebp+arg_0]
		mov	edx, [eax+4]
		mov	[ebp+var_48], ecx
		mov	eax, [edx+4]
		jmp	short loc_6ED59822
; ---------------------------------------------------------------------------

loc_6ED597D2:				; CODE XREF: _ZNK20QXmlNamespaceSupport8prefixesERK7QString+A4j
		mov	edx, [eax+4]
		lea	ecx, [eax-8]
		sub	eax, 4
		mov	[ebp+var_44], ecx
		mov	[esp], eax
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], edx
		mov	edx, [ebp+arg_8]
		mov	[esp+4], edx
		call	ds:_ZNK7QStringeqERKS_
		test	al, al
		jz	short loc_6ED59817
		mov	ecx, [ebp+var_44]
		mov	eax, [ecx]
		mov	eax, [eax+8]
		test	eax, eax
		jz	short loc_6ED59817
		mov	eax, [ebp+var_48]
		mov	[esp+4], ecx
		mov	[esp], eax
		call	sub_6ED934B0

loc_6ED59817:				; CODE XREF: _ZNK20QXmlNamespaceSupport8prefixesERK7QString+7Aj
					; _ZNK20QXmlNamespaceSupport8prefixesERK7QString+86j
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	edx, [eax+4]
		mov	eax, [ebp+var_40]

loc_6ED59822:				; CODE XREF: _ZNK20QXmlNamespaceSupport8prefixesERK7QString+50j
		cmp	edx, eax
		jnz	short loc_6ED597D2
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
_ZNK20QXmlNamespaceSupport8prefixesERK7QString endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED59838	proc near		; DATA XREF: _ZNK20QXmlNamespaceSupport8prefixesERK7QString+20o
		add	ebp, 8
		mov	ecx, [ebp-34h]
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-4Ch], ecx
		mov	[esp+0], eax
		call	sub_6ED904E0
		mov	edx, [ebp-4Ch]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED59838	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 518. _ZNK20QXmlNamespaceSupport8prefixesEv

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZNK20QXmlNamespaceSupport8prefixesEv
_ZNK20QXmlNamespaceSupport8prefixesEv proc near	; CODE XREF: sub_6ED630C0+6D5p
					; sub_6ED630C0+74Ap

var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A442
		mov	[ebp+var_18], offset sub_6ED59912
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, ds:_ZN9QListData11shared_nullE
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+arg_4]
		mov	eax, [ecx]
		mov	ecx, [ebp+arg_0]
		mov	edx, [eax+4]
		mov	[ebp+var_44], ecx
		mov	eax, [edx+4]
		jmp	short loc_6ED598CD
; ---------------------------------------------------------------------------

loc_6ED598C2:				; CODE XREF: _ZNK20QXmlNamespaceSupport8prefixesEv+72j
					; _ZNK20QXmlNamespaceSupport8prefixesEv+8Aj
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	edx, [eax+4]
		mov	eax, [ebp+var_40]

loc_6ED598CD:				; CODE XREF: _ZNK20QXmlNamespaceSupport8prefixesEv+50j
		cmp	edx, eax
		jz	short loc_6ED59900
		mov	edx, [eax+4]
		mov	[ebp+var_40], edx
		lea	edx, [eax-8]
		mov	eax, [eax-8]
		mov	ecx, [eax+8]
		test	ecx, ecx
		jz	short loc_6ED598C2
		mov	ecx, [ebp+var_44]
		mov	[esp+4], edx
		mov	[ebp+var_38], 1
		mov	[esp], ecx
		call	sub_6ED934B0
		jmp	short loc_6ED598C2
; ---------------------------------------------------------------------------
		align 10h

loc_6ED59900:				; CODE XREF: _ZNK20QXmlNamespaceSupport8prefixesEv+5Fj
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
_ZNK20QXmlNamespaceSupport8prefixesEv endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED59912	proc near		; DATA XREF: _ZNK20QXmlNamespaceSupport8prefixesEv+20o
		add	ebp, 8
		mov	ecx, [ebp-34h]
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-48h], ecx
		mov	[esp+0], eax
		call	sub_6ED904E0
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED59912	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 325. _ZN20QXmlNamespaceSupport10popContextEv

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN20QXmlNamespaceSupport10popContextEv
_ZN20QXmlNamespaceSupport10popContextEv	proc near ; CODE XREF: sub_6ED628B0+29Ep
					; sub_6ED630C0+73Bp ...

var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A46C
		mov	[ebp+var_28], offset sub_6ED59BD1
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, ds:_ZN8QMapData11shared_nullE
		mov	edx, [edx]
		mov	[ebp+var_10], eax
		mov	[ebp+var_54], edx
		lock inc dword ptr [eax+34h]
		setnz	dl
		mov	edx, [ebp+var_54]
		mov	eax, [edx+4]
		mov	edx, [ebp+var_10]
		cmp	eax, edx
		mov	[ebp+var_50], edx
		jz	short loc_6ED599D4
		mov	eax, [ebp+var_54]
		add	eax, 4
		mov	[ebp+var_68], eax
		lock inc dword ptr [edx+34h]
		setnz	al
		mov	edx, [ebp+var_54]
		mov	eax, [edx+4]
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jz	loc_6ED59B77

loc_6ED599BE:				; CODE XREF: _ZN20QXmlNamespaceSupport10popContextEv+253j
		mov	eax, [ebp+var_50]
		mov	edx, [ebp+var_54]
		mov	[edx+4], eax
		test	byte ptr [eax+44h], 2
		jz	loc_6ED59B60

loc_6ED599D1:				; CODE XREF: _ZN20QXmlNamespaceSupport10popContextEv+232j
		mov	eax, [ebp+var_10]

loc_6ED599D4:				; CODE XREF: _ZN20QXmlNamespaceSupport10popContextEv+57j
		test	eax, eax
		jz	short loc_6ED599FC
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED599FC
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	sub_6ED92800

loc_6ED599FC:				; CODE XREF: _ZN20QXmlNamespaceSupport10popContextEv+96j
					; _ZN20QXmlNamespaceSupport10popContextEv+A1j
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	[ebp+var_58], edx
		mov	eax, [edx]
		mov	edx, [eax+8]
		test	edx, edx
		jz	loc_6ED59B4F
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_6ED59A35
		mov	eax, [eax+4]
		mov	[esp+4], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+var_58]
		mov	[esp], eax
		call	sub_6ED95B40

loc_6ED59A35:				; CODE XREF: _ZN20QXmlNamespaceSupport10popContextEv+D6j
		mov	edx, [ebp+var_58]
		mov	eax, [edx]
		mov	edx, [eax+8]
		mov	eax, [eax+edx*4+0Ch]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax+34h]
		setnz	dl
		mov	eax, [ebp+var_C]
		test	byte ptr [eax+44h], 2
		jnz	short loc_6ED59A6E
		mov	eax, [eax+34h]
		cmp	eax, 1
		jz	short loc_6ED59A6E
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED925B0

loc_6ED59A6E:				; CODE XREF: _ZN20QXmlNamespaceSupport10popContextEv+112j
					; _ZN20QXmlNamespaceSupport10popContextEv+11Aj
		mov	eax, [ebp+var_58]
		mov	edx, [eax]
		mov	eax, [edx+8]
		sub	eax, 1
		mov	[ebp+var_64], eax
		mov	eax, [edx+4]
		cmp	[ebp+var_64], eax
		jg	short loc_6ED59A93
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_6ED59ABE
		mov	edx, eax
		sar	edx, 1
		cmp	[ebp+var_64], edx
		jge	short loc_6ED59ABE

loc_6ED59A93:				; CODE XREF: _ZN20QXmlNamespaceSupport10popContextEv+142j
		mov	edx, [ebp+var_64]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 4
		mov	dword ptr [esp], 14h
		mov	[esp+4], edx
		mov	[ebp+var_48], 2
		call	ds:_ZN11QVectorData4growEiiib

loc_6ED59ABE:				; CODE XREF: _ZN20QXmlNamespaceSupport10popContextEv+148j
					; _ZN20QXmlNamespaceSupport10popContextEv+151j
		mov	[esp+8], eax
		mov	edx, [ebp+var_58]
		mov	eax, [ebp+var_64]
		mov	[ebp+var_48], 2
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_6ED95B40
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	[ebp+var_60], edx
		mov	eax, [edx+4]
		mov	edx, [ebp+var_C]
		cmp	eax, edx
		mov	[ebp+var_5C], edx
		jz	short loc_6ED59B27
		mov	eax, [ebp+var_60]
		add	eax, 4
		mov	[ebp+var_6C], eax
		lock inc dword ptr [edx+34h]
		setnz	al
		mov	edx, [ebp+var_60]
		mov	eax, [edx+4]
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jz	loc_6ED59BB0

loc_6ED59B15:				; CODE XREF: _ZN20QXmlNamespaceSupport10popContextEv+28Cj
		mov	eax, [ebp+var_5C]
		mov	edx, [ebp+var_60]
		mov	[edx+4], eax
		test	byte ptr [eax+44h], 2
		jz	short loc_6ED59B98

loc_6ED59B24:				; CODE XREF: _ZN20QXmlNamespaceSupport10popContextEv+26Aj
		mov	eax, [ebp+var_C]

loc_6ED59B27:				; CODE XREF: _ZN20QXmlNamespaceSupport10popContextEv+1AEj
		test	eax, eax
		jz	short loc_6ED59B4F
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED59B4F
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	sub_6ED92800

loc_6ED59B4F:				; CODE XREF: _ZN20QXmlNamespaceSupport10popContextEv+CBj
					; _ZN20QXmlNamespaceSupport10popContextEv+1E9j	...
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED59B60:				; CODE XREF: _ZN20QXmlNamespaceSupport10popContextEv+8Bj
		mov	edx, [ebp+var_68]
		mov	[ebp+var_48], 1
		mov	[esp], edx
		call	sub_6ED925B0
		jmp	loc_6ED599D1
; ---------------------------------------------------------------------------

loc_6ED59B77:				; CODE XREF: _ZN20QXmlNamespaceSupport10popContextEv+78j
		mov	edx, [ebp+var_54]
		mov	eax, [edx+4]
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		mov	eax, [ebp+var_68]
		mov	[esp], eax
		call	sub_6ED92800
		jmp	loc_6ED599BE
; ---------------------------------------------------------------------------

loc_6ED59B98:				; CODE XREF: _ZN20QXmlNamespaceSupport10popContextEv+1E2j
		mov	edx, [ebp+var_6C]
		mov	[ebp+var_48], 3
		mov	[esp], edx
		call	sub_6ED925B0
		jmp	loc_6ED59B24
; ---------------------------------------------------------------------------
		align 10h

loc_6ED59BB0:				; CODE XREF: _ZN20QXmlNamespaceSupport10popContextEv+1CFj
		mov	edx, [ebp+var_60]
		mov	eax, [edx+4]
		mov	[ebp+var_48], 3
		mov	[esp+4], eax
		mov	eax, [ebp+var_6C]
		mov	[esp], eax
		call	sub_6ED92800
		jmp	loc_6ED59B15
_ZN20QXmlNamespaceSupport10popContextEv	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED59BD1	proc near		; DATA XREF: _ZN20QXmlNamespaceSupport10popContextEv+23o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-70h], edx
		jz	short loc_6ED59C0B
		cmp	eax, 2
		jz	short loc_6ED59C0B
		lea	eax, [ebp-10h]

loc_6ED59BEA:				; CODE XREF: sub_6ED59BD1+3Dj
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED92880
		mov	eax, [ebp-70h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED59C0B:				; CODE XREF: sub_6ED59BD1+Fj
					; sub_6ED59BD1+14j
		lea	eax, [ebp-0Ch]
		jmp	short loc_6ED59BEA
sub_6ED59BD1	endp

; Exported entry 326. _ZN20QXmlNamespaceSupport11pushContextEv

; =============== S U B	R O U T	I N E =======================================


		public _ZN20QXmlNamespaceSupport11pushContextEv
_ZN20QXmlNamespaceSupport11pushContextEv proc near ; CODE XREF:	sub_6ED6B5F0+358p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	eax, [eax]
		lea	edx, [eax+4]
		mov	[esp+1Ch+var_18], edx
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED95960
		add	esp, 1Ch
		retn
_ZN20QXmlNamespaceSupport11pushContextEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 331. _ZN20QXmlNamespaceSupportD1Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN20QXmlNamespaceSupportD1Ev
_ZN20QXmlNamespaceSupportD1Ev proc near	; CODE XREF: sub_6ED5D140+137p
					; sub_6ED5D773+1F7p ...

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A480
		mov	[ebp+var_18], offset sub_6ED59CE2
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[ebp+var_40], eax
		jz	short loc_6ED59C9B
		mov	eax, [eax+4]
		test	eax, eax
		jz	short loc_6ED59C7D
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED59CC2

loc_6ED59C7D:				; CODE XREF: _ZN20QXmlNamespaceSupportD1Ev+40j
					; _ZN20QXmlNamespaceSupportD1Ev+B0j
		mov	edx, [ebp+var_40]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED59C90
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED59CA8

loc_6ED59C90:				; CODE XREF: _ZN20QXmlNamespaceSupportD1Ev+54j
					; _ZN20QXmlNamespaceSupportD1Ev+90j
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED988B0

loc_6ED59C9B:				; CODE XREF: _ZN20QXmlNamespaceSupportD1Ev+39j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED59CA8:				; CODE XREF: _ZN20QXmlNamespaceSupportD1Ev+5Ej
		mov	edx, [ebp+var_40]
		mov	eax, [edx]
		mov	[esp], edx
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_6ED95900
		jmp	short loc_6ED59C90
; ---------------------------------------------------------------------------

loc_6ED59CC2:				; CODE XREF: _ZN20QXmlNamespaceSupportD1Ev+4Bj
		mov	edx, [ebp+var_40]
		mov	eax, [edx+4]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 4
		mov	[esp], eax
		call	sub_6ED92800
		jmp	short loc_6ED59C7D
_ZN20QXmlNamespaceSupportD1Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED59CE2	proc near		; DATA XREF: _ZN20QXmlNamespaceSupportD1Ev+20o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-40h]
		mov	[ebp-44h], eax
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED59D16
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED59D16
		mov	edx, [ebp-40h]
		mov	eax, [edx]
		mov	[esp+0], edx
		mov	dword ptr [ebp-38h], 0
		mov	[esp+arg_0], eax
		call	sub_6ED95900

loc_6ED59D16:				; CODE XREF: sub_6ED59CE2+10j
					; sub_6ED59CE2+1Aj
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED59CE2	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 332. _ZN20QXmlNamespaceSupportD2Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN20QXmlNamespaceSupportD2Ev
_ZN20QXmlNamespaceSupportD2Ev proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A486
		mov	[ebp+var_18], offset sub_6ED59DE2
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[ebp+var_40], eax
		jz	short loc_6ED59D9B
		mov	eax, [eax+4]
		test	eax, eax
		jz	short loc_6ED59D7D
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED59DC2

loc_6ED59D7D:				; CODE XREF: _ZN20QXmlNamespaceSupportD2Ev+40j
					; _ZN20QXmlNamespaceSupportD2Ev+B0j
		mov	edx, [ebp+var_40]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED59D90
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED59DA8

loc_6ED59D90:				; CODE XREF: _ZN20QXmlNamespaceSupportD2Ev+54j
					; _ZN20QXmlNamespaceSupportD2Ev+90j
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED988B0

loc_6ED59D9B:				; CODE XREF: _ZN20QXmlNamespaceSupportD2Ev+39j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED59DA8:				; CODE XREF: _ZN20QXmlNamespaceSupportD2Ev+5Ej
		mov	edx, [ebp+var_40]
		mov	eax, [edx]
		mov	[esp], edx
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_6ED95900
		jmp	short loc_6ED59D90
; ---------------------------------------------------------------------------

loc_6ED59DC2:				; CODE XREF: _ZN20QXmlNamespaceSupportD2Ev+4Bj
		mov	edx, [ebp+var_40]
		mov	eax, [edx+4]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 4
		mov	[esp], eax
		call	sub_6ED92800
		jmp	short loc_6ED59D7D
_ZN20QXmlNamespaceSupportD2Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED59DE2	proc near		; DATA XREF: _ZN20QXmlNamespaceSupportD2Ev+20o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-40h]
		mov	[ebp-44h], eax
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED59E16
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED59E16
		mov	edx, [ebp-40h]
		mov	eax, [edx]
		mov	[esp+0], edx
		mov	dword ptr [ebp-38h], 0
		mov	[esp+arg_0], eax
		call	sub_6ED95900

loc_6ED59E16:				; CODE XREF: sub_6ED59DE2+10j
					; sub_6ED59DE2+1Aj
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED59DE2	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED59E30	proc near		; CODE XREF: sub_6ED6CA30+423p

var_138		= dword	ptr -138h
var_134		= dword	ptr -134h
var_130		= dword	ptr -130h
var_12C		= dword	ptr -12Ch
var_128		= dword	ptr -128h
var_124		= dword	ptr -124h
var_120		= dword	ptr -120h
var_119		= byte ptr -119h
var_118		= dword	ptr -118h
var_114		= dword	ptr -114h
var_110		= dword	ptr -110h
var_10C		= dword	ptr -10Ch
var_108		= dword	ptr -108h
var_104		= dword	ptr -104h
var_100		= dword	ptr -100h
var_FC		= dword	ptr -0FCh
var_F8		= dword	ptr -0F8h
var_F4		= dword	ptr -0F4h
var_F0		= dword	ptr -0F0h
var_EC		= dword	ptr -0ECh
var_E8		= dword	ptr -0E8h
var_E4		= dword	ptr -0E4h
var_E0		= dword	ptr -0E0h
var_DC		= dword	ptr -0DCh
var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_D0		= dword	ptr -0D0h
var_CC		= dword	ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= byte ptr -24h
var_20		= byte ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= word ptr -0Ch
var_9		= byte ptr -9
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 158h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_4C], eax
		lea	eax, [ebp+var_6C]
		mov	[ebp+var_54], offset sub_6ED997C0
		mov	[ebp+var_50], offset word_6ED9A4A2
		mov	[ebp+var_48], offset loc_6ED5A688
		mov	[ebp+var_44], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_84], edx
		mov	[ebp+var_10], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+10h]
		mov	edx, [eax+4]
		cmp	eax, edx
		mov	[ebp+var_F4], edx
		jz	loc_6ED5A60F
		add	ecx, 6CCh
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_108], ecx
		mov	ecx, [ebp+arg_0]
		mov	eax, [ebp+var_84]
		add	edx, 6D0h
		add	ecx, 10h
		mov	[ebp+var_134], ecx
		mov	ecx, ds:_ZN9QHashData11shared_nullE
		mov	[ebp+var_80], eax
		mov	[ebp+var_A8], edx
		mov	[ebp+var_7C], ecx
		add	ecx, 8
		mov	[ebp+var_78], ecx
		jmp	short loc_6ED59EEA
; ---------------------------------------------------------------------------

loc_6ED59ECF:				; CODE XREF: sub_6ED59E30+FBj
					; sub_6ED59E30+413j ...
		mov	eax, [ebp+var_F4]
		mov	edx, [ebp+arg_0]
		mov	eax, [eax+4]
		mov	[ebp+var_F4], eax
		cmp	eax, [edx+10h]
		jz	loc_6ED5A60F

loc_6ED59EEA:				; CODE XREF: sub_6ED59E30+9Dj
		mov	eax, [ebp+var_F4]
		mov	ecx, [ebp+var_108]
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_68], 9
		sub	eax, 8
		mov	[ebp+var_F8], eax
		mov	[ebp+var_B0], eax
		mov	[esp+4], eax
		mov	[esp], ecx
		call	sub_6ED98510
		mov	edx, [ebp+arg_0]
		mov	eax, [eax]
		cmp	eax, [edx+6CCh]
		jnz	short loc_6ED59ECF
		mov	eax, [edx+10h]
		cmp	dword ptr [eax+3Ch], 0
		jnz	loc_6ED5A52A

loc_6ED59F3A:				; CODE XREF: sub_6ED59E30+72Aj
					; sub_6ED59E30+755j ...
		mov	eax, [ebp+var_84]
		mov	edx, [ebp+var_80]
		mov	[ebp+var_14], eax
		lock inc dword ptr [edx]
		setnz	al

loc_6ED59F4C:				; CODE XREF: sub_6ED59E30+77Fj
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+10h]
		mov	edx, [eax+4]
		cmp	eax, edx
		mov	[ebp+var_9C], edx
		jz	loc_6ED5A1CA
		mov	eax, [ebp+var_14]
		mov	eax, [eax+8]
		lea	esi, [esi+0]

loc_6ED59F70:				; CODE XREF: sub_6ED59E30+394j
		mov	ecx, [ebp+var_9C]
		mov	[ebp+var_88], 0
		sub	ecx, 8
		mov	[ebp+var_B4], ecx
		mov	[ebp+var_98], ecx
		jmp	loc_6ED5A1A3
; ---------------------------------------------------------------------------

loc_6ED59F94:				; CODE XREF: sub_6ED59E30+379j
		cmp	[ebp+var_88], 0FFFFFFFFh
		jz	loc_6ED5A1AF
		mov	edx, [ebp+var_98]
		lea	ecx, [ebp+var_18]
		mov	[ebp+var_9], 26h
		mov	dword ptr [esp+8], 0
		mov	eax, [edx]
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_68], 8
		add	eax, 2
		mov	[esp+4], eax
		call	ds:_ZN7QStringC1EiN2Qt14InitializationE
		mov	edx, [ebp+var_18]
		mov	eax, [edx]
		cmp	eax, 1
		jz	loc_6ED5A280

loc_6ED59FE0:				; CODE XREF: sub_6ED59E30+458j
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_68], 2
		call	ds:_ZN7QString7reallocEv
		mov	eax, [ebp+var_18]
		mov	eax, [eax+0Ch]

loc_6ED59FF9:				; CODE XREF: sub_6ED59E30+460j
		movzx	edx, [ebp+var_9]
		mov	[eax], dx
		mov	edx, [ebp+var_98]
		add	eax, 2
		mov	[ebp+var_8C], eax
		mov	eax, [edx]
		mov	ecx, [eax+8]
		mov	eax, [eax+0Ch]
		mov	edx, ecx
		mov	[esp+4], eax	; void *
		mov	eax, [ebp+var_8C]
		add	edx, edx
		mov	[ebp+var_90], ecx
		mov	[esp+8], edx	; size_t
		mov	[esp], eax	; void *
		call	memcpy
		mov	edx, [ebp+var_90]
		lea	eax, [ebp+var_18]
		mov	ecx, [ebp+var_8C]
		mov	word ptr [ecx+edx*2], 3Bh
		lea	edx, [ebp+var_10]
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_68], 7
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5A261

loc_6ED5A074:				; CODE XREF: sub_6ED59E30+444j
		mov	ecx, [ebp+var_88]
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	dword ptr [esp+0Ch], 1
		mov	[esp], eax
		mov	[esp+8], ecx
		mov	[ebp+var_68], 8
		call	ds:_ZNK7QString7indexOfERKS_iN2Qt15CaseSensitivityE
		cmp	eax, 0FFFFFFFFh
		mov	[ebp+var_88], eax
		jz	loc_6ED5A19D
		mov	edx, [ebp+var_B4]
		mov	ecx, [ebp+var_88]
		mov	eax, [edx]
		mov	eax, [eax+8]
		mov	[esp+4], ecx
		add	eax, 2
		mov	[esp+8], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		call	ds:_ZN7QString6removeEii
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+6D0h]
		mov	eax, [eax+8]
		cmp	eax, 1
		jz	short loc_6ED5A0F6
		mov	ecx, [ebp+var_A8]
		mov	[esp], ecx
		call	sub_6ED93180

loc_6ED5A0F6:				; CODE XREF: sub_6ED59E30+2B6j
		lea	eax, [ebp+var_2C]
		mov	edx, [ebp+var_A8]
		mov	[esp+8], eax
		mov	eax, [ebp+var_B0]
		mov	[ebp+var_68], 8
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_6ED98470
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_A4], eax
		mov	eax, [eax]
		cmp	eax, [edx+6D0h]
		jz	loc_6ED5A311
		add	eax, 0Ch
		mov	[ebp+var_94], eax

loc_6ED5A13C:				; CODE XREF: sub_6ED59E30+5CCj
					; sub_6ED59E30+5EDj
		mov	edx, [ebp+var_94]
		mov	eax, [edx]
		mov	eax, [eax+8]
		cmp	eax, 1
		jz	short loc_6ED5A15B
		mov	[esp], edx
		mov	[ebp+var_68], 8
		call	sub_6ED93310

loc_6ED5A15B:				; CODE XREF: sub_6ED59E30+31Aj
		lea	eax, [ebp+var_2C]
		mov	ecx, [ebp+var_98]
		mov	[esp+8], eax
		mov	eax, [ebp+var_94]
		mov	[ebp+var_68], 8
		mov	[esp+4], ecx
		mov	[esp], eax
		call	sub_6ED98510
		mov	ecx, [ebp+var_94]
		mov	[ebp+var_A0], eax
		mov	eax, [eax]
		cmp	eax, [ecx]
		jz	loc_6ED5A295
		add	eax, 0Ch

loc_6ED5A19A:				; CODE XREF: sub_6ED59E30+4DCj
		add	dword ptr [eax], 1

loc_6ED5A19D:				; CODE XREF: sub_6ED59E30+279j
		mov	eax, [ebp+var_14]
		mov	eax, [eax+8]

loc_6ED5A1A3:				; CODE XREF: sub_6ED59E30+15Fj
		cmp	[ebp+var_88], eax
		jl	loc_6ED59F94

loc_6ED5A1AF:				; CODE XREF: sub_6ED59E30+16Bj
		mov	edx, [ebp+var_9C]
		mov	ecx, [ebp+arg_0]
		mov	edx, [edx+4]
		mov	[ebp+var_9C], edx
		cmp	edx, [ecx+10h]
		jnz	loc_6ED59F70

loc_6ED5A1CA:				; CODE XREF: sub_6ED59E30+12Dj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+6CCh]
		mov	eax, [eax+8]
		cmp	eax, 1
		jz	short loc_6ED5A1F0
		mov	ecx, [ebp+var_108]
		mov	[ebp+var_68], 8
		mov	[esp], ecx
		call	sub_6ED93310

loc_6ED5A1F0:				; CODE XREF: sub_6ED59E30+3A9j
		lea	eax, [ebp+var_2C]
		mov	edx, [ebp+var_108]
		mov	[esp+8], eax
		mov	eax, [ebp+var_F8]
		mov	[ebp+var_68], 8
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_6ED98510
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_10C], eax
		mov	edx, [eax]
		cmp	edx, [ecx+6CCh]
		jz	loc_6ED5A4AC
		add	edx, 0Ch

loc_6ED5A230:				; CODE XREF: sub_6ED59E30+6F5j
		mov	eax, [ebp+var_14]
		mov	eax, [eax+8]
		mov	[edx], eax
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED59ECF
		mov	eax, [ebp+var_14]
		mov	[ebp+var_68], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED59ECF
; ---------------------------------------------------------------------------

loc_6ED5A261:				; CODE XREF: sub_6ED59E30+23Ej
		mov	eax, [ebp+var_18]
		mov	[ebp+var_68], 8
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5A074
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5A280:				; CODE XREF: sub_6ED59E30+1AAj
		mov	eax, [edx+0Ch]
		add	edx, 12h
		cmp	eax, edx
		jnz	loc_6ED59FE0
		xchg	ax, ax
		jmp	loc_6ED59FF9
; ---------------------------------------------------------------------------

loc_6ED5A295:				; CODE XREF: sub_6ED59E30+361j
		mov	edx, [eax+0Ch]
		cmp	edx, [eax+18h]
		jge	loc_6ED5A467

loc_6ED5A2A1:				; CODE XREF: sub_6ED59E30+677j
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+var_94]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_B8], eax
		mov	eax, [edx]
		mov	[ebp+var_68], 8
		mov	[esp], eax
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		mov	edx, eax
		jz	short loc_6ED5A2E8
		mov	ecx, [ebp+var_98]
		mov	eax, [ecx]
		mov	[edx+8], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+0Ch], 0

loc_6ED5A2E8:				; CODE XREF: sub_6ED59E30+49Ej
		mov	eax, [ebp+var_B8]
		mov	[edx+4], eax
		mov	ecx, [ebp+var_A0]
		mov	eax, [ecx]
		mov	[edx], eax
		mov	[ecx], edx
		mov	ecx, [ebp+var_94]
		mov	eax, [ecx]
		add	dword ptr [eax+0Ch], 1
		lea	eax, [edx+0Ch]
		jmp	loc_6ED5A19A
; ---------------------------------------------------------------------------

loc_6ED5A311:				; CODE XREF: sub_6ED59E30+2FDj
		mov	edx, [eax+0Ch]
		cmp	edx, [eax+18h]
		jge	loc_6ED5A422

loc_6ED5A31D:				; CODE XREF: sub_6ED59E30+632j
		mov	ecx, [ebp+var_7C]
		mov	edx, [ebp+var_78]
		mov	[ebp+var_28], ecx
		lock inc dword ptr [edx]
		setnz	al
		mov	ecx, [ebp+var_2C]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_BC], ecx
		mov	eax, [edx+6D0h]
		mov	[ebp+var_68], 3
		mov	[esp], eax
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		mov	[ebp+var_AC], eax
		jz	short loc_6ED5A3B9
		mov	ecx, [ebp+var_B0]
		mov	edx, [ebp+var_AC]
		mov	eax, [ecx]
		mov	[edx+8], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+var_AC]
		mov	eax, [ebp+var_28]
		mov	ecx, [ebp+var_AC]
		add	edx, 0Ch
		mov	[ecx+0Ch], eax
		lock inc dword ptr [eax+8]
		setnz	cl
		mov	ecx, [ebp+var_AC]
		mov	eax, [ecx+0Ch]
		test	byte ptr [eax+1Ch], 1
		jnz	short loc_6ED5A3B9
		mov	eax, [eax+8]
		cmp	eax, 1
		jz	short loc_6ED5A3B9
		mov	[esp], edx
		mov	[ebp+var_68], 1
		call	sub_6ED93310

loc_6ED5A3B9:				; CODE XREF: sub_6ED59E30+52Ej
					; sub_6ED59E30+570j ...
		mov	eax, [ebp+var_BC]
		mov	ecx, [ebp+var_AC]
		mov	[ecx+4], eax
		mov	edx, [ebp+var_A4]
		mov	eax, [edx]
		mov	[ecx], eax
		mov	[edx], ecx
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+6D0h]
		add	dword ptr [eax+0Ch], 1
		mov	eax, [ebp+var_AC]
		add	eax, 0Ch
		mov	[ebp+var_94], eax
		mov	eax, [ebp+var_28]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED5A13C
		mov	eax, [ebp+var_28]
		mov	dword ptr [esp+4], offset sub_6ED932E0
		mov	[ebp+var_68], 8
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_6ED5A13C
; ---------------------------------------------------------------------------

loc_6ED5A422:				; CODE XREF: sub_6ED59E30+4E7j
		movsx	edx, word ptr [eax+16h]
		mov	[esp], eax
		add	edx, 1
		mov	[esp+4], edx
		call	ds:_ZN9QHashData6rehashEi
		lea	eax, [ebp+var_2C]
		mov	ecx, [ebp+var_B0]
		mov	[esp+8], eax
		mov	eax, [ebp+var_A8]
		mov	[ebp+var_68], 8
		mov	[esp+4], ecx
		mov	[esp], eax
		call	sub_6ED98470
		mov	[ebp+var_A4], eax
		jmp	loc_6ED5A31D
; ---------------------------------------------------------------------------

loc_6ED5A467:				; CODE XREF: sub_6ED59E30+46Bj
		movsx	edx, word ptr [eax+16h]
		mov	[esp], eax
		add	edx, 1
		mov	[esp+4], edx
		call	ds:_ZN9QHashData6rehashEi
		mov	edx, [ebp+var_98]
		lea	eax, [ebp+var_2C]
		mov	ecx, [ebp+var_94]
		mov	[esp+8], eax
		mov	[ebp+var_68], 8
		mov	[esp+4], edx
		mov	[esp], ecx
		call	sub_6ED98510
		mov	[ebp+var_A0], eax
		jmp	loc_6ED5A2A1
; ---------------------------------------------------------------------------

loc_6ED5A4AC:				; CODE XREF: sub_6ED59E30+3F7j
		mov	eax, [edx+0Ch]
		cmp	eax, [edx+18h]
		jge	loc_6ED5A643

loc_6ED5A4B8:				; CODE XREF: sub_6ED59E30+853j
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_128], eax
		mov	eax, [edx+6CCh]
		mov	[ebp+var_68], 8
		mov	[esp], eax
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		mov	edx, eax
		jz	short loc_6ED5A500
		mov	ecx, [ebp+var_F8]
		mov	eax, [ecx]
		mov	[edx+8], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+0Ch], 0

loc_6ED5A500:				; CODE XREF: sub_6ED59E30+6B6j
		mov	eax, [ebp+var_128]
		mov	[edx+4], eax
		mov	ecx, [ebp+var_10C]
		mov	eax, [ecx]
		mov	[edx], eax
		mov	[ecx], edx
		mov	ecx, [ebp+arg_0]
		add	edx, 0Ch
		mov	eax, [ecx+6CCh]
		add	dword ptr [eax+0Ch], 1
		jmp	loc_6ED5A230
; ---------------------------------------------------------------------------

loc_6ED5A52A:				; CODE XREF: sub_6ED59E30+104j
		mov	[ebp+var_F0], eax
		mov	ecx, [eax+38h]
		mov	[ebp+var_120], eax
		mov	[ebp+var_110], ecx

loc_6ED5A53F:				; CODE XREF: sub_6ED59E30+7DAj
		cmp	[ebp+var_110], 0
		jns	short loc_6ED5A5B4
		mov	edx, [ebp+var_F0]
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_EC], edx
		cmp	[ecx+10h], edx
		jz	loc_6ED59F3A
		mov	eax, [ebp+var_F8]
		sub	edx, 8
		mov	[ebp+var_124], edx
		mov	[esp+4], edx
		mov	[ebp+var_68], 9
		mov	[esp], eax
		call	ds:_ZNK7QStringltERKS_
		test	al, al
		jnz	loc_6ED59F3A
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_EC]
		cmp	[edx+10h], ecx
		jz	loc_6ED59F3A
		mov	edx, [ebp+var_124]
		mov	eax, [edx+4]
		mov	[ebp+var_14], eax
		lock inc dword ptr [eax]
		setnz	dl
		jmp	loc_6ED59F4C
; ---------------------------------------------------------------------------

loc_6ED5A5B4:				; CODE XREF: sub_6ED59E30+716j
					; sub_6ED59E30+7D1j
		mov	edx, [ebp+var_120]
		mov	eax, [ebp+var_110]
		mov	eax, [edx+eax*4+4]
		mov	edx, [ebp+var_134]
		mov	[ebp+var_F0], eax
		cmp	eax, [edx]
		jz	short loc_6ED5A603
		mov	ecx, [ebp+var_B0]
		sub	eax, 8
		mov	[esp], eax
		mov	[ebp+var_68], 9
		mov	[esp+4], ecx
		call	ds:_ZNK7QStringltERKS_
		test	al, al
		jz	short loc_6ED5A603
		mov	eax, [ebp+var_F0]
		mov	[ebp+var_120], eax
		jmp	short loc_6ED5A5B4
; ---------------------------------------------------------------------------

loc_6ED5A603:				; CODE XREF: sub_6ED59E30+7A2j
					; sub_6ED59E30+7C3j
		sub	[ebp+var_110], 1
		jmp	loc_6ED5A53F
; ---------------------------------------------------------------------------

loc_6ED5A60F:				; CODE XREF: sub_6ED59E30+58j
					; sub_6ED59E30+B4j
		mov	ecx, [ebp+arg_0]
		mov	ecx, [ecx+6D0h]
		mov	[ebp+var_E0], ecx
		mov	edx, [ecx+4]
		mov	eax, [ecx+18h]
		jmp	short loc_6ED5A63A
; ---------------------------------------------------------------------------

loc_6ED5A626:				; CODE XREF: sub_6ED59E30+80Cj
		mov	ecx, [edx]
		sub	eax, 1
		cmp	[ebp+var_E0], ecx
		jnz	loc_6ED5A783
		add	edx, 4

loc_6ED5A63A:				; CODE XREF: sub_6ED59E30+7F4j
		test	eax, eax
		jnz	short loc_6ED5A626
		jmp	loc_6ED5A789
; ---------------------------------------------------------------------------

loc_6ED5A643:				; CODE XREF: sub_6ED59E30+682j
		movsx	eax, word ptr [edx+16h]
		mov	[esp], edx
		add	eax, 1
		mov	[esp+4], eax
		call	ds:_ZN9QHashData6rehashEi
		lea	eax, [ebp+var_2C]
		mov	edx, [ebp+var_108]
		mov	[esp+8], eax
		mov	eax, [ebp+var_F8]
		mov	[ebp+var_68], 8
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_6ED98510
		mov	[ebp+var_10C], eax
		jmp	loc_6ED5A4B8
; ---------------------------------------------------------------------------

loc_6ED5A688:				; DATA XREF: sub_6ED59E30+20o
		add	ebp, 8
		mov	eax, [ebp+var_68]
		mov	edx, [ebp+var_64]
		cmp	eax, 1
		mov	[ebp+var_138], edx
		jz	loc_6ED5A749
		cmp	eax, 2
		jz	short loc_6ED5A6EA
		cmp	eax, 3
		jz	loc_6ED5A75D
		cmp	eax, 4
		jz	loc_6ED5A76F
		cmp	eax, 5
		jz	short loc_6ED5A735
		cmp	eax, 6
		nop
		jz	loc_6ED5A749
		cmp	eax, 7
		jz	short loc_6ED5A6FC
		cmp	eax, 8
		xchg	ax, ax
		jz	short loc_6ED5A70E
		mov	eax, [ebp+var_AC]
		mov	[ebp+var_68], 0
		add	eax, 8
		mov	[esp], eax
		call	sub_6ED94560

loc_6ED5A6EA:				; CODE XREF: sub_6ED59E30+873j
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_68], 0
		call	sub_6ED933B0

loc_6ED5A6FC:				; CODE XREF: sub_6ED59E30+899j
					; sub_6ED59E30+92Bj
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_68], 0
		call	sub_6ED94560

loc_6ED5A70E:				; CODE XREF: sub_6ED59E30+8A0j
					; sub_6ED59E30+917j ...
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_68], 0
		call	sub_6ED94560
		mov	eax, [ebp+var_138]
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED5A735:				; CODE XREF: sub_6ED59E30+88Aj
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_68], 0
		call	sub_6ED933B0
		jmp	short loc_6ED5A70E
; ---------------------------------------------------------------------------

loc_6ED5A749:				; CODE XREF: sub_6ED59E30+86Aj
					; sub_6ED59E30+890j
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_68], 0
		call	sub_6ED94560
		jmp	short loc_6ED5A6FC
; ---------------------------------------------------------------------------

loc_6ED5A75D:				; CODE XREF: sub_6ED59E30+878j
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		mov	[ebp+var_68], 0
		call	sub_6ED94560

loc_6ED5A76F:				; CODE XREF: sub_6ED59E30+881j
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_68], 0
		call	sub_6ED94560
		jmp	short loc_6ED5A70E
; ---------------------------------------------------------------------------

loc_6ED5A783:				; CODE XREF: sub_6ED59E30+801j
		mov	[ebp+var_E0], ecx

loc_6ED5A789:				; CODE XREF: sub_6ED59E30+80Ej
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_0]
		add	eax, 6D4h
		mov	[ebp+var_E8], eax
		mov	eax, ds:_ZN9QHashData11shared_nullE
		add	edx, 6CCh
		add	ecx, 6D0h
		mov	[ebp+var_FC], edx
		mov	[ebp+var_100], ecx
		mov	[ebp+var_74], eax
		add	eax, 8
		mov	[ebp+var_70], eax
		jmp	short loc_6ED5A7E1
; ---------------------------------------------------------------------------

loc_6ED5A7C5:				; CODE XREF: sub_6ED59E30+A5Aj
					; sub_6ED59E30+D8Ej
		mov	eax, [ebp+var_E0]
		mov	[ebp+var_68], 9
		mov	[esp], eax
		call	ds:_ZN9QHashData8nextNodeEPNS_4NodeE
		mov	[ebp+var_E0], eax

loc_6ED5A7E1:				; CODE XREF: sub_6ED59E30+993j
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_E0]
		cmp	ecx, [edx+6D0h]
		jz	loc_6ED5AD9C
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+6D4h]
		mov	eax, [eax+8]
		cmp	eax, 1
		jz	short loc_6ED5A81C
		mov	ecx, [ebp+var_E8]
		mov	[ebp+var_68], 9
		mov	[esp], ecx
		call	sub_6ED93310

loc_6ED5A81C:				; CODE XREF: sub_6ED59E30+9D5j
		mov	eax, [ebp+var_E0]
		mov	ecx, [ebp+var_E8]
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_68], 9
		mov	edx, eax
		add	edx, 8
		mov	[ebp+var_D8], eax
		mov	[ebp+var_E4], edx
		mov	[esp+4], edx
		mov	[esp], ecx
		call	sub_6ED98510
		mov	eax, [eax]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_118], eax
		mov	eax, [edx+6D4h]
		mov	eax, [eax+8]
		cmp	eax, 1
		jz	short loc_6ED5A87B
		mov	ecx, [ebp+var_E8]
		mov	[esp], ecx
		call	sub_6ED93310

loc_6ED5A87B:				; CODE XREF: sub_6ED59E30+A3Bj
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_118]
		cmp	edx, [eax+6D4h]
		jnz	loc_6ED5A7C5
		mov	eax, [eax+6CCh]
		cmp	dword ptr [eax+0Ch], 0
		jnz	loc_6ED5AC93

loc_6ED5A8A0:				; CODE XREF: sub_6ED59E30+E95j
		mov	[ebp+var_114], 0

loc_6ED5A8AA:				; CODE XREF: sub_6ED59E30+EA4j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+6D4h]
		mov	eax, [eax+8]
		cmp	eax, 1
		jz	short loc_6ED5A8D0
		mov	ecx, [ebp+var_E8]
		mov	[ebp+var_68], 9
		mov	[esp], ecx
		call	sub_6ED93310

loc_6ED5A8D0:				; CODE XREF: sub_6ED59E30+A89j
		mov	edx, [ebp+var_E4]
		lea	eax, [ebp+var_2C]
		mov	ecx, [ebp+var_E8]
		mov	[esp+8], eax
		mov	[ebp+var_68], 9
		mov	[esp+4], edx
		mov	[esp], ecx
		call	sub_6ED98510
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_104], eax
		mov	eax, [eax]
		cmp	eax, [ecx+6D4h]
		jz	loc_6ED5ACD9
		mov	edx, [ebp+var_114]
		mov	[eax+0Ch], edx
		mov	ecx, [ebp+var_104]
		mov	ecx, [ecx]
		mov	[ebp+var_D4], ecx

loc_6ED5A924:				; CODE XREF: sub_6ED59E30+F22j
		mov	eax, [ebp+var_D8]
		mov	eax, [eax+0Ch]
		mov	edx, eax
		mov	[ebp+var_C0], eax
		mov	edx, [edx+18h]
		mov	eax, [eax+4]
		test	edx, edx
		jz	short loc_6ED5A96A
		mov	ecx, [eax]
		cmp	[ebp+var_C0], ecx
		jnz	loc_6ED5AC88
		sub	edx, 1
		jmp	short loc_6ED5A966
; ---------------------------------------------------------------------------

loc_6ED5A952:				; CODE XREF: sub_6ED59E30+B38j
		add	eax, 4
		sub	edx, 1
		mov	ecx, [eax]
		cmp	[ebp+var_C0], ecx
		jnz	loc_6ED5AC88

loc_6ED5A966:				; CODE XREF: sub_6ED59E30+B20j
		test	edx, edx
		jnz	short loc_6ED5A952

loc_6ED5A96A:				; CODE XREF: sub_6ED59E30+B0Dj
					; sub_6ED59E30+E5Ej
		mov	eax, [ebp+var_D4]
		mov	[ebp+var_DC], eax

loc_6ED5A976:				; CODE XREF: sub_6ED59E30+C2Bj
		mov	edx, [ebp+var_D8]
		mov	ecx, [ebp+var_C0]
		cmp	ecx, [edx+0Ch]
		jz	loc_6ED5ABB1
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+6D0h]
		mov	eax, [eax+0Ch]
		test	eax, eax
		jnz	loc_6ED5AB39

loc_6ED5A99F:				; CODE XREF: sub_6ED59E30+D3Bj
		mov	ecx, [ebp+var_74]
		mov	edx, [ebp+var_70]
		mov	[ebp+var_1C], ecx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+var_1C]

loc_6ED5A9B1:				; CODE XREF: sub_6ED59E30+D55j
					; sub_6ED59E30+D61j ...
		mov	edx, [ebp+var_C0]
		add	edx, 8
		mov	[ebp+var_D0], edx
		mov	ecx, [eax+0Ch]
		test	ecx, ecx
		jnz	loc_6ED5AAFF

loc_6ED5A9CB:				; CODE XREF: sub_6ED59E30+CF2j
		mov	[ebp+var_CC], 0

loc_6ED5A9D5:				; CODE XREF: sub_6ED59E30+D04j
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5AA99

loc_6ED5A9E4:				; CODE XREF: sub_6ED59E30+C84j
		mov	eax, [ebp+var_D4]
		mov	edx, [ebp+arg_0]
		mov	eax, [eax+0Ch]
		mov	[ebp+var_C4], eax
		mov	eax, [edx+6D4h]
		mov	eax, [eax+0Ch]
		test	eax, eax
		jnz	loc_6ED5AAB9

loc_6ED5AA07:				; CODE XREF: sub_6ED59E30+CBBj
		mov	[ebp+var_C8], 0

loc_6ED5AA11:				; CODE XREF: sub_6ED59E30+CCAj
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+6CCh]
		mov	ecx, [eax+0Ch]
		test	ecx, ecx
		jnz	short loc_6ED5AA60

loc_6ED5AA21:				; CODE XREF: sub_6ED59E30+C62j
		xor	eax, eax

loc_6ED5AA23:				; CODE XREF: sub_6ED59E30+C67j
		add	eax, [ebp+var_C8]
		mov	edx, [ebp+var_DC]
		imul	eax, [ebp+var_CC]
		add	eax, [ebp+var_C4]
		mov	[edx+0Ch], eax
		mov	ecx, [ebp+var_C0]
		mov	[ebp+var_68], 9
		mov	[esp], ecx
		call	ds:_ZN9QHashData8nextNodeEPNS_4NodeE
		mov	[ebp+var_C0], eax
		jmp	loc_6ED5A976
; ---------------------------------------------------------------------------

loc_6ED5AA60:				; CODE XREF: sub_6ED59E30+BEFj
		mov	eax, [ebp+var_D0]
		mov	edx, [ebp+var_FC]
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_68], 9
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_6ED98510
		mov	ecx, [ebp+arg_0]
		mov	eax, [eax]
		cmp	eax, [ecx+6CCh]
		jz	short loc_6ED5AA21
		mov	eax, [eax+0Ch]
		jmp	short loc_6ED5AA23
; ---------------------------------------------------------------------------

loc_6ED5AA99:				; CODE XREF: sub_6ED59E30+BAEj
		mov	eax, [ebp+var_1C]
		mov	dword ptr [esp+4], offset sub_6ED932E0
		mov	[ebp+var_68], 9
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_6ED5A9E4
; ---------------------------------------------------------------------------

loc_6ED5AAB9:				; CODE XREF: sub_6ED59E30+BD1j
		mov	ecx, [ebp+var_D0]
		mov	eax, [ebp+var_E8]
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_68], 9
		mov	[esp+4], ecx
		mov	[esp], eax
		call	sub_6ED98510
		mov	edx, [ebp+arg_0]
		mov	eax, [eax]
		cmp	eax, [edx+6D4h]
		jz	loc_6ED5AA07
		mov	eax, [eax+0Ch]
		mov	[ebp+var_C8], eax
		jmp	loc_6ED5AA11
; ---------------------------------------------------------------------------

loc_6ED5AAFF:				; CODE XREF: sub_6ED59E30+B95j
		lea	ecx, [ebp+var_1C]
		mov	dword ptr [esp+8], 0
		mov	[esp+4], edx
		mov	[esp], ecx
		mov	[ebp+var_68], 6
		call	sub_6ED98510
		mov	eax, [eax]
		cmp	eax, [ebp+var_1C]
		jz	loc_6ED5A9CB
		mov	eax, [eax+0Ch]
		mov	[ebp+var_CC], eax
		mov	eax, [ebp+var_1C]
		jmp	loc_6ED5A9D5
; ---------------------------------------------------------------------------

loc_6ED5AB39:				; CODE XREF: sub_6ED59E30+B69j
		mov	ecx, [ebp+var_E4]
		mov	eax, [ebp+var_100]
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_68], 9
		mov	[esp+4], ecx
		mov	[esp], eax
		call	sub_6ED98470
		mov	edx, [ebp+arg_0]
		mov	eax, [eax]
		cmp	eax, [edx+6D0h]
		jz	loc_6ED5A99F
		mov	eax, [eax+0Ch]
		mov	[ebp+var_1C], eax
		lock inc dword ptr [eax+8]
		setnz	dl
		mov	eax, [ebp+var_1C]
		test	byte ptr [eax+1Ch], 1
		jnz	loc_6ED5A9B1
		mov	edx, [eax+8]
		cmp	edx, 1
		jz	loc_6ED5A9B1
		lea	ecx, [ebp+var_1C]
		mov	[esp], ecx
		mov	[ebp+var_68], 9
		call	sub_6ED93310
		mov	eax, [ebp+var_1C]
		jmp	loc_6ED5A9B1
; ---------------------------------------------------------------------------

loc_6ED5ABB1:				; CODE XREF: sub_6ED59E30+B55j
		mov	eax, [ebp+var_D4]
		cmp	dword ptr [eax+0Ch], 400h
		jle	loc_6ED5A7C5
		cmp	[ebp+arg_4], 0
		mov	[ebp+var_119], 1
		jz	loc_6ED5ADA3
		mov	[ebp+var_C], 400h
		mov	edx, [eax+0Ch]
		lea	eax, [ebp+var_20]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aTheXmlEntity1E ; "The XML entity \"%1\" expands to a	stri"...
		mov	[esp], eax
		mov	[ebp+var_130], edx
		mov	[ebp+var_68], 9
		call	ds:_ZN7QString10fromLatin1EPKci
		push	edx
		mov	ecx, [ebp+var_130]
		lea	edx, [ebp+var_C]
		mov	[esp+10h], edx
		mov	edx, [ebp+var_E4]
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		mov	[esp+0Ch], ecx
		mov	[ebp+var_68], 5
		mov	[esp+8], edx
		lea	edx, [ebp+var_20]
		mov	[esp+4], edx
		call	ds:_ZNK7QString3argERKS_iRK5QChar
		mov	ecx, [ebp+arg_4]
		push	eax
		lea	eax, [ebp+var_24]
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	[ebp+var_68], 4
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		mov	[ebp+var_68], 5
		call	sub_6ED94560
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_68], 9
		call	sub_6ED94560
		mov	[ebp+var_119], 1
		jmp	loc_6ED5ADA3
; ---------------------------------------------------------------------------

loc_6ED5AC88:				; CODE XREF: sub_6ED59E30+B17j
					; sub_6ED59E30+B30j
		mov	[ebp+var_C0], ecx
		jmp	loc_6ED5A96A
; ---------------------------------------------------------------------------

loc_6ED5AC93:				; CODE XREF: sub_6ED59E30+A6Aj
		mov	eax, [ebp+var_E4]
		mov	edx, [ebp+var_FC]
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_68], 9
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_6ED98510
		mov	ecx, [ebp+arg_0]
		mov	eax, [eax]
		cmp	eax, [ecx+6CCh]
		jz	loc_6ED5A8A0
		mov	eax, [eax+0Ch]
		mov	[ebp+var_114], eax
		jmp	loc_6ED5A8AA
; ---------------------------------------------------------------------------

loc_6ED5ACD9:				; CODE XREF: sub_6ED59E30+AD7j
		mov	edx, [eax+0Ch]
		cmp	edx, [eax+18h]
		jge	short loc_6ED5AD57

loc_6ED5ACE1:				; CODE XREF: sub_6ED59E30+F67j
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_12C], eax
		mov	eax, [edx+6D4h]
		mov	[ebp+var_68], 9
		mov	[esp], eax
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		jz	short loc_6ED5AD2A
		mov	ecx, [ebp+var_D8]
		mov	edx, [ecx+8]
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+var_114]
		mov	[eax+0Ch], edx

loc_6ED5AD2A:				; CODE XREF: sub_6ED59E30+EDDj
		mov	ecx, [ebp+var_12C]
		mov	[eax+4], ecx
		mov	ecx, [ebp+var_104]
		mov	edx, [ecx]
		mov	[eax], edx
		mov	[ecx], eax
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+6D4h]
		mov	[ebp+var_D4], eax
		add	dword ptr [edx+0Ch], 1
		jmp	loc_6ED5A924
; ---------------------------------------------------------------------------

loc_6ED5AD57:				; CODE XREF: sub_6ED59E30+EAFj
		movsx	edx, word ptr [eax+16h]
		mov	[esp], eax
		add	edx, 1
		mov	[esp+4], edx
		call	ds:_ZN9QHashData6rehashEi
		mov	eax, [ebp+var_E4]
		lea	ecx, [ebp+var_2C]
		mov	edx, [ebp+var_E8]
		mov	[esp+8], ecx
		mov	[ebp+var_68], 9
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_6ED98510
		mov	[ebp+var_104], eax
		jmp	loc_6ED5ACE1
; ---------------------------------------------------------------------------

loc_6ED5AD9C:				; CODE XREF: sub_6ED59E30+9C0j
		mov	[ebp+var_119], 0

loc_6ED5ADA3:				; CODE XREF: sub_6ED59E30+D9Fj
					; sub_6ED59E30+E53j
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5ADC4

loc_6ED5ADB0:				; CODE XREF: sub_6ED59E30+FA7j
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_119]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED5ADC4:				; CODE XREF: sub_6ED59E30+F7Ej
		mov	eax, [ebp+var_10]
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED5ADB0
sub_6ED59E30	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 519. _ZNK20QXmlNamespaceSupport9splitNameERK7QStringRS0_S3_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZNK20QXmlNamespaceSupport9splitNameERK7QStringRS0_S3_
_ZNK20QXmlNamespaceSupport9splitNameERK7QStringRS0_S3_ proc near
					; CODE XREF: sub_6ED64010+A3p

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A4B8
		mov	[ebp+var_28], offset sub_6ED5AF30
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0
		mov	word ptr [esp+4], 3Ah
		mov	[esp], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZNK7QString7indexOfE5QChariN2Qt15CaseSensitivityE
		cmp	eax, 0FFFFFFFFh
		mov	[ebp+var_50], eax
		jz	loc_6ED5AF20

loc_6ED5AE45:				; CODE XREF: _ZNK20QXmlNamespaceSupport9splitNameERK7QStringRS0_S3_+14Bj
		mov	eax, [ebp+var_50]
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+8], eax
		lea	eax, [ebp+var_C]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK7QString4leftEi
		mov	eax, [ebp+arg_8]
		lea	edx, [ebp+var_C]
		mov	[ebp+var_48], 2
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5AEA3
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED5AEA3:				; CODE XREF: _ZNK20QXmlNamespaceSupport9splitNameERK7QStringRS0_S3_+AEj
		mov	eax, [ebp+var_50]
		mov	edx, [ebp+arg_4]
		mov	dword ptr [esp+0Ch], 0FFFFFFFFh
		mov	[ebp+var_48], 0FFFFFFFFh
		add	eax, 1
		mov	[esp+8], eax
		lea	eax, [ebp+var_10]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK7QString3midEii
		mov	eax, [ebp+arg_C]
		lea	edx, [ebp+var_10]
		mov	[ebp+var_48], 1
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5AF0C
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED5AF0C:				; CODE XREF: _ZNK20QXmlNamespaceSupport9splitNameERK7QStringRS0_S3_+117j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5AF20:				; CODE XREF: _ZNK20QXmlNamespaceSupport9splitNameERK7QStringRS0_S3_+5Fj
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	eax, [eax+8]
		mov	[ebp+var_50], eax
		jmp	loc_6ED5AE45
_ZNK20QXmlNamespaceSupport9splitNameERK7QStringRS0_S3_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5AF30	proc near		; DATA XREF: _ZNK20QXmlNamespaceSupport9splitNameERK7QStringRS0_S3_+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-54h], eax
		jz	short loc_6ED5AF63
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	edx, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED5AF63:				; CODE XREF: sub_6ED5AF30+Dj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED5AF30	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 112. _ZN15QXmlInputSource9fetchDataEv

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN15QXmlInputSource9fetchDataEv
_ZN15QXmlInputSource9fetchDataEv proc near ; DATA XREF:	.rdata:6EDA6F78o

var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= byte ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 84h
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A4C0
		mov	[ebp+var_28], offset sub_6ED5B330
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, ds:_ZN10QByteArray11shared_nullE
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	ecx, [eax]
		test	ecx, ecx
		mov	[ebp+var_5C], ecx
		jz	loc_6ED5B195

loc_6ED5AFE4:				; CODE XREF: _ZN15QXmlInputSource9fetchDataEv+225j
		mov	eax, [ebp+var_5C]
		mov	[ebp+var_48], 3
		mov	[esp], eax
		call	ds:_ZNK9QIODevice6isOpenEv
		test	al, al
		jz	loc_6ED5B150

loc_6ED5AFFF:				; CODE XREF: _ZN15QXmlInputSource9fetchDataEv+1E6j
		lea	eax, [ebp+var_C]
		mov	dword ptr [esp+4], 400h
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	ds:_ZN10QByteArray6resizeEi
		mov	eax, [ebp+var_C]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED5B240

loc_6ED5B028:				; CODE XREF: _ZN15QXmlInputSource9fetchDataEv+2B8j
		mov	eax, [eax+8]
		mov	[ebp+var_48], 3
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZN10QByteArray7reallocEi
		mov	eax, [ebp+var_C]
		mov	edx, [eax+0Ch]

loc_6ED5B048:				; CODE XREF: _ZN15QXmlInputSource9fetchDataEv+2C0j
		mov	eax, [ebp+var_5C]
		mov	dword ptr [esp+8], 400h
		mov	dword ptr [esp+0Ch], 0
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	ds:_ZN9QIODevice4readEPcx
		mov	[ebp+var_58], eax
		mov	eax, [ebp+var_58]
		mov	[ebp+var_54], edx
		and	eax, edx
		cmp	eax, 0FFFFFFFFh
		jz	short loc_6ED5B090
		cmp	[ebp+var_54], 0
		jle	loc_6ED5B255
		lea	esi, [esi+0]

loc_6ED5B090:				; CODE XREF: _ZN15QXmlInputSource9fetchDataEv+EDj
					; _ZN15QXmlInputSource9fetchDataEv+325j ...
		mov	ecx, [ebp+var_54]
		mov	eax, [ebp+var_58]
		mov	[ebp+var_48], 3
		mov	ebx, ecx
		sar	ebx, 1Fh
		mov	edx, ebx
		not	edx
		mov	ebx, edx
		sar	ebx, 1Fh
		mov	ecx, ebx
		and	eax, ecx
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZN10QByteArray6resizeEi

loc_6ED5B0BF:				; CODE XREF: _ZN15QXmlInputSource9fetchDataEv+1E0j
					; _ZN15QXmlInputSource9fetchDataEv+236j ...
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		lea	edx, [ebp+var_18]
		mov	ecx, [eax+8]
		mov	dword ptr [esp+0Ch], 0
		mov	[esp], edx
		mov	[ebp+var_6C], ecx
		lea	ecx, [ebp+var_C]
		mov	[esp+8], ecx
		mov	ecx, [ebp+arg_0]
		mov	[esp+4], ecx
		mov	eax, [eax+20h]
		mov	[ebp+var_48], 3
		call	eax
		sub	esp, 4
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	[ebp+var_6C]
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5B180

loc_6ED5B119:				; CODE XREF: _ZN15QXmlInputSource9fetchDataEv+203j
					; _ZN15QXmlInputSource9fetchDataEv+20Aj
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5B139
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_Z5qFreePv

loc_6ED5B139:				; CODE XREF: _ZN15QXmlInputSource9fetchDataEv+194j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	ebx, [ebp+var_4]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5B150:				; CODE XREF: _ZN15QXmlInputSource9fetchDataEv+69j
		mov	edx, [ebp+var_5C]
		mov	ecx, [ebp+var_5C]
		mov	[ebp+var_14], 1
		mov	eax, [edx]
		lea	edx, [ebp+var_14]
		mov	eax, [eax+34h]
		mov	[esp+4], edx
		mov	[esp], ecx
		call	eax
		test	al, al
		jz	loc_6ED5B0BF
		jmp	loc_6ED5AFFF
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5B180:				; CODE XREF: _ZN15QXmlInputSource9fetchDataEv+187j
		mov	eax, [ebp+var_18]
		mov	[ebp+var_48], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED5B119
; ---------------------------------------------------------------------------

loc_6ED5B195:				; CODE XREF: _ZN15QXmlInputSource9fetchDataEv+4Ej
		mov	eax, [eax+4]
		test	eax, eax
		jz	loc_6ED5B119
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	ds:_ZNK11QTextStream6deviceEv
		test	eax, eax
		mov	[ebp+var_5C], eax
		jnz	loc_6ED5AFE4
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	eax, [eax+4]
		test	eax, eax
		jz	loc_6ED5B0BF
		mov	[esp], eax
		call	ds:_ZNK11QTextStream6stringEv
		test	eax, eax
		jz	loc_6ED5B0BF
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+4]
		mov	eax, [eax+4]
		mov	[esp], eax
		call	ds:_ZNK11QTextStream6stringEv
		mov	eax, [eax]
		mov	edx, [eax+8]
		add	edx, edx
		mov	[esp+8], edx
		mov	eax, [eax+0Ch]
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	ds:_ZN10QByteArrayC1EPKci
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN10QByteArrayaSERKS_
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	sub_6ED90150
		jmp	loc_6ED5B0BF
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5B240:				; CODE XREF: _ZN15QXmlInputSource9fetchDataEv+92j
		mov	edx, [eax+0Ch]
		lea	ecx, [eax+10h]
		cmp	edx, ecx
		jnz	loc_6ED5B028
		xchg	ax, ax
		jmp	loc_6ED5B048
; ---------------------------------------------------------------------------

loc_6ED5B255:				; CODE XREF: _ZN15QXmlInputSource9fetchDataEv+F3j
		jge	short loc_6ED5B2D2
		mov	esi, esi
		lea	edi, [edi+0]
		jmp	short loc_6ED5B2DC
; ---------------------------------------------------------------------------

loc_6ED5B262:				; CODE XREF: _ZN15QXmlInputSource9fetchDataEv+384j
					; _ZN15QXmlInputSource9fetchDataEv+392j
		mov	eax, [edx+8]
		lea	edx, [ebp+var_C]
		mov	[esp], edx
		mov	[ebp+var_48], 3
		mov	[esp+4], eax
		call	ds:_ZN10QByteArray7reallocEi
		mov	eax, [ebp+var_C]
		mov	ebx, [ebp+var_58]
		mov	eax, [eax+0Ch]

loc_6ED5B285:				; CODE XREF: _ZN15QXmlInputSource9fetchDataEv+39Bj
		xor	ecx, ecx
		mov	edx, 400h
		sub	edx, [ebp+var_68]
		sbb	ecx, [ebp+var_64]
		add	eax, ebx
		mov	[esp+4], eax
		mov	[esp+8], edx
		mov	[esp+0Ch], ecx
		mov	ecx, [ebp+var_5C]
		mov	[ebp+var_48], 3
		mov	[esp], ecx
		call	ds:_ZN9QIODevice4readEPcx
		test	eax, eax
		jle	loc_6ED5B090
		mov	edx, eax
		sar	edx, 1Fh
		add	[ebp+var_58], eax
		adc	[ebp+var_54], edx
		cmp	[ebp+var_54], 0
		jl	short loc_6ED5B2DC
		jg	loc_6ED5B090

loc_6ED5B2D2:				; CODE XREF: _ZN15QXmlInputSource9fetchDataEv:loc_6ED5B255j
		cmp	[ebp+var_58], 3
		ja	loc_6ED5B090

loc_6ED5B2DC:				; CODE XREF: _ZN15QXmlInputSource9fetchDataEv+2D0j
					; _ZN15QXmlInputSource9fetchDataEv+33Aj
		mov	edx, [ebp+var_5C]
		mov	eax, [edx]
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	[esp], edx
		mov	eax, [eax+5Ch]
		mov	[ebp+var_48], 3
		call	eax
		test	al, al
		jz	loc_6ED5B090
		mov	edx, [ebp+var_54]
		mov	eax, [ebp+var_58]
		mov	[ebp+var_64], edx
		mov	edx, [ebp+var_C]
		mov	[ebp+var_68], eax
		mov	eax, [edx]
		cmp	eax, 1
		jnz	loc_6ED5B262
		mov	eax, [edx+0Ch]
		lea	ecx, [edx+10h]
		cmp	eax, ecx
		jnz	loc_6ED5B262
		mov	ebx, [ebp+var_58]
		jmp	loc_6ED5B285
_ZN15QXmlInputSource9fetchDataEv endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5B330	proc near		; DATA XREF: _ZN15QXmlInputSource9fetchDataEv+24o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-70h], edx
		jz	short loc_6ED5B37C
		cmp	eax, 2
		jz	short loc_6ED5B358
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED5B358:				; CODE XREF: sub_6ED5B330+14j
					; sub_6ED5B330+5Ej
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED90150
		mov	ecx, [ebp-70h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED5B37C:				; CODE XREF: sub_6ED5B330+Fj
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED90150
		jmp	short loc_6ED5B358
sub_6ED5B330	endp

; Exported entry 330. _ZN20QXmlNamespaceSupportC2Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN20QXmlNamespaceSupportC2Ev
_ZN20QXmlNamespaceSupportC2Ev proc near

var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= byte ptr -7Ch
var_78		= dword	ptr -78h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_40		= byte ptr -40h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0A8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_5C], eax
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		mov	[ebp+var_64], offset sub_6ED997C0
		mov	[ebp+var_60], offset word_6ED9A4CA
		mov	[ebp+var_58], offset sub_6ED5B560
		mov	[ebp+var_54], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 8 ; size_t
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_80], eax
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	edx, [ebp+var_80]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, ds:_ZN8QMapData11shared_nullE
		mov	edx, [ebp+var_80]
		mov	[edx+4], eax
		lock inc dword ptr [eax+34h]
		setnz	dl
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aHttpWww_w3_org	; "http://www.w3.org/XML/1998/namespace"
		mov	[ebp+var_78], 3
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_10], eax
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aXml_1 ; "xml"
		mov	[ebp+var_78], 2
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_80]
		mov	edx, [ebp+var_80]
		add	eax, 4
		mov	[ebp+var_84], eax
		mov	eax, [edx+4]
		mov	eax, [eax+34h]
		cmp	eax, 1
		jz	short loc_6ED5B467
		mov	eax, [ebp+var_84]
		mov	[ebp+var_78], 1
		mov	[esp], eax
		call	sub_6ED925B0

loc_6ED5B467:				; CODE XREF: _ZN20QXmlNamespaceSupportC2Ev+C0j
		mov	edx, [ebp+var_84]
		lea	eax, [ebp+var_C]
		mov	[esp+8], eax
		lea	eax, [ebp+var_40]
		mov	[esp+4], eax
		mov	[ebp+var_78], 1
		mov	[esp], edx
		call	sub_6ED981F0
		mov	edx, [ebp+var_80]
		cmp	eax, [edx+4]
		jz	short loc_6ED5B510
		lea	edx, [ebp+var_10]
		sub	eax, 4
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_78], 1
		call	ds:_ZN7QStringaSERKS_

loc_6ED5B4AC:				; CODE XREF: _ZN20QXmlNamespaceSupportC2Ev+1B9j
					; _ZN20QXmlNamespaceSupportC2Ev+1CBj
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5B4E0

loc_6ED5B4B9:				; CODE XREF: _ZN20QXmlNamespaceSupportC2Ev+163j
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5B4F5

loc_6ED5B4C6:				; CODE XREF: _ZN20QXmlNamespaceSupportC2Ev+178j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_80]
		mov	[eax], edx
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5B4E0:				; CODE XREF: _ZN20QXmlNamespaceSupportC2Ev+127j
		mov	eax, [ebp+var_C]
		mov	[ebp+var_78], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED5B4B9
; ---------------------------------------------------------------------------

loc_6ED5B4F5:				; CODE XREF: _ZN20QXmlNamespaceSupportC2Ev+134j
		mov	eax, [ebp+var_10]
		mov	[ebp+var_78], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED5B4C6
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5B510:				; CODE XREF: _ZN20QXmlNamespaceSupportC2Ev+100j
		lea	eax, [ebp+var_40]
		mov	dword ptr [esp+0Ch], 4
		mov	dword ptr [esp+8], 8
		mov	[esp+4], eax
		mov	eax, [edx+4]
		mov	[esp], eax
		call	ds:_ZN8QMapData11node_createEPPNS_4NodeEii
		mov	ecx, eax
		sub	ecx, 8
		jz	short loc_6ED5B546
		mov	edx, [ebp+var_C]
		mov	[eax-8], edx
		lock inc dword ptr [edx]
		setnz	al

loc_6ED5B546:				; CODE XREF: _ZN20QXmlNamespaceSupportC2Ev+1A8j
		cmp	ecx, 0FFFFFFFCh
		jz	loc_6ED5B4AC
		mov	eax, [ebp+var_10]
		mov	[ecx+4], eax
		lock inc dword ptr [eax]
		setnz	dl
		jmp	loc_6ED5B4AC
_ZN20QXmlNamespaceSupportC2Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5B560	proc near		; DATA XREF: _ZN20QXmlNamespaceSupportC2Ev+23o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-78h]
		mov	edx, [ebp-74h]
		cmp	eax, 1
		mov	[ebp-8Ch], edx
		jz	short loc_6ED5B58B
		cmp	eax, 2
		jz	short loc_6ED5B59D
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560

loc_6ED5B58B:				; CODE XREF: sub_6ED5B560+12j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560

loc_6ED5B59D:				; CODE XREF: sub_6ED5B560+17j
		mov	eax, [ebp-80h]
		mov	dword ptr [ebp-78h], 0
		add	eax, 4
		mov	[esp+0], eax
		call	sub_6ED92880
		mov	eax, [ebp-8Ch]
		mov	edx, [ebp-80h]
		mov	[ebp-88h], eax
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED5B5E9
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5B5E9
		mov	edx, [ebp-80h]
		mov	eax, [edx]
		mov	[esp+0], edx
		mov	dword ptr [ebp-78h], 0
		mov	[esp+arg_0], eax
		call	sub_6ED95900

loc_6ED5B5E9:				; CODE XREF: sub_6ED5B560+65j
					; sub_6ED5B560+6Fj
		mov	eax, [ebp-80h]
		mov	[esp+0], eax
		call	sub_6ED988B0
		mov	edx, [ebp-88h]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED5B560	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 109. _ZN15QXmlInputSource7setDataERK10QByteArray

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN15QXmlInputSource7setDataERK10QByteArray
_ZN15QXmlInputSource7setDataERK10QByteArray proc near ;	DATA XREF: .rdata:6EDA6F74o

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_24], esp
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A4D4
		mov	[ebp+var_28], offset sub_6ED5B6B9
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	edx, [eax+8]
		mov	dword ptr [esp+0Ch], 0
		mov	[ebp+var_50], edx
		mov	edx, [ebp+arg_4]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_0]
		mov	[esp+4], edx
		lea	edx, [ebp+var_C]
		mov	[esp], edx
		mov	eax, [eax+20h]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	eax
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_C]
		mov	[ebp+var_48], 1
		sub	esp, 4
		mov	[esp+4], eax
		mov	[esp], edx
		call	[ebp+var_50]
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5B6AC
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED5B6AC:				; CODE XREF: _ZN15QXmlInputSource7setDataERK10QByteArray+87j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN15QXmlInputSource7setDataERK10QByteArray endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5B6B9	proc near		; DATA XREF: _ZN15QXmlInputSource7setDataERK10QByteArray+23o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-54h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED5B6B9	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 294. _ZN18QXmlParseExceptionC1ERK7QStringiiS2_S2_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN18QXmlParseExceptionC1ERK7QStringiiS2_S2_
_ZN18QXmlParseExceptionC1ERK7QStringiiS2_S2_ proc near ; CODE XREF: sub_6ED60A80+B6p
					; sub_6ED60A80+1E6p

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A512
		mov	[ebp+var_18], offset sub_6ED5B7C5
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 14h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	dword ptr [eax+4], 0FFFFFFFFh
		mov	dword ptr [eax+8], 0FFFFFFFFh
		mov	[eax+0Ch], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	[eax+10h], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		mov	edx, [ebp+arg_4]
		mov	[esp], eax
		mov	[ebp+var_38], 1
		mov	[esp+4], edx
		call	ds:_ZN7QStringaSERKS_
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	edx, [ebp+arg_8]
		mov	[eax+4], edx
		mov	edx, [ebp+arg_C]
		mov	[eax+8], edx
		mov	edx, [ebp+arg_10]
		add	eax, 0Ch
		mov	[esp], eax
		mov	[esp+4], edx
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+arg_14]
		mov	edx, [ebp+arg_0]
		mov	[esp+4], eax
		mov	eax, [edx]
		add	eax, 10h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN18QXmlParseExceptionC1ERK7QStringiiS2_S2_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5B7C5	proc near		; DATA XREF: _ZN18QXmlParseExceptionC1ERK7QStringiiS2_S2_+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	[esp+0], edx
		call	sub_6ED90740
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED5B7C5	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 296. _ZN18QXmlParseExceptionC2ERK7QStringiiS2_S2_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN18QXmlParseExceptionC2ERK7QStringiiS2_S2_
_ZN18QXmlParseExceptionC2ERK7QStringiiS2_S2_ proc near

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A518
		mov	[ebp+var_18], offset sub_6ED5B8D5
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 14h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	dword ptr [eax+4], 0FFFFFFFFh
		mov	dword ptr [eax+8], 0FFFFFFFFh
		mov	[eax+0Ch], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	[eax+10h], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		mov	edx, [ebp+arg_4]
		mov	[esp], eax
		mov	[ebp+var_38], 1
		mov	[esp+4], edx
		call	ds:_ZN7QStringaSERKS_
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	edx, [ebp+arg_8]
		mov	[eax+4], edx
		mov	edx, [ebp+arg_C]
		mov	[eax+8], edx
		mov	edx, [ebp+arg_10]
		add	eax, 0Ch
		mov	[esp], eax
		mov	[esp+4], edx
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+arg_14]
		mov	edx, [ebp+arg_0]
		mov	[esp+4], eax
		mov	eax, [edx]
		add	eax, 10h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN18QXmlParseExceptionC2ERK7QStringiiS2_S2_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5B8D5	proc near		; DATA XREF: _ZN18QXmlParseExceptionC2ERK7QStringiiS2_S2_+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	[esp+0], edx
		call	sub_6ED90740
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED5B8D5	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED5B910	proc near		; CODE XREF: sub_6ED61480+9A5p
					; sub_6ED66E40+689p

var_61		= byte ptr -61h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= byte ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		mov	[ebp+var_60], eax
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset word_6ED9A546
		mov	[ebp+var_38], offset sub_6ED5BB65
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	a?xml ;	"<?xml"
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+var_60]
		mov	dword ptr [esp+8], 1
		mov	[ebp+var_58], 5
		mov	[esp], edx
		mov	[ebp+var_C], eax
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		call	ds:_ZNK7QString10startsWithERKS_N2Qt15CaseSensitivityE
		test	al, al
		mov	[ebp+var_61], 1
		jz	loc_6ED5BA81
		lea	eax, [ebp+var_14]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset a?xmlSVersionSS ; "^<\\?xml\\s+(version\\s*=\\s*((['\"])[-"...
		mov	[esp], eax
		mov	[ebp+var_58], 5
		call	ds:_ZN7QString10fromLatin1EPKci
		sub	esp, 4
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 1
		mov	[esp], eax
		mov	[ebp+var_58], 4
		call	ds:_ZN7QRegExpC1ERK7QStringN2Qt15CaseSensitivityENS_13PatternSyntaxE
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5BAD7

loc_6ED5B9F0:				; CODE XREF: sub_6ED5B910+1DAj
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	byte_6EDA044B
		mov	[ebp+var_58], 3
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	ecx, [ebp+var_60]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_1C]
		mov	[esp+8], eax
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	[ebp+var_58], 2
		call	ds:_ZN7QString7replaceERK7QRegExpRKS_
		mov	eax, [eax]
		mov	[ebp+var_18], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5BAB2
		mov	ecx, [ebp+var_60]
		mov	eax, [ebp+var_18]
		mov	edx, [ecx]
		mov	ecx, [eax+8]
		cmp	ecx, [edx+8]
		jz	loc_6ED5BAF0

loc_6ED5BA5C:				; CODE XREF: sub_6ED5B910+1C3j
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5BB33

loc_6ED5BA6A:				; CODE XREF: sub_6ED5B910+236j
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_58], 5
		call	ds:_ZN7QRegExpD1Ev
		mov	[ebp+var_61], 0

loc_6ED5BA81:				; CODE XREF: sub_6ED5B910+79j
					; sub_6ED5B910+21Ej
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5BAA1
		mov	eax, [ebp+var_C]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED5BAA1:				; CODE XREF: sub_6ED5B910+17Cj
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_61]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED5BAB2:				; CODE XREF: sub_6ED5B910+136j
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_58], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	ecx, [ebp+var_60]
		mov	eax, [ebp+var_18]
		mov	edx, [ecx]
		mov	ecx, [eax+8]
		cmp	ecx, [edx+8]
		jnz	short loc_6ED5BA5C
		jmp	short loc_6ED5BAF0
; ---------------------------------------------------------------------------

loc_6ED5BAD7:				; CODE XREF: sub_6ED5B910+DAj
		mov	eax, [ebp+var_14]
		mov	[ebp+var_58], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5B9F0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5BAF0:				; CODE XREF: sub_6ED5B910+146j
					; sub_6ED5B910+1C5j
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		mov	eax, [ebp+var_60]
		mov	[ebp+var_58], 1
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5BB50

loc_6ED5BB17:				; CODE XREF: sub_6ED5B910+253j
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_58], 5
		call	ds:_ZN7QRegExpD1Ev
		mov	[ebp+var_61], 1
		jmp	loc_6ED5BA81
; ---------------------------------------------------------------------------

loc_6ED5BB33:				; CODE XREF: sub_6ED5B910+154j
		mov	eax, [ebp+var_18]
		mov	[ebp+var_58], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5BA6A
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5BB50:				; CODE XREF: sub_6ED5B910+205j
		mov	eax, [ebp+var_18]
		mov	[ebp+var_58], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED5BB17
sub_6ED5B910	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5BB65	proc near		; DATA XREF: sub_6ED5B910+23o
		add	ebp, 8
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-68h], edx
		jz	short loc_6ED5BBCE
		cmp	eax, 2
		jz	short loc_6ED5BB97
		cmp	eax, 3
		jz	short loc_6ED5BBE2
		cmp	eax, 4
		jz	short loc_6ED5BBAA
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560

loc_6ED5BB97:				; CODE XREF: sub_6ED5BB65+14j
					; sub_6ED5BB65+7Bj
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	ds:_ZN7QRegExpD1Ev

loc_6ED5BBAA:				; CODE XREF: sub_6ED5BB65+1Ej
					; sub_6ED5BB65+8Fj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-68h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED5BBCE:				; CODE XREF: sub_6ED5BB65+Fj
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		jmp	short loc_6ED5BB97
; ---------------------------------------------------------------------------

loc_6ED5BBE2:				; CODE XREF: sub_6ED5BB65+19j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		jmp	short loc_6ED5BBAA
sub_6ED5BB65	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED5BC00	proc near		; CODE XREF: sub_6ED5BDC0+AEp
					; sub_6ED60FB0+42p ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h

		push	ebp
		push	edi
		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 2Ch
		mov	eax, [eax+14h]
		mov	edx, [eax+8]
		test	edx, edx
		mov	[esp+3Ch+var_20], edx
		jz	loc_6ED5BD30
		lea	esi, [ebx+14h]
		jmp	short loc_6ED5BC6B
; ---------------------------------------------------------------------------

loc_6ED5BC20:				; CODE XREF: sub_6ED5BC00+BEj
		mov	edi, [eax]
		cmp	edi, 1
		jz	short loc_6ED5BC3D
		mov	eax, [eax+4]
		mov	[esp+3Ch+var_38], edx
		mov	[esp+3Ch+var_3C], esi
		mov	[esp+3Ch+var_34], eax
		call	sub_6ED96A70
		mov	ecx, [ebx+14h]

loc_6ED5BC3D:				; CODE XREF: sub_6ED5BC00+25j
		mov	eax, [ecx+8]
		mov	[esp+3Ch+var_3C], esi
		lea	eax, [eax+eax*2]
		lea	eax, [ecx+eax*4+10h]
		mov	[esp+3Ch+var_34], eax
		sub	eax, 0Ch
		mov	[esp+3Ch+var_38], eax
		call	sub_6ED966A0
		sub	[esp+3Ch+var_20], 1
		jz	loc_6ED5BD30
		mov	eax, [ebx+14h]
		mov	edx, [eax+8]

loc_6ED5BC6B:				; CODE XREF: sub_6ED5BC00+1Ej
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_6ED5BC8B
		mov	eax, [eax+4]
		mov	[esp+3Ch+var_38], edx
		mov	[esp+3Ch+var_3C], esi
		mov	[esp+3Ch+var_34], eax
		call	sub_6ED96A70
		mov	eax, [ebx+14h]
		mov	edx, [eax+8]

loc_6ED5BC8B:				; CODE XREF: sub_6ED5BC00+70j
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_6ED5BCAB
		mov	eax, [eax+4]
		mov	[esp+3Ch+var_38], edx
		mov	[esp+3Ch+var_3C], esi
		mov	[esp+3Ch+var_34], eax
		call	sub_6ED96A70
		mov	eax, [ebx+14h]
		mov	edx, [eax+8]

loc_6ED5BCAB:				; CODE XREF: sub_6ED5BC00+90j
		mov	ecx, [ebx+14h]
		lea	edi, [edx+edx*2-3]
		lea	edi, [ecx+edi*4]
		mov	ebp, [edi+14h]
		mov	edi, [edi+18h]
		cmp	edi, [ebp+8]
		jz	loc_6ED5BC20
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_6ED5BCE1
		mov	eax, [eax+4]
		mov	[esp+3Ch+var_38], edx
		mov	[esp+3Ch+var_3C], esi
		mov	[esp+3Ch+var_34], eax
		call	sub_6ED96A70
		mov	eax, [ebx+14h]

loc_6ED5BCE1:				; CODE XREF: sub_6ED5BC00+C9j
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED5BCFE
		mov	edx, [eax+4]
		mov	[esp+3Ch+var_34], edx
		mov	eax, [eax+8]
		mov	[esp+3Ch+var_3C], esi
		mov	[esp+3Ch+var_38], eax
		call	sub_6ED96A70

loc_6ED5BCFE:				; CODE XREF: sub_6ED5BC00+E6j
		mov	eax, [ebx+14h]
		mov	edx, [eax+8]
		lea	edx, [edx+edx*2-3]
		lea	eax, [eax+edx*4]
		mov	edx, [eax+18h]
		lea	ecx, [edx+1]
		mov	[eax+18h], ecx
		mov	eax, [eax+14h]
		mov	eax, [eax+0Ch]
		movzx	eax, word ptr [eax+edx*2]
		mov	[ebx+98h], ax
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5BD30:				; CODE XREF: sub_6ED5BC00+15j
					; sub_6ED5BC00+5Fj
		mov	eax, [ebx+94h]
		movzx	esi, word ptr [ebx+98h]
		mov	edx, [eax]
		mov	[esp+3Ch+var_3C], eax
		call	dword ptr [edx+18h]
		cmp	ax, 0FFFEh
		mov	[ebx+98h], ax
		jz	short loc_6ED5BD94

loc_6ED5BD52:				; CODE XREF: sub_6ED5BC00+199j
					; sub_6ED5BC00+1B0j
		cmp	si, 0Ah
		jz	short loc_6ED5BD7F
		cmp	si, 0Dh
		jz	short loc_6ED5BD75

loc_6ED5BD5E:				; CODE XREF: sub_6ED5BC00+17Dj
		mov	eax, [ebx+0A0h]
		add	eax, 1

loc_6ED5BD67:				; CODE XREF: sub_6ED5BC00+192j
		mov	[ebx+0A0h], eax
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED5BD75:				; CODE XREF: sub_6ED5BC00+15Cj
		cmp	word ptr [ebx+98h], 0Ah
		jz	short loc_6ED5BD5E

loc_6ED5BD7F:				; CODE XREF: sub_6ED5BC00+156j
		add	dword ptr [ebx+9Ch], 1
		xor	eax, eax
		mov	dword ptr [ebx+0A0h], 0FFFFFFFFh
		jmp	short loc_6ED5BD67
; ---------------------------------------------------------------------------

loc_6ED5BD94:				; CODE XREF: sub_6ED5BC00+150j
		mov	edi, [ebx+74h]
		test	edi, edi
		jnz	short loc_6ED5BD52
		mov	eax, [ebx+94h]
		mov	edx, [eax]
		mov	[esp+3Ch+var_3C], eax
		call	dword ptr [edx+18h]
		mov	[ebx+98h], ax
		jmp	short loc_6ED5BD52
sub_6ED5BC00	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED5BDC0	proc near		; CODE XREF: sub_6ED5E6A0+5Cp
					; _ZN16QXmlSimpleReader13parseContinueEv+2Dp

var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A55A
		mov	[ebp+var_28], offset sub_6ED5BEC6
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	word ptr [edx+98h], 0FFFEh
		add	edx, 14h
		mov	[ebp+var_C], eax
		mov	[ebp+var_54], edx
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_C]
		mov	[ebp+var_50], eax
		lock inc dword ptr [eax]
		setnz	al
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+14h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5BEA5

loc_6ED5BE2B:				; CODE XREF: sub_6ED5BDC0+101j
		mov	eax, [ebp+var_50]
		mov	edx, [ebp+arg_0]
		mov	[edx+14h], eax
		test	byte ptr [eax+0Ch], 1
		jz	short loc_6ED5BE80

loc_6ED5BE3A:				; CODE XREF: sub_6ED5BDC0+E3j
		mov	eax, [ebp+var_C]
		test	eax, eax
		jz	short loc_6ED5BE64
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5BE64
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	sub_6ED96590

loc_6ED5BE64:				; CODE XREF: sub_6ED5BDC0+7Fj
					; sub_6ED5BDC0+89j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED5BC00
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED5BE80:				; CODE XREF: sub_6ED5BDC0+78j
		mov	edx, [ebp+var_50]
		mov	eax, [edx+4]
		mov	[esp+8], eax
		mov	eax, [edx+8]
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		mov	eax, [ebp+var_54]
		mov	[esp], eax
		call	sub_6ED96A70
		jmp	short loc_6ED5BE3A
; ---------------------------------------------------------------------------

loc_6ED5BEA5:				; CODE XREF: sub_6ED5BDC0+69j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+14h]
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		mov	eax, [ebp+var_54]
		mov	[esp], eax
		call	sub_6ED96590
		jmp	loc_6ED5BE2B
sub_6ED5BDC0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5BEC6	proc near		; DATA XREF: sub_6ED5BDC0+20o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-0Ch]
		mov	edx, [ebp-44h]
		test	eax, eax
		mov	[ebp-58h], edx
		jz	short loc_6ED5BEF9
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5BEF9
		mov	eax, [ebp-0Ch]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+arg_0], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_6ED96590

loc_6ED5BEF9:				; CODE XREF: sub_6ED5BEC6+Ej
					; sub_6ED5BEC6+18j
		mov	eax, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED5BEC6	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 328. _ZN20QXmlNamespaceSupport9setPrefixERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN20QXmlNamespaceSupport9setPrefixERK7QStringS2_
_ZN20QXmlNamespaceSupport9setPrefixERK7QStringS2_ proc near ; CODE XREF: sub_6ED64010+DEp

var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= byte ptr -7Ch
var_78		= dword	ptr -78h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_3C		= byte ptr -3Ch
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 0A4h
		mov	[ebp+var_5C], eax
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		mov	[ebp+var_64], offset sub_6ED997C0
		mov	[ebp+var_60], offset dword_6ED9A560
		mov	[ebp+var_58], offset sub_6ED5C150
		mov	[ebp+var_54], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	eax, ds:_ZN7QString11shared_nullE
		cmp	[edx], eax
		jz	loc_6ED5BFE4
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		mov	[ebp+var_80], eax
		mov	edx, [ebp+var_80]
		add	eax, 4
		mov	[ebp+var_84], eax
		mov	eax, [edx+4]
		mov	eax, [eax+34h]
		cmp	eax, 1
		jz	short loc_6ED5BF87
		mov	ebx, [ebp+var_84]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], ebx
		call	sub_6ED925B0

loc_6ED5BF87:				; CODE XREF: _ZN20QXmlNamespaceSupport9setPrefixERK7QStringS2_+60j
		mov	eax, [ebp+arg_4]
		lea	edx, [ebp+var_3C]
		mov	ebx, [ebp+var_84]
		mov	[esp+4], edx
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	[esp], ebx
		call	sub_6ED981F0
		mov	edx, [ebp+var_80]
		cmp	eax, [edx+4]
		jz	loc_6ED5C0B0
		mov	ebx, [ebp+arg_8]
		sub	eax, 4
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+4], ebx
		call	ds:_ZN7QStringaSERKS_

loc_6ED5BFD0:				; CODE XREF: _ZN20QXmlNamespaceSupport9setPrefixERK7QStringS2_+17Ej
					; _ZN20QXmlNamespaceSupport9setPrefixERK7QStringS2_+197j ...
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 0A4h
		pop	ebx
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED5BFE4:				; CODE XREF: _ZN20QXmlNamespaceSupport9setPrefixERK7QStringS2_+3Dj
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	byte_6EDA044B
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	ebx, [ebp+arg_0]
		mov	ebx, [ebx]
		mov	[ebp+var_C], eax
		mov	[ebp+var_88], ebx
		mov	edx, [ebp+var_88]
		add	ebx, 4
		mov	[ebp+var_8C], ebx
		mov	eax, [edx+4]
		mov	eax, [eax+34h]
		cmp	eax, 1
		jz	short loc_6ED5C037
		mov	[esp], ebx
		mov	[ebp+var_78], 1
		call	sub_6ED925B0

loc_6ED5C037:				; CODE XREF: _ZN20QXmlNamespaceSupport9setPrefixERK7QStringS2_+116j
		mov	ebx, [ebp+var_8C]
		lea	eax, [ebp+var_C]
		mov	[esp+8], eax
		lea	eax, [ebp+var_3C]
		mov	[esp+4], eax
		mov	[ebp+var_78], 1
		mov	[esp], ebx
		call	sub_6ED981F0
		mov	edx, [ebp+var_88]
		cmp	eax, [edx+4]
		jz	loc_6ED5C101
		mov	edx, [ebp+arg_8]
		sub	eax, 4
		mov	[esp], eax
		mov	[ebp+var_78], 1
		mov	[esp+4], edx
		call	ds:_ZN7QStringaSERKS_

loc_6ED5C083:				; CODE XREF: _ZN20QXmlNamespaceSupport9setPrefixERK7QStringS2_+227j
					; _ZN20QXmlNamespaceSupport9setPrefixERK7QStringS2_+23Bj
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED5BFD0
		mov	eax, [ebp+var_C]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5BFD0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5C0B0:				; CODE XREF: _ZN20QXmlNamespaceSupport9setPrefixERK7QStringS2_+A0j
		lea	ebx, [ebp+var_3C]
		mov	dword ptr [esp+0Ch], 4
		mov	dword ptr [esp+8], 8
		mov	[esp+4], ebx
		mov	[esp], eax
		call	ds:_ZN8QMapData11node_createEPPNS_4NodeEii
		mov	ecx, eax
		sub	ecx, 8
		jz	short loc_6ED5C0E5
		mov	ebx, [ebp+arg_4]
		mov	edx, [ebx]
		mov	[eax-8], edx
		lock inc dword ptr [edx]
		setnz	al

loc_6ED5C0E5:				; CODE XREF: _ZN20QXmlNamespaceSupport9setPrefixERK7QStringS2_+1C5j
		cmp	ecx, 0FFFFFFFCh
		jz	loc_6ED5BFD0
		mov	edx, [ebp+arg_8]
		mov	eax, [edx]
		mov	[ecx+4], eax
		lock inc dword ptr [eax]
		setnz	dl
		jmp	loc_6ED5BFD0
; ---------------------------------------------------------------------------

loc_6ED5C101:				; CODE XREF: _ZN20QXmlNamespaceSupport9setPrefixERK7QStringS2_+153j
		lea	edx, [ebp+var_3C]
		mov	dword ptr [esp+0Ch], 4
		mov	dword ptr [esp+8], 8
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN8QMapData11node_createEPPNS_4NodeEii
		mov	ecx, eax
		sub	ecx, 8
		jz	short loc_6ED5C134
		mov	edx, [ebp+var_C]
		mov	[eax-8], edx
		lock inc dword ptr [edx]
		setnz	al

loc_6ED5C134:				; CODE XREF: _ZN20QXmlNamespaceSupport9setPrefixERK7QStringS2_+216j
		cmp	ecx, 0FFFFFFFCh
		jz	loc_6ED5C083
		mov	ebx, [ebp+arg_8]
		mov	eax, [ebx]
		mov	[ecx+4], eax
		lock inc dword ptr [eax]
		setnz	dl
		jmp	loc_6ED5C083
_ZN20QXmlNamespaceSupport9setPrefixERK7QStringS2_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5C150	proc near		; DATA XREF: _ZN20QXmlNamespaceSupport9setPrefixERK7QStringS2_+24o
		add	ebp, 8
		mov	ebx, [ebp-74h]
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560
		mov	[esp+0], ebx
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED5C150	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 104. _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb
_ZN15QXmlInputSource11fromRawDataERK10QByteArrayb proc near ; DATA XREF: .rdata:6EDA6F88o

var_C9		= byte ptr -0C9h
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_A9		= byte ptr -0A9h
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_8D		= byte ptr -8Dh
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= byte ptr -7Ch
var_78		= dword	ptr -78h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= byte ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= byte ptr  14h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 0DCh
		movzx	eax, [ebp+arg_C]
		lea	edx, [ebp+var_18]
		mov	[ebp+var_64], offset sub_6ED997C0
		mov	[ebp+var_60], offset dword_6ED9A580
		mov	[ebp+var_8D], al
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		mov	[ebp+var_5C], edx
		mov	[ebp+var_58], offset sub_6ED5C972
		mov	[ebp+var_54], esp
		call	_Unwind_SjLj_Register
		mov	ecx, [ebp+arg_8]
		mov	eax, [ecx]
		mov	eax, [eax+8]
		test	eax, eax
		jz	loc_6ED5C737
		cmp	[ebp+var_8D], 0
		jz	short loc_6ED5C216
		mov	ecx, [ebp+arg_4]
		mov	eax, [ecx+4]
		mov	edx, [eax+1Ch]
		test	edx, edx
		mov	[ebp+var_A0], edx
		jz	short loc_6ED5C20F
		mov	[esp], edx
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZN12QTextDecoderD1Ev
		mov	ecx, [ebp+var_A0]
		mov	[esp], ecx
		call	sub_6ED988B0
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+4]

loc_6ED5C20F:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+69j
		mov	dword ptr [eax+1Ch], 0

loc_6ED5C216:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+56j
		mov	ecx, [ebp+arg_4]
		mov	[ebp+var_A4], 6Ah
		mov	edx, [ecx+4]
		mov	eax, [edx+1Ch]
		test	eax, eax
		jz	loc_6ED5C7C0

loc_6ED5C231:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+6EDj
		mov	ecx, [ebp+arg_8]
		mov	edx, [ecx]
		mov	ecx, [edx+8]
		mov	[esp+0Ch], ecx
		mov	edx, [edx+0Ch]
		mov	[esp+4], eax
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+8], edx
		call	ds:_ZN12QTextDecoder9toUnicodeEPKci
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+4]
		sub	esp, 4
		cmp	byte ptr [eax+28h], 0
		jz	loc_6ED5C536
		lea	ecx, [ebp+var_1C]
		add	eax, 24h
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	[ebp+var_78], 7
		call	ds:_ZN7QString6appendERKS_
		mov	eax, [ebp+arg_4]
		mov	eax, [eax+4]
		mov	[ebp+var_98], eax
		mov	edx, [ebp+var_98]
		add	eax, 24h
		mov	[ebp+var_8C], eax
		mov	eax, [edx+24h]
		mov	eax, [eax+8]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset a?xml	; "<?xml"
		mov	[ebp+var_9C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	ds:_ZN7QString10fromLatin1EPKci
		mov	ecx, [ebp+var_9C]
		sub	esp, 4
		lea	eax, [ebp+var_30]
		lea	edx, [ebp+var_3C]
		mov	[esp+4], edx
		mov	[esp+8], ecx
		mov	[esp], eax
		mov	[ebp+var_78], 3
		call	ds:_ZNK7QString4leftEi
		sub	esp, 4
		mov	eax, [ebp+var_3C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5C790

loc_6ED5C306:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+623j
		mov	edi, [ebp+var_9C]
		test	edi, edi
		jle	loc_6ED5C585
		lea	eax, [ebp+var_30]
		mov	[esp+4], eax
		mov	eax, [ebp+var_8C]
		mov	dword ptr [esp+8], 1
		mov	[ebp+var_78], 2
		mov	[esp], eax
		call	ds:_ZNK7QString10startsWithERKS_N2Qt15CaseSensitivityE
		test	al, al
		jnz	loc_6ED5C585

loc_6ED5C341:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+47Bj
					; _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+484j ...
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_20], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ebp+var_A9], 0

loc_6ED5C356:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+592j
					; _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+5B2j ...
		mov	eax, [ebp+var_30]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5C774

loc_6ED5C367:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+607j
		mov	eax, [ebp+var_20]
		mov	esi, [eax+8]
		test	esi, esi
		jz	loc_6ED5C4E6
		lea	eax, [ebp+var_24]
		lea	edx, [ebp+var_20]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_78], 6
		call	ds:_ZNK7QString8toLatin1Ev
		sub	esp, 4
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		mov	[ebp+var_78], 5
		call	ds:_ZN10QTextCodec12codecForNameERK10QByteArray
		mov	[ebp+var_A8], eax
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5C7A8

loc_6ED5C3BC:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+63Bj
		mov	ebx, [ebp+var_A8]
		test	ebx, ebx
		jz	loc_6ED5C4E6
		mov	edx, [ebp+var_A8]
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+8]
		mov	[ebp+var_78], 6
		call	eax
		cmp	[ebp+var_A4], eax
		jz	loc_6ED5C4E6
		mov	ecx, [ebp+arg_4]
		mov	ecx, [ecx+4]
		mov	eax, [ecx+1Ch]
		mov	[ebp+var_B0], ecx
		test	eax, eax
		mov	[ebp+var_B4], eax
		jz	short loc_6ED5C429
		mov	[esp], eax
		call	ds:_ZN12QTextDecoderD1Ev
		mov	edx, [ebp+var_B4]
		mov	[esp], edx
		call	sub_6ED988B0
		mov	ecx, [ebp+arg_4]
		mov	ecx, [ecx+4]
		mov	[ebp+var_B0], ecx

loc_6ED5C429:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+284j
		mov	eax, [ebp+var_A8]
		mov	[ebp+var_78], 6
		mov	[esp], eax
		call	ds:_ZNK10QTextCodec11makeDecoderEv
		mov	edx, [ebp+var_B0]
		mov	[edx+1Ch], eax
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		call	sub_6ED94460
		mov	ecx, [ebp+arg_4]
		mov	eax, [ecx+4]
		lea	ecx, [ebp+var_28]
		mov	edx, [eax+20h]
		mov	ebx, [edx+8]
		mov	[esp+0Ch], ebx
		mov	edx, [edx+0Ch]
		mov	[esp+8], edx
		mov	eax, [eax+1Ch]
		mov	[esp], ecx
		mov	[esp+4], eax
		call	ds:_ZN12QTextDecoder9toUnicodeEPKci
		sub	esp, 4
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		call	sub_6ED94560
		mov	edx, [ebp+arg_8]
		mov	eax, [edx]
		lea	edx, [ebp+var_2C]
		mov	ecx, [eax+8]
		mov	[esp+0Ch], ecx
		mov	ecx, [ebp+arg_4]
		mov	eax, [eax+0Ch]
		mov	[esp+8], eax
		mov	eax, [ecx+4]
		mov	eax, [eax+1Ch]
		mov	[esp], edx
		mov	[esp+4], eax
		call	ds:_ZN12QTextDecoder9toUnicodeEPKci
		sub	esp, 4
		lea	eax, [ebp+var_2C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_78], 4
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp+var_2C]
		mov	[esp], eax
		mov	[ebp+var_78], 6
		call	sub_6ED94560

loc_6ED5C4E6:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+1EFj
					; _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+244j ...
		mov	eax, [ebp+arg_8]
		mov	edx, [ebp+arg_4]
		mov	[esp+4], eax
		mov	eax, [edx+4]
		mov	[ebp+var_78], 6
		add	eax, 20h
		mov	[esp], eax
		call	ds:_ZN10QByteArray6appendERKS_
		mov	ecx, [ebp+arg_4]
		movzx	edx, [ebp+var_A9]
		mov	eax, [ecx+4]
		mov	[eax+28h], dl
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5C536
		mov	eax, [ebp+var_20]
		mov	[ebp+var_78], 7
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED5C536:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+E8j
					; _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+3A1j
		mov	eax, [ebp+var_1C]
		mov	ecx, [ebp+arg_0]
		mov	[ecx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5C570

loc_6ED5C551:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+403j
					; _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+5C7j
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5C570:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+3CFj
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED5C551
; ---------------------------------------------------------------------------

loc_6ED5C585:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+18Ej
					; _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+1BBj
		mov	edx, [ebp+var_8C]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0
		mov	word ptr [esp+4], 3Eh
		mov	[esp], edx
		mov	[ebp+var_78], 2
		call	ds:_ZNK7QString7indexOfE5QChariN2Qt15CaseSensitivityE
		cmp	eax, 0FFFFFFFFh
		mov	[ebp+var_94], eax
		jz	loc_6ED5C750
		mov	edx, [ebp+var_8C]
		lea	eax, [ebp+var_38]
		mov	[ebp+var_38], offset aEncoding ; "encoding"
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_78], 2
		call	ds:_ZNK7QString7indexOfERK13QLatin1StringiN2Qt15CaseSensitivityE
		cmp	[ebp+var_94], eax
		jle	loc_6ED5C341
		cmp	eax, 0FFFFFFFFh
		jz	loc_6ED5C341
		mov	edx, [ebp+var_98]
		mov	ebx, [ebp+var_94]
		mov	ecx, [edx+24h]
		lea	edx, [eax+eax]
		add	edx, [ecx+0Ch]
		nop

loc_6ED5C620:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+4B7j
		movzx	ecx, word ptr [edx]
		cmp	cx, 22h
		jz	short loc_6ED5C63F
		cmp	cx, 27h
		jz	short loc_6ED5C63F
		add	eax, 1
		add	edx, 2
		cmp	ebx, eax
		jg	short loc_6ED5C620
		jz	loc_6ED5C341

loc_6ED5C63F:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+4A7j
					; _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+4ADj
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_34], edx
		lock inc dword ptr [edx]
		setnz	cl
		lea	ecx, [eax+1]
		cmp	[ebp+var_94], ecx
		mov	[ebp+var_84], ecx
		jle	loc_6ED5C6F4
		mov	ecx, [ebp+var_98]
		mov	edx, [ecx+24h]
		mov	ecx, [ebp+var_84]
		mov	edx, [edx+0Ch]
		movzx	edx, word ptr [edx+ecx*2]
		cmp	dx, 27h
		jz	short loc_6ED5C6F4
		cmp	dx, 22h
		jz	short loc_6ED5C6F4
		lea	eax, [eax+eax+4]
		mov	[ebp+var_88], eax
		mov	eax, ds:_ZN7QString6appendE5QChar
		mov	[ebp+var_80], eax
		jmp	short loc_6ED5C6CA
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5C6A0:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+572j
		mov	edx, [ebp+var_8C]
		mov	ecx, [ebp+var_88]
		mov	eax, [edx]
		mov	eax, [eax+0Ch]
		movzx	edx, word ptr [eax+ecx]
		add	ecx, 2
		mov	[ebp+var_88], ecx
		cmp	dx, 22h
		jz	short loc_6ED5C6F4
		cmp	dx, 27h
		jz	short loc_6ED5C6F4

loc_6ED5C6CA:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+517j
		lea	eax, [ebp+var_34]
		mov	[esp+4], dx
		mov	[esp], eax
		mov	[ebp+var_78], 1
		call	[ebp+var_80]
		add	[ebp+var_84], 1
		mov	edx, [ebp+var_84]
		cmp	[ebp+var_94], edx
		jg	short loc_6ED5C6A0

loc_6ED5C6F4:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+4DDj
					; _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+4FDj ...
		mov	eax, [ebp+var_34]
		mov	[ebp+var_20], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+var_34]
		lock dec dword ptr [edx]
		setnz	al
		test	al, al
		mov	[ebp+var_A9], 0
		jnz	loc_6ED5C356
		mov	eax, [ebp+var_34]
		mov	[ebp+var_78], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_A9], 0
		jmp	loc_6ED5C356
; ---------------------------------------------------------------------------

loc_6ED5C737:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+49j
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		jmp	loc_6ED5C551
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5C750:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+43Bj
		mov	eax, ds:_ZN7QString11shared_nullE
		cmp	[ebp+var_9C], 0FEh
		mov	[ebp+var_20], eax
		setle	[ebp+var_A9]
		lock inc dword ptr [eax]
		setnz	dl
		jmp	loc_6ED5C356
; ---------------------------------------------------------------------------

loc_6ED5C774:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+1E1j
		mov	eax, [ebp+var_30]
		mov	[ebp+var_78], 7
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5C367
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5C790:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+180j
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_78], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5C306
; ---------------------------------------------------------------------------

loc_6ED5C7A8:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+236j
		mov	eax, [ebp+var_24]
		mov	[ebp+var_78], 6
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	loc_6ED5C3BC
; ---------------------------------------------------------------------------

loc_6ED5C7C0:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+ABj
		add	edx, 20h
		mov	[esp], edx
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZN10QByteArray5clearEv
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+4]
		add	eax, 24h
		mov	[esp], eax
		call	sub_6ED94460
		mov	ecx, [ebp+arg_4]
		mov	edx, [ebp+arg_8]
		mov	eax, [ecx+4]
		mov	byte ptr [eax+28h], 1
		mov	eax, [edx]
		mov	edx, [eax+8]
		cmp	edx, 3
		jg	short loc_6ED5C872
		cmp	edx, 1
		mov	[ebp+var_A4], 6Ah
		jle	short loc_6ED5C830

loc_6ED5C80A:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+77Aj
					; _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+784j ...
		mov	eax, [eax+0Ch]
		movzx	edx, byte ptr [eax]
		movzx	eax, byte ptr [eax+1]
		cmp	al, 0FFh
		jnz	loc_6ED5C926
		cmp	dl, 0FEh
		jnz	loc_6ED5C926

loc_6ED5C825:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+7B0j
		mov	[ebp+var_A4], 3F7h
		nop

loc_6ED5C830:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+688j
					; _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+745j ...
		mov	eax, [ebp+var_A4]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN10QTextCodec11codecForMibEi
		mov	edx, [ebp+arg_4]
		mov	edx, [edx+4]
		mov	[esp], eax
		mov	[ebp+var_B8], edx
		call	ds:_ZNK10QTextCodec11makeDecoderEv
		mov	ecx, [ebp+var_B8]
		mov	edx, [ebp+arg_4]
		mov	[ecx+1Ch], eax
		mov	eax, [edx+4]
		mov	eax, [eax+1Ch]
		jmp	loc_6ED5C231
; ---------------------------------------------------------------------------

loc_6ED5C872:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+679j
		mov	edx, [eax+0Ch]
		movzx	ebx, byte ptr [edx]
		movzx	ecx, byte ptr [edx+1]
		movzx	esi, byte ptr [edx+2]
		movzx	edx, byte ptr [edx+3]
		mov	[ebp+var_C9], dl
		mov	edx, ecx
		or	dl, bl
		mov	edi, edx
		jnz	short loc_6ED5C8A2
		mov	edx, esi
		cmp	dl, 0FEh
		jnz	short loc_6ED5C8A2
		cmp	[ebp+var_C9], 0FFh
		jz	short loc_6ED5C8BB

loc_6ED5C8A2:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+710j
					; _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+717j
		cmp	cl, 0FEh
		jnz	short loc_6ED5C8D0
		cmp	bl, 0FFh
		jnz	short loc_6ED5C8D0
		cmp	[ebp+var_C9], 0
		jnz	short loc_6ED5C8D0
		mov	edx, esi
		test	dl, dl
		jnz	short loc_6ED5C8D0

loc_6ED5C8BB:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+720j
		mov	[ebp+var_A4], 3F9h
		jmp	loc_6ED5C830
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5C8D0:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+725j
					; _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+72Aj ...
		test	cl, cl
		jnz	short loc_6ED5C8F6
		cmp	bl, 3Ch
		jnz	short loc_6ED5C8F6
		cmp	[ebp+var_C9], 0
		jnz	short loc_6ED5C8F6
		mov	ecx, esi
		test	cl, cl
		mov	[ebp+var_A4], 3FBh
		jz	loc_6ED5C830

loc_6ED5C8F6:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+752j
					; _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+757j ...
		mov	edx, edi
		test	dl, dl
		jnz	loc_6ED5C80A
		mov	ecx, esi
		test	cl, cl
		jnz	loc_6ED5C80A
		cmp	[ebp+var_C9], 3Ch
		mov	[ebp+var_A4], 3FAh
		jz	loc_6ED5C830
		jmp	loc_6ED5C80A
; ---------------------------------------------------------------------------

loc_6ED5C926:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+696j
					; _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+69Fj
		cmp	al, 0FEh
		jnz	short loc_6ED5C936
		cmp	dl, 0FFh
		lea	esi, [esi+0]
		jz	loc_6ED5C825

loc_6ED5C936:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+7A8j
		test	al, al
		jnz	short loc_6ED5C94D
		cmp	dl, 3Ch
		mov	[ebp+var_A4], 3F6h
		jz	loc_6ED5C830

loc_6ED5C94D:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+7B8j
		cmp	al, 3Ch
		jnz	short loc_6ED5C963
		test	dl, dl
		mov	[ebp+var_A4], 3F5h
		jz	loc_6ED5C830

loc_6ED5C963:				; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+7CFj
		mov	[ebp+var_A4], 6Ah
		jmp	loc_6ED5C830
_ZN15QXmlInputSource11fromRawDataERK10QByteArrayb endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5C972	proc near		; DATA XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+30o
		add	ebp, 18h
		mov	eax, [ebp-78h]
		mov	ecx, [ebp-74h]
		cmp	eax, 1
		mov	[ebp-0BCh], ecx
		jz	short loc_6ED5C9BE
		cmp	eax, 2
		jz	loc_6ED5CA32
		cmp	eax, 3
		jz	loc_6ED5CA1D
		cmp	eax, 4
		nop
		lea	esi, [esi+0]
		jz	short loc_6ED5C9F7
		cmp	eax, 5
		jz	short loc_6ED5CA09
		cmp	eax, 6
		jz	short loc_6ED5C9D0
		lea	eax, [ebp-34h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560

loc_6ED5C9BE:				; CODE XREF: sub_6ED5C972+12j
		lea	eax, [ebp-30h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560

loc_6ED5C9D0:				; CODE XREF: sub_6ED5C972+38j
					; sub_6ED5C972+A9j ...
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560
		mov	eax, [ebp-0BCh]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED5C9F7:				; CODE XREF: sub_6ED5C972+2Ej
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED90150

loc_6ED5CA09:				; CODE XREF: sub_6ED5C972+33j
					; sub_6ED5C972+BEj
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560
		jmp	short loc_6ED5C9D0
; ---------------------------------------------------------------------------

loc_6ED5CA1D:				; CODE XREF: sub_6ED5C972+20j
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560
		nop
		jmp	short loc_6ED5CA09
; ---------------------------------------------------------------------------

loc_6ED5CA32:				; CODE XREF: sub_6ED5C972+17j
		lea	eax, [ebp-3Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560
		jmp	short loc_6ED5C9D0
sub_6ED5C972	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 515. _ZNK20QXmlNamespaceSupport3uriERK7QString

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZNK20QXmlNamespaceSupport3uriERK7QString
_ZNK20QXmlNamespaceSupport3uriERK7QString proc near
					; CODE XREF: _ZNK20QXmlNamespaceSupport11processNameERK7QStringbRS0_S3_+15Ap

var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= byte ptr -7Ch
var_78		= dword	ptr -78h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_3C		= byte ptr -3Ch
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0A8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_5C], eax
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		mov	[ebp+var_64], offset sub_6ED997C0
		mov	[ebp+var_60], offset word_6ED9A592
		mov	[ebp+var_58], offset sub_6ED5CBAA
		mov	[ebp+var_54], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		mov	[ebp+var_80], eax
		mov	edx, [ebp+var_80]
		add	eax, 4
		mov	[ebp+var_84], eax
		mov	eax, [edx+4]
		mov	eax, [eax+34h]
		cmp	eax, 1
		jz	short loc_6ED5CAB6
		mov	ecx, [ebp+var_84]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED925B0

loc_6ED5CAB6:				; CODE XREF: _ZNK20QXmlNamespaceSupport3uriERK7QString+4Fj
		mov	eax, [ebp+arg_8]
		lea	edx, [ebp+var_3C]
		mov	ecx, [ebp+var_84]
		mov	[esp+4], edx
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	[esp], ecx
		call	sub_6ED981F0
		mov	edx, [ebp+var_80]
		cmp	eax, [edx+4]
		jz	short loc_6ED5CB10
		sub	eax, 8
		mov	[ebp+var_88], eax

loc_6ED5CAEA:				; CODE XREF: _ZNK20QXmlNamespaceSupport3uriERK7QString+13Cj
					; _ZNK20QXmlNamespaceSupport3uriERK7QString+155j
		mov	edx, [ebp+var_88]
		mov	ecx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	[ecx], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------

loc_6ED5CB10:				; CODE XREF: _ZNK20QXmlNamespaceSupport3uriERK7QString+8Fj
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+var_80]
		lea	ecx, [ebp+var_3C]
		mov	dword ptr [esp+0Ch], 4
		mov	dword ptr [esp+8], 8
		mov	[esp+4], ecx
		mov	eax, [edx+4]
		mov	[ebp+var_78], 1
		mov	[esp], eax
		call	ds:_ZN8QMapData11node_createEPPNS_4NodeEii
		mov	ecx, eax
		sub	ecx, 8
		mov	[ebp+var_88], ecx
		jz	short loc_6ED5CB66
		mov	ecx, [ebp+arg_8]
		mov	edx, [ecx]
		mov	[eax-8], edx
		lock inc dword ptr [edx]
		setnz	al

loc_6ED5CB66:				; CODE XREF: _ZNK20QXmlNamespaceSupport3uriERK7QString+106j
		cmp	[ebp+var_88], 0FFFFFFFCh
		jz	short loc_6ED5CB81
		mov	eax, [ebp+var_C]
		mov	edx, [ebp+var_88]
		mov	[edx+4], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED5CB81:				; CODE XREF: _ZNK20QXmlNamespaceSupport3uriERK7QString+11Dj
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED5CAEA
		mov	eax, [ebp+var_C]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5CAEA
_ZNK20QXmlNamespaceSupport3uriERK7QString endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5CBAA	proc near		; DATA XREF: _ZNK20QXmlNamespaceSupport3uriERK7QString+23o
		add	ebp, 8
		mov	ecx, [ebp-74h]
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	[ebp-8Ch], ecx
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560
		mov	eax, [ebp-8Ch]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED5CBAA	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 117. _ZN15QXmlInputSourceD0Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN15QXmlInputSourceD0Ev
_ZN15QXmlInputSourceD0Ev proc near	; DATA XREF: .rdata:6EDA6F6Co

var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A598
		mov	[ebp+var_18], offset sub_6ED5CCF3
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	dword ptr [edx], offset	off_6EDA6F68
		mov	edx, [eax+1Ch]
		mov	[ebp+var_40], eax
		test	edx, edx
		mov	[ebp+var_44], edx
		jz	short loc_6ED5CC4C
		mov	[esp], edx
		mov	[ebp+var_38], 0FFFFFFFFh
		call	ds:_ZN12QTextDecoderD1Ev
		mov	eax, [ebp+var_44]
		mov	[esp], eax
		call	sub_6ED988B0
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+4]
		mov	[ebp+var_40], edx

loc_6ED5CC4C:				; CODE XREF: _ZN15QXmlInputSourceD0Ev+46j
		mov	edx, [ebp+var_40]
		test	edx, edx
		jz	short loc_6ED5CC8E
		mov	edx, [ebp+var_40]
		mov	eax, [edx+24h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5CCD8

loc_6ED5CC63:				; CODE XREF: _ZN15QXmlInputSourceD0Ev+10Ej
		mov	edx, [ebp+var_40]
		mov	eax, [edx+20h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5CCC0

loc_6ED5CC73:				; CODE XREF: _ZN15QXmlInputSourceD0Ev+F6j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5CCA6

loc_6ED5CC83:				; CODE XREF: _ZN15QXmlInputSourceD0Ev+DCj
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED988B0

loc_6ED5CC8E:				; CODE XREF: _ZN15QXmlInputSourceD0Ev+71j
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		call	sub_6ED988B0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED5CCA6:				; CODE XREF: _ZN15QXmlInputSourceD0Ev+A1j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+8]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED5CC83
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5CCC0:				; CODE XREF: _ZN15QXmlInputSourceD0Ev+91j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+20h]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	short loc_6ED5CC73
; ---------------------------------------------------------------------------

loc_6ED5CCD8:				; CODE XREF: _ZN15QXmlInputSourceD0Ev+81j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+24h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5CC63
_ZN15QXmlInputSourceD0Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5CCF3	proc near		; DATA XREF: _ZN15QXmlInputSourceD0Ev+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-48h], eax
		jz	short loc_6ED5CD17
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 20h
		mov	[esp+0], eax
		call	sub_6ED90150

loc_6ED5CD17:				; CODE XREF: sub_6ED5CCF3+Dj
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED5CCF3	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 118. _ZN15QXmlInputSourceD1Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN15QXmlInputSourceD1Ev
_ZN15QXmlInputSourceD1Ev proc near	; CODE XREF: _ZN12QDomDocument10setContentEP9QIODevicebP7QStringPiS4_+A0p
					; sub_6ED50F18+1Cp ...

var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A5A0
		mov	[ebp+var_18], offset sub_6ED5CE4B
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	dword ptr [edx], offset	off_6EDA6F68
		mov	edx, [eax+1Ch]
		mov	[ebp+var_40], eax
		test	edx, edx
		mov	[ebp+var_44], edx
		jz	short loc_6ED5CDAC
		mov	[esp], edx
		mov	[ebp+var_38], 0FFFFFFFFh
		call	ds:_ZN12QTextDecoderD1Ev
		mov	eax, [ebp+var_44]
		mov	[esp], eax
		call	sub_6ED988B0
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+4]
		mov	[ebp+var_40], edx

loc_6ED5CDAC:				; CODE XREF: _ZN15QXmlInputSourceD1Ev+46j
		mov	ecx, [ebp+var_40]
		test	ecx, ecx
		jz	short loc_6ED5CDEE
		mov	edx, [ebp+var_40]
		mov	eax, [edx+24h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5CE30

loc_6ED5CDC3:				; CODE XREF: _ZN15QXmlInputSourceD1Ev+106j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+20h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5CE18

loc_6ED5CDD3:				; CODE XREF: _ZN15QXmlInputSourceD1Ev+EEj
		mov	edx, [ebp+var_40]
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5CE00

loc_6ED5CDE3:				; CODE XREF: _ZN15QXmlInputSourceD1Ev+D6j
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED988B0

loc_6ED5CDEE:				; CODE XREF: _ZN15QXmlInputSourceD1Ev+71j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5CE00:				; CODE XREF: _ZN15QXmlInputSourceD1Ev+A1j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+8]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED5CDE3
; ---------------------------------------------------------------------------

loc_6ED5CE18:				; CODE XREF: _ZN15QXmlInputSourceD1Ev+91j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+20h]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	short loc_6ED5CDD3
; ---------------------------------------------------------------------------

loc_6ED5CE30:				; CODE XREF: _ZN15QXmlInputSourceD1Ev+81j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+24h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5CDC3
_ZN15QXmlInputSourceD1Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5CE4B	proc near		; DATA XREF: _ZN15QXmlInputSourceD1Ev+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-48h], eax
		jz	short loc_6ED5CE6F
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 20h
		mov	[esp+0], eax
		call	sub_6ED90150

loc_6ED5CE6F:				; CODE XREF: sub_6ED5CE4B+Dj
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED5CE4B	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 119. _ZN15QXmlInputSourceD2Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN15QXmlInputSourceD2Ev
_ZN15QXmlInputSourceD2Ev proc near

var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A5A8
		mov	[ebp+var_18], offset sub_6ED5CFAB
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	dword ptr [edx], offset	off_6EDA6F68
		mov	edx, [eax+1Ch]
		mov	[ebp+var_40], eax
		test	edx, edx
		mov	[ebp+var_44], edx
		jz	short loc_6ED5CF0C
		mov	[esp], edx
		mov	[ebp+var_38], 0FFFFFFFFh
		call	ds:_ZN12QTextDecoderD1Ev
		mov	eax, [ebp+var_44]
		mov	[esp], eax
		call	sub_6ED988B0
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+4]
		mov	[ebp+var_40], edx

loc_6ED5CF0C:				; CODE XREF: _ZN15QXmlInputSourceD2Ev+46j
		mov	eax, [ebp+var_40]
		test	eax, eax
		jz	short loc_6ED5CF4E
		mov	edx, [ebp+var_40]
		mov	eax, [edx+24h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5CF90

loc_6ED5CF23:				; CODE XREF: _ZN15QXmlInputSourceD2Ev+106j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+20h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5CF78

loc_6ED5CF33:				; CODE XREF: _ZN15QXmlInputSourceD2Ev+EEj
		mov	edx, [ebp+var_40]
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5CF60

loc_6ED5CF43:				; CODE XREF: _ZN15QXmlInputSourceD2Ev+D6j
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED988B0

loc_6ED5CF4E:				; CODE XREF: _ZN15QXmlInputSourceD2Ev+71j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5CF60:				; CODE XREF: _ZN15QXmlInputSourceD2Ev+A1j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+8]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED5CF43
; ---------------------------------------------------------------------------

loc_6ED5CF78:				; CODE XREF: _ZN15QXmlInputSourceD2Ev+91j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+20h]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	short loc_6ED5CF33
; ---------------------------------------------------------------------------

loc_6ED5CF90:				; CODE XREF: _ZN15QXmlInputSourceD2Ev+81j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+24h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5CF23
_ZN15QXmlInputSourceD2Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5CFAB	proc near		; DATA XREF: _ZN15QXmlInputSourceD2Ev+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-48h], eax
		jz	short loc_6ED5CFCF
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 20h
		mov	[esp+0], eax
		call	sub_6ED90150

loc_6ED5CFCF:				; CODE XREF: sub_6ED5CFAB+Dj
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED5CFAB	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  96. _ZN14QXmlAttributes5clearEv

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN14QXmlAttributes5clearEv
_ZN14QXmlAttributes5clearEv proc near	; CODE XREF: sub_6ED6B5F0+33Dp

var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A5D0
		mov	[ebp+var_28], offset sub_6ED5D0F1
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, ds:_ZN9QListData11shared_nullE
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	edx, [ebp+var_C]
		cmp	eax, edx
		mov	[ebp+var_50], edx
		jz	short loc_6ED5D07E
		mov	eax, [ebp+arg_0]
		add	eax, 4
		mov	[ebp+var_54], eax
		lock inc dword ptr [edx]
		setnz	al
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5D0D0

loc_6ED5D06C:				; CODE XREF: _ZN14QXmlAttributes5clearEv+ECj
		mov	eax, [ebp+var_50]
		mov	edx, [ebp+arg_0]
		mov	[edx+4], eax
		test	byte ptr [eax+10h], 1
		jz	short loc_6ED5D0B0

loc_6ED5D07B:				; CODE XREF: _ZN14QXmlAttributes5clearEv+CCj
		mov	eax, [ebp+var_C]

loc_6ED5D07E:				; CODE XREF: _ZN14QXmlAttributes5clearEv+4Bj
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5D0A1
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	sub_6ED93870

loc_6ED5D0A1:				; CODE XREF: _ZN14QXmlAttributes5clearEv+86j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5D0B0:				; CODE XREF: _ZN14QXmlAttributes5clearEv+79j
		mov	edx, [ebp+var_50]
		mov	eax, [edx+4]
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		mov	eax, [ebp+var_54]
		mov	[esp], eax
		call	sub_6ED93680
		jmp	short loc_6ED5D07B
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5D0D0:				; CODE XREF: _ZN14QXmlAttributes5clearEv+6Aj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		mov	eax, [ebp+var_54]
		mov	[esp], eax
		call	sub_6ED93870
		jmp	loc_6ED5D06C
_ZN14QXmlAttributes5clearEv endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5D0F1	proc near		; DATA XREF: _ZN14QXmlAttributes5clearEv+20o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	edx, [ebp-44h]
		mov	eax, [ebp-0Ch]
		mov	[ebp-58h], edx
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5D120
		mov	eax, [ebp-0Ch]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+arg_0], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_6ED93870

loc_6ED5D120:				; CODE XREF: sub_6ED5D0F1+14j
		mov	eax, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED5D0F1	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED5D140	proc near		; CODE XREF: _ZN16QXmlSimpleReaderD2Ev+4Cp
					; _ZN16QXmlSimpleReaderD0Ev+4Cp ...

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A600
		mov	[ebp+var_18], offset sub_6ED5D773
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+74h]
		test	edx, edx
		mov	[ebp+var_40], edx
		jz	short loc_6ED5D19B
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED5D190
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5D427

loc_6ED5D190:				; CODE XREF: sub_6ED5D140+40j
					; sub_6ED5D140+2FFj
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED988B0

loc_6ED5D19B:				; CODE XREF: sub_6ED5D140+3Aj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+6D4h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5D444

loc_6ED5D1B3:				; CODE XREF: sub_6ED5D140+325j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+6D0h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5D536

loc_6ED5D1CB:				; CODE XREF: sub_6ED5D140+417j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+6CCh]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5D510

loc_6ED5D1E3:				; CODE XREF: sub_6ED5D140+3F1j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+6C8h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5D5C0

loc_6ED5D1FA:				; CODE XREF: sub_6ED5D140+499j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+6BCh]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5D5A0

loc_6ED5D211:				; CODE XREF: sub_6ED5D140+479j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4B0h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5D580

loc_6ED5D228:				; CODE XREF: sub_6ED5D140+459j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+2A4h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5D560

loc_6ED5D23F:				; CODE XREF: sub_6ED5D140+439j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+70h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5D6A0

loc_6ED5D253:				; CODE XREF: sub_6ED5D140+576j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+5Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5D683

loc_6ED5D267:				; CODE XREF: sub_6ED5D140+559j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0Bh
		add	eax, 58h
		mov	[esp], eax
		call	_ZN20QXmlNamespaceSupportD1Ev
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+54h]
		test	eax, eax
		jz	short loc_6ED5D297
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 0Ch
		call	eax

loc_6ED5D297:				; CODE XREF: sub_6ED5D140+144j
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+54h], 0
		mov	dword ptr [eax+44h], offset off_6EDA6D80
		mov	eax, [eax+48h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5D660

loc_6ED5D2B9:				; CODE XREF: sub_6ED5D140+53Ej
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+3Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5D640

loc_6ED5D2CD:				; CODE XREF: sub_6ED5D140+516j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+38h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5D620

loc_6ED5D2E1:				; CODE XREF: sub_6ED5D140+4F6j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+34h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5D600

loc_6ED5D2F5:				; CODE XREF: sub_6ED5D140+4D6j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+30h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5D5E0

loc_6ED5D309:				; CODE XREF: sub_6ED5D140+4B6j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+2Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5D4F0

loc_6ED5D31D:				; CODE XREF: sub_6ED5D140+3C6j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+28h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5D4D0

loc_6ED5D331:				; CODE XREF: sub_6ED5D140+3A6j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+20h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5D4B0

loc_6ED5D345:				; CODE XREF: sub_6ED5D140+386j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+1Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5D490

loc_6ED5D359:				; CODE XREF: sub_6ED5D140+366j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+18h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5D470

loc_6ED5D36D:				; CODE XREF: sub_6ED5D140+346j
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_0]
		mov	eax, [edx+14h]
		add	ecx, 14h
		test	eax, eax
		jz	short loc_6ED5D38B
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5D6C0

loc_6ED5D38B:				; CODE XREF: sub_6ED5D140+23Bj
					; sub_6ED5D140+599j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+10h]
		test	eax, eax
		jz	short loc_6ED5D3A4
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5D703

loc_6ED5D3A4:				; CODE XREF: sub_6ED5D140+253j
					; sub_6ED5D140+5E1j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		test	eax, eax
		jz	short loc_6ED5D3BD
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5D6E0

loc_6ED5D3BD:				; CODE XREF: sub_6ED5D140+26Cj
					; sub_6ED5D140+5BEj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		test	eax, eax
		jz	short loc_6ED5D3D6
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5D750

loc_6ED5D3D6:				; CODE XREF: sub_6ED5D140+285j
					; sub_6ED5D140+62Ej
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		test	eax, eax
		jz	short loc_6ED5D3EF
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5D726

loc_6ED5D3EF:				; CODE XREF: sub_6ED5D140+29Ej
					; sub_6ED5D140+604j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED5D41A
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5D41A
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[esp], edx
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_6ED95E00

loc_6ED5D41A:				; CODE XREF: sub_6ED5D140+2B6j
					; sub_6ED5D140+2C0j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED5D427:				; CODE XREF: sub_6ED5D140+4Aj
		mov	edx, [ebp+var_40]
		mov	eax, [edx]
		mov	[esp], edx
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		call	sub_6ED963E0
		jmp	loc_6ED5D190
; ---------------------------------------------------------------------------

loc_6ED5D444:				; CODE XREF: sub_6ED5D140+6Dj
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED932E0
		mov	eax, [edx+6D4h]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_6ED5D1B3
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5D470:				; CODE XREF: sub_6ED5D140+227j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+18h]
		mov	[ebp+var_38], 16h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5D36D
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5D490:				; CODE XREF: sub_6ED5D140+213j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+1Ch]
		mov	[ebp+var_38], 15h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5D359
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5D4B0:				; CODE XREF: sub_6ED5D140+1FFj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+20h]
		mov	[ebp+var_38], 14h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5D345
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5D4D0:				; CODE XREF: sub_6ED5D140+1EBj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+28h]
		mov	[ebp+var_38], 13h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5D331
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5D4F0:				; CODE XREF: sub_6ED5D140+1D7j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+2Ch]
		mov	[ebp+var_38], 12h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5D31D
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5D510:				; CODE XREF: sub_6ED5D140+9Dj
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED932E0
		mov	eax, [edx+6CCh]
		mov	[ebp+var_38], 4
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_6ED5D1E3
; ---------------------------------------------------------------------------

loc_6ED5D536:				; CODE XREF: sub_6ED5D140+85j
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED930B0
		mov	eax, [edx+6D0h]
		mov	[ebp+var_38], 3
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_6ED5D1CB
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5D560:				; CODE XREF: sub_6ED5D140+F9j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+2A4h]
		mov	[ebp+var_38], 8
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5D23F
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5D580:				; CODE XREF: sub_6ED5D140+E2j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4B0h]
		mov	[ebp+var_38], 7
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5D228
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5D5A0:				; CODE XREF: sub_6ED5D140+CBj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+6BCh]
		mov	[ebp+var_38], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5D211
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5D5C0:				; CODE XREF: sub_6ED5D140+B4j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+6C8h]
		mov	[ebp+var_38], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5D1FA
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5D5E0:				; CODE XREF: sub_6ED5D140+1C3j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+30h]
		mov	[ebp+var_38], 11h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5D309
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5D600:				; CODE XREF: sub_6ED5D140+1AFj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+34h]
		mov	[ebp+var_38], 10h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5D2F5
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5D620:				; CODE XREF: sub_6ED5D140+19Bj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+38h]
		mov	[ebp+var_38], 0Fh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5D2E1
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5D640:				; CODE XREF: sub_6ED5D140+187j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+3Ch]
		mov	[ebp+var_38], 0Eh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5D2CD
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5D660:				; CODE XREF: sub_6ED5D140+173j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+48h]
		mov	[ebp+var_38], 0Dh
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 48h
		mov	[esp], eax
		call	sub_6ED93870
		jmp	loc_6ED5D2B9
; ---------------------------------------------------------------------------

loc_6ED5D683:				; CODE XREF: sub_6ED5D140+121j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+5Ch]
		mov	[ebp+var_38], 0Ah
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5D267
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5D6A0:				; CODE XREF: sub_6ED5D140+10Dj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+70h]
		mov	[ebp+var_38], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5D253
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5D6C0:				; CODE XREF: sub_6ED5D140+245j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+14h]
		mov	[esp], ecx
		mov	[ebp+var_38], 17h
		mov	[esp+4], eax
		call	sub_6ED96590
		jmp	loc_6ED5D38B
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5D6E0:				; CODE XREF: sub_6ED5D140+277j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		mov	[ebp+var_38], 19h
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 0Ch
		mov	[esp], eax
		call	sub_6ED92100
		jmp	loc_6ED5D3BD
; ---------------------------------------------------------------------------

loc_6ED5D703:				; CODE XREF: sub_6ED5D140+25Ej
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+10h]
		mov	[ebp+var_38], 18h
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 10h
		mov	[esp], eax
		call	sub_6ED92800
		jmp	loc_6ED5D3A4
; ---------------------------------------------------------------------------

loc_6ED5D726:				; CODE XREF: sub_6ED5D140+2A9j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	[ebp+var_38], 1Bh
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 4
		mov	[esp], eax
		call	sub_6ED92450
		jmp	loc_6ED5D3EF
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5D750:				; CODE XREF: sub_6ED5D140+290j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		mov	[ebp+var_38], 1Ah
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 8
		mov	[esp], eax
		call	sub_6ED92800
		jmp	loc_6ED5D3D6
sub_6ED5D140	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5D773	proc near		; DATA XREF: sub_6ED5D140+1Do
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-48h], edx
		jz	loc_6ED5D8A6
		cmp	eax, 2
		jz	loc_6ED5D8BD
		cmp	eax, 3
		jz	loc_6ED5D8D4
		cmp	eax, 4
		lea	esi, [esi+0]
		jz	loc_6ED5D8EB
		cmp	eax, 5
		jz	loc_6ED5D902
		cmp	eax, 6
		jz	loc_6ED5D919
		cmp	eax, 7
		nop
		lea	esi, [esi+0]
		jz	loc_6ED5D930
		cmp	eax, 8
		jz	loc_6ED5D945
		cmp	eax, 9
		jz	loc_6ED5D95A
		cmp	eax, 0Ah
		nop
		lea	esi, [esi+0]
		jz	loc_6ED5D96F
		cmp	eax, 0Bh
		jz	loc_6ED5D9A0
		cmp	eax, 0Ch
		jz	loc_6ED5D9B5
		cmp	eax, 0Dh
		nop
		lea	esi, [esi+0]
		jz	loc_6ED5D9CA
		cmp	eax, 0Eh
		jz	loc_6ED5D9DF
		cmp	eax, 0Fh
		jz	loc_6ED5D9F4
		cmp	eax, 10h
		nop
		lea	esi, [esi+0]
		jz	loc_6ED5DA09
		cmp	eax, 11h
		jz	loc_6ED5DA1E
		cmp	eax, 12h
		jz	loc_6ED5DA33
		cmp	eax, 13h
		nop
		lea	esi, [esi+0]
		jz	loc_6ED5DA48
		cmp	eax, 14h
		jz	loc_6ED5DA5D
		cmp	eax, 15h
		jz	loc_6ED5DA72
		cmp	eax, 16h
		nop
		lea	esi, [esi+0]
		jz	loc_6ED5DA87
		cmp	eax, 17h
		jz	loc_6ED5DA9C
		cmp	eax, 18h
		jz	loc_6ED5DAB1
		cmp	eax, 19h
		nop
		lea	esi, [esi+0]
		jz	loc_6ED5DAC6
		cmp	eax, 1Ah
		jz	loc_6ED5DADB
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 6D4h
		mov	[esp+0], eax
		call	sub_6ED933B0

loc_6ED5D8A6:				; CODE XREF: sub_6ED5D773+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 6D0h
		mov	[esp+0], eax
		call	sub_6ED932B0

loc_6ED5D8BD:				; CODE XREF: sub_6ED5D773+18j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 6CCh
		mov	[esp+0], eax
		call	sub_6ED933B0

loc_6ED5D8D4:				; CODE XREF: sub_6ED5D773+21j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 6C8h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED5D8EB:				; CODE XREF: sub_6ED5D773+2Dj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 6BCh
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED5D902:				; CODE XREF: sub_6ED5D773+36j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 4B0h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED5D919:				; CODE XREF: sub_6ED5D773+3Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 2A4h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED5D930:				; CODE XREF: sub_6ED5D773+4Dj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 70h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED5D945:				; CODE XREF: sub_6ED5D773+56j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 5Ch
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED5D95A:				; CODE XREF: sub_6ED5D773+5Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 58h
		mov	[esp+0], eax
		call	_ZN20QXmlNamespaceSupportD1Ev

loc_6ED5D96F:				; CODE XREF: sub_6ED5D773+6Dj
		mov	eax, [ebp-48h]
		mov	edx, [ebp+8]
		mov	[ebp-44h], eax
		mov	eax, [edx+54h]
		test	eax, eax
		jz	short loc_6ED5D990
		mov	edx, [eax]
		mov	[esp+0], eax
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 0
		call	eax

loc_6ED5D990:				; CODE XREF: sub_6ED5D773+20Aj
		mov	eax, [ebp+8]
		mov	edx, [ebp-44h]
		mov	dword ptr [eax+54h], 0
		mov	[ebp-48h], edx

loc_6ED5D9A0:				; CODE XREF: sub_6ED5D773+76j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 44h
		mov	[esp+0], eax
		call	_ZN14QXmlAttributesD1Ev

loc_6ED5D9B5:				; CODE XREF: sub_6ED5D773+7Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 3Ch
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED5D9CA:				; CODE XREF: sub_6ED5D773+8Dj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 38h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED5D9DF:				; CODE XREF: sub_6ED5D773+96j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 34h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED5D9F4:				; CODE XREF: sub_6ED5D773+9Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 30h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED5DA09:				; CODE XREF: sub_6ED5D773+ADj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 2Ch
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED5DA1E:				; CODE XREF: sub_6ED5D773+B6j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 28h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED5DA33:				; CODE XREF: sub_6ED5D773+BFj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 20h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED5DA48:				; CODE XREF: sub_6ED5D773+CDj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 1Ch
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED5DA5D:				; CODE XREF: sub_6ED5D773+D6j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 18h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED5DA72:				; CODE XREF: sub_6ED5D773+DFj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 14h
		mov	[esp+0], eax
		call	sub_6ED94430

loc_6ED5DA87:				; CODE XREF: sub_6ED5D773+EDj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 10h
		mov	[esp+0], eax
		call	sub_6ED92880

loc_6ED5DA9C:				; CODE XREF: sub_6ED5D773+F6j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED92280

loc_6ED5DAB1:				; CODE XREF: sub_6ED5D773+FFj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp+0], eax
		call	sub_6ED92880

loc_6ED5DAC6:				; CODE XREF: sub_6ED5D773+10Dj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 4
		mov	[esp+0], eax
		call	sub_6ED92580

loc_6ED5DADB:				; CODE XREF: sub_6ED5D773+116j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED942E0
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED5D773	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 165. _ZN16QXmlSimpleReaderD2Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlSimpleReaderD2Ev
_ZN16QXmlSimpleReaderD2Ev proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A63A
		mov	[ebp+var_18], offset sub_6ED5DB79
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	dword ptr [edx], offset	off_6EDA6FC8
		test	eax, eax
		mov	[ebp+var_40], eax
		jz	short loc_6ED5DB5C
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	sub_6ED5D140
		mov	edx, [ebp+var_40]
		mov	[esp], edx
		call	sub_6ED988B0

loc_6ED5DB5C:				; CODE XREF: _ZN16QXmlSimpleReaderD2Ev+40j
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax], offset	off_6EDA6BC8
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlSimpleReaderD2Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5DB79	proc near		; DATA XREF: _ZN16QXmlSimpleReaderD2Ev+20o
		add	ebp, 8
		mov	edx, [ebp+8]
		mov	eax, [ebp-34h]
		mov	dword ptr [edx], offset	off_6EDA6BC8
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED5DB79	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 163. _ZN16QXmlSimpleReaderD0Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlSimpleReaderD0Ev
_ZN16QXmlSimpleReaderD0Ev proc near	; DATA XREF: .rdata:6EDA6FCCo

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A640
		mov	[ebp+var_18], offset sub_6ED5DC21
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	dword ptr [edx], offset	off_6EDA6FC8
		test	eax, eax
		mov	[ebp+var_40], eax
		jz	short loc_6ED5DBFC
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	sub_6ED5D140
		mov	edx, [ebp+var_40]
		mov	[esp], edx
		call	sub_6ED988B0

loc_6ED5DBFC:				; CODE XREF: _ZN16QXmlSimpleReaderD0Ev+40j
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax], offset	off_6EDA6BC8
		mov	[esp], eax
		call	sub_6ED988B0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlSimpleReaderD0Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5DC21	proc near		; DATA XREF: _ZN16QXmlSimpleReaderD0Ev+20o
		add	ebp, 8
		mov	edx, [ebp+8]
		mov	eax, [ebp-34h]
		mov	dword ptr [edx], offset	off_6EDA6BC8
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED5DC21	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 164. _ZN16QXmlSimpleReaderD1Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlSimpleReaderD1Ev
_ZN16QXmlSimpleReaderD1Ev proc near	; CODE XREF: sub_6ED50D50+99p
					; sub_6ED50DFF+16p ...

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A646
		mov	[ebp+var_18], offset sub_6ED5DCB9
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	dword ptr [edx], offset	off_6EDA6FC8
		test	eax, eax
		mov	[ebp+var_40], eax
		jz	short loc_6ED5DC9C
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	sub_6ED5D140
		mov	edx, [ebp+var_40]
		mov	[esp], edx
		call	sub_6ED988B0

loc_6ED5DC9C:				; CODE XREF: _ZN16QXmlSimpleReaderD1Ev+40j
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax], offset	off_6EDA6BC8
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlSimpleReaderD1Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5DCB9	proc near		; DATA XREF: _ZN16QXmlSimpleReaderD1Ev+20o
		add	ebp, 8
		mov	edx, [ebp+8]
		mov	eax, [ebp-34h]
		mov	dword ptr [edx], offset	off_6EDA6BC8
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED5DCB9	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	dword ptr [ebp-24h], offset sub_6ED997C0
		mov	dword ptr [ebp-20h], offset dword_6ED9A64C
		mov	dword ptr [ebp-18h], offset loc_6ED5E313
		mov	[ebp-14h], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+8]
		mov	edx, [edx+74h]
		test	edx, edx
		mov	[ebp-40h], edx
		jz	short loc_6ED5DD3B
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED5DD30
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5DFC7

loc_6ED5DD30:				; CODE XREF: .text:6ED5DD20j
					; .text:6ED5DFDFj
		mov	eax, [ebp-40h]
		mov	[esp], eax
		call	sub_6ED988B0

loc_6ED5DD3B:				; CODE XREF: .text:6ED5DD1Aj
		mov	edx, [ebp+8]
		mov	eax, [edx+6D4h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5DFE4

loc_6ED5DD53:				; CODE XREF: .text:6ED5E005j
		mov	edx, [ebp+8]
		mov	eax, [edx+6D0h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5E0D6

loc_6ED5DD6B:				; CODE XREF: .text:6ED5E0F7j
		mov	edx, [ebp+8]
		mov	eax, [edx+6CCh]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5E0B0

loc_6ED5DD83:				; CODE XREF: .text:6ED5E0D1j
		mov	edx, [ebp+8]
		mov	eax, [edx+6C8h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5E160

loc_6ED5DD9A:				; CODE XREF: .text:6ED5E179j
		mov	edx, [ebp+8]
		mov	eax, [edx+6BCh]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5E140

loc_6ED5DDB1:				; CODE XREF: .text:6ED5E159j
		mov	edx, [ebp+8]
		mov	eax, [edx+4B0h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5E120

loc_6ED5DDC8:				; CODE XREF: .text:6ED5E139j
		mov	edx, [ebp+8]
		mov	eax, [edx+2A4h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5E100

loc_6ED5DDDF:				; CODE XREF: .text:6ED5E119j
		mov	edx, [ebp+8]
		mov	eax, [edx+70h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5E240

loc_6ED5DDF3:				; CODE XREF: .text:6ED5E256j
		mov	edx, [ebp+8]
		mov	eax, [edx+5Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5E223

loc_6ED5DE07:				; CODE XREF: .text:6ED5E239j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0Bh
		add	eax, 58h
		mov	[esp], eax
		call	_ZN20QXmlNamespaceSupportD1Ev
		mov	edx, [ebp+8]
		mov	eax, [edx+54h]
		test	eax, eax
		jz	short loc_6ED5DE37
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 0Ch
		call	eax

loc_6ED5DE37:				; CODE XREF: .text:6ED5DE24j
		mov	eax, [ebp+8]
		mov	dword ptr [eax+54h], 0
		mov	dword ptr [eax+44h], offset off_6EDA6D80
		mov	eax, [eax+48h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5E200

loc_6ED5DE59:				; CODE XREF: .text:6ED5E21Ej
		mov	edx, [ebp+8]
		mov	eax, [edx+3Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5E1E0

loc_6ED5DE6D:				; CODE XREF: .text:6ED5E1F6j
		mov	edx, [ebp+8]
		mov	eax, [edx+38h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5E1C0

loc_6ED5DE81:				; CODE XREF: .text:6ED5E1D6j
		mov	edx, [ebp+8]
		mov	eax, [edx+34h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5E1A0

loc_6ED5DE95:				; CODE XREF: .text:6ED5E1B6j
		mov	edx, [ebp+8]
		mov	eax, [edx+30h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5E180

loc_6ED5DEA9:				; CODE XREF: .text:6ED5E196j
		mov	edx, [ebp+8]
		mov	eax, [edx+2Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5E090

loc_6ED5DEBD:				; CODE XREF: .text:6ED5E0A6j
		mov	edx, [ebp+8]
		mov	eax, [edx+28h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5E070

loc_6ED5DED1:				; CODE XREF: .text:6ED5E086j
		mov	edx, [ebp+8]
		mov	eax, [edx+20h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5E050

loc_6ED5DEE5:				; CODE XREF: .text:6ED5E066j
		mov	edx, [ebp+8]
		mov	eax, [edx+1Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5E030

loc_6ED5DEF9:				; CODE XREF: .text:6ED5E046j
		mov	edx, [ebp+8]
		mov	eax, [edx+18h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5E010

loc_6ED5DF0D:				; CODE XREF: .text:6ED5E026j
		mov	edx, [ebp+8]
		mov	ecx, [ebp+8]
		mov	eax, [edx+14h]
		add	ecx, 14h
		test	eax, eax
		jz	short loc_6ED5DF2B
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5E260

loc_6ED5DF2B:				; CODE XREF: .text:6ED5DF1Bj
					; .text:6ED5E279j
		mov	edx, [ebp+8]
		mov	eax, [edx+10h]
		test	eax, eax
		jz	short loc_6ED5DF44
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5E2A3

loc_6ED5DF44:				; CODE XREF: .text:6ED5DF33j
					; .text:6ED5E2C1j
		mov	edx, [ebp+8]
		mov	eax, [edx+0Ch]
		test	eax, eax
		jz	short loc_6ED5DF5D
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5E280

loc_6ED5DF5D:				; CODE XREF: .text:6ED5DF4Cj
					; .text:6ED5E29Ej
		mov	edx, [ebp+8]
		mov	eax, [edx+8]
		test	eax, eax
		jz	short loc_6ED5DF76
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5E2F0

loc_6ED5DF76:				; CODE XREF: .text:6ED5DF65j
					; .text:6ED5E30Ej
		mov	edx, [ebp+8]
		mov	eax, [edx+4]
		test	eax, eax
		jz	short loc_6ED5DF8F
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5E2C6

loc_6ED5DF8F:				; CODE XREF: .text:6ED5DF7Ej
					; .text:6ED5E2E4j
		mov	edx, [ebp+8]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED5DFBA
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5DFBA
		mov	edx, [ebp+8]
		mov	eax, [edx]
		mov	[esp], edx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_6ED95E00

loc_6ED5DFBA:				; CODE XREF: .text:6ED5DF96j
					; .text:6ED5DFA0j
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED5DFC7:				; CODE XREF: .text:6ED5DD2Aj
		mov	edx, [ebp-40h]
		mov	eax, [edx]
		mov	[esp], edx
		mov	dword ptr [ebp-38h], 1
		mov	[esp+4], eax
		call	sub_6ED963E0
		jmp	loc_6ED5DD30
; ---------------------------------------------------------------------------

loc_6ED5DFE4:				; CODE XREF: .text:6ED5DD4Dj
		mov	edx, [ebp+8]
		mov	dword ptr [esp+4], offset sub_6ED932E0
		mov	eax, [edx+6D4h]
		mov	dword ptr [ebp-38h], 2
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_6ED5DD53
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5E010:				; CODE XREF: .text:6ED5DF07j
		mov	edx, [ebp+8]
		mov	eax, [edx+18h]
		mov	dword ptr [ebp-38h], 16h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5DF0D
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5E030:				; CODE XREF: .text:6ED5DEF3j
		mov	edx, [ebp+8]
		mov	eax, [edx+1Ch]
		mov	dword ptr [ebp-38h], 15h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5DEF9
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5E050:				; CODE XREF: .text:6ED5DEDFj
		mov	edx, [ebp+8]
		mov	eax, [edx+20h]
		mov	dword ptr [ebp-38h], 14h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5DEE5
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5E070:				; CODE XREF: .text:6ED5DECBj
		mov	edx, [ebp+8]
		mov	eax, [edx+28h]
		mov	dword ptr [ebp-38h], 13h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5DED1
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5E090:				; CODE XREF: .text:6ED5DEB7j
		mov	edx, [ebp+8]
		mov	eax, [edx+2Ch]
		mov	dword ptr [ebp-38h], 12h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5DEBD
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5E0B0:				; CODE XREF: .text:6ED5DD7Dj
		mov	edx, [ebp+8]
		mov	dword ptr [esp+4], offset sub_6ED932E0
		mov	eax, [edx+6CCh]
		mov	dword ptr [ebp-38h], 4
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_6ED5DD83
; ---------------------------------------------------------------------------

loc_6ED5E0D6:				; CODE XREF: .text:6ED5DD65j
		mov	edx, [ebp+8]
		mov	dword ptr [esp+4], offset sub_6ED930B0
		mov	eax, [edx+6D0h]
		mov	dword ptr [ebp-38h], 3
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_6ED5DD6B
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5E100:				; CODE XREF: .text:6ED5DDD9j
		mov	edx, [ebp+8]
		mov	eax, [edx+2A4h]
		mov	dword ptr [ebp-38h], 8
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5DDDF
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5E120:				; CODE XREF: .text:6ED5DDC2j
		mov	edx, [ebp+8]
		mov	eax, [edx+4B0h]
		mov	dword ptr [ebp-38h], 7
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5DDC8
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5E140:				; CODE XREF: .text:6ED5DDABj
		mov	edx, [ebp+8]
		mov	eax, [edx+6BCh]
		mov	dword ptr [ebp-38h], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5DDB1
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5E160:				; CODE XREF: .text:6ED5DD94j
		mov	edx, [ebp+8]
		mov	eax, [edx+6C8h]
		mov	dword ptr [ebp-38h], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5DD9A
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5E180:				; CODE XREF: .text:6ED5DEA3j
		mov	edx, [ebp+8]
		mov	eax, [edx+30h]
		mov	dword ptr [ebp-38h], 11h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5DEA9
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5E1A0:				; CODE XREF: .text:6ED5DE8Fj
		mov	edx, [ebp+8]
		mov	eax, [edx+34h]
		mov	dword ptr [ebp-38h], 10h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5DE95
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5E1C0:				; CODE XREF: .text:6ED5DE7Bj
		mov	edx, [ebp+8]
		mov	eax, [edx+38h]
		mov	dword ptr [ebp-38h], 0Fh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5DE81
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5E1E0:				; CODE XREF: .text:6ED5DE67j
		mov	edx, [ebp+8]
		mov	eax, [edx+3Ch]
		mov	dword ptr [ebp-38h], 0Eh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5DE6D
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5E200:				; CODE XREF: .text:6ED5DE53j
		mov	edx, [ebp+8]
		mov	eax, [edx+48h]
		mov	dword ptr [ebp-38h], 0Dh
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 48h
		mov	[esp], eax
		call	sub_6ED93870
		jmp	loc_6ED5DE59
; ---------------------------------------------------------------------------

loc_6ED5E223:				; CODE XREF: .text:6ED5DE01j
		mov	edx, [ebp+8]
		mov	eax, [edx+5Ch]
		mov	dword ptr [ebp-38h], 0Ah
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5DE07
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5E240:				; CODE XREF: .text:6ED5DDEDj
		mov	edx, [ebp+8]
		mov	eax, [edx+70h]
		mov	dword ptr [ebp-38h], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5DDF3
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5E260:				; CODE XREF: .text:6ED5DF25j
		mov	edx, [ebp+8]
		mov	eax, [edx+14h]
		mov	[esp], ecx
		mov	dword ptr [ebp-38h], 17h
		mov	[esp+4], eax
		call	sub_6ED96590
		jmp	loc_6ED5DF2B
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5E280:				; CODE XREF: .text:6ED5DF57j
		mov	edx, [ebp+8]
		mov	eax, [edx+0Ch]
		mov	dword ptr [ebp-38h], 19h
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 0Ch
		mov	[esp], eax
		call	sub_6ED92100
		jmp	loc_6ED5DF5D
; ---------------------------------------------------------------------------

loc_6ED5E2A3:				; CODE XREF: .text:6ED5DF3Ej
		mov	edx, [ebp+8]
		mov	eax, [edx+10h]
		mov	dword ptr [ebp-38h], 18h
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 10h
		mov	[esp], eax
		call	sub_6ED92800
		jmp	loc_6ED5DF44
; ---------------------------------------------------------------------------

loc_6ED5E2C6:				; CODE XREF: .text:6ED5DF89j
		mov	edx, [ebp+8]
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 1Bh
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 4
		mov	[esp], eax
		call	sub_6ED92450
		jmp	loc_6ED5DF8F
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5E2F0:				; CODE XREF: .text:6ED5DF70j
		mov	edx, [ebp+8]
		mov	eax, [edx+8]
		mov	dword ptr [ebp-38h], 1Ah
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 8
		mov	[esp], eax
		call	sub_6ED92800
		jmp	loc_6ED5DF76
; ---------------------------------------------------------------------------

loc_6ED5E313:				; DATA XREF: .text:6ED5DCFDo
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-48h], edx
		jz	loc_6ED5E446
		cmp	eax, 2
		jz	loc_6ED5E45D
		cmp	eax, 3
		jz	loc_6ED5E474
		cmp	eax, 4
		lea	esi, [esi+0]
		jz	loc_6ED5E48B
		cmp	eax, 5
		jz	loc_6ED5E4A2
		cmp	eax, 6
		jz	loc_6ED5E4B9
		cmp	eax, 7
		nop
		lea	esi, [esi+0]
		jz	loc_6ED5E4D0
		cmp	eax, 8
		jz	loc_6ED5E4E5
		cmp	eax, 9
		jz	loc_6ED5E4FA
		cmp	eax, 0Ah
		nop
		lea	esi, [esi+0]
		jz	loc_6ED5E50F
		cmp	eax, 0Bh
		jz	loc_6ED5E540
		cmp	eax, 0Ch
		jz	loc_6ED5E555
		cmp	eax, 0Dh
		nop
		lea	esi, [esi+0]
		jz	loc_6ED5E56A
		cmp	eax, 0Eh
		jz	loc_6ED5E57F
		cmp	eax, 0Fh
		jz	loc_6ED5E594
		cmp	eax, 10h
		nop
		lea	esi, [esi+0]
		jz	loc_6ED5E5A9
		cmp	eax, 11h
		jz	loc_6ED5E5BE
		cmp	eax, 12h
		jz	loc_6ED5E5D3
		cmp	eax, 13h
		nop
		lea	esi, [esi+0]
		jz	loc_6ED5E5E8
		cmp	eax, 14h
		jz	loc_6ED5E5FD
		cmp	eax, 15h
		jz	loc_6ED5E612
		cmp	eax, 16h
		nop
		lea	esi, [esi+0]
		jz	loc_6ED5E627
		cmp	eax, 17h
		jz	loc_6ED5E63C
		cmp	eax, 18h
		jz	loc_6ED5E651
		cmp	eax, 19h
		nop
		lea	esi, [esi+0]
		jz	loc_6ED5E666
		cmp	eax, 1Ah
		jz	loc_6ED5E67B
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 6D4h
		mov	[esp], eax
		call	sub_6ED933B0

loc_6ED5E446:				; CODE XREF: .text:6ED5E322j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 6D0h
		mov	[esp], eax
		call	sub_6ED932B0

loc_6ED5E45D:				; CODE XREF: .text:6ED5E32Bj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 6CCh
		mov	[esp], eax
		call	sub_6ED933B0

loc_6ED5E474:				; CODE XREF: .text:6ED5E334j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 6C8h
		mov	[esp], eax
		call	sub_6ED94560

loc_6ED5E48B:				; CODE XREF: .text:6ED5E340j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 6BCh
		mov	[esp], eax
		call	sub_6ED94560

loc_6ED5E4A2:				; CODE XREF: .text:6ED5E349j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 4B0h
		mov	[esp], eax
		call	sub_6ED94560

loc_6ED5E4B9:				; CODE XREF: .text:6ED5E352j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 2A4h
		mov	[esp], eax
		call	sub_6ED94560

loc_6ED5E4D0:				; CODE XREF: .text:6ED5E360j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 70h
		mov	[esp], eax
		call	sub_6ED94560

loc_6ED5E4E5:				; CODE XREF: .text:6ED5E369j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 5Ch
		mov	[esp], eax
		call	sub_6ED94560

loc_6ED5E4FA:				; CODE XREF: .text:6ED5E372j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 58h
		mov	[esp], eax
		call	_ZN20QXmlNamespaceSupportD1Ev

loc_6ED5E50F:				; CODE XREF: .text:6ED5E380j
		mov	eax, [ebp-48h]
		mov	edx, [ebp+8]
		mov	[ebp-44h], eax
		mov	eax, [edx+54h]
		test	eax, eax
		jz	short loc_6ED5E530
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 0
		call	eax

loc_6ED5E530:				; CODE XREF: .text:6ED5E51Dj
		mov	eax, [ebp+8]
		mov	edx, [ebp-44h]
		mov	dword ptr [eax+54h], 0
		mov	[ebp-48h], edx

loc_6ED5E540:				; CODE XREF: .text:6ED5E389j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 44h
		mov	[esp], eax
		call	_ZN14QXmlAttributesD1Ev

loc_6ED5E555:				; CODE XREF: .text:6ED5E392j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 3Ch
		mov	[esp], eax
		call	sub_6ED94560

loc_6ED5E56A:				; CODE XREF: .text:6ED5E3A0j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 38h
		mov	[esp], eax
		call	sub_6ED94560

loc_6ED5E57F:				; CODE XREF: .text:6ED5E3A9j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 34h
		mov	[esp], eax
		call	sub_6ED94560

loc_6ED5E594:				; CODE XREF: .text:6ED5E3B2j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 30h
		mov	[esp], eax
		call	sub_6ED94560

loc_6ED5E5A9:				; CODE XREF: .text:6ED5E3C0j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 2Ch
		mov	[esp], eax
		call	sub_6ED94560

loc_6ED5E5BE:				; CODE XREF: .text:6ED5E3C9j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 28h
		mov	[esp], eax
		call	sub_6ED94560

loc_6ED5E5D3:				; CODE XREF: .text:6ED5E3D2j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 20h
		mov	[esp], eax
		call	sub_6ED94560

loc_6ED5E5E8:				; CODE XREF: .text:6ED5E3E0j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 1Ch
		mov	[esp], eax
		call	sub_6ED94560

loc_6ED5E5FD:				; CODE XREF: .text:6ED5E3E9j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 18h
		mov	[esp], eax
		call	sub_6ED94560

loc_6ED5E612:				; CODE XREF: .text:6ED5E3F2j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 14h
		mov	[esp], eax
		call	sub_6ED94430

loc_6ED5E627:				; CODE XREF: .text:6ED5E400j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 10h
		mov	[esp], eax
		call	sub_6ED92880

loc_6ED5E63C:				; CODE XREF: .text:6ED5E409j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp], eax
		call	sub_6ED92280

loc_6ED5E651:				; CODE XREF: .text:6ED5E412j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp], eax
		call	sub_6ED92880

loc_6ED5E666:				; CODE XREF: .text:6ED5E420j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 4
		mov	[esp], eax
		call	sub_6ED92580

loc_6ED5E67B:				; CODE XREF: .text:6ED5E429j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], eax
		call	sub_6ED942E0
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED5E6A0	proc near		; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+222p

var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0B8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_4C], eax
		lea	eax, [ebp+var_6C]
		mov	[ebp+var_54], offset sub_6ED997C0
		mov	[ebp+var_50], offset word_6ED9A686
		mov	[ebp+var_48], offset sub_6ED5EC6C
		mov	[ebp+var_44], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		mov	dword ptr [edx+9Ch], 0
		mov	[edx+94h], eax
		mov	dword ptr [edx+0A0h], 0FFFFFFFFh
		mov	[esp], edx
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED5BDC0
		mov	eax, ds:_ZN8QMapData11shared_nullE
		mov	[ebp+var_C], eax
		mov	[ebp+var_74], eax
		lock inc dword ptr [eax+34h]
		setnz	al
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	edx, [ebp+var_C]
		cmp	eax, edx
		mov	[ebp+var_7C], edx
		jz	short loc_6ED5E761
		mov	eax, [ebp+arg_0]
		add	eax, 4
		mov	[ebp+var_98], eax
		lock inc dword ptr [edx+34h]
		setnz	al
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5EC00

loc_6ED5E74B:				; CODE XREF: sub_6ED5E6A0+57Fj
		mov	eax, [ebp+var_7C]
		mov	edx, [ebp+arg_0]
		mov	[edx+4], eax
		test	byte ptr [eax+44h], 2
		jz	loc_6ED5EBE6

loc_6ED5E75E:				; CODE XREF: sub_6ED5E6A0+55Bj
		mov	eax, [ebp+var_C]

loc_6ED5E761:				; CODE XREF: sub_6ED5E6A0+81j
		test	eax, eax
		jz	short loc_6ED5E789
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5E789
		mov	eax, [ebp+var_C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED92450

loc_6ED5E789:				; CODE XREF: sub_6ED5E6A0+C3j
					; sub_6ED5E6A0+CEj
		mov	eax, [ebp+var_74]
		mov	[ebp+var_14], eax
		lock inc dword ptr [eax+34h]
		setnz	al
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		mov	edx, [ebp+var_14]
		cmp	eax, edx
		mov	[ebp+var_88], edx
		jz	short loc_6ED5E7EA
		mov	eax, [ebp+arg_0]
		add	eax, 8
		mov	[ebp+var_94], eax
		lock inc dword ptr [edx+34h]
		setnz	al
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5EC48

loc_6ED5E7D1:				; CODE XREF: sub_6ED5E6A0+5C7j
		mov	eax, [ebp+var_88]
		mov	edx, [ebp+arg_0]
		mov	[edx+8], eax
		test	byte ptr [eax+44h], 2
		jz	loc_6ED5EB60

loc_6ED5E7E7:				; CODE XREF: sub_6ED5E6A0+4D5j
		mov	eax, [ebp+var_14]

loc_6ED5E7EA:				; CODE XREF: sub_6ED5E6A0+107j
		test	eax, eax
		jz	short loc_6ED5E812
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5E812
		mov	eax, [ebp+var_14]
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED92800

loc_6ED5E812:				; CODE XREF: sub_6ED5E6A0+14Cj
					; sub_6ED5E6A0+157j
		mov	edx, [ebp+var_74]
		mov	[ebp+var_10], edx
		lock inc dword ptr [edx+34h]
		setnz	al
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		mov	edx, [ebp+var_10]
		cmp	eax, edx
		mov	[ebp+var_78], edx
		jz	short loc_6ED5E870
		mov	edx, [ebp+arg_0]
		add	edx, 0Ch
		mov	[ebp+var_8C], edx
		mov	edx, [ebp+var_78]
		lock inc dword ptr [edx+34h]
		setnz	al
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5EBC2

loc_6ED5E85A:				; CODE XREF: sub_6ED5E6A0+541j
		mov	eax, [ebp+var_78]
		mov	edx, [ebp+arg_0]
		mov	[edx+0Ch], eax
		test	byte ptr [eax+44h], 2
		jz	loc_6ED5EB20

loc_6ED5E86D:				; CODE XREF: sub_6ED5E6A0+495j
		mov	eax, [ebp+var_10]

loc_6ED5E870:				; CODE XREF: sub_6ED5E6A0+18Dj
		test	eax, eax
		jz	short loc_6ED5E898
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5E898
		mov	eax, [ebp+var_10]
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED92100

loc_6ED5E898:				; CODE XREF: sub_6ED5E6A0+1D2j
					; sub_6ED5E6A0+1DDj
		mov	eax, [ebp+var_74]
		mov	[ebp+var_18], eax
		lock inc dword ptr [eax+34h]
		setnz	al
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+10h]
		mov	edx, [ebp+var_18]
		cmp	eax, edx
		mov	[ebp+var_84], edx
		jz	short loc_6ED5E8F9
		mov	eax, [ebp+arg_0]
		add	eax, 10h
		mov	[ebp+var_90], eax
		lock inc dword ptr [edx+34h]
		setnz	al
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+10h]
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5EC24

loc_6ED5E8E0:				; CODE XREF: sub_6ED5E6A0+5A3j
		mov	eax, [ebp+var_84]
		mov	edx, [ebp+arg_0]
		mov	[edx+10h], eax
		test	byte ptr [eax+44h], 2
		jz	loc_6ED5EB40

loc_6ED5E8F6:				; CODE XREF: sub_6ED5E6A0+4B5j
		mov	eax, [ebp+var_18]

loc_6ED5E8F9:				; CODE XREF: sub_6ED5E6A0+216j
		test	eax, eax
		jz	short loc_6ED5E921
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5E921
		mov	eax, [ebp+var_18]
		mov	[esp+4], eax
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED92800

loc_6ED5E921:				; CODE XREF: sub_6ED5E6A0+25Bj
					; sub_6ED5E6A0+266j
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	[ebp+var_1C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+var_1C]
		mov	[ebp+var_80], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5EBA5

loc_6ED5E94E:				; CODE XREF: sub_6ED5E6A0+51Dj
		mov	edx, [ebp+var_80]
		mov	eax, [ebp+arg_0]
		mov	[eax], edx
		test	byte ptr [edx+0Ch], 1
		jz	loc_6ED5EB80

loc_6ED5E960:				; CODE XREF: sub_6ED5E6A0+500j
		mov	eax, [ebp+var_1C]
		test	eax, eax
		jz	short loc_6ED5E98A
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5E98A
		mov	eax, [ebp+var_1C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED95E00

loc_6ED5E98A:				; CODE XREF: sub_6ED5E6A0+2C5j
					; sub_6ED5E6A0+2CFj
		mov	eax, [ebp+arg_0]
		mov	edx, ds:_ZN7QString11shared_nullE
		cmp	[eax+18h], edx
		mov	[ebp+var_70], edx
		jz	short loc_6ED5E9D2
		mov	[ebp+var_20], edx
		lock inc dword ptr [edx]
		setnz	al
		lea	eax, [ebp+var_20]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 18h
		mov	[esp], eax
		mov	[ebp+var_68], 4
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5EB08

loc_6ED5E9D2:				; CODE XREF: sub_6ED5E6A0+2F9j
					; sub_6ED5E6A0+47Bj
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_70]
		cmp	edx, [eax+1Ch]
		jz	short loc_6ED5EA19
		mov	[ebp+var_24], edx
		mov	eax, ds:_ZN7QString11shared_nullE
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_24]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 1Ch
		mov	[esp], eax
		mov	[ebp+var_68], 3
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5EAF0

loc_6ED5EA19:				; CODE XREF: sub_6ED5E6A0+33Bj
					; sub_6ED5E6A0+463j
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_70]
		cmp	eax, [edx+20h]
		jz	short loc_6ED5EA5C
		mov	[ebp+var_28], eax
		mov	eax, ds:_ZN7QString11shared_nullE
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_28]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 20h
		mov	[esp], eax
		mov	[ebp+var_68], 2
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_28]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5EAD3

loc_6ED5EA5C:				; CODE XREF: sub_6ED5E6A0+382j
					; sub_6ED5E6A0+446j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_70]
		cmp	edx, [eax+5Ch]
		mov	dword ptr [eax+24h], 2
		jz	short loc_6ED5EAA6
		mov	[ebp+var_2C], edx
		mov	eax, ds:_ZN7QString11shared_nullE
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_2C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 5Ch
		mov	[esp], eax
		mov	[ebp+var_68], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_2C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5EAB3

loc_6ED5EAA6:				; CODE XREF: sub_6ED5E6A0+3CCj
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED5EAB3:				; CODE XREF: sub_6ED5E6A0+404j
		mov	eax, [ebp+var_2C]
		mov	[esp], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED5EAD3:				; CODE XREF: sub_6ED5E6A0+3BAj
		mov	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5EA5C
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5EAF0:				; CODE XREF: sub_6ED5E6A0+373j
		mov	eax, [ebp+var_24]
		mov	[esp], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5EA19
; ---------------------------------------------------------------------------

loc_6ED5EB08:				; CODE XREF: sub_6ED5E6A0+32Cj
		mov	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5E9D2
; ---------------------------------------------------------------------------

loc_6ED5EB20:				; CODE XREF: sub_6ED5E6A0+1C7j
		mov	edx, [ebp+var_8C]
		mov	[esp], edx
		mov	[ebp+var_68], 8
		call	sub_6ED91F50
		jmp	loc_6ED5E86D
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5EB40:				; CODE XREF: sub_6ED5E6A0+250j
		mov	edx, [ebp+var_90]
		mov	[esp], edx
		mov	[ebp+var_68], 6
		call	sub_6ED925B0
		jmp	loc_6ED5E8F6
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5EB60:				; CODE XREF: sub_6ED5E6A0+141j
		mov	edx, [ebp+var_94]
		mov	[esp], edx
		mov	[ebp+var_68], 7
		call	sub_6ED925B0
		jmp	loc_6ED5E7E7
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5EB80:				; CODE XREF: sub_6ED5E6A0+2BAj
		mov	eax, [edx+4]
		mov	[esp+8], eax
		mov	eax, [edx+8]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		mov	[ebp+var_68], 5
		call	sub_6ED960D0
		jmp	loc_6ED5E960
; ---------------------------------------------------------------------------

loc_6ED5EBA5:				; CODE XREF: sub_6ED5E6A0+2A8j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[esp], edx
		mov	[esp+4], eax
		mov	[ebp+var_68], 5
		call	sub_6ED95E00
		jmp	loc_6ED5E94E
; ---------------------------------------------------------------------------

loc_6ED5EBC2:				; CODE XREF: sub_6ED5E6A0+1B4j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		mov	[esp+4], eax
		mov	eax, [ebp+var_8C]
		mov	[esp], eax
		mov	[ebp+var_68], 8
		call	sub_6ED92100
		jmp	loc_6ED5E85A
; ---------------------------------------------------------------------------

loc_6ED5EBE6:				; CODE XREF: sub_6ED5E6A0+B8j
		mov	edx, [ebp+var_98]
		mov	[esp], edx
		mov	[ebp+var_68], 9
		call	sub_6ED922B0
		jmp	loc_6ED5E75E
; ---------------------------------------------------------------------------

loc_6ED5EC00:				; CODE XREF: sub_6ED5E6A0+A5j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	[esp+4], eax
		mov	eax, [ebp+var_98]
		mov	[esp], eax
		mov	[ebp+var_68], 9
		call	sub_6ED92450
		jmp	loc_6ED5E74B
; ---------------------------------------------------------------------------

loc_6ED5EC24:				; CODE XREF: sub_6ED5E6A0+23Aj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+10h]
		mov	[esp+4], eax
		mov	eax, [ebp+var_90]
		mov	[esp], eax
		mov	[ebp+var_68], 6
		call	sub_6ED92800
		jmp	loc_6ED5E8E0
; ---------------------------------------------------------------------------

loc_6ED5EC48:				; CODE XREF: sub_6ED5E6A0+12Bj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		mov	[esp+4], eax
		mov	eax, [ebp+var_94]
		mov	[esp], eax
		mov	[ebp+var_68], 7
		call	sub_6ED92800
		jmp	loc_6ED5E7D1
sub_6ED5E6A0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5EC6C	proc near		; DATA XREF: sub_6ED5E6A0+20o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-68h]
		mov	edx, [ebp-64h]
		cmp	eax, 1
		mov	[ebp-0A0h], edx
		jz	short loc_6ED5ECE0
		cmp	eax, 2
		jz	loc_6ED5EDD4
		cmp	eax, 3
		jz	loc_6ED5EDCC
		cmp	eax, 4
		jz	loc_6ED5ED81
		cmp	eax, 5
		xchg	ax, ax
		jz	loc_6ED5ED7C
		cmp	eax, 6
		jz	loc_6ED5ED55
		cmp	eax, 7
		jz	short loc_6ED5ED2E
		cmp	eax, 8
		jz	short loc_6ED5ED07
		lea	eax, [ebp-2Ch]

loc_6ED5ECBC:				; CODE XREF: sub_6ED5EC6C+16Bj
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		mov	eax, [ebp-0A0h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED5ECE0:				; CODE XREF: sub_6ED5EC6C+12j
		lea	eax, [ebp-28h]

loc_6ED5ECE3:				; CODE XREF: sub_6ED5EC6C+163j
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		mov	edx, [ebp-0A0h]
		mov	[esp+0], edx
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED5ED07:				; CODE XREF: sub_6ED5EC6C+4Bj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED92580
		mov	eax, [ebp-0A0h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED5ED2E:				; CODE XREF: sub_6ED5EC6C+46j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED92280
		mov	edx, [ebp-0A0h]
		mov	[esp+0], edx
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED5ED55:				; CODE XREF: sub_6ED5EC6C+3Dj
		lea	eax, [ebp-14h]

loc_6ED5ED58:				; CODE XREF: sub_6ED5EC6C+113j
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED92880
		mov	eax, [ebp-0A0h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED5ED7C:				; CODE XREF: sub_6ED5EC6C+34j
		lea	eax, [ebp-18h]
		jmp	short loc_6ED5ED58
; ---------------------------------------------------------------------------

loc_6ED5ED81:				; CODE XREF: sub_6ED5EC6C+29j
		mov	eax, [ebp-1Ch]
		mov	edx, [ebp-0A0h]
		test	eax, eax
		mov	[ebp-9Ch], edx
		jz	short loc_6ED5EDB7
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5EDB7
		mov	eax, [ebp-1Ch]
		mov	[esp+arg_0], eax
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED95E00

loc_6ED5EDB7:				; CODE XREF: sub_6ED5EC6C+126j
					; sub_6ED5EC6C+130j
		mov	eax, [ebp-9Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED5EDCC:				; CODE XREF: sub_6ED5EC6C+20j
		lea	eax, [ebp-20h]
		jmp	loc_6ED5ECE3
; ---------------------------------------------------------------------------

loc_6ED5EDD4:				; CODE XREF: sub_6ED5EC6C+17j
		lea	eax, [ebp-24h]
		jmp	loc_6ED5ECBC
sub_6ED5EC6C	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 106. _ZN15QXmlInputSource4initEv

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN15QXmlInputSource4initEv
_ZN15QXmlInputSource4initEv proc near	; CODE XREF: _ZN15QXmlInputSourceC1Ev+10j
					; _ZN15QXmlInputSourceC2Ev+10j	...

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A69C
		mov	[ebp+var_28], offset sub_6ED5EF48
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 2Ch ; size_t
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_50], edx
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	dl
		mov	edx, ds:_ZN10QByteArray11shared_nullE
		mov	[eax+20h], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+var_50]
		mov	[eax+24h], edx
		mov	ecx, edx
		lock inc dword ptr [edx]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	dword ptr [eax], 0
		mov	dword ptr [eax+4], 0
		mov	[ebp+var_C], ecx
		mov	[edx+4], eax
		mov	eax, [edx]
		mov	eax, [eax+8]
		lock inc dword ptr [ecx]
		setnz	dl
		mov	ecx, [ebp+arg_0]
		lea	edx, [ebp+var_C]
		mov	[esp+4], edx
		mov	[esp], ecx
		mov	[ebp+var_48], 5
		call	eax
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5EF30

loc_6ED5EE99:				; CODE XREF: _ZN15QXmlInputSource4initEv+163j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	dword ptr [eax+1Ch], 0
		mov	byte ptr [eax+18h], 1
		add	eax, 20h
		mov	[esp], eax
		mov	[ebp+var_48], 6
		call	ds:_ZN10QByteArray5clearEv
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+var_50]
		mov	eax, [ecx+4]
		cmp	edx, [eax+24h]
		jz	short loc_6ED5EF01
		mov	[ebp+var_10], edx
		lock inc dword ptr [edx]
		setnz	dl
		lea	edx, [ebp+var_10]
		add	eax, 24h
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5EF12
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]

loc_6ED5EF01:				; CODE XREF: _ZN15QXmlInputSource4initEv+E9j
					; _ZN15QXmlInputSource4initEv+14Bj
		mov	byte ptr [eax+28h], 1
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED5EF12:				; CODE XREF: _ZN15QXmlInputSource4initEv+119j
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+4]
		jmp	short loc_6ED5EF01
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5EF30:				; CODE XREF: _ZN15QXmlInputSource4initEv+B3j
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5EE99
_ZN15QXmlInputSource4initEv endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5EF48	proc near		; DATA XREF: _ZN15QXmlInputSource4initEv+20o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-58h], edx
		jz	short loc_6ED5EF87
		cmp	eax, 2
		jz	short loc_6ED5EFBA
		cmp	eax, 3
		jz	short loc_6ED5EF9C
		cmp	eax, 4
		jz	loc_6ED5F028
		cmp	eax, 5
		nop
		jz	short loc_6ED5EFCC
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-48h], 0
		add	eax, 20h
		mov	[esp+0], eax
		call	sub_6ED90150

loc_6ED5EF87:				; CODE XREF: sub_6ED5EF48+Fj
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-48h], 0
		add	eax, 8
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED5EF9C:				; CODE XREF: sub_6ED5EF48+19j
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED991C0
		mov	edx, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED5EFBA:				; CODE XREF: sub_6ED5EF48+14j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED5EFCC:				; CODE XREF: sub_6ED5EF48+28j
					; sub_6ED5EF48+F2j
		mov	eax, [ebp-58h]
		mov	[esp+0], eax
		call	sub_6ED98EF0
		mov	edx, [ebp+8]
		mov	edx, [edx+4]
		test	edx, edx
		mov	[ebp-54h], edx
		jz	short loc_6ED5F01C
		mov	eax, [edx+24h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5F069

loc_6ED5EFF1:				; CODE XREF: sub_6ED5EF48+137j
		mov	ecx, [ebp-54h]
		mov	eax, [ecx+20h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5F054

loc_6ED5F001:				; CODE XREF: sub_6ED5EF48+11Fj
		mov	edx, [ebp-54h]
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5F03C

loc_6ED5F011:				; CODE XREF: sub_6ED5EF48+10Aj
		mov	eax, [ebp-54h]
		mov	[esp+0], eax
		call	sub_6ED988B0

loc_6ED5F01C:				; CODE XREF: sub_6ED5EF48+9Aj
		mov	dword ptr [ebp-48h], 4
		call	sub_6ED99700
; ---------------------------------------------------------------------------

loc_6ED5F028:				; CODE XREF: sub_6ED5EF48+1Ej
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		jmp	short loc_6ED5EFCC
; ---------------------------------------------------------------------------

loc_6ED5F03C:				; CODE XREF: sub_6ED5EF48+C7j
		mov	ecx, [ebp-54h]
		mov	eax, [ecx+8]
		mov	dword ptr [ebp-48h], 4
		mov	[esp+0], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED5F011
; ---------------------------------------------------------------------------

loc_6ED5F054:				; CODE XREF: sub_6ED5EF48+B7j
		mov	eax, [ecx+20h]
		mov	dword ptr [ebp-48h], 2
		mov	[esp+0], eax
		call	ds:_Z5qFreePv
		jmp	short loc_6ED5F001
; ---------------------------------------------------------------------------

loc_6ED5F069:				; CODE XREF: sub_6ED5EF48+A7j
		mov	ecx, [ebp-54h]
		mov	eax, [ecx+24h]
		mov	dword ptr [ebp-48h], 1
		mov	[esp+0], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5EFF1
sub_6ED5EF48	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 114. _ZN15QXmlInputSourceC1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN15QXmlInputSourceC1Ev
_ZN15QXmlInputSourceC1Ev proc near	; CODE XREF: _ZN12QDomDocument10setContentERK7QStringbPS0_PiS4_+50p

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA6F68
		add	esp, 0Ch
		jmp	_ZN15QXmlInputSource4initEv
_ZN15QXmlInputSourceC1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 116. _ZN15QXmlInputSourceC2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN15QXmlInputSourceC2Ev
_ZN15QXmlInputSourceC2Ev proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA6F68
		add	esp, 0Ch
		jmp	_ZN15QXmlInputSource4initEv
_ZN15QXmlInputSourceC2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 113. _ZN15QXmlInputSourceC1EP9QIODevice

; =============== S U B	R O U T	I N E =======================================


		public _ZN15QXmlInputSourceC1EP9QIODevice
_ZN15QXmlInputSourceC1EP9QIODevice proc	near
					; CODE XREF: _ZN12QDomDocument10setContentEP9QIODevicebP7QStringPiS4_+53p
					; _ZN12QDomDocument10setContentERK10QByteArraybP7QStringPiS5_+85p

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	dword ptr [ebx], offset	off_6EDA6F68
		mov	[esp+1Ch+var_1C], ebx
		call	_ZN15QXmlInputSource4initEv
		mov	eax, [ebx+4]
		mov	[eax], esi
		mov	[esp+1Ch+var_1C], esi
		call	ds:_ZNK9QIODevice6isOpenEv
		test	al, al
		jnz	short loc_6ED5F110
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5F110:				; CODE XREF: _ZN15QXmlInputSourceC1EP9QIODevice+31j
		mov	[esp+1Ch+arg_4], 0
		mov	eax, [ebx+4]
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		mov	eax, [eax]
		mov	[esp+1Ch+arg_0], eax
		mov	eax, ds:_ZN9QIODevice18setTextModeEnabledEb
		add	esp, 1Ch
		jmp	eax
_ZN15QXmlInputSourceC1EP9QIODevice endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 115. _ZN15QXmlInputSourceC2EP9QIODevice

; =============== S U B	R O U T	I N E =======================================


		public _ZN15QXmlInputSourceC2EP9QIODevice
_ZN15QXmlInputSourceC2EP9QIODevice proc	near

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	dword ptr [ebx], offset	off_6EDA6F68
		mov	[esp+1Ch+var_1C], ebx
		call	_ZN15QXmlInputSource4initEv
		mov	eax, [ebx+4]
		mov	[eax], esi
		mov	[esp+1Ch+var_1C], esi
		call	ds:_ZNK9QIODevice6isOpenEv
		test	al, al
		jnz	short loc_6ED5F180
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5F180:				; CODE XREF: _ZN15QXmlInputSourceC2EP9QIODevice+31j
		mov	[esp+1Ch+arg_4], 0
		mov	eax, [ebx+4]
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		mov	eax, [eax]
		mov	[esp+1Ch+arg_0], eax
		mov	eax, ds:_ZN9QIODevice18setTextModeEnabledEb
		add	esp, 1Ch
		jmp	eax
_ZN15QXmlInputSourceC2EP9QIODevice endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  97. _ZN14QXmlAttributes6appendERK7QStringS2_S2_S2_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN14QXmlAttributes6appendERK7QStringS2_S2_S2_
_ZN14QXmlAttributes6appendERK7QStringS2_S2_S2_ proc near ; CODE	XREF: sub_6ED64010+19Cp
					; sub_6ED64010+24Cp ...

var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A6B8
		mov	[ebp+var_28], offset sub_6ED5F30D
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_18], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ebp+var_14], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_48], 4
		mov	[esp+4], eax
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+arg_8]
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+arg_C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+arg_10]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 4
		mov	[esp], eax
		call	sub_6ED93A20
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5F2F5

loc_6ED5F27D:				; CODE XREF: _ZN14QXmlAttributes6appendERK7QStringS2_S2_S2_+158j
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5F2E0

loc_6ED5F28A:				; CODE XREF: _ZN14QXmlAttributes6appendERK7QStringS2_S2_S2_+143j
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5F2C4

loc_6ED5F297:				; CODE XREF: _ZN14QXmlAttributes6appendERK7QStringS2_S2_S2_+127j
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5F2B7
		mov	eax, [ebp+var_18]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED5F2B7:				; CODE XREF: _ZN14QXmlAttributes6appendERK7QStringS2_S2_S2_+F2j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED5F2C4:				; CODE XREF: _ZN14QXmlAttributes6appendERK7QStringS2_S2_S2_+E5j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_48], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED5F297
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5F2E0:				; CODE XREF: _ZN14QXmlAttributes6appendERK7QStringS2_S2_S2_+D8j
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED5F28A
; ---------------------------------------------------------------------------

loc_6ED5F2F5:				; CODE XREF: _ZN14QXmlAttributes6appendERK7QStringS2_S2_S2_+CBj
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5F27D
_ZN14QXmlAttributes6appendERK7QStringS2_S2_S2_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5F30D	proc near		; DATA XREF: _ZN14QXmlAttributes6appendERK7QStringS2_S2_S2_+20o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-50h], edx
		jz	short loc_6ED5F33A
		cmp	eax, 2
		jz	short loc_6ED5F34C
		cmp	eax, 3
		jz	short loc_6ED5F370
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED5F33A:				; CODE XREF: sub_6ED5F30D+Fj
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED5F34C:				; CODE XREF: sub_6ED5F30D+14j
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-50h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED5F370:				; CODE XREF: sub_6ED5F30D+19j
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED90860
		mov	edx, [ebp-50h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED5F30D	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 514. _ZNK20QXmlNamespaceSupport11processNameERK7QStringbRS0_S3_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZNK20QXmlNamespaceSupport11processNameERK7QStringbRS0_S3_
_ZNK20QXmlNamespaceSupport11processNameERK7QStringbRS0_S3_ proc	near
					; CODE XREF: sub_6ED628B0+430p
					; sub_6ED630C0+107p ...

var_51		= byte ptr -51h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= byte ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		movzx	eax, [ebp+arg_8]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_2C], edx
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A6C4
		mov	[ebp+var_51], al
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_28], offset sub_6ED5F608
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_4]
		mov	edx, [eax]
		mov	eax, [edx+8]
		mov	edx, [edx+0Ch]
		test	eax, eax
		jle	short loc_6ED5F412
		cmp	word ptr [edx],	3Ah
		mov	[ebp+var_50], 0
		jz	loc_6ED5F4BB
		mov	ecx, [ebp+var_50]
		jmp	short loc_6ED5F40B
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5F400:				; CODE XREF: _ZNK20QXmlNamespaceSupport11processNameERK7QStringbRS0_S3_+70j
		cmp	word ptr [edx+ecx*2], 3Ah
		jz	loc_6ED5F4B8

loc_6ED5F40B:				; CODE XREF: _ZNK20QXmlNamespaceSupport11processNameERK7QStringbRS0_S3_+59j
		add	ecx, 1
		cmp	ecx, eax
		jl	short loc_6ED5F400

loc_6ED5F412:				; CODE XREF: _ZNK20QXmlNamespaceSupport11processNameERK7QStringbRS0_S3_+43j
		mov	edx, [ebp+arg_C]
		mov	eax, ds:_ZN7QString11shared_nullE
		cmp	[edx], eax
		jz	short loc_6ED5F452
		mov	[ebp+var_18], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_C]
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5F5C7

loc_6ED5F452:				; CODE XREF: _ZNK20QXmlNamespaceSupport11processNameERK7QStringbRS0_S3_+7Cj
		cmp	[ebp+var_51], 0
		jz	short loc_6ED5F480

loc_6ED5F458:				; CODE XREF: _ZNK20QXmlNamespaceSupport11processNameERK7QStringbRS0_S3_+EDj
					; _ZNK20QXmlNamespaceSupport11processNameERK7QStringbRS0_S3_+FAj ...
		mov	edx, [ebp+arg_4]
		mov	[esp+4], edx
		mov	eax, [ebp+arg_10]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QStringaSERKS_

loc_6ED5F472:				; CODE XREF: _ZNK20QXmlNamespaceSupport11processNameERK7QStringbRS0_S3_+201j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5F480:				; CODE XREF: _ZNK20QXmlNamespaceSupport11processNameERK7QStringbRS0_S3_+B6j
					; _ZNK20QXmlNamespaceSupport11processNameERK7QStringbRS0_S3_+244j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	eax, [eax+4]
		mov	ecx, [eax+3Ch]
		test	ecx, ecx
		jz	short loc_6ED5F458
		mov	eax, [eax+4]
		mov	edx, [eax-8]
		mov	edx, [edx+8]
		test	edx, edx
		jnz	short loc_6ED5F458
		sub	eax, 4
		mov	[esp+4], eax
		mov	eax, [ebp+arg_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QStringaSERKS_
		jmp	short loc_6ED5F458
; ---------------------------------------------------------------------------

loc_6ED5F4B8:				; CODE XREF: _ZNK20QXmlNamespaceSupport11processNameERK7QStringbRS0_S3_+65j
		mov	[ebp+var_50], ecx

loc_6ED5F4BB:				; CODE XREF: _ZNK20QXmlNamespaceSupport11processNameERK7QStringbRS0_S3_+50j
		mov	edx, [ebp+var_50]
		mov	[esp+8], edx
		mov	eax, [ebp+arg_4]
		lea	edx, [ebp+var_C]
		mov	[esp], edx
		mov	[esp+4], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZNK7QString4leftEi
		lea	edx, [ebp+var_C]
		lea	eax, [ebp+var_10]
		sub	esp, 4
		mov	[esp+8], edx
		mov	edx, [ebp+arg_0]
		mov	[esp], eax
		mov	[esp+4], edx
		mov	[ebp+var_48], 4
		call	_ZNK20QXmlNamespaceSupport3uriERK7QString
		sub	esp, 4
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_C]
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5F5F0

loc_6ED5F52D:				; CODE XREF: _ZNK20QXmlNamespaceSupport11processNameERK7QStringbRS0_S3_+263j
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5F54D
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED5F54D:				; CODE XREF: _ZNK20QXmlNamespaceSupport11processNameERK7QStringbRS0_S3_+198j
		mov	dword ptr [esp+0Ch], 0FFFFFFFFh
		mov	eax, [ebp+var_50]
		lea	edx, [ebp+var_14]
		add	eax, 1
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], edx
		mov	[esp+4], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZNK7QString3midEii
		lea	eax, [ebp+var_14]
		sub	esp, 4
		mov	[esp+4], eax
		mov	edx, [ebp+arg_10]
		mov	[esp], edx
		mov	[ebp+var_48], 2
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED5F472
		mov	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED5F5C7:				; CODE XREF: _ZNK20QXmlNamespaceSupport11processNameERK7QStringbRS0_S3_+ACj
		mov	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		cmp	[ebp+var_51], 0
		jnz	loc_6ED5F458
		jmp	loc_6ED5F480
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5F5F0:				; CODE XREF: _ZNK20QXmlNamespaceSupport11processNameERK7QStringbRS0_S3_+187j
		mov	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 4
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5F52D
_ZNK20QXmlNamespaceSupport11processNameERK7QStringbRS0_S3_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5F608	proc near		; DATA XREF: _ZNK20QXmlNamespaceSupport11processNameERK7QStringbRS0_S3_+24o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-58h], edx
		jz	short loc_6ED5F647
		cmp	eax, 2
		jz	short loc_6ED5F64C
		cmp	eax, 3
		jz	short loc_6ED5F65E
		lea	eax, [ebp-18h]

loc_6ED5F626:				; CODE XREF: sub_6ED5F608+42j
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-58h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED5F647:				; CODE XREF: sub_6ED5F608+Fj
		lea	eax, [ebp-14h]
		jmp	short loc_6ED5F626
; ---------------------------------------------------------------------------

loc_6ED5F64C:				; CODE XREF: sub_6ED5F608+14j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED5F65E:				; CODE XREF: sub_6ED5F608+19j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	edx, [ebp-58h]
		mov	[esp+0], edx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED5F608	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 327. _ZN20QXmlNamespaceSupport5resetEv

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN20QXmlNamespaceSupport5resetEv
_ZN20QXmlNamespaceSupport5resetEv proc near

var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= byte ptr -7Ch
var_78		= dword	ptr -78h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_40		= byte ptr -40h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0A8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_5C], eax
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		mov	[ebp+var_64], offset sub_6ED997C0
		mov	[ebp+var_60], offset dword_6ED9A6D8
		mov	[ebp+var_58], offset sub_6ED5F8F8
		mov	[ebp+var_54], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 8 ; size_t
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_80], eax
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	edx, [ebp+var_80]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, ds:_ZN8QMapData11shared_nullE
		mov	edx, [ebp+var_80]
		mov	[edx+4], eax
		lock inc dword ptr [eax+34h]
		setnz	dl
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aHttpWww_w3_org	; "http://www.w3.org/XML/1998/namespace"
		mov	[ebp+var_78], 4
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_10], eax
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aXml_1 ; "xml"
		mov	[ebp+var_78], 3
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_80]
		mov	edx, [ebp+var_80]
		add	eax, 4
		mov	[ebp+var_88], eax
		mov	eax, [edx+4]
		mov	eax, [eax+34h]
		cmp	eax, 1
		jz	short loc_6ED5F767
		mov	eax, [ebp+var_88]
		mov	[ebp+var_78], 2
		mov	[esp], eax
		call	sub_6ED925B0

loc_6ED5F767:				; CODE XREF: _ZN20QXmlNamespaceSupport5resetEv+C0j
		mov	edx, [ebp+var_88]
		lea	eax, [ebp+var_C]
		mov	[esp+8], eax
		lea	eax, [ebp+var_40]
		mov	[esp+4], eax
		mov	[ebp+var_78], 2
		mov	[esp], edx
		call	sub_6ED981F0
		mov	edx, [ebp+var_80]
		cmp	eax, [edx+4]
		jz	loc_6ED5F8A8
		lea	edx, [ebp+var_10]
		sub	eax, 4
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_78], 2
		call	ds:_ZN7QStringaSERKS_

loc_6ED5F7B0:				; CODE XREF: _ZN20QXmlNamespaceSupport5resetEv+251j
					; _ZN20QXmlNamespaceSupport5resetEv+263j
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5F890

loc_6ED5F7C1:				; CODE XREF: _ZN20QXmlNamespaceSupport5resetEv+213j
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED5F873

loc_6ED5F7D2:				; CODE XREF: _ZN20QXmlNamespaceSupport5resetEv+1F6j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		test	eax, eax
		mov	[ebp+var_84], eax
		jz	short loc_6ED5F817
		mov	eax, [eax+4]
		test	eax, eax
		jz	short loc_6ED5F7F3
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5F850

loc_6ED5F7F3:				; CODE XREF: _ZN20QXmlNamespaceSupport5resetEv+156j
					; _ZN20QXmlNamespaceSupport5resetEv+1E1j
		mov	edx, [ebp+var_84]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED5F809
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5F830

loc_6ED5F809:				; CODE XREF: _ZN20QXmlNamespaceSupport5resetEv+16Dj
					; _ZN20QXmlNamespaceSupport5resetEv+1BBj
		mov	eax, [ebp+var_84]
		mov	[esp], eax
		call	sub_6ED988B0

loc_6ED5F817:				; CODE XREF: _ZN20QXmlNamespaceSupport5resetEv+14Fj
		mov	eax, [ebp+var_80]
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5F830:				; CODE XREF: _ZN20QXmlNamespaceSupport5resetEv+177j
		mov	edx, [ebp+var_84]
		mov	eax, [edx]
		mov	[esp], edx
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_6ED95900
		jmp	short loc_6ED5F809
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5F850:				; CODE XREF: _ZN20QXmlNamespaceSupport5resetEv+161j
		mov	edx, [ebp+var_84]
		mov	eax, [edx+4]
		mov	[ebp+var_78], 1
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 4
		mov	[esp], eax
		call	sub_6ED92800
		jmp	short loc_6ED5F7F3
; ---------------------------------------------------------------------------

loc_6ED5F873:				; CODE XREF: _ZN20QXmlNamespaceSupport5resetEv+13Cj
		mov	eax, [ebp+var_10]
		mov	[ebp+var_78], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5F7D2
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5F890:				; CODE XREF: _ZN20QXmlNamespaceSupport5resetEv+12Bj
		mov	eax, [ebp+var_C]
		mov	[ebp+var_78], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED5F7C1
; ---------------------------------------------------------------------------

loc_6ED5F8A8:				; CODE XREF: _ZN20QXmlNamespaceSupport5resetEv+100j
		lea	eax, [ebp+var_40]
		mov	dword ptr [esp+0Ch], 4
		mov	dword ptr [esp+8], 8
		mov	[esp+4], eax
		mov	eax, [edx+4]
		mov	[esp], eax
		call	ds:_ZN8QMapData11node_createEPPNS_4NodeEii
		mov	ecx, eax
		sub	ecx, 8
		jz	short loc_6ED5F8DE
		mov	edx, [ebp+var_C]
		mov	[eax-8], edx
		lock inc dword ptr [edx]
		setnz	al

loc_6ED5F8DE:				; CODE XREF: _ZN20QXmlNamespaceSupport5resetEv+240j
		cmp	ecx, 0FFFFFFFCh
		jz	loc_6ED5F7B0
		mov	eax, [ebp+var_10]
		mov	[ecx+4], eax
		lock inc dword ptr [eax]
		setnz	dl
		jmp	loc_6ED5F7B0
_ZN20QXmlNamespaceSupport5resetEv endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5F8F8	proc near		; DATA XREF: _ZN20QXmlNamespaceSupport5resetEv+23o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-78h]
		mov	edx, [ebp-74h]
		cmp	eax, 1
		mov	[ebp-94h], edx
		jz	short loc_6ED5F962
		cmp	eax, 2
		jz	short loc_6ED5F974
		cmp	eax, 3
		jz	short loc_6ED5F986
		mov	[ebp-8Ch], edx
		mov	edx, [ebp-84h]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED5F94D
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5F94D
		mov	edx, [ebp-84h]
		mov	eax, [edx]
		mov	[esp+0], edx
		mov	dword ptr [ebp-78h], 0
		mov	[esp+arg_0], eax
		call	sub_6ED95900

loc_6ED5F94D:				; CODE XREF: sub_6ED5F8F8+2Ej
					; sub_6ED5F8F8+38j
		mov	eax, [ebp-8Ch]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED5F962:				; CODE XREF: sub_6ED5F8F8+12j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560

loc_6ED5F974:				; CODE XREF: sub_6ED5F8F8+17j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560

loc_6ED5F986:				; CODE XREF: sub_6ED5F8F8+1Cj
		mov	eax, [ebp-80h]
		mov	dword ptr [ebp-78h], 0
		add	eax, 4
		mov	[esp+0], eax
		call	sub_6ED92880
		mov	eax, [ebp-94h]
		mov	edx, [ebp-80h]
		mov	[ebp-90h], eax
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED5F9D2
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5F9D2
		mov	edx, [ebp-80h]
		mov	eax, [edx]
		mov	[esp+0], edx
		mov	dword ptr [ebp-78h], 0
		mov	[esp+arg_0], eax
		call	sub_6ED95900

loc_6ED5F9D2:				; CODE XREF: sub_6ED5F8F8+B6j
					; sub_6ED5F8F8+C0j
		mov	eax, [ebp-80h]
		mov	[esp+0], eax
		call	sub_6ED988B0
		mov	edx, [ebp-90h]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED5F8F8	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 329. _ZN20QXmlNamespaceSupportC1Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN20QXmlNamespaceSupportC1Ev
_ZN20QXmlNamespaceSupportC1Ev proc near	; CODE XREF: sub_6ED5FC80+10Bp
					; .text:6ED6042Bp

var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= byte ptr -7Ch
var_78		= dword	ptr -78h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_40		= byte ptr -40h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0A8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_5C], eax
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		mov	[ebp+var_64], offset sub_6ED997C0
		mov	[ebp+var_60], offset dword_6ED9A6E4
		mov	[ebp+var_58], offset sub_6ED5FBD0
		mov	[ebp+var_54], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 8 ; size_t
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_80], eax
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	edx, [ebp+var_80]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, ds:_ZN8QMapData11shared_nullE
		mov	edx, [ebp+var_80]
		mov	[edx+4], eax
		lock inc dword ptr [eax+34h]
		setnz	dl
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aHttpWww_w3_org	; "http://www.w3.org/XML/1998/namespace"
		mov	[ebp+var_78], 3
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_10], eax
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aXml_1 ; "xml"
		mov	[ebp+var_78], 2
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_80]
		mov	edx, [ebp+var_80]
		add	eax, 4
		mov	[ebp+var_84], eax
		mov	eax, [edx+4]
		mov	eax, [eax+34h]
		cmp	eax, 1
		jz	short loc_6ED5FAD7
		mov	eax, [ebp+var_84]
		mov	[ebp+var_78], 1
		mov	[esp], eax
		call	sub_6ED925B0

loc_6ED5FAD7:				; CODE XREF: _ZN20QXmlNamespaceSupportC1Ev+C0j
		mov	edx, [ebp+var_84]
		lea	eax, [ebp+var_C]
		mov	[esp+8], eax
		lea	eax, [ebp+var_40]
		mov	[esp+4], eax
		mov	[ebp+var_78], 1
		mov	[esp], edx
		call	sub_6ED981F0
		mov	edx, [ebp+var_80]
		cmp	eax, [edx+4]
		jz	short loc_6ED5FB80
		lea	edx, [ebp+var_10]
		sub	eax, 4
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_78], 1
		call	ds:_ZN7QStringaSERKS_

loc_6ED5FB1C:				; CODE XREF: _ZN20QXmlNamespaceSupportC1Ev+1B9j
					; _ZN20QXmlNamespaceSupportC1Ev+1CBj
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5FB50

loc_6ED5FB29:				; CODE XREF: _ZN20QXmlNamespaceSupportC1Ev+163j
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED5FB65

loc_6ED5FB36:				; CODE XREF: _ZN20QXmlNamespaceSupportC1Ev+178j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_80]
		mov	[eax], edx
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5FB50:				; CODE XREF: _ZN20QXmlNamespaceSupportC1Ev+127j
		mov	eax, [ebp+var_C]
		mov	[ebp+var_78], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED5FB29
; ---------------------------------------------------------------------------

loc_6ED5FB65:				; CODE XREF: _ZN20QXmlNamespaceSupportC1Ev+134j
		mov	eax, [ebp+var_10]
		mov	[ebp+var_78], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED5FB36
; ---------------------------------------------------------------------------
		align 10h

loc_6ED5FB80:				; CODE XREF: _ZN20QXmlNamespaceSupportC1Ev+100j
		lea	eax, [ebp+var_40]
		mov	dword ptr [esp+0Ch], 4
		mov	dword ptr [esp+8], 8
		mov	[esp+4], eax
		mov	eax, [edx+4]
		mov	[esp], eax
		call	ds:_ZN8QMapData11node_createEPPNS_4NodeEii
		mov	ecx, eax
		sub	ecx, 8
		jz	short loc_6ED5FBB6
		mov	edx, [ebp+var_C]
		mov	[eax-8], edx
		lock inc dword ptr [edx]
		setnz	al

loc_6ED5FBB6:				; CODE XREF: _ZN20QXmlNamespaceSupportC1Ev+1A8j
		cmp	ecx, 0FFFFFFFCh
		jz	loc_6ED5FB1C
		mov	eax, [ebp+var_10]
		mov	[ecx+4], eax
		lock inc dword ptr [eax]
		setnz	dl
		jmp	loc_6ED5FB1C
_ZN20QXmlNamespaceSupportC1Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5FBD0	proc near		; DATA XREF: _ZN20QXmlNamespaceSupportC1Ev+23o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-78h]
		mov	edx, [ebp-74h]
		cmp	eax, 1
		mov	[ebp-8Ch], edx
		jz	short loc_6ED5FBFB
		cmp	eax, 2
		jz	short loc_6ED5FC0D
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560

loc_6ED5FBFB:				; CODE XREF: sub_6ED5FBD0+12j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560

loc_6ED5FC0D:				; CODE XREF: sub_6ED5FBD0+17j
		mov	eax, [ebp-80h]
		mov	dword ptr [ebp-78h], 0
		add	eax, 4
		mov	[esp+0], eax
		call	sub_6ED92880
		mov	eax, [ebp-8Ch]
		mov	edx, [ebp-80h]
		mov	[ebp-88h], eax
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED5FC59
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED5FC59
		mov	edx, [ebp-80h]
		mov	eax, [edx]
		mov	[esp+0], edx
		mov	dword ptr [ebp-78h], 0
		mov	[esp+arg_0], eax
		call	sub_6ED95900

loc_6ED5FC59:				; CODE XREF: sub_6ED5FBD0+65j
					; sub_6ED5FBD0+6Fj
		mov	eax, [ebp-80h]
		mov	[esp+0], eax
		call	sub_6ED988B0
		mov	edx, [ebp-88h]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED5FBD0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED5FC80	proc near		; CODE XREF: _ZN16QXmlSimpleReaderC1Ev+62p
					; _ZN16QXmlSimpleReaderC2Ev+62p

var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A6EE
		mov	[ebp+var_18], offset sub_6ED5FF1D
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	ecx, [ebp+arg_0]
		mov	edx, ds:_ZN11QVectorData11shared_nullE
		mov	[ecx], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, ds:_ZN8QMapData11shared_nullE
		mov	[ecx+4], eax
		lock inc dword ptr [eax+34h]
		setnz	cl
		mov	ecx, [ebp+arg_0]
		mov	[ecx+8], eax
		lock inc dword ptr [eax+34h]
		setnz	cl
		mov	ecx, [ebp+arg_0]
		mov	[ecx+0Ch], eax
		lock inc dword ptr [eax+34h]
		setnz	cl
		mov	ecx, [ebp+arg_0]
		mov	[ecx+10h], eax
		lock inc dword ptr [eax+34h]
		setnz	cl
		mov	eax, [ebp+arg_0]
		mov	[eax+14h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_40], edx
		mov	[ecx+18h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	[ecx+1Ch], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	[ecx+20h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	[ecx+28h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	[ecx+2Ch], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	[ecx+30h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	[ecx+34h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	[ecx+38h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	[ecx+3Ch], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, ds:_ZN9QListData11shared_nullE
		mov	dword ptr [ecx+44h], offset off_6EDA6D80
		mov	[ecx+48h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	dword ptr [ecx+54h], 0
		add	ecx, 58h
		mov	[ebp+var_44], ecx
		mov	[esp], ecx
		mov	[ebp+var_38], 2
		call	_ZN20QXmlNamespaceSupportC1Ev
		mov	edx, [ebp+var_40]
		mov	eax, [ebp+arg_0]
		mov	[eax+5Ch], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	ecx, [ebp+arg_0]
		mov	[ecx+70h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	edx, ecx
		xor	eax, eax
		mov	word ptr [ecx+98h], 0
		add	edx, 0A4h
		xchg	ax, ax

loc_6ED5FDC0:				; CODE XREF: sub_6ED5FC80+14Ej
		mov	word ptr [edx+eax], 0
		add	eax, 2
		cmp	eax, 200h
		jnz	short loc_6ED5FDC0
		mov	edx, [ebp+var_40]
		mov	eax, [ebp+arg_0]
		mov	[eax+2A4h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	edx, [ebp+arg_0]
		xor	eax, eax
		add	edx, 2B0h
		lea	esi, [esi+0]

loc_6ED5FDF0:				; CODE XREF: sub_6ED5FC80+17Ej
		mov	word ptr [edx+eax], 0
		add	eax, 2
		cmp	eax, 200h
		jnz	short loc_6ED5FDF0
		mov	eax, [ebp+var_40]
		mov	ecx, [ebp+arg_0]
		mov	[ecx+4B0h], eax
		lock inc dword ptr [eax]
		setnz	al
		mov	edx, ecx
		xor	eax, eax
		add	edx, 4BCh
		lea	esi, [esi+0]

loc_6ED5FE20:				; CODE XREF: sub_6ED5FC80+1AEj
		mov	word ptr [edx+eax], 0
		add	eax, 2
		cmp	eax, 200h
		jnz	short loc_6ED5FE20
		mov	eax, [ebp+var_40]
		mov	ecx, [ebp+arg_0]
		mov	edx, eax
		mov	[ecx+6BCh], eax
		lock inc dword ptr [eax]
		setnz	al
		mov	[ecx+6C8h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, ds:_ZN9QHashData11shared_nullE
		mov	[ecx+6CCh], eax
		lock inc dword ptr [eax+8]
		setnz	dl
		mov	[ecx+6D0h], eax
		lock inc dword ptr [eax+8]
		setnz	dl
		mov	[ecx+6D4h], eax
		lock inc dword ptr [eax+8]
		setnz	dl
		mov	eax, [ebp+arg_4]
		mov	dword ptr [ecx+74h], 0
		mov	[ecx+6D8h], eax
		mov	dword ptr [esp], 8 ; size_t
		mov	[ebp+var_38], 1
		call	sub_6ED988D0
		mov	edx, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA75A8
		mov	[eax+4], edx
		mov	edx, [ecx+54h]
		cmp	eax, edx
		jz	short loc_6ED5FEC4
		test	edx, edx
		mov	[ecx+54h], eax
		jz	short loc_6ED5FEC4
		mov	eax, [edx]
		mov	[esp], edx
		call	dword ptr [eax+4]

loc_6ED5FEC4:				; CODE XREF: sub_6ED5FC80+233j
					; sub_6ED5FC80+23Aj
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+88h], 0
		mov	dword ptr [eax+84h], 0
		mov	dword ptr [eax+7Ch], 0
		mov	dword ptr [eax+80h], 0
		mov	dword ptr [eax+8Ch], 0
		mov	dword ptr [eax+90h], 0
		mov	byte ptr [eax+40h], 1
		mov	byte ptr [eax+41h], 0
		mov	byte ptr [eax+42h], 1
		mov	byte ptr [eax+43h], 0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED5FC80	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED5FF1D	proc near		; DATA XREF: sub_6ED5FC80+1Do
		add	ebp, 8
		mov	edx, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-4Ch], edx
		jz	loc_6ED6000D
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 6D4h
		mov	[esp+0], eax
		call	sub_6ED933B0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 6D0h
		mov	[esp+0], eax
		call	sub_6ED932B0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 6CCh
		mov	[esp+0], eax
		call	sub_6ED933B0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 6C8h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 6BCh
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 4B0h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 2A4h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 70h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 5Ch
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	ecx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], ecx
		call	_ZN20QXmlNamespaceSupportD1Ev

loc_6ED6000D:				; CODE XREF: sub_6ED5FF1D+Dj
		mov	eax, [ebp-4Ch]
		mov	edx, [ebp+8]
		mov	[ebp-48h], eax
		mov	eax, [edx+54h]
		test	eax, eax
		jz	short loc_6ED6002E
		mov	edx, [eax]
		mov	[esp+0], eax
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 0
		call	eax

loc_6ED6002E:				; CODE XREF: sub_6ED5FF1D+FEj
		mov	ecx, [ebp+8]
		mov	eax, ecx
		mov	dword ptr [ecx+54h], 0
		add	eax, 44h
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0
		call	_ZN14QXmlAttributesD1Ev
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 3Ch
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 38h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 34h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 30h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 2Ch
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 28h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 20h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 1Ch
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 18h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 14h
		mov	[esp+0], eax
		call	sub_6ED94430
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 10h
		mov	[esp+0], eax
		call	sub_6ED92880
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED92280
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp+0], eax
		call	sub_6ED92880
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 4
		mov	[esp+0], eax
		call	sub_6ED92580
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED942E0
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED5FF1D	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 161. _ZN16QXmlSimpleReaderC1Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlSimpleReaderC1Ev
_ZN16QXmlSimpleReaderC1Ev proc near	; CODE XREF: sub_6ED50D50+43p
					; _ZN12QDomDocument10setContentEP15QXmlInputSourcebP7QStringPiS4_+50p

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A6F6
		mov	[ebp+var_18], offset sub_6ED6021D
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_6EDA6FC8
		mov	dword ptr [esp], 6DCh ;	size_t
		mov	[ebp+var_38], 2
		call	sub_6ED988D0
		mov	[ebp+var_40], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_40]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_6ED5FC80
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_40]
		mov	[eax+4], edx
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlSimpleReaderC1Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED6021D	proc near		; DATA XREF: _ZN16QXmlSimpleReaderC1Ev+1Do
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], eax
		jz	short loc_6ED60237
		mov	edx, [ebp-40h]
		mov	[esp+0], edx
		call	sub_6ED988B0

loc_6ED60237:				; CODE XREF: sub_6ED6021D+Dj
		mov	eax, [ebp+8]
		mov	edx, [ebp-44h]
		mov	dword ptr [eax], offset	off_6EDA6BC8
		mov	[esp+0], edx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED6021D	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 162. _ZN16QXmlSimpleReaderC2Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlSimpleReaderC2Ev
_ZN16QXmlSimpleReaderC2Ev proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A6FE
		mov	[ebp+var_18], offset sub_6ED602DD
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_6EDA6FC8
		mov	dword ptr [esp], 6DCh ;	size_t
		mov	[ebp+var_38], 2
		call	sub_6ED988D0
		mov	[ebp+var_40], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_40]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_6ED5FC80
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_40]
		mov	[eax+4], edx
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlSimpleReaderC2Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED602DD	proc near		; DATA XREF: _ZN16QXmlSimpleReaderC2Ev+1Do
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], eax
		jz	short loc_6ED602F7
		mov	edx, [ebp-40h]
		mov	[esp+0], edx
		call	sub_6ED988B0

loc_6ED602F7:				; CODE XREF: sub_6ED602DD+Dj
		mov	eax, [ebp+8]
		mov	edx, [ebp-44h]
		mov	dword ptr [eax], offset	off_6EDA6BC8
		mov	[esp+0], edx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED602DD	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	dword ptr [ebp-24h], offset sub_6ED997C0
		mov	dword ptr [ebp-20h], offset word_6ED9A706
		mov	dword ptr [ebp-18h], offset loc_6ED605BD
		mov	[ebp-14h], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	ecx, [ebp+8]
		mov	edx, ds:_ZN11QVectorData11shared_nullE
		mov	[ecx], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, ds:_ZN8QMapData11shared_nullE
		mov	[ecx+4], eax
		lock inc dword ptr [eax+34h]
		setnz	cl
		mov	ecx, [ebp+8]
		mov	[ecx+8], eax
		lock inc dword ptr [eax+34h]
		setnz	cl
		mov	ecx, [ebp+8]
		mov	[ecx+0Ch], eax
		lock inc dword ptr [eax+34h]
		setnz	cl
		mov	ecx, [ebp+8]
		mov	[ecx+10h], eax
		lock inc dword ptr [eax+34h]
		setnz	cl
		mov	eax, [ebp+8]
		mov	[eax+14h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	ecx, [ebp+8]
		mov	[ebp-40h], edx
		mov	[ecx+18h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	[ecx+1Ch], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	[ecx+20h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	[ecx+28h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	[ecx+2Ch], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	[ecx+30h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	[ecx+34h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	[ecx+38h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	[ecx+3Ch], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, ds:_ZN9QListData11shared_nullE
		mov	dword ptr [ecx+44h], offset off_6EDA6D80
		mov	[ecx+48h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	dword ptr [ecx+54h], 0
		add	ecx, 58h
		mov	[ebp-44h], ecx
		mov	[esp], ecx
		mov	dword ptr [ebp-38h], 2
		call	_ZN20QXmlNamespaceSupportC1Ev
		mov	edx, [ebp-40h]
		mov	eax, [ebp+8]
		mov	[eax+5Ch], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	ecx, [ebp+8]
		mov	[ecx+70h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	edx, ecx
		xor	eax, eax
		mov	word ptr [ecx+98h], 0
		add	edx, 0A4h
		xchg	ax, ax

loc_6ED60460:				; CODE XREF: .text:6ED6046Ej
		mov	word ptr [edx+eax], 0
		add	eax, 2
		cmp	eax, 200h
		jnz	short loc_6ED60460
		mov	edx, [ebp-40h]
		mov	eax, [ebp+8]
		mov	[eax+2A4h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	edx, [ebp+8]
		xor	eax, eax
		add	edx, 2B0h
		lea	esi, [esi+0]

loc_6ED60490:				; CODE XREF: .text:6ED6049Ej
		mov	word ptr [edx+eax], 0
		add	eax, 2
		cmp	eax, 200h
		jnz	short loc_6ED60490
		mov	eax, [ebp-40h]
		mov	ecx, [ebp+8]
		mov	[ecx+4B0h], eax
		lock inc dword ptr [eax]
		setnz	al
		mov	edx, ecx
		xor	eax, eax
		add	edx, 4BCh
		lea	esi, [esi+0]

loc_6ED604C0:				; CODE XREF: .text:6ED604CEj
		mov	word ptr [edx+eax], 0
		add	eax, 2
		cmp	eax, 200h
		jnz	short loc_6ED604C0
		mov	eax, [ebp-40h]
		mov	ecx, [ebp+8]
		mov	edx, eax
		mov	[ecx+6BCh], eax
		lock inc dword ptr [eax]
		setnz	al
		mov	[ecx+6C8h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, ds:_ZN9QHashData11shared_nullE
		mov	[ecx+6CCh], eax
		lock inc dword ptr [eax+8]
		setnz	dl
		mov	[ecx+6D0h], eax
		lock inc dword ptr [eax+8]
		setnz	dl
		mov	[ecx+6D4h], eax
		lock inc dword ptr [eax+8]
		setnz	dl
		mov	eax, [ebp+0Ch]
		mov	dword ptr [ecx+74h], 0
		mov	[ecx+6D8h], eax
		mov	dword ptr [esp], 8
		mov	dword ptr [ebp-38h], 1
		call	sub_6ED988D0
		mov	edx, [ebp+0Ch]
		mov	ecx, [ebp+8]
		mov	dword ptr [eax], offset	off_6EDA75A8
		mov	[eax+4], edx
		mov	edx, [ecx+54h]
		cmp	eax, edx
		jz	short loc_6ED60564
		test	edx, edx
		mov	[ecx+54h], eax
		jz	short loc_6ED60564
		mov	eax, [edx]
		mov	[esp], edx
		call	dword ptr [eax+4]

loc_6ED60564:				; CODE XREF: .text:6ED60553j
					; .text:6ED6055Aj
		mov	eax, [ebp+8]
		mov	dword ptr [eax+88h], 0
		mov	dword ptr [eax+84h], 0
		mov	dword ptr [eax+7Ch], 0
		mov	dword ptr [eax+80h], 0
		mov	dword ptr [eax+8Ch], 0
		mov	dword ptr [eax+90h], 0
		mov	byte ptr [eax+40h], 1
		mov	byte ptr [eax+41h], 0
		mov	byte ptr [eax+42h], 1
		mov	byte ptr [eax+43h], 0
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED605BD:				; DATA XREF: .text:6ED6033Do
		add	ebp, 8
		mov	edx, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-4Ch], edx
		jz	loc_6ED606AD
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 6D4h
		mov	[esp], eax
		call	sub_6ED933B0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 6D0h
		mov	[esp], eax
		call	sub_6ED932B0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 6CCh
		mov	[esp], eax
		call	sub_6ED933B0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 6C8h
		mov	[esp], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 6BCh
		mov	[esp], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 4B0h
		mov	[esp], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 2A4h
		mov	[esp], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 70h
		mov	[esp], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 5Ch
		mov	[esp], eax
		call	sub_6ED94560
		mov	ecx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], ecx
		call	_ZN20QXmlNamespaceSupportD1Ev

loc_6ED606AD:				; CODE XREF: .text:6ED605CAj
		mov	eax, [ebp-4Ch]
		mov	edx, [ebp+8]
		mov	[ebp-48h], eax
		mov	eax, [edx+54h]
		test	eax, eax
		jz	short loc_6ED606CE
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 0
		call	eax

loc_6ED606CE:				; CODE XREF: .text:6ED606BBj
		mov	ecx, [ebp+8]
		mov	eax, ecx
		mov	dword ptr [ecx+54h], 0
		add	eax, 44h
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 0
		call	_ZN14QXmlAttributesD1Ev
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 3Ch
		mov	[esp], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 38h
		mov	[esp], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 34h
		mov	[esp], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 30h
		mov	[esp], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 2Ch
		mov	[esp], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 28h
		mov	[esp], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 20h
		mov	[esp], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 1Ch
		mov	[esp], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 18h
		mov	[esp], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 14h
		mov	[esp], eax
		call	sub_6ED94430
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 10h
		mov	[esp], eax
		call	sub_6ED92880
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp], eax
		call	sub_6ED92280
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp], eax
		call	sub_6ED92880
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 4
		mov	[esp], eax
		call	sub_6ED92580
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], eax
		call	sub_6ED942E0
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h
; Exported entry 298. _ZN18QXmlParseExceptionD1Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN18QXmlParseExceptionD1Ev
_ZN18QXmlParseExceptionD1Ev proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A70E
		mov	[ebp+var_18], offset sub_6ED60913
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		mov	[ebp+var_40], edx
		jz	short loc_6ED608B2
		mov	eax, [edx+10h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED608F8

loc_6ED60888:				; CODE XREF: _ZN18QXmlParseExceptionD1Ev+CEj
		mov	edx, [ebp+var_40]
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED608E0

loc_6ED60898:				; CODE XREF: _ZN18QXmlParseExceptionD1Ev+B6j
		mov	edx, [ebp+var_40]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED608C8

loc_6ED608A7:				; CODE XREF: _ZN18QXmlParseExceptionD1Ev+9Dj
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED988B0

loc_6ED608B2:				; CODE XREF: _ZN18QXmlParseExceptionD1Ev+39j
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_3C]
		mov	dword ptr [edx], 0
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED608C8:				; CODE XREF: _ZN18QXmlParseExceptionD1Ev+65j
		mov	edx, [ebp+var_40]
		mov	eax, [edx]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED608A7
; ---------------------------------------------------------------------------
		align 10h

loc_6ED608E0:				; CODE XREF: _ZN18QXmlParseExceptionD1Ev+56j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+0Ch]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED60898
; ---------------------------------------------------------------------------

loc_6ED608F8:				; CODE XREF: _ZN18QXmlParseExceptionD1Ev+46j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+10h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED60888
_ZN18QXmlParseExceptionD1Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED60913	proc near		; DATA XREF: _ZN18QXmlParseExceptionD1Ev+1Do
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], eax
		jz	short loc_6ED60937
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED60937:				; CODE XREF: sub_6ED60913+Dj
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED60913	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 299. _ZN18QXmlParseExceptionD2Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN18QXmlParseExceptionD2Ev
_ZN18QXmlParseExceptionD2Ev proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A716
		mov	[ebp+var_18], offset sub_6ED60A33
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		mov	[ebp+var_40], edx
		jz	short loc_6ED609D2
		mov	eax, [edx+10h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED60A18

loc_6ED609A8:				; CODE XREF: _ZN18QXmlParseExceptionD2Ev+CEj
		mov	edx, [ebp+var_40]
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED60A00

loc_6ED609B8:				; CODE XREF: _ZN18QXmlParseExceptionD2Ev+B6j
		mov	edx, [ebp+var_40]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED609E8

loc_6ED609C7:				; CODE XREF: _ZN18QXmlParseExceptionD2Ev+9Dj
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED988B0

loc_6ED609D2:				; CODE XREF: _ZN18QXmlParseExceptionD2Ev+39j
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_3C]
		mov	dword ptr [edx], 0
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED609E8:				; CODE XREF: _ZN18QXmlParseExceptionD2Ev+65j
		mov	edx, [ebp+var_40]
		mov	eax, [edx]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED609C7
; ---------------------------------------------------------------------------
		align 10h

loc_6ED60A00:				; CODE XREF: _ZN18QXmlParseExceptionD2Ev+56j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+0Ch]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED609B8
; ---------------------------------------------------------------------------

loc_6ED60A18:				; CODE XREF: _ZN18QXmlParseExceptionD2Ev+46j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+10h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED609A8
_ZN18QXmlParseExceptionD2Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED60A33	proc near		; DATA XREF: _ZN18QXmlParseExceptionD2Ev+1Do
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], eax
		jz	short loc_6ED60A57
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED60A57:				; CODE XREF: sub_6ED60A33+Dj
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED60A33	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED60A80	proc near		; CODE XREF: sub_6ED60E40+B3p
					; sub_6ED60E40+119p ...

var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A71E
		mov	[ebp+var_28], offset sub_6ED60D43
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_48], 0FFFFFFFFh
		add	edx, 5Ch
		mov	[ebp+var_54], edx
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZN7QStringaSERKS_
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+80h]
		test	eax, eax
		jz	loc_6ED60B9D
		mov	eax, ds:_ZN7QString11shared_nullE
		cmp	[ecx+5Ch], eax
		jz	loc_6ED60C00
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_54]
		add	eax, 34h
		mov	[esp+14h], eax
		mov	eax, [ebp+arg_0]
		add	eax, 30h
		mov	[esp+10h], eax
		mov	eax, [edx+9Ch]
		add	eax, 1
		mov	[esp+0Ch], eax
		mov	eax, [edx+0A0h]
		mov	[esp+4], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		add	eax, 1
		mov	[esp+8], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	_ZN18QXmlParseExceptionC1ERK7QStringiiS2_S2_
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_10]
		mov	eax, [edx+80h]
		mov	edx, [eax]
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	eax, [edx+10h]
		mov	[ebp+var_48], 5
		call	eax
		mov	edx, [ebp+var_10]
		test	edx, edx
		mov	[ebp+var_50], edx
		jz	short loc_6ED60B9D
		mov	eax, [edx+10h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED60BE0

loc_6ED60B73:				; CODE XREF: sub_6ED60A80+176j
		mov	ecx, [ebp+var_50]
		mov	eax, [ecx+0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED60BC4

loc_6ED60B83:				; CODE XREF: sub_6ED60A80+157j
		mov	ecx, [ebp+var_50]
		mov	eax, [ecx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED60BB0

loc_6ED60B92:				; CODE XREF: sub_6ED60A80+142j
		mov	eax, [ebp+var_50]
		mov	[esp], eax
		call	sub_6ED988B0

loc_6ED60B9D:				; CODE XREF: sub_6ED60A80+5Dj
					; sub_6ED60A80+E4j ...
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED60BB0:				; CODE XREF: sub_6ED60A80+110j
		mov	eax, [ecx]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED60B92
; ---------------------------------------------------------------------------

loc_6ED60BC4:				; CODE XREF: sub_6ED60A80+101j
		mov	eax, [ecx+0Ch]
		mov	[ebp+var_48], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED60B83
; ---------------------------------------------------------------------------
		align 10h

loc_6ED60BE0:				; CODE XREF: sub_6ED60A80+F1j
		mov	ecx, [ebp+var_50]
		mov	eax, [ecx+10h]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED60B73
; ---------------------------------------------------------------------------
		align 10h

loc_6ED60C00:				; CODE XREF: sub_6ED60A80+6Bj
		mov	eax, [ecx+9Ch]
		add	eax, 1
		mov	[ebp+var_60], eax
		mov	eax, [ecx+0A0h]
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aNoErrorOccurre	; "no error occurred"
		add	eax, 1
		mov	[ebp+var_5C], eax
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+var_5C]
		mov	[ebp+var_48], 7
		mov	[esp+8], edx
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_0]
		add	eax, 34h
		mov	[esp+14h], eax
		mov	eax, [ebp+arg_0]
		add	eax, 30h
		mov	[esp+10h], eax
		mov	eax, [ebp+var_60]
		mov	[esp+0Ch], eax
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	_ZN18QXmlParseExceptionC1ERK7QStringiiS2_S2_
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED60CF5

loc_6ED60C78:				; CODE XREF: sub_6ED60A80+288j
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_10]
		mov	eax, [edx+80h]
		mov	edx, [eax]
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	eax, [edx+10h]
		mov	[ebp+var_48], 6
		call	eax
		mov	eax, [ebp+var_10]
		test	eax, eax
		mov	[ebp+var_58], eax
		jz	loc_6ED60B9D
		mov	eax, [eax+10h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED60D28

loc_6ED60CB4:				; CODE XREF: sub_6ED60A80+2BEj
		mov	edx, [ebp+var_58]
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED60D10

loc_6ED60CC4:				; CODE XREF: sub_6ED60A80+2A6j
		mov	ecx, [ebp+var_58]
		mov	eax, [ecx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED60CE5
		mov	eax, [ecx]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED60CE5:				; CODE XREF: sub_6ED60A80+251j
		mov	eax, [ebp+var_58]
		mov	[esp], eax
		call	sub_6ED988B0
		jmp	loc_6ED60B9D
; ---------------------------------------------------------------------------

loc_6ED60CF5:				; CODE XREF: sub_6ED60A80+1F6j
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED60C78
; ---------------------------------------------------------------------------
		align 10h

loc_6ED60D10:				; CODE XREF: sub_6ED60A80+242j
		mov	ecx, [ebp+var_58]
		mov	eax, [ecx+0Ch]
		mov	[ebp+var_48], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED60CC4
; ---------------------------------------------------------------------------

loc_6ED60D28:				; CODE XREF: sub_6ED60A80+232j
		mov	ecx, [ebp+var_58]
		mov	eax, [ecx+10h]
		mov	[ebp+var_48], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED60CB4
sub_6ED60A80	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED60D43	proc near		; DATA XREF: sub_6ED60A80+23o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-64h], edx
		jz	short loc_6ED60D8E
		cmp	eax, 2
		jz	loc_6ED60E1E
		cmp	eax, 3
		jz	loc_6ED60E33
		cmp	eax, 4
		jz	loc_6ED60DFA
		cmp	eax, 5
		jz	short loc_6ED60DD6
		cmp	eax, 6
		jz	short loc_6ED60DB2
		mov	eax, [ebp-50h]
		mov	dword ptr [ebp-48h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED60D8E:				; CODE XREF: sub_6ED60D43+Fj
		mov	eax, [ebp-50h]

loc_6ED60D91:				; CODE XREF: sub_6ED60D43+F3j
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	edx, [ebp-64h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED60DB2:				; CODE XREF: sub_6ED60D43+34j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-64h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED60DD6:				; CODE XREF: sub_6ED60D43+2Fj
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED90740
		mov	ecx, [ebp-64h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED60DFA:				; CODE XREF: sub_6ED60D43+26j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED90740
		mov	eax, [ebp-64h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED60E1E:				; CODE XREF: sub_6ED60D43+14j
		mov	eax, [ebp-58h]
		mov	dword ptr [ebp-48h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED60E33:				; CODE XREF: sub_6ED60D43+1Dj
		mov	eax, [ebp-58h]
		jmp	loc_6ED60D91
sub_6ED60D43	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED60E40	proc near		; CODE XREF: sub_6ED60FB0+72p
					; sub_6ED64390+21Ap ...

var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= byte ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A730
		mov	[ebp+var_28], offset sub_6ED60F75
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+74h]
		test	edx, edx
		jz	loc_6ED60F25
		mov	eax, [ebp+arg_0]
		cmp	word ptr [eax+98h], 0FFFFh
		jz	short loc_6ED60EC0
		mov	eax, [ebp+arg_C]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_8]
		mov	[esp+4], eax
		mov	[esp+8], edx
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED58550

loc_6ED60EB1:				; CODE XREF: sub_6ED60E40+C3j
					; sub_6ED60E40+130j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED60EC0:				; CODE XREF: sub_6ED60E40+48j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aUnexpectedEndO	; "unexpected end of file"
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_14], eax
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	sub_6ED60A80
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED60EB1
		mov	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED60F25:				; CODE XREF: sub_6ED60E40+37j
		lea	eax, [ebp+var_C]
		mov	[ebp+var_C], offset aUnexpectedEndO ; "unexpected end of file"
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED94530
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	sub_6ED60A80
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED94560
		jmp	loc_6ED60EB1
sub_6ED60E40	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED60F75	proc near		; DATA XREF: sub_6ED60E40+1Do
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-50h], eax
		lea	eax, [ebp-10h]
		jz	short loc_6ED60F8A
		lea	eax, [ebp-14h]

loc_6ED60F8A:				; CODE XREF: sub_6ED60F75+10j
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-50h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED60F75	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED60FB0	proc near		; CODE XREF: sub_6ED61030+17j
					; sub_6ED64710+53Bp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]

loc_6ED60FB8:				; CODE XREF: sub_6ED60FB0+47j
		movzx	eax, word ptr [ebx+98h]
		mov	edx, eax
		or	edx, 1
		cmp	dx, 0FFFFh
		jz	short loc_6ED61000
		cmp	ax, 9
		jz	short loc_6ED60FF0
		cmp	ax, 20h
		jz	short loc_6ED60FF0
		cmp	ax, 0Dh
		jz	short loc_6ED60FF0
		cmp	ax, 0Ah
		jz	short loc_6ED60FF0

loc_6ED60FE2:				; CODE XREF: sub_6ED60FB0+55j
		mov	eax, 1
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED60FF0:				; CODE XREF: sub_6ED60FB0+1Ej
					; sub_6ED60FB0+24j ...
		mov	eax, ebx
		call	sub_6ED5BC00
		jmp	short loc_6ED60FB8
; ---------------------------------------------------------------------------
		align 10h

loc_6ED61000:				; CODE XREF: sub_6ED60FB0+18j
		mov	ecx, [ebx+74h]
		test	ecx, ecx
		jz	short loc_6ED60FE2
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_10], 0
		mov	[esp+1Ch+var_18], offset sub_6ED60FB0
		mov	[esp+1Ch+var_14], 0
		call	sub_6ED60E40
		xor	eax, eax
		add	esp, 18h
		pop	ebx
		retn
sub_6ED60FB0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED61030	proc near		; CODE XREF: sub_6ED65AE0+313p
					; sub_6ED65AE0+37Dp ...

arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 8
		mov	ebx, [esp+0Ch+arg_0]
		mov	eax, ebx
		call	sub_6ED5BC00
		mov	[esp+0Ch+arg_0], ebx
		add	esp, 8
		pop	ebx
		jmp	sub_6ED60FB0
sub_6ED61030	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED61050	proc near		; CODE XREF: sub_6ED61480+466p
					; sub_6ED61480+6C5p ...

var_6E		= byte ptr -6Eh
var_6D		= byte ptr -6Dh
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= byte ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		movzx	eax, [ebp+arg_C]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_54], offset sub_6ED997C0
		mov	[ebp+var_50], offset dword_6ED9A738
		mov	[ebp+var_4C], edx
		mov	[ebp+var_6D], al
		lea	eax, [ebp+var_6C]
		mov	[ebp+var_48], offset sub_6ED6138C
		mov	[ebp+var_44], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		cmp	[ebp+var_6D], 0
		jz	loc_6ED611D5
		mov	ecx, [ebp+arg_4]
		mov	eax, [ecx]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_10]
		mov	[esp+8], eax
		lea	eax, [ebp+var_C]
		mov	[ebp+var_14], offset aApos ; "&apos;"
		mov	[ebp+var_10], offset aQuot_0 ; "&quot;"
		mov	dword ptr [esp+0Ch], 1
		mov	word ptr [esp+4], 22h
		mov	[esp], eax
		mov	[ebp+var_68], 7
		call	ds:_ZN7QString7replaceE5QCharRK13QLatin1StringN2Qt15CaseSensitivityE
		lea	edx, [ebp+var_14]
		mov	dword ptr [esp+0Ch], 1
		mov	[esp+8], edx
		mov	word ptr [esp+4], 27h
		mov	[esp], eax
		call	ds:_ZN7QString7replaceE5QCharRK13QLatin1StringN2Qt15CaseSensitivityE
		mov	ecx, [ebp+arg_8]
		mov	edx, [ecx]
		mov	[ebp+var_28], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	eax, [eax]
		mov	[ebp+var_24], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_28]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_20], 0
		mov	[ebp+var_68], 6
		add	eax, 14h
		mov	[esp], eax
		call	sub_6ED968A0
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED612D8

loc_6ED61144:				; CODE XREF: sub_6ED61050+29Bj
		mov	eax, [ebp+var_28]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED612F0

loc_6ED61155:				; CODE XREF: sub_6ED61050+2B3j
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED612A2

loc_6ED61166:				; CODE XREF: sub_6ED61050+1E0j
					; sub_6ED61050+1F9j ...
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		mov	edx, [edx+10h]
		mov	eax, [eax+3Ch]
		mov	edx, [edx+3Ch]
		cmp	eax, edx
		jge	short loc_6ED6117B
		mov	eax, edx

loc_6ED6117B:				; CODE XREF: sub_6ED61050+127j
		mov	ecx, [ebp+arg_0]
		add	eax, 1
		mov	edx, [ecx+14h]
		cmp	eax, [edx+8]
		jl	loc_6ED61250
		mov	ecx, [ebp+arg_0]
		cmp	byte ptr [ecx+43h], 0
		jz	short loc_6ED611C0
		mov	eax, [ecx+8Ch]
		test	eax, eax
		jz	short loc_6ED611C0
		mov	edx, [eax]
		mov	ecx, [ebp+arg_8]
		mov	[esp], eax
		mov	[esp+4], ecx
		mov	eax, [edx+10h]
		mov	[ebp+var_68], 0FFFFFFFFh
		call	eax
		test	al, al
		jz	loc_6ED61308

loc_6ED611C0:				; CODE XREF: sub_6ED61050+144j
					; sub_6ED61050+14Ej
		mov	[ebp+var_6E], 1

loc_6ED611C4:				; CODE XREF: sub_6ED61050+24Dj
					; sub_6ED61050+314j ...
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_6E]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED611D5:				; CODE XREF: sub_6ED61050+3Dj
		mov	edx, [ebp+arg_8]
		mov	eax, [edx]
		mov	[ebp+var_34], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+arg_4]
		mov	eax, [ecx]
		mov	[ebp+var_30], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_34]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_2C], 0
		mov	[ebp+var_68], 5
		add	eax, 14h
		mov	[esp], eax
		call	sub_6ED968A0
		mov	eax, [ebp+var_30]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED612C0

loc_6ED61225:				; CODE XREF: sub_6ED61050+283j
		mov	eax, [ebp+var_34]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED61166
		mov	eax, [ebp+var_34]
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED61166
; ---------------------------------------------------------------------------
		align 10h

loc_6ED61250:				; CODE XREF: sub_6ED61050+137j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aRecursiveEntit	; "recursive entities"
		mov	[ebp+var_68], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_68], 4
		mov	[ebp+var_18], eax
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED60A80
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED61370

loc_6ED61299:				; CODE XREF: sub_6ED61050+2F7j
		mov	[ebp+var_6E], 0
		jmp	loc_6ED611C4
; ---------------------------------------------------------------------------

loc_6ED612A2:				; CODE XREF: sub_6ED61050+110j
		mov	eax, [ebp+var_C]
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED61166
; ---------------------------------------------------------------------------
		align 10h

loc_6ED612C0:				; CODE XREF: sub_6ED61050+1CFj
		mov	eax, [ebp+var_30]
		mov	[ebp+var_68], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED61225
; ---------------------------------------------------------------------------

loc_6ED612D8:				; CODE XREF: sub_6ED61050+EEj
		mov	eax, [ebp+var_24]
		mov	[ebp+var_68], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED61144
; ---------------------------------------------------------------------------

loc_6ED612F0:				; CODE XREF: sub_6ED61050+FFj
		mov	eax, [ebp+var_28]
		mov	[ebp+var_68], 7
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED61155
; ---------------------------------------------------------------------------

loc_6ED61308:				; CODE XREF: sub_6ED61050+16Aj
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_1C]
		mov	eax, [edx+8Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx+24h]
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_1C]
		mov	[ebp+var_68], 3
		sub	esp, 4
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_6ED60A80
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED61299
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_6E], 0
		jmp	loc_6ED611C4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED61370:				; CODE XREF: sub_6ED61050+243j
		mov	eax, [ebp+var_18]
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_6E], 0
		jmp	loc_6ED611C4
sub_6ED61050	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED6138C	proc near		; DATA XREF: sub_6ED61050+27o
		add	ebp, 8
		mov	eax, [ebp-68h]
		mov	edx, [ebp-64h]
		cmp	eax, 1
		mov	[ebp-74h], edx
		jz	short loc_6ED613E6
		cmp	eax, 2
		jz	loc_6ED61478
		cmp	eax, 3
		jz	loc_6ED61454
		cmp	eax, 4
		jz	short loc_6ED61430
		cmp	eax, 5
		jz	short loc_6ED6141C
		cmp	eax, 6
		lea	esi, [esi+0]
		jz	short loc_6ED613F8
		lea	eax, [ebp-34h]

loc_6ED613C5:				; CODE XREF: sub_6ED6138C+EFj
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-74h]
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED613E6:				; CODE XREF: sub_6ED6138C+Fj
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560

loc_6ED613F8:				; CODE XREF: sub_6ED6138C+34j
					; sub_6ED6138C+A2j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		mov	eax, [ebp-74h]
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED6141C:				; CODE XREF: sub_6ED6138C+2Bj
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED914D0
		jmp	short loc_6ED613F8
; ---------------------------------------------------------------------------

loc_6ED61430:				; CODE XREF: sub_6ED6138C+26j
		lea	eax, [ebp-34h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED914D0
		mov	eax, [ebp-74h]
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED61454:				; CODE XREF: sub_6ED6138C+1Dj
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		mov	edx, [ebp-74h]
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED61478:				; CODE XREF: sub_6ED6138C+14j
		lea	eax, [ebp-1Ch]
		jmp	loc_6ED613C5
sub_6ED6138C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED61480	proc near		; CODE XREF: sub_6ED68110+36Dp

var_E4		= dword	ptr -0E4h
var_DD		= byte ptr -0DDh
var_DC		= dword	ptr -0DCh
var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_D0		= dword	ptr -0D0h
var_CC		= dword	ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_AD		= byte ptr -0ADh
var_AC		= byte ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_64		= byte ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_54		= byte ptr -54h
var_50		= byte ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= byte ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_34		= byte ptr -34h
var_30		= byte ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0F8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_8C], eax
		lea	eax, [ebp+var_AC]
		mov	[esp], eax
		mov	[ebp+var_94], offset sub_6ED997C0
		mov	[ebp+var_90], offset word_6ED9A74A
		mov	[ebp+var_88], offset loc_6ED6218A
		mov	[ebp+var_84], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_A8], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED59190
		mov	eax, [eax]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[ebp+var_10], offset aAmp_0 ; "amp"
		mov	[esp], eax
		mov	[ebp+var_A8], 0Eh
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		jz	short loc_6ED61580
		mov	ecx, [ebp+arg_0]
		cmp	dword ptr [ecx+64h], 2
		jz	loc_6ED61620
		mov	edx, [ebp+arg_0]
		mov	word ptr [esp+4], 26h
		mov	[ebp+var_A8], 0Eh
		mov	[esp], edx
		call	sub_6ED593D0

loc_6ED61535:				; CODE XREF: sub_6ED61480+151j
					; sub_6ED61480+19Bj ...
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_AD], 1
		mov	byte ptr [ecx+62h], 1

loc_6ED61543:				; CODE XREF: sub_6ED61480+2C5j
					; sub_6ED61480+32Dj ...
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED61566
		mov	eax, [ebp+var_C]
		mov	[ebp+var_A8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED61566:				; CODE XREF: sub_6ED61480+CEj
		lea	eax, [ebp+var_AC]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_AD]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED61580:				; CODE XREF: sub_6ED61480+8Aj
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[ebp+var_14], offset aLt_0 ; "lt"
		mov	[esp], eax
		mov	[ebp+var_A8], 0Eh
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		jz	loc_6ED61667
		mov	eax, [ebp+arg_0]
		cmp	dword ptr [eax+64h], 2
		jz	short loc_6ED615D6
		mov	edx, [ebp+arg_0]
		mov	word ptr [esp+4], 3Ch
		mov	[ebp+var_A8], 0Eh
		mov	[esp], edx
		call	sub_6ED593D0
		jmp	loc_6ED61535
; ---------------------------------------------------------------------------

loc_6ED615D6:				; CODE XREF: sub_6ED61480+133j
		mov	word ptr [esp+4], 26h
		mov	[esp], eax
		call	sub_6ED593D0
		mov	edx, [ebp+arg_0]
		mov	word ptr [esp+4], 6Ch
		mov	[esp], edx
		call	sub_6ED593D0

loc_6ED615F7:				; CODE XREF: sub_6ED61480+261j
		mov	ecx, [ebp+arg_0]
		mov	word ptr [esp+4], 74h
		mov	[esp], ecx
		call	sub_6ED593D0

loc_6ED61609:				; CODE XREF: sub_6ED61480+1E5j
		mov	eax, [ebp+arg_0]
		mov	word ptr [esp+4], 3Bh
		mov	[esp], eax
		call	sub_6ED593D0
		jmp	loc_6ED61535
; ---------------------------------------------------------------------------

loc_6ED61620:				; CODE XREF: sub_6ED61480+93j
		mov	word ptr [esp+4], 26h
		mov	[esp], ecx
		call	sub_6ED593D0
		mov	eax, [ebp+arg_0]
		mov	word ptr [esp+4], 61h
		mov	[esp], eax
		call	sub_6ED593D0
		mov	edx, [ebp+arg_0]
		mov	word ptr [esp+4], 6Dh
		mov	[esp], edx
		call	sub_6ED593D0
		mov	ecx, [ebp+arg_0]
		mov	word ptr [esp+4], 70h
		mov	[esp], ecx
		call	sub_6ED593D0
		jmp	short loc_6ED61609
; ---------------------------------------------------------------------------

loc_6ED61667:				; CODE XREF: sub_6ED61480+126j
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[ebp+var_18], offset aGt_0 ; "gt"
		mov	[esp], eax
		mov	[ebp+var_A8], 0Eh
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		jz	short loc_6ED616E6
		mov	eax, [ebp+arg_0]
		cmp	dword ptr [eax+64h], 2
		jz	short loc_6ED616C0
		mov	edx, [ebp+arg_0]
		mov	word ptr [esp+4], 3Eh
		mov	[ebp+var_A8], 0Eh
		mov	[esp], edx
		call	sub_6ED593D0
		jmp	loc_6ED61535
; ---------------------------------------------------------------------------
		align 10h

loc_6ED616C0:				; CODE XREF: sub_6ED61480+216j
		mov	word ptr [esp+4], 26h
		mov	[esp], eax
		call	sub_6ED593D0
		mov	edx, [ebp+arg_0]
		mov	word ptr [esp+4], 67h
		mov	[esp], edx
		call	sub_6ED593D0
		jmp	loc_6ED615F7
; ---------------------------------------------------------------------------

loc_6ED616E6:				; CODE XREF: sub_6ED61480+20Dj
		lea	eax, [ebp+var_1C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[ebp+var_1C], offset aApos_0 ; "apos"
		mov	[esp], eax
		mov	[ebp+var_A8], 0Eh
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		jz	short loc_6ED6174A
		mov	eax, [ebp+arg_0]
		cmp	dword ptr [eax+64h], 2
		jz	loc_6ED617B2
		mov	eax, [ebp+arg_0]
		mov	word ptr [esp+4], 27h
		mov	[ebp+var_A8], 0Eh
		mov	[esp], eax
		call	sub_6ED593D0

loc_6ED61737:				; CODE XREF: sub_6ED61480+39Bj
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_AD], 1
		mov	byte ptr [edx+62h], 1
		jmp	loc_6ED61543
; ---------------------------------------------------------------------------

loc_6ED6174A:				; CODE XREF: sub_6ED61480+28Cj
		lea	eax, [ebp+var_20]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[ebp+var_20], offset aQuot_1 ; "quot"
		mov	[esp], eax
		mov	[ebp+var_A8], 0Eh
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		jz	loc_6ED61820
		mov	ecx, [ebp+arg_0]
		cmp	dword ptr [ecx+64h], 2
		jz	loc_6ED619C2
		mov	ecx, [ebp+arg_0]
		mov	word ptr [esp+4], 22h
		mov	[ebp+var_A8], 0Eh
		mov	[esp], ecx
		call	sub_6ED593D0

loc_6ED6179F:				; CODE XREF: sub_6ED61480+5ABj
					; sub_6ED61480+7C8j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_AD], 1
		mov	byte ptr [eax+62h], 1
		jmp	loc_6ED61543
; ---------------------------------------------------------------------------

loc_6ED617B2:				; CODE XREF: sub_6ED61480+295j
		mov	word ptr [esp+4], 26h
		mov	[esp], eax
		call	sub_6ED593D0
		mov	edx, [ebp+arg_0]
		mov	word ptr [esp+4], 61h
		mov	[esp], edx
		call	sub_6ED593D0
		mov	ecx, [ebp+arg_0]
		mov	word ptr [esp+4], 70h
		mov	[esp], ecx
		call	sub_6ED593D0
		mov	eax, [ebp+arg_0]
		mov	word ptr [esp+4], 6Fh
		mov	[esp], eax
		call	sub_6ED593D0
		mov	edx, [ebp+arg_0]
		mov	word ptr [esp+4], 73h
		mov	[esp], edx
		call	sub_6ED593D0
		mov	ecx, [ebp+arg_0]
		mov	word ptr [esp+4], 3Bh
		mov	[esp], ecx
		call	sub_6ED593D0
		jmp	loc_6ED61737
; ---------------------------------------------------------------------------

loc_6ED61820:				; CODE XREF: sub_6ED61480+2F0j
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_0]
		add	edx, 10h
		mov	[ebp+var_C4], edx
		mov	eax, [ecx+10h]
		mov	eax, [eax+34h]
		cmp	eax, 1
		jz	short loc_6ED6184C
		mov	[esp], edx
		mov	[ebp+var_A8], 0Eh
		call	sub_6ED925B0

loc_6ED6184C:				; CODE XREF: sub_6ED61480+3B8j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+10h]
		mov	edx, [eax+38h]
		mov	[ebp+var_B4], eax
		test	edx, edx
		mov	[ebp+var_BC], edx
		jns	loc_6ED61927

loc_6ED61869:				; CODE XREF: sub_6ED61480+504j
					; sub_6ED61480+52Bj ...
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+10h]
		mov	eax, [eax+34h]
		cmp	eax, 1
		jz	short loc_6ED6188F
		mov	ecx, [ebp+var_C4]
		mov	[ebp+var_A8], 0Eh
		mov	[esp], ecx
		call	sub_6ED925B0

loc_6ED6188F:				; CODE XREF: sub_6ED61480+3F5j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_B4]
		cmp	[eax+10h], edx
		jz	loc_6ED61C4D
		mov	ecx, eax
		mov	eax, [eax+64h]
		cmp	eax, 2
		jz	loc_6ED61BC1
		cmp	eax, 3
		jz	loc_6ED61B61
		cmp	eax, 1
		jz	loc_6ED61B19
		lea	eax, [ebp+var_C]
		mov	[esp+8], eax
		mov	eax, edx
		sub	eax, 4
		mov	dword ptr [esp+0Ch], 0
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	[ebp+var_A8], 0Eh
		call	sub_6ED61050
		test	al, al
		jz	loc_6ED61B0D

loc_6ED618F3:				; CODE XREF: sub_6ED61480+A32j
					; sub_6ED61480+A68j ...
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_AD], 1
		mov	byte ptr [eax+62h], 0
		jmp	loc_6ED61543
; ---------------------------------------------------------------------------

loc_6ED61906:				; CODE XREF: sub_6ED61480+4C5j
					; sub_6ED61480+4E8j
		mov	edx, [ebp+var_B8]
		sub	[ebp+var_BC], 1
		mov	eax, [ebp+var_B4]
		mov	[ebp+var_B4], edx
		js	short loc_6ED61978
		mov	[ebp+var_B4], eax

loc_6ED61927:				; CODE XREF: sub_6ED61480+3E3j
					; sub_6ED61480+4F6j
		mov	eax, [ebp+var_B4]
		mov	ecx, [ebp+var_BC]
		mov	ecx, [eax+ecx*4+4]
		mov	eax, [ebp+var_C4]
		mov	[ebp+var_B8], ecx
		cmp	ecx, [eax]
		jz	short loc_6ED61906
		mov	eax, ecx
		lea	edx, [ebp+var_C]
		sub	eax, 8
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_A8], 0Eh
		call	ds:_ZNK7QStringltERKS_
		test	al, al
		jz	short loc_6ED61906
		mov	ecx, [ebp+var_B8]
		mov	[ebp+var_B4], ecx
		jmp	short loc_6ED61927
; ---------------------------------------------------------------------------

loc_6ED61978:				; CODE XREF: sub_6ED61480+49Fj
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_B4]
		cmp	[eax+10h], edx
		jz	loc_6ED61869
		mov	eax, edx
		sub	eax, 8
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_A8], 0Eh
		call	ds:_ZNK7QStringltERKS_
		test	al, al
		jz	loc_6ED61869
		mov	ecx, [ebp+arg_0]
		mov	ecx, [ecx+10h]
		mov	[ebp+var_B4], ecx
		jmp	loc_6ED61869
; ---------------------------------------------------------------------------

loc_6ED619C2:				; CODE XREF: sub_6ED61480+2FDj
		mov	word ptr [esp+4], 26h
		mov	[esp], ecx
		call	sub_6ED593D0
		mov	eax, [ebp+arg_0]
		mov	word ptr [esp+4], 71h
		mov	[esp], eax
		call	sub_6ED593D0
		mov	edx, [ebp+arg_0]
		mov	word ptr [esp+4], 75h
		mov	[esp], edx
		call	sub_6ED593D0
		mov	ecx, [ebp+arg_0]
		mov	word ptr [esp+4], 6Fh
		mov	[esp], ecx
		call	sub_6ED593D0
		mov	eax, [ebp+arg_0]
		mov	word ptr [esp+4], 74h
		mov	[esp], eax
		call	sub_6ED593D0
		mov	edx, [ebp+arg_0]
		mov	word ptr [esp+4], 3Bh
		mov	[esp], edx
		call	sub_6ED593D0
		jmp	loc_6ED6179F
; ---------------------------------------------------------------------------

loc_6ED61A30:				; CODE XREF: sub_6ED61480+867j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+64h]
		cmp	eax, 2
		jz	loc_6ED62062
		cmp	eax, 3
		jz	loc_6ED62002
		cmp	eax, 1
		jz	loc_6ED61EED
		cmp	dword ptr [edx+88h], 0
		jz	loc_6ED61EAB
		mov	eax, [edx+88h]
		lea	ecx, [ebp+var_38]
		mov	[ebp+var_38], 0
		mov	edx, [eax]
		mov	[esp+0Ch], ecx
		mov	ecx, [ebp+var_CC]
		mov	[esp], eax
		sub	ecx, 8
		mov	[esp+8], ecx
		mov	ecx, [ebp+var_CC]
		sub	ecx, 0Ch
		mov	[esp+4], ecx
		mov	eax, [edx+8]
		mov	[ebp+var_A8], 0Eh
		call	eax
		test	al, al
		jnz	loc_6ED61D4D
		mov	eax, [ebp+var_38]
		test	eax, eax
		jz	short loc_6ED61AB7
		mov	edx, [eax]
		mov	[esp], eax
		call	dword ptr [edx+4]

loc_6ED61AB7:				; CODE XREF: sub_6ED61480+62Dj
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+88h]
		lea	ecx, [ebp+var_3C]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	eax, [edx+0Ch]
		mov	[ebp+var_A8], 0Eh
		call	eax
		push	eax
		lea	eax, [ebp+var_3C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_A8], 9
		mov	[esp], eax
		call	sub_6ED60A80
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_A8], 0Eh
		call	sub_6ED94560

loc_6ED61B0D:				; CODE XREF: sub_6ED61480+46Dj
					; sub_6ED61480+6CCj ...
		mov	[ebp+var_AD], 0
		jmp	loc_6ED61543
; ---------------------------------------------------------------------------

loc_6ED61B19:				; CODE XREF: sub_6ED61480+43Bj
		lea	eax, [ebp+var_C]
		mov	edx, [ebp+arg_0]
		mov	[esp+8], eax
		mov	eax, [ebp+var_B4]
		mov	dword ptr [esp+0Ch], 1
		mov	[ebp+var_A8], 0Eh
		mov	[esp], edx
		sub	eax, 4
		mov	[esp+4], eax
		call	sub_6ED61050
		test	al, al
		jz	short loc_6ED61B0D
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_AD], 1
		mov	byte ptr [ecx+62h], 0
		jmp	loc_6ED61543
; ---------------------------------------------------------------------------

loc_6ED61B61:				; CODE XREF: sub_6ED61480+432j
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_24]
		mov	[ebp+var_24], offset aInternalGenera ; "internal general entity	reference not a"...
		mov	byte ptr [edx+62h], 0
		mov	[esp+4], eax
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_A8], 0Eh
		call	sub_6ED94530
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_28]
		mov	[esp+4], eax
		mov	[ebp+var_A8], 0Dh
		mov	[esp], ecx
		call	sub_6ED60A80
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_A8], 0Eh
		call	sub_6ED94560
		jmp	loc_6ED61B0D
; ---------------------------------------------------------------------------

loc_6ED61BC1:				; CODE XREF: sub_6ED61480+429j
		mov	eax, [ebp+arg_0]
		mov	word ptr [esp+4], 26h
		mov	[ebp+var_A8], 0Eh
		mov	[esp], eax
		call	sub_6ED593D0
		mov	eax, [ebp+var_C]
		cmp	dword ptr [eax+8], 0
		jle	short loc_6ED61C2C
		mov	[ebp+var_C0], 0

loc_6ED61BF0:				; CODE XREF: sub_6ED61480+7AAj
		mov	eax, [eax+0Ch]
		mov	edx, [ebp+var_C0]
		mov	ecx, [ebp+arg_0]
		movzx	eax, word ptr [eax+edx*2]
		mov	[esp], ecx
		mov	[ebp+var_A8], 0Eh
		mov	[esp+4], ax
		call	sub_6ED593D0
		mov	eax, [ebp+var_C]
		add	[ebp+var_C0], 1
		mov	edx, [ebp+var_C0]
		cmp	edx, [eax+8]
		jl	short loc_6ED61BF0

loc_6ED61C2C:				; CODE XREF: sub_6ED61480+764j
					; sub_6ED61480+C46j ...
		mov	ecx, [ebp+arg_0]
		mov	word ptr [esp+4], 3Bh
		mov	[ebp+var_A8], 0Eh
		mov	[esp], ecx
		call	sub_6ED593D0
		jmp	loc_6ED6179F
; ---------------------------------------------------------------------------

loc_6ED61C4D:				; CODE XREF: sub_6ED61480+41Bj
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		add	eax, 0Ch
		mov	[ebp+var_D8], eax
		mov	eax, [edx+0Ch]
		mov	eax, [eax+34h]
		cmp	eax, 1
		jz	short loc_6ED61C7F
		mov	ecx, [ebp+var_D8]
		mov	[ebp+var_A8], 0Eh
		mov	[esp], ecx
		call	sub_6ED91F50

loc_6ED61C7F:				; CODE XREF: sub_6ED61480+7E5j
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_D8]
		mov	[ebp+var_A8], 0Eh
		mov	[esp], eax
		call	sub_6ED98170
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_CC], eax
		mov	eax, [edx+0Ch]
		mov	eax, [eax+34h]
		cmp	eax, 1
		jz	short loc_6ED61CC0
		mov	ecx, [ebp+var_D8]
		mov	[esp], ecx
		call	sub_6ED91F50

loc_6ED61CC0:				; CODE XREF: sub_6ED61480+830j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_CC]
		cmp	edx, [eax+0Ch]
		jz	loc_6ED620CB
		mov	eax, [ebp+var_CC]
		mov	eax, [eax-4]
		cmp	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_C8], eax
		jz	loc_6ED61A30
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_68], offset aUnparsedEntity ; "unparsed entity	reference in wrong cont"...
		mov	byte ptr [eax+62h], 0
		lea	eax, [ebp+var_68]
		mov	[esp+4], eax
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		mov	[ebp+var_A8], 0Eh
		call	sub_6ED94530
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_6C]
		mov	[esp+4], eax
		mov	[ebp+var_A8], 1
		mov	[esp], edx
		call	sub_6ED60A80
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		mov	[ebp+var_A8], 0Eh
		call	sub_6ED94560
		jmp	loc_6ED61B0D
; ---------------------------------------------------------------------------

loc_6ED61D4D:				; CODE XREF: sub_6ED61480+622j
		cmp	[ebp+var_38], 0
		jz	loc_6ED61EAB
		mov	edx, [ebp+var_C8]
		mov	[ebp+var_40], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+var_38]
		lea	ecx, [ebp+var_44]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	eax, [edx+14h]
		mov	[ebp+var_A8], 8
		call	eax
		push	ecx
		jmp	short loc_6ED61DF4
; ---------------------------------------------------------------------------

loc_6ED61D87:				; CODE XREF: sub_6ED61480+97Bj
		lea	ecx, [ebp+var_44]
		lea	eax, [ebp+var_40]
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	[ebp+var_A8], 7
		call	ds:_ZN7QString6appendERKS_
		mov	eax, [ebp+var_38]
		mov	edx, [eax]
		mov	[esp], eax
		call	dword ptr [edx+10h]
		mov	eax, [ebp+var_38]
		lea	ecx, [ebp+var_48]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx+14h]
		lea	eax, [ebp+var_48]
		push	edx
		lea	edx, [ebp+var_44]
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_A8], 6
		call	ds:_ZN7QStringaSERKS_
		lea	ecx, [ebp+var_48]
		mov	[esp], ecx
		mov	[ebp+var_A8], 7
		call	sub_6ED94560

loc_6ED61DF4:				; CODE XREF: sub_6ED61480+905j
		mov	eax, [ebp+var_44]
		cmp	dword ptr [eax+8], 0
		jg	short loc_6ED61D87
		mov	eax, [ebp+var_38]
		test	eax, eax
		jz	short loc_6ED61E18
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_A8], 7
		call	eax

loc_6ED61E18:				; CODE XREF: sub_6ED61480+982j
		lea	eax, [ebp+var_40]
		mov	[ebp+var_A8], 7
		call	sub_6ED5B910
		test	al, al
		jnz	loc_6ED61FA0
		lea	eax, [ebp+var_4C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_50]
		mov	[ebp+var_4C], offset aErrorInTheText ; "error in the text declaration of an ext"...
		mov	[esp], eax
		call	sub_6ED94530
		lea	eax, [ebp+var_50]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_A8], 5
		mov	[esp], eax
		call	sub_6ED60A80
		lea	eax, [ebp+var_50]
		mov	[esp], eax
		mov	[ebp+var_A8], 7
		call	sub_6ED94560

loc_6ED61E7C:				; CODE XREF: sub_6ED61480+B4Dj
		lea	eax, [ebp+var_44]
		mov	[esp], eax
		mov	[ebp+var_A8], 8
		call	sub_6ED94560
		lea	eax, [ebp+var_40]
		mov	[esp], eax
		mov	[ebp+var_A8], 0Eh
		call	sub_6ED94560
		jmp	loc_6ED61B0D
; ---------------------------------------------------------------------------

loc_6ED61EAB:				; CODE XREF: sub_6ED61480+5D8j
					; sub_6ED61480+8D1j
		mov	ecx, [ebp+arg_0]
		cmp	dword ptr [ecx+7Ch], 0
		jz	loc_6ED618F3
		mov	eax, [ecx+7Ch]
		lea	ecx, [ebp+var_C]
		mov	ds:byte_6EDA8008, 1
		mov	edx, [eax]
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	eax, [edx+30h]
		mov	[ebp+var_A8], 0Eh
		call	eax
		test	al, al
		jz	short loc_6ED61F4D
		mov	ds:byte_6EDA8008, 0
		jmp	loc_6ED618F3
; ---------------------------------------------------------------------------

loc_6ED61EED:				; CODE XREF: sub_6ED61480+5CBj
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_58]
		mov	[ebp+var_58], offset aExternalParsed ; "external parsed	general	entity referenc"...
		mov	byte ptr [edx+62h], 0
		mov	[esp+4], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_A8], 0Eh
		call	sub_6ED94530
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_5C]
		mov	[esp+4], eax
		mov	[ebp+var_A8], 3
		mov	[esp], ecx
		call	sub_6ED60A80
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_A8], 0Eh
		call	sub_6ED94560
		jmp	loc_6ED61B0D
; ---------------------------------------------------------------------------

loc_6ED61F4D:				; CODE XREF: sub_6ED61480+A5Fj
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_54]
		mov	ds:byte_6EDA8008, 0
		mov	eax, [edx+7Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx+34h]
		mov	ecx, [ebp+arg_0]
		push	eax
		lea	eax, [ebp+var_54]
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	[ebp+var_A8], 4
		call	sub_6ED60A80
		lea	eax, [ebp+var_54]
		mov	[esp], eax
		mov	[ebp+var_A8], 0Eh
		call	sub_6ED94560
		jmp	loc_6ED61B0D
; ---------------------------------------------------------------------------

loc_6ED61FA0:				; CODE XREF: sub_6ED61480+9ACj
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_C]
		mov	[esp+8], eax
		lea	eax, [ebp+var_40]
		mov	dword ptr [esp+0Ch], 0
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_A8], 7
		call	sub_6ED61050
		test	al, al
		jz	loc_6ED61E7C
		lea	eax, [ebp+var_44]
		mov	[esp], eax
		mov	[ebp+var_A8], 8
		call	sub_6ED94560
		lea	eax, [ebp+var_40]
		mov	[esp], eax
		mov	[ebp+var_A8], 0Eh
		call	sub_6ED94560
		jmp	loc_6ED618F3
; ---------------------------------------------------------------------------

loc_6ED62002:				; CODE XREF: sub_6ED61480+5C2j
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_60]
		mov	[ebp+var_60], offset aExternalPars_0 ; "external parsed	general	entity referenc"...
		mov	byte ptr [edx+62h], 0
		mov	[esp+4], eax
		lea	eax, [ebp+var_64]
		mov	[esp], eax
		mov	[ebp+var_A8], 0Eh
		call	sub_6ED94530
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_64]
		mov	[esp+4], eax
		mov	[ebp+var_A8], 2
		mov	[esp], ecx
		call	sub_6ED60A80
		lea	eax, [ebp+var_64]
		mov	[esp], eax
		mov	[ebp+var_A8], 0Eh
		call	sub_6ED94560
		jmp	loc_6ED61B0D
; ---------------------------------------------------------------------------

loc_6ED62062:				; CODE XREF: sub_6ED61480+5B9j
		mov	eax, [ebp+arg_0]
		mov	word ptr [esp+4], 26h
		mov	[ebp+var_A8], 0Eh
		mov	[esp], eax
		call	sub_6ED593D0
		mov	[ebp+var_D0], 0
		jmp	short loc_6ED620B8
; ---------------------------------------------------------------------------

loc_6ED6208A:				; CODE XREF: sub_6ED61480+C44j
		mov	eax, [eax+0Ch]
		mov	edx, [ebp+var_D0]
		mov	ecx, [ebp+arg_0]
		movzx	eax, word ptr [eax+edx*2]
		mov	[esp], ecx
		mov	[ebp+var_A8], 0Eh
		mov	[esp+4], ax
		call	sub_6ED593D0
		add	[ebp+var_D0], 1

loc_6ED620B8:				; CODE XREF: sub_6ED61480+C08j
		mov	eax, [ebp+var_C]
		mov	edx, [ebp+var_D0]
		cmp	edx, [eax+8]
		jl	short loc_6ED6208A
		jmp	loc_6ED61C2C
; ---------------------------------------------------------------------------

loc_6ED620CB:				; CODE XREF: sub_6ED61480+84Cj
		mov	ecx, eax
		mov	eax, [eax+64h]
		cmp	eax, 2
		jz	loc_6ED6241E
		test	eax, eax
		jnz	loc_6ED623CA
		mov	edx, [ebp+arg_0]
		cmp	byte ptr [edx+50h], 0
		jz	loc_6ED623CA
		cmp	byte ptr [edx+42h], 0
		jz	loc_6ED6235C

loc_6ED620F8:				; CODE XREF: sub_6ED61480+F29j
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+7Ch]
		test	eax, eax
		jz	loc_6ED623AF
		mov	eax, [eax]
		mov	eax, [eax+24h]
		mov	[esp], ecx
		mov	[ebp+var_A8], 0Eh
		mov	[ebp+var_DC], eax
		call	sub_6ED59310
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+7Ch]
		mov	[esp+4], eax
		mov	[esp], edx
		call	[ebp+var_DC]
		test	al, al
		jnz	loc_6ED623AF
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_30]
		mov	eax, [edx+7Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx+34h]
		push	ecx
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_30]
		mov	[esp+4], eax
		mov	[ebp+var_A8], 0Bh
		mov	[esp], ecx
		call	sub_6ED60A80
		lea	eax, [ebp+var_30]
		mov	[esp], eax
		mov	[ebp+var_A8], 0Eh
		call	sub_6ED94560
		jmp	loc_6ED61B0D
; ---------------------------------------------------------------------------

loc_6ED6218A:				; DATA XREF: sub_6ED61480+2Fo
		add	ebp, 8
		mov	eax, [ebp+var_A8]
		mov	ecx, [ebp+var_A4]
		cmp	eax, 1
		mov	[ebp+var_E4], ecx
		jz	loc_6ED62328
		cmp	eax, 2
		jz	loc_6ED6230E
		cmp	eax, 3
		jz	loc_6ED622F4
		cmp	eax, 4
		lea	esi, [esi+0]
		jz	loc_6ED622DD
		cmp	eax, 5
		jz	loc_6ED62299
		cmp	eax, 6
		jz	loc_6ED622AE
		cmp	eax, 7
		nop
		lea	esi, [esi+0]
		jz	loc_6ED622C3
		cmp	eax, 8
		jz	loc_6ED62282
		cmp	eax, 9
		jz	short loc_6ED6226B
		cmp	eax, 0Ah
		jz	short loc_6ED62254
		cmp	eax, 0Bh
		lea	esi, [esi+0]
		jz	short loc_6ED62227
		cmp	eax, 0Ch
		jz	loc_6ED62342
		cmp	eax, 0Dh
		xchg	ax, ax
		jz	short loc_6ED62227
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		mov	[ebp+var_A8], 0
		call	sub_6ED94560

loc_6ED62227:				; CODE XREF: sub_6ED61480+D80j
					; sub_6ED61480+D90j ...
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_A8], 0
		call	sub_6ED94560
		mov	eax, [ebp+var_E4]
		mov	[ebp+var_A8], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED62254:				; CODE XREF: sub_6ED61480+D77j
		lea	eax, [ebp+var_30]
		mov	[esp], eax
		mov	[ebp+var_A8], 0
		call	sub_6ED94560
		jmp	short loc_6ED62227
; ---------------------------------------------------------------------------

loc_6ED6226B:				; CODE XREF: sub_6ED61480+D72j
		lea	eax, [ebp+var_34]
		mov	[esp], eax
		mov	[ebp+var_A8], 0
		call	sub_6ED94560
		jmp	short loc_6ED62227
; ---------------------------------------------------------------------------

loc_6ED62282:				; CODE XREF: sub_6ED61480+D69j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_A8], 0
		call	sub_6ED94560
		jmp	short loc_6ED62227
; ---------------------------------------------------------------------------

loc_6ED62299:				; CODE XREF: sub_6ED61480+D49j
		lea	eax, [ebp+var_48]
		mov	[esp], eax
		mov	[ebp+var_A8], 0
		call	sub_6ED94560

loc_6ED622AE:				; CODE XREF: sub_6ED61480+D52j
					; sub_6ED61480+E72j
		lea	eax, [ebp+var_44]
		mov	[esp], eax
		mov	[ebp+var_A8], 0
		call	sub_6ED94560

loc_6ED622C3:				; CODE XREF: sub_6ED61480+D60j
		lea	eax, [ebp+var_40]
		mov	[esp], eax
		mov	[ebp+var_A8], 0
		call	sub_6ED94560
		jmp	loc_6ED62227
; ---------------------------------------------------------------------------

loc_6ED622DD:				; CODE XREF: sub_6ED61480+D40j
		lea	eax, [ebp+var_50]
		mov	[esp], eax
		mov	[ebp+var_A8], 0
		call	sub_6ED94560
		jmp	short loc_6ED622AE
; ---------------------------------------------------------------------------

loc_6ED622F4:				; CODE XREF: sub_6ED61480+D34j
		lea	eax, [ebp+var_54]
		mov	[esp], eax
		mov	[ebp+var_A8], 0
		call	sub_6ED94560
		jmp	loc_6ED62227
; ---------------------------------------------------------------------------

loc_6ED6230E:				; CODE XREF: sub_6ED61480+D2Bj
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_A8], 0
		call	sub_6ED94560
		jmp	loc_6ED62227
; ---------------------------------------------------------------------------

loc_6ED62328:				; CODE XREF: sub_6ED61480+D22j
		lea	eax, [ebp+var_64]
		mov	[esp], eax
		mov	[ebp+var_A8], 0
		call	sub_6ED94560
		jmp	loc_6ED62227
; ---------------------------------------------------------------------------

loc_6ED62342:				; CODE XREF: sub_6ED61480+D85j
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_A8], 0
		call	sub_6ED94560
		jmp	loc_6ED62227
; ---------------------------------------------------------------------------

loc_6ED6235C:				; CODE XREF: sub_6ED61480+C72j
		mov	[esp], edx
		mov	[ebp+var_A8], 0Ch
		call	sub_6ED59310
		lea	edx, [ebp+var_2C]
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZNK7QString10simplifiedEv
		push	eax
		mov	eax, [ebp+var_2C]
		cmp	dword ptr [eax+8], 0
		lea	eax, [ebp+var_2C]
		mov	[esp], eax
		setnz	[ebp+var_DD]
		mov	[ebp+var_A8], 0Eh
		call	sub_6ED94560
		cmp	[ebp+var_DD], 0
		jnz	loc_6ED620F8

loc_6ED623AF:				; CODE XREF: sub_6ED61480+C80j
					; sub_6ED61480+CB8j
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+6C4h], 0
		mov	dword ptr [eax+6C0h], 0
		mov	byte ptr [eax+50h], 0

loc_6ED623CA:				; CODE XREF: sub_6ED61480+C5Bj
					; sub_6ED61480+C68j
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_AD], 1
		cmp	dword ptr [edx+7Ch], 0
		jz	loc_6ED61543
		mov	eax, [edx+7Ch]
		lea	ecx, [ebp+var_C]
		cmp	dword ptr [edx+64h], 0
		mov	edx, [eax]
		mov	[esp+4], ecx
		mov	[esp], eax
		setz	ds:byte_6EDA8008
		mov	eax, [edx+30h]
		mov	[ebp+var_A8], 0Eh
		call	eax
		test	al, al
		jz	short loc_6ED62484
		mov	ds:byte_6EDA8008, 0
		mov	[ebp+var_AD], 1
		jmp	loc_6ED61543
; ---------------------------------------------------------------------------

loc_6ED6241E:				; CODE XREF: sub_6ED61480+C53j
		mov	word ptr [esp+4], 26h
		mov	[esp], ecx
		mov	[ebp+var_A8], 0Eh
		call	sub_6ED593D0
		mov	[ebp+var_D4], 0
		jmp	short loc_6ED62471
; ---------------------------------------------------------------------------

loc_6ED62443:				; CODE XREF: sub_6ED61480+FFDj
		mov	eax, [eax+0Ch]
		mov	edx, [ebp+var_D4]
		mov	ecx, [ebp+arg_0]
		movzx	eax, word ptr [eax+edx*2]
		mov	[esp], ecx
		mov	[ebp+var_A8], 0Eh
		mov	[esp+4], ax
		call	sub_6ED593D0
		add	[ebp+var_D4], 1

loc_6ED62471:				; CODE XREF: sub_6ED61480+FC1j
		mov	eax, [ebp+var_C]
		mov	edx, [ebp+var_D4]
		cmp	edx, [eax+8]
		jl	short loc_6ED62443
		jmp	loc_6ED61C2C
; ---------------------------------------------------------------------------

loc_6ED62484:				; CODE XREF: sub_6ED61480+F89j
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_34]
		mov	ds:byte_6EDA8008, 0
		mov	eax, [edx+7Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx+34h]
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_34]
		push	edx
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	[ebp+var_A8], 0Ah
		call	sub_6ED60A80
		lea	eax, [ebp+var_34]
		mov	[esp], eax
		mov	[ebp+var_A8], 0Eh
		call	sub_6ED94560
		jmp	loc_6ED61B0D
sub_6ED61480	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED624E0	proc near		; CODE XREF: sub_6ED6A6E0+2D1p
					; sub_6ED6A6E0+5E5p

var_61		= byte ptr -61h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A76A
		mov	[ebp+var_28], offset sub_6ED62846
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+14h]
		mov	ecx, [eax+8]
		test	ecx, ecx
		mov	[ebp+var_50], ecx
		jnz	short loc_6ED62535
		nop

loc_6ED62520:				; CODE XREF: sub_6ED624E0+1A6j
					; sub_6ED624E0+21Fj
		mov	[ebp+var_61], 1

loc_6ED62524:				; CODE XREF: sub_6ED624E0+2E5j
					; sub_6ED624E0+307j ...
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_61]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED62535:				; CODE XREF: sub_6ED624E0+3Dj
		add	edx, 14h
		mov	[ebp+var_54], edx
		jmp	loc_6ED62692
; ---------------------------------------------------------------------------

loc_6ED62540:				; CODE XREF: sub_6ED624E0+23Aj
					; sub_6ED624E0+299j
		mov	eax, [eax]
		mov	ecx, [ebp+arg_0]
		mov	eax, [eax+24h]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[ebp+var_60], eax
		call	sub_6ED59310
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+7Ch]
		mov	[esp+4], eax
		mov	[esp], edx
		call	[ebp+var_60]
		test	al, al
		jz	loc_6ED627EC

loc_6ED62572:				; CODE XREF: sub_6ED624E0+22Dj
					; sub_6ED624E0+28Dj
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+6C4h], 0
		mov	edx, eax
		mov	dword ptr [eax+6C0h], 0
		mov	eax, [eax+8Ch]
		test	eax, eax
		jz	loc_6ED62628
		mov	eax, [eax]
		mov	eax, [eax+14h]
		mov	[ebp+var_58], eax
		mov	eax, [edx+14h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED625D1
		mov	edx, [eax+4]
		mov	ecx, [ebp+var_54]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_6ED96A70
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+14h]

loc_6ED625D1:				; CODE XREF: sub_6ED624E0+C9j
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED625F8
		mov	edx, [eax+4]
		mov	ecx, [ebp+var_54]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_6ED96A70

loc_6ED625F8:				; CODE XREF: sub_6ED624E0+F6j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+14h]
		mov	ecx, [edx+8Ch]
		mov	edx, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		lea	edx, [edx+edx*2-3]
		lea	eax, [eax+edx*4+10h]
		mov	[esp+4], eax
		call	[ebp+var_58]
		test	al, al
		jz	loc_6ED62780

loc_6ED62628:				; CODE XREF: sub_6ED624E0+B3j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+14h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED62655
		mov	edx, [eax+4]
		mov	ecx, [ebp+var_54]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_6ED96A70

loc_6ED62655:				; CODE XREF: sub_6ED624E0+153j
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_54]
		mov	eax, [edx+14h]
		mov	edx, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		lea	edx, [edx+edx*2]
		lea	eax, [eax+edx*4+10h]
		mov	[esp+8], eax
		sub	eax, 0Ch
		mov	[esp+4], eax
		call	sub_6ED966A0
		sub	[ebp+var_50], 1
		jz	loc_6ED62520
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+14h]

loc_6ED62692:				; CODE XREF: sub_6ED624E0+5Bj
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED626BF
		mov	edx, [eax+4]
		mov	ecx, [ebp+var_54]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_6ED96A70
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+14h]

loc_6ED626BF:				; CODE XREF: sub_6ED624E0+1B7j
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED626E6
		mov	edx, [eax+4]
		mov	ecx, [ebp+var_54]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_6ED96A70

loc_6ED626E6:				; CODE XREF: sub_6ED624E0+1E4j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+14h]
		mov	edx, [eax+8]
		lea	edx, [edx+edx*2-3]
		lea	eax, [eax+edx*4]
		mov	edx, [eax+14h]
		mov	eax, [eax+18h]
		cmp	eax, [edx+8]
		jnz	loc_6ED62520
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+7Ch]
		test	eax, eax
		jz	loc_6ED62572
		mov	edx, [ebp+arg_0]
		cmp	byte ptr [edx+42h], 0
		jnz	loc_6ED62540
		mov	[esp], edx
		mov	[ebp+var_48], 3
		call	sub_6ED59310
		lea	ecx, [ebp+var_C]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	ds:_ZNK7QString10simplifiedEv
		mov	eax, [ebp+var_C]
		sub	esp, 4
		mov	edx, [eax+8]
		mov	[ebp+var_5C], edx
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED62768
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED62768:				; CODE XREF: sub_6ED624E0+273j
		mov	edx, [ebp+var_5C]
		test	edx, edx
		jz	loc_6ED62572
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+7Ch]
		jmp	loc_6ED62540
; ---------------------------------------------------------------------------
		align 10h

loc_6ED62780:				; CODE XREF: sub_6ED624E0+142j
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+8Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		call	dword ptr [edx+24h]
		mov	ecx, [ebp+arg_0]
		lea	edx, [ebp+var_14]
		mov	[ebp+var_48], 1
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], ecx
		call	sub_6ED60A80
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED627D0

loc_6ED627C1:				; CODE XREF: sub_6ED624E0+348j
		mov	[ebp+var_61], 0
		jmp	loc_6ED62524
; ---------------------------------------------------------------------------
		align 10h

loc_6ED627D0:				; CODE XREF: sub_6ED624E0+2DFj
		mov	eax, [ebp+var_14]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_61], 0
		jmp	loc_6ED62524
; ---------------------------------------------------------------------------

loc_6ED627EC:				; CODE XREF: sub_6ED624E0+8Cj
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_10]
		mov	eax, [edx+7Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx+34h]
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_10]
		mov	[ebp+var_48], 2
		sub	esp, 4
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_6ED60A80
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED627C1
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_61], 0
		jmp	loc_6ED62524
sub_6ED624E0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED62846	proc near		; DATA XREF: sub_6ED624E0+20o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-68h], edx
		jz	short loc_6ED62880
		cmp	eax, 2
		jz	short loc_6ED62892
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-68h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED62880:				; CODE XREF: sub_6ED62846+Fj
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED62892:				; CODE XREF: sub_6ED62846+14j
		mov	ecx, [ebp-68h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
sub_6ED62846	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED628B0	proc near		; CODE XREF: sub_6ED6B5F0+2FDp

var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_82		= byte ptr -82h
var_81		= byte ptr -81h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0B8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset dword_6ED9A774
		mov	[ebp+var_38], offset sub_6ED62F81
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED59250
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_7C], eax
		mov	eax, [ecx]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED62919
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[esp+4], eax
		call	sub_6ED960D0

loc_6ED62919:				; CODE XREF: sub_6ED628B0+51j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	edx, [eax+8]
		mov	eax, [eax+edx*4+0Ch]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx]
		mov	eax, [edx+8]
		sub	eax, 1
		mov	[ebp+var_78], eax
		mov	eax, [edx+4]
		cmp	[ebp+var_78], eax
		jg	loc_6ED62D6E
		test	byte ptr [edx+0Ch], 2
		jz	loc_6ED62D61

loc_6ED62952:				; CODE XREF: sub_6ED628B0+4B8j
					; sub_6ED628B0+4E9j
		mov	edx, [ebp+var_78]
		mov	ecx, [ebp+arg_0]
		mov	[esp+8], eax
		mov	[ebp+var_58], 1
		mov	[esp+4], edx
		mov	[esp], ecx
		call	sub_6ED960D0
		mov	eax, [ebp+var_7C]
		mov	[ebp+var_58], 9
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZNK7QStringeqERKS_
		mov	[ebp+var_81], al
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED629AF
		mov	eax, [ebp+var_C]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED629AF:				; CODE XREF: sub_6ED628B0+EAj
		cmp	[ebp+var_81], 0
		jz	loc_6ED62DA0
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+7Ch]
		test	edx, edx
		jz	loc_6ED62AC3
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_14], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ebp+var_18], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+arg_0]
		cmp	byte ptr [ecx+40h], 0
		jnz	loc_6ED62CB4

loc_6ED629EE:				; CODE XREF: sub_6ED628B0+435j
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_7C]
		mov	eax, [edx+7Ch]
		mov	edx, [eax]
		mov	[esp+0Ch], ecx
		lea	ecx, [ebp+var_18]
		mov	[esp+8], ecx
		lea	ecx, [ebp+var_14]
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	eax, [edx+20h]
		mov	[ebp+var_58], 6
		call	eax
		test	al, al
		jnz	loc_6ED62AA1
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_1C]
		mov	eax, [edx+7Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx+34h]
		mov	ecx, [ebp+arg_0]
		sub	esp, 4
		lea	eax, [ebp+var_1C]
		mov	[esp+4], eax
		mov	[ebp+var_58], 5
		mov	[esp], ecx
		call	sub_6ED60A80
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED62E08

loc_6ED62A64:				; CODE XREF: sub_6ED628B0+56Bj
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED62E40

loc_6ED62A75:				; CODE XREF: sub_6ED628B0+5A3j
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED62E20

loc_6ED62A86:				; CODE XREF: sub_6ED628B0+533j
		mov	[ebp+var_82], 0

loc_6ED62A8D:				; CODE XREF: sub_6ED628B0+3FFj
					; sub_6ED628B0+4A0j ...
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_82]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED62AA1:				; CODE XREF: sub_6ED628B0+16Cj
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED62E70

loc_6ED62AB2:				; CODE XREF: sub_6ED628B0+5D3j
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED62E58

loc_6ED62AC3:				; CODE XREF: sub_6ED628B0+114j
					; sub_6ED628B0+5BBj
		mov	edx, [ebp+arg_0]
		cmp	byte ptr [edx+40h], 0
		jz	loc_6ED62D55
		mov	eax, ds:_ZN8QMapData11shared_nullE
		mov	[ebp+var_20], eax
		lock inc dword ptr [eax+34h]
		setnz	dl
		mov	[ebp+var_24], eax
		lock inc dword ptr [eax+34h]
		setnz	dl
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+7Ch]
		test	eax, eax
		jz	short loc_6ED62B3E
		mov	eax, [ecx+58h]
		mov	eax, [eax+4]
		cmp	[ebp+var_20], eax
		mov	[ebp+var_88], eax
		jz	short loc_6ED62B3E
		lock inc dword ptr [eax+34h]
		setnz	al
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jz	loc_6ED62F63

loc_6ED62B1D:				; CODE XREF: sub_6ED628B0+6CCj
		mov	eax, [ebp+var_88]
		mov	[ebp+var_20], eax
		test	byte ptr [eax+44h], 2
		jnz	short loc_6ED62B3E
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_58], 3
		call	sub_6ED925B0

loc_6ED62B3E:				; CODE XREF: sub_6ED628B0+241j
					; sub_6ED628B0+252j ...
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_58], 3
		add	eax, 58h
		mov	[esp], eax
		call	_ZN20QXmlNamespaceSupport10popContextEv
		mov	edx, [ebp+arg_0]
		mov	ecx, [edx+7Ch]
		test	ecx, ecx
		jz	loc_6ED62CEA
		mov	eax, [edx+58h]
		mov	eax, [eax+4]
		cmp	[ebp+var_24], eax
		mov	[ebp+var_80], eax
		jz	short loc_6ED62BAC
		lock inc dword ptr [eax+34h]
		setnz	al
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jz	loc_6ED62F4C

loc_6ED62B88:				; CODE XREF: sub_6ED628B0+6AEj
		mov	ecx, [ebp+var_80]
		mov	[ebp+var_24], ecx
		test	byte ptr [ecx+44h], 2
		jnz	short loc_6ED62BAC
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		mov	[ebp+var_58], 3
		call	sub_6ED925B0
		mov	eax, [ebp+var_24]
		mov	[ebp+var_80], eax

loc_6ED62BAC:				; CODE XREF: sub_6ED628B0+2BDj
					; sub_6ED628B0+2E2j
		mov	eax, [ebp+var_20]
		mov	ecx, [ebp+var_80]
		mov	edx, [eax+3Ch]
		cmp	edx, [ecx+3Ch]
		jz	loc_6ED62CF0
		mov	edx, [eax+4]
		cmp	eax, edx
		mov	[ebp+var_68], edx
		jz	loc_6ED62CF0
		mov	ecx, ds:_ZNK7QStringltERKS_
		mov	[ebp+var_8C], ecx
		jmp	short loc_6ED62BF2
; ---------------------------------------------------------------------------
		align 10h

loc_6ED62BE0:				; CODE XREF: sub_6ED628B0+356j
					; sub_6ED628B0+38Fj
		mov	eax, [ebp+var_68]
		mov	eax, [eax+4]
		cmp	eax, [ebp+var_20]
		mov	[ebp+var_68], eax
		jz	loc_6ED62F20

loc_6ED62BF2:				; CODE XREF: sub_6ED628B0+328j
					; sub_6ED628B0+663j
		mov	eax, [ebp+var_68]
		mov	edx, [ebp+var_68]
		sub	eax, 8
		mov	[ebp+var_74], eax
		mov	eax, [edx-8]
		mov	eax, [eax+8]
		test	eax, eax
		jz	short loc_6ED62BE0
		mov	eax, [ebp+var_24]
		mov	ecx, [ebp+var_74]
		mov	edx, [eax+38h]
		mov	[ebp+var_70], ecx
		test	edx, edx
		mov	[ebp+var_64], edx
		jns	loc_6ED62E88

loc_6ED62C1F:				; CODE XREF: sub_6ED628B0+620j
					; sub_6ED628B0+645j ...
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_74]
		mov	eax, [edx+7Ch]
		mov	edx, [eax]
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	eax, [edx+18h]
		mov	[ebp+var_58], 3
		call	eax
		test	al, al
		jnz	short loc_6ED62BE0
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_28]
		mov	eax, [edx+7Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx+34h]
		mov	ecx, [ebp+arg_0]
		sub	esp, 4
		lea	eax, [ebp+var_28]
		mov	[esp+4], eax
		mov	[ebp+var_58], 2
		mov	[esp], ecx
		call	sub_6ED60A80
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_58], 3
		call	sub_6ED94560
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		mov	[ebp+var_58], 4
		call	sub_6ED92880
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED92880
		mov	[ebp+var_82], 0
		jmp	loc_6ED62A8D
; ---------------------------------------------------------------------------

loc_6ED62CB4:				; CODE XREF: sub_6ED628B0+138j
		lea	eax, [ebp+var_18]
		mov	[esp+10h], eax
		lea	eax, [ebp+var_14]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+var_7C]
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_58], 6
		mov	[esp+4], eax
		mov	eax, ecx
		add	eax, 58h
		mov	[esp], eax
		call	_ZNK20QXmlNamespaceSupport11processNameERK7QStringbRS0_S3_
		jmp	loc_6ED629EE
; ---------------------------------------------------------------------------

loc_6ED62CEA:				; CODE XREF: sub_6ED628B0+2ABj
		mov	ecx, [ebp+var_24]
		mov	[ebp+var_80], ecx

loc_6ED62CF0:				; CODE XREF: sub_6ED628B0+308j
					; sub_6ED628B0+316j
		mov	ecx, [ebp+var_80]
		test	ecx, ecx
		jz	short loc_6ED62D1E

loc_6ED62CF7:				; CODE XREF: sub_6ED628B0+67Bj
		mov	edx, [ebp+var_80]
		lock dec dword ptr [edx+34h]
		setnz	al
		test	al, al
		jnz	short loc_6ED62D1E
		mov	eax, [ebp+var_24]
		mov	[ebp+var_58], 4
		mov	[esp+4], eax
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		call	sub_6ED92800

loc_6ED62D1E:				; CODE XREF: sub_6ED628B0+445j
					; sub_6ED628B0+453j ...
		mov	eax, [ebp+var_20]
		test	eax, eax
		jz	short loc_6ED62D55
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED62D55
		mov	eax, [ebp+var_20]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		call	sub_6ED92800
		mov	[ebp+var_82], 1
		jmp	loc_6ED62A8D
; ---------------------------------------------------------------------------

loc_6ED62D55:				; CODE XREF: sub_6ED628B0+21Aj
					; sub_6ED628B0+473j ...
		mov	[ebp+var_82], 1
		jmp	loc_6ED62A8D
; ---------------------------------------------------------------------------

loc_6ED62D61:				; CODE XREF: sub_6ED628B0+9Cj
		mov	edx, eax
		sar	edx, 1
		cmp	[ebp+var_78], edx
		jge	loc_6ED62952

loc_6ED62D6E:				; CODE XREF: sub_6ED628B0+92j
		mov	eax, [ebp+var_78]
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 4
		mov	dword ptr [esp], 14h
		mov	[esp+4], eax
		mov	[ebp+var_58], 1
		call	ds:_ZN11QVectorData4growEiiib
		jmp	loc_6ED62952
; ---------------------------------------------------------------------------
		align 10h

loc_6ED62DA0:				; CODE XREF: sub_6ED628B0+106j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aTagMismatch ; "tag mismatch"
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_58], 8
		mov	[esp], ecx
		mov	[ebp+var_10], eax
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		call	sub_6ED60A80
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED62A86
		mov	eax, [ebp+var_10]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_82], 0
		jmp	loc_6ED62A8D
; ---------------------------------------------------------------------------

loc_6ED62E08:				; CODE XREF: sub_6ED628B0+1AEj
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_58], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED62A64
; ---------------------------------------------------------------------------

loc_6ED62E20:				; CODE XREF: sub_6ED628B0+1D0j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_82], 0
		jmp	loc_6ED62A8D
; ---------------------------------------------------------------------------
		align 10h

loc_6ED62E40:				; CODE XREF: sub_6ED628B0+1BFj
		mov	eax, [ebp+var_18]
		mov	[ebp+var_58], 7
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED62A75
; ---------------------------------------------------------------------------

loc_6ED62E58:				; CODE XREF: sub_6ED628B0+20Dj
		mov	eax, [ebp+var_14]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED62AC3
; ---------------------------------------------------------------------------

loc_6ED62E70:				; CODE XREF: sub_6ED628B0+1FCj
		mov	eax, [ebp+var_18]
		mov	[ebp+var_58], 7
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED62AB2
; ---------------------------------------------------------------------------

loc_6ED62E88:				; CODE XREF: sub_6ED628B0+369j
		mov	[ebp+var_6C], eax
		nop
		lea	esi, [esi+0]

loc_6ED62E90:				; CODE XREF: sub_6ED628B0+68Fj
					; sub_6ED628B0+697j
		mov	ecx, [ebp+var_64]
		mov	edx, [ebp+var_6C]
		mov	ecx, [edx+ecx*4+4]
		cmp	ecx, eax
		mov	[ebp+var_60], ecx
		jz	short loc_6ED62EC4
		mov	eax, [ebp+var_70]
		mov	[ebp+var_58], 3
		mov	[esp+4], eax
		mov	eax, ecx
		sub	eax, 8
		mov	[esp], eax
		call	ds:_ZNK7QStringltERKS_
		test	al, al
		jnz	short loc_6ED62F36
		mov	eax, [ebp+var_24]

loc_6ED62EC4:				; CODE XREF: sub_6ED628B0+5EFj
		sub	[ebp+var_64], 1
		jns	short loc_6ED62F44
		cmp	[ebp+var_60], eax
		lea	esi, [esi+0]
		jz	loc_6ED62C1F
		mov	eax, [ebp+var_60]
		mov	ecx, [ebp+var_74]
		mov	[ebp+var_58], 3
		sub	eax, 8
		mov	[esp+4], eax
		mov	[esp], ecx
		call	[ebp+var_8C]
		test	al, al
		jnz	loc_6ED62C1F
		mov	eax, [ebp+var_60]
		cmp	[ebp+var_24], eax
		jz	loc_6ED62C1F
		mov	eax, [ebp+var_68]
		mov	eax, [eax+4]
		cmp	eax, [ebp+var_20]
		mov	[ebp+var_68], eax
		jnz	loc_6ED62BF2
		lea	esi, [esi+0]

loc_6ED62F20:				; CODE XREF: sub_6ED628B0+33Cj
		mov	edx, [ebp+var_24]
		mov	[ebp+var_80], edx
		mov	ecx, [ebp+var_80]
		test	ecx, ecx
		jnz	loc_6ED62CF7
		jmp	loc_6ED62D1E
; ---------------------------------------------------------------------------

loc_6ED62F36:				; CODE XREF: sub_6ED628B0+60Fj
		mov	edx, [ebp+var_60]
		mov	eax, [ebp+var_24]
		mov	[ebp+var_6C], edx
		jmp	loc_6ED62E90
; ---------------------------------------------------------------------------

loc_6ED62F44:				; CODE XREF: sub_6ED628B0+618j
		mov	eax, [ebp+var_24]
		jmp	loc_6ED62E90
; ---------------------------------------------------------------------------

loc_6ED62F4C:				; CODE XREF: sub_6ED628B0+2D2j
		mov	eax, [ebp+var_24]
		mov	[esp+4], eax
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		call	sub_6ED92800
		jmp	loc_6ED62B88
; ---------------------------------------------------------------------------

loc_6ED62F63:				; CODE XREF: sub_6ED628B0+267j
		mov	eax, [ebp+var_20]
		mov	[ebp+var_58], 3
		mov	[esp+4], eax
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		call	sub_6ED92800
		jmp	loc_6ED62B1D
sub_6ED628B0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED62F81	proc near		; DATA XREF: sub_6ED628B0+23o
		add	ebp, 8
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-90h], edx
		jz	short loc_6ED62FF9
		cmp	eax, 2
		jz	short loc_6ED6300B
		cmp	eax, 3
		jz	short loc_6ED6301D
		cmp	eax, 4
		jz	loc_6ED6306B
		cmp	eax, 5
		nop
		lea	esi, [esi+0]
		jz	loc_6ED6307D
		cmp	eax, 6
		jz	loc_6ED6308F
		cmp	eax, 7
		jz	loc_6ED630B6
		cmp	eax, 8
		nop
		lea	esi, [esi+0]
		jz	short loc_6ED63044
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-90h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED62FF9:				; CODE XREF: sub_6ED62F81+12j
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560

loc_6ED6300B:				; CODE XREF: sub_6ED62F81+17j
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED92880

loc_6ED6301D:				; CODE XREF: sub_6ED62F81+1Cj
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED92880
		mov	ecx, [ebp-90h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED63044:				; CODE XREF: sub_6ED62F81+4Fj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		mov	edx, [ebp-90h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED6306B:				; CODE XREF: sub_6ED62F81+21j
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560

loc_6ED6307D:				; CODE XREF: sub_6ED62F81+2Fj
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560

loc_6ED6308F:				; CODE XREF: sub_6ED62F81+38j
		lea	eax, [ebp-14h]

loc_6ED63092:				; CODE XREF: sub_6ED62F81+138j
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		mov	eax, [ebp-90h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED630B6:				; CODE XREF: sub_6ED62F81+41j
		lea	eax, [ebp-10h]
		jmp	short loc_6ED63092
sub_6ED62F81	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED630C0	proc near		; CODE XREF: sub_6ED6B5F0+51Dp

var_F4		= dword	ptr -0F4h
var_EE		= byte ptr -0EEh
var_ED		= byte ptr -0EDh
var_EC		= dword	ptr -0ECh
var_E8		= dword	ptr -0E8h
var_E4		= dword	ptr -0E4h
var_E0		= dword	ptr -0E0h
var_DC		= dword	ptr -0DCh
var_D8		= dword	ptr -0D8h
var_D1		= byte ptr -0D1h
var_D0		= dword	ptr -0D0h
var_CC		= dword	ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B1		= byte ptr -0B1h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= byte ptr -8Ch
var_88		= dword	ptr -88h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= byte ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		lea	eax, [ebp+var_8]
		sub	esp, 110h
		mov	[ebp+var_6C], eax
		lea	eax, [ebp+var_8C]
		mov	[ebp+var_74], offset sub_6ED997C0
		mov	[ebp+var_70], offset word_6ED9A78A
		mov	[ebp+var_68], offset sub_6ED63DB7
		mov	[ebp+var_64], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_90], edx
		mov	[ebp+var_C], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	[ebp+var_10], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+7Ch]
		test	eax, eax
		jz	loc_6ED639B0
		cmp	byte ptr [ecx+40h], 0
		jz	loc_6ED63306
		mov	eax, [ecx]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED6315B
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_88], 12h
		mov	[esp+4], eax
		call	sub_6ED960D0
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx]

loc_6ED6315B:				; CODE XREF: sub_6ED630C0+74j
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED63185
		mov	edx, [eax+4]
		mov	esi, [ebp+arg_0]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], esi
		mov	[ebp+var_88], 12h
		mov	[esp+4], eax
		call	sub_6ED960D0

loc_6ED63185:				; CODE XREF: sub_6ED630C0+A0j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		add	edx, 58h
		mov	[ebp+var_C0], edx
		lea	edx, [ebp+var_10]
		mov	ecx, [ebp+var_C0]
		mov	[esp+10h], edx
		lea	edx, [ebp+var_C]
		mov	[esp+0Ch], edx
		mov	dword ptr [esp+8], 0
		mov	edx, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_88], 12h
		lea	eax, [eax+edx*4+0Ch]
		mov	[esp+4], eax
		call	_ZNK20QXmlNamespaceSupport11processNameERK7QStringbRS0_S3_
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx+7Ch]
		mov	eax, [eax]
		mov	eax, [eax+1Ch]
		mov	[ebp+var_D8], eax
		mov	eax, [ebx]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED631FE
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ebx
		mov	[esp+4], eax
		call	sub_6ED960D0
		mov	eax, [ebx]

loc_6ED631FE:				; CODE XREF: sub_6ED630C0+124j
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED63228
		mov	edx, [eax+4]
		mov	esi, [ebp+arg_0]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], esi
		mov	[ebp+var_88], 12h
		mov	[esp+4], eax
		call	sub_6ED960D0

loc_6ED63228:				; CODE XREF: sub_6ED630C0+143j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	ecx, edx
		add	ecx, 44h
		mov	edx, [edx+7Ch]
		mov	[esp+10h], ecx
		mov	ecx, [eax+8]
		mov	[esp], edx
		mov	[ebp+var_88], 12h
		lea	eax, [eax+ecx*4+0Ch]
		mov	[esp+0Ch], eax
		lea	eax, [ebp+var_10]
		mov	[esp+8], eax
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		call	[ebp+var_D8]
		test	al, al
		jnz	loc_6ED63637
		mov	ebx, [ebp+arg_0]
		lea	ecx, [ebp+var_14]
		mov	eax, [ebx+7Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx+34h]
		sub	esp, 4
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	[esp], ebx
		mov	[ebp+var_88], 11h
		call	sub_6ED60A80
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED63950

loc_6ED632AF:				; CODE XREF: sub_6ED630C0+384j
					; sub_6ED630C0+3A0j ...
		mov	[ebp+var_B1], 0

loc_6ED632B6:				; CODE XREF: sub_6ED630C0+888j
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED63465

loc_6ED632C7:				; CODE XREF: sub_6ED630C0+3BBj
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED632EA
		mov	eax, [ebp+var_C]
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED632EA:				; CODE XREF: sub_6ED630C0+212j
		lea	eax, [ebp+var_8C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_B1]
		lea	esp, [ebp-8]
		pop	ebx
		pop	esi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED63306:				; CODE XREF: sub_6ED630C0+67j
		mov	eax, [eax]
		mov	edx, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		mov	[ebp+var_D0], eax
		mov	eax, [edx]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED63345
		mov	edx, [eax+4]
		mov	ecx, [ebp+arg_0]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_88], 12h
		mov	[esp+4], eax
		call	sub_6ED960D0
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx]

loc_6ED63345:				; CODE XREF: sub_6ED630C0+25Bj
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED6336F
		mov	edx, [eax+4]
		mov	esi, [ebp+arg_0]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], esi
		mov	[ebp+var_88], 12h
		mov	[esp+4], eax
		call	sub_6ED960D0

loc_6ED6336F:				; CODE XREF: sub_6ED630C0+28Aj
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_90]
		mov	eax, [edx]
		mov	[ebp+var_38], ecx
		mov	edx, [eax+8]
		lea	edx, [eax+edx*4+0Ch]
		lock inc dword ptr [ecx]
		setnz	al
		mov	[ebp+var_34], ecx
		lock inc dword ptr [ecx]
		setnz	al
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx+7Ch]
		mov	ecx, ebx
		mov	[esp+0Ch], edx
		lea	edx, [ebp+var_38]
		add	ecx, 44h
		mov	[esp+8], edx
		lea	edx, [ebp+var_34]
		mov	[esp+10h], ecx
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_88], 8
		call	[ebp+var_D0]
		mov	[ebp+var_D1], al
		mov	eax, [ebp+var_34]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED63990

loc_6ED633DE:				; CODE XREF: sub_6ED630C0+8E6j
		mov	eax, [ebp+var_38]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED63970

loc_6ED633EF:				; CODE XREF: sub_6ED630C0+8C6j
		cmp	[ebp+var_D1], 0
		jnz	loc_6ED63480
		mov	esi, [ebp+arg_0]
		lea	ecx, [ebp+var_3C]
		mov	eax, [esi+7Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	eax, [edx+34h]
		mov	[ebp+var_88], 12h
		call	eax
		sub	esp, 4
		lea	eax, [ebp+var_3C]
		mov	[esp+4], eax
		mov	[esp], esi
		mov	[ebp+var_88], 7
		call	sub_6ED60A80
		mov	eax, [ebp+var_3C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED632AF
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_88], 12h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED632AF
; ---------------------------------------------------------------------------

loc_6ED63465:				; CODE XREF: sub_6ED630C0+201j
		mov	eax, [ebp+var_10]
		mov	[ebp+var_88], 13h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED632C7
; ---------------------------------------------------------------------------

loc_6ED63480:				; CODE XREF: sub_6ED630C0+336j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+7Ch]
		mov	eax, [eax]
		mov	eax, [eax+20h]
		mov	[ebp+var_EC], eax
		mov	eax, [edx]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED634BD
		mov	edx, [eax+4]
		mov	ecx, [ebp+arg_0]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_88], 12h
		mov	[esp+4], eax
		call	sub_6ED960D0

loc_6ED634BD:				; CODE XREF: sub_6ED630C0+3D8j
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx]
		mov	edx, [eax+8]
		mov	eax, [eax+edx*4+0Ch]
		mov	[ebp+var_48], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebx]
		mov	eax, [edx+8]
		sub	eax, 1
		mov	[ebp+var_E0], eax
		mov	eax, [edx+4]
		cmp	[ebp+var_E0], eax
		jg	short loc_6ED634FD
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_6ED6352E
		mov	edx, eax
		sar	edx, 1
		cmp	[ebp+var_E0], edx
		jge	short loc_6ED6352E

loc_6ED634FD:				; CODE XREF: sub_6ED630C0+429j
		mov	esi, [ebp+var_E0]
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 4
		mov	dword ptr [esp], 14h
		mov	[esp+4], esi
		mov	[ebp+var_88], 1
		call	ds:_ZN11QVectorData4growEiiib

loc_6ED6352E:				; CODE XREF: sub_6ED630C0+42Fj
					; sub_6ED630C0+43Bj
		mov	[esp+8], eax
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_E0]
		mov	[ebp+var_88], 1
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_6ED960D0
		mov	ebx, [ebp+var_90]
		mov	[ebp+var_44], ebx
		lock inc dword ptr [ebx]
		setnz	al
		mov	[ebp+var_40], ebx
		lock inc dword ptr [ebx]
		setnz	al
		mov	esi, [ebp+arg_0]
		lea	edx, [ebp+var_48]
		mov	eax, [esi+7Ch]
		mov	[esp+0Ch], edx
		lea	edx, [ebp+var_44]
		mov	[esp+8], edx
		lea	edx, [ebp+var_40]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_88], 4
		call	[ebp+var_EC]
		mov	[ebp+var_ED], al
		mov	eax, [ebp+var_40]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED63BB0

loc_6ED635AE:				; CODE XREF: sub_6ED630C0+B06j
		mov	eax, [ebp+var_44]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED63B90

loc_6ED635BF:				; CODE XREF: sub_6ED630C0+AE6j
		mov	eax, [ebp+var_48]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED63B70

loc_6ED635D0:				; CODE XREF: sub_6ED630C0+AC6j
		cmp	[ebp+var_ED], 0
		jnz	loc_6ED63941
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_4C]
		mov	eax, [edx+7Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	eax, [edx+34h]
		mov	[ebp+var_88], 12h
		call	eax
		mov	ecx, [ebp+arg_0]
		sub	esp, 4
		lea	eax, [ebp+var_4C]
		mov	[esp+4], eax
		mov	[ebp+var_88], 3
		mov	[esp], ecx
		call	sub_6ED60A80
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_88], 12h
		call	sub_6ED94560
		jmp	loc_6ED632AF
; ---------------------------------------------------------------------------

loc_6ED63637:				; CODE XREF: sub_6ED630C0+1A7j
		mov	esi, [ebp+arg_0]
		mov	eax, [esi+7Ch]
		mov	eax, [eax]
		mov	eax, [eax+20h]
		mov	[ebp+var_F4], eax
		mov	eax, [esi]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED63671
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], esi
		mov	[ebp+var_88], 12h
		mov	[esp+4], eax
		call	sub_6ED960D0

loc_6ED63671:				; CODE XREF: sub_6ED630C0+58Fj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	edx, [eax+8]
		mov	eax, [eax+edx*4+0Ch]
		mov	[ebp+var_18], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx]
		mov	eax, [edx+8]
		sub	eax, 1
		mov	[ebp+var_E4], eax
		mov	eax, [edx+4]
		cmp	[ebp+var_E4], eax
		jg	short loc_6ED636B4
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_6ED636E5
		mov	edx, eax
		sar	edx, 1
		cmp	[ebp+var_E4], edx
		jge	short loc_6ED636E5

loc_6ED636B4:				; CODE XREF: sub_6ED630C0+5E0j
		mov	ebx, [ebp+var_E4]
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 4
		mov	dword ptr [esp], 14h
		mov	[esp+4], ebx
		mov	[ebp+var_88], 2
		call	ds:_ZN11QVectorData4growEiiib

loc_6ED636E5:				; CODE XREF: sub_6ED630C0+5E6j
					; sub_6ED630C0+5F2j
		mov	[esp+8], eax
		mov	esi, [ebp+var_E4]
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_88], 2
		mov	[esp+4], esi
		mov	[esp], eax
		call	sub_6ED960D0
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+7Ch]
		lea	edx, [ebp+var_18]
		mov	[esp+0Ch], edx
		lea	edx, [ebp+var_10]
		mov	[esp+8], edx
		lea	edx, [ebp+var_C]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_88], 10h
		call	[ebp+var_F4]
		mov	[ebp+var_EE], al
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED63BD0

loc_6ED6374D:				; CODE XREF: sub_6ED630C0+B26j
		cmp	[ebp+var_EE], 0
		jz	loc_6ED63BEB
		mov	eax, ds:_ZN9QListData11shared_nullE
		mov	[ebp+var_20], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ebp+var_24], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	esi, [ebp+arg_0]
		mov	ecx, [esi+7Ch]
		test	ecx, ecx
		jz	short loc_6ED637E8
		mov	edx, [ebp+var_C0]
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_88], 0Dh
		mov	[esp+4], edx
		call	_ZNK20QXmlNamespaceSupport8prefixesEv
		mov	ecx, [ebp+var_28]
		sub	esp, 4
		mov	eax, [ebp+var_20]
		mov	[ebp+var_DC], ecx
		cmp	eax, ecx
		jz	short loc_6ED637DA
		lock inc dword ptr [ecx]
		setnz	al
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED63D1E

loc_6ED637C4:				; CODE XREF: sub_6ED630C0+C7Aj
		mov	ebx, [ebp+var_DC]
		mov	[ebp+var_20], ebx
		test	byte ptr [ebx+10h], 1
		jz	loc_6ED63CE3

loc_6ED637D7:				; CODE XREF: sub_6ED630C0+C38j
		mov	eax, [ebp+var_28]

loc_6ED637DA:				; CODE XREF: sub_6ED630C0+6EBj
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED63CC2

loc_6ED637E8:				; CODE XREF: sub_6ED630C0+6B9j
					; sub_6ED630C0+C1Ej
		mov	esi, [ebp+var_C0]
		mov	[ebp+var_88], 0Dh
		mov	[esp], esi
		call	_ZN20QXmlNamespaceSupport10popContextEv
		lea	eax, [ebp+var_2C]
		mov	[esp+4], esi
		mov	[esp], eax
		call	_ZNK20QXmlNamespaceSupport8prefixesEv
		mov	edx, [ebp+var_2C]
		sub	esp, 4
		mov	eax, [ebp+var_24]
		mov	[ebp+var_C8], edx
		cmp	eax, edx
		jz	short loc_6ED6384F
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED63CFD

loc_6ED63839:				; CODE XREF: sub_6ED630C0+C59j
		mov	ecx, [ebp+var_C8]
		mov	[ebp+var_24], ecx
		test	byte ptr [ecx+10h], 1
		jz	loc_6ED63CA8

loc_6ED6384C:				; CODE XREF: sub_6ED630C0+BFDj
		mov	eax, [ebp+var_2C]

loc_6ED6384F:				; CODE XREF: sub_6ED630C0+760j
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED63C45

loc_6ED6385D:				; CODE XREF: sub_6ED630C0+BA1j
		mov	eax, [ebp+var_20]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED6387F
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_88], 0Dh
		call	sub_6ED933E0
		mov	eax, [ebp+var_20]

loc_6ED6387F:				; CODE XREF: sub_6ED630C0+7A5j
		mov	edx, [ebp+var_20]
		mov	ecx, [edx+8]
		lea	ecx, [edx+ecx*4+14h]
		mov	[ebp+var_9C], ecx
		jmp	short loc_6ED638E1
; ---------------------------------------------------------------------------

loc_6ED63891:				; CODE XREF: sub_6ED630C0+859j
		mov	ebx, [ebp+var_98]
		lea	esi, [ebp+var_24]
		mov	dword ptr [esp+8], 1
		mov	[esp], esi
		mov	[ebp+var_88], 0Dh
		mov	[esp+4], ebx
		call	ds:_ZN9QtPrivate20QStringList_containsEPK11QStringListRK7QStringN2Qt15CaseSensitivityE
		test	al, al
		jnz	short loc_6ED638D7
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+7Ch]
		mov	edx, [eax]
		mov	[esp+4], ebx
		mov	[esp], eax
		call	dword ptr [edx+18h]
		test	al, al
		jz	loc_6ED63D3F

loc_6ED638D7:				; CODE XREF: sub_6ED630C0+7FBj
		mov	eax, [ebp+var_20]
		add	[ebp+var_9C], 4

loc_6ED638E1:				; CODE XREF: sub_6ED630C0+7CFj
		mov	esi, [ebp+var_9C]
		mov	[ebp+var_98], esi
		mov	eax, [eax]
		cmp	eax, 1
		jz	short loc_6ED63909
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_88], 0Dh
		call	sub_6ED933E0

loc_6ED63909:				; CODE XREF: sub_6ED630C0+832j
		mov	eax, [ebp+var_20]
		mov	edx, [eax+0Ch]
		lea	eax, [eax+edx*4+14h]
		cmp	[ebp+var_98], eax
		jnz	loc_6ED63891
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED63C87

loc_6ED63930:				; CODE XREF: sub_6ED630C0+BE3j
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED63C66

loc_6ED63941:				; CODE XREF: sub_6ED630C0+517j
					; sub_6ED630C0+AA8j ...
		mov	[ebp+var_B1], 1
		jmp	loc_6ED632B6
; ---------------------------------------------------------------------------
		align 10h

loc_6ED63950:				; CODE XREF: sub_6ED630C0+1E9j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_88], 12h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED632AF
; ---------------------------------------------------------------------------
		align 10h

loc_6ED63970:				; CODE XREF: sub_6ED630C0+329j
		mov	eax, [ebp+var_38]
		mov	[ebp+var_88], 12h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED633EF
; ---------------------------------------------------------------------------
		align 10h

loc_6ED63990:				; CODE XREF: sub_6ED630C0+318j
		mov	eax, [ebp+var_34]
		mov	[ebp+var_88], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED633DE
; ---------------------------------------------------------------------------
		align 10h

loc_6ED639B0:				; CODE XREF: sub_6ED630C0+5Dj
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED639DC
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ebx
		mov	[ebp+var_88], 12h
		mov	[esp+4], eax
		call	sub_6ED960D0

loc_6ED639DC:				; CODE XREF: sub_6ED630C0+8FAj
		mov	esi, [ebp+arg_0]
		mov	esi, [esi]
		mov	eax, [esi+8]
		mov	edx, esi
		mov	[ebp+var_CC], esi
		mov	[ebp+var_E8], eax
		mov	eax, [esi]
		mov	ecx, [ebp+var_E8]
		cmp	eax, 1
		jz	short loc_6ED63A24
		mov	eax, [esi+4]
		mov	ebx, [ebp+arg_0]
		mov	[esp+4], ecx
		mov	[ebp+var_88], 12h
		mov	[esp+8], eax
		mov	[esp], ebx
		call	sub_6ED960D0
		mov	edx, [ebx]
		mov	ecx, [edx+8]

loc_6ED63A24:				; CODE XREF: sub_6ED630C0+93Dj
		mov	esi, [ebp+var_E8]
		mov	ebx, [ebp+var_CC]
		lea	eax, [ebx+esi*4+10h]
		add	ebx, 10h
		lea	esi, [eax-4]
		sub	eax, ebx
		sar	eax, 2
		sub	esi, ebx
		mov	[ebp+var_BC], eax
		mov	ebx, [ebp+var_BC]
		lea	eax, [edx+ecx*4+10h]
		sar	esi, 2
		mov	[ebp+var_AC], eax
		mov	[ebp+var_C4], esi
		lea	eax, [edx+ebx*4+10h]
		cmp	[ebp+var_AC], eax
		jz	short loc_6ED63AC3
		lea	edx, [edx+esi*4+10h]
		mov	esi, ds:_ZN7QStringaSERKS_
		mov	[ebp+var_94], esi
		jmp	short loc_6ED63A84
; ---------------------------------------------------------------------------
		align 10h

loc_6ED63A80:				; CODE XREF: sub_6ED630C0+9F9j
		mov	edx, ebx
		mov	eax, esi

loc_6ED63A84:				; CODE XREF: sub_6ED630C0+9BCj
		lea	ecx, [eax+4]
		lea	ebx, [edx+4]
		mov	[ebp+var_A4], ecx
		mov	[ebp+var_A8], ebx
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_88], 12h
		call	[ebp+var_94]
		mov	esi, [ebp+var_A4]
		cmp	[ebp+var_AC], esi
		jnz	short loc_6ED63A80
		mov	eax, [ebp+arg_0]
		mov	edx, [eax]
		mov	ecx, [edx+8]

loc_6ED63AC3:				; CODE XREF: sub_6ED630C0+9AAj
		mov	ebx, [ebp+var_BC]
		lea	eax, [edx+ecx*4+10h]
		mov	esi, [ebp+var_C4]
		mov	[ebp+var_A0], eax
		sub	ebx, esi
		sub	ecx, ebx
		lea	ecx, [edx+ecx*4+10h]
		cmp	eax, ecx
		mov	[ebp+var_B8], ebx
		mov	[ebp+var_B0], ecx
		jnz	short loc_6ED63B01
		jmp	short loc_6ED63B43
; ---------------------------------------------------------------------------

loc_6ED63AF3:				; CODE XREF: sub_6ED630C0+A58j
		mov	ebx, [ebp+var_A0]
		cmp	[ebp+var_B0], ebx
		jz	short loc_6ED63B43

loc_6ED63B01:				; CODE XREF: sub_6ED630C0+A2Fj
					; sub_6ED630C0+A81j
		sub	[ebp+var_A0], 4
		mov	edx, [ebp+var_A0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED63AF3
		mov	ecx, [ebp+var_A0]
		mov	eax, [ecx]
		mov	[ebp+var_88], 12h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	ebx, [ebp+var_A0]
		cmp	[ebp+var_B0], ebx
		jnz	short loc_6ED63B01

loc_6ED63B43:				; CODE XREF: sub_6ED630C0+A31j
					; sub_6ED630C0+A3Fj
		mov	esi, [ebp+arg_0]
		mov	edx, [ebp+var_B8]
		mov	eax, [esi]
		sub	[eax+8], edx
		mov	eax, esi
		add	eax, 58h
		mov	[esp], eax
		mov	[ebp+var_88], 12h
		call	_ZN20QXmlNamespaceSupport10popContextEv
		jmp	loc_6ED63941
; ---------------------------------------------------------------------------
		align 10h

loc_6ED63B70:				; CODE XREF: sub_6ED630C0+50Aj
		mov	eax, [ebp+var_48]
		mov	[ebp+var_88], 12h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED635D0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED63B90:				; CODE XREF: sub_6ED630C0+4F9j
		mov	eax, [ebp+var_44]
		mov	[ebp+var_88], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED635BF
; ---------------------------------------------------------------------------
		align 10h

loc_6ED63BB0:				; CODE XREF: sub_6ED630C0+4E8j
		mov	eax, [ebp+var_40]
		mov	[ebp+var_88], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED635AE
; ---------------------------------------------------------------------------
		align 10h

loc_6ED63BD0:				; CODE XREF: sub_6ED630C0+687j
		mov	eax, [ebp+var_18]
		mov	[ebp+var_88], 12h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED6374D
; ---------------------------------------------------------------------------

loc_6ED63BEB:				; CODE XREF: sub_6ED630C0+694j
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+7Ch]
		lea	ecx, [ebp+var_1C]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	eax, [edx+34h]
		mov	[ebp+var_88], 12h
		call	eax
		mov	ebx, [ebp+arg_0]
		sub	esp, 4
		lea	eax, [ebp+var_1C]
		mov	[esp+4], eax
		mov	[ebp+var_88], 0Fh
		mov	[esp], ebx
		call	sub_6ED60A80
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_88], 12h
		call	sub_6ED94560
		jmp	loc_6ED632AF
; ---------------------------------------------------------------------------

loc_6ED63C45:				; CODE XREF: sub_6ED630C0+797j
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_88], 0Dh
		mov	[esp+4], eax
		lea	eax, [ebp+var_2C]
		mov	[esp], eax
		call	sub_6ED93460
		jmp	loc_6ED6385D
; ---------------------------------------------------------------------------

loc_6ED63C66:				; CODE XREF: sub_6ED630C0+87Bj
		mov	eax, [ebp+var_20]
		mov	[ebp+var_88], 12h
		mov	[esp+4], eax
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		call	sub_6ED93460
		jmp	loc_6ED63941
; ---------------------------------------------------------------------------

loc_6ED63C87:				; CODE XREF: sub_6ED630C0+86Aj
		mov	eax, [ebp+var_24]
		mov	[ebp+var_88], 0Eh
		mov	[esp+4], eax
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		call	sub_6ED93460
		jmp	loc_6ED63930
; ---------------------------------------------------------------------------

loc_6ED63CA8:				; CODE XREF: sub_6ED630C0+786j
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		mov	[ebp+var_88], 0Bh
		call	sub_6ED933E0
		jmp	loc_6ED6384C
; ---------------------------------------------------------------------------

loc_6ED63CC2:				; CODE XREF: sub_6ED630C0+722j
		mov	eax, [ebp+var_28]
		mov	[ebp+var_88], 0Dh
		mov	[esp+4], eax
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		call	sub_6ED93460
		jmp	loc_6ED637E8
; ---------------------------------------------------------------------------

loc_6ED63CE3:				; CODE XREF: sub_6ED630C0+711j
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_88], 0Ch
		call	sub_6ED933E0
		jmp	loc_6ED637D7
; ---------------------------------------------------------------------------

loc_6ED63CFD:				; CODE XREF: sub_6ED630C0+773j
		mov	eax, [ebp+var_24]
		mov	[ebp+var_88], 0Bh
		mov	[esp+4], eax
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		call	sub_6ED93460
		jmp	loc_6ED63839
; ---------------------------------------------------------------------------

loc_6ED63D1E:				; CODE XREF: sub_6ED630C0+6FEj
		mov	eax, [ebp+var_20]
		mov	[ebp+var_88], 0Ch
		mov	[esp+4], eax
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		call	sub_6ED93460
		jmp	loc_6ED637C4
; ---------------------------------------------------------------------------

loc_6ED63D3F:				; CODE XREF: sub_6ED630C0+811j
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+7Ch]
		lea	ecx, [ebp+var_30]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx+34h]
		mov	ebx, [ebp+arg_0]
		sub	esp, 4
		lea	eax, [ebp+var_30]
		mov	[esp+4], eax
		mov	[ebp+var_88], 0Ah
		mov	[esp], ebx
		call	sub_6ED60A80
		lea	eax, [ebp+var_30]
		mov	[esp], eax
		mov	[ebp+var_88], 0Dh
		call	sub_6ED94560
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		mov	[ebp+var_88], 0Eh
		call	sub_6ED904E0
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_88], 12h
		call	sub_6ED904E0
		jmp	loc_6ED632AF
sub_6ED630C0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED63DB7	proc near		; DATA XREF: sub_6ED630C0+25o
		add	ebp, 8
		mov	eax, [ebp-88h]
		mov	ecx, [ebp-84h]
		cmp	eax, 1
		mov	[ebp-0F8h], ecx
		jz	loc_6ED63F3A
		cmp	eax, 2
		jz	loc_6ED63F20
		cmp	eax, 3
		jz	loc_6ED63EF1
		cmp	eax, 4
		jz	loc_6ED63F06
		cmp	eax, 5
		jz	short loc_6ED63E6C
		cmp	eax, 6
		jz	loc_6ED63FF5
		cmp	eax, 7
		jz	loc_6ED63FC6
		cmp	eax, 8
		jz	loc_6ED63FDB
		cmp	eax, 9
		jz	loc_6ED63FAF
		cmp	eax, 0Ah
		lea	esi, [esi+0]
		jz	loc_6ED63F98
		cmp	eax, 0Bh
		jz	loc_6ED63F54
		cmp	eax, 0Ch
		jz	loc_6ED63F69
		cmp	eax, 0Dh
		nop
		lea	esi, [esi+0]
		jz	loc_6ED63F7E
		cmp	eax, 0Eh
		jz	loc_6ED63EDA
		cmp	eax, 0Fh
		jz	loc_6ED63F3A
		cmp	eax, 10h
		nop
		lea	esi, [esi+0]
		jz	short loc_6ED63EC3
		cmp	eax, 11h
		jz	short loc_6ED63E81
		cmp	eax, 12h
		jz	short loc_6ED63E96

loc_6ED63E6C:				; CODE XREF: sub_6ED63DB7+3Cj
					; sub_6ED63DB7+164j
		lea	eax, [ebp-48h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_6ED94560

loc_6ED63E81:				; CODE XREF: sub_6ED63DB7+AEj
					; sub_6ED63DB7+121j ...
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_6ED94560

loc_6ED63E96:				; CODE XREF: sub_6ED63DB7+B3j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-0F8h]
		mov	dword ptr [ebp-88h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED63EC3:				; CODE XREF: sub_6ED63DB7+A9j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_6ED94560
		jmp	short loc_6ED63E81
; ---------------------------------------------------------------------------

loc_6ED63EDA:				; CODE XREF: sub_6ED63DB7+92j
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_6ED94560
		jmp	short loc_6ED63E81
; ---------------------------------------------------------------------------

loc_6ED63EF1:				; CODE XREF: sub_6ED63DB7+2Aj
		lea	eax, [ebp-40h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_6ED94560

loc_6ED63F06:				; CODE XREF: sub_6ED63DB7+33j
		lea	eax, [ebp-44h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_6ED94560
		jmp	loc_6ED63E6C
; ---------------------------------------------------------------------------

loc_6ED63F20:				; CODE XREF: sub_6ED63DB7+21j
		lea	eax, [ebp-4Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_6ED94560
		jmp	loc_6ED63E81
; ---------------------------------------------------------------------------

loc_6ED63F3A:				; CODE XREF: sub_6ED63DB7+18j
					; sub_6ED63DB7+9Bj
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_6ED94560
		jmp	loc_6ED63E81
; ---------------------------------------------------------------------------

loc_6ED63F54:				; CODE XREF: sub_6ED63DB7+72j
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_6ED904E0

loc_6ED63F69:				; CODE XREF: sub_6ED63DB7+7Bj
					; sub_6ED63DB7+1F6j ...
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_6ED904E0

loc_6ED63F7E:				; CODE XREF: sub_6ED63DB7+89j
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_6ED904E0
		jmp	loc_6ED63E81
; ---------------------------------------------------------------------------

loc_6ED63F98:				; CODE XREF: sub_6ED63DB7+69j
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_6ED904E0
		jmp	short loc_6ED63F69
; ---------------------------------------------------------------------------

loc_6ED63FAF:				; CODE XREF: sub_6ED63DB7+5Cj
		lea	eax, [ebp-30h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_6ED94560
		jmp	short loc_6ED63F69
; ---------------------------------------------------------------------------

loc_6ED63FC6:				; CODE XREF: sub_6ED63DB7+4Aj
		lea	eax, [ebp-34h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_6ED94560

loc_6ED63FDB:				; CODE XREF: sub_6ED63DB7+53j
		lea	eax, [ebp-38h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_6ED94560
		jmp	loc_6ED63E81
; ---------------------------------------------------------------------------

loc_6ED63FF5:				; CODE XREF: sub_6ED63DB7+41j
		lea	eax, [ebp-3Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_6ED94560
		jmp	loc_6ED63E81
sub_6ED63DB7	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED64010	proc near		; CODE XREF: sub_6ED6B5F0+ADp

var_6C		= dword	ptr -6Ch
var_65		= byte ptr -65h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_24		= byte ptr -24h
var_20		= byte ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 98h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset dword_6ED9A7B4
		mov	[ebp+var_38], offset sub_6ED642F9
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ebp+var_14], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_58], 3
		mov	[esp], edx
		call	sub_6ED59250
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_60], eax
		mov	[esp], ecx
		call	sub_6ED59310
		mov	[ebp+var_64], eax
		mov	eax, [ebp+arg_0]
		cmp	byte ptr [eax+40h], 0
		jz	loc_6ED64180
		add	eax, 58h
		mov	edx, [ebp+var_60]
		mov	[ebp+var_6C], eax
		mov	ecx, [ebp+var_6C]
		lea	eax, [ebp+var_10]
		mov	[esp+0Ch], eax
		lea	eax, [ebp+var_14]
		mov	[esp+8], eax
		mov	[esp+4], edx
		mov	[esp], ecx
		call	_ZNK20QXmlNamespaceSupport9splitNameERK7QStringRS0_S3_
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[ebp+var_18], offset aXmlns_1 ;	"xmlns"
		mov	[esp], eax
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		jz	loc_6ED64208
		mov	eax, [ebp+var_64]
		mov	edx, [ebp+var_6C]
		mov	[esp+8], eax
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	[esp], edx
		call	_ZN20QXmlNamespaceSupport9setPrefixERK7QStringS2_
		mov	ecx, [ebp+arg_0]
		cmp	byte ptr [ecx+41h], 0
		jnz	loc_6ED64298

loc_6ED64100:				; CODE XREF: sub_6ED64010+2E4j
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+7Ch]
		test	eax, eax
		jz	loc_6ED641B1
		mov	ecx, [ebp+var_64]
		mov	edx, [eax]
		mov	[esp], eax
		mov	[esp+8], ecx
		lea	ecx, [ebp+var_10]
		mov	[esp+4], ecx
		mov	eax, [edx+14h]
		mov	[ebp+var_58], 3
		call	eax
		test	al, al
		jnz	loc_6ED641B1
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_24]
		mov	eax, [edx+7Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx+34h]
		mov	ecx, [ebp+arg_0]
		sub	esp, 4
		lea	eax, [ebp+var_24]
		mov	[esp+4], eax
		mov	[ebp+var_58], 1
		mov	[esp], ecx
		call	sub_6ED60A80
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		mov	[ebp+var_58], 3
		call	sub_6ED94560
		mov	[ebp+var_65], 0
		jmp	short loc_6ED641B5
; ---------------------------------------------------------------------------
		align 10h

loc_6ED64180:				; CODE XREF: sub_6ED64010+7Cj
		mov	eax, [ebp+var_64]
		mov	edx, [ebp+var_60]
		mov	[ebp+var_58], 3
		mov	[esp+10h], eax
		lea	eax, [ebp+var_10]
		mov	[esp+0Ch], eax
		lea	eax, [ebp+var_C]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+4], edx
		add	eax, 44h
		mov	[esp], eax
		call	_ZN14QXmlAttributes6appendERK7QStringS2_S2_S2_

loc_6ED641B1:				; CODE XREF: sub_6ED64010+F8j
					; sub_6ED64010+11Fj ...
		mov	[ebp+var_65], 1

loc_6ED641B5:				; CODE XREF: sub_6ED64010+16Cj
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED64280

loc_6ED641C6:				; CODE XREF: sub_6ED64010+283j
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED64266

loc_6ED641D7:				; CODE XREF: sub_6ED64010+269j
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED641F7
		mov	eax, [ebp+var_C]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED641F7:				; CODE XREF: sub_6ED64010+1D2j
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_65]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED64208:				; CODE XREF: sub_6ED64010+C4j
		lea	eax, [ebp+var_10]
		mov	ecx, [ebp+var_60]
		mov	[esp+10h], eax
		lea	eax, [ebp+var_C]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+var_6C]
		mov	dword ptr [esp+8], 1
		mov	[esp+4], ecx
		mov	[ebp+var_58], 3
		mov	[esp], eax
		call	_ZNK20QXmlNamespaceSupport11processNameERK7QStringbRS0_S3_
		lea	eax, [ebp+var_10]
		mov	edx, [ebp+var_64]
		mov	[esp+0Ch], eax
		lea	eax, [ebp+var_C]
		mov	ecx, [ebp+var_60]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+10h], edx
		mov	[esp+4], ecx
		add	eax, 44h
		mov	[esp], eax
		call	_ZN14QXmlAttributes6appendERK7QStringS2_S2_S2_
		jmp	loc_6ED641B1
; ---------------------------------------------------------------------------

loc_6ED64266:				; CODE XREF: sub_6ED64010+1C1j
		mov	eax, [ebp+var_10]
		mov	[ebp+var_58], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED641D7
; ---------------------------------------------------------------------------
		align 10h

loc_6ED64280:				; CODE XREF: sub_6ED64010+1B0j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_58], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED641C6
; ---------------------------------------------------------------------------

loc_6ED64298:				; CODE XREF: sub_6ED64010+EAj
		lea	eax, [ebp+var_1C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_20]
		mov	[ebp+var_1C], offset aHttpWww_w3_o_0 ; "http://www.w3.org/2000/xmlns/"
		mov	[esp], eax
		call	sub_6ED94530
		mov	eax, [ebp+var_64]
		mov	edx, [ebp+var_60]
		mov	[ebp+var_58], 2
		mov	[esp+10h], eax
		lea	eax, [ebp+var_10]
		mov	[esp+0Ch], eax
		lea	eax, [ebp+var_20]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+4], edx
		add	eax, 44h
		mov	[esp], eax
		call	_ZN14QXmlAttributes6appendERK7QStringS2_S2_S2_
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_58], 3
		call	sub_6ED94560
		jmp	loc_6ED64100
sub_6ED64010	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED642F9	proc near		; DATA XREF: sub_6ED64010+23o
		add	ebp, 8
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-70h], edx
		jz	short loc_6ED64373
		cmp	eax, 2
		jz	short loc_6ED6432B
		cmp	eax, 3
		jz	short loc_6ED6433D
		cmp	eax, 4
		jz	short loc_6ED6434F
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560

loc_6ED6432B:				; CODE XREF: sub_6ED642F9+14j
					; sub_6ED642F9+8Cj
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560

loc_6ED6433D:				; CODE XREF: sub_6ED642F9+19j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560

loc_6ED6434F:				; CODE XREF: sub_6ED642F9+1Ej
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-70h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED64373:				; CODE XREF: sub_6ED642F9+Fj
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		jmp	short loc_6ED6432B
sub_6ED642F9	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED64390	proc near		; CODE XREF: sub_6ED64710+639p
					; sub_6ED64710+700p ...

var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_75		= byte ptr -75h
var_74		= dword	ptr -74h
var_6D		= byte ptr -6Dh
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_28		= byte ptr -28h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 94h
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset word_6ED9A7C2
		mov	[ebp+var_38], offset sub_6ED646DD
		mov	[ebp+var_34], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+74h]
		test	edx, edx
		mov	[ebp+var_74], edx
		jz	short loc_6ED643DD
		mov	eax, [edx]
		mov	edx, [eax+8]
		test	edx, edx
		jnz	loc_6ED644B0

loc_6ED643DD:				; CODE XREF: sub_6ED64390+3Ej
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+70h]
		mov	edx, [eax+8]
		mov	[ecx+7Bh], dl
		mov	eax, edx
		mov	[ebp+var_6D], 0

loc_6ED643EF:				; CODE XREF: sub_6ED64390+1B0j
					; sub_6ED64390+2D8j
		cmp	[ebp+var_6D], al
		jz	loc_6ED645B8
		mov	edx, [ebp+arg_0]
		movzx	eax, word ptr [edx+98h]
		mov	edx, eax
		or	edx, 1
		cmp	dx, 0FFFFh
		jz	loc_6ED64585
		movsx	edx, [ebp+var_6D]
		mov	[ebp+var_60], 0
		mov	[ebp+var_68], edx
		add	edx, edx
		mov	[ebp+var_64], edx

loc_6ED64424:				; CODE XREF: sub_6ED64390+1EFj
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+var_68]
		add	ebx, [ebp+var_60]
		mov	ecx, [edx+70h]
		xor	edx, edx
		cmp	[ecx+8], ebx
		jle	short loc_6ED64441
		mov	edx, [ecx+0Ch]
		mov	ecx, [ebp+var_64]
		movzx	edx, word ptr [edx+ecx]

loc_6ED64441:				; CODE XREF: sub_6ED64390+A5j
		cmp	dx, ax
		jz	loc_6ED64545
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aUnexpectedChar	; "unexpected character"
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_58], 1
		mov	[esp], edx
		mov	[ebp+var_C], eax
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		call	sub_6ED60A80
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		mov	[ebp+var_75], 0
		jz	loc_6ED645C1

loc_6ED64497:				; CODE XREF: sub_6ED64390+223j
					; sub_6ED64390+22Cj ...
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_75]
		mov	ebx, [ebp+var_4]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED644B0:				; CODE XREF: sub_6ED64390+47j
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_6ED644D4
		mov	eax, [eax+4]
		mov	[esp+4], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+var_74]
		mov	[esp], eax
		call	sub_6ED96400

loc_6ED644D4:				; CODE XREF: sub_6ED64390+125j
		mov	ecx, [ebp+var_74]
		mov	edx, [ecx]
		mov	eax, [edx+8]
		sub	eax, 1
		mov	[ebp+var_7C], eax
		lea	eax, [eax+eax*2]
		mov	eax, [edx+eax*4+18h]
		mov	[ebp+var_6C], eax
		mov	eax, [edx+4]
		cmp	[ebp+var_7C], eax
		jg	loc_6ED645ED
		test	byte ptr [edx+0Ch], 2
		jz	loc_6ED645E0

loc_6ED64502:				; CODE XREF: sub_6ED64390+257j
					; sub_6ED64390+288j
		mov	edx, [ebp+var_7C]
		mov	ecx, [ebp+var_74]
		mov	[esp+8], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], edx
		mov	[esp], ecx
		call	sub_6ED96400
		movzx	eax, byte ptr [ebp+var_6C]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_6D], al
		mov	eax, [edx+74h]
		mov	edx, [eax]
		mov	edx, [edx+8]
		test	edx, edx
		jnz	loc_6ED6461D
		mov	ecx, [ebp+arg_0]
		movzx	eax, byte ptr [ecx+7Bh]
		jmp	loc_6ED643EF
; ---------------------------------------------------------------------------

loc_6ED64545:				; CODE XREF: sub_6ED64390+B4j
		mov	eax, [ebp+arg_0]
		add	[ebp+var_6D], 1
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED5BC00
		mov	edx, [ebp+arg_0]
		movzx	eax, [ebp+var_6D]
		cmp	[edx+7Bh], al
		jz	short loc_6ED645B8
		mov	ecx, [ebp+arg_0]
		add	[ebp+var_60], 1
		add	[ebp+var_64], 2
		movzx	eax, word ptr [ecx+98h]
		mov	edx, eax
		or	edx, 1
		cmp	dx, 0FFFFh
		jnz	loc_6ED64424

loc_6ED64585:				; CODE XREF: sub_6ED64390+7Bj
		movsx	eax, [ebp+var_6D]
		mov	dword ptr [esp+4], offset sub_6ED64390
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED60E40
		mov	[ebp+var_75], 0
		jmp	loc_6ED64497
; ---------------------------------------------------------------------------

loc_6ED645B8:				; CODE XREF: sub_6ED64390+62j
					; sub_6ED64390+1D2j
		mov	[ebp+var_75], 1
		jmp	loc_6ED64497
; ---------------------------------------------------------------------------

loc_6ED645C1:				; CODE XREF: sub_6ED64390+101j
		mov	eax, [ebp+var_C]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_75], 0
		jmp	loc_6ED64497
; ---------------------------------------------------------------------------
		align 10h

loc_6ED645E0:				; CODE XREF: sub_6ED64390+16Cj
		mov	edx, eax
		sar	edx, 1
		cmp	[ebp+var_7C], edx
		jge	loc_6ED64502

loc_6ED645ED:				; CODE XREF: sub_6ED64390+162j
		mov	eax, [ebp+var_7C]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0Ch
		mov	dword ptr [esp], 1Ch
		mov	[esp+4], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN11QVectorData4growEiiib
		jmp	loc_6ED64502
; ---------------------------------------------------------------------------

loc_6ED6461D:				; CODE XREF: sub_6ED64390+1A3j
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED943D0
		mov	edx, [eax+4]
		mov	[ebp+var_84], edx
		mov	eax, [eax]
		cmp	eax, offset sub_6ED60FB0
		mov	[ebp+var_80], eax
		jz	short loc_6ED646B7

loc_6ED64641:				; CODE XREF: sub_6ED64390+329j
					; sub_6ED64390+348j
		test	byte ptr [ebp+var_80], 1
		jnz	short loc_6ED6466D
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_84]

loc_6ED64650:				; CODE XREF: sub_6ED64390+2F2j
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	[ebp+var_80]
		test	al, al
		jz	short loc_6ED64684
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+7Bh]
		jmp	loc_6ED643EF
; ---------------------------------------------------------------------------

loc_6ED6466D:				; CODE XREF: sub_6ED64390+2B5j
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_84]
		mov	ecx, [ebp+var_80]
		mov	edx, [eax]
		mov	edx, [edx+ecx-1]
		mov	[ebp+var_80], edx
		jmp	short loc_6ED64650
; ---------------------------------------------------------------------------

loc_6ED64684:				; CODE XREF: sub_6ED64390+2CFj
		movsx	eax, [ebp+var_6D]
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED64390
		mov	dword ptr [esp+8], 0
		mov	[esp+0Ch], eax
		mov	[esp], ecx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED58610
		mov	[ebp+var_75], 0
		jmp	loc_6ED64497
; ---------------------------------------------------------------------------

loc_6ED646B7:				; CODE XREF: sub_6ED64390+2AFj
		test	edx, edx
		jnz	short loc_6ED64641
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_28]
		mov	edx, [ecx+74h]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_6ED94310
		push	ebx
		jmp	loc_6ED64641
sub_6ED64390	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED646DD	proc near		; DATA XREF: sub_6ED64390+21o
		add	ebp, 8
		mov	ecx, [ebp-54h]
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	[ebp-88h], ecx
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		mov	eax, [ebp-88h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED646DD	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED64710	proc near		; CODE XREF: sub_6ED67AD0+371p
					; sub_6ED6CA30+7A8p ...

var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_81		= byte ptr -81h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_75		= byte ptr -75h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_38		= byte ptr -38h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0B8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_4C], eax
		lea	eax, [ebp+var_6C]
		mov	[ebp+var_54], offset sub_6ED997C0
		mov	[ebp+var_50], offset dword_6ED9A7C8
		mov	[ebp+var_48], offset sub_6ED64E92
		mov	[ebp+var_44], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+74h]
		test	edx, edx
		mov	[ebp+var_7C], edx
		jz	short loc_6ED6475C
		mov	eax, [edx]
		mov	edx, [eax+8]
		test	edx, edx
		jnz	loc_6ED64892

loc_6ED6475C:				; CODE XREF: sub_6ED64710+3Dj
		mov	eax, [ebp+arg_0]
		mov	ecx, ds:_ZN7QString11shared_nullE
		cmp	[eax+2Ch], ecx
		mov	[ebp+var_70], ecx
		jz	short loc_6ED647B3
		mov	[ebp+var_1C], ecx
		lock inc dword ptr [ecx]
		setnz	al
		lea	eax, [ebp+var_1C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_68], 2
		add	eax, 2Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED647B3
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED647B3:				; CODE XREF: sub_6ED64710+5Bj
					; sub_6ED64710+8Ej
		mov	ecx, [ebp+arg_0]
		mov	eax, [ebp+var_70]
		cmp	eax, [ecx+28h]
		jz	short loc_6ED647F9
		mov	[ebp+var_20], eax
		mov	eax, ds:_ZN7QString11shared_nullE
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_20]
		mov	[esp+4], eax
		mov	eax, ecx
		add	eax, 28h
		mov	[esp], eax
		mov	[ebp+var_68], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED64BE0

loc_6ED647F9:				; CODE XREF: sub_6ED64710+ACj
		mov	[ebp+var_75], 0

loc_6ED647FD:				; CODE XREF: sub_6ED64710+217j
					; sub_6ED64710+2C6j ...
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_0]
		add	eax, 70h
		mov	[ebp+var_90], eax
		mov	eax, ds:_ZN7QStringaSERKS_
		add	edx, 28h
		add	ecx, 2Ch
		mov	[ebp+var_8C], edx
		mov	[ebp+var_94], ecx
		mov	[ebp+var_98], eax

loc_6ED6482C:				; CODE XREF: sub_6ED64710+176j
					; sub_6ED64710+17Bj ...
		cmp	[ebp+var_75], 0Fh ; jumptable 6ED6488B default case
		jz	loc_6ED64A08
		cmp	[ebp+var_75], 10h
		jz	loc_6ED64A37
		cmp	[ebp+var_75], 0FFh
		jz	loc_6ED64A52
		mov	edx, [ebp+arg_0]
		movzx	eax, word ptr [edx+98h]
		mov	edx, eax
		or	edx, 1
		cmp	dx, 0FFFFh
		jz	loc_6ED64E5C
		cmp	ax, 9
		jnz	loc_6ED64B08

loc_6ED6486D:				; CODE XREF: sub_6ED64710+3FCj
					; sub_6ED64710+406j ...
		mov	edx, 4

loc_6ED64872:				; CODE XREF: sub_6ED64710+41Cj
					; sub_6ED64710+42Bj ...
		movsx	eax, [ebp+var_75]
		lea	eax, [eax+eax*2]
		movzx	eax, ds:byte_6EDA15A0[edx+eax*2]
		cmp	al, 10h		; switch 17 cases
		mov	[ebp+var_75], al
		ja	short loc_6ED6482C ; jumptable 6ED6488B	default	case
		movzx	eax, al
		jmp	ds:off_6EDA0724[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_6ED64892:				; CODE XREF: sub_6ED64710+46j
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_6ED648B6
		mov	eax, [eax+4]
		mov	[esp+4], edx
		mov	edx, [ebp+var_7C]
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	[esp], edx
		call	sub_6ED96400

loc_6ED648B6:				; CODE XREF: sub_6ED64710+187j
		mov	ecx, [ebp+var_7C]
		mov	edx, [ecx]
		mov	eax, [edx+8]
		sub	eax, 1
		mov	[ebp+var_80], eax
		lea	eax, [eax+eax*2]
		mov	eax, [edx+eax*4+18h]
		mov	[ebp+var_74], eax
		mov	eax, [edx+4]
		cmp	[ebp+var_80], eax
		jg	loc_6ED64B80
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_6ED648F0
		mov	edx, eax
		sar	edx, 1
		cmp	[ebp+var_80], edx
		jl	loc_6ED64B80
		lea	esi, [esi+0]

loc_6ED648F0:				; CODE XREF: sub_6ED64710+1CEj
					; sub_6ED64710+49Bj
		mov	edx, [ebp+var_80]
		mov	ecx, [ebp+var_7C]
		mov	[esp+8], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp+4], edx
		mov	[esp], ecx
		call	sub_6ED96400
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [ebp+var_74]
		mov	edx, [edx+74h]
		mov	[ebp+var_75], al
		mov	[ebp+var_88], edx
		mov	eax, [edx]
		mov	edx, [eax+8]
		test	edx, edx
		jz	loc_6ED647FD
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_6ED64955
		mov	eax, [eax+4]
		mov	ecx, [ebp+var_88]
		mov	[esp+4], edx
		mov	[esp+8], eax
		mov	[esp], ecx
		call	sub_6ED96400
		mov	edx, [ebp+var_88]
		mov	eax, [edx]

loc_6ED64955:				; CODE XREF: sub_6ED64710+222j
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED6497F
		mov	edx, [eax+4]
		mov	ecx, [ebp+var_88]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_6ED96400

loc_6ED6497F:				; CODE XREF: sub_6ED64710+24Aj
		mov	edx, [ebp+var_88]
		mov	eax, [edx]
		mov	edx, [eax+8]
		lea	edx, [edx+edx*2-3]
		lea	eax, [eax+edx*4]
		mov	ecx, [eax+14h]
		mov	[ebp+var_A0], ecx
		mov	eax, [eax+10h]
		cmp	eax, offset sub_6ED60FB0
		mov	[ebp+var_9C], eax
		jz	loc_6ED64E30

loc_6ED649AE:				; CODE XREF: sub_6ED64710+722j
					; sub_6ED64710+747j
		test	byte ptr [ebp+var_9C], 1
		jnz	loc_6ED64C00
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_A0]

loc_6ED649C4:				; CODE XREF: sub_6ED64710+50Bj
		mov	[esp], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		call	[ebp+var_9C]
		test	al, al
		jnz	loc_6ED647FD
		movsx	eax, [ebp+var_75]
		mov	[esp+0Ch], eax

loc_6ED649E4:				; CODE XREF: sub_6ED64710+715j
		mov	eax, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED64710
		mov	dword ptr [esp+8], 0
		mov	[esp], eax
		call	sub_6ED58610
		mov	[ebp+var_81], 0
		jmp	short loc_6ED64A3E
; ---------------------------------------------------------------------------

loc_6ED64A08:				; CODE XREF: sub_6ED64710+120j
		mov	edx, [ebp+arg_0]
		cmp	byte ptr [edx+68h], 0
		jz	loc_6ED64AA4
		mov	[esp], edx
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED59310
		mov	ecx, [ebp+var_8C]
		mov	[esp], ecx
		mov	[esp+4], eax
		call	ds:_ZN7QStringaSERKS_

loc_6ED64A37:				; CODE XREF: sub_6ED64710+12Aj
		mov	[ebp+var_81], 1

loc_6ED64A3E:				; CODE XREF: sub_6ED64710+2F6j
					; sub_6ED64710+392j ...
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_81]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED64A52:				; CODE XREF: sub_6ED64710+134j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aUnexpectedChar	; "unexpected character"
		mov	[ebp+var_68], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_68], 3
		mov	[esp], ecx
		mov	[ebp+var_10], eax
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		call	sub_6ED60A80
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED64B60

loc_6ED64A9B:				; CODE XREF: sub_6ED64710+3D7j
		mov	[ebp+var_81], 0
		jmp	short loc_6ED64A3E
; ---------------------------------------------------------------------------

loc_6ED64AA4:				; CODE XREF: sub_6ED64710+2FFj
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aUnexpectedChar	; "unexpected character"
		mov	[ebp+var_68], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_68], 4
		mov	[ebp+var_C], eax
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED60A80
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED64A9B
		mov	eax, [ebp+var_C]
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_81], 0
		jmp	loc_6ED64A3E
; ---------------------------------------------------------------------------

loc_6ED64B08:				; CODE XREF: sub_6ED64710+157j
		cmp	ax, 20h
		jz	loc_6ED6486D
		cmp	ax, 0Dh
		jz	loc_6ED6486D
		cmp	ax, 0Ah
		jz	loc_6ED6486D
		xor	edx, edx
		cmp	ax, 27h
		jz	loc_6ED64872
		cmp	ax, 22h
		mov	edx, 1
		jz	loc_6ED64872
		cmp	ax, 53h
		mov	dl, 2
		jz	loc_6ED64872
		xor	edx, edx
		cmp	ax, 50h
		setnz	dl
		lea	edx, [edx+edx+3]
		jmp	loc_6ED64872
; ---------------------------------------------------------------------------
		align 10h

loc_6ED64B60:				; CODE XREF: sub_6ED64710+385j
		mov	eax, [ebp+var_10]
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_81], 0
		jmp	loc_6ED64A3E
; ---------------------------------------------------------------------------
		align 10h

loc_6ED64B80:				; CODE XREF: sub_6ED64710+1C4j
					; sub_6ED64710+1D7j
		mov	eax, [ebp+var_80]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0Ch
		mov	dword ptr [esp], 1Ch
		mov	[esp+4], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		call	ds:_ZN11QVectorData4growEiiib
		jmp	loc_6ED648F0
; ---------------------------------------------------------------------------

loc_6ED64BB0:				; CODE XREF: sub_6ED64710+17Bj
					; DATA XREF: .rdata:off_6EDA0724o
		mov	edx, [ebp+arg_0] ; jumptable 6ED6488B cases 4,6,10,12
		movzx	eax, word ptr [edx+98h]
		mov	[esp], edx
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp+4], ax
		call	sub_6ED593D0
		mov	eax, [ebp+arg_0]
		call	sub_6ED5BC00
		jmp	loc_6ED6482C	; jumptable 6ED6488B default case
; ---------------------------------------------------------------------------
		align 10h

loc_6ED64BE0:				; CODE XREF: sub_6ED64710+E3j
		mov	eax, [ebp+var_20]
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_75], 0
		jmp	loc_6ED647FD
; ---------------------------------------------------------------------------
		align 10h

loc_6ED64C00:				; CODE XREF: sub_6ED64710+2A5j
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_A0]
		mov	ecx, [ebp+var_9C]
		mov	edx, [eax]
		mov	edx, [edx+ecx-1]
		mov	[ebp+var_9C], edx
		jmp	loc_6ED649C4
; ---------------------------------------------------------------------------

loc_6ED64C20:				; CODE XREF: sub_6ED64710+17Bj
					; DATA XREF: .rdata:off_6EDA0724o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6488B case 14
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED59310
		mov	[esp+4], eax
		mov	eax, [ebp+var_8C]
		mov	[esp], eax
		call	[ebp+var_98]
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		call	sub_6ED60FB0
		test	al, al
		jnz	loc_6ED6482C	; jumptable 6ED6488B default case
		mov	dword ptr [esp+0Ch], 0Eh

loc_6ED64C60:				; CODE XREF: sub_6ED64710+64Ej
					; sub_6ED64710+6D2j
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED64710
		mov	dword ptr [esp+8], 0
		mov	[esp], ecx
		call	sub_6ED58610
		mov	[ebp+var_81], 0
		jmp	loc_6ED64A3E
; ---------------------------------------------------------------------------

loc_6ED64C87:				; CODE XREF: sub_6ED64710+17Bj
					; DATA XREF: .rdata:off_6EDA0724o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6488B case 13
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED5BC00
		jmp	loc_6ED6482C	; jumptable 6ED6488B default case
; ---------------------------------------------------------------------------
		align 10h

loc_6ED64CA0:				; CODE XREF: sub_6ED64710+17Bj
					; DATA XREF: .rdata:off_6EDA0724o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6488B cases 9,11
		mov	dword ptr [ecx+6C4h], 0
		mov	eax, ecx
		mov	dword ptr [ecx+6C0h], 0
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED5BC00
		jmp	loc_6ED6482C	; jumptable 6ED6488B default case
; ---------------------------------------------------------------------------
		align 10h

loc_6ED64CD0:				; CODE XREF: sub_6ED64710+17Bj
					; DATA XREF: .rdata:off_6EDA0724o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6488B case 8
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED60FB0
		test	al, al
		jnz	loc_6ED6482C	; jumptable 6ED6488B default case
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+0Ch], 8
		mov	dword ptr [esp+4], offset sub_6ED64710
		mov	dword ptr [esp+8], 0
		mov	[esp], edx
		call	sub_6ED58610
		mov	[ebp+var_81], 0
		jmp	loc_6ED64A3E
; ---------------------------------------------------------------------------
		align 10h

loc_6ED64D20:				; CODE XREF: sub_6ED64710+17Bj
					; DATA XREF: .rdata:off_6EDA0724o
		mov	eax, [ebp+var_90] ; jumptable 6ED6488B case 7
		lea	ecx, [ebp+var_18]
		mov	[esp+4], ecx
		mov	[ebp+var_18], offset aPublic_1 ; "PUBLIC"
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED94590
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		call	sub_6ED64390
		test	al, al
		jnz	loc_6ED6482C	; jumptable 6ED6488B default case
		mov	dword ptr [esp+0Ch], 7
		jmp	loc_6ED64C60
; ---------------------------------------------------------------------------

loc_6ED64D63:				; CODE XREF: sub_6ED64710+17Bj
					; DATA XREF: .rdata:off_6EDA0724o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6488B case 16
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED59310
		mov	edx, [ebp+var_94]
		mov	[esp], edx
		mov	[esp+4], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+arg_0]
		call	sub_6ED5BC00
		jmp	loc_6ED6482C	; jumptable 6ED6488B default case
; ---------------------------------------------------------------------------

loc_6ED64D95:				; CODE XREF: sub_6ED64710+17Bj
					; DATA XREF: .rdata:off_6EDA0724o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6488B cases 3,5
		mov	dword ptr [eax+6C4h], 0
		mov	dword ptr [eax+6C0h], 0
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED5BC00
		jmp	loc_6ED6482C	; jumptable 6ED6488B default case
; ---------------------------------------------------------------------------
		align 10h

loc_6ED64DC0:				; CODE XREF: sub_6ED64710+17Bj
					; DATA XREF: .rdata:off_6EDA0724o
		mov	edx, [ebp+arg_0] ; jumptable 6ED6488B case 2
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED60FB0
		test	al, al
		jnz	loc_6ED6482C	; jumptable 6ED6488B default case
		mov	dword ptr [esp+0Ch], 2
		jmp	loc_6ED64C60
; ---------------------------------------------------------------------------

loc_6ED64DE7:				; CODE XREF: sub_6ED64710+17Bj
					; DATA XREF: .rdata:off_6EDA0724o
		mov	edx, [ebp+var_90] ; jumptable 6ED6488B case 1
		lea	eax, [ebp+var_14]
		mov	[ebp+var_14], offset aSystem_1 ; "SYSTEM"
		mov	[esp+4], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED94590
		mov	ecx, [ebp+arg_0]
		mov	[esp], ecx
		call	sub_6ED64390
		test	al, al
		jnz	loc_6ED6482C	; jumptable 6ED6488B default case
		mov	dword ptr [esp+0Ch], 1
		jmp	loc_6ED649E4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED64E30:				; CODE XREF: sub_6ED64710+298j
		test	ecx, ecx
		jnz	loc_6ED649AE
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_38]
		mov	edx, [ecx+74h]
		mov	[esp], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_6ED94310
		sub	esp, 4
		jmp	loc_6ED649AE
; ---------------------------------------------------------------------------

loc_6ED64E5C:				; CODE XREF: sub_6ED64710+14Dj
		movsx	eax, [ebp+var_75]
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED64710
		mov	dword ptr [esp+8], 0
		mov	[esp+0Ch], eax
		mov	[esp], ecx
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED60E40
		mov	[ebp+var_81], 0
		jmp	loc_6ED64A3E
sub_6ED64710	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED64E92	proc near		; DATA XREF: sub_6ED64710+20o
		add	ebp, 8
		mov	eax, [ebp-68h]
		mov	edx, [ebp-64h]
		cmp	eax, 1
		mov	[ebp-0A4h], edx
		jz	short loc_6ED64ED7
		cmp	eax, 2
		jz	short loc_6ED64F03
		cmp	eax, 3
		jz	short loc_6ED64EFE
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-0A4h]
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED64ED7:				; CODE XREF: sub_6ED64E92+12j
		lea	eax, [ebp-1Ch]

loc_6ED64EDA:				; CODE XREF: sub_6ED64E92+6Fj
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		mov	edx, [ebp-0A4h]
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED64EFE:				; CODE XREF: sub_6ED64E92+1Cj
		lea	eax, [ebp-0Ch]
		jmp	short loc_6ED64EDA
; ---------------------------------------------------------------------------

loc_6ED64F03:				; CODE XREF: sub_6ED64E92+17j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		mov	eax, [ebp-0A4h]
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED64E92	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED64F30	proc near		; CODE XREF: sub_6ED6A130+4C3p
					; sub_6ED6A6E0+607p ...

var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_69		= byte ptr -69h
var_68		= dword	ptr -68h
var_61		= byte ptr -61h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_28		= byte ptr -28h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 98h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset dword_6ED9A7D4
		mov	[ebp+var_38], offset sub_6ED652DF
		mov	[ebp+var_34], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+74h]
		test	edx, edx
		mov	[ebp+var_68], edx
		jz	short loc_6ED64F7C
		mov	eax, [edx]
		mov	edx, [eax+8]
		test	edx, edx
		jnz	loc_6ED65040

loc_6ED64F7C:				; CODE XREF: sub_6ED64F30+3Dj
		mov	[ebp+var_61], 0

loc_6ED64F80:				; CODE XREF: sub_6ED64F30+ACj
					; sub_6ED64F30+B1j ...
		cmp	[ebp+var_61], 2	; jumptable 6ED64FE1 default case
		jz	short loc_6ED64FFD

loc_6ED64F86:				; CODE XREF: sub_6ED64F30+CBj
		jg	loc_6ED65016
		cmp	[ebp+var_61], 0FFh
		jz	loc_6ED65190

loc_6ED64F96:				; CODE XREF: sub_6ED64F30+E4j
					; sub_6ED64F30+F4j ...
		mov	edx, [ebp+arg_0]
		movzx	eax, word ptr [edx+98h]
		mov	edx, eax
		or	edx, 1
		cmp	dx, 0FFFFh
		jz	loc_6ED65280
		cmp	ax, 2Dh
		jz	loc_6ED65200
		cmp	ax, 3Eh
		setnz	al
		movzx	eax, al
		add	eax, 1

loc_6ED64FC6:				; CODE XREF: sub_6ED64F30+2D2j
		movsx	edx, [ebp+var_61]
		lea	edx, [edx+edx*2]
		lea	eax, [edx+eax]
		movzx	eax, ds:byte_6EDA10F0[eax]
		cmp	al, 6		; switch 7 cases
		mov	[ebp+var_61], al
		ja	short loc_6ED64F80 ; jumptable 6ED64FE1	default	case
		movzx	eax, al
		jmp	ds:off_6EDA0790[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_6ED64FE8:				; CODE XREF: sub_6ED64F30+B1j
					; DATA XREF: .rdata:off_6EDA0790o
		mov	eax, [ebp+arg_0] ; jumptable 6ED64FE1 cases 1,2,4-6
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED5BC00
		cmp	[ebp+var_61], 2
		jnz	short loc_6ED64F86

loc_6ED64FFD:				; CODE XREF: sub_6ED64F30+54j
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+6C4h], 0
		mov	dword ptr [edx+6C0h], 0
		jmp	short loc_6ED64F96
; ---------------------------------------------------------------------------

loc_6ED65016:				; CODE XREF: sub_6ED64F30:loc_6ED64F86j
		cmp	[ebp+var_61], 4
		jz	loc_6ED65150
		cmp	[ebp+var_61], 6
		jnz	loc_6ED64F96
		mov	[ebp+var_69], 1

loc_6ED6502E:				; CODE XREF: sub_6ED64F30+218j
					; sub_6ED64F30+2A7j ...
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_69]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED65040:				; CODE XREF: sub_6ED64F30+46j
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_6ED65064
		mov	eax, [eax+4]
		mov	ecx, [ebp+var_68]
		mov	[esp+4], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	[esp], ecx
		call	sub_6ED96400

loc_6ED65064:				; CODE XREF: sub_6ED64F30+115j
		mov	eax, [ebp+var_68]
		mov	edx, [eax]
		mov	eax, [edx+8]
		sub	eax, 1
		mov	[ebp+var_70], eax
		lea	eax, [eax+eax*2]
		mov	eax, [edx+eax*4+18h]
		mov	[ebp+var_60], eax
		mov	eax, [edx+4]
		cmp	[ebp+var_70], eax
		jg	loc_6ED65232
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_6ED650A0
		mov	edx, eax
		sar	edx, 1
		cmp	[ebp+var_70], edx
		jl	loc_6ED65232
		nop
		lea	esi, [esi+0]

loc_6ED650A0:				; CODE XREF: sub_6ED64F30+15Cj
					; sub_6ED64F30+32Dj
		mov	ecx, [ebp+var_70]
		mov	[esp+8], eax
		mov	eax, [ebp+var_68]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], ecx
		mov	[esp], eax
		call	sub_6ED96400
		mov	ecx, [ebp+arg_0]
		movzx	edx, byte ptr [ebp+var_60]
		mov	eax, [ecx+74h]
		mov	[ebp+var_61], dl
		mov	edx, [eax]
		mov	ecx, [edx+8]
		test	ecx, ecx
		jz	loc_6ED64F80	; jumptable 6ED64FE1 default case
		mov	[esp], eax
		call	sub_6ED943D0
		mov	edx, [eax+4]
		mov	[ebp+var_78], edx
		mov	eax, [eax]
		cmp	eax, offset sub_6ED60FB0
		mov	[ebp+var_74], eax
		jz	loc_6ED652B3

loc_6ED650F5:				; CODE XREF: sub_6ED64F30+385j
					; sub_6ED64F30+3AAj
		test	byte ptr [ebp+var_74], 1
		jnz	loc_6ED65262
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_78]

loc_6ED65105:				; CODE XREF: sub_6ED64F30+344j
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	[ebp+var_74]
		test	al, al
		jnz	loc_6ED64F80	; jumptable 6ED64FE1 default case
		movsx	eax, [ebp+var_61]
		mov	dword ptr [esp+4], offset sub_6ED64F30
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED58610
		mov	[ebp+var_69], 0
		jmp	loc_6ED6502E
; ---------------------------------------------------------------------------
		align 10h

loc_6ED65150:				; CODE XREF: sub_6ED64F30+EAj
		mov	ecx, [ebp+arg_0]
		movzx	eax, word ptr [ecx+98h]
		mov	edx, eax
		or	edx, 1
		cmp	dx, 0FFFFh
		jz	loc_6ED65280
		cmp	ax, 2Dh
		jz	loc_6ED65200
		mov	word ptr [esp+4], 2Dh
		mov	[esp], ecx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED593D0
		jmp	loc_6ED64F96
; ---------------------------------------------------------------------------
		align 10h

loc_6ED65190:				; CODE XREF: sub_6ED64F30+60j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aErrorOccurredW	; "error occurred while	parsing	comment"
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_58], 1
		mov	[ebp+var_C], eax
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED60A80
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		mov	[ebp+var_69], 0
		jnz	loc_6ED6502E
		mov	eax, [ebp+var_C]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_69], 0
		jmp	loc_6ED6502E
; ---------------------------------------------------------------------------
		align 10h

loc_6ED65200:				; CODE XREF: sub_6ED64F30+83j
					; sub_6ED64F30+23Dj
		xor	eax, eax
		jmp	loc_6ED64FC6
; ---------------------------------------------------------------------------

loc_6ED65207:				; CODE XREF: sub_6ED64F30+B1j
					; DATA XREF: .rdata:off_6EDA0790o
		mov	edx, [ebp+arg_0] ; jumptable 6ED64FE1 case 3
		movzx	eax, word ptr [edx+98h]
		mov	[esp], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], ax
		call	sub_6ED593D0
		mov	eax, [ebp+arg_0]
		call	sub_6ED5BC00
		jmp	loc_6ED64F80	; jumptable 6ED64FE1 default case
; ---------------------------------------------------------------------------

loc_6ED65232:				; CODE XREF: sub_6ED64F30+152j
					; sub_6ED64F30+165j
		mov	edx, [ebp+var_70]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0Ch
		mov	dword ptr [esp], 1Ch
		mov	[esp+4], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN11QVectorData4growEiiib
		jmp	loc_6ED650A0
; ---------------------------------------------------------------------------

loc_6ED65262:				; CODE XREF: sub_6ED64F30+1C9j
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_78]
		mov	ecx, [ebp+var_74]
		mov	edx, [eax]
		mov	edx, [edx+ecx-1]
		mov	[ebp+var_74], edx
		jmp	loc_6ED65105
; ---------------------------------------------------------------------------
		align 10h

loc_6ED65280:				; CODE XREF: sub_6ED64F30+79j
					; sub_6ED64F30+233j
		movsx	eax, [ebp+var_61]
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED64F30
		mov	dword ptr [esp+8], 0
		mov	[esp+0Ch], eax
		mov	[esp], ecx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED60E40
		mov	[ebp+var_69], 0
		jmp	loc_6ED6502E
; ---------------------------------------------------------------------------

loc_6ED652B3:				; CODE XREF: sub_6ED64F30+1BFj
		test	edx, edx
		jnz	loc_6ED650F5
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_28]
		mov	edx, [ecx+74h]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_6ED94310
		sub	esp, 4
		jmp	loc_6ED650F5
sub_6ED64F30	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED652DF	proc near		; DATA XREF: sub_6ED64F30+20o
		add	ebp, 8
		mov	edx, [ebp-54h]
		lea	eax, [ebp-0Ch]
		mov	[ebp-7Ch], edx
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-7Ch]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
sub_6ED652DF	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED65310	proc near		; CODE XREF: sub_6ED666D0+570p
					; DATA XREF: sub_6ED65310+23Eo	...

var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_69		= byte ptr -69h
var_68		= dword	ptr -68h
var_61		= byte ptr -61h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_28		= byte ptr -28h
var_10		= dword	ptr -10h
var_A		= word ptr -0Ah
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 98h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset word_6ED9A7DA
		mov	[ebp+var_38], offset sub_6ED656B6
		mov	[ebp+var_34], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+74h]
		test	edx, edx
		mov	[ebp+var_68], edx
		jz	short loc_6ED6535C
		mov	eax, [edx]
		mov	edx, [eax+8]
		test	edx, edx
		jnz	loc_6ED65471

loc_6ED6535C:				; CODE XREF: sub_6ED65310+3Dj
		mov	[ebp+var_61], 0

loc_6ED65360:				; CODE XREF: sub_6ED65310+B9j
					; sub_6ED65310+1F1j ...
		cmp	[ebp+var_61], 0FFh
		jz	loc_6ED65400

loc_6ED6536A:				; CODE XREF: sub_6ED65310+E5j
		cmp	[ebp+var_61], 3
		jz	loc_6ED65580
		mov	edx, [ebp+arg_0]
		movzx	eax, word ptr [edx+98h]
		mov	edx, eax
		or	edx, 1
		cmp	dx, 0FFFFh
		jz	loc_6ED65657
		mov	[ebp+var_A], ax
		movzx	eax, ax
		test	eax, 0FF80h
		jnz	loc_6ED65590
		cmp	ds:byte_6EDA0FE0[eax], 2
		jz	loc_6ED655C4

loc_6ED653AC:				; CODE XREF: sub_6ED65310+299j
					; sub_6ED65310+2A2j ...
		xor	edx, edx

loc_6ED653AE:				; CODE XREF: sub_6ED65310+2B9j
		movsx	eax, [ebp+var_61]
		movzx	edx, ds:byte_6EDA0FD8[edx+eax*2]
		cmp	dl, 1
		mov	[ebp+var_61], dl
		jz	loc_6ED65600
		cmp	dl, 2
		jnz	short loc_6ED65360
		mov	ecx, [ebp+arg_0]
		movzx	eax, word ptr [ecx+98h]
		mov	[esp], ecx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], ax
		call	sub_6ED58460
		mov	eax, [ebp+arg_0]
		call	sub_6ED5BC00
		cmp	[ebp+var_61], 0FFh
		jnz	loc_6ED6536A
		nop
		lea	esi, [esi+0]

loc_6ED65400:				; CODE XREF: sub_6ED65310+54j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aLetterIsExpect	; "letter is expected"
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_58], 1
		mov	[esp], edx
		mov	[ebp+var_10], eax
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		call	sub_6ED60A80
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		mov	[ebp+var_69], 0
		jnz	short loc_6ED65460
		mov	eax, [ebp+var_10]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_69], 0

loc_6ED65460:				; CODE XREF: sub_6ED65310+137j
					; sub_6ED65310+268j ...
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_69]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED65471:				; CODE XREF: sub_6ED65310+46j
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_6ED65495
		mov	eax, [eax+4]
		mov	ecx, [ebp+var_68]
		mov	[esp+4], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	[esp], ecx
		call	sub_6ED96400

loc_6ED65495:				; CODE XREF: sub_6ED65310+166j
		mov	eax, [ebp+var_68]
		mov	edx, [eax]
		mov	eax, [edx+8]
		sub	eax, 1
		mov	[ebp+var_70], eax
		lea	eax, [eax+eax*2]
		mov	eax, [edx+eax*4+18h]
		mov	[ebp+var_60], eax
		mov	eax, [edx+4]
		cmp	[ebp+var_70], eax
		jg	loc_6ED655D0
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_6ED654D0
		mov	edx, eax
		sar	edx, 1
		cmp	[ebp+var_70], edx
		jl	loc_6ED655D0
		lea	esi, [esi+0]

loc_6ED654D0:				; CODE XREF: sub_6ED65310+1ADj
					; sub_6ED65310+2EBj
		mov	ecx, [ebp+var_70]
		mov	[esp+8], eax
		mov	eax, [ebp+var_68]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], ecx
		mov	[esp], eax
		call	sub_6ED96400
		mov	ecx, [ebp+arg_0]
		movzx	edx, byte ptr [ebp+var_60]
		mov	eax, [ecx+74h]
		mov	[ebp+var_61], dl
		mov	edx, [eax]
		mov	edx, [edx+8]
		test	edx, edx
		jz	loc_6ED65360
		mov	[esp], eax
		call	sub_6ED943D0
		mov	edx, [eax+4]
		mov	[ebp+var_78], edx
		mov	eax, [eax]
		cmp	eax, offset sub_6ED60FB0
		mov	[ebp+var_74], eax
		jz	loc_6ED6568A

loc_6ED65525:				; CODE XREF: sub_6ED65310+37Cj
					; sub_6ED65310+3A1j
		test	byte ptr [ebp+var_74], 1
		jnz	loc_6ED65640
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_78]

loc_6ED65535:				; CODE XREF: sub_6ED65310+342j
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	[ebp+var_74]
		test	al, al
		jnz	loc_6ED65360
		movsx	eax, [ebp+var_61]
		mov	dword ptr [esp+4], offset sub_6ED65310
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED58610
		mov	[ebp+var_69], 0
		jmp	loc_6ED65460
; ---------------------------------------------------------------------------
		align 10h

loc_6ED65580:				; CODE XREF: sub_6ED65310+5Ej
		mov	[ebp+var_69], 1
		jmp	loc_6ED65460
; ---------------------------------------------------------------------------
		align 10h

loc_6ED65590:				; CODE XREF: sub_6ED65310+89j
		lea	eax, [ebp+var_A]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZNK5QChar8categoryEv
		lea	edx, [eax-0Fh]
		cmp	edx, 4
		jbe	loc_6ED653AC
		cmp	eax, 5
		jz	loc_6ED653AC
		sub	eax, 1
		cmp	eax, 5
		jbe	loc_6ED653AC

loc_6ED655C4:				; CODE XREF: sub_6ED65310+96j
		mov	edx, 1
		jmp	loc_6ED653AE
; ---------------------------------------------------------------------------
		align 10h

loc_6ED655D0:				; CODE XREF: sub_6ED65310+1A3j
					; sub_6ED65310+1B6j
		mov	edx, [ebp+var_70]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0Ch
		mov	dword ptr [esp], 1Ch
		mov	[esp+4], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN11QVectorData4growEiiib
		jmp	loc_6ED654D0
; ---------------------------------------------------------------------------

loc_6ED65600:				; CODE XREF: sub_6ED65310+B0j
		mov	edx, [ebp+arg_0]
		movzx	eax, word ptr [edx+98h]
		mov	dword ptr [edx+2ACh], 0
		mov	dword ptr [edx+2A8h], 0
		mov	[esp], edx
		mov	[esp+4], ax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED58460
		mov	eax, [ebp+arg_0]
		call	sub_6ED5BC00
		jmp	loc_6ED65360
; ---------------------------------------------------------------------------
		align 10h

loc_6ED65640:				; CODE XREF: sub_6ED65310+219j
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_78]
		mov	ecx, [ebp+var_74]
		mov	edx, [eax]
		mov	edx, [edx+ecx-1]
		mov	[ebp+var_74], edx
		jmp	loc_6ED65535
; ---------------------------------------------------------------------------

loc_6ED65657:				; CODE XREF: sub_6ED65310+77j
		movsx	eax, [ebp+var_61]
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED65310
		mov	dword ptr [esp+8], 0
		mov	[esp+0Ch], eax
		mov	[esp], ecx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED60E40
		mov	[ebp+var_69], 0
		jmp	loc_6ED65460
; ---------------------------------------------------------------------------

loc_6ED6568A:				; CODE XREF: sub_6ED65310+20Fj
		test	edx, edx
		jnz	loc_6ED65525
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_28]
		mov	edx, [ecx+74h]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_6ED94310
		sub	esp, 4
		jmp	loc_6ED65525
sub_6ED65310	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED656B6	proc near		; DATA XREF: sub_6ED65310+20o
		add	ebp, 8
		mov	ecx, [ebp-54h]
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	[ebp-7Ch], ecx
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		mov	eax, [ebp-7Ch]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED656B6	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED656F0	proc near		; CODE XREF: sub_6ED65AE0+355p
					; sub_6ED65FC0+511p ...

var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_65		= byte ptr -65h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_28		= byte ptr -28h
var_10		= dword	ptr -10h
var_A		= word ptr -0Ah
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset dword_6ED9A7E0
		mov	[ebp+var_38], offset sub_6ED65AAC
		mov	[ebp+var_34], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+74h]
		test	edx, edx
		mov	[ebp+var_64], edx
		jz	short loc_6ED6573C
		mov	eax, [edx]
		mov	edx, [eax+8]
		test	edx, edx
		jnz	loc_6ED65861

loc_6ED6573C:				; CODE XREF: sub_6ED656F0+3Dj
		mov	[ebp+var_60], 0

loc_6ED65743:				; CODE XREF: sub_6ED656F0+B8j
					; sub_6ED656F0+1FAj ...
		cmp	[ebp+var_60], 0FFFFFFFFh
		jz	loc_6ED657EE

loc_6ED6574D:				; CODE XREF: sub_6ED656F0+F8j
		cmp	[ebp+var_60], 3
		jz	loc_6ED65965
		mov	ecx, [ebp+arg_0]
		movzx	eax, word ptr [ecx+98h]
		mov	edx, eax
		or	edx, 1
		cmp	dx, 0FFFFh
		jz	loc_6ED65A50
		mov	[ebp+var_A], ax
		movzx	eax, ax
		test	eax, 0FF80h
		jnz	loc_6ED659A0
		movsx	eax, ds:byte_6EDA0FE0[eax]

loc_6ED65789:				; CODE XREF: sub_6ED656F0+2DBj
					; sub_6ED656F0+342j
		mov	ecx, [ebp+var_60]
		lea	edx, [ecx+ecx*2]
		lea	eax, [edx+eax]
		mov	eax, ds:dword_6EDA1060[eax*4]
		cmp	eax, 1
		mov	[ebp+var_60], eax
		jz	loc_6ED659D0
		cmp	eax, 2
		jnz	short loc_6ED65743
		mov	eax, [ebp+arg_0]
		cmp	byte ptr [eax+61h], 0
		jnz	loc_6ED659ED
		mov	ecx, [ebp+arg_0]

loc_6ED657BA:				; CODE XREF: sub_6ED656F0+337j
		movzx	eax, word ptr [ecx+98h]
		mov	[esp], ecx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], ax
		call	sub_6ED58460

loc_6ED657D5:				; CODE XREF: sub_6ED656F0+31Aj
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED5BC00
		cmp	[ebp+var_60], 0FFFFFFFFh
		jnz	loc_6ED6574D

loc_6ED657EE:				; CODE XREF: sub_6ED656F0+57j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aLetterIsExpect	; "letter is expected"
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_58], 1
		mov	[esp], ecx
		mov	[ebp+var_10], eax
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		call	sub_6ED60A80
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		mov	[ebp+var_65], 0
		jnz	short loc_6ED65850
		mov	eax, [ebp+var_10]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_65], 0
		xchg	ax, ax

loc_6ED65850:				; CODE XREF: sub_6ED656F0+145j
					; sub_6ED656F0+270j ...
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_65]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED65861:				; CODE XREF: sub_6ED656F0+46j
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_6ED65885
		mov	eax, [eax+4]
		mov	ecx, [ebp+var_64]
		mov	[esp+4], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	[esp], ecx
		call	sub_6ED96400

loc_6ED65885:				; CODE XREF: sub_6ED656F0+176j
		mov	eax, [ebp+var_64]
		mov	edx, [eax]
		mov	eax, [edx+8]
		sub	eax, 1
		mov	[ebp+var_6C], eax
		lea	eax, [eax+eax*2]
		mov	eax, [edx+eax*4+18h]
		mov	[ebp+var_60], eax
		mov	eax, [edx+4]
		cmp	[ebp+var_6C], eax
		jg	loc_6ED65970
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_6ED658C0
		mov	edx, eax
		sar	edx, 1
		cmp	[ebp+var_6C], edx
		jl	loc_6ED65970
		lea	esi, [esi+0]

loc_6ED658C0:				; CODE XREF: sub_6ED656F0+1BDj
					; sub_6ED656F0+2ABj
		mov	ecx, [ebp+var_6C]
		mov	[esp+8], eax
		mov	eax, [ebp+var_64]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], ecx
		mov	[esp], eax
		call	sub_6ED96400
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+74h]
		mov	edx, [eax]
		mov	ecx, [edx+8]
		test	ecx, ecx
		jz	loc_6ED65743
		mov	[esp], eax
		call	sub_6ED943D0
		mov	ecx, [eax+4]
		mov	[ebp+var_74], ecx
		mov	eax, [eax]
		cmp	eax, offset sub_6ED60FB0
		mov	[ebp+var_70], eax
		jz	loc_6ED65A80

loc_6ED6590E:				; CODE XREF: sub_6ED656F0+392j
					; sub_6ED656F0+3B7j
		test	byte ptr [ebp+var_70], 1
		jnz	loc_6ED65A37
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_74]

loc_6ED6591E:				; CODE XREF: sub_6ED656F0+359j
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	[ebp+var_70]
		test	al, al
		jnz	loc_6ED65743
		mov	eax, [ebp+var_60]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED656F0
		mov	dword ptr [esp+8], 0
		mov	[esp+0Ch], eax
		mov	[esp], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED58610
		mov	[ebp+var_65], 0
		jmp	loc_6ED65850
; ---------------------------------------------------------------------------

loc_6ED65965:				; CODE XREF: sub_6ED656F0+61j
		mov	[ebp+var_65], 1
		jmp	loc_6ED65850
; ---------------------------------------------------------------------------
		align 10h

loc_6ED65970:				; CODE XREF: sub_6ED656F0+1B3j
					; sub_6ED656F0+1C6j
		mov	edx, [ebp+var_6C]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0Ch
		mov	dword ptr [esp], 1Ch
		mov	[esp+4], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN11QVectorData4growEiiib
		jmp	loc_6ED658C0
; ---------------------------------------------------------------------------

loc_6ED659A0:				; CODE XREF: sub_6ED656F0+8Cj
		lea	edx, [ebp+var_A]
		mov	[esp], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZNK5QChar8categoryEv
		lea	edx, [eax-0Fh]
		cmp	edx, 4
		jbe	short loc_6ED65A30
		cmp	eax, 5
		jz	short loc_6ED65A30
		sub	eax, 1
		cmp	eax, 6
		sbb	eax, eax
		add	eax, 2
		jmp	loc_6ED65789
; ---------------------------------------------------------------------------

loc_6ED659D0:				; CODE XREF: sub_6ED656F0+AFj
		mov	eax, [ebp+arg_0]
		cmp	byte ptr [eax+61h], 0
		jz	short loc_6ED65A10
		mov	dword ptr [eax+4B8h], 0
		mov	dword ptr [eax+4B4h], 0

loc_6ED659ED:				; CODE XREF: sub_6ED656F0+C1j
		mov	edx, eax
		movzx	eax, word ptr [eax+98h]
		mov	[esp], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], ax
		call	sub_6ED594C0
		jmp	loc_6ED657D5
; ---------------------------------------------------------------------------
		align 10h

loc_6ED65A10:				; CODE XREF: sub_6ED656F0+2E7j
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [ecx+2ACh], 0
		mov	dword ptr [ecx+2A8h], 0
		jmp	loc_6ED657BA
; ---------------------------------------------------------------------------
		align 10h

loc_6ED65A30:				; CODE XREF: sub_6ED656F0+2C9j
					; sub_6ED656F0+2CEj
		xor	eax, eax
		jmp	loc_6ED65789
; ---------------------------------------------------------------------------

loc_6ED65A37:				; CODE XREF: sub_6ED656F0+222j
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_74]
		mov	ecx, [ebp+var_70]
		mov	edx, [eax]
		mov	edx, [edx+ecx-1]
		mov	[ebp+var_70], edx
		jmp	loc_6ED6591E
; ---------------------------------------------------------------------------
		align 10h

loc_6ED65A50:				; CODE XREF: sub_6ED656F0+7Aj
		mov	eax, [ebp+var_60]
		mov	dword ptr [esp+4], offset sub_6ED656F0
		mov	dword ptr [esp+8], 0
		mov	[esp], ecx
		mov	[esp+0Ch], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED60E40
		mov	[ebp+var_65], 0
		jmp	loc_6ED65850
; ---------------------------------------------------------------------------
		align 10h

loc_6ED65A80:				; CODE XREF: sub_6ED656F0+218j
		test	ecx, ecx
		jnz	loc_6ED6590E
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_28]
		mov	edx, [ecx+74h]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_6ED94310
		sub	esp, 4
		jmp	loc_6ED6590E
sub_6ED656F0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED65AAC	proc near		; DATA XREF: sub_6ED656F0+20o
		add	ebp, 8
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-58h], 0
		mov	[ebp-78h], eax
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-78h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED65AAC	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED65AE0	proc near		; CODE XREF: sub_6ED65AE0+2CDp
					; sub_6ED65FC0+4E2p
					; DATA XREF: ...

var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_69		= byte ptr -69h
var_68		= dword	ptr -68h
var_61		= byte ptr -61h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_28		= byte ptr -28h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 98h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset word_6ED9A7E6
		mov	[ebp+var_38], offset sub_6ED65F86
		mov	[ebp+var_34], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+74h]
		test	edx, edx
		mov	[ebp+var_68], edx
		jz	short loc_6ED65B28
		mov	edx, [edx]
		mov	eax, [edx+8]
		test	eax, eax
		jnz	short loc_6ED65B90

loc_6ED65B28:				; CODE XREF: sub_6ED65AE0+3Dj
		mov	[ebp+var_61], 0

loc_6ED65B2C:				; CODE XREF: sub_6ED65AE0+9Fj
					; sub_6ED65AE0+A4j ...
		cmp	[ebp+var_61], 0FFh ; jumptable 6ED65B84	default	case
		jz	loc_6ED65D26
		cmp	[ebp+var_61], 6
		jz	loc_6ED65D90
		mov	edx, [ebp+arg_0]
		movzx	eax, word ptr [edx+98h]
		mov	edx, eax
		or	edx, 1
		cmp	dx, 0FFFFh
		jz	loc_6ED65F27
		cmp	ax, 9
		jz	short loc_6ED65B69
		cmp	ax, 20h
		jnz	loc_6ED65CB1

loc_6ED65B69:				; CODE XREF: sub_6ED65AE0+7Dj
					; sub_6ED65AE0+1D5j ...
		xor	edx, edx

loc_6ED65B6B:				; CODE XREF: sub_6ED65AE0+1F0j
					; sub_6ED65AE0+1FFj ...
		movsx	eax, [ebp+var_61]
		lea	eax, [eax+eax*8]
		movzx	eax, ds:byte_6EDA1200[edx+eax]
		cmp	al, 6		; switch 7 cases
		mov	[ebp+var_61], al
		ja	short loc_6ED65B2C ; jumptable 6ED65B84	default	case
		movzx	eax, al
		jmp	ds:off_6EDA07C0[eax*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_6ED65B90:				; CODE XREF: sub_6ED65AE0+46j
		mov	ecx, [edx]
		cmp	ecx, 1
		jz	short loc_6ED65BBC
		mov	edx, [edx+4]
		mov	[esp+4], eax
		mov	eax, [ebp+var_68]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+8], edx
		mov	[esp], eax
		call	sub_6ED96400
		mov	ecx, [ebp+var_68]
		mov	edx, [ecx]
		mov	eax, [edx+8]

loc_6ED65BBC:				; CODE XREF: sub_6ED65AE0+B5j
		mov	ecx, [ebp+var_68]
		sub	eax, 1
		mov	[ebp+var_70], eax
		lea	eax, [eax+eax*2]
		shl	eax, 2
		add	eax, [ecx]
		mov	eax, [eax+18h]
		mov	[ebp+var_60], eax
		mov	eax, [edx+4]
		cmp	[ebp+var_70], eax
		jg	loc_6ED65EE0
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_6ED65BF2
		mov	edx, eax
		sar	edx, 1
		cmp	[ebp+var_70], edx
		jl	loc_6ED65EE0

loc_6ED65BF2:				; CODE XREF: sub_6ED65AE0+103j
					; sub_6ED65AE0+42Bj
		mov	edx, [ebp+var_70]
		mov	ecx, [ebp+var_68]
		mov	[esp+8], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], edx
		mov	[esp], ecx
		call	sub_6ED96400
		movzx	eax, byte ptr [ebp+var_60]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_61], al
		mov	eax, [edx+74h]
		mov	edx, [eax]
		mov	edx, [edx+8]
		test	edx, edx
		jz	loc_6ED65B2C	; jumptable 6ED65B84 default case
		mov	[esp], eax
		call	sub_6ED943D0
		mov	ecx, [eax+4]
		mov	[ebp+var_78], ecx
		mov	eax, [eax]
		cmp	eax, offset sub_6ED60FB0
		mov	[ebp+var_74], eax
		jz	loc_6ED65F5A

loc_6ED65C47:				; CODE XREF: sub_6ED65AE0+47Cj
					; sub_6ED65AE0+4A1j
		test	byte ptr [ebp+var_74], 1
		jnz	loc_6ED65F10
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_78]

loc_6ED65C57:				; CODE XREF: sub_6ED65AE0+442j
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	[ebp+var_74]
		test	al, al
		jnz	loc_6ED65B2C	; jumptable 6ED65B84 default case
		movsx	eax, [ebp+var_61]
		mov	dword ptr [esp+4], offset sub_6ED65AE0
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED58610
		mov	[ebp+var_69], 0
		lea	esi, [esi+0]

loc_6ED65CA0:				; CODE XREF: sub_6ED65AE0+28Dj
					; sub_6ED65AE0+2AAj ...
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_69]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED65CB1:				; CODE XREF: sub_6ED65AE0+83j
		cmp	ax, 0Dh
		jz	loc_6ED65B69
		cmp	ax, 0Ah
		nop
		jz	loc_6ED65B69
		cmp	ax, 28h
		mov	edx, 1
		nop
		jz	loc_6ED65B6B
		cmp	ax, 29h
		mov	edx, 2
		jz	loc_6ED65B6B
		cmp	ax, 3Fh
		mov	dl, 3
		jz	loc_6ED65B6B
		cmp	ax, 2Ah
		mov	dl, 4
		jz	loc_6ED65B6B
		cmp	ax, 2Bh
		mov	dl, 5
		jz	loc_6ED65B6B
		cmp	ax, 7Ch
		mov	dl, 6
		jz	loc_6ED65B6B
		xor	edx, edx
		cmp	ax, 2Ch
		setnz	dl
		add	edx, 7
		jmp	loc_6ED65B6B
; ---------------------------------------------------------------------------

loc_6ED65D26:				; CODE XREF: sub_6ED65AE0+50j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aUnexpectedChar	; "unexpected character"
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_58], 1
		mov	[esp], edx
		mov	[ebp+var_C], eax
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		call	sub_6ED60A80
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		mov	[ebp+var_69], 0
		jnz	loc_6ED65CA0
		mov	eax, [ebp+var_C]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_69], 0
		jmp	loc_6ED65CA0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED65D90:				; CODE XREF: sub_6ED65AE0+5Aj
		mov	[ebp+var_69], 1
		jmp	loc_6ED65CA0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED65DA0:				; CODE XREF: sub_6ED65AE0+A4j
					; DATA XREF: .rdata:off_6EDA07C0o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED65B84 case 2
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED65AE0
		test	al, al
		jnz	loc_6ED65B2C	; jumptable 6ED65B84 default case
		mov	dword ptr [esp+0Ch], 2

loc_6ED65DC2:				; CODE XREF: sub_6ED65AE0+36Aj
		mov	eax, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED65AE0
		mov	dword ptr [esp+8], 0
		mov	[esp], eax
		call	sub_6ED58610
		mov	[ebp+var_69], 0
		jmp	loc_6ED65CA0
; ---------------------------------------------------------------------------

loc_6ED65DE6:				; CODE XREF: sub_6ED65AE0+A4j
					; DATA XREF: .rdata:off_6EDA07C0o
		mov	eax, [ebp+arg_0] ; jumptable 6ED65B84 case 1
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED61030
		test	al, al
		jnz	loc_6ED65B2C	; jumptable 6ED65B84 default case
		mov	dword ptr [esp+0Ch], 1
		jmp	short loc_6ED65E72
; ---------------------------------------------------------------------------
		align 10h

loc_6ED65E10:				; CODE XREF: sub_6ED65AE0+A4j
					; DATA XREF: .rdata:off_6EDA07C0o
		mov	eax, [ebp+arg_0] ; jumptable 6ED65B84 case 6
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED5BC00
		jmp	loc_6ED65B2C	; jumptable 6ED65B84 default case
; ---------------------------------------------------------------------------

loc_6ED65E24:				; CODE XREF: sub_6ED65AE0+A4j
					; DATA XREF: .rdata:off_6EDA07C0o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED65B84 case 5
		mov	byte ptr [ecx+61h], 0
		mov	[esp], ecx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED656F0
		test	al, al
		jnz	loc_6ED65B2C	; jumptable 6ED65B84 default case
		mov	dword ptr [esp+0Ch], 5
		jmp	loc_6ED65DC2
; ---------------------------------------------------------------------------
		align 10h

loc_6ED65E50:				; CODE XREF: sub_6ED65AE0+A4j
					; DATA XREF: .rdata:off_6EDA07C0o
		mov	eax, [ebp+arg_0] ; jumptable 6ED65B84 case 4
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED61030
		test	al, al
		jnz	loc_6ED65B2C	; jumptable 6ED65B84 default case
		mov	dword ptr [esp+0Ch], 4

loc_6ED65E72:				; CODE XREF: sub_6ED65AE0+328j
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED65AE0
		mov	dword ptr [esp+8], 0
		mov	[esp], edx
		call	sub_6ED58610
		mov	[ebp+var_69], 0
		jmp	loc_6ED65CA0
; ---------------------------------------------------------------------------

loc_6ED65E96:				; CODE XREF: sub_6ED65AE0+A4j
					; DATA XREF: .rdata:off_6EDA07C0o
		mov	edx, [ebp+arg_0] ; jumptable 6ED65B84 case 3
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED61030
		test	al, al
		jnz	loc_6ED65B2C	; jumptable 6ED65B84 default case
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+0Ch], 3
		mov	dword ptr [esp+4], offset sub_6ED65AE0
		mov	dword ptr [esp+8], 0
		mov	[esp], ecx
		call	sub_6ED58610
		mov	[ebp+var_69], 0
		jmp	loc_6ED65CA0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED65EE0:				; CODE XREF: sub_6ED65AE0+F9j
					; sub_6ED65AE0+10Cj
		mov	eax, [ebp+var_70]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0Ch
		mov	dword ptr [esp], 1Ch
		mov	[esp+4], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN11QVectorData4growEiiib
		jmp	loc_6ED65BF2
; ---------------------------------------------------------------------------

loc_6ED65F10:				; CODE XREF: sub_6ED65AE0+16Bj
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_78]
		mov	ecx, [ebp+var_74]
		mov	edx, [eax]
		mov	edx, [edx+ecx-1]
		mov	[ebp+var_74], edx
		jmp	loc_6ED65C57
; ---------------------------------------------------------------------------

loc_6ED65F27:				; CODE XREF: sub_6ED65AE0+73j
		movsx	eax, [ebp+var_61]
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED65AE0
		mov	dword ptr [esp+8], 0
		mov	[esp+0Ch], eax
		mov	[esp], ecx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED60E40
		mov	[ebp+var_69], 0
		jmp	loc_6ED65CA0
; ---------------------------------------------------------------------------

loc_6ED65F5A:				; CODE XREF: sub_6ED65AE0+161j
		test	ecx, ecx
		jnz	loc_6ED65C47
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_28]
		mov	edx, [ecx+74h]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_6ED94310
		sub	esp, 4
		jmp	loc_6ED65C47
sub_6ED65AE0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED65F86	proc near		; DATA XREF: sub_6ED65AE0+20o
		add	ebp, 8
		mov	ecx, [ebp-54h]
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	[ebp-7Ch], ecx
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		mov	eax, [ebp-7Ch]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED65F86	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED65FC0	proc near		; CODE XREF: sub_6ED6E1C0+409p
					; DATA XREF: sub_6ED65FC0+1B0o	...

var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_79		= byte ptr -79h
var_78		= dword	ptr -78h
var_71		= byte ptr -71h
var_70		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_38		= byte ptr -38h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0A8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_4C], eax
		lea	eax, [ebp+var_6C]
		mov	[ebp+var_54], offset sub_6ED997C0
		mov	[ebp+var_50], offset dword_6ED9A7EC
		mov	[ebp+var_48], offset sub_6ED6669C
		mov	[ebp+var_44], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+74h]
		test	edx, edx
		mov	[ebp+var_78], edx
		jz	short loc_6ED66008
		mov	eax, [edx]
		mov	edx, [eax+8]
		test	edx, edx
		jnz	short loc_6ED66080

loc_6ED66008:				; CODE XREF: sub_6ED65FC0+3Dj
		mov	[ebp+var_71], 0

loc_6ED6600C:				; CODE XREF: sub_6ED65FC0+151j
					; sub_6ED65FC0+1A3j
		mov	eax, [ebp+arg_0]
		add	eax, 70h
		mov	[ebp+var_84], eax

loc_6ED66018:				; CODE XREF: sub_6ED65FC0+AEj
					; sub_6ED65FC0+B3j ...
		cmp	[ebp+var_71], 0FFh ; jumptable 6ED66073	default	case
		jz	loc_6ED66250
		cmp	[ebp+var_71], 12h
		jz	loc_6ED662C0
		mov	ecx, [ebp+arg_0]
		movzx	eax, word ptr [ecx+98h]
		mov	edx, eax
		or	edx, 1
		cmp	dx, 0FFFFh
		jz	loc_6ED66640
		cmp	ax, 9
		jz	short loc_6ED66055
		cmp	ax, 20h
		jnz	loc_6ED661A8

loc_6ED66055:				; CODE XREF: sub_6ED65FC0+89j
					; sub_6ED65FC0+1ECj ...
		xor	edx, edx

loc_6ED66057:				; CODE XREF: sub_6ED65FC0+205j
					; sub_6ED65FC0+214j ...
		movsx	eax, [ebp+var_71]
		lea	ecx, [eax+eax*2]
		lea	eax, [eax+ecx*4]
		movzx	eax, ds:byte_6EDA1260[edx+eax]
		cmp	al, 12h		; switch 19 cases
		mov	[ebp+var_71], al
		ja	short loc_6ED66018 ; jumptable 6ED66073	default	case
		movzx	eax, al
		jmp	ds:off_6EDA07F8[eax*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_6ED66080:				; CODE XREF: sub_6ED65FC0+46j
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_6ED660A4
		mov	eax, [eax+4]
		mov	ecx, [ebp+var_78]
		mov	[esp+4], edx
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	[esp], ecx
		call	sub_6ED96400

loc_6ED660A4:				; CODE XREF: sub_6ED65FC0+C5j
		mov	eax, [ebp+var_78]
		mov	edx, [eax]
		mov	eax, [edx+8]
		sub	eax, 1
		mov	[ebp+var_80], eax
		lea	eax, [eax+eax*2]
		mov	eax, [edx+eax*4+18h]
		mov	[ebp+var_70], eax
		mov	eax, [edx+4]
		cmp	[ebp+var_80], eax
		jg	loc_6ED662E5
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_6ED660E0
		mov	edx, eax
		sar	edx, 1
		cmp	[ebp+var_80], edx
		jl	loc_6ED662E5
		nop
		lea	esi, [esi+0]

loc_6ED660E0:				; CODE XREF: sub_6ED65FC0+10Cj
					; sub_6ED65FC0+350j
		mov	ecx, [ebp+var_80]
		mov	[esp+8], eax
		mov	eax, [ebp+var_78]
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp+4], ecx
		mov	[esp], eax
		call	sub_6ED96400
		mov	ecx, [ebp+arg_0]
		movzx	edx, byte ptr [ebp+var_70]
		mov	eax, [ecx+74h]
		mov	[ebp+var_71], dl
		mov	edx, [eax]
		mov	ecx, [edx+8]
		test	ecx, ecx
		jz	loc_6ED6600C
		mov	[esp], eax
		call	sub_6ED943D0
		mov	edx, [eax+4]
		mov	[ebp+var_8C], edx
		mov	eax, [eax]
		cmp	eax, offset sub_6ED60FB0
		mov	[ebp+var_88], eax
		jz	loc_6ED66670

loc_6ED6613B:				; CODE XREF: sub_6ED65FC0+6B2j
					; sub_6ED65FC0+6D7j
		test	byte ptr [ebp+var_88], 1
		jnz	loc_6ED66315
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_8C]

loc_6ED66151:				; CODE XREF: sub_6ED65FC0+370j
		mov	[esp], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		call	[ebp+var_88]
		test	al, al
		jnz	loc_6ED6600C
		movsx	eax, [ebp+var_71]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED65FC0
		mov	dword ptr [esp+8], 0
		mov	[esp+0Ch], eax
		mov	[esp], edx
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED58610
		mov	[ebp+var_79], 0

loc_6ED66197:				; CODE XREF: sub_6ED65FC0+2D7j
					; sub_6ED65FC0+2F4j ...
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_79]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED661A8:				; CODE XREF: sub_6ED65FC0+8Fj
		cmp	ax, 0Dh
		jz	loc_6ED66055
		cmp	ax, 0Ah
		jz	loc_6ED66055
		cmp	ax, 3Eh
		mov	edx, 1
		jz	loc_6ED66057
		cmp	ax, 7Ch
		mov	edx, 2
		jz	loc_6ED66057
		cmp	ax, 28h
		mov	dl, 3
		jz	loc_6ED66057
		cmp	ax, 29h
		mov	dl, 4
		jz	loc_6ED66057
		cmp	ax, 23h
		mov	dl, 5
		jz	loc_6ED66057
		cmp	ax, 3Fh
		mov	dl, 6
		jz	loc_6ED66057
		cmp	ax, 2Ah
		mov	dl, 7
		jz	loc_6ED66057
		cmp	ax, 2Bh
		mov	dl, 8
		jz	loc_6ED66057
		cmp	ax, 41h
		mov	dl, 9
		jz	loc_6ED66057
		cmp	ax, 45h
		mov	dl, 0Ah
		jz	loc_6ED66057
		xor	edx, edx
		cmp	ax, 4Ch
		setnz	dl
		add	edx, 0Bh
		jmp	loc_6ED66057
; ---------------------------------------------------------------------------
		align 10h

loc_6ED66250:				; CODE XREF: sub_6ED65FC0+5Cj
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aUnexpectedChar	; "unexpected character"
		mov	[ebp+var_68], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_68], 1
		mov	[esp], ecx
		mov	[ebp+var_C], eax
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		call	sub_6ED60A80
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		mov	[ebp+var_79], 0
		jnz	loc_6ED66197
		mov	eax, [ebp+var_C]
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_79], 0
		jmp	loc_6ED66197
; ---------------------------------------------------------------------------
		align 10h

loc_6ED662C0:				; CODE XREF: sub_6ED65FC0+66j
		mov	[ebp+var_79], 1
		jmp	loc_6ED66197
; ---------------------------------------------------------------------------
		align 10h

loc_6ED662D0:				; CODE XREF: sub_6ED65FC0+B3j
					; DATA XREF: .rdata:off_6EDA07F8o
		mov	eax, [ebp+arg_0] ; jumptable 6ED66073 cases 10,14,16,18
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED5BC00
		nop
		jmp	loc_6ED66018	; jumptable 6ED66073 default case
; ---------------------------------------------------------------------------

loc_6ED662E5:				; CODE XREF: sub_6ED65FC0+102j
					; sub_6ED65FC0+115j
		mov	edx, [ebp+var_80]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0Ch
		mov	dword ptr [esp], 1Ch
		mov	[esp+4], edx
		mov	[ebp+var_68], 0FFFFFFFFh
		call	ds:_ZN11QVectorData4growEiiib
		jmp	loc_6ED660E0
; ---------------------------------------------------------------------------

loc_6ED66315:				; CODE XREF: sub_6ED65FC0+182j
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_8C]
		mov	ecx, [ebp+var_88]
		mov	edx, [eax]
		mov	edx, [edx+ecx-1]
		mov	[ebp+var_88], edx
		jmp	loc_6ED66151
; ---------------------------------------------------------------------------

loc_6ED66335:				; CODE XREF: sub_6ED65FC0+B3j
					; DATA XREF: .rdata:off_6EDA07F8o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED66073 case 11
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED61030
		test	al, al
		jnz	loc_6ED66018	; jumptable 6ED66073 default case
		mov	dword ptr [esp+0Ch], 0Bh

loc_6ED66357:				; CODE XREF: sub_6ED65FC0+428j
					; sub_6ED65FC0+4F7j ...
		mov	eax, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED65FC0
		mov	dword ptr [esp+8], 0
		mov	[esp], eax
		call	sub_6ED58610
		mov	[ebp+var_79], 0
		jmp	loc_6ED66197
; ---------------------------------------------------------------------------
		align 10h

loc_6ED66380:				; CODE XREF: sub_6ED65FC0+B3j
					; DATA XREF: .rdata:off_6EDA07F8o
		mov	eax, [ebp+arg_0] ; jumptable 6ED66073 case 9
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED60FB0
		test	al, al
		jnz	loc_6ED66018	; jumptable 6ED66073 default case
		mov	dword ptr [esp+0Ch], 9

loc_6ED663A2:				; CODE XREF: sub_6ED65FC0+46Ej
					; sub_6ED65FC0+54Aj ...
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED65FC0
		mov	dword ptr [esp+8], 0
		mov	[esp], edx
		call	sub_6ED58610
		mov	[ebp+var_79], 0
		jmp	loc_6ED66197
; ---------------------------------------------------------------------------

loc_6ED663C6:				; CODE XREF: sub_6ED65FC0+B3j
					; DATA XREF: .rdata:off_6EDA07F8o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED66073 case 4
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED60FB0
		test	al, al
		jnz	loc_6ED66018	; jumptable 6ED66073 default case
		mov	dword ptr [esp+0Ch], 4
		jmp	loc_6ED66357
; ---------------------------------------------------------------------------
		align 10h

loc_6ED663F0:				; CODE XREF: sub_6ED65FC0+B3j
					; DATA XREF: .rdata:off_6EDA07F8o
		mov	ecx, [ebp+var_84] ; jumptable 6ED66073 case 5
		lea	edx, [ebp+var_14]
		mov	[esp+4], edx
		mov	[ebp+var_14], offset aEmpty ; "EMPTY"
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED94590
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED64390
		test	al, al
		jnz	loc_6ED66018	; jumptable 6ED66073 default case
		mov	dword ptr [esp+0Ch], 5
		jmp	loc_6ED663A2
; ---------------------------------------------------------------------------

loc_6ED66433:				; CODE XREF: sub_6ED65FC0+B3j
					; DATA XREF: .rdata:off_6EDA07F8o
		mov	eax, [ebp+var_84] ; jumptable 6ED66073 case 6
		lea	ecx, [ebp+var_18]
		mov	[esp+4], ecx
		mov	[ebp+var_18], offset aAny ; "ANY"
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED94590
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		call	sub_6ED64390
		test	al, al
		jnz	loc_6ED66018	; jumptable 6ED66073 default case
		mov	dword ptr [esp+0Ch], 6

loc_6ED66471:				; CODE XREF: sub_6ED65FC0+526j
					; sub_6ED65FC0+572j ...
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED65FC0
		mov	dword ptr [esp+8], 0
		mov	[esp], ecx
		call	sub_6ED58610
		mov	[ebp+var_79], 0
		jmp	loc_6ED66197
; ---------------------------------------------------------------------------

loc_6ED66495:				; CODE XREF: sub_6ED65FC0+B3j
					; DATA XREF: .rdata:off_6EDA07F8o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED66073 case 15
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED65AE0
		test	al, al
		jnz	loc_6ED66018	; jumptable 6ED66073 default case
		mov	dword ptr [esp+0Ch], 0Fh
		jmp	loc_6ED66357
; ---------------------------------------------------------------------------
		align 10h

loc_6ED664C0:				; CODE XREF: sub_6ED65FC0+B3j
					; DATA XREF: .rdata:off_6EDA07F8o
		mov	edx, [ebp+arg_0] ; jumptable 6ED66073 case 12
		mov	byte ptr [edx+61h], 0
		mov	[esp], edx
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED656F0
		test	al, al
		jnz	loc_6ED66018	; jumptable 6ED66073 default case
		mov	dword ptr [esp+0Ch], 0Ch
		jmp	short loc_6ED66471
; ---------------------------------------------------------------------------

loc_6ED664E8:				; CODE XREF: sub_6ED65FC0+B3j
					; DATA XREF: .rdata:off_6EDA07F8o
		mov	eax, [ebp+arg_0] ; jumptable 6ED66073 case 13
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED60FB0
		test	al, al
		jnz	loc_6ED66018	; jumptable 6ED66073 default case
		mov	dword ptr [esp+0Ch], 0Dh
		jmp	loc_6ED663A2
; ---------------------------------------------------------------------------
		align 10h

loc_6ED66510:				; CODE XREF: sub_6ED65FC0+B3j
					; DATA XREF: .rdata:off_6EDA07F8o
		mov	edx, [ebp+arg_0] ; jumptable 6ED66073 case 17
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED61030
		test	al, al
		jnz	loc_6ED66018	; jumptable 6ED66073 default case
		mov	dword ptr [esp+0Ch], 11h
		jmp	loc_6ED66471
; ---------------------------------------------------------------------------

loc_6ED66537:				; CODE XREF: sub_6ED65FC0+B3j
					; DATA XREF: .rdata:off_6EDA07F8o
		mov	eax, [ebp+arg_0] ; jumptable 6ED66073 case 7
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED61030
		test	al, al
		jnz	loc_6ED66018	; jumptable 6ED66073 default case
		mov	dword ptr [esp+0Ch], 7
		jmp	loc_6ED663A2
; ---------------------------------------------------------------------------
		align 10h

loc_6ED66560:				; CODE XREF: sub_6ED65FC0+B3j
					; DATA XREF: .rdata:off_6EDA07F8o
		mov	eax, [ebp+var_84] ; jumptable 6ED66073 case 8
		lea	ecx, [ebp+var_1C]
		mov	[esp+4], ecx
		mov	[ebp+var_1C], offset aPcdata ; "#PCDATA"
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED94590
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		call	sub_6ED64390
		test	al, al
		jnz	loc_6ED66018	; jumptable 6ED66073 default case
		mov	dword ptr [esp+0Ch], 8
		jmp	loc_6ED66471
; ---------------------------------------------------------------------------

loc_6ED665A3:				; CODE XREF: sub_6ED65FC0+B3j
					; DATA XREF: .rdata:off_6EDA07F8o
		mov	edx, [ebp+var_84] ; jumptable 6ED66073 case 1
		lea	eax, [ebp+var_10]
		mov	[ebp+var_10], offset aLement ; "LEMENT"
		mov	[esp+4], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED94590
		mov	ecx, [ebp+arg_0]
		mov	[esp], ecx
		call	sub_6ED64390
		test	al, al
		jnz	loc_6ED66018	; jumptable 6ED66073 default case
		mov	dword ptr [esp+0Ch], 1
		jmp	loc_6ED66357
; ---------------------------------------------------------------------------

loc_6ED665E6:				; CODE XREF: sub_6ED65FC0+B3j
					; DATA XREF: .rdata:off_6EDA07F8o
		mov	edx, [ebp+arg_0] ; jumptable 6ED66073 case 2
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED60FB0
		test	al, al
		jnz	loc_6ED66018	; jumptable 6ED66073 default case
		mov	dword ptr [esp+0Ch], 2
		jmp	loc_6ED66471
; ---------------------------------------------------------------------------
		align 10h

loc_6ED66610:				; CODE XREF: sub_6ED65FC0+B3j
					; DATA XREF: .rdata:off_6EDA07F8o
		mov	eax, [ebp+arg_0] ; jumptable 6ED66073 case 3
		mov	byte ptr [eax+61h], 0
		mov	[esp], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED656F0
		test	al, al
		jnz	loc_6ED66018	; jumptable 6ED66073 default case
		mov	dword ptr [esp+0Ch], 3
		jmp	loc_6ED663A2
; ---------------------------------------------------------------------------
		align 10h

loc_6ED66640:				; CODE XREF: sub_6ED65FC0+7Fj
		movsx	eax, [ebp+var_71]
		mov	dword ptr [esp+4], offset sub_6ED65FC0
		mov	dword ptr [esp+8], 0
		mov	[esp], ecx
		mov	[esp+0Ch], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED60E40
		mov	[ebp+var_79], 0
		jmp	loc_6ED66197
; ---------------------------------------------------------------------------

loc_6ED66670:				; CODE XREF: sub_6ED65FC0+175j
		test	edx, edx
		jnz	loc_6ED6613B
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_38]
		mov	edx, [ecx+74h]
		mov	[esp], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_6ED94310
		sub	esp, 4
		jmp	loc_6ED6613B
sub_6ED65FC0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED6669C	proc near		; DATA XREF: sub_6ED65FC0+20o
		add	ebp, 8
		mov	eax, [ebp-64h]
		mov	dword ptr [ebp-68h], 0
		mov	[ebp-90h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-90h]
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED6669C	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED666D0	proc near		; CODE XREF: sub_6ED6BFC0+6F1p
					; DATA XREF: sub_6ED666D0+1B0o	...

var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_79		= byte ptr -79h
var_78		= dword	ptr -78h
var_71		= byte ptr -71h
var_70		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_38		= byte ptr -38h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0A8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_4C], eax
		lea	eax, [ebp+var_6C]
		mov	[ebp+var_54], offset sub_6ED997C0
		mov	[ebp+var_50], offset word_6ED9A7F2
		mov	[ebp+var_48], offset sub_6ED66E0C
		mov	[ebp+var_44], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+74h]
		test	edx, edx
		mov	[ebp+var_78], edx
		jz	short loc_6ED66718
		mov	eax, [edx]
		mov	edx, [eax+8]
		test	edx, edx
		jnz	short loc_6ED66790

loc_6ED66718:				; CODE XREF: sub_6ED666D0+3Dj
		mov	[ebp+var_71], 0

loc_6ED6671C:				; CODE XREF: sub_6ED666D0+151j
					; sub_6ED666D0+1A3j
		mov	eax, [ebp+arg_0]
		add	eax, 70h
		mov	[ebp+var_84], eax

loc_6ED66728:				; CODE XREF: sub_6ED666D0+B2j
					; sub_6ED666D0+B7j ...
		cmp	[ebp+var_71], 0FFh ; jumptable 6ED66787	default	case
		jz	loc_6ED66974
		jl	short loc_6ED66743
		movzx	eax, [ebp+var_71]
		sub	eax, 13h
		cmp	al, 1
		jbe	loc_6ED668B0

loc_6ED66743:				; CODE XREF: sub_6ED666D0+62j
		mov	ecx, [ebp+arg_0]
		movzx	eax, word ptr [ecx+98h]
		mov	edx, eax
		or	edx, 1
		cmp	dx, 0FFFFh
		jz	loc_6ED66DDC
		cmp	ax, 9
		jz	short loc_6ED6676C
		cmp	ax, 20h
		jnz	loc_6ED668C5

loc_6ED6676C:				; CODE XREF: sub_6ED666D0+90j
					; sub_6ED666D0+1F9j ...
		xor	edx, edx

loc_6ED6676E:				; CODE XREF: sub_6ED666D0+212j
					; sub_6ED666D0+221j ...
		movsx	eax, [ebp+var_71]
		imul	eax, 0Eh
		movzx	eax, ds:byte_6EDA13A0[edx+eax]
		cmp	al, 13h		; switch 20 cases
		mov	[ebp+var_71], al
		ja	short loc_6ED66728 ; jumptable 6ED66787	default	case
		movzx	eax, al
		jmp	ds:off_6EDA0864[eax*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_6ED66790:				; CODE XREF: sub_6ED666D0+46j
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_6ED667B4
		mov	eax, [eax+4]
		mov	ecx, [ebp+var_78]
		mov	[esp+4], edx
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	[esp], ecx
		call	sub_6ED96400

loc_6ED667B4:				; CODE XREF: sub_6ED666D0+C5j
		mov	eax, [ebp+var_78]
		mov	edx, [eax]
		mov	eax, [edx+8]
		sub	eax, 1
		mov	[ebp+var_80], eax
		lea	eax, [eax+eax*2]
		mov	eax, [edx+eax*4+18h]
		mov	[ebp+var_70], eax
		mov	eax, [edx+4]
		cmp	[ebp+var_80], eax
		jg	loc_6ED669F5
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_6ED667F0
		mov	edx, eax
		sar	edx, 1
		cmp	[ebp+var_80], edx
		jl	loc_6ED669F5
		nop
		lea	esi, [esi+0]

loc_6ED667F0:				; CODE XREF: sub_6ED666D0+10Cj
					; sub_6ED666D0+350j
		mov	ecx, [ebp+var_80]
		mov	[esp+8], eax
		mov	eax, [ebp+var_78]
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp+4], ecx
		mov	[esp], eax
		call	sub_6ED96400
		mov	ecx, [ebp+arg_0]
		movzx	edx, byte ptr [ebp+var_70]
		mov	eax, [ecx+74h]
		mov	[ebp+var_71], dl
		mov	edx, [eax]
		mov	edx, [edx+8]
		test	edx, edx
		jz	loc_6ED6671C
		mov	[esp], eax
		call	sub_6ED943D0
		mov	edx, [eax+4]
		mov	[ebp+var_8C], edx
		mov	eax, [eax]
		cmp	eax, offset sub_6ED60FB0
		mov	[ebp+var_88], eax
		jz	loc_6ED66DB0

loc_6ED6684B:				; CODE XREF: sub_6ED666D0+6E2j
					; sub_6ED666D0+707j
		test	byte ptr [ebp+var_88], 1
		jnz	loc_6ED66A25
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_8C]

loc_6ED66861:				; CODE XREF: sub_6ED666D0+370j
		mov	[esp], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		call	[ebp+var_88]
		test	al, al
		jnz	loc_6ED6671C
		movsx	eax, [ebp+var_71]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED666D0
		mov	dword ptr [esp+8], 0
		mov	[esp+0Ch], eax
		mov	[esp], edx
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED58610
		mov	[ebp+var_79], 0
		jmp	short loc_6ED668B4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED668B0:				; CODE XREF: sub_6ED666D0+6Dj
		mov	[ebp+var_79], 1

loc_6ED668B4:				; CODE XREF: sub_6ED666D0+1D7j
					; sub_6ED666D0+2EBj ...
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_79]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED668C5:				; CODE XREF: sub_6ED666D0+96j
		cmp	ax, 0Dh
		jz	loc_6ED6676C
		cmp	ax, 0Ah
		jz	loc_6ED6676C
		cmp	ax, 28h
		mov	edx, 1
		jz	loc_6ED6676E
		cmp	ax, 29h
		mov	edx, 2
		jz	loc_6ED6676E
		cmp	ax, 7Ch
		mov	dl, 3
		jz	loc_6ED6676E
		cmp	ax, 43h
		mov	dl, 4
		jz	loc_6ED6676E
		cmp	ax, 45h
		mov	dl, 5
		jz	loc_6ED6676E
		cmp	ax, 49h
		mov	dl, 6
		jz	loc_6ED6676E
		cmp	ax, 4Dh
		mov	dl, 7
		jz	loc_6ED6676E
		cmp	ax, 4Eh
		mov	dl, 8
		jz	loc_6ED6676E
		cmp	ax, 4Fh
		mov	dl, 9
		jz	loc_6ED6676E
		cmp	ax, 52h
		mov	dl, 0Ah
		jz	loc_6ED6676E
		cmp	ax, 53h
		mov	dl, 0Bh
		jz	loc_6ED6676E
		xor	edx, edx
		cmp	ax, 59h
		setnz	dl
		add	edx, 0Ch
		jmp	loc_6ED6676E
; ---------------------------------------------------------------------------

loc_6ED66974:				; CODE XREF: sub_6ED666D0+5Cj
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aLetterIsExpect	; "letter is expected"
		mov	[ebp+var_68], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_68], 1
		mov	[esp], ecx
		mov	[ebp+var_C], eax
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		call	sub_6ED60A80
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		mov	[ebp+var_79], 0
		jnz	loc_6ED668B4
		mov	eax, [ebp+var_C]
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_79], 0
		jmp	loc_6ED668B4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED669E0:				; CODE XREF: sub_6ED666D0+B7j
					; DATA XREF: .rdata:off_6EDA0864o
		mov	eax, [ebp+arg_0] ; jumptable 6ED66787 cases 4,6,8,10,19
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED5BC00
		nop
		jmp	loc_6ED66728	; jumptable 6ED66787 default case
; ---------------------------------------------------------------------------

loc_6ED669F5:				; CODE XREF: sub_6ED666D0+102j
					; sub_6ED666D0+115j
		mov	edx, [ebp+var_80]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0Ch
		mov	dword ptr [esp], 1Ch
		mov	[esp+4], edx
		mov	[ebp+var_68], 0FFFFFFFFh
		call	ds:_ZN11QVectorData4growEiiib
		jmp	loc_6ED667F0
; ---------------------------------------------------------------------------

loc_6ED66A25:				; CODE XREF: sub_6ED666D0+182j
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_8C]
		mov	ecx, [ebp+var_88]
		mov	edx, [eax]
		mov	edx, [edx+ecx-1]
		mov	[ebp+var_88], edx
		jmp	loc_6ED66861
; ---------------------------------------------------------------------------

loc_6ED66A45:				; CODE XREF: sub_6ED666D0+B7j
					; DATA XREF: .rdata:off_6EDA0864o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED66787 case 18
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED60FB0
		test	al, al
		jnz	loc_6ED66728	; jumptable 6ED66787 default case
		mov	dword ptr [esp+0Ch], 12h

loc_6ED66A67:				; CODE XREF: sub_6ED666D0+460j
					; sub_6ED666D0+514j ...
		mov	eax, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED666D0
		mov	dword ptr [esp+8], 0
		mov	[esp], eax
		call	sub_6ED58610
		mov	[ebp+var_79], 0
		jmp	loc_6ED668B4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED66A90:				; CODE XREF: sub_6ED666D0+B7j
					; DATA XREF: .rdata:off_6EDA0864o
		mov	ecx, [ebp+var_84] ; jumptable 6ED66787 case 5
		lea	edx, [ebp+var_1C]
		mov	[esp+4], edx
		mov	[ebp+var_1C], offset aEntit ; "ENTIT"
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED94590
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED64390
		test	al, al
		jnz	loc_6ED66728	; jumptable 6ED66787 default case
		mov	dword ptr [esp+0Ch], 5

loc_6ED66ACE:				; CODE XREF: sub_6ED666D0+4EDj
					; sub_6ED666D0+585j ...
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED666D0
		mov	dword ptr [esp+8], 0
		mov	[esp], edx
		call	sub_6ED58610
		mov	[ebp+var_79], 0
		jmp	loc_6ED668B4
; ---------------------------------------------------------------------------

loc_6ED66AF2:				; CODE XREF: sub_6ED666D0+B7j
					; DATA XREF: .rdata:off_6EDA0864o
		mov	edx, [ebp+var_84] ; jumptable 6ED66787 case 3
		lea	eax, [ebp+var_18]
		mov	[ebp+var_18], offset byte_6EDA0847
		mov	[esp+4], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED94590
		mov	ecx, [ebp+arg_0]
		mov	[esp], ecx
		call	sub_6ED64390
		test	al, al
		jnz	loc_6ED66728	; jumptable 6ED66787 default case
		mov	dword ptr [esp+0Ch], 3
		jmp	loc_6ED66A67
; ---------------------------------------------------------------------------

loc_6ED66B35:				; CODE XREF: sub_6ED666D0+B7j
					; DATA XREF: .rdata:off_6EDA0864o
		lea	eax, [ebp+var_10] ; jumptable 6ED66787 case 1
		mov	[esp+4], eax
		mov	eax, [ebp+var_84]
		mov	[ebp+var_10], offset aCdata ; "CDATA"
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED94590
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		call	sub_6ED64390
		test	al, al
		jnz	loc_6ED66728	; jumptable 6ED66787 default case
		mov	dword ptr [esp+0Ch], 1

loc_6ED66B73:				; CODE XREF: sub_6ED666D0+55Ej
					; sub_6ED666D0+5F5j ...
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED666D0
		mov	dword ptr [esp+8], 0
		mov	[esp], ecx
		call	sub_6ED58610
		mov	[ebp+var_79], 0
		jmp	loc_6ED668B4
; ---------------------------------------------------------------------------

loc_6ED66B97:				; CODE XREF: sub_6ED666D0+B7j
					; DATA XREF: .rdata:off_6EDA0864o
		mov	eax, [ebp+arg_0] ; jumptable 6ED66787 case 14
		mov	byte ptr [eax+61h], 0
		mov	[esp], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED656F0
		test	al, al
		jnz	loc_6ED66728	; jumptable 6ED66787 default case
		mov	dword ptr [esp+0Ch], 0Eh
		jmp	loc_6ED66ACE
; ---------------------------------------------------------------------------

loc_6ED66BC2:				; CODE XREF: sub_6ED666D0+B7j
					; DATA XREF: .rdata:off_6EDA0864o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED66787 case 15
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED60FB0
		test	al, al
		jnz	loc_6ED66728	; jumptable 6ED66787 default case
		mov	dword ptr [esp+0Ch], 0Fh
		jmp	loc_6ED66A67
; ---------------------------------------------------------------------------
		align 10h

loc_6ED66BF0:				; CODE XREF: sub_6ED666D0+B7j
					; DATA XREF: .rdata:off_6EDA0864o
		mov	eax, [ebp+var_84] ; jumptable 6ED66787 case 7
		lea	ecx, [ebp+var_20]
		mov	[esp+4], ecx
		mov	[ebp+var_20], offset aIes ; "IES"
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED94590
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		call	sub_6ED64390
		test	al, al
		jnz	loc_6ED66728	; jumptable 6ED66787 default case
		mov	dword ptr [esp+0Ch], 7
		jmp	loc_6ED66B73
; ---------------------------------------------------------------------------

loc_6ED66C33:				; CODE XREF: sub_6ED666D0+B7j
					; DATA XREF: .rdata:off_6EDA0864o
		mov	eax, [ebp+arg_0] ; jumptable 6ED66787 case 17
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED65310
		test	al, al
		jnz	loc_6ED66728	; jumptable 6ED66787 default case
		mov	dword ptr [esp+0Ch], 11h
		jmp	loc_6ED66ACE
; ---------------------------------------------------------------------------
		align 10h

loc_6ED66C60:				; CODE XREF: sub_6ED666D0+B7j
					; DATA XREF: .rdata:off_6EDA0864o
		mov	edx, [ebp+var_84] ; jumptable 6ED66787 case 9
		lea	eax, [ebp+var_24]
		mov	[ebp+var_24], offset aMtoken ; "MTOKEN"
		mov	[esp+4], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED94590
		mov	ecx, [ebp+arg_0]
		mov	[esp], ecx
		call	sub_6ED64390
		test	al, al
		jnz	loc_6ED66728	; jumptable 6ED66787 default case
		mov	dword ptr [esp+0Ch], 9
		jmp	loc_6ED66A67
; ---------------------------------------------------------------------------

loc_6ED66CA3:				; CODE XREF: sub_6ED666D0+B7j
					; DATA XREF: .rdata:off_6EDA0864o
		mov	edx, [ebp+arg_0] ; jumptable 6ED66787 case 16
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED61030
		test	al, al
		jnz	loc_6ED66728	; jumptable 6ED66787 default case
		mov	dword ptr [esp+0Ch], 10h
		jmp	loc_6ED66B73
; ---------------------------------------------------------------------------
		align 10h

loc_6ED66CD0:				; CODE XREF: sub_6ED666D0+B7j
					; DATA XREF: .rdata:off_6EDA0864o
		mov	ecx, [ebp+var_84] ; jumptable 6ED66787 case 11
		lea	edx, [ebp+var_28]
		mov	[esp+4], edx
		mov	[ebp+var_28], offset aOtation ;	"OTATION"
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED94590
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED64390
		test	al, al
		jnz	loc_6ED66728	; jumptable 6ED66787 default case
		mov	dword ptr [esp+0Ch], 0Bh
		jmp	loc_6ED66ACE
; ---------------------------------------------------------------------------

loc_6ED66D13:				; CODE XREF: sub_6ED666D0+B7j
					; DATA XREF: .rdata:off_6EDA0864o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED66787 case 12
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED60FB0
		test	al, al
		jnz	loc_6ED66728	; jumptable 6ED66787 default case
		mov	dword ptr [esp+0Ch], 0Ch
		jmp	loc_6ED66A67
; ---------------------------------------------------------------------------
		align 10h

loc_6ED66D40:				; CODE XREF: sub_6ED666D0+B7j
					; DATA XREF: .rdata:off_6EDA0864o
		mov	edx, [ebp+arg_0] ; jumptable 6ED66787 case 13
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED61030
		test	al, al
		jnz	loc_6ED66728	; jumptable 6ED66787 default case
		mov	dword ptr [esp+0Ch], 0Dh
		jmp	loc_6ED66B73
; ---------------------------------------------------------------------------

loc_6ED66D67:				; CODE XREF: sub_6ED666D0+B7j
					; DATA XREF: .rdata:off_6EDA0864o
		lea	eax, [ebp+var_14] ; jumptable 6ED66787 case 2
		mov	[esp+4], eax
		mov	eax, [ebp+var_84]
		mov	[ebp+var_14], offset byte_6EDA0844
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED94590
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		call	sub_6ED64390
		test	al, al
		jnz	loc_6ED66728	; jumptable 6ED66787 default case
		mov	dword ptr [esp+0Ch], 2
		jmp	loc_6ED66B73
; ---------------------------------------------------------------------------
		align 10h

loc_6ED66DB0:				; CODE XREF: sub_6ED666D0+175j
		test	edx, edx
		jnz	loc_6ED6684B
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_38]
		mov	edx, [ecx+74h]
		mov	[esp], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_6ED94310
		sub	esp, 4
		jmp	loc_6ED6684B
; ---------------------------------------------------------------------------

loc_6ED66DDC:				; CODE XREF: sub_6ED666D0+86j
		movsx	eax, [ebp+var_71]
		mov	dword ptr [esp+4], offset sub_6ED666D0
		mov	dword ptr [esp+8], 0
		mov	[esp], ecx
		mov	[esp+0Ch], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED60E40
		mov	[ebp+var_79], 0
		jmp	loc_6ED668B4
sub_6ED666D0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED66E0C	proc near		; DATA XREF: sub_6ED666D0+20o
		add	ebp, 8
		mov	eax, [ebp-64h]
		mov	dword ptr [ebp-68h], 0
		mov	[ebp-90h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-90h]
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED66E0C	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED66E40	proc near		; CODE XREF: sub_6ED68FF0+2C4p
					; sub_6ED6E7C0+6ABp
					; DATA XREF: ...

var_E8		= dword	ptr -0E8h
var_E1		= byte ptr -0E1h
var_E0		= dword	ptr -0E0h
var_DC		= dword	ptr -0DCh
var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_CD		= byte ptr -0CDh
var_CC		= dword	ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B1		= byte ptr -0B1h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_95		= byte ptr -95h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= byte ptr -7Ch
var_78		= dword	ptr -78h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_48		= byte ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= byte ptr -2Ch
var_28		= dword	ptr -28h
var_24		= byte ptr -24h
var_20		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_18		= byte ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_9		= byte ptr -9
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 108h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_5C], eax
		lea	eax, [ebp+var_7C]
		mov	[ebp+var_64], offset sub_6ED997C0
		mov	[ebp+var_60], offset dword_6ED9A7F8
		mov	[ebp+var_58], offset sub_6ED679A6
		mov	[ebp+var_54], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+74h]
		test	edx, edx
		mov	[ebp+var_A0], edx
		jz	short loc_6ED66E8F
		mov	eax, [edx]
		mov	edx, [eax+8]
		test	edx, edx
		jnz	loc_6ED670D0

loc_6ED66E8F:				; CODE XREF: sub_6ED66E40+40j
		mov	[ebp+var_95], 0

loc_6ED66E96:				; CODE XREF: sub_6ED66E40+33Dj
					; sub_6ED66E40+38Fj
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_80], eax
		mov	[ebp+var_84], eax
		mov	eax, ds:_ZNK7QStringltERKS_
		add	edx, 8
		add	ecx, 4
		mov	[ebp+var_9C], edx
		mov	[ebp+var_B8], ecx
		mov	[ebp+var_C0], eax

loc_6ED66EC7:				; CODE XREF: sub_6ED66E40+119j
					; sub_6ED66E40+16Bj ...
		cmp	[ebp+var_95], 2
		jz	loc_6ED66FCD

loc_6ED66ED4:				; CODE XREF: sub_6ED66E40+187j
		cmp	[ebp+var_95], 4
		jz	loc_6ED67340
		cmp	[ebp+var_95], 0FFh
		jz	loc_6ED672D0
		movsx	ecx, [ebp+var_95]

loc_6ED66EF5:				; CODE XREF: sub_6ED66E40+269j
					; sub_6ED66E40+287j
		mov	eax, [ebp+arg_0]
		movzx	edx, word ptr [eax+98h]
		mov	eax, edx
		or	eax, 1
		cmp	ax, 0FFFFh
		jz	loc_6ED678D2
		xor	eax, eax
		cmp	dx, 3Bh
		jz	short loc_6ED66F22
		xor	eax, eax
		cmp	dx, 25h
		setnz	al
		add	eax, 1

loc_6ED66F22:				; CODE XREF: sub_6ED66E40+D4j
		lea	edx, [ecx+ecx*2]
		movzx	edx, ds:byte_6EDA1538[eax+edx]
		cmp	dl, 3
		mov	[ebp+var_95], dl
		jg	short loc_6ED66FA4
		cmp	dl, 2
		jl	loc_6ED67730
		mov	ecx, [ebp+arg_0]
		mov	byte ptr [ecx+61h], 1
		mov	[esp], ecx
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED656F0
		test	al, al
		jnz	loc_6ED66EC7
		movsx	eax, [ebp+var_95]
		mov	dword ptr [esp+4], offset sub_6ED66E40
		mov	dword ptr [esp+8], 0
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED58610
		mov	[ebp+var_B1], 0
		lea	esi, [esi+0]

loc_6ED66F90:				; CODE XREF: sub_6ED66E40+3C9j
					; sub_6ED66E40+4DAj ...
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_B1]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED66FA4:				; CODE XREF: sub_6ED66E40+F6j
		cmp	[ebp+var_95], 4
		jnz	loc_6ED66EC7

loc_6ED66FB1:				; CODE XREF: sub_6ED66E40+8F9j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED5BC00
		cmp	[ebp+var_95], 2
		jnz	loc_6ED66ED4

loc_6ED66FCD:				; CODE XREF: sub_6ED66E40+8Ej
		mov	ecx, [ebp+var_80]
		mov	edx, [ebp+var_84]
		mov	[ebp+var_10], ecx
		lock inc dword ptr [edx]
		setnz	al
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_78], 0Ah
		mov	[esp], ecx
		call	sub_6ED59190
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_A4], eax
		mov	eax, [edx+8]
		mov	eax, [eax+34h]
		cmp	eax, 1
		jz	short loc_6ED67013
		mov	ecx, [ebp+var_9C]
		mov	[esp], ecx
		call	sub_6ED925B0

loc_6ED67013:				; CODE XREF: sub_6ED66E40+1C3j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+8]
		mov	edx, [eax+38h]
		mov	[ebp+var_88], eax
		test	edx, edx
		mov	[ebp+var_90], edx
		jns	loc_6ED67231

loc_6ED67030:				; CODE XREF: sub_6ED66E40+44Ej
					; sub_6ED66E40+475j ...
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		mov	eax, [eax+34h]
		cmp	eax, 1
		jz	short loc_6ED67053
		mov	ecx, [ebp+var_9C]
		mov	[ebp+var_78], 0Ah
		mov	[esp], ecx
		call	sub_6ED925B0

loc_6ED67053:				; CODE XREF: sub_6ED66E40+1FCj
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_88]
		cmp	[eax+8], edx
		jz	loc_6ED67383
		mov	eax, edx
		sub	eax, 4
		lea	ecx, [ebp+var_10]
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	[ebp+var_78], 0Ah
		call	ds:_ZN7QStringaSERKS_

loc_6ED67081:				; CODE XREF: sub_6ED66E40+690j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+6Ch]
		cmp	eax, 2
		jz	loc_6ED67895
		cmp	eax, 3
		jz	loc_6ED67778

loc_6ED67099:				; CODE XREF: sub_6ED66E40+778j
					; sub_6ED66E40+84Bj ...
		mov	edx, [ebp+var_10]
		lock dec dword ptr [edx]
		setnz	al
		test	al, al
		mov	ecx, 3
		jnz	loc_6ED66EF5
		mov	eax, [ebp+var_10]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	ecx, 3
		jmp	loc_6ED66EF5
; ---------------------------------------------------------------------------
		align 10h

loc_6ED670D0:				; CODE XREF: sub_6ED66E40+49j
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_6ED670F7
		mov	eax, [eax+4]
		mov	ecx, [ebp+var_A0]
		mov	[esp+4], edx
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	[esp], ecx
		call	sub_6ED96400

loc_6ED670F7:				; CODE XREF: sub_6ED66E40+295j
		mov	eax, [ebp+var_A0]
		mov	edx, [eax]
		mov	eax, [edx+8]
		sub	eax, 1
		mov	[ebp+var_BC], eax
		lea	eax, [eax+eax*2]
		mov	eax, [edx+eax*4+18h]
		mov	[ebp+var_94], eax
		mov	eax, [edx+4]
		cmp	[ebp+var_BC], eax
		jg	loc_6ED67350
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_6ED67140
		mov	edx, eax
		sar	edx, 1
		cmp	[ebp+var_BC], edx
		jl	loc_6ED67350
		lea	esi, [esi+0]

loc_6ED67140:				; CODE XREF: sub_6ED66E40+2EBj
					; sub_6ED66E40+53Ej
		mov	ecx, [ebp+var_BC]
		mov	[esp+8], eax
		mov	eax, [ebp+var_A0]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+4], ecx
		mov	[esp], eax
		call	sub_6ED96400
		mov	ecx, [ebp+arg_0]
		movzx	edx, byte ptr [ebp+var_94]
		mov	eax, [ecx+74h]
		mov	[ebp+var_95], dl
		mov	edx, [eax]
		mov	ecx, [edx+8]
		test	ecx, ecx
		jz	loc_6ED66E96
		mov	[esp], eax
		call	sub_6ED943D0
		mov	edx, [eax+4]
		mov	[ebp+var_D8], edx
		mov	eax, [eax]
		cmp	eax, offset sub_6ED60FB0
		mov	[ebp+var_CC], eax
		jz	loc_6ED67904

loc_6ED671A7:				; CODE XREF: sub_6ED66E40+AC6j
					; sub_6ED66E40+AEBj
		test	byte ptr [ebp+var_CC], 1
		jnz	loc_6ED67758
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_D8]

loc_6ED671BD:				; CODE XREF: sub_6ED66E40+933j
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	[ebp+var_CC]
		test	al, al
		jnz	loc_6ED66E96
		movsx	eax, [ebp+var_95]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED66E40
		mov	dword ptr [esp+8], 0
		mov	[esp+0Ch], eax
		mov	[esp], edx
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED58610
		mov	[ebp+var_B1], 0
		jmp	loc_6ED66F90
; ---------------------------------------------------------------------------
		align 10h

loc_6ED67210:				; CODE XREF: sub_6ED66E40+40Fj
					; sub_6ED66E40+432j
		mov	edx, [ebp+var_8C]
		sub	[ebp+var_90], 1
		mov	eax, [ebp+var_88]
		mov	[ebp+var_88], edx
		js	short loc_6ED67282
		mov	[ebp+var_88], eax

loc_6ED67231:				; CODE XREF: sub_6ED66E40+1EAj
					; sub_6ED66E40+440j
		mov	eax, [ebp+var_88]
		mov	ecx, [ebp+var_90]
		mov	ecx, [eax+ecx*4+4]
		mov	eax, [ebp+var_9C]
		mov	[ebp+var_8C], ecx
		cmp	ecx, [eax]
		jz	short loc_6ED67210
		mov	edx, [ebp+var_A4]
		mov	eax, ecx
		sub	eax, 8
		mov	[esp], eax
		mov	[ebp+var_78], 0Ah
		mov	[esp+4], edx
		call	ds:_ZNK7QStringltERKS_
		test	al, al
		jz	short loc_6ED67210
		mov	ecx, [ebp+var_8C]
		mov	[ebp+var_88], ecx
		jmp	short loc_6ED67231
; ---------------------------------------------------------------------------

loc_6ED67282:				; CODE XREF: sub_6ED66E40+3E9j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_88]
		cmp	[eax+8], edx
		jz	loc_6ED67030
		mov	ecx, [ebp+var_A4]
		mov	eax, edx
		sub	eax, 8
		mov	[esp+4], eax
		mov	[ebp+var_78], 0Ah
		mov	[esp], ecx
		call	[ebp+var_C0]
		test	al, al
		jz	loc_6ED67030
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+8]
		mov	[ebp+var_88], eax
		jmp	loc_6ED67030
; ---------------------------------------------------------------------------
		align 10h

loc_6ED672D0:				; CODE XREF: sub_6ED66E40+A8j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aLetterIsExpect	; "letter is expected"
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_78], 3
		mov	[ebp+var_34], eax
		lea	eax, [ebp+var_34]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED60A80
		mov	eax, [ebp+var_34]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		mov	[ebp+var_B1], 0
		jnz	loc_6ED66F90
		mov	eax, [ebp+var_34]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_B1], 0
		jmp	loc_6ED66F90
; ---------------------------------------------------------------------------
		align 10h

loc_6ED67340:				; CODE XREF: sub_6ED66E40+9Bj
		mov	[ebp+var_B1], 1
		jmp	loc_6ED66F90
; ---------------------------------------------------------------------------
		align 10h

loc_6ED67350:				; CODE XREF: sub_6ED66E40+2E1j
					; sub_6ED66E40+2F7j
		mov	edx, [ebp+var_BC]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0Ch
		mov	dword ptr [esp], 1Ch
		mov	[esp+4], edx
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZN11QVectorData4growEiiib
		jmp	loc_6ED67140
; ---------------------------------------------------------------------------

loc_6ED67383:				; CODE XREF: sub_6ED66E40+21Fj
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+88h]
		test	edx, edx
		jz	loc_6ED675B0
		mov	[esp], eax
		mov	[ebp+var_78], 0Ah
		call	sub_6ED59190
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_C4], eax
		mov	eax, [edx+4]
		mov	eax, [eax+34h]
		cmp	eax, 1
		jz	short loc_6ED673C5
		mov	ecx, [ebp+var_B8]
		mov	[esp], ecx
		call	sub_6ED922B0

loc_6ED673C5:				; CODE XREF: sub_6ED66E40+575j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		mov	edx, [eax+38h]
		mov	[ebp+var_A8], eax
		test	edx, edx
		mov	[ebp+var_B0], edx
		jns	loc_6ED6755D

loc_6ED673E2:				; CODE XREF: sub_6ED66E40+8AEj
					; sub_6ED66E40+8D5j ...
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_14], 0
		mov	eax, [edx+4]
		mov	eax, [eax+34h]
		cmp	eax, 1
		jz	short loc_6ED6740C
		mov	ecx, [ebp+var_B8]
		mov	[ebp+var_78], 0Ah
		mov	[esp], ecx
		call	sub_6ED922B0

loc_6ED6740C:				; CODE XREF: sub_6ED66E40+5B5j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_A8]
		cmp	[eax+4], edx
		jz	loc_6ED675B0
		mov	edx, [eax+88h]
		lea	eax, [ebp+var_14]
		mov	ecx, [edx]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+var_A8]
		mov	[esp], edx
		sub	eax, 4
		mov	[esp+8], eax
		mov	eax, [ebp+var_A8]
		sub	eax, 8
		mov	[esp+4], eax
		mov	eax, [ecx+8]
		mov	[ebp+var_78], 0Ah
		call	eax
		test	al, al
		jz	loc_6ED67945
		mov	edx, [ebp+var_14]
		test	edx, edx
		jz	loc_6ED675B0
		mov	eax, [edx]
		lea	ecx, [ebp+var_1C]
		mov	[esp+4], edx
		mov	[esp], ecx
		mov	eax, [eax+14h]
		mov	[ebp+var_78], 0Ah
		call	eax
		sub	esp, 4
		lea	eax, [ebp+var_1C]
		lea	edx, [ebp+var_10]
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_78], 8
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_78], 0Ah
		call	sub_6ED94560
		mov	edx, [ebp+var_14]
		test	edx, edx
		jz	short loc_6ED674BF
		mov	eax, [edx]
		mov	[esp], edx
		call	dword ptr [eax+4]

loc_6ED674BF:				; CODE XREF: sub_6ED66E40+675j
		lea	eax, [ebp+var_10]
		mov	[ebp+var_78], 0Ah
		call	sub_6ED5B910
		test	al, al
		jnz	loc_6ED67081
		lea	eax, [ebp+var_20]
		mov	[esp+4], eax
		lea	eax, [ebp+var_24]
		mov	[ebp+var_20], offset aErrorInTheText ; "error in the text declaration of an ext"...
		mov	[esp], eax
		call	sub_6ED94530
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_24]
		mov	[esp+4], eax
		mov	[ebp+var_78], 7
		mov	[esp], ecx
		call	sub_6ED60A80
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		mov	[ebp+var_78], 0Ah
		call	sub_6ED94560

loc_6ED6751A:				; CODE XREF: sub_6ED66E40+89Dj
					; sub_6ED66E40+A35j ...
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_B1], 0
		jmp	loc_6ED66F90
; ---------------------------------------------------------------------------

loc_6ED67538:				; CODE XREF: sub_6ED66E40+73Bj
					; sub_6ED66E40+75Ej
		mov	ecx, [ebp+var_AC]
		sub	[ebp+var_B0], 1
		mov	eax, [ebp+var_A8]
		mov	[ebp+var_A8], ecx
		js	loc_6ED676E2
		mov	[ebp+var_A8], eax

loc_6ED6755D:				; CODE XREF: sub_6ED66E40+59Cj
					; sub_6ED66E40+76Cj
		mov	eax, [ebp+var_A8]
		mov	ecx, [ebp+var_B0]
		mov	ecx, [eax+ecx*4+4]
		mov	eax, [ebp+var_B8]
		mov	[ebp+var_AC], ecx
		cmp	ecx, [eax]
		jz	short loc_6ED67538
		mov	edx, [ebp+var_C4]
		mov	eax, ecx
		sub	eax, 0Ch
		mov	[esp], eax
		mov	[ebp+var_78], 0Ah
		mov	[esp+4], edx
		call	ds:_ZNK7QStringltERKS_
		test	al, al
		jz	short loc_6ED67538
		mov	ecx, [ebp+var_AC]
		mov	[ebp+var_A8], ecx
		jmp	short loc_6ED6755D
; ---------------------------------------------------------------------------
		align 10h

loc_6ED675B0:				; CODE XREF: sub_6ED66E40+54Ej
					; sub_6ED66E40+5D8j ...
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+7Ch]
		test	eax, eax
		jz	loc_6ED67099
		mov	eax, [eax]
		mov	ecx, [ebp+arg_0]
		mov	eax, [eax+30h]
		mov	[esp], ecx
		mov	[ebp+var_78], 0Ah
		mov	[ebp+var_D4], eax
		call	sub_6ED59190
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_C8], eax
		mov	eax, [eax]
		mov	eax, [eax+8]
		add	eax, 1
		mov	[esp+4], eax
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		call	ds:_ZN7QStringC1EiN2Qt14InitializationE
		mov	edx, [ebp+var_28]
		mov	eax, [edx]
		cmp	eax, 1
		jz	loc_6ED67880

loc_6ED6760F:				; CODE XREF: sub_6ED66E40+A48j
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_78], 2
		call	ds:_ZN7QString7reallocEv
		mov	eax, [ebp+var_28]
		mov	eax, [eax+0Ch]

loc_6ED67628:				; CODE XREF: sub_6ED66E40+A50j
		mov	ecx, [ebp+var_C8]
		mov	word ptr [eax],	25h
		mov	edx, [ecx]
		lea	ecx, [eax+2]
		mov	eax, [edx+8]
		mov	edx, [edx+0Ch]
		mov	[esp], ecx	; void *
		add	eax, eax
		mov	[esp+4], edx	; void *
		mov	[esp+8], eax	; size_t
		call	memcpy
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+7Ch]
		lea	eax, [ebp+var_28]
		mov	[esp+4], eax
		mov	[ebp+var_78], 6
		mov	[esp], edx
		call	[ebp+var_D4]
		mov	[ebp+var_CD], al
		mov	eax, [ebp+var_28]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED67740

loc_6ED67684:				; CODE XREF: sub_6ED66E40+913j
		cmp	[ebp+var_CD], 0
		jnz	loc_6ED67099
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_2C]
		mov	eax, [edx+7Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	eax, [edx+34h]
		mov	[ebp+var_78], 0Ah
		call	eax
		mov	ecx, [ebp+arg_0]
		sub	esp, 4
		lea	eax, [ebp+var_2C]
		mov	[esp+4], eax
		mov	[ebp+var_78], 5
		mov	[esp], ecx
		call	sub_6ED60A80
		lea	eax, [ebp+var_2C]
		mov	[esp], eax
		mov	[ebp+var_78], 0Ah
		call	sub_6ED94560
		jmp	loc_6ED6751A
; ---------------------------------------------------------------------------

loc_6ED676E2:				; CODE XREF: sub_6ED66E40+711j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_A8]
		cmp	[eax+4], edx
		jz	loc_6ED673E2
		mov	ecx, [ebp+var_C4]
		mov	eax, edx
		sub	eax, 0Ch
		mov	[esp+4], eax
		mov	[ebp+var_78], 0Ah
		mov	[esp], ecx
		call	ds:_ZNK7QStringltERKS_
		test	al, al
		jz	loc_6ED673E2
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		mov	[ebp+var_A8], eax
		jmp	loc_6ED673E2
; ---------------------------------------------------------------------------
		align 10h

loc_6ED67730:				; CODE XREF: sub_6ED66E40+FBj
		cmp	dl, 1
		jnz	loc_6ED66EC7
		jmp	loc_6ED66FB1
; ---------------------------------------------------------------------------
		align 10h

loc_6ED67740:				; CODE XREF: sub_6ED66E40+83Ej
		mov	eax, [ebp+var_28]
		mov	[ebp+var_78], 0Ah
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED67684
; ---------------------------------------------------------------------------

loc_6ED67758:				; CODE XREF: sub_6ED66E40+36Ej
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_D8]
		mov	ecx, [ebp+var_CC]
		mov	edx, [eax]
		mov	edx, [edx+ecx-1]
		mov	[ebp+var_CC], edx
		jmp	loc_6ED671BD
; ---------------------------------------------------------------------------

loc_6ED67778:				; CODE XREF: sub_6ED66E40+253j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_78], 0Ah
		mov	[esp], eax
		call	sub_6ED59190
		mov	[ebp+var_E8], eax
		mov	eax, [ebp+var_10]
		mov	[ebp+var_9], 20h
		mov	dword ptr [esp+8], 0
		mov	eax, [eax+8]
		add	eax, 2
		mov	[esp+4], eax
		lea	eax, [ebp+var_30]
		mov	[esp], eax
		call	ds:_ZN7QStringC1EiN2Qt14InitializationE
		mov	eax, [ebp+var_30]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED67930

loc_6ED677C3:				; CODE XREF: sub_6ED66E40+AF8j
		lea	eax, [ebp+var_30]
		mov	[esp], eax
		mov	[ebp+var_78], 1
		call	ds:_ZN7QString7reallocEv
		mov	eax, [ebp+var_30]
		mov	edx, [eax+0Ch]

loc_6ED677DC:				; CODE XREF: sub_6ED66E40+B00j
		movzx	eax, [ebp+var_9]
		mov	[edx], ax
		mov	eax, [ebp+var_10]
		add	edx, 2
		mov	[ebp+var_DC], edx
		mov	ecx, [ebp+var_DC]
		mov	edx, [eax+8]
		mov	eax, [eax+0Ch]
		mov	[esp], ecx	; void *
		mov	[ebp+var_E0], edx
		add	edx, edx
		mov	[esp+8], edx	; size_t
		mov	[esp+4], eax	; void *
		call	memcpy
		mov	eax, [ebp+var_E0]
		mov	edx, [ebp+var_DC]
		mov	ecx, [ebp+var_E8]
		mov	word ptr [edx+eax*2], 20h
		lea	eax, [ebp+var_30]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	dword ptr [esp+0Ch], 0
		mov	[esp+8], ecx
		mov	[ebp+var_78], 4
		mov	[esp], eax
		call	sub_6ED61050
		mov	[ebp+var_E1], al
		lea	eax, [ebp+var_30]
		mov	[esp], eax
		mov	[ebp+var_78], 0Ah
		call	sub_6ED94560
		cmp	[ebp+var_E1], 0
		jnz	loc_6ED67099
		jmp	loc_6ED6751A
; ---------------------------------------------------------------------------
		align 10h

loc_6ED67880:				; CODE XREF: sub_6ED66E40+7C9j
		mov	eax, [edx+0Ch]
		add	edx, 12h
		cmp	eax, edx
		jnz	loc_6ED6760F
		xchg	ax, ax
		jmp	loc_6ED67628
; ---------------------------------------------------------------------------

loc_6ED67895:				; CODE XREF: sub_6ED66E40+24Aj
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_78], 0Ah
		mov	[esp], eax
		call	sub_6ED59190
		mov	ecx, [ebp+arg_0]
		lea	edx, [ebp+var_10]
		mov	dword ptr [esp+0Ch], 1
		mov	[esp+8], eax
		mov	[esp+4], edx
		mov	[esp], ecx
		call	sub_6ED61050
		test	al, al
		jnz	loc_6ED67099
		jmp	loc_6ED6751A
; ---------------------------------------------------------------------------

loc_6ED678D2:				; CODE XREF: sub_6ED66E40+C8j
		mov	edx, [ebp+arg_0]
		mov	[esp+0Ch], ecx
		mov	dword ptr [esp+4], offset sub_6ED66E40
		mov	dword ptr [esp+8], 0
		mov	[esp], edx
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED60E40
		mov	[ebp+var_B1], 0
		jmp	loc_6ED66F90
; ---------------------------------------------------------------------------

loc_6ED67904:				; CODE XREF: sub_6ED66E40+361j
		test	edx, edx
		jnz	loc_6ED671A7
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_48]
		mov	edx, [ecx+74h]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_6ED94310
		sub	esp, 4
		jmp	loc_6ED671A7
; ---------------------------------------------------------------------------

loc_6ED67930:				; CODE XREF: sub_6ED66E40+97Dj
		mov	edx, [eax+0Ch]
		add	eax, 12h
		cmp	edx, eax
		jnz	loc_6ED677C3
		xchg	ax, ax
		jmp	loc_6ED677DC
; ---------------------------------------------------------------------------

loc_6ED67945:				; CODE XREF: sub_6ED66E40+618j
		mov	eax, [ebp+var_14]
		test	eax, eax
		jz	short loc_6ED67954
		mov	edx, [eax]
		mov	[esp], eax
		call	dword ptr [edx+4]

loc_6ED67954:				; CODE XREF: sub_6ED66E40+B0Aj
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+88h]
		lea	ecx, [ebp+var_18]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	eax, [edx+0Ch]
		mov	[ebp+var_78], 0Ah
		call	eax
		lea	eax, [ebp+var_18]
		push	ecx
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_78], 9
		mov	[esp], eax
		call	sub_6ED60A80
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_78], 0Ah
		call	sub_6ED94560
		jmp	loc_6ED6751A
sub_6ED66E40	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED679A6	proc near		; DATA XREF: sub_6ED66E40+20o
		add	ebp, 8
		mov	eax, [ebp-78h]
		mov	edx, [ebp-74h]
		cmp	eax, 1
		mov	[ebp-0ECh], edx
		jz	short loc_6ED67A32
		cmp	eax, 2
		jz	loc_6ED67A46
		cmp	eax, 3
		jz	short loc_6ED679F9
		cmp	eax, 4
		nop
		lea	esi, [esi+0]
		jz	loc_6ED67AAF
		cmp	eax, 5
		jz	short loc_6ED67A32
		cmp	eax, 6
		xchg	ax, ax
		jz	loc_6ED67A98
		cmp	eax, 7
		jz	loc_6ED67A81
		cmp	eax, 8
		jz	short loc_6ED67A6D
		cmp	eax, 9
		jz	short loc_6ED67A0B

loc_6ED679F9:				; CODE XREF: sub_6ED679A6+20j
		lea	eax, [ebp-30h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560

loc_6ED67A0B:				; CODE XREF: sub_6ED679A6+51j
					; sub_6ED679A6+9Ej ...
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-0ECh]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED67A32:				; CODE XREF: sub_6ED679A6+12j
					; sub_6ED679A6+33j
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560
		jmp	short loc_6ED67A0B
; ---------------------------------------------------------------------------

loc_6ED67A46:				; CODE XREF: sub_6ED679A6+17j
		lea	eax, [ebp-34h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560
		mov	edx, [ebp-0ECh]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED67A6D:				; CODE XREF: sub_6ED679A6+4Cj
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560
		jmp	short loc_6ED67A0B
; ---------------------------------------------------------------------------

loc_6ED67A81:				; CODE XREF: sub_6ED679A6+43j
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560
		jmp	loc_6ED67A0B
; ---------------------------------------------------------------------------

loc_6ED67A98:				; CODE XREF: sub_6ED679A6+3Aj
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560
		jmp	loc_6ED67A0B
; ---------------------------------------------------------------------------

loc_6ED67AAF:				; CODE XREF: sub_6ED679A6+2Aj
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560
		jmp	loc_6ED67A0B
sub_6ED679A6	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED67AD0	proc near		; CODE XREF: sub_6ED6E1C0+531p
					; DATA XREF: sub_6ED67AD0+1CDo	...

var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_69		= byte ptr -69h
var_68		= dword	ptr -68h
var_61		= byte ptr -61h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_28		= byte ptr -28h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= byte ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0A8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset dword_6ED9A810
		mov	[ebp+var_38], offset sub_6ED6809A
		mov	[ebp+var_34], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+74h]
		test	edx, edx
		mov	[ebp+var_68], edx
		jz	short loc_6ED67B1C
		mov	eax, [edx]
		mov	edx, [eax+8]
		test	edx, edx
		jnz	loc_6ED67BB2

loc_6ED67B1C:				; CODE XREF: sub_6ED67AD0+3Dj
		mov	[ebp+var_61], 0

loc_6ED67B20:				; CODE XREF: sub_6ED67AD0+171j
					; sub_6ED67AD0+1C3j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_0]
		add	eax, 2Ch
		add	edx, 28h
		add	ecx, 70h
		mov	[ebp+var_78], eax
		mov	[ebp+var_74], edx
		mov	[ebp+var_7C], ecx

loc_6ED67B3B:				; CODE XREF: sub_6ED67AD0+D6j
					; sub_6ED67AD0+DBj ...
		cmp	[ebp+var_61], 5	; jumptable 6ED67BAB default case
		jz	loc_6ED67CF8
		cmp	[ebp+var_61], 8
		jz	loc_6ED67DC0
		cmp	[ebp+var_61], 0FFh
		jz	loc_6ED67D50
		movsx	ecx, [ebp+var_61]

loc_6ED67B5D:				; CODE XREF: sub_6ED67AD0+27Aj
		mov	edx, [ebp+arg_0]
		movzx	eax, word ptr [edx+98h]
		mov	edx, eax
		or	edx, 1
		cmp	dx, 0FFFFh
		jz	loc_6ED67FF0
		cmp	ax, 9
		jz	short loc_6ED67B96
		cmp	ax, 20h
		jz	short loc_6ED67B96
		cmp	ax, 0Dh
		jz	short loc_6ED67B96
		cmp	ax, 0Ah
		lea	esi, [esi+0]
		jnz	loc_6ED67CD8

loc_6ED67B96:				; CODE XREF: sub_6ED67AD0+AAj
					; sub_6ED67AD0+B0j ...
		xor	edx, edx

loc_6ED67B98:				; CODE XREF: sub_6ED67AD0+211j
					; sub_6ED67AD0+223j
		movzx	ecx, ds:byte_6EDA1240[edx+ecx*4]
		cmp	cl, 8		; switch 9 cases
		mov	[ebp+var_61], cl
		ja	short loc_6ED67B3B ; jumptable 6ED67BAB	default	case
		movzx	eax, cl
		jmp	ds:off_6EDA08C0[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_6ED67BB2:				; CODE XREF: sub_6ED67AD0+46j
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_6ED67BD6
		mov	eax, [eax+4]
		mov	ecx, [ebp+var_68]
		mov	[esp+4], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	[esp], ecx
		call	sub_6ED96400

loc_6ED67BD6:				; CODE XREF: sub_6ED67AD0+E7j
		mov	eax, [ebp+var_68]
		mov	edx, [eax]
		mov	eax, [edx+8]
		sub	eax, 1
		mov	[ebp+var_70], eax
		lea	eax, [eax+eax*2]
		mov	eax, [edx+eax*4+18h]
		mov	[ebp+var_60], eax
		mov	eax, [edx+4]
		cmp	[ebp+var_70], eax
		jg	loc_6ED67FA0
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_6ED67C10
		mov	edx, eax
		sar	edx, 1
		cmp	[ebp+var_70], edx
		jl	loc_6ED67FA0
		lea	esi, [esi+0]

loc_6ED67C10:				; CODE XREF: sub_6ED67AD0+12Ej
					; sub_6ED67AD0+4FBj
		mov	ecx, [ebp+var_70]
		mov	[esp+8], eax
		mov	eax, [ebp+var_68]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], ecx
		mov	[esp], eax
		call	sub_6ED96400
		mov	ecx, [ebp+arg_0]
		movzx	edx, byte ptr [ebp+var_60]
		mov	eax, [ecx+74h]
		mov	[ebp+var_61], dl
		mov	edx, [eax]
		mov	edx, [edx+8]
		test	edx, edx
		jz	loc_6ED67B20
		mov	[esp], eax
		call	sub_6ED943D0
		mov	edx, [eax+4]
		mov	[ebp+var_88], edx
		mov	eax, [eax]
		cmp	eax, offset sub_6ED60FB0
		mov	[ebp+var_84], eax
		jz	loc_6ED6801F

loc_6ED67C6B:				; CODE XREF: sub_6ED67AD0+551j
					; sub_6ED67AD0+576j
		test	byte ptr [ebp+var_84], 1
		jnz	loc_6ED67FD0
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_88]

loc_6ED67C81:				; CODE XREF: sub_6ED67AD0+51Bj
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	[ebp+var_84]
		test	al, al
		jnz	loc_6ED67B20
		movsx	eax, [ebp+var_61]
		mov	dword ptr [esp+4], offset sub_6ED67AD0
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED58610
		mov	[ebp+var_69], 0

loc_6ED67CC7:				; CODE XREF: sub_6ED67AD0+2C7j
					; sub_6ED67AD0+2E4j ...
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_69]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED67CD8:				; CODE XREF: sub_6ED67AD0+C0j
		cmp	ax, 3Eh
		mov	edx, 1
		jz	loc_6ED67B98
		xor	edx, edx
		cmp	ax, 4Eh
		setnz	dl
		add	edx, 2
		jmp	loc_6ED67B98
; ---------------------------------------------------------------------------

loc_6ED67CF8:				; CODE XREF: sub_6ED67AD0+6Fj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+84h]
		test	eax, eax
		jz	short loc_6ED67D45
		mov	eax, [eax]
		mov	eax, [eax+8]
		mov	[esp], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[ebp+var_80], eax
		call	sub_6ED59250
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+84h]
		mov	ecx, [ebp+var_78]
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[esp+0Ch], ecx
		mov	ecx, [ebp+var_74]
		mov	[esp+8], ecx
		call	[ebp+var_80]
		test	al, al
		jz	loc_6ED6804B

loc_6ED67D45:				; CODE XREF: sub_6ED67AD0+233j
		mov	ecx, 6
		jmp	loc_6ED67B5D
; ---------------------------------------------------------------------------
		align 10h

loc_6ED67D50:				; CODE XREF: sub_6ED67AD0+83j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aUnexpectedChar	; "unexpected character"
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_58], 2
		mov	[ebp+var_10], eax
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED60A80
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		mov	[ebp+var_69], 0
		jnz	loc_6ED67CC7
		mov	eax, [ebp+var_10]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_69], 0
		jmp	loc_6ED67CC7
; ---------------------------------------------------------------------------
		align 10h

loc_6ED67DC0:				; CODE XREF: sub_6ED67AD0+79j
		mov	[ebp+var_69], 1
		jmp	loc_6ED67CC7
; ---------------------------------------------------------------------------
		align 10h

loc_6ED67DD0:				; CODE XREF: sub_6ED67AD0+DBj
					; DATA XREF: .rdata:off_6EDA08C0o
		mov	eax, [ebp+arg_0] ; jumptable 6ED67BAB case 8
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED5BC00
		nop
		jmp	loc_6ED67B3B	; jumptable 6ED67BAB default case
; ---------------------------------------------------------------------------

loc_6ED67DE5:				; CODE XREF: sub_6ED67AD0+DBj
					; DATA XREF: .rdata:off_6EDA08C0o
		mov	edx, [ebp+arg_0] ; jumptable 6ED67BAB case 7
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED60FB0
		test	al, al
		jnz	loc_6ED67B3B	; jumptable 6ED67BAB default case
		mov	dword ptr [esp+0Ch], 7

loc_6ED67E07:				; CODE XREF: sub_6ED67AD0+3FCj
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED67AD0
		mov	dword ptr [esp+8], 0
		mov	[esp], ecx
		call	sub_6ED58610
		mov	[ebp+var_69], 0
		jmp	loc_6ED67CC7
; ---------------------------------------------------------------------------
		align 10h

loc_6ED67E30:				; CODE XREF: sub_6ED67AD0+DBj
					; DATA XREF: .rdata:off_6EDA08C0o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED67BAB cases 5,6
		mov	byte ptr [ecx+68h], 1
		mov	[esp], ecx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED64710
		test	al, al
		jnz	loc_6ED67B3B	; jumptable 6ED67BAB default case
		movsx	eax, [ebp+var_61]
		mov	[esp+0Ch], eax
		jmp	loc_6ED67EF3
; ---------------------------------------------------------------------------
		align 10h

loc_6ED67E60:				; CODE XREF: sub_6ED67AD0+DBj
					; DATA XREF: .rdata:off_6EDA08C0o
		mov	eax, [ebp+arg_0] ; jumptable 6ED67BAB case 4
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED60FB0
		test	al, al
		jnz	loc_6ED67B3B	; jumptable 6ED67BAB default case
		mov	dword ptr [esp+0Ch], 4

loc_6ED67E82:				; CODE XREF: sub_6ED67AD0+4C9j
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED67AD0
		mov	dword ptr [esp+8], 0
		mov	[esp], edx
		call	sub_6ED58610
		mov	[ebp+var_69], 0
		jmp	loc_6ED67CC7
; ---------------------------------------------------------------------------

loc_6ED67EA6:				; CODE XREF: sub_6ED67AD0+DBj
					; DATA XREF: .rdata:off_6EDA08C0o
		mov	edx, [ebp+arg_0] ; jumptable 6ED67BAB case 3
		mov	byte ptr [edx+61h], 0
		mov	[esp], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED656F0
		test	al, al
		jnz	loc_6ED67B3B	; jumptable 6ED67BAB default case
		mov	dword ptr [esp+0Ch], 3
		jmp	loc_6ED67E07
; ---------------------------------------------------------------------------

loc_6ED67ED1:				; CODE XREF: sub_6ED67AD0+DBj
					; DATA XREF: .rdata:off_6EDA08C0o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED67BAB case 2
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED60FB0
		test	al, al
		jnz	loc_6ED67B3B	; jumptable 6ED67BAB default case
		mov	dword ptr [esp+0Ch], 2

loc_6ED67EF3:				; CODE XREF: sub_6ED67AD0+386j
		mov	eax, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED67AD0
		mov	dword ptr [esp+8], 0
		mov	[esp], eax
		call	sub_6ED58610
		mov	[ebp+var_69], 0
		jmp	loc_6ED67CC7
; ---------------------------------------------------------------------------

loc_6ED67F17:				; CODE XREF: sub_6ED67AD0+DBj
					; DATA XREF: .rdata:off_6EDA08C0o
		lea	eax, [ebp+var_14] ; jumptable 6ED67BAB case 1
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aNotation_0 ;	"NOTATION"
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN7QString10fromLatin1EPKci
		mov	ecx, [ebp+var_7C]
		lea	edx, [ebp+var_14]
		mov	[ebp+var_58], 1
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], ecx
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED67F77
		mov	eax, [ebp+var_14]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED67F77:				; CODE XREF: sub_6ED67AD0+492j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED64390
		test	al, al
		jnz	loc_6ED67B3B	; jumptable 6ED67BAB default case
		mov	dword ptr [esp+0Ch], 1
		jmp	loc_6ED67E82
; ---------------------------------------------------------------------------
		align 10h

loc_6ED67FA0:				; CODE XREF: sub_6ED67AD0+124j
					; sub_6ED67AD0+137j
		mov	edx, [ebp+var_70]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0Ch
		mov	dword ptr [esp], 1Ch
		mov	[esp+4], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN11QVectorData4growEiiib
		jmp	loc_6ED67C10
; ---------------------------------------------------------------------------

loc_6ED67FD0:				; CODE XREF: sub_6ED67AD0+1A2j
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_88]
		mov	ecx, [ebp+var_84]
		mov	edx, [eax]
		mov	edx, [edx+ecx-1]
		mov	[ebp+var_84], edx
		jmp	loc_6ED67C81
; ---------------------------------------------------------------------------

loc_6ED67FF0:				; CODE XREF: sub_6ED67AD0+A0j
		mov	[esp+0Ch], ecx
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED67AD0
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED60E40
		mov	[ebp+var_69], 0
		jmp	loc_6ED67CC7
; ---------------------------------------------------------------------------

loc_6ED6801F:				; CODE XREF: sub_6ED67AD0+195j
		test	edx, edx
		jnz	loc_6ED67C6B
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_28]
		mov	edx, [ecx+74h]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_6ED94310
		sub	esp, 4
		jmp	loc_6ED67C6B
; ---------------------------------------------------------------------------

loc_6ED6804B:				; CODE XREF: sub_6ED67AD0+26Fj
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_C]
		mov	eax, [edx+84h]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx+10h]
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_C]
		mov	[ebp+var_58], 3
		sub	esp, 4
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_6ED60A80
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_69], 0
		jmp	loc_6ED67CC7
sub_6ED67AD0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED6809A	proc near		; DATA XREF: sub_6ED67AD0+20o
		add	ebp, 8
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-8Ch], edx
		jz	short loc_6ED680DA
		cmp	eax, 2
		jz	short loc_6ED68101
		lea	eax, [ebp-14h]

loc_6ED680B6:				; CODE XREF: sub_6ED6809A+6Aj
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-8Ch]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED680DA:				; CODE XREF: sub_6ED6809A+12j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		mov	edx, [ebp-8Ch]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED68101:				; CODE XREF: sub_6ED6809A+17j
		lea	eax, [ebp-0Ch]
		jmp	short loc_6ED680B6
sub_6ED6809A	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED68110	proc near		; CODE XREF: sub_6ED68760+2A4p
					; sub_6ED68FF0+274p ...

var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_79		= byte ptr -79h
var_78		= dword	ptr -78h
var_71		= byte ptr -71h
var_70		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_38		= byte ptr -38h
var_20		= byte ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= byte ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_9		= byte ptr -9
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0A8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_4C], eax
		lea	eax, [ebp+var_6C]
		mov	[ebp+var_54], offset sub_6ED997C0
		mov	[ebp+var_50], offset word_6ED9A81A
		mov	[ebp+var_48], offset sub_6ED686C7
		mov	[ebp+var_44], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+74h]
		test	edx, edx
		mov	[ebp+var_78], edx
		jz	short loc_6ED6815C
		mov	eax, [edx]
		mov	edx, [eax+8]
		test	edx, edx
		jnz	loc_6ED68230

loc_6ED6815C:				; CODE XREF: sub_6ED68110+3Dj
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_71], 0
		mov	byte ptr [ecx+62h], 0

loc_6ED68167:				; CODE XREF: sub_6ED68110+1B1j
					; sub_6ED68110+203j
		mov	edx, ds:_ZNK7QString6toUIntEPbi
		mov	[ebp+var_84], edx

loc_6ED68173:				; CODE XREF: sub_6ED68110+10Aj
					; sub_6ED68110+113j ...
		cmp	[ebp+var_71], 0FFh ; jumptable 6ED68223	default	case
		jz	loc_6ED68342
		jl	short loc_6ED6818E
		movzx	eax, [ebp+var_71]
		sub	eax, 7
		cmp	al, 2
		jbe	loc_6ED683A0

loc_6ED6818E:				; CODE XREF: sub_6ED68110+6Dj
		mov	edx, [ebp+arg_0]
		movzx	eax, word ptr [edx+98h]
		mov	edx, eax
		or	edx, 1
		cmp	dx, 0FFFFh
		jz	loc_6ED68640
		mov	edx, eax
		shr	dx, 8
		test	dl, dl
		jnz	loc_6ED683B0
		xor	ecx, ecx
		cmp	al, 26h
		jz	short loc_6ED68200
		cmp	al, 3Bh
		mov	cl, 1
		jz	short loc_6ED68200
		cmp	al, 23h
		mov	cl, 2
		jz	short loc_6ED68200
		cmp	al, 78h
		mov	cl, 3
		jz	short loc_6ED68200
		cmp	al, 2Fh
		jbe	loc_6ED683A6
		cmp	al, 39h
		mov	cl, 4
		jbe	short loc_6ED68200
		cmp	al, 60h
		lea	esi, [esi+0]
		jbe	loc_6ED683A6
		cmp	al, 66h
		jbe	short loc_6ED681F6

loc_6ED681EA:				; CODE XREF: sub_6ED68110+298j
		cmp	al, 46h
		lea	esi, [esi+0]
		ja	loc_6ED683B0

loc_6ED681F6:				; CODE XREF: sub_6ED68110+D8j
		mov	ecx, 5
		nop
		lea	esi, [esi+0]

loc_6ED68200:				; CODE XREF: sub_6ED68110+A9j
					; sub_6ED68110+AFj ...
		movsx	edx, [ebp+var_71]
		lea	eax, ds:0[edx*8]
		sub	eax, edx
		movzx	eax, ds:byte_6EDA0FA0[ecx+eax]
		cmp	al, 9		; switch 10 cases
		mov	[ebp+var_71], al
		ja	loc_6ED68173	; jumptable 6ED68223 default case
		movzx	eax, al
		jmp	ds:off_6EDA090C[eax*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_6ED68230:				; CODE XREF: sub_6ED68110+46j
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_6ED68254
		mov	eax, [eax+4]
		mov	[esp+4], edx
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+var_78]
		mov	[esp], eax
		call	sub_6ED96400

loc_6ED68254:				; CODE XREF: sub_6ED68110+125j
		mov	ecx, [ebp+var_78]
		mov	edx, [ecx]
		mov	eax, [edx+8]
		sub	eax, 1
		mov	[ebp+var_80], eax
		lea	eax, [eax+eax*2]
		mov	eax, [edx+eax*4+18h]
		mov	[ebp+var_70], eax
		mov	eax, [edx+4]
		cmp	[ebp+var_80], eax
		jg	loc_6ED683D5
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_6ED68290
		mov	edx, eax
		sar	edx, 1
		cmp	[ebp+var_80], edx
		jl	loc_6ED683D5
		nop
		lea	esi, [esi+0]

loc_6ED68290:				; CODE XREF: sub_6ED68110+16Cj
					; sub_6ED68110+2F0j
		mov	edx, [ebp+var_80]
		mov	ecx, [ebp+var_78]
		mov	[esp+8], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp+4], edx
		mov	[esp], ecx
		call	sub_6ED96400
		movzx	eax, byte ptr [ebp+var_70]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_71], al
		mov	eax, [edx+74h]
		mov	edx, [eax]
		mov	ecx, [edx+8]
		test	ecx, ecx
		jz	loc_6ED68167
		mov	[esp], eax
		call	sub_6ED943D0
		mov	ecx, [eax+4]
		mov	[ebp+var_8C], ecx
		mov	eax, [eax]
		cmp	eax, offset sub_6ED60FB0
		mov	[ebp+var_88], eax
		jz	loc_6ED68614

loc_6ED682EB:				; CODE XREF: sub_6ED68110+506j
					; sub_6ED68110+52Bj
		test	byte ptr [ebp+var_88], 1
		jnz	loc_6ED68421
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_8C]

loc_6ED68301:				; CODE XREF: sub_6ED68110+32Cj
		mov	[esp], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		call	[ebp+var_88]
		test	al, al
		jnz	loc_6ED68167
		movsx	eax, [ebp+var_71]
		mov	dword ptr [esp+4], offset sub_6ED68110
		mov	dword ptr [esp+8], 0
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED58610
		mov	[ebp+var_79], 0
		jmp	short loc_6ED6838B
; ---------------------------------------------------------------------------

loc_6ED68342:				; CODE XREF: sub_6ED68110+67j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aErrorOccurre_0	; "error occurred while	parsing	reference"
		mov	[ebp+var_68], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_68], 3
		mov	[esp], ecx
		mov	[ebp+var_10], eax
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		call	sub_6ED60A80
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED68405

loc_6ED68387:				; CODE XREF: sub_6ED68110+374j
		mov	[ebp+var_79], 0

loc_6ED6838B:				; CODE XREF: sub_6ED68110+230j
					; sub_6ED68110+294j ...
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_79]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED683A0:				; CODE XREF: sub_6ED68110+78j
		mov	[ebp+var_79], 1
		jmp	short loc_6ED6838B
; ---------------------------------------------------------------------------

loc_6ED683A6:				; CODE XREF: sub_6ED68110+BFj
					; sub_6ED68110+D0j
		cmp	al, 40h
		ja	loc_6ED681EA
		xchg	ax, ax

loc_6ED683B0:				; CODE XREF: sub_6ED68110+9Fj
					; sub_6ED68110+E0j
		mov	ecx, 6
		jmp	loc_6ED68200
; ---------------------------------------------------------------------------
		align 10h

loc_6ED683C0:				; CODE XREF: sub_6ED68110+113j
					; DATA XREF: .rdata:off_6EDA090Co
		mov	eax, [ebp+arg_0] ; jumptable 6ED68223 cases 2,4
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED5BC00
		nop
		jmp	loc_6ED68173	; jumptable 6ED68223 default case
; ---------------------------------------------------------------------------

loc_6ED683D5:				; CODE XREF: sub_6ED68110+162j
					; sub_6ED68110+175j
		mov	eax, [ebp+var_80]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0Ch
		mov	dword ptr [esp], 1Ch
		mov	[esp+4], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		call	ds:_ZN11QVectorData4growEiiib
		jmp	loc_6ED68290
; ---------------------------------------------------------------------------

loc_6ED68405:				; CODE XREF: sub_6ED68110+275j
		mov	eax, [ebp+var_10]
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_79], 0
		jmp	loc_6ED6838B
; ---------------------------------------------------------------------------

loc_6ED68421:				; CODE XREF: sub_6ED68110+1E2j
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_8C]
		mov	ecx, [ebp+var_88]
		mov	edx, [eax]
		mov	edx, [edx+ecx-1]
		mov	[ebp+var_88], edx
		jmp	loc_6ED68301
; ---------------------------------------------------------------------------

loc_6ED68441:				; CODE XREF: sub_6ED68110+113j
					; DATA XREF: .rdata:off_6EDA090Co
		mov	eax, [ebp+arg_0] ; jumptable 6ED68223 case 1
		mov	dword ptr [eax+4B8h], 0
		mov	dword ptr [eax+4B4h], 0
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED5BC00
		jmp	loc_6ED68173	; jumptable 6ED68223 default case
; ---------------------------------------------------------------------------
		align 10h

loc_6ED68470:				; CODE XREF: sub_6ED68110+113j
					; DATA XREF: .rdata:off_6EDA090Co
		mov	eax, [ebp+arg_0] ; jumptable 6ED68223 case 9
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED61480
		test	al, al
		jz	loc_6ED68387
		mov	eax, [ebp+arg_0]
		call	sub_6ED5BC00
		jmp	loc_6ED68173	; jumptable 6ED68223 default case
; ---------------------------------------------------------------------------

loc_6ED68497:				; CODE XREF: sub_6ED68110+113j
					; DATA XREF: .rdata:off_6EDA090Co
		mov	edx, [ebp+arg_0] ; jumptable 6ED68223 case 3
		movzx	eax, word ptr [edx+98h]
		mov	[esp], edx
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp+4], ax
		call	sub_6ED594C0
		mov	eax, [ebp+arg_0]
		call	sub_6ED5BC00
		jmp	loc_6ED68173	; jumptable 6ED68223 default case
; ---------------------------------------------------------------------------

loc_6ED684C2:				; CODE XREF: sub_6ED68110+113j
					; DATA XREF: .rdata:off_6EDA090Co
		mov	eax, [ebp+arg_0] ; jumptable 6ED68223 case 6
		mov	byte ptr [eax+61h], 1
		mov	[esp], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED656F0
		test	al, al
		jnz	loc_6ED68173	; jumptable 6ED68223 default case
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+0Ch], 6
		mov	dword ptr [esp+4], offset sub_6ED68110
		mov	dword ptr [esp+8], 0
		mov	[esp], edx
		call	sub_6ED58610
		mov	[ebp+var_79], 0
		jmp	loc_6ED6838B
; ---------------------------------------------------------------------------
		align 10h

loc_6ED68510:				; CODE XREF: sub_6ED68110+113j
					; DATA XREF: .rdata:off_6EDA090Co
		mov	ecx, [ebp+arg_0] ; jumptable 6ED68223 case 7
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED59190
		lea	edx, [ebp+var_9]
		mov	dword ptr [esp+8], 0Ah
		mov	[esp+4], edx
		mov	[esp], eax
		call	[ebp+var_84]
		cmp	[ebp+var_9], 0
		jz	loc_6ED68673

loc_6ED68544:				; CODE XREF: sub_6ED68110+4AEj
		mov	ecx, [ebp+arg_0]
		mov	[esp+4], ax
		mov	[esp], ecx
		call	sub_6ED593D0
		mov	eax, [ebp+arg_0]
		mov	byte ptr [eax+62h], 1
		call	sub_6ED5BC00
		jmp	loc_6ED68173	; jumptable 6ED68223 default case
; ---------------------------------------------------------------------------

loc_6ED68565:				; CODE XREF: sub_6ED68110+113j
					; DATA XREF: .rdata:off_6EDA090Co
		mov	ecx, [ebp+arg_0] ; jumptable 6ED68223 case 5
		movzx	eax, word ptr [ecx+98h]
		mov	[esp], ecx
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp+4], ax
		call	sub_6ED594C0
		mov	eax, [ebp+arg_0]
		call	sub_6ED5BC00
		jmp	loc_6ED68173	; jumptable 6ED68223 default case
; ---------------------------------------------------------------------------

loc_6ED68590:				; CODE XREF: sub_6ED68110+113j
					; DATA XREF: .rdata:off_6EDA090Co
		mov	ecx, [ebp+arg_0] ; jumptable 6ED68223 case 8
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED59190
		lea	edx, [ebp+var_9]
		mov	dword ptr [esp+8], 10h
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK7QString6toUIntEPbi
		cmp	[ebp+var_9], 0
		jnz	short loc_6ED68544
		lea	eax, [ebp+var_1C]
		lea	edx, [ebp+var_20]
		mov	[esp+4], eax
		mov	[ebp+var_1C], offset aErrorOccurre_0 ; "error occurred while parsing reference"
		mov	[esp], edx
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED94530
		mov	eax, [ebp+arg_0]
		lea	ecx, [ebp+var_20]
		mov	[esp+4], ecx
		mov	[ebp+var_68], 1
		mov	[esp], eax
		call	sub_6ED60A80
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_79], 0
		jmp	loc_6ED6838B
; ---------------------------------------------------------------------------

loc_6ED68614:				; CODE XREF: sub_6ED68110+1D5j
		test	ecx, ecx
		jnz	loc_6ED682EB
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_38]
		mov	edx, [ecx+74h]
		mov	[esp], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_6ED94310
		sub	esp, 4
		jmp	loc_6ED682EB
; ---------------------------------------------------------------------------

loc_6ED68640:				; CODE XREF: sub_6ED68110+91j
		movsx	eax, [ebp+var_71]
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED68110
		mov	dword ptr [esp+8], 0
		mov	[esp+0Ch], eax
		mov	[esp], ecx
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED60E40
		mov	[ebp+var_79], 0
		jmp	loc_6ED6838B
; ---------------------------------------------------------------------------

loc_6ED68673:				; CODE XREF: sub_6ED68110+42Ej
		lea	eax, [ebp+var_14]
		lea	edx, [ebp+var_18]
		mov	[esp+4], eax
		mov	[ebp+var_14], offset aErrorOccurre_0 ; "error occurred while parsing reference"
		mov	[esp], edx
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED94530
		mov	eax, [ebp+arg_0]
		lea	ecx, [ebp+var_18]
		mov	[esp+4], ecx
		mov	[ebp+var_68], 2
		mov	[esp], eax
		call	sub_6ED60A80
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_79], 0
		jmp	loc_6ED6838B
sub_6ED68110	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED686C7	proc near		; DATA XREF: sub_6ED68110+20o
		add	ebp, 8
		mov	eax, [ebp-68h]
		mov	edx, [ebp-64h]
		cmp	eax, 1
		mov	[ebp-90h], edx
		jz	short loc_6ED68707
		cmp	eax, 2
		jz	short loc_6ED6872E
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-90h]
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED68707:				; CODE XREF: sub_6ED686C7+12j
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		mov	edx, [ebp-90h]
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED6872E:				; CODE XREF: sub_6ED686C7+17j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		mov	eax, [ebp-90h]
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED686C7	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED68760	proc near		; CODE XREF: sub_6ED68B40+E5p
					; sub_6ED6BFC0+67Dp
					; DATA XREF: ...

var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_69		= byte ptr -69h
var_68		= dword	ptr -68h
var_61		= byte ptr -61h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_28		= byte ptr -28h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 98h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset dword_6ED9A824
		mov	[ebp+var_38], offset sub_6ED68B0E
		mov	[ebp+var_34], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+74h]
		test	edx, edx
		mov	[ebp+var_68], edx
		jz	short loc_6ED687A8
		mov	edx, [edx]
		mov	eax, [edx+8]
		test	eax, eax
		jnz	short loc_6ED68820

loc_6ED687A8:				; CODE XREF: sub_6ED68760+3Dj
		mov	[ebp+var_61], 0

loc_6ED687AC:				; CODE XREF: sub_6ED68760+B1j
					; sub_6ED68760+B6j ...
		cmp	[ebp+var_61], 0FFh ; jumptable 6ED68816	default	case
		jz	loc_6ED68941
		cmp	[ebp+var_61], 7
		jz	loc_6ED689A3
		mov	edx, [ebp+arg_0]
		movzx	eax, word ptr [edx+98h]
		mov	edx, eax
		or	edx, 1
		cmp	dx, 0FFFFh
		jz	loc_6ED68AAF
		xor	edx, edx
		cmp	ax, 22h
		jz	short loc_6ED687FD
		cmp	ax, 27h
		mov	dl, 1
		jz	short loc_6ED687FD
		cmp	ax, 26h
		mov	dl, 2
		jz	short loc_6ED687FD
		xor	edx, edx
		cmp	ax, 3Ch
		setnz	dl
		add	edx, 3

loc_6ED687FD:				; CODE XREF: sub_6ED68760+7Fj
					; sub_6ED68760+87j ...
		movsx	eax, [ebp+var_61]
		lea	eax, [eax+eax*4]
		movzx	eax, ds:byte_6EDA1360[edx+eax]
		cmp	al, 7		; switch 8 cases
		mov	[ebp+var_61], al
		ja	short loc_6ED687AC ; jumptable 6ED68816	default	case
		movzx	eax, al
		jmp	ds:off_6EDA0934[eax*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_6ED68820:				; CODE XREF: sub_6ED68760+46j
		mov	ecx, [edx]
		cmp	ecx, 1
		jz	short loc_6ED6884C
		mov	edx, [edx+4]
		mov	[esp+4], eax
		mov	eax, [ebp+var_68]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+8], edx
		mov	[esp], eax
		call	sub_6ED96400
		mov	ecx, [ebp+var_68]
		mov	edx, [ecx]
		mov	eax, [edx+8]

loc_6ED6884C:				; CODE XREF: sub_6ED68760+C5j
		mov	ecx, [ebp+var_68]
		sub	eax, 1
		mov	[ebp+var_70], eax
		lea	eax, [eax+eax*2]
		shl	eax, 2
		add	eax, [ecx]
		mov	eax, [eax+18h]
		mov	[ebp+var_60], eax
		mov	eax, [edx+4]
		cmp	[ebp+var_70], eax
		jg	loc_6ED68A68
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_6ED68882
		mov	edx, eax
		sar	edx, 1
		cmp	[ebp+var_70], edx
		jl	loc_6ED68A68

loc_6ED68882:				; CODE XREF: sub_6ED68760+113j
					; sub_6ED68760+333j
		mov	edx, [ebp+var_70]
		mov	ecx, [ebp+var_68]
		mov	[esp+8], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], edx
		mov	[esp], ecx
		call	sub_6ED96400
		movzx	eax, byte ptr [ebp+var_60]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_61], al
		mov	eax, [edx+74h]
		mov	edx, [eax]
		mov	edx, [edx+8]
		test	edx, edx
		jz	loc_6ED687AC	; jumptable 6ED68816 default case
		mov	[esp], eax
		call	sub_6ED943D0
		mov	ecx, [eax+4]
		mov	[ebp+var_78], ecx
		mov	eax, [eax]
		cmp	eax, offset sub_6ED60FB0
		mov	[ebp+var_74], eax
		jz	loc_6ED68AE2

loc_6ED688D7:				; CODE XREF: sub_6ED68760+384j
					; sub_6ED68760+3A9j
		test	byte ptr [ebp+var_74], 1
		jnz	loc_6ED68A98
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_78]

loc_6ED688E7:				; CODE XREF: sub_6ED68760+34Aj
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	[ebp+var_74]
		test	al, al
		jnz	loc_6ED687AC	; jumptable 6ED68816 default case
		movsx	eax, [ebp+var_61]
		mov	dword ptr [esp+4], offset sub_6ED68760
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED58610
		mov	[ebp+var_69], 0
		lea	esi, [esi+0]

loc_6ED68930:				; CODE XREF: sub_6ED68760+228j
					; sub_6ED68760+241j ...
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_69]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED68941:				; CODE XREF: sub_6ED68760+50j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aUnexpectedChar	; "unexpected character"
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_58], 1
		mov	[esp], edx
		mov	[ebp+var_C], eax
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		call	sub_6ED60A80
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		mov	[ebp+var_69], 0
		jnz	short loc_6ED68930
		mov	eax, [ebp+var_C]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_69], 0
		jmp	short loc_6ED68930
; ---------------------------------------------------------------------------

loc_6ED689A3:				; CODE XREF: sub_6ED68760+5Aj
		mov	[ebp+var_69], 1
		jmp	short loc_6ED68930
; ---------------------------------------------------------------------------
		align 10h

loc_6ED689B0:				; CODE XREF: sub_6ED68760+B6j
					; DATA XREF: .rdata:off_6EDA0934o
		mov	eax, [ebp+arg_0] ; jumptable 6ED68816 case 7
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED5BC00
		nop
		jmp	loc_6ED687AC	; jumptable 6ED68816 default case
; ---------------------------------------------------------------------------

loc_6ED689C5:				; CODE XREF: sub_6ED68760+B6j
					; DATA XREF: .rdata:off_6EDA0934o
		mov	edx, [ebp+arg_0] ; jumptable 6ED68816 cases 3,6
		movzx	eax, word ptr [edx+98h]
		mov	[esp], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], ax
		call	sub_6ED593D0
		mov	eax, [ebp+arg_0]
		call	sub_6ED5BC00
		jmp	loc_6ED687AC	; jumptable 6ED68816 default case
; ---------------------------------------------------------------------------

loc_6ED689F0:				; CODE XREF: sub_6ED68760+B6j
					; DATA XREF: .rdata:off_6EDA0934o
		mov	edx, [ebp+arg_0] ; jumptable 6ED68816 cases 2,5
		mov	dword ptr [edx+64h], 1
		mov	[esp], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED68110
		test	al, al
		jnz	loc_6ED687AC	; jumptable 6ED68816 default case
		movsx	eax, [ebp+var_61]
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED68760
		mov	dword ptr [esp+8], 0
		mov	[esp+0Ch], eax
		mov	[esp], ecx
		call	sub_6ED58610
		mov	[ebp+var_69], 0
		jmp	loc_6ED68930
; ---------------------------------------------------------------------------
		align 10h

loc_6ED68A40:				; CODE XREF: sub_6ED68760+B6j
					; DATA XREF: .rdata:off_6EDA0934o
		mov	eax, [ebp+arg_0] ; jumptable 6ED68816 cases 1,4
		mov	dword ptr [eax+6C4h], 0
		mov	dword ptr [eax+6C0h], 0
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED5BC00
		jmp	loc_6ED687AC	; jumptable 6ED68816 default case
; ---------------------------------------------------------------------------

loc_6ED68A68:				; CODE XREF: sub_6ED68760+109j
					; sub_6ED68760+11Cj
		mov	eax, [ebp+var_70]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0Ch
		mov	dword ptr [esp], 1Ch
		mov	[esp+4], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN11QVectorData4growEiiib
		jmp	loc_6ED68882
; ---------------------------------------------------------------------------

loc_6ED68A98:				; CODE XREF: sub_6ED68760+17Bj
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_78]
		mov	ecx, [ebp+var_74]
		mov	edx, [eax]
		mov	edx, [edx+ecx-1]
		mov	[ebp+var_74], edx
		jmp	loc_6ED688E7
; ---------------------------------------------------------------------------

loc_6ED68AAF:				; CODE XREF: sub_6ED68760+73j
		movsx	eax, [ebp+var_61]
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED68760
		mov	dword ptr [esp+8], 0
		mov	[esp+0Ch], eax
		mov	[esp], ecx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED60E40
		mov	[ebp+var_69], 0
		jmp	loc_6ED68930
; ---------------------------------------------------------------------------

loc_6ED68AE2:				; CODE XREF: sub_6ED68760+171j
		test	ecx, ecx
		jnz	loc_6ED688D7
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_28]
		mov	edx, [ecx+74h]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_6ED94310
		sub	esp, 4
		jmp	loc_6ED688D7
sub_6ED68760	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED68B0E	proc near		; DATA XREF: sub_6ED68760+20o
		add	ebp, 8
		mov	ecx, [ebp-54h]
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	[ebp-7Ch], ecx
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		mov	eax, [ebp-7Ch]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED68B0E	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED68B40	proc near		; CODE XREF: sub_6ED69420+663p
					; sub_6ED69420+690p ...

var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_65		= byte ptr -65h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_28		= byte ptr -28h
var_10		= dword	ptr -10h
var_A		= word ptr -0Ah
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset word_6ED9A82A
		mov	[ebp+var_38], offset sub_6ED68FB8
		mov	[ebp+var_34], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+74h]
		test	edx, edx
		mov	[ebp+var_64], edx
		jz	short loc_6ED68B8C
		mov	eax, [edx]
		mov	edx, [eax+8]
		test	edx, edx
		jnz	loc_6ED68C71

loc_6ED68B8C:				; CODE XREF: sub_6ED68B40+3Dj
		mov	[ebp+var_60], 0

loc_6ED68B93:				; CODE XREF: sub_6ED68B40+D2j
					; sub_6ED68B40+ECj ...
		cmp	[ebp+var_60], 0FFFFFFFFh
		jz	loc_6ED68DD3
		cmp	[ebp+var_60], 4
		jz	loc_6ED68E40
		mov	ecx, [ebp+arg_0]
		movzx	eax, word ptr [ecx+98h]
		mov	edx, eax
		or	edx, 1
		cmp	dx, 0FFFFh
		jz	loc_6ED68F5D
		movzx	edx, ax
		test	edx, 0FF80h
		mov	[ebp+var_A], ax
		jnz	loc_6ED68D75
		cmp	ds:byte_6EDA0FE0[edx], 0
		jnz	loc_6ED68DA7

loc_6ED68BE0:				; CODE XREF: sub_6ED68B40+24Ej
					; sub_6ED68B40+257j
		xor	edx, edx

loc_6ED68BE2:				; CODE XREF: sub_6ED68B40+270j
					; sub_6ED68B40+27Cj ...
		mov	ecx, [ebp+var_60]
		lea	eax, [ecx+ecx*4]
		lea	edx, [eax+edx]
		mov	edx, ds:dword_6EDA10A0[edx*4]
		cmp	edx, 2
		mov	[ebp+var_60], edx
		jz	loc_6ED68F00
		jle	loc_6ED68E50
		cmp	[ebp+var_60], 3
		jz	loc_6ED68EB4
		cmp	[ebp+var_60], 4
		jnz	loc_6ED68B93
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED68760
		test	al, al
		jnz	loc_6ED68B93
		mov	dword ptr [esp+0Ch], 4

loc_6ED68C3A:				; CODE XREF: sub_6ED68B40+33Fj
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED68B40
		mov	dword ptr [esp+8], 0
		mov	[esp], edx
		call	sub_6ED58610
		mov	[ebp+var_65], 0
		lea	esi, [esi+0]

loc_6ED68C60:				; CODE XREF: sub_6ED68B40+230j
					; sub_6ED68B40+2DAj ...
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_65]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED68C71:				; CODE XREF: sub_6ED68B40+46j
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_6ED68C95
		mov	eax, [eax+4]
		mov	ecx, [ebp+var_64]
		mov	[esp+4], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	[esp], ecx
		call	sub_6ED96400

loc_6ED68C95:				; CODE XREF: sub_6ED68B40+136j
		mov	eax, [ebp+var_64]
		mov	edx, [eax]
		mov	eax, [edx+8]
		sub	eax, 1
		mov	[ebp+var_6C], eax
		lea	eax, [eax+eax*2]
		mov	eax, [edx+eax*4+18h]
		mov	[ebp+var_60], eax
		mov	eax, [edx+4]
		cmp	[ebp+var_6C], eax
		jg	loc_6ED68E84
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_6ED68CD0
		mov	edx, eax
		sar	edx, 1
		cmp	[ebp+var_6C], edx
		jl	loc_6ED68E84
		lea	esi, [esi+0]

loc_6ED68CD0:				; CODE XREF: sub_6ED68B40+17Dj
					; sub_6ED68B40+36Fj
		mov	ecx, [ebp+var_6C]
		mov	[esp+8], eax
		mov	eax, [ebp+var_64]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], ecx
		mov	[esp], eax
		call	sub_6ED96400
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+74h]
		mov	edx, [eax]
		mov	ecx, [edx+8]
		test	ecx, ecx
		jz	loc_6ED68B93
		mov	[esp], eax
		call	sub_6ED943D0
		mov	ecx, [eax+4]
		mov	[ebp+var_74], ecx
		mov	eax, [eax]
		cmp	eax, offset sub_6ED60FB0
		mov	[ebp+var_70], eax
		jz	loc_6ED68F8C

loc_6ED68D1E:				; CODE XREF: sub_6ED68B40+44Ej
					; sub_6ED68B40+473j
		test	byte ptr [ebp+var_70], 1
		jnz	loc_6ED68F46
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_74]

loc_6ED68D2E:				; CODE XREF: sub_6ED68B40+418j
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	[ebp+var_70]
		test	al, al
		jnz	loc_6ED68B93
		mov	eax, [ebp+var_60]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED68B40
		mov	dword ptr [esp+8], 0
		mov	[esp+0Ch], eax
		mov	[esp], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED58610
		mov	[ebp+var_65], 0
		jmp	loc_6ED68C60
; ---------------------------------------------------------------------------

loc_6ED68D75:				; CODE XREF: sub_6ED68B40+8Dj
		lea	edx, [ebp+var_A]
		mov	[esp], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZNK5QChar8categoryEv
		lea	edx, [eax-0Fh]
		cmp	edx, 4
		jbe	loc_6ED68BE0
		cmp	eax, 5
		jz	loc_6ED68BE0
		mov	ecx, [ebp+arg_0]
		movzx	eax, word ptr [ecx+98h]

loc_6ED68DA7:				; CODE XREF: sub_6ED68B40+9Aj
		cmp	ax, 3Dh
		mov	edx, 1
		jz	loc_6ED68BE2
		cmp	ax, 22h
		mov	dl, 2
		jz	loc_6ED68BE2
		xor	edx, edx
		cmp	ax, 27h
		setnz	dl
		add	edx, 3
		jmp	loc_6ED68BE2
; ---------------------------------------------------------------------------

loc_6ED68DD3:				; CODE XREF: sub_6ED68B40+57j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aUnexpectedChar	; "unexpected character"
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_58], 1
		mov	[esp], ecx
		mov	[ebp+var_10], eax
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		call	sub_6ED60A80
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		mov	[ebp+var_65], 0
		jnz	loc_6ED68C60
		mov	eax, [ebp+var_10]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_65], 0
		jmp	loc_6ED68C60
; ---------------------------------------------------------------------------
		align 10h

loc_6ED68E40:				; CODE XREF: sub_6ED68B40+61j
		mov	[ebp+var_65], 1
		jmp	loc_6ED68C60
; ---------------------------------------------------------------------------
		align 10h

loc_6ED68E50:				; CODE XREF: sub_6ED68B40+BEj
		cmp	edx, 1
		jnz	loc_6ED68B93
		mov	eax, [ebp+arg_0]
		mov	byte ptr [eax+61h], 0
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED656F0
		test	al, al
		jnz	loc_6ED68B93
		mov	dword ptr [esp+0Ch], 1
		jmp	loc_6ED68C3A
; ---------------------------------------------------------------------------

loc_6ED68E84:				; CODE XREF: sub_6ED68B40+173j
					; sub_6ED68B40+186j
		mov	edx, [ebp+var_6C]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0Ch
		mov	dword ptr [esp], 1Ch
		mov	[esp+4], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN11QVectorData4growEiiib
		jmp	loc_6ED68CD0
; ---------------------------------------------------------------------------

loc_6ED68EB4:				; CODE XREF: sub_6ED68B40+C8j
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED61030
		test	al, al
		jnz	loc_6ED68B93
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+0Ch], 3
		mov	dword ptr [esp+4], offset sub_6ED68B40
		mov	dword ptr [esp+8], 0
		mov	[esp], ecx
		call	sub_6ED58610
		mov	[ebp+var_65], 0
		jmp	loc_6ED68C60
; ---------------------------------------------------------------------------
		align 10h

loc_6ED68F00:				; CODE XREF: sub_6ED68B40+B8j
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED60FB0
		test	al, al
		jnz	loc_6ED68B93
		mov	eax, [ebp+arg_0]
		mov	dword ptr [esp+0Ch], 2
		mov	dword ptr [esp+4], offset sub_6ED68B40
		mov	dword ptr [esp+8], 0
		mov	[esp], eax
		call	sub_6ED58610
		mov	[ebp+var_65], 0
		jmp	loc_6ED68C60
; ---------------------------------------------------------------------------

loc_6ED68F46:				; CODE XREF: sub_6ED68B40+1E2j
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_74]
		mov	ecx, [ebp+var_70]
		mov	edx, [eax]
		mov	edx, [edx+ecx-1]
		mov	[ebp+var_70], edx
		jmp	loc_6ED68D2E
; ---------------------------------------------------------------------------

loc_6ED68F5D:				; CODE XREF: sub_6ED68B40+7Aj
		mov	eax, [ebp+var_60]
		mov	dword ptr [esp+4], offset sub_6ED68B40
		mov	dword ptr [esp+8], 0
		mov	[esp], ecx
		mov	[esp+0Ch], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED60E40
		mov	[ebp+var_65], 0
		jmp	loc_6ED68C60
; ---------------------------------------------------------------------------

loc_6ED68F8C:				; CODE XREF: sub_6ED68B40+1D8j
		test	ecx, ecx
		jnz	loc_6ED68D1E
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_28]
		mov	edx, [ecx+74h]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_6ED94310
		sub	esp, 4
		jmp	loc_6ED68D1E
sub_6ED68B40	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED68FB8	proc near		; DATA XREF: sub_6ED68B40+20o
		add	ebp, 8
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-58h], 0
		mov	[ebp-78h], eax
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-78h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED68FB8	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED68FF0	proc near		; CODE XREF: sub_6ED6CA30+8F0p
					; sub_6ED6CA30+A00p
					; DATA XREF: ...

var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_69		= byte ptr -69h
var_68		= dword	ptr -68h
var_61		= byte ptr -61h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_28		= byte ptr -28h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 98h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset dword_6ED9A830
		mov	[ebp+var_38], offset sub_6ED693EE
		mov	[ebp+var_34], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+74h]
		test	edx, edx
		mov	[ebp+var_68], edx
		jz	short loc_6ED69038
		mov	eax, [edx]
		mov	edx, [eax+8]
		test	edx, edx
		jnz	short loc_6ED690B0

loc_6ED69038:				; CODE XREF: sub_6ED68FF0+3Dj
		mov	[ebp+var_61], 0

loc_6ED6903C:				; CODE XREF: sub_6ED68FF0+B1j
					; sub_6ED68FF0+B6j ...
		cmp	[ebp+var_61], 0FFh ; jumptable 6ED690A6	default	case
		jz	loc_6ED691D0
		cmp	[ebp+var_61], 9
		jz	loc_6ED69232
		mov	edx, [ebp+arg_0]
		movzx	eax, word ptr [edx+98h]
		mov	edx, eax
		or	edx, 1
		cmp	dx, 0FFFFh
		jz	loc_6ED6938F
		xor	edx, edx
		cmp	ax, 22h
		jz	short loc_6ED6908D
		cmp	ax, 27h
		mov	dl, 1
		jz	short loc_6ED6908D
		cmp	ax, 26h
		mov	dl, 2
		jz	short loc_6ED6908D
		xor	edx, edx
		cmp	ax, 25h
		setnz	dl
		add	edx, 3

loc_6ED6908D:				; CODE XREF: sub_6ED68FF0+7Fj
					; sub_6ED68FF0+87j ...
		movsx	eax, [ebp+var_61]
		lea	eax, [eax+eax*4]
		movzx	eax, ds:byte_6EDA1120[edx+eax]
		cmp	al, 9		; switch 10 cases
		mov	[ebp+var_61], al
		ja	short loc_6ED6903C ; jumptable 6ED690A6	default	case
		movzx	eax, al
		jmp	ds:off_6EDA0954[eax*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_6ED690B0:				; CODE XREF: sub_6ED68FF0+46j
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_6ED690D4
		mov	eax, [eax+4]
		mov	ecx, [ebp+var_68]
		mov	[esp+4], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	[esp], ecx
		call	sub_6ED96400

loc_6ED690D4:				; CODE XREF: sub_6ED68FF0+C5j
		mov	eax, [ebp+var_68]
		mov	edx, [eax]
		mov	eax, [edx+8]
		sub	eax, 1
		mov	[ebp+var_70], eax
		lea	eax, [eax+eax*2]
		mov	eax, [edx+eax*4+18h]
		mov	[ebp+var_60], eax
		mov	eax, [edx+4]
		cmp	[ebp+var_70], eax
		jg	loc_6ED69348
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_6ED69110
		mov	edx, eax
		sar	edx, 1
		cmp	[ebp+var_70], edx
		jl	loc_6ED69348
		nop
		lea	esi, [esi+0]

loc_6ED69110:				; CODE XREF: sub_6ED68FF0+10Cj
					; sub_6ED68FF0+383j
		mov	ecx, [ebp+var_70]
		mov	[esp+8], eax
		mov	eax, [ebp+var_68]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], ecx
		mov	[esp], eax
		call	sub_6ED96400
		mov	ecx, [ebp+arg_0]
		movzx	edx, byte ptr [ebp+var_60]
		mov	eax, [ecx+74h]
		mov	[ebp+var_61], dl
		mov	edx, [eax]
		mov	edx, [edx+8]
		test	edx, edx
		jz	loc_6ED6903C	; jumptable 6ED690A6 default case
		mov	[esp], eax
		call	sub_6ED943D0
		mov	edx, [eax+4]
		mov	[ebp+var_78], edx
		mov	eax, [eax]
		cmp	eax, offset sub_6ED60FB0
		mov	[ebp+var_74], eax
		jz	loc_6ED693C2

loc_6ED69165:				; CODE XREF: sub_6ED68FF0+3D4j
					; sub_6ED68FF0+3F9j
		test	byte ptr [ebp+var_74], 1
		jnz	loc_6ED69378
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_78]

loc_6ED69175:				; CODE XREF: sub_6ED68FF0+39Aj
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	[ebp+var_74]
		test	al, al
		jnz	loc_6ED6903C	; jumptable 6ED690A6 default case
		movsx	eax, [ebp+var_61]
		mov	dword ptr [esp+4], offset sub_6ED68FF0
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED58610
		mov	[ebp+var_69], 0

loc_6ED691B8:				; CODE XREF: sub_6ED68FF0+227j
					; sub_6ED68FF0+240j ...
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_69]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED691D0:				; CODE XREF: sub_6ED68FF0+50j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aLetterIsExpect	; "letter is expected"
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_58], 1
		mov	[esp], edx
		mov	[ebp+var_C], eax
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		call	sub_6ED60A80
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		mov	[ebp+var_69], 0
		jnz	short loc_6ED691B8
		mov	eax, [ebp+var_C]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_69], 0
		jmp	short loc_6ED691B8
; ---------------------------------------------------------------------------

loc_6ED69232:				; CODE XREF: sub_6ED68FF0+5Aj
		mov	[ebp+var_69], 1
		jmp	short loc_6ED691B8
; ---------------------------------------------------------------------------

loc_6ED69238:				; CODE XREF: sub_6ED68FF0+B6j
					; DATA XREF: .rdata:off_6EDA0954o
		mov	eax, [ebp+arg_0] ; jumptable 6ED690A6 case 9
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED5BC00
		jmp	loc_6ED6903C	; jumptable 6ED690A6 default case
; ---------------------------------------------------------------------------
		align 10h

loc_6ED69250:				; CODE XREF: sub_6ED68FF0+B6j
					; DATA XREF: .rdata:off_6EDA0954o
		mov	edx, [ebp+arg_0] ; jumptable 6ED690A6 cases 4,8
		mov	dword ptr [edx+64h], 2
		mov	[esp], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED68110
		test	al, al
		jnz	loc_6ED6903C	; jumptable 6ED690A6 default case
		movsx	eax, [ebp+var_61]
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED68FF0
		mov	dword ptr [esp+8], 0
		mov	[esp+0Ch], eax
		mov	[esp], ecx
		call	sub_6ED58610
		mov	[ebp+var_69], 0
		jmp	loc_6ED691B8
; ---------------------------------------------------------------------------
		align 10h

loc_6ED692A0:				; CODE XREF: sub_6ED68FF0+B6j
					; DATA XREF: .rdata:off_6EDA0954o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED690A6 cases 3,7
		mov	dword ptr [ecx+6Ch], 2
		mov	[esp], ecx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED66E40
		test	al, al
		jnz	loc_6ED6903C	; jumptable 6ED690A6 default case
		movsx	eax, [ebp+var_61]
		mov	dword ptr [esp+4], offset sub_6ED68FF0
		mov	dword ptr [esp+8], 0
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED58610
		mov	[ebp+var_69], 0
		jmp	loc_6ED691B8
; ---------------------------------------------------------------------------
		align 10h

loc_6ED692F0:				; CODE XREF: sub_6ED68FF0+B6j
					; DATA XREF: .rdata:off_6EDA0954o
		mov	edx, [ebp+arg_0] ; jumptable 6ED690A6 cases 2,6
		movzx	eax, word ptr [edx+98h]
		mov	[esp], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], ax
		call	sub_6ED593D0
		mov	eax, [ebp+arg_0]
		call	sub_6ED5BC00
		jmp	loc_6ED6903C	; jumptable 6ED690A6 default case
; ---------------------------------------------------------------------------
		align 10h

loc_6ED69320:				; CODE XREF: sub_6ED68FF0+B6j
					; DATA XREF: .rdata:off_6EDA0954o
		mov	eax, [ebp+arg_0] ; jumptable 6ED690A6 cases 1,5
		mov	dword ptr [eax+6C4h], 0
		mov	dword ptr [eax+6C0h], 0
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED5BC00
		jmp	loc_6ED6903C	; jumptable 6ED690A6 default case
; ---------------------------------------------------------------------------

loc_6ED69348:				; CODE XREF: sub_6ED68FF0+102j
					; sub_6ED68FF0+115j
		mov	edx, [ebp+var_70]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0Ch
		mov	dword ptr [esp], 1Ch
		mov	[esp+4], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN11QVectorData4growEiiib
		jmp	loc_6ED69110
; ---------------------------------------------------------------------------

loc_6ED69378:				; CODE XREF: sub_6ED68FF0+179j
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_78]
		mov	ecx, [ebp+var_74]
		mov	edx, [eax]
		mov	edx, [edx+ecx-1]
		mov	[ebp+var_74], edx
		jmp	loc_6ED69175
; ---------------------------------------------------------------------------

loc_6ED6938F:				; CODE XREF: sub_6ED68FF0+73j
		movsx	eax, [ebp+var_61]
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED68FF0
		mov	dword ptr [esp+8], 0
		mov	[esp+0Ch], eax
		mov	[esp], ecx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED60E40
		mov	[ebp+var_69], 0
		jmp	loc_6ED691B8
; ---------------------------------------------------------------------------

loc_6ED693C2:				; CODE XREF: sub_6ED68FF0+16Fj
		test	edx, edx
		jnz	loc_6ED69165
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_28]
		mov	edx, [ecx+74h]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_6ED94310
		sub	esp, 4
		jmp	loc_6ED69165
sub_6ED68FF0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED693EE	proc near		; DATA XREF: sub_6ED68FF0+20o
		add	ebp, 8
		mov	ecx, [ebp-54h]
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	[ebp-7Ch], ecx
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		mov	eax, [ebp-7Ch]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED693EE	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED69420	proc near		; CODE XREF: sub_6ED6A130+431p
					; sub_6ED6A6E0+6B4p ...

var_EC		= dword	ptr -0ECh
var_E8		= dword	ptr -0E8h
var_E1		= byte ptr -0E1h
var_E0		= dword	ptr -0E0h
var_DC		= dword	ptr -0DCh
var_D8		= dword	ptr -0D8h
var_D1		= byte ptr -0D1h
var_D0		= dword	ptr -0D0h
var_CC		= dword	ptr -0CCh
var_C5		= byte ptr -0C5h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= byte ptr -0BCh
var_B8		= dword	ptr -0B8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_88		= byte ptr -88h
var_74		= byte ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= byte ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= byte ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= byte ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= byte ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= byte ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_A		= word ptr -0Ah
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 108h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_9C], eax
		lea	eax, [ebp+var_BC]
		mov	[ebp+var_A4], offset sub_6ED997C0
		mov	[ebp+var_A0], offset word_6ED9A836
		mov	[ebp+var_98], offset sub_6ED6A01E
		mov	[ebp+var_94], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+74h]
		test	edx, edx
		mov	[ebp+var_D0], edx
		jz	short loc_6ED69481
		mov	edx, [edx]
		mov	eax, [edx+8]
		test	eax, eax
		jnz	loc_6ED695E0

loc_6ED69481:				; CODE XREF: sub_6ED69420+52j
		mov	[ebp+var_C5], 0

loc_6ED69488:				; CODE XREF: sub_6ED69420+280j
					; sub_6ED69420+2D5j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		add	eax, 1Ch
		add	edx, 20h
		mov	[ebp+var_DC], eax
		mov	[ebp+var_E0], edx

loc_6ED694A0:				; CODE XREF: sub_6ED69420+166j
					; sub_6ED69420+16Fj ...
		movzx	eax, [ebp+var_C5] ; jumptable 6ED6958F default case
		add	eax, 1
		cmp	al, 11h		; switch 18 cases
		ja	loc_6ED69532	; jumptable 6ED694B5 default case
		movzx	eax, al
		jmp	ds:off_6EDA0ABC[eax*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_6ED694C0:				; CODE XREF: sub_6ED69420+95j
					; DATA XREF: .rdata:off_6EDA0ABCo
		mov	eax, [ebp+arg_0] ; jumptable 6ED694B5 case 12
		mov	[ebp+var_50], offset aStandalone ; "standalone"
		mov	[ebp+var_B8], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED59250
		lea	edx, [ebp+var_50]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		jz	loc_6ED69DE6
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_5C], offset aYes ; "yes"
		mov	[ebp+var_B8], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED59310
		lea	edx, [ebp+var_5C]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		jz	loc_6ED69CF6
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [ecx+24h], 0

loc_6ED69532:				; CODE XREF: sub_6ED69420+8Cj
					; sub_6ED69420+95j ...
		mov	ecx, [ebp+arg_0] ; jumptable 6ED694B5 default case
		movzx	eax, word ptr [ecx+98h]
		mov	edx, eax
		or	edx, 1
		cmp	dx, 0FFFFh
		jz	loc_6ED6A012
		movsx	edx, [ebp+var_C5]
		cmp	ax, 9
		mov	[ebp+var_CC], edx
		jz	short loc_6ED6956A
		cmp	ax, 20h
		jz	short loc_6ED6956A
		cmp	ax, 0Dh
		jnz	short loc_6ED69596

loc_6ED6956A:				; CODE XREF: sub_6ED69420+13Cj
					; sub_6ED69420+142j ...
		xor	eax, eax

loc_6ED6956C:				; CODE XREF: sub_6ED69420+1A0j
					; sub_6ED69420+352j ...
		mov	ecx, [ebp+var_CC]
		lea	edx, [ecx+ecx*4]
		movzx	edx, ds:byte_6EDA1680[eax+edx]
		cmp	dl, 10h		; switch 17 cases
		mov	[ebp+var_C5], dl
		ja	loc_6ED694A0	; jumptable 6ED6958F default case
		movzx	eax, dl
		jmp	ds:off_6EDA0B04[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_6ED69596:				; CODE XREF: sub_6ED69420+148j
		cmp	ax, 0Ah
		jz	short loc_6ED6956A

loc_6ED6959C:				; CODE XREF: sub_6ED69420+96Fj
		mov	[ebp+var_A], ax
		movzx	eax, ax
		test	eax, 0FF80h
		jnz	loc_6ED69734
		cmp	ds:byte_6EDA0FE0[eax], 0
		jnz	loc_6ED6975F

loc_6ED695BB:				; CODE XREF: sub_6ED69420+330j
					; sub_6ED69420+339j
		mov	eax, 1
		jmp	short loc_6ED6956C
; ---------------------------------------------------------------------------

loc_6ED695C2:				; CODE XREF: sub_6ED69420+16Fj
					; DATA XREF: .rdata:off_6EDA0B04o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6958F cases 1,13,15,16
		mov	[ebp+var_B8], 0FFFFFFFFh
		call	sub_6ED5BC00
		jmp	loc_6ED694A0	; jumptable 6ED6958F default case
; ---------------------------------------------------------------------------
		align 10h

loc_6ED695E0:				; CODE XREF: sub_6ED69420+5Bj
		mov	ecx, [edx]
		cmp	ecx, 1
		jz	short loc_6ED69615
		mov	edx, [edx+4]
		mov	[esp+4], eax
		mov	eax, [ebp+var_D0]
		mov	[ebp+var_B8], 0FFFFFFFFh
		mov	[esp+8], edx
		mov	[esp], eax
		call	sub_6ED96400
		mov	ecx, [ebp+var_D0]
		mov	edx, [ecx]
		mov	eax, [edx+8]

loc_6ED69615:				; CODE XREF: sub_6ED69420+1C5j
		mov	ecx, [ebp+var_D0]
		sub	eax, 1
		mov	[ebp+var_D8], eax
		lea	eax, [eax+eax*2]
		shl	eax, 2
		add	eax, [ecx]
		mov	eax, [eax+18h]
		mov	[ebp+var_C4], eax
		mov	eax, [edx+4]
		cmp	[ebp+var_D8], eax
		jg	loc_6ED69CC0
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_6ED69660
		mov	edx, eax
		sar	edx, 1
		cmp	[ebp+var_D8], edx
		jl	loc_6ED69CC0
		lea	esi, [esi+0]

loc_6ED69660:				; CODE XREF: sub_6ED69420+228j
					; sub_6ED69420+8D1j
		mov	edx, [ebp+var_D8]
		mov	ecx, [ebp+var_D0]
		mov	[esp+8], eax
		mov	[ebp+var_B8], 0FFFFFFFFh
		mov	[esp+4], edx
		mov	[esp], ecx
		call	sub_6ED96400
		movzx	eax, byte ptr [ebp+var_C4]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_C5], al
		mov	eax, [edx+74h]
		mov	edx, [eax]
		mov	ecx, [edx+8]
		test	ecx, ecx
		jz	loc_6ED69488
		mov	[esp], eax
		call	sub_6ED943D0
		mov	ecx, [eax+4]
		mov	[ebp+var_EC], ecx
		mov	eax, [eax]
		cmp	eax, offset sub_6ED60FB0
		mov	[ebp+var_E8], eax
		jz	loc_6ED69DB4

loc_6ED696CA:				; CODE XREF: sub_6ED69420+996j
					; sub_6ED69420+9C1j
		test	byte ptr [ebp+var_E8], 1
		jnz	loc_6ED69D94
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_EC]

loc_6ED696E0:				; CODE XREF: sub_6ED69420+98Fj
		mov	[esp], eax
		mov	[ebp+var_B8], 0FFFFFFFFh
		call	[ebp+var_E8]
		test	al, al
		jnz	loc_6ED69488
		movsx	eax, [ebp+var_C5]
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED69420
		mov	dword ptr [esp+8], 0
		mov	[esp+0Ch], eax
		mov	[esp], ecx
		mov	[ebp+var_B8], 0FFFFFFFFh
		call	sub_6ED58610
		mov	[ebp+var_D1], 0
		jmp	short loc_6ED69797
; ---------------------------------------------------------------------------

loc_6ED69734:				; CODE XREF: sub_6ED69420+188j
		lea	eax, [ebp+var_A]
		mov	[esp], eax
		mov	[ebp+var_B8], 0FFFFFFFFh
		call	ds:_ZNK5QChar8categoryEv
		lea	edx, [eax-0Fh]
		cmp	edx, 4
		jbe	loc_6ED695BB
		cmp	eax, 5
		jz	loc_6ED695BB

loc_6ED6975F:				; CODE XREF: sub_6ED69420+195j
		mov	ecx, [ebp+arg_0]
		mov	eax, 2
		movzx	edx, word ptr [ecx+98h]
		cmp	dx, 3Eh
		jz	loc_6ED6956C
		xor	eax, eax
		cmp	dx, 3Fh
		setnz	al
		add	eax, 3
		jmp	loc_6ED6956C
; ---------------------------------------------------------------------------
		align 10h

loc_6ED69790:				; CODE XREF: sub_6ED69420+95j
					; DATA XREF: .rdata:off_6EDA0ABCo
		mov	[ebp+var_D1], 1	; jumptable 6ED694B5 case 17

loc_6ED69797:				; CODE XREF: sub_6ED69420+312j
					; sub_6ED69420+59Bj ...
		lea	eax, [ebp+var_BC]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_D1]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED697B0:				; CODE XREF: sub_6ED69420+95j
					; DATA XREF: .rdata:off_6EDA0ABCo
		mov	edx, [ebp+arg_0] ; jumptable 6ED694B5 case 16
		movzx	eax, word ptr [edx+98h]
		mov	edx, eax
		or	edx, 1
		cmp	dx, 0FFFFh
		jz	loc_6ED69D40
		cmp	ax, 3Eh
		jz	loc_6ED69D80
		mov	ecx, [ebp+arg_0]
		mov	word ptr [esp+4], 3Fh
		mov	[ebp+var_B8], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED593D0
		jmp	loc_6ED69532	; jumptable 6ED694B5 default case
; ---------------------------------------------------------------------------

loc_6ED697F4:				; CODE XREF: sub_6ED69420+95j
					; DATA XREF: .rdata:off_6EDA0ABCo
		mov	ecx, [ebp+arg_0] ; jumptable 6ED694B5 case 10
		mov	[ebp+var_30], offset aStandalone ; "standalone"
		mov	[ebp+var_B8], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED59250
		mov	ecx, ds:_ZNK7QStringeqERK13QLatin1String
		lea	edx, [ebp+var_30]
		mov	[esp+4], edx
		mov	[ebp+var_C0], ecx
		mov	[esp], eax
		call	ecx ; _ZNK7QStringeqERK13QLatin1String
		test	al, al
		jz	loc_6ED69BE3
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_34], offset aYes ; "yes"
		mov	[esp], eax
		call	sub_6ED59310
		lea	edx, [ebp+var_34]
		mov	[esp+4], edx
		mov	[esp], eax
		call	[ebp+var_C0]
		test	al, al
		jz	loc_6ED69C40
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+24h], 0
		jmp	loc_6ED69532	; jumptable 6ED694B5 default case
; ---------------------------------------------------------------------------
		align 10h

loc_6ED69870:				; CODE XREF: sub_6ED69420+95j
					; DATA XREF: .rdata:off_6EDA0ABCo
		mov	edx, [ebp+arg_0] ; jumptable 6ED694B5 case 8
		mov	[ebp+var_24], offset aVersion ;	"version"
		mov	[ebp+var_B8], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED59250
		lea	edx, [ebp+var_24]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		jz	loc_6ED69E3C
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_B8], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED59310
		mov	edx, [ebp+var_DC]
		mov	[esp], edx
		mov	[esp+4], eax
		call	ds:_ZN7QStringaSERKS_
		jmp	loc_6ED69532	; jumptable 6ED694B5 default case
; ---------------------------------------------------------------------------

loc_6ED698D1:				; CODE XREF: sub_6ED69420+95j
					; DATA XREF: .rdata:off_6EDA0ABCo
		mov	eax, [ebp+arg_0] ; jumptable 6ED694B5 case 3
		mov	[ebp+var_14], offset aXml_1 ; "xml"
		mov	[ebp+var_B8], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED59250
		lea	edx, [ebp+var_10]
		mov	[esp], edx
		mov	[esp+4], eax
		call	ds:_ZNK7QString7toLowerEv
		lea	eax, [ebp+var_14]
		lea	ecx, [ebp+var_10]
		mov	[ebp+var_B8], 9
		sub	esp, 4
		mov	[esp+4], eax
		mov	[esp], ecx
		call	ds:_ZNK7QStringeqERK13QLatin1String
		mov	[ebp+var_E1], al
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED69946
		mov	eax, [ebp+var_10]
		mov	[ebp+var_B8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED69946:				; CODE XREF: sub_6ED69420+50Ej
		cmp	[ebp+var_E1], 0
		jz	loc_6ED69BC0
		mov	edx, [ebp+arg_0]
		cmp	byte ptr [edx+60h], 0
		jnz	loc_6ED69C83

loc_6ED69960:				; CODE XREF: sub_6ED69420+88Ej
		lea	eax, [ebp+var_1C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_20]
		mov	[ebp+var_1C], offset aInvalidNameFor ; "invalid	name for processing instruction"
		mov	[esp], eax
		mov	[ebp+var_B8], 0FFFFFFFFh
		call	sub_6ED94530
		mov	ecx, [ebp+arg_0]
		lea	edx, [ebp+var_20]
		mov	[esp+4], edx
		mov	[ebp+var_B8], 8
		mov	[esp], ecx
		call	sub_6ED60A80
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_B8], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_D1], 0
		jmp	loc_6ED69797
; ---------------------------------------------------------------------------

loc_6ED699C0:				; CODE XREF: sub_6ED69420+95j
					; DATA XREF: .rdata:off_6EDA0ABCo
		mov	dword ptr [esp+4], 0FFFFFFFFh ;	jumptable 6ED694B5 case	0
		mov	dword ptr [esp], offset	aUnexpectedChar	; "unexpected character"
		mov	[ebp+var_B8], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_B8], 2
		mov	[ebp+var_6C], eax
		lea	eax, [ebp+var_6C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED60A80
		mov	eax, [ebp+var_6C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		mov	[ebp+var_D1], 0
		jnz	loc_6ED69797
		mov	eax, [ebp+var_6C]
		mov	[ebp+var_B8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_D1], 0
		jmp	loc_6ED69797
; ---------------------------------------------------------------------------

loc_6ED69A38:				; CODE XREF: sub_6ED69420+16Fj
					; DATA XREF: .rdata:off_6EDA0B04o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6958F case 14
		movzx	eax, word ptr [ecx+98h]
		mov	[esp], ecx
		mov	[ebp+var_B8], 0FFFFFFFFh
		mov	[esp+4], ax
		call	sub_6ED593D0
		mov	eax, [ebp+arg_0]
		call	sub_6ED5BC00
		jmp	loc_6ED694A0	; jumptable 6ED6958F default case
; ---------------------------------------------------------------------------

loc_6ED69A66:				; CODE XREF: sub_6ED69420+16Fj
					; DATA XREF: .rdata:off_6EDA0B04o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6958F case 11
		cmp	dword ptr [ecx+24h], 2
		jnz	loc_6ED69E92
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_B8], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED68B40
		test	al, al
		jnz	loc_6ED694A0	; jumptable 6ED6958F default case
		mov	dword ptr [esp+0Ch], 0Bh
		jmp	loc_6ED69B99
; ---------------------------------------------------------------------------
		align 10h

loc_6ED69AA0:				; CODE XREF: sub_6ED69420+16Fj
					; DATA XREF: .rdata:off_6EDA0B04o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6958F case 9
		mov	[ebp+var_B8], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED68B40
		test	al, al
		jnz	loc_6ED694A0	; jumptable 6ED6958F default case
		mov	dword ptr [esp+0Ch], 9
		jmp	loc_6ED69B99
; ---------------------------------------------------------------------------
		align 10h

loc_6ED69AD0:				; CODE XREF: sub_6ED69420+16Fj
					; DATA XREF: .rdata:off_6EDA0B04o
		mov	edx, [ebp+arg_0] ; jumptable 6ED6958F case 7
		mov	[ebp+var_B8], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED68B40
		test	al, al
		jnz	loc_6ED694A0	; jumptable 6ED6958F default case
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+0Ch], 7
		mov	dword ptr [esp+4], offset sub_6ED69420
		mov	dword ptr [esp+8], 0
		mov	[esp], ecx
		call	sub_6ED58610
		mov	[ebp+var_D1], 0
		jmp	loc_6ED69797
; ---------------------------------------------------------------------------
		align 10h

loc_6ED69B20:				; CODE XREF: sub_6ED69420+16Fj
					; DATA XREF: .rdata:off_6EDA0B04o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6958F cases 4,6,8,10,12
		mov	[ebp+var_B8], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED60FB0
		test	al, al
		jnz	loc_6ED694A0	; jumptable 6ED6958F default case
		movsx	eax, [ebp+var_C5]
		mov	dword ptr [esp+4], offset sub_6ED69420
		mov	dword ptr [esp+8], 0
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED58610
		mov	[ebp+var_D1], 0
		jmp	loc_6ED69797
; ---------------------------------------------------------------------------
		align 10h

loc_6ED69B70:				; CODE XREF: sub_6ED69420+16Fj
					; DATA XREF: .rdata:off_6EDA0B04o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6958F case 2
		mov	byte ptr [eax+61h], 0
		mov	[esp], eax
		mov	[ebp+var_B8], 0FFFFFFFFh
		call	sub_6ED656F0
		test	al, al
		jnz	loc_6ED694A0	; jumptable 6ED6958F default case
		mov	dword ptr [esp+0Ch], 2

loc_6ED69B99:				; CODE XREF: sub_6ED69420+678j
					; sub_6ED69420+6A5j
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED69420
		mov	dword ptr [esp+8], 0
		mov	[esp], edx
		call	sub_6ED58610
		mov	[ebp+var_D1], 0
		jmp	loc_6ED69797
; ---------------------------------------------------------------------------

loc_6ED69BC0:				; CODE XREF: sub_6ED69420+52Dj
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C5], 5
		mov	dword ptr [eax+6C4h], 0
		mov	dword ptr [eax+6C0h], 0
		jmp	loc_6ED69532	; jumptable 6ED694B5 default case
; ---------------------------------------------------------------------------

loc_6ED69BE3:				; CODE XREF: sub_6ED69420+40Aj
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_44], offset aEncoding ; "encoding"
		mov	[ebp+var_B8], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED59250
		lea	edx, [ebp+var_44]
		mov	[esp+4], edx
		mov	[esp], eax
		call	[ebp+var_C0]
		test	al, al
		jz	loc_6ED69EF2
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED59310
		mov	edx, [ebp+var_E0]
		mov	[esp], edx
		mov	[esp+4], eax
		call	ds:_ZN7QStringaSERKS_
		jmp	loc_6ED69532	; jumptable 6ED694B5 default case
; ---------------------------------------------------------------------------
		align 10h

loc_6ED69C40:				; CODE XREF: sub_6ED69420+434j
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_38], offset aNo ; "no"
		mov	[ebp+var_B8], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED59310
		lea	edx, [ebp+var_38]
		mov	[esp+4], edx
		mov	[esp], eax
		call	[ebp+var_C0]
		test	al, al
		jz	loc_6ED69FB2
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+24h], 1
		jmp	loc_6ED69532	; jumptable 6ED694B5 default case
; ---------------------------------------------------------------------------

loc_6ED69C83:				; CODE XREF: sub_6ED69420+53Aj
		mov	[esp], edx
		mov	[ebp+var_18], offset aXml_1 ; "xml"
		mov	[ebp+var_B8], 0FFFFFFFFh
		call	sub_6ED59250
		lea	edx, [ebp+var_18]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		jz	loc_6ED69960
		mov	[ebp+var_C5], 3
		jmp	loc_6ED69532	; jumptable 6ED694B5 default case
; ---------------------------------------------------------------------------

loc_6ED69CC0:				; CODE XREF: sub_6ED69420+21Ej
					; sub_6ED69420+234j
		mov	eax, [ebp+var_D8]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0Ch
		mov	dword ptr [esp], 1Ch
		mov	[esp+4], eax
		mov	[ebp+var_B8], 0FFFFFFFFh
		call	ds:_ZN11QVectorData4growEiiib
		jmp	loc_6ED69660
; ---------------------------------------------------------------------------

loc_6ED69CF6:				; CODE XREF: sub_6ED69420+102j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_60], offset aNo ; "no"
		mov	[ebp+var_B8], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED59310
		lea	edx, [ebp+var_60]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		jz	loc_6ED69F52
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [ecx+24h], 1
		jmp	loc_6ED69532	; jumptable 6ED694B5 default case
; ---------------------------------------------------------------------------
		align 10h

loc_6ED69D40:				; CODE XREF: sub_6ED69420+3A3j
		mov	eax, 0Fh

loc_6ED69D45:				; CODE XREF: sub_6ED69420+BF9j
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED69420
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_B8], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED60E40
		mov	[ebp+var_D1], 0
		jmp	loc_6ED69797
; ---------------------------------------------------------------------------
		align 10h

loc_6ED69D80:				; CODE XREF: sub_6ED69420+3ADj
		mov	[ebp+var_CC], 0Fh
		mov	eax, 3Eh
		jmp	loc_6ED6959C
; ---------------------------------------------------------------------------

loc_6ED69D94:				; CODE XREF: sub_6ED69420+2B1j
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_EC]
		mov	ecx, [ebp+var_E8]
		mov	edx, [eax]
		mov	edx, [edx+ecx-1]
		mov	[ebp+var_E8], edx
		jmp	loc_6ED696E0
; ---------------------------------------------------------------------------

loc_6ED69DB4:				; CODE XREF: sub_6ED69420+2A4j
		test	ecx, ecx
		jnz	loc_6ED696CA
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_88]
		mov	edx, [ecx+74h]
		mov	[esp], eax
		mov	[ebp+var_B8], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_6ED94310
		sub	esp, 4
		jmp	loc_6ED696CA
; ---------------------------------------------------------------------------

loc_6ED69DE6:				; CODE XREF: sub_6ED69420+CEj
		lea	eax, [ebp+var_54]
		lea	ecx, [ebp+var_58]
		mov	[esp+4], eax
		mov	[ebp+var_54], offset aStandaloneDecl ; "standalone declaration expected	while r"...
		mov	[esp], ecx
		call	sub_6ED94530
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_58]
		mov	[esp+4], eax
		mov	[ebp+var_B8], 4
		mov	[esp], edx
		call	sub_6ED60A80
		lea	eax, [ebp+var_58]
		mov	[esp], eax
		mov	[ebp+var_B8], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_D1], 0
		jmp	loc_6ED69797
; ---------------------------------------------------------------------------

loc_6ED69E3C:				; CODE XREF: sub_6ED69420+47Ej
		lea	eax, [ebp+var_28]
		lea	ecx, [ebp+var_2C]
		mov	[esp+4], eax
		mov	[ebp+var_28], offset aVersionExpecte ; "version	expected while reading the XML "...
		mov	[esp], ecx
		call	sub_6ED94530
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_2C]
		mov	[esp+4], eax
		mov	[ebp+var_B8], 7
		mov	[esp], edx
		call	sub_6ED60A80
		lea	eax, [ebp+var_2C]
		mov	[esp], eax
		mov	[ebp+var_B8], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_D1], 0
		jmp	loc_6ED69797
; ---------------------------------------------------------------------------

loc_6ED69E92:				; CODE XREF: sub_6ED69420+64Dj
		lea	eax, [ebp+var_70]
		mov	[esp+4], eax
		lea	eax, [ebp+var_74]
		mov	[ebp+var_70], offset aUnexpectedChar ; "unexpected character"
		mov	[esp], eax
		mov	[ebp+var_B8], 0FFFFFFFFh
		call	sub_6ED94530
		mov	ecx, [ebp+arg_0]
		lea	edx, [ebp+var_74]
		mov	[esp+4], edx
		mov	[ebp+var_B8], 1
		mov	[esp], ecx
		call	sub_6ED60A80
		lea	eax, [ebp+var_74]
		mov	[esp], eax
		mov	[ebp+var_B8], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_D1], 0
		jmp	loc_6ED69797
; ---------------------------------------------------------------------------

loc_6ED69EF2:				; CODE XREF: sub_6ED69420+7F1j
		lea	eax, [ebp+var_48]
		lea	ecx, [ebp+var_4C]
		mov	[esp+4], eax
		mov	[ebp+var_48], offset aEncodingDeclar ; "encoding declaration or	standalone decl"...
		mov	[esp], ecx
		mov	[ebp+var_B8], 0FFFFFFFFh
		call	sub_6ED94530
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_4C]
		mov	[esp+4], eax
		mov	[ebp+var_B8], 5
		mov	[esp], edx
		call	sub_6ED60A80
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_B8], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_D1], 0
		jmp	loc_6ED69797
; ---------------------------------------------------------------------------

loc_6ED69F52:				; CODE XREF: sub_6ED69420+904j
		lea	eax, [ebp+var_64]
		mov	[esp+4], eax
		lea	eax, [ebp+var_68]
		mov	[ebp+var_64], offset aWrongValueForS ; "wrong value for	standalone declaration"
		mov	[esp], eax
		mov	[ebp+var_B8], 0FFFFFFFFh
		call	sub_6ED94530
		mov	ecx, [ebp+arg_0]
		lea	edx, [ebp+var_68]
		mov	[esp+4], edx
		mov	[ebp+var_B8], 3
		mov	[esp], ecx
		call	sub_6ED60A80
		lea	eax, [ebp+var_68]
		mov	[esp], eax
		mov	[ebp+var_B8], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_D1], 0
		jmp	loc_6ED69797
; ---------------------------------------------------------------------------

loc_6ED69FB2:				; CODE XREF: sub_6ED69420+84Ej
		lea	eax, [ebp+var_3C]
		lea	edx, [ebp+var_40]
		mov	[esp+4], eax
		mov	[ebp+var_3C], offset aWrongValueForS ; "wrong value for	standalone declaration"
		mov	[esp], edx
		mov	[ebp+var_B8], 0FFFFFFFFh
		call	sub_6ED94530
		mov	eax, [ebp+arg_0]
		lea	ecx, [ebp+var_40]
		mov	[esp+4], ecx
		mov	[ebp+var_B8], 6
		mov	[esp], eax
		call	sub_6ED60A80
		lea	eax, [ebp+var_40]
		mov	[esp], eax
		mov	[ebp+var_B8], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_D1], 0
		jmp	loc_6ED69797
; ---------------------------------------------------------------------------

loc_6ED6A012:				; CODE XREF: sub_6ED69420+125j
		movsx	eax, [ebp+var_C5]
		jmp	loc_6ED69D45
sub_6ED69420	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED6A01E	proc near		; DATA XREF: sub_6ED69420+2Co
		add	ebp, 8
		mov	eax, [ebp-0B8h]
		mov	edx, [ebp-0B4h]
		cmp	eax, 1
		mov	[ebp-0F0h], edx
		jz	short loc_6ED6A0A8
		cmp	eax, 2
		jz	loc_6ED6A127
		cmp	eax, 3
		jz	loc_6ED6A11F
		cmp	eax, 4
		lea	esi, [esi+0]
		jz	loc_6ED6A117
		cmp	eax, 5
		jz	loc_6ED6A112
		cmp	eax, 6
		jz	loc_6ED6A10A
		cmp	eax, 7
		nop
		lea	esi, [esi+0]
		jz	loc_6ED6A102
		cmp	eax, 8
		jz	short loc_6ED6A0D5
		lea	eax, [ebp-74h]

loc_6ED6A07E:				; CODE XREF: sub_6ED6A01E+E7j
					; sub_6ED6A01E+EFj ...
		mov	[esp+0], eax
		mov	dword ptr [ebp-0B8h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-0F0h]
		mov	dword ptr [ebp-0B8h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED6A0A8:				; CODE XREF: sub_6ED6A01E+18j
		lea	eax, [ebp-6Ch]

loc_6ED6A0AB:				; CODE XREF: sub_6ED6A01E+F7j
		mov	[esp+0], eax
		mov	dword ptr [ebp-0B8h], 0
		call	sub_6ED94560
		mov	edx, [ebp-0F0h]
		mov	dword ptr [ebp-0B8h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED6A0D5:				; CODE XREF: sub_6ED6A01E+5Bj
		lea	eax, [ebp-10h]

loc_6ED6A0D8:				; CODE XREF: sub_6ED6A01E+10Cj
		mov	[esp+0], eax
		mov	dword ptr [ebp-0B8h], 0
		call	sub_6ED94560
		mov	eax, [ebp-0F0h]
		mov	dword ptr [ebp-0B8h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED6A102:				; CODE XREF: sub_6ED6A01E+52j
		lea	eax, [ebp-20h]
		jmp	loc_6ED6A07E
; ---------------------------------------------------------------------------

loc_6ED6A10A:				; CODE XREF: sub_6ED6A01E+44j
		lea	eax, [ebp-2Ch]
		jmp	loc_6ED6A07E
; ---------------------------------------------------------------------------

loc_6ED6A112:				; CODE XREF: sub_6ED6A01E+3Bj
		lea	eax, [ebp-40h]
		jmp	short loc_6ED6A0AB
; ---------------------------------------------------------------------------

loc_6ED6A117:				; CODE XREF: sub_6ED6A01E+32j
		lea	eax, [ebp-4Ch]
		jmp	loc_6ED6A07E
; ---------------------------------------------------------------------------

loc_6ED6A11F:				; CODE XREF: sub_6ED6A01E+26j
		lea	eax, [ebp-58h]
		jmp	loc_6ED6A07E
; ---------------------------------------------------------------------------

loc_6ED6A127:				; CODE XREF: sub_6ED6A01E+1Dj
		lea	eax, [ebp-68h]
		jmp	short loc_6ED6A0D8
sub_6ED6A01E	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED6A130	proc near		; CODE XREF: sub_6ED6FDD0+84p
					; DATA XREF: sub_6ED6A130+12Co	...

var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_69		= byte ptr -69h
var_68		= dword	ptr -68h
var_61		= byte ptr -61h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_28		= byte ptr -28h
var_14		= dword	ptr -14h
var_10		= byte ptr -10h
var_C		= byte ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 98h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset dword_6ED9A84C
		mov	[ebp+var_38], offset sub_6ED6A68F
		mov	[ebp+var_34], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+74h]
		test	edx, edx
		mov	[ebp+var_68], edx
		jz	loc_6ED6A288
		mov	eax, [edx]
		mov	edx, [eax+8]
		test	edx, edx
		jz	loc_6ED6A288
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_6ED6A1A4
		mov	eax, [eax+4]
		mov	ecx, [ebp+var_68]
		mov	[esp+4], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	[esp], ecx
		call	sub_6ED96400

loc_6ED6A1A4:				; CODE XREF: sub_6ED6A130+55j
		mov	eax, [ebp+var_68]
		mov	edx, [eax]
		mov	eax, [edx+8]
		sub	eax, 1
		mov	[ebp+var_70], eax
		lea	eax, [eax+eax*2]
		mov	eax, [edx+eax*4+18h]
		mov	[ebp+var_60], eax
		mov	eax, [edx+4]
		cmp	[ebp+var_70], eax
		jg	loc_6ED6A504
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_6ED6A1E0
		mov	edx, eax
		sar	edx, 1
		cmp	[ebp+var_70], edx
		jl	loc_6ED6A504
		nop
		lea	esi, [esi+0]

loc_6ED6A1E0:				; CODE XREF: sub_6ED6A130+9Cj
					; sub_6ED6A130+3FFj
		mov	ecx, [ebp+var_70]
		mov	[esp+8], eax
		mov	eax, [ebp+var_68]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], ecx
		mov	[esp], eax
		call	sub_6ED96400
		mov	ecx, [ebp+arg_0]
		movzx	edx, byte ptr [ebp+var_60]
		mov	eax, [ecx+74h]
		mov	[ebp+var_61], dl
		mov	edx, [eax]
		mov	edx, [edx+8]
		test	edx, edx
		jz	short loc_6ED6A28C ; jumptable 6ED6A2D8	default	case
		mov	[esp], eax
		call	sub_6ED943D0
		mov	edx, [eax+4]
		mov	[ebp+var_84], edx
		mov	eax, [eax]
		cmp	eax, offset sub_6ED60FB0
		mov	[ebp+var_74], eax
		jz	loc_6ED6A630

loc_6ED6A234:				; CODE XREF: sub_6ED6A130+502j
					; sub_6ED6A130+527j
		test	byte ptr [ebp+var_74], 1
		jnz	loc_6ED6A534
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_84]

loc_6ED6A247:				; CODE XREF: sub_6ED6A130+419j
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	[ebp+var_74]
		test	al, al
		jnz	short loc_6ED6A28C ; jumptable 6ED6A2D8	default	case
		movsx	eax, [ebp+var_61]
		mov	dword ptr [esp+4], offset sub_6ED6A130
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED58610
		mov	[ebp+var_69], 0
		jmp	short loc_6ED6A307
; ---------------------------------------------------------------------------

loc_6ED6A288:				; CODE XREF: sub_6ED6A130+3Dj
					; sub_6ED6A130+4Aj
		mov	[ebp+var_61], 0

loc_6ED6A28C:				; CODE XREF: sub_6ED6A130+E1j
					; sub_6ED6A130+126j ...
		cmp	[ebp+var_61], 3	; jumptable 6ED6A2D8 default case
		jz	short loc_6ED6A303
		jg	short loc_6ED6A2E0
		cmp	[ebp+var_61], 0FFh
		jz	short loc_6ED6A318

loc_6ED6A29A:				; CODE XREF: sub_6ED6A130+1C0j
		mov	edx, [ebp+arg_0]
		movzx	eax, word ptr [edx+98h]
		mov	edx, eax
		or	edx, 1
		cmp	dx, 0FFFFh
		jz	loc_6ED6A65C
		cmp	ax, 9
		jnz	loc_6ED6A4A1

loc_6ED6A2BD:				; CODE XREF: sub_6ED6A130+375j
					; sub_6ED6A130+380j ...
		xor	edx, edx

loc_6ED6A2BF:				; CODE XREF: sub_6ED6A130+399j
					; sub_6ED6A130+3A8j ...
		movsx	eax, [ebp+var_61]
		lea	eax, [eax+eax*4]
		movzx	eax, ds:byte_6EDA16D0[edx+eax]
		cmp	al, 5		; switch 6 cases
		mov	[ebp+var_61], al
		ja	short loc_6ED6A28C ; jumptable 6ED6A2D8	default	case
		movzx	eax, al
		jmp	ds:off_6EDA0B48[eax*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6A2E0:				; CODE XREF: sub_6ED6A130+162j
		cmp	[ebp+var_61], 4
		jz	loc_6ED6A380
		cmp	[ebp+var_61], 5
		xchg	ax, ax
		jnz	short loc_6ED6A29A
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8Ch]
		test	eax, eax
		jnz	loc_6ED6A420

loc_6ED6A303:				; CODE XREF: sub_6ED6A130+160j
					; sub_6ED6A130+258j ...
		mov	[ebp+var_69], 1

loc_6ED6A307:				; CODE XREF: sub_6ED6A130+156j
					; sub_6ED6A130+22Fj ...
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_69]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED6A318:				; CODE XREF: sub_6ED6A130+168j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aUnexpectedChar	; "unexpected character"
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_58], 1
		mov	[ebp+var_14], eax
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED60A80
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		mov	[ebp+var_69], 0
		jnz	short loc_6ED6A307
		mov	eax, [ebp+var_14]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_69], 0
		jmp	short loc_6ED6A307
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6A380:				; CODE XREF: sub_6ED6A130+1B4j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+7Ch]
		test	eax, eax
		jz	loc_6ED6A303
		mov	eax, [eax]
		mov	eax, [eax+2Ch]
		mov	[esp], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[ebp+var_80], eax
		call	sub_6ED59310
		mov	ecx, [ebp+arg_0]
		mov	[esp], ecx
		mov	[ebp+var_7C], eax
		call	sub_6ED59250
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+7Ch]
		mov	ecx, [ebp+var_7C]
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[esp+8], ecx
		call	[ebp+var_80]
		test	al, al
		jnz	loc_6ED6A303
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_C]
		mov	eax, [edx+7Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx+34h]
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_C]
		mov	[ebp+var_58], 3
		sub	esp, 4
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_6ED60A80
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_69], 0
		jmp	loc_6ED6A307
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6A420:				; CODE XREF: sub_6ED6A130+1CDj
		mov	eax, [eax]
		mov	eax, [eax+20h]
		mov	[esp], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[ebp+var_78], eax
		call	sub_6ED59310
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+8Ch]
		mov	[esp+4], eax
		mov	[esp], edx
		call	[ebp+var_78]
		test	al, al
		jnz	loc_6ED6A303
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_10]
		mov	eax, [edx+8Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx+24h]
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_10]
		mov	[ebp+var_58], 2
		sub	esp, 4
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_6ED60A80
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_69], 0
		jmp	loc_6ED6A307
; ---------------------------------------------------------------------------

loc_6ED6A4A1:				; CODE XREF: sub_6ED6A130+187j
		cmp	ax, 20h
		jz	loc_6ED6A2BD
		cmp	ax, 0Dh
		nop
		jz	loc_6ED6A2BD
		cmp	ax, 0Ah
		jz	loc_6ED6A2BD
		cmp	ax, 3Ch
		mov	edx, 1
		jz	loc_6ED6A2BF
		cmp	ax, 3Fh
		mov	edx, 2
		jz	loc_6ED6A2BF
		xor	edx, edx
		cmp	ax, 21h
		setnz	dl
		add	edx, 3
		jmp	loc_6ED6A2BF
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6A4F0:				; CODE XREF: sub_6ED6A130+1A8j
					; DATA XREF: .rdata:off_6EDA0B48o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6A2D8 cases 1,2
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED5BC00
		jmp	loc_6ED6A28C	; jumptable 6ED6A2D8 default case
; ---------------------------------------------------------------------------

loc_6ED6A504:				; CODE XREF: sub_6ED6A130+92j
					; sub_6ED6A130+A5j
		mov	edx, [ebp+var_70]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0Ch
		mov	dword ptr [esp], 1Ch
		mov	[esp+4], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN11QVectorData4growEiiib
		jmp	loc_6ED6A1E0
; ---------------------------------------------------------------------------

loc_6ED6A534:				; CODE XREF: sub_6ED6A130+108j
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_84]
		mov	ecx, [ebp+var_74]
		mov	edx, [eax]
		mov	edx, [edx+ecx-1]
		mov	[ebp+var_74], edx
		jmp	loc_6ED6A247
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6A550:				; CODE XREF: sub_6ED6A130+1A8j
					; DATA XREF: .rdata:off_6EDA0B48o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6A2D8 case 4
		mov	byte ptr [ecx+60h], 0
		mov	[esp], ecx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED69420
		test	al, al
		jnz	loc_6ED6A28C	; jumptable 6ED6A2D8 default case
		mov	eax, [ebp+arg_0]
		mov	dword ptr [esp+0Ch], 4
		mov	dword ptr [esp+4], offset sub_6ED6A130
		mov	dword ptr [esp+8], 0
		mov	[esp], eax
		call	sub_6ED58610
		mov	[ebp+var_69], 0
		jmp	loc_6ED6A307
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6A5A0:				; CODE XREF: sub_6ED6A130+1A8j
					; DATA XREF: .rdata:off_6EDA0B48o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6A2D8 case 3
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED60FB0
		test	al, al
		jnz	loc_6ED6A28C	; jumptable 6ED6A2D8 default case
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+0Ch], 3
		mov	dword ptr [esp+4], offset sub_6ED6A130
		mov	dword ptr [esp+8], 0
		mov	[esp], edx
		call	sub_6ED58610
		mov	[ebp+var_69], 0
		jmp	loc_6ED6A307
; ---------------------------------------------------------------------------

loc_6ED6A5E6:				; CODE XREF: sub_6ED6A130+1A8j
					; DATA XREF: .rdata:off_6EDA0B48o
		mov	edx, [ebp+arg_0] ; jumptable 6ED6A2D8 case 5
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED64F30
		test	al, al
		jnz	loc_6ED6A28C	; jumptable 6ED6A2D8 default case
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+0Ch], 5
		mov	dword ptr [esp+4], offset sub_6ED6A130
		mov	dword ptr [esp+8], 0
		mov	[esp], ecx
		call	sub_6ED58610
		mov	[ebp+var_69], 0
		jmp	loc_6ED6A307
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6A630:				; CODE XREF: sub_6ED6A130+FEj
		test	edx, edx
		jnz	loc_6ED6A234
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_28]
		mov	edx, [ecx+74h]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_6ED94310
		sub	esp, 4
		jmp	loc_6ED6A234
; ---------------------------------------------------------------------------

loc_6ED6A65C:				; CODE XREF: sub_6ED6A130+17Dj
		movsx	eax, [ebp+var_61]
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED6A130
		mov	dword ptr [esp+8], 0
		mov	[esp+0Ch], eax
		mov	[esp], ecx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED60E40
		mov	[ebp+var_69], 0
		jmp	loc_6ED6A307
sub_6ED6A130	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED6A68F	proc near		; DATA XREF: sub_6ED6A130+20o
		add	ebp, 8
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-88h], edx
		jz	short loc_6ED6A6CF
		cmp	eax, 2
		jz	short loc_6ED6A6D4
		lea	eax, [ebp-14h]

loc_6ED6A6AB:				; CODE XREF: sub_6ED6A68F+43j
					; sub_6ED6A68F+48j
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-88h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED6A6CF:				; CODE XREF: sub_6ED6A68F+12j
		lea	eax, [ebp-10h]
		jmp	short loc_6ED6A6AB
; ---------------------------------------------------------------------------

loc_6ED6A6D4:				; CODE XREF: sub_6ED6A68F+17j
		lea	eax, [ebp-0Ch]
		jmp	short loc_6ED6A6AB
sub_6ED6A68F	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED6A6E0	proc near		; CODE XREF: sub_6ED6B5F0+5EDp
					; DATA XREF: sub_6ED6A6E0+1A2o	...

var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_D0		= dword	ptr -0D0h
var_CC		= dword	ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_99		= byte ptr -99h
var_98		= dword	ptr -98h
var_91		= byte ptr -91h
var_90		= dword	ptr -90h
var_8C		= byte ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_58		= byte ptr -58h
var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
var_30		= byte ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= byte ptr -24h
var_20		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_18		= byte ptr -18h
var_14		= byte ptr -14h
var_10		= byte ptr -10h
var_C		= byte ptr -0Ch
var_8		= byte ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 0E4h
		mov	[ebp+var_6C], eax
		lea	eax, [ebp+var_8C]
		mov	[ebp+var_74], offset sub_6ED997C0
		mov	[ebp+var_70], offset word_6ED9A856
		mov	[ebp+var_68], offset loc_6ED6B4C5
		mov	[ebp+var_64], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+74h]
		test	edx, edx
		mov	[ebp+var_98], edx
		jz	short loc_6ED6A72F
		mov	eax, [edx]
		mov	edx, [eax+8]
		test	edx, edx
		jnz	short loc_6ED6A770

loc_6ED6A72F:				; CODE XREF: sub_6ED6A6E0+44j
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_91], 0
		mov	byte ptr [ecx+50h], 0

loc_6ED6A73D:				; CODE XREF: sub_6ED6A6E0+140j
					; sub_6ED6A6E0+195j
		mov	eax, [ebp+arg_0]
		add	eax, 70h
		mov	[ebp+var_A4], eax
		lea	esi, [esi+0]

loc_6ED6A750:				; CODE XREF: sub_6ED6A6E0+273j
					; sub_6ED6A6E0+2F2j ...
		movzx	eax, [ebp+var_91] ; jumptable 6ED6A95C default case
		add	eax, 1
		cmp	al, 11h		; switch 18 cases
		ja	loc_6ED6A900	; jumptable 6ED6A765 default case
		movzx	eax, al
		jmp	ds:off_6EDA0B90[eax*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6A770:				; CODE XREF: sub_6ED6A6E0+4Dj
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_6ED6A79A
		mov	eax, [eax+4]
		mov	[esp+4], edx
		mov	edx, [ebp+var_98]
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	[esp], edx
		call	sub_6ED96400

loc_6ED6A79A:				; CODE XREF: sub_6ED6A6E0+95j
		mov	ecx, [ebp+var_98]
		mov	edx, [ecx]
		mov	eax, [edx+8]
		sub	eax, 1
		mov	[ebp+var_A0], eax
		lea	eax, [eax+eax*2]
		mov	eax, [edx+eax*4+18h]
		mov	[ebp+var_90], eax
		mov	eax, [edx+4]
		cmp	[ebp+var_A0], eax
		jg	loc_6ED6AFD3
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_6ED6A7E0
		mov	edx, eax
		sar	edx, 1
		cmp	[ebp+var_A0], edx
		jl	loc_6ED6AFD3

loc_6ED6A7E0:				; CODE XREF: sub_6ED6A6E0+EEj
					; sub_6ED6A6E0+924j
		mov	edx, [ebp+var_A0]
		mov	ecx, [ebp+var_98]
		mov	[esp+8], eax
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[esp+4], edx
		mov	[esp], ecx
		call	sub_6ED96400
		movzx	eax, byte ptr [ebp+var_90]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_91], al
		mov	eax, [edx+74h]
		mov	edx, [eax]
		mov	ecx, [edx+8]
		test	ecx, ecx
		jz	loc_6ED6A73D
		mov	[esp], eax
		call	sub_6ED943D0
		mov	ecx, [eax+4]
		mov	[ebp+var_BC], ecx
		mov	eax, [eax]
		cmp	eax, offset sub_6ED60FB0
		mov	[ebp+var_B4], eax
		jz	loc_6ED6B340

loc_6ED6A84A:				; CODE XREF: sub_6ED6A6E0+C62j
					; sub_6ED6A6E0+C8Aj
		test	byte ptr [ebp+var_B4], 1
		jnz	loc_6ED6B165
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_BC]

loc_6ED6A860:				; CODE XREF: sub_6ED6A6E0+AA0j
		mov	[esp], eax
		mov	[ebp+var_88], 0FFFFFFFFh
		call	[ebp+var_B4]
		test	al, al
		jnz	loc_6ED6A73D

loc_6ED6A87B:				; CODE XREF: sub_6ED6A6E0+614j
		movsx	eax, [ebp+var_91]
		mov	dword ptr [esp+4], offset sub_6ED6A6E0
		mov	dword ptr [esp+8], 0
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED58610
		mov	[ebp+var_99], 0
		jmp	loc_6ED6ABF6
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6A8B0:				; CODE XREF: sub_6ED6A6E0+85j
					; DATA XREF: .rdata:off_6EDA0B90o
		mov	edx, [ebp+arg_0] ; jumptable 6ED6A765 case 11
		mov	eax, [edx+8Ch]
		test	eax, eax
		jz	short loc_6ED6A8F8
		mov	eax, [eax]
		mov	eax, [eax+20h]
		mov	[esp], edx
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[ebp+var_A8], eax
		call	sub_6ED59310
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+8Ch]
		mov	[esp+4], eax
		mov	[esp], edx
		call	[ebp+var_A8]
		test	al, al
		jz	loc_6ED6B3C4

loc_6ED6A8F8:				; CODE XREF: sub_6ED6A6E0+1DBj
		mov	[ebp+var_91], 0Bh
		nop

loc_6ED6A900:				; CODE XREF: sub_6ED6A6E0+7Cj
					; sub_6ED6A6E0+85j ...
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6A765 default case
		movzx	eax, word ptr [ecx+98h]
		mov	edx, eax
		or	edx, 1
		cmp	dx, 0FFFFh
		jz	loc_6ED6B559
		mov	ebx, eax
		movsx	edx, [ebp+var_91]
		mov	ecx, 9
		shr	bx, 8
		test	bl, bl
		jnz	short loc_6ED6A940

loc_6ED6A92F:				; CODE XREF: sub_6ED6A6E0+3E7j
		movzx	eax, al
		movsx	eax, ds:byte_6EDA16E0[eax]
		movsx	ecx, ds:byte_6EDA1880[eax]

loc_6ED6A940:				; CODE XREF: sub_6ED6A6E0+24Dj
		lea	eax, [edx+edx*4]
		movzx	eax, ds:byte_6EDA17E0[ecx+eax*2]
		cmp	al, 0Fh		; switch 16 cases
		mov	[ebp+var_91], al
		ja	loc_6ED6A750	; jumptable 6ED6A95C default case
		movzx	eax, al
		jmp	ds:off_6EDA0BD8[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_6ED6A963:				; CODE XREF: sub_6ED6A6E0+27Cj
					; DATA XREF: .rdata:off_6EDA0BD8o
		mov	edx, [ebp+arg_0] ; jumptable 6ED6A95C cases 1,2
		cmp	byte ptr [edx+50h], 0
		jnz	short loc_6ED6A984
		mov	byte ptr [edx+50h], 1
		mov	dword ptr [edx+6C4h], 0
		mov	dword ptr [edx+6C0h], 0

loc_6ED6A984:				; CODE XREF: sub_6ED6A6E0+28Aj
		mov	ecx, [ebp+arg_0]
		movzx	eax, word ptr [ecx+98h]
		mov	[esp], ecx
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[esp+4], ax
		call	sub_6ED593D0
		mov	eax, [ebp+arg_0]
		cmp	byte ptr [eax+43h], 0
		jz	short loc_6ED6A9C0 ; jumptable 6ED6A95C	cases 0,9,14,15
		mov	[esp], eax
		call	sub_6ED624E0
		test	al, al
		jz	loc_6ED6ABEF
		xchg	ax, ax

loc_6ED6A9C0:				; CODE XREF: sub_6ED6A6E0+27Cj
					; sub_6ED6A6E0+2CCj ...
		mov	eax, [ebp+arg_0] ; jumptable 6ED6A95C cases 0,9,14,15
		mov	[ebp+var_88], 0FFFFFFFFh
		call	sub_6ED5BC00
		jmp	loc_6ED6A750	; jumptable 6ED6A95C default case
; ---------------------------------------------------------------------------

loc_6ED6A9D7:				; CODE XREF: sub_6ED6A6E0+85j
					; DATA XREF: .rdata:off_6EDA0B90o
		mov	edx, [ebp+arg_0] ; jumptable 6ED6A765 case 17
		mov	eax, [edx+7Ch]
		test	eax, eax
		jz	short loc_6ED6AA30
		cmp	byte ptr [edx+50h], 0
		jz	short loc_6ED6AA30
		cmp	byte ptr [edx+42h], 0
		jz	loc_6ED6AF10

loc_6ED6A9F1:				; CODE XREF: sub_6ED6A6E0+88Aj
		mov	eax, [eax]
		mov	ecx, [ebp+arg_0]
		mov	eax, [eax+24h]
		mov	[esp], ecx
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[ebp+var_B8], eax
		call	sub_6ED59310
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+7Ch]
		mov	[esp+4], eax
		mov	[esp], edx
		call	[ebp+var_B8]
		test	al, al
		jz	loc_6ED6B185
		lea	esi, [esi+0]

loc_6ED6AA30:				; CODE XREF: sub_6ED6A6E0+2FFj
					; sub_6ED6A6E0+305j ...
		mov	[ebp+var_99], 1
		jmp	loc_6ED6ABF6
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6AA40:				; CODE XREF: sub_6ED6A6E0+85j
					; DATA XREF: .rdata:off_6EDA0B90o
		mov	edx, [ebp+arg_0] ; jumptable 6ED6A765 case 16
		movzx	eax, word ptr [edx+98h]
		mov	edx, eax
		or	edx, 1
		cmp	dx, 0FFFFh
		jz	loc_6ED6B032
		cmp	ax, 3Eh
		jz	loc_6ED6B077
		cmp	ax, 5Dh
		jz	loc_6ED6AF70
		mov	ecx, [ebp+arg_0]
		mov	word ptr [esp+4], 5Dh
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED593D0
		mov	eax, [ebp+arg_0]
		mov	word ptr [esp+4], 5Dh
		mov	[esp], eax
		call	sub_6ED593D0
		jmp	loc_6ED6A900	; jumptable 6ED6A765 default case
; ---------------------------------------------------------------------------

loc_6ED6AAA0:				; CODE XREF: sub_6ED6A6E0+85j
					; DATA XREF: .rdata:off_6EDA0B90o
		mov	edx, [ebp+arg_0] ; jumptable 6ED6A765 case 15
		movzx	ecx, word ptr [edx+98h]
		mov	eax, ecx
		or	eax, 1
		cmp	ax, 0FFFFh
		jz	loc_6ED6B070
		cmp	cx, 5Dh
		mov	eax, 5Dh
		mov	edx, 0Eh
		jz	loc_6ED6A92F
		mov	ecx, [ebp+arg_0]
		mov	word ptr [esp+4], 5Dh
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED593D0
		jmp	loc_6ED6A900	; jumptable 6ED6A765 default case
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6AAF0:				; CODE XREF: sub_6ED6A6E0+85j
					; DATA XREF: .rdata:off_6EDA0B90o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6A765 case 13
		mov	dword ptr [eax+6C4h], 0
		mov	dword ptr [eax+6C0h], 0
		jmp	loc_6ED6A900	; jumptable 6ED6A765 default case
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6AB10:				; CODE XREF: sub_6ED6A6E0+85j
					; DATA XREF: .rdata:off_6EDA0B90o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6A765 case 7
		mov	eax, [ecx+7Ch]
		test	eax, eax
		jz	short loc_6ED6AB6D
		mov	eax, [eax]
		mov	eax, [eax+2Ch]
		mov	[esp], ecx
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[ebp+var_B0], eax
		call	sub_6ED59310
		mov	[ebp+var_AC], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED59250
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+7Ch]
		mov	ecx, [ebp+var_AC]
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[esp+8], ecx
		call	[ebp+var_B0]
		test	al, al
		jz	loc_6ED6B36F

loc_6ED6AB6D:				; CODE XREF: sub_6ED6A6E0+438j
		mov	[ebp+var_91], 7
		jmp	loc_6ED6A900	; jumptable 6ED6A765 default case
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6AB80:				; CODE XREF: sub_6ED6A6E0+85j
					; DATA XREF: .rdata:off_6EDA0B90o
		mov	edx, [ebp+arg_0] ; jumptable 6ED6A765 case 5
		cmp	byte ptr [edx+50h], 0
		jnz	loc_6ED6A900	; jumptable 6ED6A765 default case
		movzx	eax, byte ptr [edx+62h]
		mov	[edx+50h], al
		jmp	loc_6ED6A900	; jumptable 6ED6A765 default case
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6ABA0:				; CODE XREF: sub_6ED6A6E0+85j
					; DATA XREF: .rdata:off_6EDA0B90o
		mov	dword ptr [esp+4], 0FFFFFFFFh ;	jumptable 6ED6A765 case	0
		mov	dword ptr [esp], offset	aErrorOccurre_1	; "error occurred while	parsing	content"
		mov	[ebp+var_88], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_88], 6
		mov	[ebp+var_28], eax
		lea	eax, [ebp+var_28]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED60A80
		mov	eax, [ebp+var_28]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED6B010

loc_6ED6ABEF:				; CODE XREF: sub_6ED6A6E0+2D8j
					; sub_6ED6A6E0+5F2j
		mov	[ebp+var_99], 0

loc_6ED6ABF6:				; CODE XREF: sub_6ED6A6E0+1C8j
					; sub_6ED6A6E0+357j ...
		lea	eax, [ebp+var_8C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_99]
		mov	ebx, [ebp+var_4]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED6AC10:				; CODE XREF: sub_6ED6A6E0+27Cj
					; DATA XREF: .rdata:off_6EDA0BD8o
		lea	edx, [ebp+var_3C] ; jumptable 6ED6A95C case 12
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aCdata_0 ; "[CDATA["
		mov	[esp], edx
		mov	[ebp+var_88], 0FFFFFFFFh
		call	ds:_ZN7QString10fromLatin1EPKci
		mov	eax, [ebp+var_A4]
		lea	ecx, [ebp+var_3C]
		mov	[ebp+var_88], 1
		sub	esp, 4
		mov	[esp+4], ecx
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_3C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED6AEF0

loc_6ED6AC6A:				; CODE XREF: sub_6ED6A6E0+826j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED64390
		test	al, al
		jnz	loc_6ED6A750	; jumptable 6ED6A95C default case
		mov	dword ptr [esp+0Ch], 0Ch
		jmp	loc_6ED6AD55
; ---------------------------------------------------------------------------

loc_6ED6AC94:				; CODE XREF: sub_6ED6A6E0+27Cj
					; DATA XREF: .rdata:off_6EDA0BD8o
		mov	edx, [ebp+arg_0] ; jumptable 6ED6A95C case 3
		movzx	eax, word ptr [edx+98h]
		mov	[esp], edx
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[esp+4], ax
		call	sub_6ED593D0
		mov	ecx, [ebp+arg_0]
		cmp	byte ptr [ecx+43h], 0
		jz	loc_6ED6A9C0	; jumptable 6ED6A95C cases 0,9,14,15
		mov	[esp], ecx
		call	sub_6ED624E0
		test	al, al
		jnz	loc_6ED6A9C0	; jumptable 6ED6A95C cases 0,9,14,15
		jmp	loc_6ED6ABEF
; ---------------------------------------------------------------------------

loc_6ED6ACD7:				; CODE XREF: sub_6ED6A6E0+27Cj
					; DATA XREF: .rdata:off_6EDA0BD8o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6A95C cases 10,11
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED64F30
		test	al, al
		jnz	loc_6ED6A750	; jumptable 6ED6A95C default case
		jmp	loc_6ED6A87B
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6AD00:				; CODE XREF: sub_6ED6A6E0+27Cj
					; DATA XREF: .rdata:off_6EDA0BD8o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6A95C case 13
		movzx	eax, word ptr [ecx+98h]
		mov	[esp], ecx
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[esp+4], ax
		call	sub_6ED593D0
		mov	eax, [ebp+arg_0]
		call	sub_6ED5BC00
		jmp	loc_6ED6A750	; jumptable 6ED6A95C default case
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6AD30:				; CODE XREF: sub_6ED6A6E0+27Cj
					; DATA XREF: .rdata:off_6EDA0BD8o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6A95C case 8
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED6B5F0
		test	al, al
		jnz	loc_6ED6A750	; jumptable 6ED6A95C default case
		mov	dword ptr [esp+0Ch], 8

loc_6ED6AD55:				; CODE XREF: sub_6ED6A6E0+5AFj
					; sub_6ED6A6E0+8EEj
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED6A6E0
		mov	dword ptr [esp+8], 0
		mov	[esp], edx
		call	sub_6ED58610
		mov	[ebp+var_99], 0
		jmp	loc_6ED6ABF6
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6AD80:				; CODE XREF: sub_6ED6A6E0+27Cj
					; DATA XREF: .rdata:off_6EDA0BD8o
		mov	edx, [ebp+arg_0] ; jumptable 6ED6A95C cases 6,7
		mov	byte ptr [edx+60h], 0
		mov	[esp], edx
		mov	[ebp+var_88], 0FFFFFFFFh
		call	sub_6ED69420
		test	al, al
		jnz	loc_6ED6A750	; jumptable 6ED6A95C default case
		movsx	eax, [ebp+var_91]
		mov	[esp+0Ch], eax

loc_6ED6ADAC:				; CODE XREF: sub_6ED6A6E0+808j
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED6A6E0
		mov	dword ptr [esp+8], 0
		mov	[esp], ecx
		call	sub_6ED58610
		mov	[ebp+var_99], 0
		jmp	loc_6ED6ABF6
; ---------------------------------------------------------------------------

loc_6ED6ADD3:				; CODE XREF: sub_6ED6A6E0+27Cj
					; DATA XREF: .rdata:off_6EDA0BD8o
		mov	edx, [ebp+arg_0] ; jumptable 6ED6A95C case 5
		mov	eax, [edx+7Ch]
		test	eax, eax
		jz	short loc_6ED6AE28
		cmp	byte ptr [edx+50h], 0
		jz	short loc_6ED6AE28
		cmp	byte ptr [edx+42h], 0
		jz	loc_6ED6B280

loc_6ED6ADED:				; CODE XREF: sub_6ED6A6E0+BFAj
		mov	eax, [eax]
		mov	eax, [eax+24h]
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[ebp+var_CC], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED59310
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+7Ch]
		mov	[esp+4], eax
		mov	[esp], edx
		call	[ebp+var_CC]
		test	al, al
		jz	loc_6ED6B22D

loc_6ED6AE28:				; CODE XREF: sub_6ED6A6E0+6FBj
					; sub_6ED6A6E0+701j ...
		mov	eax, [ebp+arg_0]
		mov	byte ptr [eax+50h], 0
		mov	[ebp+var_88], 0FFFFFFFFh
		call	sub_6ED5BC00
		jmp	loc_6ED6A750	; jumptable 6ED6A95C default case
; ---------------------------------------------------------------------------

loc_6ED6AE43:				; CODE XREF: sub_6ED6A6E0+27Cj
					; DATA XREF: .rdata:off_6EDA0BD8o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6A95C case 4
		cmp	byte ptr [eax+50h], 0
		jz	loc_6ED6AF91
		mov	ecx, [ebp+arg_0]
		cmp	byte ptr [ecx+43h], 0
		jz	short loc_6ED6AEBC
		mov	eax, [ecx+7Ch]
		test	eax, eax
		jz	short loc_6ED6AEA5
		cmp	byte ptr [ecx+42h], 0
		jz	loc_6ED6B2E0

loc_6ED6AE6A:				; CODE XREF: sub_6ED6A6E0+C5Aj
		mov	eax, [eax]
		mov	eax, [eax+24h]
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[ebp+var_D0], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED59310
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+7Ch]
		mov	[esp+4], eax
		mov	[esp], edx
		call	[ebp+var_D0]
		test	al, al
		jz	loc_6ED6B1DA

loc_6ED6AEA5:				; CODE XREF: sub_6ED6A6E0+77Ej
					; sub_6ED6A6E0+C4Ej
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+6C4h], 0
		mov	dword ptr [eax+6C0h], 0

loc_6ED6AEBC:				; CODE XREF: sub_6ED6A6E0+777j
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+64h], 0
		mov	[esp], edx
		mov	[ebp+var_88], 0FFFFFFFFh
		call	sub_6ED68110
		test	al, al
		jnz	loc_6ED6A750	; jumptable 6ED6A95C default case
		mov	dword ptr [esp+0Ch], 4
		jmp	loc_6ED6ADAC
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6AEF0:				; CODE XREF: sub_6ED6A6E0+584j
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED6AC6A
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6AF10:				; CODE XREF: sub_6ED6A6E0+30Bj
		mov	[esp], edx
		mov	[ebp+var_88], 8
		call	sub_6ED59310
		lea	edx, [ebp+var_20]
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZNK7QString10simplifiedEv
		mov	eax, [ebp+var_20]
		sub	esp, 4
		mov	eax, [eax+8]
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[ebp+var_C0], eax
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		call	sub_6ED94560
		mov	ecx, [ebp+var_C0]
		test	ecx, ecx
		jz	loc_6ED6AA30
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+7Ch]
		jmp	loc_6ED6A9F1
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6AF70:				; CODE XREF: sub_6ED6A6E0+387j
		mov	edx, [ebp+arg_0]
		mov	word ptr [esp+4], 5Dh
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED593D0
		jmp	loc_6ED6A900	; jumptable 6ED6A765 default case
; ---------------------------------------------------------------------------

loc_6ED6AF91:				; CODE XREF: sub_6ED6A6E0+76Aj
		mov	dword ptr [eax+6C4h], 0
		mov	dword ptr [eax+6C0h], 0
		mov	dword ptr [eax+64h], 0
		mov	[esp], eax
		mov	[ebp+var_88], 0FFFFFFFFh
		call	sub_6ED68110
		test	al, al
		jnz	loc_6ED6A750	; jumptable 6ED6A95C default case
		mov	dword ptr [esp+0Ch], 4
		jmp	loc_6ED6AD55
; ---------------------------------------------------------------------------

loc_6ED6AFD3:				; CODE XREF: sub_6ED6A6E0+E4j
					; sub_6ED6A6E0+FAj
		mov	eax, [ebp+var_A0]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0Ch
		mov	dword ptr [esp], 1Ch
		mov	[esp+4], eax
		mov	[ebp+var_88], 0FFFFFFFFh
		call	ds:_ZN11QVectorData4growEiiib
		jmp	loc_6ED6A7E0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6B010:				; CODE XREF: sub_6ED6A6E0+509j
		mov	eax, [ebp+var_28]
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_99], 0
		jmp	loc_6ED6ABF6
; ---------------------------------------------------------------------------

loc_6ED6B032:				; CODE XREF: sub_6ED6A6E0+373j
		mov	eax, 0Fh

loc_6ED6B037:				; CODE XREF: sub_6ED6A6E0+995j
					; sub_6ED6A6E0+E80j
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED6A6E0
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED60E40
		mov	[ebp+var_99], 0
		jmp	loc_6ED6ABF6
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6B070:				; CODE XREF: sub_6ED6A6E0+3D3j
		mov	eax, 0Eh
		jmp	short loc_6ED6B037
; ---------------------------------------------------------------------------

loc_6ED6B077:				; CODE XREF: sub_6ED6A6E0+37Dj
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+8Ch]
		test	eax, eax
		jz	short loc_6ED6B0A0
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+18h]
		mov	[ebp+var_88], 0FFFFFFFFh
		call	eax
		test	al, al
		jz	loc_6ED6B41C

loc_6ED6B0A0:				; CODE XREF: sub_6ED6A6E0+9A2j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+7Ch]
		test	eax, eax
		jz	short loc_6ED6B0E2
		mov	eax, [eax]
		mov	eax, [eax+24h]
		mov	[esp], edx
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[ebp+var_C4], eax
		call	sub_6ED59310
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+7Ch]
		mov	[esp+4], eax
		mov	[esp], edx
		call	[ebp+var_C4]
		test	al, al
		jz	loc_6ED6B472

loc_6ED6B0E2:				; CODE XREF: sub_6ED6A6E0+9C8j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8Ch]
		test	eax, eax
		jz	loc_6ED6A900	; jumptable 6ED6A765 default case
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+1Ch]
		mov	[ebp+var_88], 0FFFFFFFFh
		call	eax
		test	al, al
		jnz	loc_6ED6A900	; jumptable 6ED6A765 default case
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+8Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		call	dword ptr [edx+24h]
		mov	ecx, [ebp+arg_0]
		lea	edx, [ebp+var_1C]
		mov	[ebp+var_88], 9
		push	ebx
		mov	[esp+4], edx
		mov	[esp], ecx
		call	sub_6ED60A80
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_88], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_99], 0
		jmp	loc_6ED6ABF6
; ---------------------------------------------------------------------------

loc_6ED6B165:				; CODE XREF: sub_6ED6A6E0+171j
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_BC]
		mov	ecx, [ebp+var_B4]
		mov	edx, [eax]
		mov	edx, [edx+ecx-1]
		mov	[ebp+var_B4], edx
		jmp	loc_6ED6A860
; ---------------------------------------------------------------------------

loc_6ED6B185:				; CODE XREF: sub_6ED6A6E0+346j
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_24]
		mov	eax, [edx+7Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx+34h]
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_24]
		mov	[ebp+var_88], 7
		sub	esp, 4
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_6ED60A80
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		mov	[ebp+var_88], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_99], 0
		jmp	loc_6ED6ABF6
; ---------------------------------------------------------------------------

loc_6ED6B1DA:				; CODE XREF: sub_6ED6A6E0+7BFj
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_30]
		mov	eax, [edx+7Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx+34h]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_88], 4
		push	eax
		lea	eax, [ebp+var_30]
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_6ED60A80
		lea	eax, [ebp+var_30]
		mov	[esp], eax
		mov	[ebp+var_88], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_99], 0
		jmp	loc_6ED6ABF6
; ---------------------------------------------------------------------------

loc_6ED6B22D:				; CODE XREF: sub_6ED6A6E0+742j
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_38]
		mov	eax, [edx+7Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx+34h]
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_38]
		mov	[ebp+var_88], 2
		push	ecx
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_6ED60A80
		lea	eax, [ebp+var_38]
		mov	[esp], eax
		mov	[ebp+var_88], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_99], 0
		jmp	loc_6ED6ABF6
; ---------------------------------------------------------------------------

loc_6ED6B280:				; CODE XREF: sub_6ED6A6E0+707j
		mov	[esp], edx
		mov	[ebp+var_88], 3
		call	sub_6ED59310
		lea	ecx, [ebp+var_34]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	ds:_ZNK7QString10simplifiedEv
		mov	eax, [ebp+var_34]
		sub	esp, 4
		mov	eax, [eax+8]
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[ebp+var_D4], eax
		lea	eax, [ebp+var_34]
		mov	[esp], eax
		call	sub_6ED94560
		mov	ebx, [ebp+var_D4]
		test	ebx, ebx
		jz	loc_6ED6AE28
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+7Ch]
		jmp	loc_6ED6ADED
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6B2E0:				; CODE XREF: sub_6ED6A6E0+784j
		mov	[esp], ecx
		mov	[ebp+var_88], 5
		call	sub_6ED59310
		lea	edx, [ebp+var_2C]
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZNK7QString10simplifiedEv
		mov	eax, [ebp+var_2C]
		sub	esp, 4
		mov	eax, [eax+8]
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[ebp+var_D8], eax
		lea	eax, [ebp+var_2C]
		mov	[esp], eax
		call	sub_6ED94560
		mov	edx, [ebp+var_D8]
		test	edx, edx
		jz	loc_6ED6AEA5
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+7Ch]
		jmp	loc_6ED6AE6A
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6B340:				; CODE XREF: sub_6ED6A6E0+164j
		test	ecx, ecx
		jnz	loc_6ED6A84A
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_58]
		mov	edx, [ecx+74h]
		mov	[esp], eax
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_6ED94310
		sub	esp, 4
		jmp	loc_6ED6A84A
; ---------------------------------------------------------------------------

loc_6ED6B36F:				; CODE XREF: sub_6ED6A6E0+487j
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_C]
		mov	eax, [edx+7Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx+34h]
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_C]
		mov	[ebp+var_88], 0Dh
		sub	esp, 4
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_6ED60A80
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_88], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_99], 0
		jmp	loc_6ED6ABF6
; ---------------------------------------------------------------------------

loc_6ED6B3C4:				; CODE XREF: sub_6ED6A6E0+212j
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_10]
		mov	eax, [edx+8Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx+24h]
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_10]
		mov	[ebp+var_88], 0Ch
		sub	esp, 4
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_6ED60A80
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_88], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_99], 0
		jmp	loc_6ED6ABF6
; ---------------------------------------------------------------------------

loc_6ED6B41C:				; CODE XREF: sub_6ED6A6E0+9BAj
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_14]
		mov	eax, [edx+8Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx+24h]
		lea	eax, [ebp+var_14]
		mov	[ebp+var_88], 0Bh
		push	edx
		mov	edx, [ebp+arg_0]
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_6ED60A80
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_88], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_99], 0
		jmp	loc_6ED6ABF6
; ---------------------------------------------------------------------------

loc_6ED6B472:				; CODE XREF: sub_6ED6A6E0+9FCj
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_18]
		mov	eax, [edx+7Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx+34h]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_88], 0Ah
		push	eax
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_6ED60A80
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_88], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_99], 0
		jmp	loc_6ED6ABF6
; ---------------------------------------------------------------------------

loc_6ED6B4C5:				; DATA XREF: sub_6ED6A6E0+24o
		add	ebp, 8
		mov	eax, [ebp+var_88]
		mov	edx, [ebp+var_84]
		cmp	eax, 1
		mov	[ebp+var_C8], edx
		jz	short loc_6ED6B554
		cmp	eax, 2
		jz	short loc_6ED6B53C
		cmp	eax, 3
		jz	loc_6ED6B5DB
		cmp	eax, 4
		jz	short loc_6ED6B53C
		cmp	eax, 5
		jz	loc_6ED6B5AE
		cmp	eax, 6
		xchg	ax, ax
		jz	loc_6ED6B5A6
		cmp	eax, 7
		jz	short loc_6ED6B53C
		cmp	eax, 8
		xchg	ax, ax
		jz	short loc_6ED6B579
		cmp	eax, 9
		jz	short loc_6ED6B574
		cmp	eax, 0Ah
		jz	short loc_6ED6B56F
		cmp	eax, 0Bh
		nop
		jz	short loc_6ED6B56A
		cmp	eax, 0Ch
		jz	short loc_6ED6B565
		lea	eax, [ebp+var_3C]

loc_6ED6B52A:				; CODE XREF: sub_6ED6A6E0+E77j
					; sub_6ED6A6E0+E88j ...
		mov	[esp], eax
		mov	[ebp+var_88], 0
		call	sub_6ED94560

loc_6ED6B53C:				; CODE XREF: sub_6ED6A6E0+E02j
					; sub_6ED6A6E0+E10j ...
		mov	ecx, [ebp+var_C8]
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[esp], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED6B554:				; CODE XREF: sub_6ED6A6E0+DFDj
		lea	eax, [ebp+var_38]
		jmp	short loc_6ED6B52A
; ---------------------------------------------------------------------------

loc_6ED6B559:				; CODE XREF: sub_6ED6A6E0+233j
		movsx	eax, [ebp+var_91]
		jmp	loc_6ED6B037
; ---------------------------------------------------------------------------

loc_6ED6B565:				; CODE XREF: sub_6ED6A6E0+E45j
		lea	eax, [ebp+var_C]
		jmp	short loc_6ED6B52A
; ---------------------------------------------------------------------------

loc_6ED6B56A:				; CODE XREF: sub_6ED6A6E0+E40j
		lea	eax, [ebp+var_10]
		jmp	short loc_6ED6B52A
; ---------------------------------------------------------------------------

loc_6ED6B56F:				; CODE XREF: sub_6ED6A6E0+E3Aj
		lea	eax, [ebp+var_14]
		jmp	short loc_6ED6B52A
; ---------------------------------------------------------------------------

loc_6ED6B574:				; CODE XREF: sub_6ED6A6E0+E35j
		lea	eax, [ebp+var_18]
		jmp	short loc_6ED6B52A
; ---------------------------------------------------------------------------

loc_6ED6B579:				; CODE XREF: sub_6ED6A6E0+E30j
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_88], 0
		call	sub_6ED94560
		mov	eax, [ebp+var_C8]
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED6B5A6:				; CODE XREF: sub_6ED6A6E0+E20j
		lea	eax, [ebp+var_24]
		jmp	loc_6ED6B52A
; ---------------------------------------------------------------------------

loc_6ED6B5AE:				; CODE XREF: sub_6ED6A6E0+E15j
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_88], 0
		call	sub_6ED94560
		mov	edx, [ebp+var_C8]
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[esp], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED6B5DB:				; CODE XREF: sub_6ED6A6E0+E07j
		lea	eax, [ebp+var_30]
		jmp	loc_6ED6B52A
sub_6ED6A6E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED6B5F0	proc near		; CODE XREF: sub_6ED6A6E0+660p
					; sub_6ED6FDD0+21Dp
					; DATA XREF: ...

var_AD		= byte ptr -0ADh
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_8D		= byte ptr -8Dh
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= byte ptr -7Ch
var_78		= dword	ptr -78h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_48		= byte ptr -48h
var_30		= byte ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_A		= word ptr -0Ah
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_5C], eax
		lea	eax, [ebp+var_7C]
		mov	[ebp+var_64], offset sub_6ED997C0
		mov	[ebp+var_60], offset dword_6ED9A874
		mov	[ebp+var_58], offset sub_6ED6BEC0
		mov	[ebp+var_54], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+74h]
		test	edx, edx
		mov	[ebp+var_8C], edx
		jz	short loc_6ED6B63F
		mov	edx, [edx]
		mov	eax, [edx+8]
		test	eax, eax
		jnz	loc_6ED6B755

loc_6ED6B63F:				; CODE XREF: sub_6ED6B5F0+40j
		mov	[ebp+var_88], 0

loc_6ED6B649:				; CODE XREF: sub_6ED6B5F0+210j
					; sub_6ED6B5F0+262j
		mov	eax, [ebp+arg_0]
		mov	edx, eax
		mov	ecx, eax
		mov	[ebp+var_94], eax
		mov	eax, ds:_ZN7QString11shared_nullE
		add	edx, 44h
		add	ecx, 58h
		mov	[ebp+var_9C], edx
		mov	[ebp+var_A0], ecx
		mov	[ebp+var_80], eax
		mov	[ebp+var_84], eax

loc_6ED6B676:				; CODE XREF: sub_6ED6B5F0+115j
					; sub_6ED6B5F0+11Bj ...
		mov	eax, [ebp+var_88] ; jumptable 6ED6B70B default case
		add	eax, 1		; switch 14 cases
		cmp	eax, 0Dh
		ja	short loc_6ED6B6B4 ; jumptable 6ED6B684	default	case
		jmp	ds:off_6EDA0C40[eax*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6B690:				; CODE XREF: sub_6ED6B5F0+94j
					; DATA XREF: .rdata:off_6EDA0C40o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6B684 case 9
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED64010
		test	al, al
		jz	loc_6ED6B99B
		mov	[ebp+var_88], 0Ah

loc_6ED6B6B4:				; CODE XREF: sub_6ED6B5F0+92j
					; sub_6ED6B5F0+94j ...
		mov	edx, [ebp+arg_0] ; jumptable 6ED6B684 default case
		movzx	eax, word ptr [edx+98h]
		mov	edx, eax
		or	edx, 1
		cmp	dx, 0FFFFh
		jz	loc_6ED6BD94
		mov	[ebp+var_A], ax
		movzx	eax, ax
		test	eax, 0FF80h
		jnz	short loc_6ED6B712
		cmp	ds:byte_6EDA0FE0[eax], 0
		jnz	short loc_6ED6B732

loc_6ED6B6E4:				; CODE XREF: sub_6ED6B5F0+13Bj
					; sub_6ED6B5F0+140j
		mov	eax, 1

loc_6ED6B6E9:				; CODE XREF: sub_6ED6B5F0+155j
					; sub_6ED6B5F0+163j ...
		mov	ecx, [ebp+var_88]
		lea	edx, [ecx+ecx*4]
		lea	eax, [edx+eax]
		mov	eax, ds:dword_6EDA18A0[eax*4]
		cmp	eax, 0Ch	; switch 13 cases
		mov	[ebp+var_88], eax
		ja	loc_6ED6B676	; jumptable 6ED6B70B default case
		jmp	ds:off_6EDA0C78[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_6ED6B712:				; CODE XREF: sub_6ED6B5F0+E9j
		lea	edx, [ebp+var_A]
		mov	[esp], edx
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZNK5QChar8categoryEv
		lea	edx, [eax-0Fh]
		cmp	edx, 4
		jbe	short loc_6ED6B6E4
		cmp	eax, 5
		jz	short loc_6ED6B6E4

loc_6ED6B732:				; CODE XREF: sub_6ED6B5F0+F2j
		mov	ecx, [ebp+arg_0]
		mov	eax, 2
		movzx	edx, word ptr [ecx+98h]
		cmp	dx, 3Eh
		jz	short loc_6ED6B6E9
		cmp	dx, 9
		jnz	loc_6ED6B890

loc_6ED6B751:				; CODE XREF: sub_6ED6B5F0+2A4j
					; sub_6ED6B5F0+2B0j ...
		xor	eax, eax
		jmp	short loc_6ED6B6E9
; ---------------------------------------------------------------------------

loc_6ED6B755:				; CODE XREF: sub_6ED6B5F0+49j
		mov	ecx, [edx]
		cmp	ecx, 1
		jz	short loc_6ED6B787
		mov	edx, [edx+4]
		mov	[esp+4], eax
		mov	eax, [ebp+var_8C]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+8], edx
		mov	[esp], eax
		call	sub_6ED96400
		mov	ecx, [ebp+var_8C]
		mov	edx, [ecx]
		mov	eax, [edx+8]

loc_6ED6B787:				; CODE XREF: sub_6ED6B5F0+16Aj
		mov	ecx, [ebp+var_8C]
		sub	eax, 1
		mov	[ebp+var_98], eax
		lea	eax, [eax+eax*2]
		shl	eax, 2
		add	eax, [ecx]
		mov	eax, [eax+18h]
		mov	[ebp+var_88], eax
		mov	eax, [edx+4]
		cmp	[ebp+var_98], eax
		jg	loc_6ED6BC41
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_6ED6B7D0
		mov	edx, eax
		sar	edx, 1
		cmp	[ebp+var_98], edx
		jl	loc_6ED6BC41
		lea	esi, [esi+0]

loc_6ED6B7D0:				; CODE XREF: sub_6ED6B5F0+1CAj
					; sub_6ED6B5F0+67Fj
		mov	edx, [ebp+var_98]
		mov	ecx, [ebp+var_8C]
		mov	[esp+8], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+4], edx
		mov	[esp], ecx
		call	sub_6ED96400
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+74h]
		mov	edx, [eax]
		mov	edx, [edx+8]
		test	edx, edx
		jz	loc_6ED6B649
		mov	[esp], eax
		call	sub_6ED943D0
		mov	ecx, [eax+4]
		mov	[ebp+var_AC], ecx
		mov	eax, [eax]
		cmp	eax, offset sub_6ED60FB0
		mov	[ebp+var_A4], eax
		jz	loc_6ED6BDCC

loc_6ED6B82A:				; CODE XREF: sub_6ED6B5F0+7DEj
					; sub_6ED6B5F0+803j
		test	byte ptr [ebp+var_A4], 1
		jnz	loc_6ED6BD74
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_AC]

loc_6ED6B840:				; CODE XREF: sub_6ED6B5F0+79Fj
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	[ebp+var_A4]
		test	al, al
		jnz	loc_6ED6B649
		mov	edx, [ebp+var_88]
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED6B5F0
		mov	dword ptr [esp+8], 0
		mov	[esp+0Ch], edx
		mov	[esp], ecx
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED58610
		mov	[ebp+var_8D], 0
		jmp	short loc_6ED6B8C8
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6B890:				; CODE XREF: sub_6ED6B5F0+15Bj
		cmp	dx, 20h
		jz	loc_6ED6B751
		cmp	dx, 0Dh
		xchg	ax, ax
		jz	loc_6ED6B751
		cmp	dx, 0Ah
		jz	loc_6ED6B751
		xor	eax, eax
		cmp	dx, 2Fh
		setnz	al
		add	eax, 3
		jmp	loc_6ED6B6E9
; ---------------------------------------------------------------------------

loc_6ED6B8C1:				; CODE XREF: sub_6ED6B5F0+94j
					; DATA XREF: .rdata:off_6EDA0C40o
		mov	[ebp+var_8D], 1	; jumptable 6ED6B684 case 12

loc_6ED6B8C8:				; CODE XREF: sub_6ED6B5F0+29Bj
					; sub_6ED6B5F0+3B2j ...
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_8D]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6B8E0:				; CODE XREF: sub_6ED6B5F0+94j
					; DATA XREF: .rdata:off_6EDA0C40o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6B684 case 6
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED628B0
		test	al, al
		jnz	loc_6ED6B6B4	; jumptable 6ED6B684 default case
		jmp	loc_6ED6B99B
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6B900:				; CODE XREF: sub_6ED6B5F0+94j
					; DATA XREF: .rdata:off_6EDA0C40o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6B684 case 1
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED59250
		mov	edx, [ebp+var_94]
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_6ED95F90
		mov	ecx, [ebp+var_9C]
		mov	[esp], ecx
		call	_ZN14QXmlAttributes5clearEv
		mov	eax, [ebp+arg_0]
		cmp	byte ptr [eax+40h], 0
		jz	loc_6ED6B6B4	; jumptable 6ED6B684 default case
		mov	edx, [ebp+var_A0]
		mov	[esp], edx
		call	_ZN20QXmlNamespaceSupport11pushContextEv
		jmp	loc_6ED6B6B4	; jumptable 6ED6B684 default case
; ---------------------------------------------------------------------------

loc_6ED6B952:				; CODE XREF: sub_6ED6B5F0+94j
					; DATA XREF: .rdata:off_6EDA0C40o
		mov	dword ptr [esp+4], 0FFFFFFFFh ;	jumptable 6ED6B684 case	-1
		mov	dword ptr [esp], offset	aErrorOccurre_2	; "error occurred while	parsing	element"
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_78], 8
		mov	[esp], edx
		mov	[ebp+var_10], eax
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		call	sub_6ED60A80
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED6BC74

loc_6ED6B99B:				; CODE XREF: sub_6ED6B5F0+B4j
					; sub_6ED6B5F0+30Aj ...
		mov	[ebp+var_8D], 0
		jmp	loc_6ED6B8C8
; ---------------------------------------------------------------------------

loc_6ED6B9A7:				; CODE XREF: sub_6ED6B5F0+11Bj
					; DATA XREF: .rdata:off_6EDA0C78o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6B70B case 3
		mov	eax, [ecx+7Ch]
		test	eax, eax
		jz	loc_6ED6BADB	; jumptable 6ED6B70B case 5
		mov	eax, [ecx]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED6B9E6
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+4], eax
		mov	eax, [ebp+var_94]
		mov	[esp], eax
		call	sub_6ED960D0
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]

loc_6ED6B9E6:				; CODE XREF: sub_6ED6B5F0+3CCj
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED6BA10
		mov	edx, [eax+4]
		mov	ecx, [ebp+var_94]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_6ED960D0

loc_6ED6BA10:				; CODE XREF: sub_6ED6B5F0+3FBj
		mov	eax, [ebp+arg_0]
		mov	edx, [eax]
		mov	eax, [edx+8]
		lea	eax, [edx+eax*4+0Ch]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_A8], eax
		cmp	byte ptr [edx+40h], 0
		jz	loc_6ED6BC93
		mov	ecx, [ebp+var_80]
		mov	edx, [ebp+var_84]
		mov	[ebp+var_14], ecx
		lock inc dword ptr [edx]
		setnz	al
		mov	[ebp+var_18], ecx
		lock inc dword ptr [edx]
		setnz	al
		lea	eax, [ebp+var_14]
		mov	edx, [ebp+var_A0]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+var_A8]
		lea	ecx, [ebp+var_18]
		mov	[esp+10h], ecx
		mov	dword ptr [esp+8], 0
		mov	[esp], edx
		mov	[esp+4], eax
		mov	[ebp+var_78], 6
		call	_ZNK20QXmlNamespaceSupport11processNameERK7QStringbRS0_S3_
		mov	ecx, [ebp+arg_0]
		mov	eax, [ebp+var_9C]
		mov	edx, [ecx+7Ch]
		mov	ecx, [edx]
		mov	[esp+10h], eax
		mov	eax, [ebp+var_A8]
		mov	[esp], edx
		mov	[esp+0Ch], eax
		lea	eax, [ebp+var_18]
		mov	[esp+8], eax
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		call	dword ptr [ecx+1Ch]
		test	al, al
		jz	loc_6ED6BE4F
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_78], 7
		call	sub_6ED94560
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED94560

loc_6ED6BADB:				; CODE XREF: sub_6ED6B5F0+11Bj
					; sub_6ED6B5F0+3BFj ...
		mov	eax, [ebp+arg_0] ; jumptable 6ED6B70B case 5
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED5BC00
		jmp	loc_6ED6B676	; jumptable 6ED6B70B default case
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6BAF0:				; CODE XREF: sub_6ED6B5F0+11Bj
					; DATA XREF: .rdata:off_6EDA0C78o
		mov	edx, [ebp+arg_0] ; jumptable 6ED6B70B case 8
		mov	eax, [edx]
		mov	eax, [eax+8]
		test	eax, eax
		jz	loc_6ED6BDF8
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED630C0
		test	al, al
		jz	loc_6ED6B99B

loc_6ED6BB1A:				; CODE XREF: sub_6ED6B5F0+589j
		mov	eax, [ebp+arg_0]
		call	sub_6ED5BC00
		jmp	loc_6ED6B676	; jumptable 6ED6B70B default case
; ---------------------------------------------------------------------------

loc_6ED6BB27:				; CODE XREF: sub_6ED6B5F0+11Bj
					; DATA XREF: .rdata:off_6EDA0C78o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6B70B cases 9,10
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED68B40
		test	al, al
		jnz	loc_6ED6B676	; jumptable 6ED6B70B default case

loc_6ED6BB41:				; CODE XREF: sub_6ED6B5F0+64Cj
		mov	eax, [ebp+var_88]
		mov	[esp+0Ch], eax

loc_6ED6BB4B:				; CODE XREF: sub_6ED6B5F0+602j
					; sub_6ED6B5F0+62Dj
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED6B5F0
		mov	dword ptr [esp+8], 0
		mov	[esp], edx
		call	sub_6ED58610
		mov	[ebp+var_8D], 0
		jmp	loc_6ED6B8C8
; ---------------------------------------------------------------------------

loc_6ED6BB72:				; CODE XREF: sub_6ED6B5F0+11Bj
					; DATA XREF: .rdata:off_6EDA0C78o
		mov	[ebp+var_78], 0FFFFFFFFh ; jumptable 6ED6B70B case 12
		jmp	short loc_6ED6BB1A
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6BB80:				; CODE XREF: sub_6ED6B5F0+11Bj
					; DATA XREF: .rdata:off_6EDA0C78o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6B70B case 6
		mov	byte ptr [ecx+61h], 0
		mov	[esp], ecx
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED656F0
		test	al, al
		jnz	loc_6ED6B676	; jumptable 6ED6B70B default case
		mov	eax, [ebp+arg_0]
		mov	dword ptr [esp+0Ch], 6
		mov	dword ptr [esp+4], offset sub_6ED6B5F0
		mov	dword ptr [esp+8], 0
		mov	[esp], eax
		call	sub_6ED58610
		mov	[ebp+var_8D], 0
		jmp	loc_6ED6B8C8
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6BBD0:				; CODE XREF: sub_6ED6B5F0+11Bj
					; DATA XREF: .rdata:off_6EDA0C78o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6B70B case 4
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED6A6E0
		test	al, al
		jnz	loc_6ED6B676	; jumptable 6ED6B70B default case
		mov	dword ptr [esp+0Ch], 4
		jmp	loc_6ED6BB4B
; ---------------------------------------------------------------------------

loc_6ED6BBF7:				; CODE XREF: sub_6ED6B5F0+11Bj
					; DATA XREF: .rdata:off_6EDA0C78o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6B70B case 1
		mov	byte ptr [eax+61h], 0
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED656F0
		test	al, al
		jnz	loc_6ED6B676	; jumptable 6ED6B70B default case
		mov	dword ptr [esp+0Ch], 1
		jmp	loc_6ED6BB4B
; ---------------------------------------------------------------------------

loc_6ED6BC22:				; CODE XREF: sub_6ED6B5F0+11Bj
					; DATA XREF: .rdata:off_6EDA0C78o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6B70B cases 2,7,11
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED60FB0
		test	al, al
		jnz	loc_6ED6B676	; jumptable 6ED6B70B default case
		jmp	loc_6ED6BB41
; ---------------------------------------------------------------------------

loc_6ED6BC41:				; CODE XREF: sub_6ED6B5F0+1C0j
					; sub_6ED6B5F0+1D6j
		mov	eax, [ebp+var_98]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0Ch
		mov	dword ptr [esp], 1Ch
		mov	[esp+4], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZN11QVectorData4growEiiib
		jmp	loc_6ED6B7D0
; ---------------------------------------------------------------------------

loc_6ED6BC74:				; CODE XREF: sub_6ED6B5F0+3A5j
		mov	eax, [ebp+var_10]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_8D], 0
		jmp	loc_6ED6B8C8
; ---------------------------------------------------------------------------

loc_6ED6BC93:				; CODE XREF: sub_6ED6B5F0+439j
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+var_80]
		mov	eax, [ecx+7Ch]
		mov	[ebp+var_24], edx
		mov	ecx, [ebp+var_84]
		mov	eax, [eax]
		mov	eax, [eax+1Ch]
		lock inc dword ptr [ecx]
		setnz	dl
		mov	edx, [ebp+var_80]
		mov	[ebp+var_20], edx
		lock inc dword ptr [ecx]
		setnz	dl
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+7Ch]
		mov	ecx, [ebp+var_9C]
		mov	[ebp+var_78], 3
		mov	[esp], edx
		mov	[esp+10h], ecx
		mov	ecx, [ebp+var_A8]
		mov	[esp+0Ch], ecx
		lea	ecx, [ebp+var_24]
		mov	[esp+8], ecx
		lea	ecx, [ebp+var_20]
		mov	[esp+4], ecx
		call	eax
		mov	[ebp+var_AD], al
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_78], 4
		call	sub_6ED94560
		lea	ecx, [ebp+var_24]
		mov	[esp], ecx
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED94560
		cmp	[ebp+var_AD], 0
		jnz	loc_6ED6BADB	; jumptable 6ED6B70B case 5
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_28]
		mov	eax, [edx+7Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx+34h]
		lea	eax, [ebp+var_28]
		mov	[ebp+var_78], 2
		push	edx
		mov	edx, [ebp+arg_0]
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_6ED60A80
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_8D], 0
		jmp	loc_6ED6B8C8
; ---------------------------------------------------------------------------

loc_6ED6BD74:				; CODE XREF: sub_6ED6B5F0+241j
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_AC]
		mov	ecx, [ebp+var_A4]
		mov	edx, [eax]
		mov	edx, [edx+ecx-1]
		mov	[ebp+var_A4], edx
		jmp	loc_6ED6B840
; ---------------------------------------------------------------------------

loc_6ED6BD94:				; CODE XREF: sub_6ED6B5F0+D7j
		mov	ecx, [ebp+var_88]
		mov	eax, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED6B5F0
		mov	dword ptr [esp+8], 0
		mov	[esp+0Ch], ecx
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED60E40
		mov	[ebp+var_8D], 0
		jmp	loc_6ED6B8C8
; ---------------------------------------------------------------------------

loc_6ED6BDCC:				; CODE XREF: sub_6ED6B5F0+234j
		test	ecx, ecx
		jnz	loc_6ED6B82A
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_48]
		mov	edx, [ecx+74h]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_6ED94310
		sub	esp, 4
		jmp	loc_6ED6B82A
; ---------------------------------------------------------------------------

loc_6ED6BDF8:				; CODE XREF: sub_6ED6B5F0+50Aj
		lea	eax, [ebp+var_2C]
		lea	ecx, [ebp+var_30]
		mov	[esp+4], eax
		mov	[ebp+var_2C], offset aTagMismatch ; "tag mismatch"
		mov	[esp], ecx
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED94530
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_30]
		mov	[esp+4], eax
		mov	[ebp+var_78], 1
		mov	[esp], edx
		call	sub_6ED60A80
		lea	eax, [ebp+var_30]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_8D], 0
		jmp	loc_6ED6B8C8
; ---------------------------------------------------------------------------

loc_6ED6BE4F:				; CODE XREF: sub_6ED6B5F0+4C1j
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_1C]
		mov	eax, [edx+7Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx+34h]
		push	ecx
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_1C]
		mov	[esp+4], eax
		mov	[ebp+var_78], 5
		mov	[esp], ecx
		call	sub_6ED60A80
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_78], 6
		call	sub_6ED94560
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_78], 7
		call	sub_6ED94560
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_8D], 0
		jmp	loc_6ED6B8C8
sub_6ED6B5F0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED6BEC0	proc near		; DATA XREF: sub_6ED6B5F0+20o
		add	ebp, 8
		mov	eax, [ebp-78h]
		mov	ecx, [ebp-74h]
		cmp	eax, 1
		mov	[ebp-0B4h], ecx
		jz	short loc_6ED6BF23
		cmp	eax, 2
		jz	loc_6ED6BF9A
		cmp	eax, 3
		jz	loc_6ED6BFAC
		cmp	eax, 4
		jz	short loc_6ED6BF4F
		cmp	eax, 5
		xchg	ax, ax
		jz	short loc_6ED6BF61
		cmp	eax, 6
		jz	short loc_6ED6BF73
		cmp	eax, 7
		jz	short loc_6ED6BF4A
		lea	eax, [ebp-30h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560
		mov	eax, [ebp-0B4h]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED6BF23:				; CODE XREF: sub_6ED6BEC0+12j
		lea	eax, [ebp-28h]

loc_6ED6BF26:				; CODE XREF: sub_6ED6BEC0+8Dj
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-0B4h]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED6BF4A:				; CODE XREF: sub_6ED6BEC0+3Aj
		lea	eax, [ebp-10h]
		jmp	short loc_6ED6BF26
; ---------------------------------------------------------------------------

loc_6ED6BF4F:				; CODE XREF: sub_6ED6BEC0+29j
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560

loc_6ED6BF61:				; CODE XREF: sub_6ED6BEC0+30j
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560

loc_6ED6BF73:				; CODE XREF: sub_6ED6BEC0+35j
		lea	eax, [ebp-14h]

loc_6ED6BF76:				; CODE XREF: sub_6ED6BEC0+EFj
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560
		mov	edx, [ebp-0B4h]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED6BF9A:				; CODE XREF: sub_6ED6BEC0+17j
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560

loc_6ED6BFAC:				; CODE XREF: sub_6ED6BEC0+20j
		lea	eax, [ebp-24h]
		jmp	short loc_6ED6BF76
sub_6ED6BEC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED6BFC0	proc near		; CODE XREF: sub_6ED6E1C0+44Fp
					; DATA XREF: sub_6ED6BFC0+27Co	...

var_B0		= dword	ptr -0B0h
var_A9		= byte ptr -0A9h
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_89		= byte ptr -89h
var_88		= dword	ptr -88h
var_81		= byte ptr -81h
var_80		= dword	ptr -80h
var_7C		= byte ptr -7Ch
var_78		= dword	ptr -78h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_48		= byte ptr -48h
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= byte ptr -24h
var_20		= byte ptr -20h
var_1C		= byte ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_5C], eax
		lea	eax, [ebp+var_7C]
		mov	[ebp+var_64], offset sub_6ED997C0
		mov	[ebp+var_60], offset dword_6ED9A888
		mov	[ebp+var_58], offset sub_6ED6C915
		mov	[ebp+var_54], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+74h]
		test	edx, edx
		mov	[ebp+var_88], edx
		jz	short loc_6ED6C00F
		mov	eax, [edx]
		mov	edx, [eax+8]
		test	edx, edx
		jnz	loc_6ED6C130

loc_6ED6C00F:				; CODE XREF: sub_6ED6BFC0+40j
		mov	[ebp+var_81], 0

loc_6ED6C016:				; CODE XREF: sub_6ED6BFC0+21Aj
					; sub_6ED6BFC0+26Cj
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_0]
		add	eax, 38h
		mov	[ebp+var_98], eax
		mov	eax, ds:_ZN7QStringaSERKS_
		add	edx, 3Ch
		add	ecx, 70h
		mov	[ebp+var_94], edx
		mov	[ebp+var_A0], ecx
		mov	[ebp+var_9C], eax

loc_6ED6C045:				; CODE XREF: sub_6ED6BFC0+E4j
					; sub_6ED6BFC0+E9j ...
		cmp	[ebp+var_81], 3	; jumptable 6ED6C0A9 default case
		jz	loc_6ED6C290

loc_6ED6C052:				; CODE XREF: sub_6ED6BFC0+2C6j
		jg	loc_6ED6C0F8
		cmp	[ebp+var_81], 0FFh
		jz	loc_6ED6C2F0

loc_6ED6C065:				; CODE XREF: sub_6ED6BFC0+14Cj
					; sub_6ED6BFC0+2F5j ...
		mov	ecx, [ebp+arg_0]
		movzx	eax, word ptr [ecx+98h]
		mov	edx, eax
		or	edx, 1
		cmp	dx, 0FFFFh
		jz	loc_6ED6C863
		cmp	ax, 9
		jz	short loc_6ED6C08A
		cmp	ax, 20h
		jnz	short loc_6ED6C0B0

loc_6ED6C08A:				; CODE XREF: sub_6ED6BFC0+C2j
					; sub_6ED6BFC0+F4j ...
		xor	edx, edx

loc_6ED6C08C:				; CODE XREF: sub_6ED6BFC0+105j
					; sub_6ED6BFC0+110j ...
		movsx	eax, [ebp+var_81]
		movzx	edx, ds:byte_6EDA14C0[edx+eax*8]
		cmp	dl, 0Fh		; switch 16 cases
		mov	[ebp+var_81], dl
		ja	short loc_6ED6C045 ; jumptable 6ED6C0A9	default	case
		movzx	eax, dl
		jmp	ds:off_6EDA0CCC[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_6ED6C0B0:				; CODE XREF: sub_6ED6BFC0+C8j
		cmp	ax, 0Dh
		jz	short loc_6ED6C08A
		cmp	ax, 0Ah
		jz	short loc_6ED6C08A
		cmp	ax, 3Eh
		mov	edx, 1
		jz	short loc_6ED6C08C
		cmp	ax, 23h
		mov	edx, 2
		jz	short loc_6ED6C08C
		cmp	ax, 41h
		mov	dl, 3
		jz	short loc_6ED6C08C
		cmp	ax, 49h
		mov	dl, 4
		jz	short loc_6ED6C08C
		cmp	ax, 46h
		mov	dl, 5
		jz	short loc_6ED6C08C
		xor	edx, edx
		cmp	ax, 52h
		setnz	dl
		add	edx, 6
		jmp	short loc_6ED6C08C
; ---------------------------------------------------------------------------

loc_6ED6C0F8:				; CODE XREF: sub_6ED6BFC0:loc_6ED6C052j
		cmp	[ebp+var_81], 5
		jz	loc_6ED6C2C0
		cmp	[ebp+var_81], 0Fh
		jnz	loc_6ED6C065
		mov	[ebp+var_89], 1

loc_6ED6C119:				; CODE XREF: sub_6ED6BFC0+2A6j
					; sub_6ED6BFC0+37Aj ...
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_89]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6C130:				; CODE XREF: sub_6ED6BFC0+49j
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_6ED6C157
		mov	eax, [eax+4]
		mov	ecx, [ebp+var_88]
		mov	[esp+4], edx
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	[esp], ecx
		call	sub_6ED96400

loc_6ED6C157:				; CODE XREF: sub_6ED6BFC0+175j
		mov	eax, [ebp+var_88]
		mov	edx, [eax]
		mov	eax, [edx+8]
		sub	eax, 1
		mov	[ebp+var_90], eax
		lea	eax, [eax+eax*2]
		mov	eax, [edx+eax*4+18h]
		mov	[ebp+var_80], eax
		mov	eax, [edx+4]
		cmp	[ebp+var_90], eax
		jg	loc_6ED6C810
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_6ED6C1A0
		mov	edx, eax
		sar	edx, 1
		cmp	[ebp+var_90], edx
		jl	loc_6ED6C810
		lea	esi, [esi+0]

loc_6ED6C1A0:				; CODE XREF: sub_6ED6BFC0+1C8j
					; sub_6ED6BFC0+87Ej
		mov	ecx, [ebp+var_90]
		mov	[esp+8], eax
		mov	eax, [ebp+var_88]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+4], ecx
		mov	[esp], eax
		call	sub_6ED96400
		mov	ecx, [ebp+arg_0]
		movzx	edx, byte ptr [ebp+var_80]
		mov	eax, [ecx+74h]
		mov	[ebp+var_81], dl
		mov	edx, [eax]
		mov	edx, [edx+8]
		test	edx, edx
		jz	loc_6ED6C016
		mov	[esp], eax
		call	sub_6ED943D0
		mov	edx, [eax+4]
		mov	[ebp+var_A8], edx
		mov	eax, [eax]
		cmp	eax, offset sub_6ED60FB0
		mov	[ebp+var_A4], eax
		jz	loc_6ED6C899

loc_6ED6C204:				; CODE XREF: sub_6ED6BFC0+8DBj
					; sub_6ED6BFC0+900j
		test	byte ptr [ebp+var_A4], 1
		jnz	loc_6ED6C843
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_A8]

loc_6ED6C21A:				; CODE XREF: sub_6ED6BFC0+89Ej
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	[ebp+var_A4]
		test	al, al
		jnz	loc_6ED6C016
		movsx	eax, [ebp+var_81]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED6BFC0
		mov	dword ptr [esp+8], 0
		mov	[esp+0Ch], eax
		mov	[esp], edx
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED58610
		mov	[ebp+var_89], 0
		jmp	loc_6ED6C119
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6C270:				; CODE XREF: sub_6ED6BFC0+E9j
					; DATA XREF: .rdata:off_6EDA0CCCo
		mov	eax, [ebp+arg_0] ; jumptable 6ED6C0A9 cases 9,15
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED5BC00
		cmp	[ebp+var_81], 3
		jnz	loc_6ED6C052
		lea	esi, [esi+0]

loc_6ED6C290:				; CODE XREF: sub_6ED6BFC0+8Cj
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED59250
		mov	[esp+4], eax
		mov	eax, [ebp+var_98]
		mov	[esp], eax
		call	[ebp+var_9C]
		jmp	loc_6ED6C065
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6C2C0:				; CODE XREF: sub_6ED6BFC0+13Fj
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED59250
		mov	ecx, [ebp+var_94]
		mov	[esp], ecx
		mov	[esp+4], eax
		call	ds:_ZN7QStringaSERKS_
		jmp	loc_6ED6C065
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6C2F0:				; CODE XREF: sub_6ED6BFC0+9Fj
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aLetterIsExpect	; "letter is expected"
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_78], 9
		mov	[ebp+var_C], eax
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED60A80
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		mov	[ebp+var_89], 0
		jnz	loc_6ED6C119
		mov	eax, [ebp+var_C]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_89], 0
		jmp	loc_6ED6C119
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6C360:				; CODE XREF: sub_6ED6BFC0+E9j
					; DATA XREF: .rdata:off_6EDA0CCCo
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6C0A9 case 14
		mov	eax, [ecx+90h]
		test	eax, eax
		jz	loc_6ED6C467
		mov	eax, [eax]
		lea	edx, [ebp+var_24]
		mov	[ebp+var_18], offset byte_6EDA044B
		mov	eax, [eax+8]
		mov	[esp], edx
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[ebp+var_B0], eax
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		call	sub_6ED94530
		lea	ecx, [ebp+var_14]
		lea	eax, [ebp+var_20]
		mov	[ebp+var_14], offset byte_6EDA044B
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	[ebp+var_78], 8
		call	sub_6ED94530
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		lea	eax, [ebp+var_1C]
		mov	[ebp+var_10], offset byte_6EDA044B
		mov	[esp], eax
		mov	[ebp+var_78], 7
		call	sub_6ED94530
		mov	eax, [ebp+arg_0]
		lea	ecx, [ebp+var_24]
		mov	edx, [eax+90h]
		lea	eax, [ebp+var_20]
		mov	[esp+10h], eax
		lea	eax, [ebp+var_1C]
		mov	[esp+14h], ecx
		mov	ecx, [ebp+var_98]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+var_94]
		mov	[esp], edx
		mov	[ebp+var_78], 6
		mov	[esp+4], ecx
		mov	[esp+8], eax
		call	[ebp+var_B0]
		mov	[ebp+var_A9], al
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_78], 7
		call	sub_6ED94560
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_78], 8
		call	sub_6ED94560
		lea	edx, [ebp+var_24]
		mov	[esp], edx
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED94560
		cmp	[ebp+var_A9], 0
		jz	loc_6ED6C8C5

loc_6ED6C467:				; CODE XREF: sub_6ED6BFC0+3ABj
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED60FB0
		test	al, al
		jnz	loc_6ED6C045	; jumptable 6ED6C0A9 default case
		mov	dword ptr [esp+0Ch], 0Eh
		jmp	loc_6ED6C67D
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6C490:				; CODE XREF: sub_6ED6BFC0+E9j
					; DATA XREF: .rdata:off_6EDA0CCCo
		lea	eax, [ebp+var_2C] ; jumptable 6ED6C0A9 case 1
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aAttlist ; "ATTLIST"
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZN7QString10fromLatin1EPKci
		mov	ecx, [ebp+var_A0]
		lea	edx, [ebp+var_2C]
		mov	[ebp+var_78], 4
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], ecx
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_2C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED6C4F3
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED6C4F3:				; CODE XREF: sub_6ED6BFC0+51Ej
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED64390
		test	al, al
		jnz	loc_6ED6C045	; jumptable 6ED6C0A9 default case
		mov	dword ptr [esp+0Ch], 1
		jmp	loc_6ED6C67D
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6C520:				; CODE XREF: sub_6ED6BFC0+E9j
					; DATA XREF: .rdata:off_6EDA0CCCo
		mov	eax, [ebp+arg_0] ; jumptable 6ED6C0A9 cases 2,4,6,8
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED60FB0
		test	al, al
		jnz	loc_6ED6C045	; jumptable 6ED6C0A9 default case
		movsx	eax, [ebp+var_81]
		mov	[esp+0Ch], eax
		jmp	loc_6ED6C755
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6C550:				; CODE XREF: sub_6ED6BFC0+E9j
					; DATA XREF: .rdata:off_6EDA0CCCo
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6C0A9 case 3
		mov	byte ptr [ecx+61h], 0
		mov	[esp], ecx
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED656F0
		test	al, al
		jnz	loc_6ED6C045	; jumptable 6ED6C0A9 default case
		mov	eax, [ebp+arg_0]
		mov	dword ptr [esp+0Ch], 3
		mov	dword ptr [esp+4], offset sub_6ED6BFC0
		mov	dword ptr [esp+8], 0
		mov	[esp], eax
		call	sub_6ED58610
		mov	[ebp+var_89], 0
		jmp	loc_6ED6C119
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6C5A0:				; CODE XREF: sub_6ED6BFC0+E9j
					; DATA XREF: .rdata:off_6EDA0CCCo
		lea	ecx, [ebp+var_30] ; jumptable 6ED6C0A9 case 10
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aRequired ; "REQUIRED"
		mov	[esp], ecx
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZN7QString10fromLatin1EPKci
		mov	edx, [ebp+var_A0]
		lea	eax, [ebp+var_30]
		mov	[ebp+var_78], 3
		sub	esp, 4
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_30]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED6C603
		mov	eax, [ebp+var_30]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED6C603:				; CODE XREF: sub_6ED6BFC0+62Ej
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED64390
		test	al, al
		jnz	loc_6ED6C045	; jumptable 6ED6C0A9 default case
		mov	dword ptr [esp+0Ch], 0Ah
		jmp	loc_6ED6C755
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6C630:				; CODE XREF: sub_6ED6BFC0+E9j
					; DATA XREF: .rdata:off_6EDA0CCCo
		mov	eax, [ebp+arg_0] ; jumptable 6ED6C0A9 case 13
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED68760
		test	al, al
		jnz	loc_6ED6C045	; jumptable 6ED6C0A9 default case
		mov	dword ptr [esp+0Ch], 0Dh
		jmp	loc_6ED6C755
; ---------------------------------------------------------------------------

loc_6ED6C657:				; CODE XREF: sub_6ED6BFC0+E9j
					; DATA XREF: .rdata:off_6EDA0CCCo
		mov	edx, [ebp+arg_0] ; jumptable 6ED6C0A9 case 5
		mov	byte ptr [edx+61h], 0
		mov	[esp], edx
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED656F0
		test	al, al
		jnz	loc_6ED6C045	; jumptable 6ED6C0A9 default case
		mov	dword ptr [esp+0Ch], 5

loc_6ED6C67D:				; CODE XREF: sub_6ED6BFC0+4C9j
					; sub_6ED6BFC0+555j ...
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED6BFC0
		mov	dword ptr [esp+8], 0
		mov	[esp], ecx
		call	sub_6ED58610
		mov	[ebp+var_89], 0
		jmp	loc_6ED6C119
; ---------------------------------------------------------------------------

loc_6ED6C6A4:				; CODE XREF: sub_6ED6BFC0+E9j
					; DATA XREF: .rdata:off_6EDA0CCCo
		mov	eax, [ebp+arg_0] ; jumptable 6ED6C0A9 case 7
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED666D0
		test	al, al
		jnz	loc_6ED6C045	; jumptable 6ED6C0A9 default case
		mov	dword ptr [esp+0Ch], 7
		jmp	loc_6ED6C755
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6C6D0:				; CODE XREF: sub_6ED6BFC0+E9j
					; DATA XREF: .rdata:off_6EDA0CCCo
		lea	ecx, [ebp+var_34] ; jumptable 6ED6C0A9 case 11
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aImplied ; "IMPLIED"
		mov	[esp], ecx
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZN7QString10fromLatin1EPKci
		mov	edx, [ebp+var_A0]
		lea	eax, [ebp+var_34]
		mov	[ebp+var_78], 2
		sub	esp, 4
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_34]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED6C733
		mov	eax, [ebp+var_34]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED6C733:				; CODE XREF: sub_6ED6BFC0+75Ej
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED64390
		test	al, al
		jnz	loc_6ED6C045	; jumptable 6ED6C0A9 default case
		mov	dword ptr [esp+0Ch], 0Bh

loc_6ED6C755:				; CODE XREF: sub_6ED6BFC0+585j
					; sub_6ED6BFC0+665j ...
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED6BFC0
		mov	dword ptr [esp+8], 0
		mov	[esp], edx
		call	sub_6ED58610
		mov	[ebp+var_89], 0
		jmp	loc_6ED6C119
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6C780:				; CODE XREF: sub_6ED6BFC0+E9j
					; DATA XREF: .rdata:off_6EDA0CCCo
		lea	ecx, [ebp+var_38] ; jumptable 6ED6C0A9 case 12
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aFixed ; "FIXED"
		mov	[esp], ecx
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZN7QString10fromLatin1EPKci
		mov	edx, [ebp+var_A0]
		lea	eax, [ebp+var_38]
		mov	[ebp+var_78], 1
		sub	esp, 4
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_38]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED6C7E3
		mov	eax, [ebp+var_38]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED6C7E3:				; CODE XREF: sub_6ED6BFC0+80Ej
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED64390
		test	al, al
		jnz	loc_6ED6C045	; jumptable 6ED6C0A9 default case
		mov	dword ptr [esp+0Ch], 0Ch
		jmp	loc_6ED6C67D
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6C810:				; CODE XREF: sub_6ED6BFC0+1BEj
					; sub_6ED6BFC0+1D4j
		mov	edx, [ebp+var_90]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0Ch
		mov	dword ptr [esp], 1Ch
		mov	[esp+4], edx
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZN11QVectorData4growEiiib
		jmp	loc_6ED6C1A0
; ---------------------------------------------------------------------------

loc_6ED6C843:				; CODE XREF: sub_6ED6BFC0+24Bj
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_A8]
		mov	ecx, [ebp+var_A4]
		mov	edx, [eax]
		mov	edx, [edx+ecx-1]
		mov	[ebp+var_A4], edx
		jmp	loc_6ED6C21A
; ---------------------------------------------------------------------------

loc_6ED6C863:				; CODE XREF: sub_6ED6BFC0+B8j
		movsx	eax, [ebp+var_81]
		mov	dword ptr [esp+4], offset sub_6ED6BFC0
		mov	dword ptr [esp+8], 0
		mov	[esp], ecx
		mov	[esp+0Ch], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED60E40
		mov	[ebp+var_89], 0
		jmp	loc_6ED6C119
; ---------------------------------------------------------------------------

loc_6ED6C899:				; CODE XREF: sub_6ED6BFC0+23Ej
		test	edx, edx
		jnz	loc_6ED6C204
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_48]
		mov	edx, [ecx+74h]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_6ED94310
		sub	esp, 4
		jmp	loc_6ED6C204
; ---------------------------------------------------------------------------

loc_6ED6C8C5:				; CODE XREF: sub_6ED6BFC0+4A1j
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+90h]
		mov	edx, [eax]
		mov	[esp+4], eax
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		call	dword ptr [edx+14h]
		lea	edx, [ebp+var_28]
		mov	[ebp+var_78], 5
		push	ecx
		mov	ecx, [ebp+arg_0]
		mov	[esp+4], edx
		mov	[esp], ecx
		call	sub_6ED60A80
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_89], 0
		jmp	loc_6ED6C119
sub_6ED6BFC0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED6C915	proc near		; DATA XREF: sub_6ED6BFC0+20o
		add	ebp, 8
		mov	eax, [ebp-78h]
		mov	ecx, [ebp-74h]
		cmp	eax, 1
		mov	[ebp-0B4h], ecx
		jz	short loc_6ED6C992
		cmp	eax, 2
		jz	loc_6ED6CA1C
		cmp	eax, 3
		jz	loc_6ED6CA14
		cmp	eax, 4
		xchg	ax, ax
		jz	loc_6ED6CA0C
		cmp	eax, 5
		jz	loc_6ED6C9E0
		cmp	eax, 6
		jz	loc_6ED6C9F2
		cmp	eax, 7
		nop
		lea	esi, [esi+0]
		jz	loc_6ED6CA04
		cmp	eax, 8
		jz	short loc_6ED6C9B9
		lea	eax, [ebp-38h]

loc_6ED6C96E:				; CODE XREF: sub_6ED6C915+F2j
					; sub_6ED6C915+FAj ...
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560
		mov	eax, [ebp-0B4h]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED6C992:				; CODE XREF: sub_6ED6C915+12j
		lea	eax, [ebp-34h]

loc_6ED6C995:				; CODE XREF: sub_6ED6C915+10Bj
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-0B4h]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED6C9B9:				; CODE XREF: sub_6ED6C915+54j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560
		mov	edx, [ebp-0B4h]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED6C9E0:				; CODE XREF: sub_6ED6C915+34j
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560

loc_6ED6C9F2:				; CODE XREF: sub_6ED6C915+3Dj
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560

loc_6ED6CA04:				; CODE XREF: sub_6ED6C915+4Bj
		lea	eax, [ebp-24h]
		jmp	loc_6ED6C96E
; ---------------------------------------------------------------------------

loc_6ED6CA0C:				; CODE XREF: sub_6ED6C915+2Bj
		lea	eax, [ebp-28h]
		jmp	loc_6ED6C96E
; ---------------------------------------------------------------------------

loc_6ED6CA14:				; CODE XREF: sub_6ED6C915+20j
		lea	eax, [ebp-2Ch]
		jmp	loc_6ED6C96E
; ---------------------------------------------------------------------------

loc_6ED6CA1C:				; CODE XREF: sub_6ED6C915+17j
		lea	eax, [ebp-30h]
		nop
		jmp	loc_6ED6C995
sub_6ED6C915	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED6CA30	proc near		; CODE XREF: sub_6ED6E1C0+50Dp
					; DATA XREF: sub_6ED6CA30+2E6o	...

var_1A8		= dword	ptr -1A8h
var_1A4		= dword	ptr -1A4h
var_1A0		= dword	ptr -1A0h
var_199		= byte ptr -199h
var_198		= dword	ptr -198h
var_191		= byte ptr -191h
var_190		= dword	ptr -190h
var_18C		= dword	ptr -18Ch
var_188		= dword	ptr -188h
var_180		= dword	ptr -180h
var_17C		= dword	ptr -17Ch
var_178		= dword	ptr -178h
var_174		= dword	ptr -174h
var_170		= dword	ptr -170h
var_16C		= dword	ptr -16Ch
var_168		= dword	ptr -168h
var_164		= dword	ptr -164h
var_160		= dword	ptr -160h
var_15C		= dword	ptr -15Ch
var_158		= dword	ptr -158h
var_154		= dword	ptr -154h
var_150		= dword	ptr -150h
var_14C		= dword	ptr -14Ch
var_148		= dword	ptr -148h
var_144		= dword	ptr -144h
var_140		= dword	ptr -140h
var_13C		= dword	ptr -13Ch
var_138		= dword	ptr -138h
var_134		= dword	ptr -134h
var_130		= dword	ptr -130h
var_12C		= dword	ptr -12Ch
var_128		= dword	ptr -128h
var_121		= byte ptr -121h
var_120		= dword	ptr -120h
var_11C		= dword	ptr -11Ch
var_118		= dword	ptr -118h
var_114		= dword	ptr -114h
var_10D		= byte ptr -10Dh
var_10C		= dword	ptr -10Ch
var_108		= dword	ptr -108h
var_104		= dword	ptr -104h
var_100		= dword	ptr -100h
var_FC		= dword	ptr -0FCh
var_F8		= dword	ptr -0F8h
var_F4		= dword	ptr -0F4h
var_F0		= dword	ptr -0F0h
var_EC		= byte ptr -0ECh
var_E8		= dword	ptr -0E8h
var_D4		= dword	ptr -0D4h
var_D0		= dword	ptr -0D0h
var_CC		= dword	ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_B8		= byte ptr -0B8h
var_9C		= dword	ptr -9Ch
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= byte ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= byte ptr -24h
var_20		= byte ptr -20h
var_1C		= byte ptr -1Ch
var_18		= byte ptr -18h
var_14		= byte ptr -14h
var_10		= dword	ptr -10h
var_A		= byte ptr -0Ah
var_9		= byte ptr -9
var_8		= byte ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 1C4h
		mov	[ebp+var_CC], eax
		lea	eax, [ebp+var_EC]
		mov	[ebp+var_D4], offset sub_6ED997C0
		mov	[ebp+var_D0], offset word_6ED9A89E
		mov	[ebp+var_C8], offset sub_6ED6DF85
		mov	[ebp+var_C4], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+74h]
		test	edx, edx
		mov	[ebp+var_114], edx
		jz	short loc_6ED6CA92
		mov	edx, [edx]
		mov	eax, [edx+8]
		test	eax, eax
		jnz	loc_6ED6CC00

loc_6ED6CA92:				; CODE XREF: sub_6ED6CA30+53j
		mov	[ebp+var_10D], 0

loc_6ED6CA99:				; CODE XREF: sub_6ED6CA30+284j
					; sub_6ED6CA30+2D9j
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_0]
		mov	ebx, [ebp+arg_0]
		mov	eax, ds:_ZN7QString11shared_nullE
		add	edx, 10h
		add	ecx, 0Ch
		add	ebx, 2Ch
		mov	[ebp+var_F0], eax
		mov	[ebp+var_F4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_154], edx
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_120], ecx
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_148], ebx
		mov	ebx, [ebp+arg_0]
		add	eax, 28h
		add	edx, 8
		add	ecx, 4
		add	ebx, 70h
		mov	[ebp+var_144], eax
		mov	[ebp+var_150], edx
		mov	[ebp+var_158], ecx
		mov	[ebp+var_14C], ebx

loc_6ED6CAFE:				; CODE XREF: sub_6ED6CA30+121j
					; sub_6ED6CA30+126j ...
		movzx	eax, [ebp+var_10D] ; jumptable 6ED6CB56	default	case
		add	eax, 1
		cmp	al, 18h		; switch 25 cases
		jbe	loc_6ED6CBA4

loc_6ED6CB10:				; CODE XREF: sub_6ED6CA30+177j
					; DATA XREF: .rdata:off_6EDA0D78o
		movsx	edx, [ebp+var_10D] ; jumptable 6ED6CBA7	default	case

loc_6ED6CB17:				; CODE XREF: sub_6ED6CA30+351j
					; sub_6ED6CA30+384j ...
		mov	ecx, [ebp+arg_0]
		movzx	eax, word ptr [ecx+98h]
		mov	ecx, eax
		or	ecx, 1
		cmp	cx, 0FFFFh
		jz	loc_6ED6DE93
		cmp	ax, 9
		jz	short loc_6ED6CB3C
		cmp	ax, 20h
		jnz	short loc_6ED6CB60

loc_6ED6CB3C:				; CODE XREF: sub_6ED6CA30+104j
					; sub_6ED6CA30+134j ...
		xor	ecx, ecx

loc_6ED6CB3E:				; CODE XREF: sub_6ED6CA30+145j
					; sub_6ED6CA30+164j ...
		lea	eax, [edx+edx*2]
		movzx	eax, ds:byte_6EDA1160[ecx+eax*2]
		cmp	al, 17h		; switch 24 cases
		mov	[ebp+var_10D], al
		ja	short loc_6ED6CAFE ; jumptable 6ED6CB56	default	case
		movzx	eax, al
		jmp	ds:off_6EDA0D18[eax*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6CB60:				; CODE XREF: sub_6ED6CA30+10Aj
		cmp	ax, 0Dh
		jz	short loc_6ED6CB3C
		cmp	ax, 0Ah
		jz	short loc_6ED6CB3C
		cmp	ax, 25h
		mov	ecx, 1
		jz	short loc_6ED6CB3E
		cmp	ax, 22h
		jz	loc_6ED6CFB0
		cmp	ax, 27h
		jz	loc_6ED6CFB0
		cmp	ax, 3Eh
		mov	ecx, 3
		jz	short loc_6ED6CB3E
		xor	ecx, ecx
		cmp	ax, 4Eh
		setnz	cl
		add	ecx, 4
		jmp	short loc_6ED6CB3E
; ---------------------------------------------------------------------------

loc_6ED6CBA4:				; CODE XREF: sub_6ED6CA30+DAj
		movzx	eax, al
		jmp	ds:off_6EDA0D78[eax*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6CBB0:				; CODE XREF: sub_6ED6CA30+177j
					; DATA XREF: .rdata:off_6EDA0D78o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6CBA7 case 24
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED59250
		mov	ebx, [ebp+arg_0]
		mov	[esp], ebx
		mov	[esp+4], eax
		call	sub_6ED58FC0
		test	al, al
		jz	loc_6ED6CFBA

loc_6ED6CBDC:				; CODE XREF: sub_6ED6CA30+177j
					; sub_6ED6CA30+11B1j ...
		mov	[ebp+var_121], 1 ; jumptable 6ED6CBA7 case 23

loc_6ED6CBE3:				; CODE XREF: sub_6ED6CA30+316j
					; sub_6ED6CA30+540j ...
		lea	eax, [ebp+var_EC]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_121]
		mov	ebx, [ebp+var_4]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6CC00:				; CODE XREF: sub_6ED6CA30+5Cj
		mov	ecx, [edx]
		cmp	ecx, 1
		jz	short loc_6ED6CC2F
		mov	edx, [edx+4]
		mov	ebx, [ebp+var_114]
		mov	[esp+4], eax
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp+8], edx
		mov	[esp], ebx
		call	sub_6ED96400
		mov	edx, [ebx]
		mov	eax, [edx+8]

loc_6ED6CC2F:				; CODE XREF: sub_6ED6CA30+1D5j
		mov	ecx, [ebp+var_114]
		sub	eax, 1
		mov	[ebp+var_138], eax
		lea	eax, [eax+eax*2]
		shl	eax, 2
		add	eax, [ecx]
		mov	eax, [eax+18h]
		mov	[ebp+var_10C], eax
		mov	eax, [edx+4]
		cmp	[ebp+var_138], eax
		jg	loc_6ED6D442
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_6ED6CC74
		mov	edx, eax
		sar	edx, 1
		cmp	[ebp+var_138], edx
		jl	loc_6ED6D442

loc_6ED6CC74:				; CODE XREF: sub_6ED6CA30+232j
					; sub_6ED6CA30+A43j
		mov	edx, [ebp+var_114]
		mov	[esp+8], eax
		mov	eax, [ebp+var_138]
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_6ED96400
		mov	ebx, [ebp+arg_0]
		movzx	ecx, byte ptr [ebp+var_10C]
		mov	eax, [ebx+74h]
		mov	[ebp+var_10D], cl
		mov	edx, [eax]
		mov	ebx, [edx+8]
		test	ebx, ebx
		jz	loc_6ED6CA99
		mov	[esp], eax
		call	sub_6ED943D0
		mov	edx, [eax+4]
		mov	[ebp+var_174], edx
		mov	eax, [eax]
		cmp	eax, offset sub_6ED60FB0
		mov	[ebp+var_168], eax
		jz	loc_6ED6DEC8

loc_6ED6CCDE:				; CODE XREF: sub_6ED6CA30+149Aj
					; sub_6ED6CA30+14C3j
		test	byte ptr [ebp+var_168],	1
		jnz	loc_6ED6DCEA
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_174]

loc_6ED6CCF4:				; CODE XREF: sub_6ED6CA30+12D5j
		mov	[esp], eax
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	[ebp+var_168]
		test	al, al
		jnz	loc_6ED6CA99
		movsx	eax, [ebp+var_10D]
		mov	dword ptr [esp+4], offset sub_6ED6CA30
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED58610
		mov	[ebp+var_121], 0
		jmp	loc_6ED6CBE3
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6CD50:				; CODE XREF: sub_6ED6CA30+177j
					; DATA XREF: .rdata:off_6EDA0D78o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6CBA7 case 20
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED59250
		mov	ebx, [ebp+arg_0]
		mov	[esp], ebx
		mov	[esp+4], eax
		call	sub_6ED58FC0
		test	al, al
		jz	loc_6ED6D478

loc_6ED6CD7C:				; CODE XREF: sub_6ED6CA30+F18j
					; sub_6ED6CA30+FB9j
		mov	edx, 14h
		jmp	loc_6ED6CB17
; ---------------------------------------------------------------------------

loc_6ED6CD86:				; CODE XREF: sub_6ED6CA30+177j
					; DATA XREF: .rdata:off_6EDA0D78o
		mov	ebx, [ebp+arg_0] ; jumptable 6ED6CBA7 case 18
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp], ebx
		call	sub_6ED59250
		mov	[esp], ebx
		mov	[esp+4], eax
		call	sub_6ED58FC0
		test	al, al
		jz	loc_6ED6D747

loc_6ED6CDAF:				; CODE XREF: sub_6ED6CA30+D51j
					; sub_6ED6CA30+DE3j
		mov	edx, 12h
		jmp	loc_6ED6CB17
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6CDC0:				; CODE XREF: sub_6ED6CA30+177j
					; DATA XREF: .rdata:off_6EDA0D78o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6CBA7 case 12
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED59250
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_6ED58FC0
		test	al, al
		jz	loc_6ED6D574

loc_6ED6CDEC:				; CODE XREF: sub_6ED6CA30+C57j
					; sub_6ED6CA30+CBEj
		mov	edx, 0Ch
		jmp	loc_6ED6CB17
; ---------------------------------------------------------------------------

loc_6ED6CDF6:				; CODE XREF: sub_6ED6CA30+177j
					; DATA XREF: .rdata:off_6EDA0D78o
		mov	edx, [ebp+arg_0] ; jumptable 6ED6CBA7 case 6
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED59250
		mov	ecx, [ebp+arg_0]
		mov	[esp], ecx
		mov	[esp+4], eax
		call	sub_6ED58FC0
		mov	edx, 6
		test	al, al
		jnz	loc_6ED6CB17
		mov	ebx, [ebp+var_F0]
		mov	edx, [ebp+var_F4]
		mov	[ebp+var_10], ebx
		lock inc dword ptr [edx]
		setnz	al
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	[ebp+var_E8], 0Fh
		mov	[esp], ecx
		call	sub_6ED59E30
		test	al, al
		jnz	loc_6ED6DF5D
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_E8], 0Fh
		mov	[esp], eax
		call	sub_6ED59310
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_180], eax
		mov	[esp], edx
		call	sub_6ED59250
		mov	ecx, [ebp+var_180]
		mov	ebx, [ebp+var_154]
		mov	[esp+4], eax
		mov	[esp+8], ecx
		mov	[esp], ebx
		call	sub_6ED92740
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+90h]
		test	eax, eax
		jz	short loc_6ED6CEFB
		mov	eax, [eax]
		mov	eax, [eax+0Ch]
		mov	[esp], edx
		mov	[ebp+var_18C], eax
		call	sub_6ED59310
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_188], eax
		mov	[esp], ecx
		call	sub_6ED59250
		mov	ebx, [ebp+arg_0]
		mov	ecx, [ebp+var_188]
		mov	edx, [ebx+90h]
		mov	[esp+8], ecx
		mov	[esp+4], eax
		mov	[esp], edx
		call	[ebp+var_18C]
		test	al, al
		jz	loc_6ED6DEF8

loc_6ED6CEFB:				; CODE XREF: sub_6ED6CA30+47Dj
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	sub_6ED94560
		mov	edx, 6
		jmp	loc_6ED6CB17
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6CF20:				; CODE XREF: sub_6ED6CA30+177j
					; DATA XREF: .rdata:off_6EDA0D78o
		mov	dword ptr [esp+4], 0FFFFFFFFh ;	jumptable 6ED6CBA7 case	0
		mov	dword ptr [esp], offset	aLetterIsExpect	; "letter is expected"
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_E8], 3
		mov	[esp], ecx
		mov	[ebp+var_34], eax
		lea	eax, [ebp+var_34]
		mov	[esp+4], eax
		call	sub_6ED60A80
		mov	eax, [ebp+var_34]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		mov	[ebp+var_121], 0
		jnz	loc_6ED6CBE3
		mov	eax, [ebp+var_34]
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_121], 0
		jmp	loc_6ED6CBE3
; ---------------------------------------------------------------------------

loc_6ED6CF98:				; CODE XREF: sub_6ED6CA30+126j
					; DATA XREF: .rdata:off_6EDA0D18o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6CB56 cases 13,22,23
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	sub_6ED5BC00
		jmp	loc_6ED6CAFE	; jumptable 6ED6CB56 default case
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6CFB0:				; CODE XREF: sub_6ED6CA30+14Bj
					; sub_6ED6CA30+155j
		mov	ecx, 2
		jmp	loc_6ED6CB3E
; ---------------------------------------------------------------------------

loc_6ED6CFBA:				; CODE XREF: sub_6ED6CA30+1A6j
		mov	eax, [ebp+var_F0]
		mov	[ebp+var_2C], eax
		lock inc dword ptr [eax]
		setnz	al
		mov	eax, [ebx+28h]
		mov	[ebp+var_6C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebx+2Ch]
		mov	[ebp+var_68], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_64], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[esp], ebx
		mov	[ebp+var_E8], 5
		call	sub_6ED59250
		mov	[ebp+var_15C], eax
		mov	eax, [ebx+0Ch]
		mov	eax, [eax+34h]
		cmp	eax, 1
		jz	short loc_6ED6D01E
		mov	ecx, [ebp+var_120]
		mov	[esp], ecx
		call	sub_6ED91F50

loc_6ED6D01E:				; CODE XREF: sub_6ED6CA30+5DEj
		mov	ebx, [ebp+arg_0]
		mov	ebx, [ebx+0Ch]
		mov	eax, [ebx+38h]
		mov	[ebp+var_130], ebx
		test	eax, eax
		mov	[ebp+var_118], eax
		jns	loc_6ED6DA51

loc_6ED6D03B:				; CODE XREF: sub_6ED6CA30+10B5j
					; sub_6ED6CA30+10E3j ...
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_9C]
		mov	dword ptr [esp+0Ch], 4
		mov	dword ptr [esp+8], 10h
		mov	[esp+4], eax
		mov	eax, [ecx+0Ch]
		mov	[ebp+var_E8], 5
		mov	[esp], eax
		call	ds:_ZN8QMapData11node_createEPPNS_4NodeEii
		mov	edx, eax
		sub	edx, 10h
		jz	short loc_6ED6D086
		mov	ebx, [ebp+var_15C]
		mov	ecx, [ebx]
		mov	[eax-10h], ecx
		lock inc dword ptr [ecx]
		setnz	al

loc_6ED6D086:				; CODE XREF: sub_6ED6CA30+643j
		cmp	edx, 0FFFFFFFCh
		jz	loc_6ED6DB80
		mov	eax, [ebp+var_6C]
		mov	[edx+4], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	eax, [ebp+var_68]
		mov	[edx+8], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	eax, [ebp+var_64]
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		jmp	loc_6ED6DB80
; ---------------------------------------------------------------------------

loc_6ED6D0B8:				; CODE XREF: sub_6ED6CA30+126j
					; DATA XREF: .rdata:off_6EDA0D18o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6CB56 case 21
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED60FB0
		test	al, al
		jnz	loc_6ED6CAFE	; jumptable 6ED6CB56 default case
		mov	dword ptr [esp+0Ch], 15h
		jmp	loc_6ED6D19D
; ---------------------------------------------------------------------------

loc_6ED6D0E2:				; CODE XREF: sub_6ED6CA30+126j
					; DATA XREF: .rdata:off_6EDA0D18o
		mov	ecx, [ebp+var_14C] ; jumptable 6ED6CB56	case 9
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_3C], offset aNdata_0 ;	"NDATA"
		mov	[esp+4], eax
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED94590
		mov	ebx, [ebp+arg_0]
		mov	[esp], ebx
		call	sub_6ED64390
		test	al, al
		jnz	loc_6ED6CAFE	; jumptable 6ED6CB56 default case
		mov	dword ptr [esp+0Ch], 9

loc_6ED6D123:				; CODE XREF: sub_6ED6CA30+875j
		mov	dword ptr [esp+4], offset sub_6ED6CA30
		mov	dword ptr [esp+8], 0
		mov	[esp], ebx
		call	sub_6ED58610
		mov	[ebp+var_121], 0
		jmp	loc_6ED6CBE3
; ---------------------------------------------------------------------------

loc_6ED6D147:				; CODE XREF: sub_6ED6CA30+126j
					; DATA XREF: .rdata:off_6EDA0D18o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6CB56 case 10
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED60FB0
		test	al, al
		jnz	loc_6ED6CAFE	; jumptable 6ED6CB56 default case
		mov	dword ptr [esp+0Ch], 0Ah
		jmp	loc_6ED6D1F0
; ---------------------------------------------------------------------------

loc_6ED6D171:				; CODE XREF: sub_6ED6CA30+126j
					; DATA XREF: .rdata:off_6EDA0D18o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6CB56 cases 11,12
		mov	byte ptr [ecx+61h], 1
		mov	[esp], ecx
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	sub_6ED656F0
		test	al, al
		jnz	loc_6ED6CAFE	; jumptable 6ED6CB56 default case

loc_6ED6D192:				; CODE XREF: sub_6ED6CA30+A0Dj
		movsx	eax, [ebp+var_10D]
		mov	[esp+0Ch], eax

loc_6ED6D19D:				; CODE XREF: sub_6ED6CA30+6ADj
					; sub_6ED6CA30+8D5j ...
		mov	ebx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED6CA30
		mov	dword ptr [esp+8], 0
		mov	[esp], ebx
		call	sub_6ED58610
		mov	[ebp+var_121], 0
		jmp	loc_6ED6CBE3
; ---------------------------------------------------------------------------

loc_6ED6D1C4:				; CODE XREF: sub_6ED6CA30+126j
					; DATA XREF: .rdata:off_6EDA0D18o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6CB56 cases 19,20
		mov	byte ptr [eax+68h], 0
		mov	[esp], eax
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	sub_6ED64710
		test	al, al
		jnz	loc_6ED6CAFE	; jumptable 6ED6CB56 default case

loc_6ED6D1E5:				; CODE XREF: sub_6ED6CA30+8FDj
		movsx	eax, [ebp+var_10D]
		mov	[esp+0Ch], eax

loc_6ED6D1F0:				; CODE XREF: sub_6ED6CA30+73Cj
					; sub_6ED6CA30+8A9j ...
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED6CA30
		mov	dword ptr [esp+8], 0
		mov	[esp], edx
		call	sub_6ED58610
		mov	[ebp+var_121], 0
		jmp	loc_6ED6CBE3
; ---------------------------------------------------------------------------

loc_6ED6D217:				; CODE XREF: sub_6ED6CA30+126j
					; DATA XREF: .rdata:off_6EDA0D18o
		lea	eax, [ebp+var_38] ; jumptable 6ED6CB56 case 1
		mov	[esp+4], eax
		mov	eax, [ebp+var_14C]
		mov	[ebp+var_38], offset aNtity ; "NTITY"
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED94590
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		call	sub_6ED64390
		test	al, al
		jnz	loc_6ED6CAFE	; jumptable 6ED6CB56 default case
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+4], offset sub_6ED6CA30
		mov	dword ptr [esp+8], 0
		mov	[esp], ecx
		call	sub_6ED58610
		mov	[ebp+var_121], 0
		jmp	loc_6ED6CBE3
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6D280:				; CODE XREF: sub_6ED6CA30+126j
					; DATA XREF: .rdata:off_6EDA0D18o
		mov	ebx, [ebp+arg_0] ; jumptable 6ED6CB56 case 2
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp], ebx
		call	sub_6ED60FB0
		test	al, al
		jnz	loc_6ED6CAFE	; jumptable 6ED6CB56 default case
		mov	dword ptr [esp+0Ch], 2
		jmp	loc_6ED6D123
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6D2B0:				; CODE XREF: sub_6ED6CA30+126j
					; DATA XREF: .rdata:off_6EDA0D18o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6CB56 case 3
		mov	byte ptr [eax+61h], 0
		mov	[esp], eax
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	sub_6ED656F0
		test	al, al
		jnz	loc_6ED6CAFE	; jumptable 6ED6CB56 default case
		mov	dword ptr [esp+0Ch], 3
		jmp	loc_6ED6D1F0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6D2E0:				; CODE XREF: sub_6ED6CA30+126j
					; DATA XREF: .rdata:off_6EDA0D18o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6CB56 case 4
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED60FB0
		test	al, al
		jnz	loc_6ED6CAFE	; jumptable 6ED6CB56 default case
		mov	dword ptr [esp+0Ch], 4
		jmp	loc_6ED6D19D
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6D310:				; CODE XREF: sub_6ED6CA30+126j
					; DATA XREF: .rdata:off_6EDA0D18o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6CB56 cases 5,6
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED68FF0
		test	al, al
		jnz	loc_6ED6CAFE	; jumptable 6ED6CB56 default case
		jmp	loc_6ED6D1E5
; ---------------------------------------------------------------------------

loc_6ED6D332:				; CODE XREF: sub_6ED6CA30+126j
					; DATA XREF: .rdata:off_6EDA0D18o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6CB56 case 7
		mov	byte ptr [ecx+68h], 0
		mov	[esp], ecx
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	sub_6ED64710
		test	al, al
		jnz	loc_6ED6CAFE	; jumptable 6ED6CB56 default case
		mov	dword ptr [esp+0Ch], 7
		jmp	loc_6ED6D19D
; ---------------------------------------------------------------------------

loc_6ED6D360:				; CODE XREF: sub_6ED6CA30+126j
					; DATA XREF: .rdata:off_6EDA0D18o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6CB56 case 8
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED60FB0
		test	al, al
		jnz	loc_6ED6CAFE	; jumptable 6ED6CB56 default case
		mov	dword ptr [esp+0Ch], 8
		jmp	loc_6ED6D1F0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6D390:				; CODE XREF: sub_6ED6CA30+126j
					; DATA XREF: .rdata:off_6EDA0D18o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6CB56 case 14
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED60FB0
		test	al, al
		jnz	loc_6ED6CAFE	; jumptable 6ED6CB56 default case
		mov	dword ptr [esp+0Ch], 0Eh
		jmp	loc_6ED6D1F0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6D3C0:				; CODE XREF: sub_6ED6CA30+126j
					; DATA XREF: .rdata:off_6EDA0D18o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6CB56 case 15
		mov	byte ptr [ecx+61h], 0
		mov	[esp], ecx
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	sub_6ED656F0
		test	al, al
		jnz	loc_6ED6CAFE	; jumptable 6ED6CB56 default case
		mov	dword ptr [esp+0Ch], 0Fh
		jmp	loc_6ED6D19D
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6D3F0:				; CODE XREF: sub_6ED6CA30+126j
					; DATA XREF: .rdata:off_6EDA0D18o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6CB56 case 16
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED60FB0
		test	al, al
		jnz	loc_6ED6CAFE	; jumptable 6ED6CB56 default case
		mov	dword ptr [esp+0Ch], 10h
		jmp	loc_6ED6D1F0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6D420:				; CODE XREF: sub_6ED6CA30+126j
					; DATA XREF: .rdata:off_6EDA0D18o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6CB56 cases 17,18
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED68FF0
		test	al, al
		jnz	loc_6ED6CAFE	; jumptable 6ED6CB56 default case
		jmp	loc_6ED6D192
; ---------------------------------------------------------------------------

loc_6ED6D442:				; CODE XREF: sub_6ED6CA30+228j
					; sub_6ED6CA30+23Ej
		mov	ebx, [ebp+var_138]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0Ch
		mov	dword ptr [esp], 1Ch
		mov	[esp+4], ebx
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	ds:_ZN11QVectorData4growEiiib
		jmp	loc_6ED6CC74
; ---------------------------------------------------------------------------

loc_6ED6D478:				; CODE XREF: sub_6ED6CA30+346j
		mov	eax, [ebx+28h]
		mov	[ebp+var_4C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebx+2Ch]
		mov	[ebp+var_48], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[esp], ebx
		mov	[ebp+var_E8], 9
		call	sub_6ED59250
		mov	[ebp+var_108], eax
		mov	eax, [ebx+4]
		mov	eax, [eax+34h]
		cmp	eax, 1
		jz	short loc_6ED6D4C1
		mov	eax, [ebp+var_158]
		mov	[esp], eax
		call	sub_6ED922B0

loc_6ED6D4C1:				; CODE XREF: sub_6ED6CA30+A81j
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+4]
		mov	[ebp+var_100], edx
		mov	ecx, [edx+38h]
		mov	eax, edx
		test	ecx, ecx
		mov	[ebp+var_FC], ecx
		js	loc_6ED6D8C4
		shl	ecx, 2
		mov	[ebp+var_104], ecx
		lea	esi, [esi+0]

loc_6ED6D4F0:				; CODE XREF: sub_6ED6CA30+B0Cj
					; sub_6ED6CA30+B3Fj
		mov	ebx, [ebp+var_FC]
		mov	edx, [ebp+var_100]
		mov	ebx, [edx+ebx*4+4]
		cmp	ebx, eax
		mov	[ebp+var_F8], ebx
		jz	short loc_6ED6D540
		mov	eax, [ebp+var_108]
		mov	[ebp+var_E8], 9
		mov	[esp+4], eax
		mov	eax, ebx
		sub	eax, 0Ch
		mov	[esp], eax
		call	ds:_ZNK7QStringltERKS_
		test	al, al
		jz	short loc_6ED6D540
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	[ebp+var_100], ebx
		jmp	short loc_6ED6D4F0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6D540:				; CODE XREF: sub_6ED6CA30+AD8j
					; sub_6ED6CA30+AFEj
		mov	ecx, [ebp+var_104]
		mov	ebx, [ebp+var_100]
		mov	[ebp+ecx+var_9C], ebx
		sub	ecx, 4
		sub	[ebp+var_FC], 1
		mov	[ebp+var_104], ecx
		js	loc_6ED6D880
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		jmp	loc_6ED6D4F0
; ---------------------------------------------------------------------------

loc_6ED6D574:				; CODE XREF: sub_6ED6CA30+3B6j
		mov	ecx, [ebp+arg_0]
		mov	[esp], ecx
		call	sub_6ED59190
		mov	ebx, [ebp+arg_0]
		mov	edx, eax
		mov	eax, [ebx+28h]
		mov	[ebp+var_60], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	eax, [ebx+2Ch]
		mov	[ebp+var_5C], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	eax, [edx]
		mov	[ebp+var_58], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[esp], ebx
		mov	[ebp+var_E8], 0Dh
		call	sub_6ED59250
		mov	[ebp+var_160], eax
		mov	eax, [ebx+0Ch]
		mov	eax, [eax+34h]
		cmp	eax, 1
		jz	short loc_6ED6D5D8
		mov	eax, [ebp+var_120]
		mov	[esp], eax
		call	sub_6ED91F50

loc_6ED6D5D8:				; CODE XREF: sub_6ED6CA30+B98j
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+0Ch]
		mov	[ebp+var_13C], edx
		mov	ecx, [edx+38h]
		mov	eax, edx
		test	ecx, ecx
		mov	[ebp+var_12C], ecx
		jns	loc_6ED6DC8B

loc_6ED6D5F7:				; CODE XREF: sub_6ED6CA30+13A1j
					; sub_6ED6CA30+1403j ...
		lea	edx, [ebp+var_9C]
		mov	dword ptr [esp+0Ch], 4
		mov	dword ptr [esp+8], 10h
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_E8], 0Dh
		call	ds:_ZN8QMapData11node_createEPPNS_4NodeEii
		mov	ecx, eax
		mov	edx, eax
		sub	ecx, 10h
		jz	short loc_6ED6D63E
		mov	ebx, [ebp+var_160]
		mov	eax, [ebx]
		mov	[edx-10h], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED6D63E:				; CODE XREF: sub_6ED6CA30+BFBj
		cmp	ecx, 0FFFFFFFCh
		jz	short loc_6ED6D667
		mov	eax, [ebp+var_60]
		mov	[ecx+4], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_5C]
		mov	[ecx+8], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_58]
		mov	[ecx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED6D667:				; CODE XREF: sub_6ED6CA30+C11j
					; sub_6ED6CA30+145Ej
		lea	eax, [ebp+var_60]
		mov	[esp], eax
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	sub_6ED91310
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+84h]
		test	eax, eax
		jz	loc_6ED6CDEC
		mov	eax, [eax]
		mov	ebx, [ebp+arg_0]
		mov	eax, [eax+0Ch]
		mov	[esp], ebx
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[ebp+var_1A8], eax
		call	sub_6ED59190
		mov	[esp], ebx
		mov	[ebp+var_1A4], eax
		call	sub_6ED59250
		mov	ecx, [ebp+var_1A4]
		mov	edx, [ebx+84h]
		mov	ebx, [ebp+var_148]
		mov	[esp+10h], ecx
		mov	ecx, [ebp+var_144]
		mov	[esp], edx
		mov	[esp+0Ch], ebx
		mov	[esp+4], eax
		mov	[esp+8], ecx
		call	[ebp+var_1A8]
		test	al, al
		jnz	loc_6ED6CDEC
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx+90h]
		mov	edx, [eax]
		mov	[esp+4], eax
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		call	dword ptr [edx+14h]
		lea	edx, [ebp+var_18]
		mov	[ebp+var_E8], 0Ch
		push	eax
		mov	[esp+4], edx
		mov	[esp], ebx
		call	sub_6ED60A80
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_121], 0
		jmp	loc_6ED6CBE3
; ---------------------------------------------------------------------------

loc_6ED6D747:				; CODE XREF: sub_6ED6CA30+379j
		mov	[esp], ebx
		call	sub_6ED59310
		mov	[esp], ebx
		mov	[ebp+var_17C], eax
		call	sub_6ED59250
		mov	edx, [ebp+var_17C]
		mov	ecx, [ebp+var_150]
		mov	[esp+8], edx
		mov	[esp], ecx
		mov	[esp+4], eax
		call	sub_6ED92740
		mov	eax, [ebx+90h]
		test	eax, eax
		jz	loc_6ED6CDAF
		mov	eax, [eax]
		mov	eax, [eax+0Ch]
		mov	[esp], ebx
		mov	[ebp+var_190], eax
		call	sub_6ED59310
		mov	[esp], ebx
		lea	ebx, [ebp+var_1C]
		mov	[ebp+var_1A0], eax
		call	sub_6ED59250
		mov	[ebp+var_9], 25h
		mov	[esp], ebx
		mov	[ebp+var_40], eax
		lea	eax, [ebp+var_9]
		mov	[ebp+var_44], eax
		lea	eax, [ebp+var_44]
		mov	[esp+4], eax
		call	sub_6ED97D90
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_1A0]
		mov	eax, [edx+90h]
		mov	[ebp+var_E8], 0Bh
		sub	esp, 4
		mov	[esp+8], ecx
		mov	[esp+4], ebx
		mov	[esp], eax
		call	[ebp+var_190]
		mov	[ebp+var_199], al
		mov	[esp], ebx
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	sub_6ED94560
		cmp	[ebp+var_199], 0
		jnz	loc_6ED6CDAF
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_20]
		mov	eax, [edx+90h]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	eax, [edx+14h]
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_E8], 0Ah
		push	ebx
		lea	ebx, [ebp+var_20]
		mov	[esp+4], ebx
		mov	[esp], eax
		call	sub_6ED60A80
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_121], 0
		jmp	loc_6ED6CBE3
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6D880:				; CODE XREF: sub_6ED6CA30+B33j
		mov	ecx, [ebp+arg_0]
		mov	eax, [ebp+var_F8]
		cmp	[ecx+4], eax
		jz	short loc_6ED6D8C4
		mov	ebx, eax
		mov	eax, [ebp+var_108]
		sub	ebx, 0Ch
		mov	[ebp+var_170], ebx
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	[ebp+var_E8], 9
		call	ds:_ZNK7QStringltERKS_
		test	al, al
		jz	loc_6ED6DD0A
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]

loc_6ED6D8C4:				; CODE XREF: sub_6ED6CA30+AAAj
					; sub_6ED6CA30+E5Cj ...
		lea	edx, [ebp+var_9C]
		mov	dword ptr [esp+0Ch], 4
		mov	dword ptr [esp+8], 0Ch
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_E8], 9
		call	ds:_ZN8QMapData11node_createEPPNS_4NodeEii
		mov	ecx, eax
		mov	edx, eax
		sub	ecx, 0Ch
		jz	short loc_6ED6D90B
		mov	ebx, [ebp+var_108]
		mov	eax, [ebx]
		mov	[edx-0Ch], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED6D90B:				; CODE XREF: sub_6ED6CA30+EC8j
		cmp	ecx, 0FFFFFFFCh
		jz	short loc_6ED6D928
		mov	eax, [ebp+var_4C]
		mov	[ecx+4], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_48]
		mov	[ecx+8], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED6D928:				; CODE XREF: sub_6ED6CA30+EDEj
					; sub_6ED6CA30+1328j
		lea	edx, [ebp+var_4C]
		mov	[esp], edx
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	sub_6ED91410
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+90h]
		test	eax, eax
		jz	loc_6ED6CD7C
		mov	eax, [eax]
		mov	eax, [eax+10h]
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[ebp+var_198], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED59250
		lea	edx, [ebp+var_24]
		mov	[esp], edx
		mov	[ebp+var_A], 25h
		mov	[ebp+var_50], eax
		lea	eax, [ebp+var_A]
		mov	[ebp+var_54], eax
		lea	eax, [ebp+var_54]
		mov	[esp+4], eax
		call	sub_6ED97D90
		mov	ecx, [ebp+arg_0]
		mov	ebx, [ebp+var_148]
		mov	edx, [ebp+var_144]
		mov	eax, [ecx+90h]
		lea	ecx, [ebp+var_24]
		mov	[ebp+var_E8], 8
		sub	esp, 4
		mov	[esp+0Ch], ebx
		mov	[esp+8], edx
		mov	[esp+4], ecx
		mov	[esp], eax
		call	[ebp+var_198]
		mov	[ebp+var_191], al
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	sub_6ED94560
		cmp	[ebp+var_191], 0
		jnz	loc_6ED6CD7C
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_28]
		lea	ebx, [ebp+var_28]
		mov	eax, [edx+90h]
		mov	edx, [eax]
		mov	[esp], ecx
		mov	[esp+4], eax
		mov	eax, [edx+14h]
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_E8], 7
		push	ecx
		mov	[esp+4], ebx
		mov	[esp], eax
		call	sub_6ED60A80
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_121], 0
		jmp	loc_6ED6CBE3
; ---------------------------------------------------------------------------

loc_6ED6DA51:				; CODE XREF: sub_6ED6CA30+605j
		shl	eax, 2
		mov	[ebp+var_134], eax
		lea	esi, [esi+0]

loc_6ED6DA60:				; CODE XREF: sub_6ED6CA30+1082j
					; sub_6ED6CA30+10A7j
		mov	ecx, [ebp+var_130]
		mov	edx, [ebp+var_118]
		mov	edx, [ecx+edx*4+4]
		mov	ecx, [ebp+var_120]
		mov	[ebp+var_11C], edx
		cmp	edx, [ecx]
		jz	short loc_6ED6DAB4
		mov	ebx, [ebp+var_15C]
		mov	eax, edx
		sub	eax, 10h
		mov	[esp], eax
		mov	[ebp+var_E8], 5
		mov	[esp+4], ebx
		call	ds:_ZNK7QStringltERKS_
		test	al, al
		jz	short loc_6ED6DAB4
		mov	eax, [ebp+var_11C]
		mov	[ebp+var_130], eax
		jmp	short loc_6ED6DA60
; ---------------------------------------------------------------------------

loc_6ED6DAB4:				; CODE XREF: sub_6ED6CA30+104Ej
					; sub_6ED6CA30+1074j
		mov	ecx, [ebp+var_134]
		mov	ebx, [ebp+var_130]
		mov	[ebp+ecx+var_9C], ebx
		sub	ecx, 4
		sub	[ebp+var_118], 1
		mov	[ebp+var_134], ecx
		jns	short loc_6ED6DA60
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_11C]
		cmp	[edx+0Ch], ecx
		jz	loc_6ED6D03B
		mov	ebx, [ebp+var_15C]
		sub	ecx, 10h
		mov	[ebp+var_164], ecx
		mov	[esp+4], ecx
		mov	[ebp+var_E8], 5
		mov	[esp], ebx
		call	ds:_ZNK7QStringltERKS_
		test	al, al
		jnz	loc_6ED6D03B
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_11C]
		cmp	[eax+0Ch], edx
		jz	loc_6ED6D03B
		lea	eax, [ebp+var_6C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_164]
		mov	[ebp+var_E8], 5
		add	eax, 4
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp+var_68]
		mov	[esp+4], eax
		mov	eax, [ebp+var_164]
		add	eax, 8
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp+var_64]
		mov	[esp+4], eax
		mov	eax, [ebp+var_164]
		add	eax, 0Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_

loc_6ED6DB80:				; CODE XREF: sub_6ED6CA30+659j
					; sub_6ED6CA30+683j
		mov	eax, [ebp+var_64]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED6DE0C

loc_6ED6DB91:				; CODE XREF: sub_6ED6CA30+13F2j
		mov	eax, [ebp+var_68]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED6DDF1

loc_6ED6DBA2:				; CODE XREF: sub_6ED6CA30+13D7j
		mov	eax, [ebp+var_6C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED6DDD6

loc_6ED6DBB3:				; CODE XREF: sub_6ED6CA30+13BCj
		mov	eax, [ebp+var_2C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED6DBD6
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED6DBD6:				; CODE XREF: sub_6ED6CA30+118Ej
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx+90h]
		test	eax, eax
		jz	loc_6ED6CBDC	; jumptable 6ED6CBA7 case 23
		mov	eax, [eax]
		mov	eax, [eax+10h]
		mov	[esp], ebx
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[ebp+var_178], eax
		call	sub_6ED59250
		mov	edx, [ebx+90h]
		mov	ecx, [ebp+var_148]
		mov	ebx, [ebp+var_144]
		mov	[esp], edx
		mov	[esp+0Ch], ecx
		mov	[esp+8], ebx
		mov	[esp+4], eax
		call	[ebp+var_178]
		test	al, al
		jnz	loc_6ED6CBDC	; jumptable 6ED6CBA7 case 23
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_30]
		lea	ebx, [ebp+var_30]
		mov	eax, [edx+90h]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx+14h]
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_E8], 4
		sub	esp, 4
		mov	[esp+4], ebx
		mov	[esp], eax
		call	sub_6ED60A80
		lea	eax, [ebp+var_30]
		mov	[esp], eax
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_121], 0
		jmp	loc_6ED6CBE3
; ---------------------------------------------------------------------------

loc_6ED6DC8B:				; CODE XREF: sub_6ED6CA30+BC1j
		shl	ecx, 2
		mov	[ebp+var_140], ecx

loc_6ED6DC94:				; CODE XREF: sub_6ED6CA30+12B8j
					; sub_6ED6CA30+1353j
		mov	eax, [ebp+var_13C]
		mov	ebx, [ebp+var_12C]
		mov	ebx, [eax+ebx*4+4]
		mov	eax, [ebp+var_120]
		mov	[ebp+var_128], ebx
		cmp	ebx, [eax]
		jz	loc_6ED6DD60
		mov	edx, [ebp+var_160]
		mov	eax, ebx
		sub	eax, 10h
		mov	[esp], eax
		mov	[ebp+var_E8], 0Dh
		mov	[esp+4], edx
		call	ds:_ZNK7QStringltERKS_
		test	al, al
		jz	loc_6ED6DD60
		mov	[ebp+var_13C], ebx
		jmp	short loc_6ED6DC94
; ---------------------------------------------------------------------------

loc_6ED6DCEA:				; CODE XREF: sub_6ED6CA30+2B5j
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_174]
		mov	ebx, [ebp+var_168]
		mov	edx, [eax]
		mov	edx, [edx+ebx-1]
		mov	[ebp+var_168], edx
		jmp	loc_6ED6CCF4
; ---------------------------------------------------------------------------

loc_6ED6DD0A:				; CODE XREF: sub_6ED6CA30+E88j
		mov	ecx, [ebp+arg_0]
		mov	ebx, [ebp+var_F8]
		cmp	[ecx+4], ebx
		jz	loc_6ED6DF71
		lea	eax, [ebp+var_4C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_170]
		mov	[ebp+var_E8], 9
		add	eax, 4
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp+var_48]
		mov	[esp+4], eax
		mov	eax, [ebp+var_170]
		add	eax, 8
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		jmp	loc_6ED6D928
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6DD60:				; CODE XREF: sub_6ED6CA30+1282j
					; sub_6ED6CA30+12ACj
		mov	eax, [ebp+var_140]
		mov	edx, [ebp+var_13C]
		mov	[ebp+eax+var_9C], edx
		sub	eax, 4
		sub	[ebp+var_12C], 1
		mov	[ebp+var_140], eax
		jns	loc_6ED6DC94
		mov	ecx, [ebp+arg_0]
		mov	ebx, [ebp+var_128]
		cmp	[ecx+0Ch], ebx
		jz	loc_6ED6DF78
		mov	eax, [ebp+var_128]
		mov	edx, [ebp+var_160]
		mov	[ebp+var_E8], 0Dh
		sub	eax, 10h
		mov	[ebp+var_16C], eax
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZNK7QStringltERKS_
		test	al, al
		jz	short loc_6ED6DE27
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+0Ch]
		jmp	loc_6ED6D5F7
; ---------------------------------------------------------------------------

loc_6ED6DDD6:				; CODE XREF: sub_6ED6CA30+117Dj
		mov	eax, [ebp+var_6C]
		mov	[ebp+var_E8], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED6DBB3
; ---------------------------------------------------------------------------

loc_6ED6DDF1:				; CODE XREF: sub_6ED6CA30+116Cj
		mov	eax, [ebp+var_68]
		mov	[ebp+var_E8], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED6DBA2
; ---------------------------------------------------------------------------

loc_6ED6DE0C:				; CODE XREF: sub_6ED6CA30+115Bj
		mov	eax, [ebp+var_64]
		mov	[ebp+var_E8], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED6DB91
; ---------------------------------------------------------------------------

loc_6ED6DE27:				; CODE XREF: sub_6ED6CA30+1399j
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebp+var_128]
		cmp	eax, [ebx+0Ch]
		jz	loc_6ED6D5F7
		lea	eax, [ebp+var_60]
		mov	[esp+4], eax
		mov	eax, [ebp+var_16C]
		mov	[ebp+var_E8], 0Dh
		add	eax, 4
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp+var_5C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_16C]
		add	eax, 8
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp+var_58]
		mov	[esp+4], eax
		mov	eax, [ebp+var_16C]
		add	eax, 0Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		jmp	loc_6ED6D667
; ---------------------------------------------------------------------------

loc_6ED6DE93:				; CODE XREF: sub_6ED6CA30+FAj
		mov	ebx, [ebp+arg_0]
		mov	[esp+0Ch], edx
		mov	dword ptr [esp+4], offset sub_6ED6CA30
		mov	dword ptr [esp+8], 0
		mov	[esp], ebx
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	sub_6ED60E40
		mov	[ebp+var_121], 0
		jmp	loc_6ED6CBE3
; ---------------------------------------------------------------------------

loc_6ED6DEC8:				; CODE XREF: sub_6ED6CA30+2A8j
		test	edx, edx
		jnz	loc_6ED6CCDE
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_B8]
		mov	edx, [ecx+74h]
		mov	[esp], eax
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_6ED94310
		push	ecx
		jmp	loc_6ED6CCDE
; ---------------------------------------------------------------------------

loc_6ED6DEF8:				; CODE XREF: sub_6ED6CA30+4C5j
		mov	eax, [ebx+90h]
		lea	ecx, [ebp+var_14]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx+14h]
		lea	eax, [ebp+var_14]
		push	edx
		mov	[esp+4], eax
		mov	[esp], ebx
		mov	[ebp+var_E8], 0Eh
		call	sub_6ED60A80
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_E8], 0Fh
		call	sub_6ED94560

loc_6ED6DF3C:				; CODE XREF: sub_6ED6CA30+153Fj
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_121], 0
		jmp	loc_6ED6CBE3
; ---------------------------------------------------------------------------

loc_6ED6DF5D:				; CODE XREF: sub_6ED6CA30+42Aj
		mov	ebx, [ebp+arg_0]
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	[esp], ebx
		call	sub_6ED60A80
		jmp	short loc_6ED6DF3C
; ---------------------------------------------------------------------------

loc_6ED6DF71:				; CODE XREF: sub_6ED6CA30+12E6j
		mov	eax, ebx
		jmp	loc_6ED6D8C4
; ---------------------------------------------------------------------------

loc_6ED6DF78:				; CODE XREF: sub_6ED6CA30+1365j
		mov	eax, ebx
		lea	esi, [esi+0]
		jmp	loc_6ED6D5F7
sub_6ED6CA30	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED6DF85	proc near		; DATA XREF: sub_6ED6CA30+2Do
		add	ebp, 8
		mov	eax, [ebp-0E8h]
		mov	edx, [ebp-0E4h]
		cmp	eax, 1
		mov	[ebp-184h], edx
		jz	loc_6ED6E03B
		cmp	eax, 2
		jz	loc_6ED6E1AA
		cmp	eax, 3
		jz	loc_6ED6E1A2
		cmp	eax, 4
		jz	loc_6ED6E188
		cmp	eax, 5
		jz	loc_6ED6E050
		cmp	eax, 6
		jz	loc_6ED6E104
		cmp	eax, 7
		jz	loc_6ED6E0D7
		cmp	eax, 8
		lea	esi, [esi+0]
		jz	loc_6ED6E0AA
		cmp	eax, 9
		jz	loc_6ED6E07D
		cmp	eax, 0Ah
		jz	loc_6ED6E12E
		cmp	eax, 0Bh
		nop
		lea	esi, [esi+0]
		jz	loc_6ED6E126
		cmp	eax, 0Ch
		jz	loc_6ED6E15B
		cmp	eax, 0Dh
		jz	loc_6ED6E10C
		cmp	eax, 0Eh
		nop
		lea	esi, [esi+0]
		jz	loc_6ED6E121
		lea	eax, [ebp-68h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_6ED94560

loc_6ED6E03B:				; CODE XREF: sub_6ED6DF85+18j
		lea	eax, [ebp-6Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_6ED94560

loc_6ED6E050:				; CODE XREF: sub_6ED6DF85+3Cj
					; sub_6ED6DF85+218j
		lea	eax, [ebp-2Ch]

loc_6ED6E053:				; CODE XREF: sub_6ED6DF85+1A4j
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-184h]
		mov	dword ptr [ebp-0E8h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED6E07D:				; CODE XREF: sub_6ED6DF85+64j
		lea	eax, [ebp-20h]

loc_6ED6E080:				; CODE XREF: sub_6ED6DF85+182j
					; sub_6ED6DF85+220j
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_6ED94560
		mov	edx, [ebp-184h]
		mov	dword ptr [ebp-0E8h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED6E0AA:				; CODE XREF: sub_6ED6DF85+5Bj
		lea	eax, [ebp-4Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_6ED91410
		mov	ebx, [ebp-184h]
		mov	dword ptr [ebp-0E8h], 0FFFFFFFFh
		mov	[esp+0], ebx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED6E0D7:				; CODE XREF: sub_6ED6DF85+4Ej
		lea	eax, [ebp-24h]

loc_6ED6E0DA:				; CODE XREF: sub_6ED6DF85+19Fj
					; sub_6ED6DF85+22Bj
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_6ED94560
		mov	ebx, [ebp-184h]
		mov	dword ptr [ebp-0E8h], 0FFFFFFFFh
		mov	[esp+0], ebx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED6E104:				; CODE XREF: sub_6ED6DF85+45j
		lea	eax, [ebp-28h]
		jmp	loc_6ED6E080
; ---------------------------------------------------------------------------

loc_6ED6E10C:				; CODE XREF: sub_6ED6DF85+8Dj
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_6ED94560

loc_6ED6E121:				; CODE XREF: sub_6ED6DF85+9Bj
		lea	eax, [ebp-10h]
		jmp	short loc_6ED6E0DA
; ---------------------------------------------------------------------------

loc_6ED6E126:				; CODE XREF: sub_6ED6DF85+7Bj
		lea	eax, [ebp-18h]
		jmp	loc_6ED6E053
; ---------------------------------------------------------------------------

loc_6ED6E12E:				; CODE XREF: sub_6ED6DF85+6Dj
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_6ED94560
		mov	eax, [ebp-184h]
		mov	dword ptr [ebp-0E8h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED6E15B:				; CODE XREF: sub_6ED6DF85+84j
		lea	eax, [ebp-60h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_6ED91310
		mov	ecx, [ebp-184h]
		mov	dword ptr [ebp-0E8h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED6E188:				; CODE XREF: sub_6ED6DF85+33j
		lea	eax, [ebp-6Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_6ED91310
		jmp	loc_6ED6E050
; ---------------------------------------------------------------------------

loc_6ED6E1A2:				; CODE XREF: sub_6ED6DF85+2Aj
		lea	eax, [ebp-30h]
		jmp	loc_6ED6E080
; ---------------------------------------------------------------------------

loc_6ED6E1AA:				; CODE XREF: sub_6ED6DF85+21j
		lea	eax, [ebp-34h]
		lea	esi, [esi+0]
		jmp	loc_6ED6E0DA
sub_6ED6DF85	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED6E1C0	proc near		; CODE XREF: sub_6ED6E7C0+67Dp
					; DATA XREF: sub_6ED6E1C0+1E5o	...

var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_66		= byte ptr -66h
var_65		= byte ptr -65h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_28		= byte ptr -28h
var_14		= dword	ptr -14h
var_10		= byte ptr -10h
var_C		= byte ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 98h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset dword_6ED9A8C0
		mov	[ebp+var_38], offset sub_6ED6E76C
		mov	[ebp+var_34], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+74h]
		test	edx, edx
		mov	[ebp+var_60], edx
		jz	short loc_6ED6E20C
		mov	edx, [edx]
		mov	eax, [edx+8]
		test	eax, eax
		jnz	loc_6ED6E2C5

loc_6ED6E20C:				; CODE XREF: sub_6ED6E1C0+3Dj
		mov	[ebp+var_65], 0

loc_6ED6E210:				; CODE XREF: sub_6ED6E1C0+CCj
					; sub_6ED6E1C0+D1j ...
		movzx	eax, [ebp+var_65] ; jumptable 6ED6E291 default case
		add	eax, 1
		cmp	al, 0Bh		; switch 12 cases
		jbe	short loc_6ED6E298

loc_6ED6E21B:				; CODE XREF: sub_6ED6E1C0+DBj
					; DATA XREF: .rdata:off_6EDA0E04o
		mov	edx, [ebp+arg_0] ; jumptable 6ED6E29B default case
		movzx	eax, word ptr [edx+98h]
		mov	edx, eax
		or	edx, 1
		cmp	dx, 0FFFFh
		jz	loc_6ED6E70B
		xor	edx, edx
		cmp	ax, 3Ch
		jz	short loc_6ED6E278
		cmp	ax, 3Fh
		mov	dl, 1
		jz	short loc_6ED6E278
		cmp	ax, 21h
		mov	dl, 2
		jz	short loc_6ED6E278
		cmp	ax, 2Dh
		mov	dl, 3
		jz	short loc_6ED6E278
		cmp	ax, 41h
		mov	dl, 4
		jz	short loc_6ED6E278
		cmp	ax, 45h
		mov	dl, 5
		jz	short loc_6ED6E278
		cmp	ax, 4Ch
		mov	dl, 6
		jz	short loc_6ED6E278
		xor	edx, edx
		cmp	ax, 4Eh
		setnz	dl
		add	edx, 7

loc_6ED6E278:				; CODE XREF: sub_6ED6E1C0+7Aj
					; sub_6ED6E1C0+82j ...
		movsx	eax, [ebp+var_65]
		lea	eax, [eax+eax*8]
		movzx	eax, ds:byte_6EDA1560[edx+eax]
		cmp	al, 9		; switch 10 cases
		mov	[ebp+var_65], al
		ja	short loc_6ED6E210 ; jumptable 6ED6E291	default	case
		movzx	eax, al
		jmp	ds:off_6EDA0DDC[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_6ED6E298:				; CODE XREF: sub_6ED6E1C0+59j
		movzx	eax, al
		jmp	ds:off_6EDA0E04[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_6ED6E2A2:				; CODE XREF: sub_6ED6E1C0+DBj
					; DATA XREF: .rdata:off_6EDA0E04o
		mov	edx, [ebp+arg_0] ; jumptable 6ED6E29B case 5
		mov	eax, [edx+7Ch]
		test	eax, eax
		jnz	loc_6ED6E4D0

loc_6ED6E2B0:				; CODE XREF: sub_6ED6E1C0+DBj
					; sub_6ED6E1C0+21Fj ...
		mov	[ebp+var_66], 1	; jumptable 6ED6E29B cases 7-11

loc_6ED6E2B4:				; CODE XREF: sub_6ED6E1C0+20Fj
					; sub_6ED6E1C0+2A1j ...
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_66]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED6E2C5:				; CODE XREF: sub_6ED6E1C0+46j
		mov	ecx, [edx]
		cmp	ecx, 1
		jz	short loc_6ED6E2F1
		mov	edx, [edx+4]
		mov	[esp+4], eax
		mov	eax, [ebp+var_60]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+8], edx
		mov	[esp], eax
		call	sub_6ED96400
		mov	ecx, [ebp+var_60]
		mov	edx, [ecx]
		mov	eax, [edx+8]

loc_6ED6E2F1:				; CODE XREF: sub_6ED6E1C0+10Aj
		mov	ecx, [ebp+var_60]
		sub	eax, 1
		mov	[ebp+var_6C], eax
		lea	eax, [eax+eax*2]
		shl	eax, 2
		add	eax, [ecx]
		mov	eax, [eax+18h]
		mov	[ebp+var_64], eax
		mov	eax, [edx+4]
		cmp	[ebp+var_6C], eax
		jg	loc_6ED6E575
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_6ED6E327
		mov	edx, eax
		sar	edx, 1
		cmp	[ebp+var_6C], edx
		jl	loc_6ED6E575

loc_6ED6E327:				; CODE XREF: sub_6ED6E1C0+158j
					; sub_6ED6E1C0+3E0j
		mov	edx, [ebp+var_6C]
		mov	ecx, [ebp+var_60]
		mov	[esp+8], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], edx
		mov	[esp], ecx
		call	sub_6ED96400
		movzx	eax, byte ptr [ebp+var_64]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_65], al
		mov	eax, [edx+74h]
		mov	edx, [eax]
		mov	edx, [edx+8]
		test	edx, edx
		jz	loc_6ED6E210	; jumptable 6ED6E291 default case
		mov	[esp], eax
		call	sub_6ED943D0
		mov	ecx, [eax+4]
		mov	[ebp+var_80], ecx
		mov	eax, [eax]
		cmp	eax, offset sub_6ED60FB0
		mov	[ebp+var_70], eax
		jz	loc_6ED6E740

loc_6ED6E37C:				; CODE XREF: sub_6ED6E1C0+582j
					; sub_6ED6E1C0+5A7j
		test	byte ptr [ebp+var_70], 1
		jnz	loc_6ED6E5A5
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_80]

loc_6ED6E38C:				; CODE XREF: sub_6ED6E1C0+3F7j
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	[ebp+var_70]
		test	al, al
		jnz	loc_6ED6E210	; jumptable 6ED6E291 default case
		movsx	eax, [ebp+var_65]
		mov	dword ptr [esp+4], offset sub_6ED6E1C0
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED58610
		mov	[ebp+var_66], 0
		jmp	loc_6ED6E2B4
; ---------------------------------------------------------------------------

loc_6ED6E3D4:				; CODE XREF: sub_6ED6E1C0+DBj
					; DATA XREF: .rdata:off_6EDA0E04o
		mov	edx, [ebp+arg_0] ; jumptable 6ED6E29B case 6
		mov	eax, [edx+8Ch]
		test	eax, eax
		jz	loc_6ED6E2B0	; jumptable 6ED6E29B cases 7-11
		mov	eax, [eax]
		mov	eax, [eax+20h]
		mov	[esp], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[ebp+var_74], eax
		call	sub_6ED59310
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+8Ch]
		mov	[esp+4], eax
		mov	[esp], edx
		call	[ebp+var_74]
		test	al, al
		jnz	loc_6ED6E2B0	; jumptable 6ED6E29B cases 7-11
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_10]
		mov	eax, [edx+8Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx+24h]
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_10]
		mov	[ebp+var_58], 2
		sub	esp, 4
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_6ED60A80
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_66], 0
		jmp	loc_6ED6E2B4
; ---------------------------------------------------------------------------

loc_6ED6E466:				; CODE XREF: sub_6ED6E1C0+DBj
					; DATA XREF: .rdata:off_6EDA0E04o
		mov	dword ptr [esp+4], 0FFFFFFFFh ;	jumptable 6ED6E29B case	0
		mov	dword ptr [esp], offset	aLetterIsExpect	; "letter is expected"
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_58], 1
		mov	[ebp+var_14], eax
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED60A80
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		mov	[ebp+var_66], 0
		jnz	loc_6ED6E2B4
		mov	eax, [ebp+var_14]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_66], 0
		jmp	loc_6ED6E2B4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6E4D0:				; CODE XREF: sub_6ED6E1C0+EAj
		mov	eax, [eax]
		mov	eax, [eax+2Ch]
		mov	[esp], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[ebp+var_7C], eax
		call	sub_6ED59310
		mov	ecx, [ebp+arg_0]
		mov	[esp], ecx
		mov	[ebp+var_78], eax
		call	sub_6ED59250
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+7Ch]
		mov	ecx, [ebp+var_78]
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[esp+8], ecx
		call	[ebp+var_7C]
		test	al, al
		jnz	loc_6ED6E2B0	; jumptable 6ED6E29B cases 7-11
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_C]
		mov	eax, [edx+7Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx+34h]
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_C]
		mov	[ebp+var_58], 3
		sub	esp, 4
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_6ED60A80
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_66], 0
		jmp	loc_6ED6E2B4
; ---------------------------------------------------------------------------

loc_6ED6E560:				; CODE XREF: sub_6ED6E1C0+D1j
					; DATA XREF: .rdata:off_6EDA0DDCo
		mov	eax, [ebp+arg_0] ; jumptable 6ED6E291 cases 1-3
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED5BC00
		nop
		jmp	loc_6ED6E210	; jumptable 6ED6E291 default case
; ---------------------------------------------------------------------------

loc_6ED6E575:				; CODE XREF: sub_6ED6E1C0+14Ej
					; sub_6ED6E1C0+161j
		mov	eax, [ebp+var_6C]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0Ch
		mov	dword ptr [esp], 1Ch
		mov	[esp+4], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN11QVectorData4growEiiib
		jmp	loc_6ED6E327
; ---------------------------------------------------------------------------

loc_6ED6E5A5:				; CODE XREF: sub_6ED6E1C0+1C0j
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_80]
		mov	ecx, [ebp+var_70]
		mov	edx, [eax]
		mov	edx, [edx+ecx-1]
		mov	[ebp+var_70], edx
		jmp	loc_6ED6E38C
; ---------------------------------------------------------------------------

loc_6ED6E5BC:				; CODE XREF: sub_6ED6E1C0+D1j
					; DATA XREF: .rdata:off_6EDA0DDCo
		mov	eax, [ebp+arg_0] ; jumptable 6ED6E291 case 7
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED65FC0
		test	al, al
		jnz	loc_6ED6E210	; jumptable 6ED6E291 default case
		mov	dword ptr [esp+0Ch], 7

loc_6ED6E5DE:				; CODE XREF: sub_6ED6E1C0+4F6j
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED6E1C0
		mov	dword ptr [esp+8], 0
		mov	[esp], edx
		call	sub_6ED58610
		mov	[ebp+var_66], 0
		jmp	loc_6ED6E2B4
; ---------------------------------------------------------------------------

loc_6ED6E602:				; CODE XREF: sub_6ED6E1C0+D1j
					; DATA XREF: .rdata:off_6EDA0DDCo
		mov	edx, [ebp+arg_0] ; jumptable 6ED6E291 case 6
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED6BFC0
		test	al, al
		jnz	loc_6ED6E210	; jumptable 6ED6E291 default case
		mov	dword ptr [esp+0Ch], 6

loc_6ED6E624:				; CODE XREF: sub_6ED6E1C0+546j
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED6E1C0
		mov	dword ptr [esp+8], 0
		mov	[esp], ecx
		call	sub_6ED58610
		mov	[ebp+var_66], 0
		jmp	loc_6ED6E2B4
; ---------------------------------------------------------------------------

loc_6ED6E648:				; CODE XREF: sub_6ED6E1C0+D1j
					; DATA XREF: .rdata:off_6EDA0DDCo
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6E291 case 5
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED64F30
		test	al, al
		jnz	loc_6ED6E210	; jumptable 6ED6E291 default case
		mov	dword ptr [esp+0Ch], 5

loc_6ED6E66A:				; CODE XREF: sub_6ED6E1C0+522j
		mov	eax, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED6E1C0
		mov	dword ptr [esp+8], 0
		mov	[esp], eax
		call	sub_6ED58610
		mov	[ebp+var_66], 0
		jmp	loc_6ED6E2B4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6E690:				; CODE XREF: sub_6ED6E1C0+D1j
					; DATA XREF: .rdata:off_6EDA0DDCo
		mov	eax, [ebp+arg_0] ; jumptable 6ED6E291 case 4
		mov	byte ptr [eax+60h], 0
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED69420
		test	al, al
		jnz	loc_6ED6E210	; jumptable 6ED6E291 default case
		mov	dword ptr [esp+0Ch], 4
		jmp	loc_6ED6E5DE
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6E6C0:				; CODE XREF: sub_6ED6E1C0+D1j
					; DATA XREF: .rdata:off_6EDA0DDCo
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6E291 case 8
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED6CA30
		test	al, al
		jnz	loc_6ED6E210	; jumptable 6ED6E291 default case
		mov	dword ptr [esp+0Ch], 8
		jmp	short loc_6ED6E66A
; ---------------------------------------------------------------------------

loc_6ED6E6E4:				; CODE XREF: sub_6ED6E1C0+D1j
					; DATA XREF: .rdata:off_6EDA0DDCo
		mov	edx, [ebp+arg_0] ; jumptable 6ED6E291 case 9
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED67AD0
		test	al, al
		jnz	loc_6ED6E210	; jumptable 6ED6E291 default case
		mov	dword ptr [esp+0Ch], 9
		jmp	loc_6ED6E624
; ---------------------------------------------------------------------------

loc_6ED6E70B:				; CODE XREF: sub_6ED6E1C0+6Ej
		movsx	eax, [ebp+var_65]
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED6E1C0
		mov	dword ptr [esp+8], 0
		mov	[esp+0Ch], eax
		mov	[esp], ecx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED60E40
		mov	[ebp+var_66], 0
		jmp	loc_6ED6E2B4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6E740:				; CODE XREF: sub_6ED6E1C0+1B6j
		test	ecx, ecx
		jnz	loc_6ED6E37C
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_28]
		mov	edx, [ecx+74h]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_6ED94310
		sub	esp, 4
		jmp	loc_6ED6E37C
sub_6ED6E1C0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED6E76C	proc near		; DATA XREF: sub_6ED6E1C0+20o
		add	ebp, 8
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-84h], edx
		jz	short loc_6ED6E7AC
		cmp	eax, 2
		jz	short loc_6ED6E7B1
		lea	eax, [ebp-14h]

loc_6ED6E788:				; CODE XREF: sub_6ED6E76C+43j
					; sub_6ED6E76C+48j
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-84h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED6E7AC:				; CODE XREF: sub_6ED6E76C+12j
		lea	eax, [ebp-10h]
		jmp	short loc_6ED6E788
; ---------------------------------------------------------------------------

loc_6ED6E7B1:				; CODE XREF: sub_6ED6E76C+17j
		lea	eax, [ebp-0Ch]
		jmp	short loc_6ED6E788
sub_6ED6E76C	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED6E7C0	proc near		; CODE XREF: sub_6ED6F330+2BEp
					; DATA XREF: sub_6ED6E7C0+396o	...

var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_91		= byte ptr -91h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_85		= byte ptr -85h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= byte ptr -7Ch
var_78		= dword	ptr -78h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_48		= byte ptr -48h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= byte ptr -24h
var_20		= byte ptr -20h
var_1C		= byte ptr -1Ch
var_18		= byte ptr -18h
var_14		= dword	ptr -14h
var_10		= byte ptr -10h
var_A		= word ptr -0Ah
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0E8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_5C], eax
		lea	eax, [ebp+var_7C]
		mov	[ebp+var_64], offset sub_6ED997C0
		mov	[ebp+var_60], offset word_6ED9A8CA
		mov	[ebp+var_58], offset sub_6ED6F233
		mov	[ebp+var_54], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+74h]
		test	edx, edx
		mov	[ebp+var_8C], edx
		jz	short loc_6ED6E80F
		mov	edx, [edx]
		mov	eax, [edx+8]
		test	eax, eax
		jnz	loc_6ED6E9D4

loc_6ED6E80F:				; CODE XREF: sub_6ED6E7C0+40j
		mov	eax, [ebp+arg_0]
		mov	edx, ds:_ZN7QString11shared_nullE
		cmp	[eax+2Ch], edx
		mov	byte ptr [eax+7Ah], 0
		mov	[ebp+var_80], edx
		jz	short loc_6ED6E86A
		mov	[ebp+var_28], edx
		lock inc dword ptr [edx]
		setnz	al
		lea	eax, [ebp+var_28]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_78], 3
		add	eax, 2Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_28]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED6E86A
		mov	eax, [ebp+var_28]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED6E86A:				; CODE XREF: sub_6ED6E7C0+62j
					; sub_6ED6E7C0+95j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_80]
		cmp	edx, [eax+28h]
		jz	short loc_6ED6E8B1
		mov	[ebp+var_2C], edx
		mov	eax, ds:_ZN7QString11shared_nullE
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_2C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_78], 2
		add	eax, 28h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_2C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED6EFD3

loc_6ED6E8B1:				; CODE XREF: sub_6ED6E7C0+B3j
		mov	[ebp+var_85], 0

loc_6ED6E8B8:				; CODE XREF: sub_6ED6E7C0+2D3j
					; sub_6ED6E7C0+382j ...
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_0]
		add	eax, 18h
		mov	[ebp+var_98], eax
		mov	eax, [ebp+arg_0]
		add	edx, 2Ch
		add	ecx, 28h
		mov	[ebp+var_A4], edx
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_A0], ecx
		mov	ecx, [ebp+arg_0]
		add	eax, 70h
		mov	[ebp+var_AC], eax
		mov	eax, ds:_ZN7QStringaSERKS_
		add	edx, 30h
		add	ecx, 34h
		mov	[ebp+var_B8], edx
		mov	[ebp+var_B4], ecx
		mov	[ebp+var_A8], eax
		mov	[ebp+var_B0], eax

loc_6ED6E911:				; CODE XREF: sub_6ED6E7C0+3CAj
					; sub_6ED6E7C0+3D3j ...
		cmp	[ebp+var_85], 3	; jumptable 6ED6EB93 default case
		jz	loc_6ED6ECA0
		jg	loc_6ED6EBA0
		cmp	[ebp+var_85], 0FFh
		jz	loc_6ED6EC30

loc_6ED6E931:				; CODE XREF: sub_6ED6E7C0+3F0j
		movsx	ecx, [ebp+var_85]

loc_6ED6E938:				; CODE XREF: sub_6ED6E7C0+46Aj
					; sub_6ED6E7C0+50Aj
		mov	edx, [ebp+arg_0]
		movzx	eax, word ptr [edx+98h]
		mov	edx, eax
		or	edx, 1
		cmp	dx, 0FFFFh
		jz	loc_6ED6F064
		cmp	ax, 9
		jz	loc_6ED6EB77
		cmp	ax, 20h
		jz	loc_6ED6EB77
		cmp	ax, 0Dh
		jz	loc_6ED6EB77
		cmp	ax, 0Ah
		jz	loc_6ED6EB77
		cmp	ax, 44h
		mov	edx, 1
		jz	loc_6ED6EB79
		cmp	ax, 53h
		jz	loc_6ED6ECD0
		cmp	ax, 50h
		jz	loc_6ED6ECD0
		cmp	ax, 5Bh
		mov	edx, 3
		jz	loc_6ED6EB79
		cmp	ax, 5Dh
		mov	dl, 4
		jz	loc_6ED6EB79
		cmp	ax, 25h
		mov	dl, 5
		jz	loc_6ED6EB79
		xor	edx, edx
		cmp	ax, 3Eh
		setnz	dl
		add	edx, 6
		jmp	loc_6ED6EB79
; ---------------------------------------------------------------------------

loc_6ED6E9D4:				; CODE XREF: sub_6ED6E7C0+49j
		mov	ecx, [edx]
		cmp	ecx, 1
		jz	short loc_6ED6EA06
		mov	edx, [edx+4]
		mov	[esp+4], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+8], edx
		mov	edx, [ebp+var_8C]
		mov	[esp], edx
		call	sub_6ED96400
		mov	ecx, [ebp+var_8C]
		mov	edx, [ecx]
		mov	eax, [edx+8]

loc_6ED6EA06:				; CODE XREF: sub_6ED6E7C0+219j
		mov	ecx, [ebp+var_8C]
		sub	eax, 1
		mov	[ebp+var_90], eax
		lea	eax, [eax+eax*2]
		shl	eax, 2
		add	eax, [ecx]
		mov	eax, [eax+18h]
		mov	[ebp+var_84], eax
		mov	eax, [edx+4]
		cmp	[ebp+var_90], eax
		jg	loc_6ED6EFA0
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_6ED6EA50
		mov	edx, eax
		sar	edx, 1
		cmp	[ebp+var_90], edx
		jl	loc_6ED6EFA0
		nop
		lea	esi, [esi+0]

loc_6ED6EA50:				; CODE XREF: sub_6ED6E7C0+279j
					; sub_6ED6E7C0+80Ej
		mov	edx, [ebp+var_90]
		mov	ecx, [ebp+var_8C]
		mov	[esp+8], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+4], edx
		mov	[esp], ecx
		call	sub_6ED96400
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [ebp+var_84]
		mov	edx, [edx+74h]
		mov	[ebp+var_85], al
		mov	[ebp+var_9C], edx
		mov	eax, [edx]
		mov	edx, [eax+8]
		test	edx, edx
		jz	loc_6ED6E8B8
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_6ED6EAC1
		mov	eax, [eax+4]
		mov	ecx, [ebp+var_9C]
		mov	[esp+4], edx
		mov	[esp+8], eax
		mov	[esp], ecx
		call	sub_6ED96400
		mov	edx, [ebp+var_9C]
		mov	eax, [edx]

loc_6ED6EAC1:				; CODE XREF: sub_6ED6E7C0+2DEj
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED6EAEB
		mov	edx, [eax+4]
		mov	ecx, [ebp+var_9C]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_6ED96400

loc_6ED6EAEB:				; CODE XREF: sub_6ED6E7C0+306j
		mov	edx, [ebp+var_9C]
		mov	eax, [edx]
		mov	edx, [eax+8]
		lea	edx, [edx+edx*2-3]
		lea	eax, [eax+edx*4]
		mov	ecx, [eax+14h]
		mov	[ebp+var_C0], ecx
		mov	eax, [eax+10h]
		cmp	eax, offset sub_6ED60FB0
		mov	[ebp+var_BC], eax
		jz	loc_6ED6F096

loc_6ED6EB1A:				; CODE XREF: sub_6ED6E7C0+8D8j
					; sub_6ED6E7C0+8FDj
		test	byte ptr [ebp+var_BC], 1
		jnz	loc_6ED6EFF2
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_C0]

loc_6ED6EB30:				; CODE XREF: sub_6ED6E7C0+84Dj
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	[ebp+var_BC]
		test	al, al
		jnz	loc_6ED6E8B8

loc_6ED6EB48:				; CODE XREF: sub_6ED6E7C0+7DAj
		movsx	eax, [ebp+var_85]
		mov	[esp+0Ch], eax

loc_6ED6EB53:				; CODE XREF: sub_6ED6E7C0+6C0j
		mov	eax, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED6E7C0
		mov	dword ptr [esp+8], 0
		mov	[esp], eax
		call	sub_6ED58610
		mov	[ebp+var_91], 0
		jmp	short loc_6ED6EBBD
; ---------------------------------------------------------------------------

loc_6ED6EB77:				; CODE XREF: sub_6ED6E7C0+195j
					; sub_6ED6E7C0+19Fj ...
		xor	edx, edx

loc_6ED6EB79:				; CODE XREF: sub_6ED6E7C0+1C2j
					; sub_6ED6E7C0+1E5j ...
		movzx	ecx, ds:byte_6EDA1600[edx+ecx*8]
		cmp	cl, 0Dh		; switch 14 cases
		mov	[ebp+var_85], cl
		ja	loc_6ED6E911	; jumptable 6ED6EB93 default case
		movzx	eax, cl
		jmp	ds:off_6EDA0EA0[eax*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6EBA0:				; CODE XREF: sub_6ED6E7C0+15Ej
		cmp	[ebp+var_85], 7
		jz	short loc_6ED6EBD1
		cmp	[ebp+var_85], 0Dh
		jnz	loc_6ED6E931
		mov	[ebp+var_91], 1

loc_6ED6EBBD:				; CODE XREF: sub_6ED6E7C0+3B5j
					; sub_6ED6E7C0+4BAj ...
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_91]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED6EBD1:				; CODE XREF: sub_6ED6E7C0+3E7j
		mov	eax, [ebp+arg_0]
		cmp	byte ptr [eax+7Ah], 0
		jnz	short loc_6ED6EC25
		mov	edx, [eax+8Ch]
		test	edx, edx
		jz	short loc_6ED6EC25
		mov	edx, [eax+8Ch]
		mov	ecx, [ebp+var_A4]
		mov	byte ptr [eax+7Ah], 1
		mov	eax, [edx]
		mov	[esp+0Ch], ecx
		mov	ecx, [ebp+var_A0]
		mov	[esp], edx
		mov	[esp+8], ecx
		mov	ecx, [ebp+var_98]
		mov	[esp+4], ecx
		mov	eax, [eax+8]
		mov	[ebp+var_78], 0FFFFFFFFh
		call	eax
		test	al, al
		jz	loc_6ED6F012

loc_6ED6EC25:				; CODE XREF: sub_6ED6E7C0+418j
					; sub_6ED6E7C0+422j
		mov	ecx, 8
		jmp	loc_6ED6E938
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6EC30:				; CODE XREF: sub_6ED6E7C0+16Bj
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aErrorOccurre_3	; "error occurred while	parsing	document t"...
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_78], 8
		mov	[ebp+var_14], eax
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED60A80
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		mov	[ebp+var_91], 0
		jnz	loc_6ED6EBBD
		mov	eax, [ebp+var_14]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_91], 0
		jmp	loc_6ED6EBBD
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6ECA0:				; CODE XREF: sub_6ED6E7C0+158j
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED59250
		mov	ecx, [ebp+var_98]
		mov	[esp], ecx
		mov	[esp+4], eax
		call	ds:_ZN7QStringaSERKS_
		mov	ecx, 3
		jmp	loc_6ED6E938
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6ECD0:				; CODE XREF: sub_6ED6E7C0+1CCj
					; sub_6ED6E7C0+1D6j
		mov	edx, 2
		jmp	loc_6ED6EB79
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6ECE0:				; CODE XREF: sub_6ED6E7C0+3D3j
					; DATA XREF: .rdata:off_6EDA0EA0o
		lea	eax, [ebp+var_30] ; jumptable 6ED6EB93 case 1
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aDoctype_0 ; "DOCTYPE"
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZN7QString10fromLatin1EPKci
		mov	ecx, [ebp+var_AC]
		lea	edx, [ebp+var_30]
		mov	[ebp+var_78], 1
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], ecx
		call	[ebp+var_B0]
		mov	eax, [ebp+var_30]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED6ED43
		mov	eax, [ebp+var_30]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED6ED43:				; CODE XREF: sub_6ED6E7C0+56Ej
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED64390
		test	al, al
		jnz	loc_6ED6E911	; jumptable 6ED6EB93 default case
		mov	dword ptr [esp+0Ch], 1
		jmp	loc_6ED6EEAA
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6ED70:				; CODE XREF: sub_6ED6E7C0+3D3j
					; DATA XREF: .rdata:off_6EDA0EA0o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6EB93 case 13
		mov	eax, [ecx+8Ch]
		test	eax, eax
		jz	short loc_6ED6EDE0
		cmp	byte ptr [ecx+7Ah], 0
		jnz	short loc_6ED6EDC7
		mov	byte ptr [ecx+7Ah], 1
		mov	ecx, [ebp+var_A4]
		mov	edx, [eax]
		mov	[esp], eax
		mov	[esp+0Ch], ecx
		mov	ecx, [ebp+var_A0]
		mov	[esp+8], ecx
		mov	ecx, [ebp+var_98]
		mov	[esp+4], ecx
		mov	eax, [edx+8]
		mov	[ebp+var_78], 0FFFFFFFFh
		call	eax
		test	al, al
		jz	loc_6ED6F1DA
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8Ch]

loc_6ED6EDC7:				; CODE XREF: sub_6ED6E7C0+5C1j
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+0Ch]
		mov	[ebp+var_78], 0FFFFFFFFh
		call	eax
		test	al, al
		jz	loc_6ED6F188

loc_6ED6EDE0:				; CODE XREF: sub_6ED6E7C0+5BBj
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED5BC00
		nop
		jmp	loc_6ED6E911	; jumptable 6ED6EB93 default case
; ---------------------------------------------------------------------------

loc_6ED6EDF5:				; CODE XREF: sub_6ED6E7C0+3D3j
					; DATA XREF: .rdata:off_6EDA0EA0o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6EB93 case 12
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED61030
		test	al, al
		jnz	loc_6ED6E911	; jumptable 6ED6EB93 default case
		mov	dword ptr [esp+0Ch], 0Ch
		jmp	loc_6ED6EEAA
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6EE20:				; CODE XREF: sub_6ED6E7C0+3D3j
					; DATA XREF: .rdata:off_6EDA0EA0o
		mov	edx, [ebp+arg_0] ; jumptable 6ED6EB93 case 10
		mov	eax, [edx+8]
		cmp	dword ptr [eax+3Ch], 2
		jg	loc_6ED6F0CF
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED6E1C0
		test	al, al
		jnz	loc_6ED6E911	; jumptable 6ED6EB93 default case
		mov	dword ptr [esp+0Ch], 0Ah
		jmp	loc_6ED6EF56
; ---------------------------------------------------------------------------

loc_6ED6EE57:				; CODE XREF: sub_6ED6E7C0+3D3j
					; DATA XREF: .rdata:off_6EDA0EA0o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6EB93 case 9
		mov	dword ptr [ecx+6Ch], 3
		mov	[esp], ecx
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED66E40
		test	al, al
		jnz	loc_6ED6E911	; jumptable 6ED6EB93 default case
		mov	dword ptr [esp+0Ch], 9
		jmp	loc_6ED6EB53
; ---------------------------------------------------------------------------

loc_6ED6EE85:				; CODE XREF: sub_6ED6E7C0+3D3j
					; DATA XREF: .rdata:off_6EDA0EA0o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6EB93 cases 7,8
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED61030
		test	al, al
		jnz	loc_6ED6E911	; jumptable 6ED6EB93 default case
		movsx	eax, [ebp+var_85]
		mov	[esp+0Ch], eax

loc_6ED6EEAA:				; CODE XREF: sub_6ED6E7C0+5A5j
					; sub_6ED6E7C0+657j ...
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED6E7C0
		mov	dword ptr [esp+8], 0
		mov	[esp], edx
		call	sub_6ED58610
		mov	[ebp+var_91], 0
		jmp	loc_6ED6EBBD
; ---------------------------------------------------------------------------

loc_6ED6EED1:				; CODE XREF: sub_6ED6E7C0+3D3j
					; DATA XREF: .rdata:off_6EDA0EA0o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6EB93 case 5
		mov	byte ptr [eax+68h], 0
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED64710
		test	al, al
		jz	loc_6ED6F0C2
		mov	ecx, [ebp+var_A0]
		mov	eax, [ebp+var_B8]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+4], ecx
		mov	[esp], eax
		call	[ebp+var_A8]
		mov	edx, [ebp+var_A4]
		mov	ecx, [ebp+var_B4]
		mov	[esp+4], edx
		mov	[esp], ecx
		call	[ebp+var_A8]
		jmp	loc_6ED6E911	; jumptable 6ED6EB93 default case
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6EF30:				; CODE XREF: sub_6ED6E7C0+3D3j
					; DATA XREF: .rdata:off_6EDA0EA0o
		mov	edx, [ebp+arg_0] ; jumptable 6ED6EB93 case 3
		mov	byte ptr [edx+61h], 0
		mov	[esp], edx
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED656F0
		test	al, al
		jnz	loc_6ED6E911	; jumptable 6ED6EB93 default case
		mov	dword ptr [esp+0Ch], 3

loc_6ED6EF56:				; CODE XREF: sub_6ED6E7C0+692j
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED6E7C0
		mov	dword ptr [esp+8], 0
		mov	[esp], ecx
		call	sub_6ED58610
		mov	[ebp+var_91], 0
		jmp	loc_6ED6EBBD
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6EF80:				; CODE XREF: sub_6ED6E7C0+3D3j
					; DATA XREF: .rdata:off_6EDA0EA0o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6EB93 cases 2,4,6,11
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED60FB0
		test	al, al
		jnz	loc_6ED6E911	; jumptable 6ED6EB93 default case
		jmp	loc_6ED6EB48
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6EFA0:				; CODE XREF: sub_6ED6E7C0+26Fj
					; sub_6ED6E7C0+285j
		mov	eax, [ebp+var_90]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0Ch
		mov	dword ptr [esp], 1Ch
		mov	[esp+4], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZN11QVectorData4growEiiib
		jmp	loc_6ED6EA50
; ---------------------------------------------------------------------------

loc_6ED6EFD3:				; CODE XREF: sub_6ED6E7C0+EBj
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_85], 0
		jmp	loc_6ED6E8B8
; ---------------------------------------------------------------------------

loc_6ED6EFF2:				; CODE XREF: sub_6ED6E7C0+361j
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_C0]
		mov	ecx, [ebp+var_BC]
		mov	edx, [eax]
		mov	edx, [edx+ecx-1]
		mov	[ebp+var_BC], edx
		jmp	loc_6ED6EB30
; ---------------------------------------------------------------------------

loc_6ED6F012:				; CODE XREF: sub_6ED6E7C0+45Fj
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_10]
		mov	eax, [edx+8Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx+24h]
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_10]
		mov	[ebp+var_78], 9
		sub	esp, 4
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_6ED60A80
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_91], 0
		jmp	loc_6ED6EBBD
; ---------------------------------------------------------------------------

loc_6ED6F064:				; CODE XREF: sub_6ED6E7C0+18Bj
		mov	[esp+0Ch], ecx
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED6E7C0
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED60E40
		mov	[ebp+var_91], 0
		jmp	loc_6ED6EBBD
; ---------------------------------------------------------------------------

loc_6ED6F096:				; CODE XREF: sub_6ED6E7C0+354j
		test	ecx, ecx
		jnz	loc_6ED6EB1A
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_48]
		mov	edx, [ecx+74h]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_6ED94310
		sub	esp, 4
		jmp	loc_6ED6EB1A
; ---------------------------------------------------------------------------

loc_6ED6F0C2:				; CODE XREF: sub_6ED6E7C0+729j
		mov	dword ptr [esp+0Ch], 5
		jmp	loc_6ED6EEAA
; ---------------------------------------------------------------------------

loc_6ED6F0CF:				; CODE XREF: sub_6ED6E7C0+66Aj
		lea	ecx, [ebp+var_18]
		mov	[ebp+var_A], 20h
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aDtdParsingExce ; "DTD parsing exceeded recursion limit of"...
		mov	[esp], ecx
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZN7QString10fromLatin1EPKci
		lea	edx, [ebp+var_A]
		lea	eax, [ebp+var_1C]
		mov	[ebp+var_78], 7
		sub	esp, 4
		mov	[esp+18h], edx
		lea	edx, [ebp+var_18]
		mov	dword ptr [esp+14h], 0Ah
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+8], 2
		mov	dword ptr [esp+0Ch], 0
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK7QString3argExiiRK5QChar
		mov	ecx, [ebp+arg_0]
		sub	esp, 4
		lea	eax, [ebp+var_1C]
		mov	[esp+4], eax
		mov	[ebp+var_78], 6
		mov	[esp], ecx
		call	sub_6ED60A80
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_78], 7
		call	sub_6ED94560
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_91], 0
		jmp	loc_6ED6EBBD
; ---------------------------------------------------------------------------

loc_6ED6F188:				; CODE XREF: sub_6ED6E7C0+61Aj
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_24]
		mov	eax, [edx+8Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx+24h]
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_24]
		mov	[ebp+var_78], 4
		sub	esp, 4
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_6ED60A80
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_91], 0
		jmp	loc_6ED6EBBD
; ---------------------------------------------------------------------------

loc_6ED6F1DA:				; CODE XREF: sub_6ED6E7C0+5F8j
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+8Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	eax, [edx+24h]
		mov	[ebp+var_78], 0FFFFFFFFh
		call	eax
		lea	edx, [ebp+var_20]
		mov	[ebp+var_78], 5
		push	ecx
		mov	ecx, [ebp+arg_0]
		mov	[esp+4], edx
		mov	[esp], ecx
		call	sub_6ED60A80
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_91], 0
		jmp	loc_6ED6EBBD
sub_6ED6E7C0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED6F233	proc near		; DATA XREF: sub_6ED6E7C0+20o
		add	ebp, 8
		mov	eax, [ebp-78h]
		mov	edx, [ebp-74h]
		cmp	eax, 1
		mov	[ebp-0C4h], edx
		jz	short loc_6ED6F2A3
		cmp	eax, 2
		jz	loc_6ED6F31A
		cmp	eax, 3
		jz	loc_6ED6F312
		cmp	eax, 4
		lea	esi, [esi+0]
		jz	loc_6ED6F30D
		cmp	eax, 5
		jz	short loc_6ED6F2D4
		cmp	eax, 6
		xchg	ax, ax
		jz	short loc_6ED6F2E6
		cmp	eax, 7
		jz	short loc_6ED6F2AD
		cmp	eax, 8
		jz	short loc_6ED6F2A8
		lea	eax, [ebp-30h]

loc_6ED6F27F:				; CODE XREF: sub_6ED6F233+73j
					; sub_6ED6F233+78j ...
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-0C4h]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED6F2A3:				; CODE XREF: sub_6ED6F233+12j
		lea	eax, [ebp-2Ch]
		jmp	short loc_6ED6F27F
; ---------------------------------------------------------------------------

loc_6ED6F2A8:				; CODE XREF: sub_6ED6F233+47j
		lea	eax, [ebp-10h]
		jmp	short loc_6ED6F27F
; ---------------------------------------------------------------------------

loc_6ED6F2AD:				; CODE XREF: sub_6ED6F233+42j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560
		mov	edx, [ebp-0C4h]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED6F2D4:				; CODE XREF: sub_6ED6F233+36j
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560

loc_6ED6F2E6:				; CODE XREF: sub_6ED6F233+3Dj
		lea	eax, [ebp-18h]

loc_6ED6F2E9:				; CODE XREF: sub_6ED6F233+DDj
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560
		mov	eax, [ebp-0C4h]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED6F30D:				; CODE XREF: sub_6ED6F233+2Dj
		lea	eax, [ebp-20h]
		jmp	short loc_6ED6F2E9
; ---------------------------------------------------------------------------

loc_6ED6F312:				; CODE XREF: sub_6ED6F233+20j
		lea	eax, [ebp-24h]
		jmp	loc_6ED6F27F
; ---------------------------------------------------------------------------

loc_6ED6F31A:				; CODE XREF: sub_6ED6F233+17j
		lea	eax, [ebp-28h]
		lea	esi, [esi+0]
		jmp	loc_6ED6F27F
sub_6ED6F233	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED6F330	proc near		; CODE XREF: sub_6ED6FDD0+11Dp
					; DATA XREF: sub_6ED6F330+24Do	...

var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_AD		= byte ptr -0ADh
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_89		= byte ptr -89h
var_88		= dword	ptr -88h
var_81		= byte ptr -81h
var_80		= dword	ptr -80h
var_7C		= byte ptr -7Ch
var_78		= dword	ptr -78h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_48		= byte ptr -48h
var_34		= dword	ptr -34h
var_30		= byte ptr -30h
var_2C		= byte ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= byte ptr -14h
var_10		= byte ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_5C], eax
		lea	eax, [ebp+var_7C]
		mov	[ebp+var_64], offset sub_6ED997C0
		mov	[ebp+var_60], offset dword_6ED9A8E0
		mov	[ebp+var_58], offset sub_6ED6FD0F
		mov	[ebp+var_54], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+74h]
		test	edx, edx
		mov	[ebp+var_88], edx
		jz	short loc_6ED6F37F
		mov	edx, [edx]
		mov	eax, [edx+8]
		test	eax, eax
		jnz	loc_6ED6F470

loc_6ED6F37F:				; CODE XREF: sub_6ED6F330+40j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_81], 0
		mov	byte ptr [eax+78h], 1
		mov	byte ptr [eax+79h], 0

loc_6ED6F391:				; CODE XREF: sub_6ED6F330+1EEj
					; sub_6ED6F330+240j
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_0]
		mov	eax, ds:_ZN7QString17fromLatin1_helperEPKci
		add	edx, 1Ch
		add	ecx, 20h
		mov	[ebp+var_98], edx
		mov	[ebp+var_9C], ecx
		mov	[ebp+var_94], eax

loc_6ED6F3B4:				; CODE XREF: sub_6ED6F330+12Bj
					; sub_6ED6F330+134j ...
		movzx	eax, [ebp+var_81] ; jumptable 6ED6F464 default case
		add	eax, 1
		cmp	al, 0Ah
		jbe	loc_6ED6F5D7

loc_6ED6F3C6:				; CODE XREF: sub_6ED6F330+2A1j
					; sub_6ED6F330+2AAj
					; DATA XREF: ...
		movsx	edx, [ebp+var_81] ; jumptable 6ED6F5DA default case

loc_6ED6F3CD:				; CODE XREF: sub_6ED6F330+59Dj
					; sub_6ED6F330+5BBj ...
		mov	ecx, [ebp+arg_0]
		movzx	eax, word ptr [ecx+98h]
		mov	ecx, eax
		or	ecx, 1
		cmp	cx, 0FFFFh
		jz	loc_6ED6FB20
		cmp	ax, 9
		jz	loc_6ED6F9C4
		cmp	ax, 20h
		jz	loc_6ED6F9C4
		cmp	ax, 0Dh
		xchg	ax, ax
		jz	loc_6ED6F9C4
		cmp	ax, 0Ah
		jz	loc_6ED6F9C4
		cmp	ax, 3Ch
		mov	ecx, 1
		jz	short loc_6ED6F442
		cmp	ax, 3Fh
		mov	ecx, 2
		jz	short loc_6ED6F442
		cmp	ax, 21h
		mov	cl, 3
		jz	short loc_6ED6F442
		cmp	ax, 44h
		mov	cl, 4
		jz	short loc_6ED6F442
		xor	ecx, ecx
		cmp	ax, 2Dh
		setnz	cl
		add	ecx, 5

loc_6ED6F442:				; CODE XREF: sub_6ED6F330+E9j
					; sub_6ED6F330+F4j ...
		lea	eax, ds:0[edx*8]
		sub	eax, edx
		movzx	eax, ds:byte_6EDA19A0[ecx+eax]
		cmp	al, 8		; switch 9 cases
		mov	[ebp+var_81], al
		ja	loc_6ED6F3B4	; jumptable 6ED6F464 default case
		movzx	eax, al
		jmp	ds:off_6EDA0F38[eax*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6F470:				; CODE XREF: sub_6ED6F330+49j
		mov	ecx, [edx]
		cmp	ecx, 1
		jz	short loc_6ED6F4A2
		mov	edx, [edx+4]
		mov	[esp+4], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+8], edx
		mov	edx, [ebp+var_88]
		mov	[esp], edx
		call	sub_6ED96400
		mov	ecx, [ebp+var_88]
		mov	edx, [ecx]
		mov	eax, [edx+8]

loc_6ED6F4A2:				; CODE XREF: sub_6ED6F330+145j
		mov	ecx, [ebp+var_88]
		sub	eax, 1
		mov	[ebp+var_90], eax
		lea	eax, [eax+eax*2]
		shl	eax, 2
		add	eax, [ecx]
		mov	eax, [eax+18h]
		mov	[ebp+var_80], eax
		mov	eax, [edx+4]
		cmp	[ebp+var_90], eax
		jg	loc_6ED6F9D0
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_6ED6F4E4
		mov	edx, eax
		sar	edx, 1
		cmp	[ebp+var_90], edx
		jl	loc_6ED6F9D0

loc_6ED6F4E4:				; CODE XREF: sub_6ED6F330+1A2j
					; sub_6ED6F330+6CEj
		mov	edx, [ebp+var_90]
		mov	ecx, [ebp+var_88]
		mov	[esp+8], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+4], edx
		mov	[esp], ecx
		call	sub_6ED96400
		movzx	eax, byte ptr [ebp+var_80]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_81], al
		mov	eax, [edx+74h]
		mov	edx, [eax]
		mov	ecx, [edx+8]
		test	ecx, ecx
		jz	loc_6ED6F391
		mov	[esp], eax
		call	sub_6ED943D0
		mov	ecx, [eax+4]
		mov	[ebp+var_B8], ecx
		mov	eax, [eax]
		cmp	eax, offset sub_6ED60FB0
		mov	[ebp+var_AC], eax
		jz	loc_6ED6FB78

loc_6ED6F548:				; CODE XREF: sub_6ED6F330+84Aj
					; sub_6ED6F330+86Fj
		test	byte ptr [ebp+var_AC], 1
		jnz	loc_6ED6FAF1
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_B8]

loc_6ED6F55E:				; CODE XREF: sub_6ED6F330+7DCj
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	[ebp+var_AC]
		test	al, al
		jnz	loc_6ED6F391

loc_6ED6F576:				; CODE XREF: sub_6ED6F330+293j
		movsx	eax, [ebp+var_81]
		mov	dword ptr [esp+4], offset sub_6ED6F330
		mov	dword ptr [esp+8], 0
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED58610
		mov	[ebp+var_89], 0
		jmp	loc_6ED6F6E7
; ---------------------------------------------------------------------------

loc_6ED6F5A8:				; CODE XREF: sub_6ED6F330+134j
					; DATA XREF: .rdata:off_6EDA0F38o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED6F464 cases 7,8
		movzx	eax, byte ptr [ecx+78h]
		mov	[ecx+60h], al
		mov	[esp], ecx
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED69420
		test	al, al
		jz	short loc_6ED6F576
		movzx	eax, [ebp+var_81]
		add	eax, 1
		cmp	al, 0Ah		; switch 11 cases
		ja	loc_6ED6F3C6	; jumptable 6ED6F5DA default case

loc_6ED6F5D7:				; CODE XREF: sub_6ED6F330+90j
		movzx	eax, al
		jmp	ds:off_6EDA0F5C[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_6ED6F5E1:				; CODE XREF: sub_6ED6F330+134j
					; DATA XREF: .rdata:off_6EDA0F38o
		mov	edx, [ebp+arg_0] ; jumptable 6ED6F464 case 4
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED6E7C0
		test	al, al
		jnz	loc_6ED6F3B4	; jumptable 6ED6F464 default case
		mov	dword ptr [esp+0Ch], 4

loc_6ED6F603:				; CODE XREF: sub_6ED6F330+356j
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED6F330
		mov	dword ptr [esp+8], 0
		mov	[esp], ecx
		call	sub_6ED58610
		mov	[ebp+var_89], 0
		jmp	loc_6ED6F6E7
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6F630:				; CODE XREF: sub_6ED6F330+134j
					; DATA XREF: .rdata:off_6EDA0F38o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6F464 case 3
		mov	byte ptr [eax+78h], 0
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED5BC00
		jmp	loc_6ED6F3B4	; jumptable 6ED6F464 default case
; ---------------------------------------------------------------------------

loc_6ED6F648:				; CODE XREF: sub_6ED6F330+134j
					; DATA XREF: .rdata:off_6EDA0F38o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6F464 case 2
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED5BC00
		jmp	loc_6ED6F3B4	; jumptable 6ED6F464 default case
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6F660:				; CODE XREF: sub_6ED6F330+134j
					; DATA XREF: .rdata:off_6EDA0F38o
		mov	edx, [ebp+arg_0] ; jumptable 6ED6F464 case 1
		mov	byte ptr [edx+78h], 0
		mov	[esp], edx
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED60FB0
		test	al, al
		jnz	loc_6ED6F3B4	; jumptable 6ED6F464 default case
		mov	dword ptr [esp+0Ch], 1
		jmp	loc_6ED6F603
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6F690:				; CODE XREF: sub_6ED6F330+134j
					; DATA XREF: .rdata:off_6EDA0F38o
		mov	eax, [ebp+arg_0] ; jumptable 6ED6F464 cases 5,6
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED64F30
		test	al, al
		jnz	loc_6ED6F3B4	; jumptable 6ED6F464 default case
		movsx	eax, [ebp+var_81]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED6F330
		mov	dword ptr [esp+8], 0
		mov	[esp+0Ch], eax
		mov	[esp], edx
		call	sub_6ED58610
		mov	[ebp+var_89], 0
		jmp	short loc_6ED6F6E7
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6F6E0:				; CODE XREF: sub_6ED6F330+2AAj
					; DATA XREF: .rdata:off_6EDA0F5Co
		mov	[ebp+var_89], 1	; jumptable 6ED6F5DA case 10

loc_6ED6F6E7:				; CODE XREF: sub_6ED6F330+273j
					; sub_6ED6F330+2F5j ...
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_89]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6F700:				; CODE XREF: sub_6ED6F330+2AAj
					; DATA XREF: .rdata:off_6EDA0F5Co
		mov	edx, [ebp+arg_0] ; jumptable 6ED6F5DA case 8
		mov	eax, [edx+7Ch]
		test	eax, eax
		jz	loc_6ED6F9B3
		cmp	byte ptr [edx+78h], 0
		jz	loc_6ED6F960
		mov	edx, [edx+1Ch]
		mov	edx, [edx+8]
		test	edx, edx
		jz	loc_6ED6F960
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aVersion_0 ; "version='"
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		lea	edx, [ebp+var_18]
		mov	[esp], edx
		mov	[ebp+var_78], 5
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_98]
		mov	[esp+4], eax
		call	ds:_ZN7QString6appendERKS_
		mov	eax, [ebp+var_18]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED6FAE0
		mov	edx, [eax+8]

loc_6ED6F773:				; CODE XREF: sub_6ED6F330+7BCj
		add	edx, 1
		mov	[esp], edx
		mov	[ebp+var_78], 5
		call	ds:_ZN7QString4growEi
		lea	ecx, [ebp+var_18]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	ds:_ZN7QString7reallocEi
		mov	eax, [ebp+var_18]
		mov	edx, [eax+8]

loc_6ED6F79C:				; CODE XREF: sub_6ED6F330+7B6j
		mov	ecx, [eax+0Ch]
		mov	word ptr [ecx+edx*2], 27h
		add	edx, 1
		mov	[eax+8], edx
		mov	eax, [ebp+var_18]
		mov	edx, [eax+8]
		mov	eax, [eax+0Ch]
		mov	word ptr [eax+edx*2], 0
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+20h]
		mov	ecx, [eax+8]
		test	ecx, ecx
		jnz	loc_6ED6FA46

loc_6ED6F7CB:				; CODE XREF: sub_6ED6F330+7A5j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+24h]
		test	eax, eax
		jz	loc_6ED6FA20
		cmp	eax, 1
		jz	loc_6ED6FB52

loc_6ED6F7E2:				; CODE XREF: sub_6ED6F330+711j
					; sub_6ED6F330+843j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+7Ch]
		mov	eax, [eax]
		mov	eax, [eax+2Ch]
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aXml_1 ; "xml"
		mov	[ebp+var_78], 5
		mov	[ebp+var_B4], eax
		call	[ebp+var_94]
		mov	ecx, [ebp+arg_0]
		lea	edx, [ebp+var_18]
		mov	[ebp+var_28], eax
		mov	eax, [ecx+7Ch]
		lea	ecx, [ebp+var_28]
		mov	[esp+8], edx
		mov	[esp+4], ecx
		mov	[ebp+var_78], 4
		mov	[esp], eax
		call	[ebp+var_B4]
		mov	[ebp+var_AD], al
		mov	eax, [ebp+var_28]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED6FA03

loc_6ED6F84D:				; CODE XREF: sub_6ED6F330+6E6j
		cmp	[ebp+var_AD], 0
		jz	loc_6ED6FCA5
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED6F9B3
		mov	eax, [ebp+var_18]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED6F9B3
; ---------------------------------------------------------------------------

loc_6ED6F883:				; CODE XREF: sub_6ED6F330+2AAj
					; DATA XREF: .rdata:off_6EDA0F5Co
		mov	edx, [ebp+arg_0] ; jumptable 6ED6F5DA case 6
		mov	eax, [edx+8Ch]
		test	eax, eax
		jz	short loc_6ED6F8C8
		mov	eax, [eax]
		mov	eax, [eax+20h]
		mov	[esp], edx
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[ebp+var_A0], eax
		call	sub_6ED59310
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+8Ch]
		mov	[esp+4], eax
		mov	[esp], edx
		call	[ebp+var_A0]
		test	al, al
		jz	loc_6ED6FBFB

loc_6ED6F8C8:				; CODE XREF: sub_6ED6F330+55Ej
		mov	edx, 6
		jmp	loc_6ED6F3CD
; ---------------------------------------------------------------------------

loc_6ED6F8D2:				; CODE XREF: sub_6ED6F330+2AAj
					; DATA XREF: .rdata:off_6EDA0F5Co
		mov	edx, [ebp+arg_0] ; jumptable 6ED6F5DA case 5
		cmp	byte ptr [edx+79h], 0
		jnz	loc_6ED6FBA4
		mov	eax, [ebp+arg_0]
		mov	edx, 4
		mov	byte ptr [eax+79h], 0
		jmp	loc_6ED6F3CD
; ---------------------------------------------------------------------------

loc_6ED6F8F0:				; CODE XREF: sub_6ED6F330+2AAj
					; DATA XREF: .rdata:off_6EDA0F5Co
		mov	dword ptr [esp+4], 0FFFFFFFFh ;	jumptable 6ED6F5DA case	0
		mov	dword ptr [esp], offset	aErrorOccurre_2	; "error occurred while	parsing	element"
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_78], 1
		mov	[esp], edx
		mov	[ebp+var_34], eax
		lea	eax, [ebp+var_34]
		mov	[esp+4], eax
		call	sub_6ED60A80
		mov	eax, [ebp+var_34]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		mov	[ebp+var_89], 0
		jnz	loc_6ED6F6E7
		mov	eax, [ebp+var_34]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_89], 0
		jmp	loc_6ED6F6E7
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6F960:				; CODE XREF: sub_6ED6F330+3E2j
					; sub_6ED6F330+3F0j
		mov	eax, [eax]
		mov	edx, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	[esp], edx
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[ebp+var_A4], eax
		call	sub_6ED59310
		mov	ecx, [ebp+arg_0]
		mov	[esp], ecx
		mov	[ebp+var_A8], eax
		call	sub_6ED59250
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+7Ch]
		mov	ecx, [ebp+var_A8]
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[esp+8], ecx
		call	[ebp+var_A4]
		test	al, al
		jz	loc_6ED6FC4D

loc_6ED6F9B3:				; CODE XREF: sub_6ED6F330+3D8j
					; sub_6ED6F330+535j ...
		mov	eax, [ebp+arg_0]
		mov	edx, 8
		mov	byte ptr [eax+78h], 0
		jmp	loc_6ED6F3CD
; ---------------------------------------------------------------------------

loc_6ED6F9C4:				; CODE XREF: sub_6ED6F330+BAj
					; sub_6ED6F330+C4j ...
		xor	ecx, ecx
		jmp	loc_6ED6F442
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6F9D0:				; CODE XREF: sub_6ED6F330+198j
					; sub_6ED6F330+1AEj
		mov	eax, [ebp+var_90]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0Ch
		mov	dword ptr [esp], 1Ch
		mov	[esp+4], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZN11QVectorData4growEiiib
		jmp	loc_6ED6F4E4
; ---------------------------------------------------------------------------

loc_6ED6FA03:				; CODE XREF: sub_6ED6F330+517j
		mov	eax, [ebp+var_28]
		mov	[ebp+var_78], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED6F84D
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6FA20:				; CODE XREF: sub_6ED6F330+4A3j
		lea	eax, [ebp+var_20]
		lea	ecx, [ebp+var_18]
		mov	[ebp+var_20], offset aStandaloneYes ; "	standalone='yes'"
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	[ebp+var_78], 5
		call	ds:_ZN7QString6appendERK13QLatin1String
		jmp	loc_6ED6F7E2
; ---------------------------------------------------------------------------

loc_6ED6FA46:				; CODE XREF: sub_6ED6F330+495j
		lea	eax, [ebp+var_1C]
		lea	ecx, [ebp+var_18]
		mov	[ebp+var_1C], offset aEncoding_0 ; " encoding='"
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	[ebp+var_78], 5
		call	ds:_ZN7QString6appendERK13QLatin1String
		mov	eax, [ebp+var_9C]
		lea	edx, [ebp+var_18]
		mov	[esp], edx
		mov	[esp+4], eax
		call	ds:_ZN7QString6appendERKS_
		mov	eax, [ebp+var_18]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED6FB11
		mov	ecx, [eax+8]

loc_6ED6FA8E:				; CODE XREF: sub_6ED6F330+7E9j
		add	ecx, 1
		mov	[esp], ecx
		mov	[ebp+var_78], 5
		call	ds:_ZN7QString4growEi
		lea	ecx, [ebp+var_18]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	ds:_ZN7QString7reallocEi
		mov	eax, [ebp+var_18]
		mov	ecx, [eax+8]

loc_6ED6FAB7:				; CODE XREF: sub_6ED6F330+7E7j
		mov	edx, [eax+0Ch]
		mov	word ptr [edx+ecx*2], 27h
		add	ecx, 1
		mov	[eax+8], ecx
		mov	eax, [ebp+var_18]
		mov	edx, [eax+8]
		mov	eax, [eax+0Ch]
		mov	word ptr [eax+edx*2], 0
		jmp	loc_6ED6F7CB
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6FAE0:				; CODE XREF: sub_6ED6F330+43Aj
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jl	loc_6ED6F79C
		jmp	loc_6ED6F773
; ---------------------------------------------------------------------------

loc_6ED6FAF1:				; CODE XREF: sub_6ED6F330+21Fj
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+var_B8]
		mov	ecx, [ebp+var_AC]
		mov	edx, [eax]
		mov	edx, [edx+ecx-1]
		mov	[ebp+var_AC], edx
		jmp	loc_6ED6F55E
; ---------------------------------------------------------------------------

loc_6ED6FB11:				; CODE XREF: sub_6ED6F330+755j
		mov	ecx, [eax+8]
		cmp	ecx, [eax+4]
		jl	short loc_6ED6FAB7
		jmp	loc_6ED6FA8E
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6FB20:				; CODE XREF: sub_6ED6F330+B0j
		mov	eax, [ebp+arg_0]
		mov	[esp+0Ch], edx
		mov	dword ptr [esp+4], offset sub_6ED6F330
		mov	dword ptr [esp+8], 0
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED60E40
		mov	[ebp+var_89], 0
		jmp	loc_6ED6F6E7
; ---------------------------------------------------------------------------

loc_6ED6FB52:				; CODE XREF: sub_6ED6F330+4ACj
		lea	eax, [ebp+var_24]
		mov	[esp+4], eax
		lea	eax, [ebp+var_18]
		mov	[ebp+var_24], offset aStandaloneNo ; " standalone='no'"
		mov	[esp], eax
		mov	[ebp+var_78], 5
		call	ds:_ZN7QString6appendERK13QLatin1String
		jmp	loc_6ED6F7E2
; ---------------------------------------------------------------------------

loc_6ED6FB78:				; CODE XREF: sub_6ED6F330+212j
		test	ecx, ecx
		jnz	loc_6ED6F548
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_48]
		mov	edx, [ecx+74h]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_6ED94310
		sub	esp, 4
		jmp	loc_6ED6F548
; ---------------------------------------------------------------------------

loc_6ED6FBA4:				; CODE XREF: sub_6ED6F330+5A9j
		lea	eax, [ebp+var_C]
		lea	ecx, [ebp+var_10]
		mov	[esp+4], eax
		mov	[ebp+var_C], offset aMoreThanOneDoc ; "more than one document type definition"
		mov	[esp], ecx
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED94530
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	[ebp+var_78], 7
		mov	[esp], edx
		call	sub_6ED60A80
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_89], 0
		jmp	loc_6ED6F6E7
; ---------------------------------------------------------------------------

loc_6ED6FBFB:				; CODE XREF: sub_6ED6F330+592j
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_14]
		mov	eax, [edx+8Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx+24h]
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_14]
		mov	[ebp+var_78], 6
		sub	esp, 4
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_6ED60A80
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_89], 0
		jmp	loc_6ED6F6E7
; ---------------------------------------------------------------------------

loc_6ED6FC4D:				; CODE XREF: sub_6ED6F330+67Dj
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_30]
		mov	eax, [edx+7Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	eax, [edx+34h]
		mov	[ebp+var_78], 0FFFFFFFFh
		call	eax
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_30]
		mov	[ebp+var_78], 2
		sub	esp, 4
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_6ED60A80
		lea	eax, [ebp+var_30]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_89], 0
		jmp	loc_6ED6F6E7
; ---------------------------------------------------------------------------

loc_6ED6FCA5:				; CODE XREF: sub_6ED6F330+524j
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_2C]
		mov	eax, [edx+7Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	eax, [edx+34h]
		mov	[ebp+var_78], 5
		call	eax
		mov	ecx, [ebp+arg_0]
		sub	esp, 4
		lea	eax, [ebp+var_2C]
		mov	[esp+4], eax
		mov	[ebp+var_78], 3
		mov	[esp], ecx
		call	sub_6ED60A80
		lea	eax, [ebp+var_2C]
		mov	[esp], eax
		mov	[ebp+var_78], 5
		call	sub_6ED94560
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_89], 0
		jmp	loc_6ED6F6E7
sub_6ED6F330	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED6FD0F	proc near		; DATA XREF: sub_6ED6F330+20o
		add	ebp, 8
		mov	eax, [ebp-78h]
		mov	ecx, [ebp-74h]
		cmp	eax, 1
		mov	[ebp-0BCh], ecx
		jz	short loc_6ED6FD69
		cmp	eax, 2
		jz	loc_6ED6FDB1
		cmp	eax, 3
		jz	short loc_6ED6FD9A
		cmp	eax, 4
		jz	short loc_6ED6FDAC
		cmp	eax, 5
		jz	short loc_6ED6FD95
		cmp	eax, 6
		xchg	ax, ax
		jz	short loc_6ED6FD90
		lea	eax, [ebp-34h]

loc_6ED6FD45:				; CODE XREF: sub_6ED6FD0F+A0j
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560
		mov	eax, [ebp-0BCh]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED6FD69:				; CODE XREF: sub_6ED6FD0F+12j
		lea	eax, [ebp-30h]

loc_6ED6FD6C:				; CODE XREF: sub_6ED6FD0F+84j
					; sub_6ED6FD0F+89j
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-0BCh]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED6FD90:				; CODE XREF: sub_6ED6FD0F+31j
		lea	eax, [ebp-10h]
		jmp	short loc_6ED6FD6C
; ---------------------------------------------------------------------------

loc_6ED6FD95:				; CODE XREF: sub_6ED6FD0F+2Aj
		lea	eax, [ebp-14h]
		jmp	short loc_6ED6FD6C
; ---------------------------------------------------------------------------

loc_6ED6FD9A:				; CODE XREF: sub_6ED6FD0F+20j
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560

loc_6ED6FDAC:				; CODE XREF: sub_6ED6FD0F+25j
					; sub_6ED6FD0F+B4j
		lea	eax, [ebp-18h]
		jmp	short loc_6ED6FD45
; ---------------------------------------------------------------------------

loc_6ED6FDB1:				; CODE XREF: sub_6ED6FD0F+17j
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_6ED94560
		jmp	short loc_6ED6FDAC
sub_6ED6FD0F	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED6FDD0	proc near		; CODE XREF: _ZN16QXmlSimpleReader13parseContinueEv+97p
					; _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+274p

var_58		= dword	ptr -58h
var_54		= word ptr -54h
var_52		= byte ptr -52h
var_51		= byte ptr -51h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= dword	ptr -18h
var_14		= byte ptr -14h
var_10		= byte ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= byte ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		movzx	eax, [ebp+arg_8]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A8F2
		mov	[ebp+var_2C], edx
		mov	[ebp+var_52], al
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_28], offset sub_6ED701DB
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		movzx	eax, word ptr [eax+98h]
		mov	[ebp+var_54], ax
		mov	eax, [ebp+arg_4]
		test	eax, eax
		jz	loc_6ED6FEE0
		cmp	[ebp+arg_4], 1
		jz	loc_6ED6FFE0
		movzx	eax, [ebp+var_54]
		jmp	short loc_6ED6FE3A
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6FE30:				; CODE XREF: sub_6ED6FDD0+8Bj
					; sub_6ED6FDD0+224j
		mov	edx, [ebp+arg_0]
		movzx	eax, word ptr [edx+98h]

loc_6ED6FE3A:				; CODE XREF: sub_6ED6FDD0+5Dj
		or	eax, 1
		cmp	ax, 0FFFFh
		jz	loc_6ED6FF25
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED6A130
		test	al, al
		jnz	short loc_6ED6FE30
		cmp	[ebp+var_52], 0
		jz	short loc_6ED6FE74
		mov	edx, [ebp+arg_0]
		mov	eax, ds:_ZN7QString11shared_nullE
		cmp	[edx+5Ch], eax
		jz	loc_6ED700E6

loc_6ED6FE74:				; CODE XREF: sub_6ED6FDD0+91j
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	[ebp+var_18], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_18]
		mov	[ebp+var_50], eax
		lock inc dword ptr [eax]
		setnz	al
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED6FFC0

loc_6ED6FEA1:				; CODE XREF: sub_6ED6FDD0+208j
		mov	edx, [ebp+var_50]
		mov	eax, [ebp+arg_0]
		mov	[eax], edx
		test	byte ptr [edx+0Ch], 1
		jz	loc_6ED700C1

loc_6ED6FEB3:				; CODE XREF: sub_6ED6FDD0+311j
		mov	eax, [ebp+var_18]
		test	eax, eax
		jz	short loc_6ED6FEC8
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED70020

loc_6ED6FEC8:				; CODE XREF: sub_6ED6FDD0+E8j
					; sub_6ED6FDD0+153j
		mov	[ebp+var_51], 0

loc_6ED6FECC:				; CODE XREF: sub_6ED6FDD0+1E4j
					; sub_6ED6FDD0+26Dj ...
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_51]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6FEE0:				; CODE XREF: sub_6ED6FDD0+49j
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED6F330
		test	al, al
		jnz	loc_6ED6FFE0
		cmp	[ebp+var_52], 0
		jz	short loc_6ED6FF11
		mov	edx, [ebp+arg_0]
		mov	eax, ds:_ZN7QString11shared_nullE
		cmp	[edx+5Ch], eax
		jz	loc_6ED701B2

loc_6ED6FF11:				; CODE XREF: sub_6ED6FDD0+12Ej
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED95E60
		jmp	short loc_6ED6FEC8
; ---------------------------------------------------------------------------

loc_6ED6FF25:				; CODE XREF: sub_6ED6FDD0+71j
		movzx	eax, [ebp+var_54]
		or	eax, 1
		cmp	ax, 0FFFFh
		jz	short loc_6ED6FF3C
		cmp	[ebp+var_52], 0
		jnz	loc_6ED7017F

loc_6ED6FF3C:				; CODE XREF: sub_6ED6FDD0+160j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	ecx, [eax+8]
		test	ecx, ecx
		jz	loc_6ED70060
		mov	eax, ds:_ZN7QString11shared_nullE
		cmp	[edx+5Ch], eax
		jz	loc_6ED70060
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_C], offset aUnexpectedEndO ; "unexpected end of file"
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED94530
		mov	eax, [ebp+arg_0]
		lea	edx, [ebp+var_10]
		mov	[esp+4], edx
		mov	[ebp+var_48], 3
		mov	[esp], eax
		call	sub_6ED60A80
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED94560
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED95E60
		mov	[ebp+var_51], 0
		jmp	loc_6ED6FECC
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6FFC0:				; CODE XREF: sub_6ED6FDD0+CBj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[esp], edx
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		call	sub_6ED95E00
		jmp	loc_6ED6FEA1
; ---------------------------------------------------------------------------
		align 10h

loc_6ED6FFE0:				; CODE XREF: sub_6ED6FDD0+53j
					; sub_6ED6FDD0+124j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED6B5F0
		test	al, al
		jnz	loc_6ED6FE30
		cmp	[ebp+var_52], 0
		jz	short loc_6ED70042
		mov	edx, [ebp+arg_0]
		mov	eax, ds:_ZN7QString11shared_nullE
		cmp	[edx+5Ch], eax
		jnz	short loc_6ED70042
		mov	dword ptr [esp+0Ch], 1
		jmp	loc_6ED700EE
; ---------------------------------------------------------------------------
		align 10h

loc_6ED70020:				; CODE XREF: sub_6ED6FDD0+F2j
		mov	eax, [ebp+var_18]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		call	sub_6ED95E00
		mov	[ebp+var_51], 0
		jmp	loc_6ED6FECC
; ---------------------------------------------------------------------------

loc_6ED70042:				; CODE XREF: sub_6ED6FDD0+22Ej
					; sub_6ED6FDD0+23Bj
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED95E60
		mov	[ebp+var_51], 0
		jmp	loc_6ED6FECC
; ---------------------------------------------------------------------------
		align 10h

loc_6ED70060:				; CODE XREF: sub_6ED6FDD0+176j
					; sub_6ED6FDD0+184j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+7Ch]
		test	eax, eax
		jz	short loc_6ED700B8
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+74h]
		test	edx, edx
		mov	[ebp+var_58], edx
		jz	short loc_6ED70096
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED7008B
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED70116

loc_6ED7008B:				; CODE XREF: sub_6ED6FDD0+2ABj
					; sub_6ED6FDD0+35Ej
		mov	eax, [ebp+var_58]
		mov	[esp], eax
		call	sub_6ED988B0

loc_6ED70096:				; CODE XREF: sub_6ED6FDD0+2A5j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+7Ch]
		mov	dword ptr [edx+74h], 0
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+10h]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	eax
		test	al, al
		jz	short loc_6ED70133

loc_6ED700B8:				; CODE XREF: sub_6ED6FDD0+298j
		mov	[ebp+var_51], 1
		jmp	loc_6ED6FECC
; ---------------------------------------------------------------------------

loc_6ED700C1:				; CODE XREF: sub_6ED6FDD0+DDj
		mov	eax, [edx+4]
		mov	[esp+8], eax
		mov	eax, [edx+8]
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED960D0
		jmp	loc_6ED6FEB3
; ---------------------------------------------------------------------------

loc_6ED700E6:				; CODE XREF: sub_6ED6FDD0+9Ej
		mov	dword ptr [esp+0Ch], 2

loc_6ED700EE:				; CODE XREF: sub_6ED6FDD0+245j
		mov	dword ptr [esp+4], 0
		mov	dword ptr [esp+8], 0
		mov	[esp], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED58550
		mov	[ebp+var_51], 1
		jmp	loc_6ED6FECC
; ---------------------------------------------------------------------------

loc_6ED70116:				; CODE XREF: sub_6ED6FDD0+2B5j
		mov	edx, [ebp+var_58]
		mov	eax, [edx]
		mov	[esp], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_6ED963E0
		jmp	loc_6ED7008B
; ---------------------------------------------------------------------------

loc_6ED70133:				; CODE XREF: sub_6ED6FDD0+2E6j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+7Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		call	dword ptr [edx+34h]
		mov	eax, [ebp+arg_0]
		lea	edx, [ebp+var_14]
		mov	[ebp+var_48], 2
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	sub_6ED60A80
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_51], 0
		jmp	loc_6ED6FECC
; ---------------------------------------------------------------------------

loc_6ED7017F:				; CODE XREF: sub_6ED6FDD0+166j
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+0Ch], 2
		mov	dword ptr [esp+4], 0
		mov	dword ptr [esp+8], 0
		mov	[esp], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED58550
		mov	[ebp+var_51], 1
		jmp	loc_6ED6FECC
; ---------------------------------------------------------------------------

loc_6ED701B2:				; CODE XREF: sub_6ED6FDD0+13Bj
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+4], 0
		mov	dword ptr [esp+8], 0
		mov	[esp], edx
		call	sub_6ED58550
		mov	[ebp+var_51], 1
		jmp	loc_6ED6FECC
sub_6ED6FDD0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED701DB	proc near		; DATA XREF: sub_6ED6FDD0+27o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-60h], edx
		jz	short loc_6ED70254
		cmp	eax, 2
		jz	short loc_6ED70230
		mov	eax, [ebp-18h]
		mov	[ebp-5Ch], edx
		test	eax, eax
		jz	short loc_6ED7021E
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED7021E
		mov	eax, [ebp-18h]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+arg_0], eax
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		call	sub_6ED95E00

loc_6ED7021E:				; CODE XREF: sub_6ED701DB+1Ej
					; sub_6ED701DB+28j
		mov	eax, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED70230:				; CODE XREF: sub_6ED701DB+14j
		lea	eax, [ebp-10h]

loc_6ED70233:				; CODE XREF: sub_6ED701DB+7Cj
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	edx, [ebp-60h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED70254:				; CODE XREF: sub_6ED701DB+Fj
		lea	eax, [ebp-14h]
		jmp	short loc_6ED70233
sub_6ED701DB	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 151. _ZN16QXmlSimpleReader13parseContinueEv

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlSimpleReader13parseContinueEv
_ZN16QXmlSimpleReader13parseContinueEv proc near ; DATA	XREF: .rdata:6EDA7024o

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 2Ch
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_10], ebx
		mov	[esp+2Ch+var_C], esi
		mov	[esp+2Ch+var_8], edi
		mov	[esp+2Ch+var_4], ebp
		mov	ebx, [eax+4]
		mov	eax, [ebx+74h]
		test	eax, eax
		jz	short loc_6ED70300
		mov	eax, [eax]
		mov	edx, [eax+8]
		test	edx, edx
		jz	short loc_6ED70300
		mov	[esp+2Ch+var_2C], ebx
		call	sub_6ED5BDC0
		mov	edi, [ebx+74h]
		mov	eax, [edi]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED702B4
		mov	edx, [eax+4]
		mov	[esp+2Ch+var_24], edx
		mov	eax, [eax+8]
		mov	[esp+2Ch+var_2C], edi
		mov	[esp+2Ch+var_28], eax
		call	sub_6ED96400

loc_6ED702B4:				; CODE XREF: _ZN16QXmlSimpleReader13parseContinueEv+3Cj
		mov	edx, [edi]
		mov	esi, [edx+8]
		sub	esi, 1
		lea	eax, [esi+esi*2]
		mov	ebp, [edx+eax*4+18h]
		mov	eax, [edx+4]
		cmp	esi, eax
		jg	short loc_6ED70316
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_6ED702D8
		mov	edx, eax
		sar	edx, 1
		cmp	esi, edx
		jl	short loc_6ED70316

loc_6ED702D8:				; CODE XREF: _ZN16QXmlSimpleReader13parseContinueEv+6Ej
					; _ZN16QXmlSimpleReader13parseContinueEv+D7j
		mov	[esp+2Ch+var_24], eax
		mov	[esp+2Ch+var_28], esi
		mov	[esp+2Ch+var_2C], edi
		call	sub_6ED96400
		mov	[esp+2Ch+var_24], 1
		mov	[esp+2Ch+var_28], ebp
		mov	[esp+2Ch+var_2C], ebx
		call	sub_6ED6FDD0
		jmp	short loc_6ED70302
; ---------------------------------------------------------------------------
		align 10h

loc_6ED70300:				; CODE XREF: _ZN16QXmlSimpleReader13parseContinueEv+1Fj
					; _ZN16QXmlSimpleReader13parseContinueEv+28j
		xor	eax, eax

loc_6ED70302:				; CODE XREF: _ZN16QXmlSimpleReader13parseContinueEv+9Cj
		mov	ebx, [esp+2Ch+var_10]
		mov	esi, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_8]
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED70316:				; CODE XREF: _ZN16QXmlSimpleReader13parseContinueEv+68j
					; _ZN16QXmlSimpleReader13parseContinueEv+76j
		mov	[esp+2Ch+var_20], 1
		mov	[esp+2Ch+var_24], 0Ch
		mov	[esp+2Ch+var_28], esi
		mov	[esp+2Ch+var_2C], 1Ch
		call	ds:_ZN11QVectorData4growEiiib
		jmp	short loc_6ED702D8
_ZN16QXmlSimpleReader13parseContinueEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 159. _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb
_ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb proc near ; DATA XREF:	.rdata:6EDA7020o

var_7C		= dword	ptr -7Ch
var_76		= byte ptr -76h
var_75		= byte ptr -75h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= byte ptr  10h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 94h
		movzx	eax, [ebp+arg_8]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset dword_6ED9A8FC
		mov	[ebp+var_75], al
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_3C], edx
		mov	[ebp+var_38], offset sub_6ED707C1
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	ebx, ds:_ZN9QHashData11shared_nullE
		mov	eax, [eax+4]
		mov	[ebp+var_60], ebx
		mov	[ebp+var_14], ebx
		mov	[ebp+var_64], eax
		lock inc dword ptr [ebx+8]
		setnz	al
		mov	edx, [ebp+var_64]
		mov	ebx, [ebp+var_14]
		mov	eax, [edx+6CCh]
		mov	[ebp+var_6C], ebx
		cmp	eax, ebx
		jz	short loc_6ED703DE
		lock inc dword ptr [ebx+8]
		setnz	al
		mov	eax, [edx+6CCh]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_6ED70650

loc_6ED703C5:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+331j
		mov	eax, [ebp+var_6C]
		mov	ebx, [ebp+var_64]
		mov	[ebx+6CCh], eax
		test	byte ptr [eax+1Ch], 1
		jz	loc_6ED705F0

loc_6ED703DB:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+2C7j
		mov	eax, [ebp+var_14]

loc_6ED703DE:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+67j
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED70404
		mov	eax, [ebp+var_14]
		mov	dword ptr [esp+4], offset sub_6ED932E0
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_6ED70404:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+A7j
		mov	ebx, [ebp+var_60]
		mov	[ebp+var_10], ebx
		lock inc dword ptr [ebx+8]
		setnz	al
		mov	edx, [ebp+var_64]
		mov	ebx, [ebp+var_10]
		mov	eax, [edx+6D0h]
		mov	[ebp+var_70], ebx
		cmp	eax, ebx
		jz	short loc_6ED70459
		lock inc dword ptr [ebx+8]
		setnz	al
		mov	eax, [edx+6D0h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_6ED70692

loc_6ED70440:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+373j
		mov	eax, [ebp+var_70]
		mov	ebx, [ebp+var_64]
		mov	[ebx+6D0h], eax
		test	byte ptr [eax+1Ch], 1
		jz	loc_6ED70676

loc_6ED70456:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+34Dj
		mov	eax, [ebp+var_10]

loc_6ED70459:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+E2j
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED7047F
		mov	eax, [ebp+var_10]
		mov	dword ptr [esp+4], offset sub_6ED930B0
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_6ED7047F:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+122j
		mov	edx, [ebp+var_60]
		mov	[ebp+var_18], edx
		lock inc dword ptr [edx+8]
		setnz	al
		mov	ebx, [ebp+var_64]
		mov	edx, [ebp+var_18]
		mov	eax, [ebx+6D4h]
		mov	[ebp+var_68], edx
		cmp	eax, edx
		jz	short loc_6ED704D4
		lock inc dword ptr [edx+8]
		setnz	al
		mov	eax, [ebx+6D4h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_6ED70627

loc_6ED704BB:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+305j
		mov	eax, [ebp+var_68]
		mov	ebx, [ebp+var_64]
		mov	[ebx+6D4h], eax
		test	byte ptr [eax+1Ch], 1
		jz	loc_6ED705D0

loc_6ED704D1:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+2A7j
		mov	eax, [ebp+var_18]

loc_6ED704D4:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+15Dj
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED704FA
		mov	eax, [ebp+var_18]
		mov	dword ptr [esp+4], offset sub_6ED932E0
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_6ED704FA:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+19Dj
		cmp	[ebp+var_75], 0
		jnz	loc_6ED70610
		mov	edx, [ebp+var_64]
		mov	edx, [edx+74h]
		test	edx, edx
		mov	[ebp+var_74], edx
		jz	short loc_6ED70544
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED70539
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED70539
		mov	ebx, [ebp+var_74]
		mov	eax, [ebx]
		mov	[esp], ebx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_6ED963E0

loc_6ED70539:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+1D5j
					; _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+1DFj
		mov	eax, [ebp+var_74]
		mov	[esp], eax
		call	sub_6ED988B0

loc_6ED70544:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+1CFj
		mov	edx, [ebp+var_64]
		mov	dword ptr [edx+74h], 0

loc_6ED7054E:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+2E2j
		mov	eax, [ebp+arg_4]
		mov	ebx, [ebp+var_64]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], eax
		mov	[esp], ebx
		call	sub_6ED5E6A0
		mov	eax, [ebx+7Ch]
		test	eax, eax
		jz	short loc_6ED70590
		mov	edx, [eax]
		mov	ecx, [ebx+54h]
		mov	[esp], eax
		mov	[esp+4], ecx
		call	dword ptr [edx+8]
		mov	eax, [ebx+7Ch]
		mov	edx, [eax]
		mov	[esp], eax
		call	dword ptr [edx+0Ch]
		test	al, al
		jz	loc_6ED706B8

loc_6ED70590:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+22Cj
		movzx	eax, [ebp+var_75]
		mov	ds:byte_6EDA8008, 0
		mov	dword ptr [esp+4], 0
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+var_64]
		mov	[esp], eax
		call	sub_6ED6FDD0
		mov	[ebp+var_76], al

loc_6ED705BC:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+400j
					; _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+43Dj
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_76]
		mov	ebx, [ebp+var_4]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED705D0:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+18Bj
		mov	eax, [ebp+var_64]
		mov	[ebp+var_58], 2
		add	eax, 6D4h
		mov	[esp], eax
		call	sub_6ED93310
		jmp	loc_6ED704D1
; ---------------------------------------------------------------------------
		align 10h

loc_6ED705F0:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+95j
		mov	eax, [ebp+var_64]
		mov	[ebp+var_58], 3
		add	eax, 6CCh
		mov	[esp], eax
		call	sub_6ED93310
		jmp	loc_6ED703DB
; ---------------------------------------------------------------------------
		align 10h

loc_6ED70610:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+1BEj
		mov	eax, [ebp+var_64]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED58C70
		jmp	loc_6ED7054E
; ---------------------------------------------------------------------------

loc_6ED70627:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+175j
		mov	dword ptr [esp+4], offset sub_6ED932E0
		mov	eax, [ebx+6D4h]
		mov	[ebp+var_58], 2
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_6ED704BB
; ---------------------------------------------------------------------------
		align 10h

loc_6ED70650:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+7Fj
		mov	edx, [ebp+var_64]
		mov	dword ptr [esp+4], offset sub_6ED932E0
		mov	eax, [edx+6CCh]
		mov	[ebp+var_58], 3
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_6ED703C5
; ---------------------------------------------------------------------------

loc_6ED70676:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+110j
		mov	eax, [ebp+var_64]
		mov	[ebp+var_58], 4
		add	eax, 6D0h
		mov	[esp], eax
		call	sub_6ED93180
		jmp	loc_6ED70456
; ---------------------------------------------------------------------------

loc_6ED70692:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+FAj
		mov	edx, [ebp+var_64]
		mov	dword ptr [esp+4], offset sub_6ED930B0
		mov	eax, [edx+6D0h]
		mov	[ebp+var_58], 4
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_6ED70440
; ---------------------------------------------------------------------------

loc_6ED706B8:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+24Aj
		mov	eax, [ebx+7Ch]
		mov	edx, [eax]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	dword ptr [edx+34h]
		lea	edx, [ebp+var_C]
		mov	[ebp+var_58], 5
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], ebx
		call	sub_6ED60A80
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED70745

loc_6ED706F0:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+418j
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	[ebp+var_1C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_7C], eax
		lock inc dword ptr [eax]
		setnz	al
		mov	edx, [ebp+var_64]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED707A4

loc_6ED7071D:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+47Cj
		mov	edx, [ebp+var_7C]
		mov	eax, [ebp+var_64]
		mov	[eax], edx
		test	byte ptr [edx+0Ch], 1
		jz	short loc_6ED70782

loc_6ED7072B:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+462j
		mov	eax, [ebp+var_1C]
		test	eax, eax
		jz	short loc_6ED7073C
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED70760

loc_6ED7073C:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+3F0j
		mov	[ebp+var_76], 0
		jmp	loc_6ED705BC
; ---------------------------------------------------------------------------

loc_6ED70745:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+3AEj
		mov	eax, [ebp+var_C]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED706F0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED70760:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+3FAj
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		call	sub_6ED95E00
		mov	[ebp+var_76], 0
		jmp	loc_6ED705BC
; ---------------------------------------------------------------------------

loc_6ED70782:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+3E9j
		mov	eax, [edx+4]
		mov	ebx, [ebp+var_64]
		mov	[esp+8], eax
		mov	eax, [edx+8]
		mov	[esp], ebx
		mov	[ebp+var_58], 1
		mov	[esp+4], eax
		call	sub_6ED960D0
		jmp	short loc_6ED7072B
; ---------------------------------------------------------------------------

loc_6ED707A4:				; CODE XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+3D7j
		mov	ebx, [ebp+var_64]
		mov	eax, [ebx]
		mov	[esp], ebx
		mov	[ebp+var_58], 1
		mov	[esp+4], eax
		call	sub_6ED95E00
		jmp	loc_6ED7071D
_ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED707C1	proc near		; DATA XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+2Bo

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-84h], edx
		jz	loc_6ED708A0
		cmp	eax, 2
		jz	loc_6ED70879
		cmp	eax, 3
		jz	short loc_6ED70852
		cmp	eax, 4
		jz	short loc_6ED7082B
		mov	eax, [ebp-1Ch]
		mov	[ebp-80h], edx
		test	eax, eax
		jz	short loc_6ED70819
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED70819
		mov	eax, [ebp-1Ch]
		mov	dword ptr [ebp-58h], 0
		mov	[esp+arg_0], eax
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		call	sub_6ED95E00

loc_6ED70819:				; CODE XREF: sub_6ED707C1+33j
					; sub_6ED707C1+3Dj
		mov	ebx, [ebp-80h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], ebx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED7082B:				; CODE XREF: sub_6ED707C1+29j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		mov	ebx, [ebp-84h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], ebx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED70852:				; CODE XREF: sub_6ED707C1+24j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED932B0
		mov	ebx, [ebp-84h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], ebx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED70879:				; CODE XREF: sub_6ED707C1+1Bj
		lea	eax, [ebp-14h]

loc_6ED7087C:				; CODE XREF: sub_6ED707C1+E2j
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED933B0
		mov	edx, [ebp-84h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED708A0:				; CODE XREF: sub_6ED707C1+12j
		lea	eax, [ebp-18h]
		jmp	short loc_6ED7087C
sub_6ED707C1	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 339. _ZN24QXmlStreamEntityResolverD2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN24QXmlStreamEntityResolverD2Ev
_ZN24QXmlStreamEntityResolverD2Ev proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7648
		retn
_ZN24QXmlStreamEntityResolverD2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 338. _ZN24QXmlStreamEntityResolverD1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN24QXmlStreamEntityResolverD1Ev
_ZN24QXmlStreamEntityResolverD1Ev proc near ; DATA XREF: .rdata:off_6EDA7648o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7648
		retn
_ZN24QXmlStreamEntityResolverD1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 335. _ZN24QXmlStreamEntityResolver13resolveEntityERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================


		public _ZN24QXmlStreamEntityResolver13resolveEntityERK7QStringS2_
_ZN24QXmlStreamEntityResolver13resolveEntityERK7QStringS2_ proc	near
					; DATA XREF: .rdata:6EDA7650o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZN24QXmlStreamEntityResolver13resolveEntityERK7QStringS2_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 336. _ZN24QXmlStreamEntityResolver23resolveUndeclaredEntityERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN24QXmlStreamEntityResolver23resolveUndeclaredEntityERK7QString
_ZN24QXmlStreamEntityResolver23resolveUndeclaredEntityERK7QString proc near
					; DATA XREF: .rdata:6EDA7654o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZN24QXmlStreamEntityResolver23resolveUndeclaredEntityERK7QString endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED70910	proc near		; CODE XREF: sub_6ED83560+4CB8p
					; sub_6ED83560+4F7Dp

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	edx, [eax+1B0h]
		test	edx, edx
		jz	short loc_6ED70946
		mov	eax, [edx]
		mov	ecx, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], edx
		mov	[esp+1Ch+var_14], ecx
		call	dword ptr [eax+0Ch]
		mov	eax, ebx
		sub	esp, 4
		add	esp, 18h
		pop	ebx
		retn	4
; ---------------------------------------------------------------------------

loc_6ED70946:				; CODE XREF: sub_6ED70910+14j
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
sub_6ED70910	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 169. _ZN16QXmlStreamReader17setEntityResolverEP24QXmlStreamEntityResolver

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlStreamReader17setEntityResolverEP24QXmlStreamEntityResolver
_ZN16QXmlStreamReader17setEntityResolverEP24QXmlStreamEntityResolver proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		mov	edx, [esp+arg_4]
		mov	eax, [eax]
		mov	[eax+1B0h], edx
		retn
_ZN16QXmlStreamReader17setEntityResolverEP24QXmlStreamEntityResolver endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 477. _ZNK16QXmlStreamReader14entityResolverEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamReader14entityResolverEv
_ZNK16QXmlStreamReader14entityResolverEv proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax]
		mov	eax, [eax+1B0h]
		retn
_ZNK16QXmlStreamReader14entityResolverEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 492. _ZNK16QXmlStreamReader6deviceEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamReader6deviceEv
_ZNK16QXmlStreamReader6deviceEv	proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax]
		mov	eax, [eax+68h]
		retn
_ZNK16QXmlStreamReader6deviceEv	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 490. _ZNK16QXmlStreamReader5atEndEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamReader5atEndEv
_ZNK16QXmlStreamReader5atEndEv proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax]
		cmp	byte ptr [eax+78h], 0
		jnz	short loc_6ED709C0
		cmp	dword ptr [eax+7Ch], 1
		setz	al

loc_6ED709B6:				; CODE XREF: _ZNK16QXmlStreamReader5atEndEv+5Fj
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED709C0:				; CODE XREF: _ZNK16QXmlStreamReader5atEndEv+Dj
		mov	edx, [eax+7Ch]
		cmp	edx, 1
		jz	short loc_6ED709D6
		cmp	edx, 3
		jz	short loc_6ED709DF

loc_6ED709CD:				; CODE XREF: _ZNK16QXmlStreamReader5atEndEv+3Dj
		mov	eax, 1
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED709D6:				; CODE XREF: _ZNK16QXmlStreamReader5atEndEv+26j
		cmp	dword ptr [eax+80h], 4
		jnz	short loc_6ED709CD

loc_6ED709DF:				; CODE XREF: _ZNK16QXmlStreamReader5atEndEv+2Bj
		mov	edx, [eax+68h]
		test	edx, edx
		jz	short loc_6ED709F4
		mov	eax, [edx]
		mov	[esp+0Ch+arg_0], edx
		mov	eax, [eax+48h]
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------

loc_6ED709F4:				; CODE XREF: _ZNK16QXmlStreamReader5atEndEv+44j
		mov	eax, [eax+2Ch]
		mov	eax, [eax+8]
		test	eax, eax
		setz	al
		jmp	short loc_6ED709B6
_ZNK16QXmlStreamReader5atEndEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 496. _ZNK16QXmlStreamReader9tokenTypeEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamReader9tokenTypeEv
_ZNK16QXmlStreamReader9tokenTypeEv proc	near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax]
		mov	eax, [eax+7Ch]
		retn
_ZNK16QXmlStreamReader9tokenTypeEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 172. _ZN16QXmlStreamReader22setNamespaceProcessingEb

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlStreamReader22setNamespaceProcessingEb
_ZN16QXmlStreamReader22setNamespaceProcessingEb	proc near

arg_0		= dword	ptr  4
arg_4		= byte ptr  8

		mov	eax, [esp+arg_0]
		movzx	edx, [esp+arg_4]
		mov	ecx, [eax]
		and	edx, 1
		shl	edx, 4
		movzx	eax, byte ptr [ecx+181h]
		and	eax, 0FFFFFFEFh
		or	eax, edx
		mov	[ecx+181h], al
		retn
_ZN16QXmlStreamReader22setNamespaceProcessingEb	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 482. _ZNK16QXmlStreamReader19namespaceProcessingEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamReader19namespaceProcessingEv
_ZNK16QXmlStreamReader19namespaceProcessingEv proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax]
		movzx	eax, byte ptr [eax+181h]
		shr	al, 4
		and	eax, 1
		retn
_ZNK16QXmlStreamReader19namespaceProcessingEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 468. _ZNK16QXmlStreamReader10lineNumberEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamReader10lineNumberEv
_ZNK16QXmlStreamReader10lineNumberEv proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax]
		mov	edx, [eax+94h]
		mov	eax, [eax+90h]
		add	eax, 1
		adc	edx, 0
		retn
_ZNK16QXmlStreamReader10lineNumberEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 473. _ZNK16QXmlStreamReader12columnNumberEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamReader12columnNumberEv
_ZNK16QXmlStreamReader12columnNumberEv proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	ecx, [eax]
		mov	eax, [ecx+44h]
		mov	edx, eax
		sar	edx, 1Fh
		sub	eax, [ecx+98h]
		sbb	edx, [ecx+9Ch]
		add	eax, [ecx+0A0h]
		adc	edx, [ecx+0A4h]
		retn
_ZNK16QXmlStreamReader12columnNumberEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 478. _ZNK16QXmlStreamReader15characterOffsetEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamReader15characterOffsetEv
_ZNK16QXmlStreamReader15characterOffsetEv proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	ecx, [eax]
		mov	eax, [ecx+44h]
		mov	edx, eax
		sar	edx, 1Fh
		add	eax, [ecx+0A0h]
		adc	edx, [ecx+0A4h]
		retn
_ZNK16QXmlStreamReader15characterOffsetEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 489. _ZNK16QXmlStreamReader4textEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamReader4textEv
_ZNK16QXmlStreamReader4textEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		mov	ecx, [edx+0F0h]
		mov	[eax], ecx
		mov	ecx, [edx+0F4h]
		mov	edx, [edx+0F8h]
		mov	[eax+4], ecx
		mov	[eax+8], edx
		retn	4
_ZNK16QXmlStreamReader4textEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 494. _ZNK16QXmlStreamReader7dtdNameEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamReader7dtdNameEv
_ZNK16QXmlStreamReader7dtdNameEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		cmp	dword ptr [edx+7Ch], 8
		jz	short loc_6ED70B37
		mov	dword ptr [eax], 0
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax+8], 0
		retn	4
; ---------------------------------------------------------------------------

loc_6ED70B37:				; CODE XREF: _ZNK16QXmlStreamReader7dtdNameEv+Ej
		mov	ecx, [edx+144h]
		mov	[eax], ecx
		mov	ecx, [edx+148h]
		mov	edx, [edx+14Ch]
		mov	[eax+4], ecx
		mov	[eax+8], edx
		retn	4
_ZNK16QXmlStreamReader7dtdNameEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 469. _ZNK16QXmlStreamReader11dtdPublicIdEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamReader11dtdPublicIdEv
_ZNK16QXmlStreamReader11dtdPublicIdEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		cmp	dword ptr [edx+7Ch], 8
		jz	short loc_6ED70B87
		mov	dword ptr [eax], 0
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax+8], 0
		retn	4
; ---------------------------------------------------------------------------

loc_6ED70B87:				; CODE XREF: _ZNK16QXmlStreamReader11dtdPublicIdEv+Ej
		mov	ecx, [edx+150h]
		mov	[eax], ecx
		mov	ecx, [edx+154h]
		mov	edx, [edx+158h]
		mov	[eax+4], ecx
		mov	[eax+8], edx
		retn	4
_ZNK16QXmlStreamReader11dtdPublicIdEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 470. _ZNK16QXmlStreamReader11dtdSystemIdEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamReader11dtdSystemIdEv
_ZNK16QXmlStreamReader11dtdSystemIdEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		cmp	dword ptr [edx+7Ch], 8
		jz	short loc_6ED70BD7
		mov	dword ptr [eax], 0
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax+8], 0
		retn	4
; ---------------------------------------------------------------------------

loc_6ED70BD7:				; CODE XREF: _ZNK16QXmlStreamReader11dtdSystemIdEv+Ej
		mov	ecx, [edx+15Ch]
		mov	[eax], ecx
		mov	ecx, [edx+160h]
		mov	edx, [edx+164h]
		mov	[eax+4], ecx
		mov	[eax+8], edx
		retn	4
_ZNK16QXmlStreamReader11dtdSystemIdEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 471. _ZNK16QXmlStreamReader11errorStringEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamReader11errorStringEv
_ZNK16QXmlStreamReader11errorStringEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		cmp	dword ptr [edx+7Ch], 1
		jz	short loc_6ED70C21
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
; ---------------------------------------------------------------------------

loc_6ED70C21:				; CODE XREF: _ZNK16QXmlStreamReader11errorStringEv+Ej
		mov	edx, [edx+84h]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK16QXmlStreamReader11errorStringEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 491. _ZNK16QXmlStreamReader5errorEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamReader5errorEv
_ZNK16QXmlStreamReader5errorEv proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	edx, [eax]
		xor	eax, eax
		cmp	dword ptr [edx+7Ch], 1
		jz	short loc_6ED70C50
		rep retn
; ---------------------------------------------------------------------------

loc_6ED70C50:				; CODE XREF: _ZNK16QXmlStreamReader5errorEv+Cj
		mov	eax, [edx+80h]
		retn
_ZNK16QXmlStreamReader5errorEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 487. _ZNK16QXmlStreamReader27processingInstructionTargetEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamReader27processingInstructionTargetEv
_ZNK16QXmlStreamReader27processingInstructionTargetEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		mov	ecx, [edx+12Ch]
		mov	[eax], ecx
		mov	ecx, [edx+130h]
		mov	edx, [edx+134h]
		mov	[eax+4], ecx
		mov	[eax+8], edx
		retn	4
_ZNK16QXmlStreamReader27processingInstructionTargetEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 486. _ZNK16QXmlStreamReader25processingInstructionDataEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamReader25processingInstructionDataEv
_ZNK16QXmlStreamReader25processingInstructionDataEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		mov	ecx, [edx+138h]
		mov	[eax], ecx
		mov	ecx, [edx+13Ch]
		mov	edx, [edx+140h]
		mov	[eax+4], ecx
		mov	[eax+8], edx
		retn	4
_ZNK16QXmlStreamReader25processingInstructionDataEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 488. _ZNK16QXmlStreamReader4nameEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamReader4nameEv
_ZNK16QXmlStreamReader4nameEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		mov	ecx, [edx+120h]
		mov	[eax], ecx
		mov	ecx, [edx+124h]
		mov	edx, [edx+128h]
		mov	[eax+4], ecx
		mov	[eax+8], edx
		retn	4
_ZNK16QXmlStreamReader4nameEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 475. _ZNK16QXmlStreamReader12namespaceUriEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamReader12namespaceUriEv
_ZNK16QXmlStreamReader12namespaceUriEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		mov	ecx, [edx+108h]
		mov	[eax], ecx
		mov	ecx, [edx+10Ch]
		mov	edx, [edx+110h]
		mov	[eax+4], ecx
		mov	[eax+8], edx
		retn	4
_ZNK16QXmlStreamReader12namespaceUriEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 476. _ZNK16QXmlStreamReader13qualifiedNameEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamReader13qualifiedNameEv
_ZNK16QXmlStreamReader13qualifiedNameEv	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		mov	ecx, [edx+114h]
		mov	[eax], ecx
		mov	ecx, [edx+118h]
		mov	edx, [edx+11Ch]
		mov	[eax+4], ecx
		mov	[eax+8], edx
		retn	4
_ZNK16QXmlStreamReader13qualifiedNameEv	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 493. _ZNK16QXmlStreamReader6prefixEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamReader6prefixEv
_ZNK16QXmlStreamReader6prefixEv	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		mov	ecx, [edx+0FCh]
		mov	[eax], ecx
		mov	ecx, [edx+100h]
		mov	edx, [edx+104h]
		mov	[eax+4], ecx
		mov	[eax+8], edx
		retn	4
_ZNK16QXmlStreamReader6prefixEv	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 314. _ZN19QXmlStreamAttributeC2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN19QXmlStreamAttributeC2Ev
_ZN19QXmlStreamAttributeC2Ev proc near

arg_0		= dword	ptr  4

		mov	edx, [esp+arg_0]
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx+8], 0
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+10h], 0
		mov	dword ptr [edx+14h], 0
		mov	[edx+18h], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+1Ch], 0
		mov	dword ptr [edx+20h], 0
		mov	[edx+24h], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+28h], 0
		mov	dword ptr [edx+2Ch], 0
		and	byte ptr [edx+34h], 0FEh
		retn
_ZN19QXmlStreamAttributeC2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 310. _ZN19QXmlStreamAttributeC1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN19QXmlStreamAttributeC1Ev
_ZN19QXmlStreamAttributeC1Ev proc near	; CODE XREF: sub_6ED7EB70+BEBp
					; sub_6ED94910+16Dp

arg_0		= dword	ptr  4

		mov	edx, [esp+arg_0]
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx+8], 0
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+10h], 0
		mov	dword ptr [edx+14h], 0
		mov	[edx+18h], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+1Ch], 0
		mov	dword ptr [edx+20h], 0
		mov	[edx+24h], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+28h], 0
		mov	dword ptr [edx+2Ch], 0
		and	byte ptr [edx+34h], 0FEh
		retn
_ZN19QXmlStreamAttributeC1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 358. _ZN29QXmlStreamNotationDeclarationC2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN29QXmlStreamNotationDeclarationC2Ev
_ZN29QXmlStreamNotationDeclarationC2Ev proc near

arg_0		= dword	ptr  4

		mov	edx, [esp+arg_0]
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx+8], 0
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+10h], 0
		mov	dword ptr [edx+14h], 0
		mov	[edx+18h], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+1Ch], 0
		mov	dword ptr [edx+20h], 0
		retn
_ZN29QXmlStreamNotationDeclarationC2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 356. _ZN29QXmlStreamNotationDeclarationC1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN29QXmlStreamNotationDeclarationC1Ev
_ZN29QXmlStreamNotationDeclarationC1Ev proc near

arg_0		= dword	ptr  4

		mov	edx, [esp+arg_0]
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx+8], 0
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+10h], 0
		mov	dword ptr [edx+14h], 0
		mov	[edx+18h], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+1Ch], 0
		mov	dword ptr [edx+20h], 0
		retn
_ZN29QXmlStreamNotationDeclarationC1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 367. _ZN30QXmlStreamNamespaceDeclarationC2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN30QXmlStreamNamespaceDeclarationC2Ev
_ZN30QXmlStreamNamespaceDeclarationC2Ev	proc near

arg_0		= dword	ptr  4

		mov	edx, [esp+arg_0]
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx+8], 0
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+10h], 0
		mov	dword ptr [edx+14h], 0
		retn
_ZN30QXmlStreamNamespaceDeclarationC2Ev	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 364. _ZN30QXmlStreamNamespaceDeclarationC1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN30QXmlStreamNamespaceDeclarationC1Ev
_ZN30QXmlStreamNamespaceDeclarationC1Ev	proc near

arg_0		= dword	ptr  4

		mov	edx, [esp+arg_0]
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx+8], 0
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+10h], 0
		mov	dword ptr [edx+14h], 0
		retn
_ZN30QXmlStreamNamespaceDeclarationC1Ev	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 351. _ZN27QXmlStreamEntityDeclarationC2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN27QXmlStreamEntityDeclarationC2Ev
_ZN27QXmlStreamEntityDeclarationC2Ev proc near

arg_0		= dword	ptr  4

		mov	edx, [esp+arg_0]
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx+8], 0
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+10h], 0
		mov	dword ptr [edx+14h], 0
		mov	[edx+18h], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+1Ch], 0
		mov	dword ptr [edx+20h], 0
		mov	[edx+24h], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+28h], 0
		mov	dword ptr [edx+2Ch], 0
		mov	[edx+30h], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+34h], 0
		mov	dword ptr [edx+38h], 0
		retn
_ZN27QXmlStreamEntityDeclarationC2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 349. _ZN27QXmlStreamEntityDeclarationC1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN27QXmlStreamEntityDeclarationC1Ev
_ZN27QXmlStreamEntityDeclarationC1Ev proc near ; CODE XREF: sub_6ED94CE0+173p

arg_0		= dword	ptr  4

		mov	edx, [esp+arg_0]
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx+8], 0
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+10h], 0
		mov	dword ptr [edx+14h], 0
		mov	[edx+18h], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+1Ch], 0
		mov	dword ptr [edx+20h], 0
		mov	[edx+24h], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+28h], 0
		mov	dword ptr [edx+2Ch], 0
		mov	[edx+30h], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+34h], 0
		mov	dword ptr [edx+38h], 0
		retn
_ZN27QXmlStreamEntityDeclarationC1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 474. _ZNK16QXmlStreamReader12isWhitespaceEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamReader12isWhitespaceEv
_ZNK16QXmlStreamReader12isWhitespaceEv proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	edx, [eax]
		xor	eax, eax
		cmp	dword ptr [edx+7Ch], 6
		jz	short loc_6ED71090
		rep retn
; ---------------------------------------------------------------------------

loc_6ED71090:				; CODE XREF: _ZNK16QXmlStreamReader12isWhitespaceEv+Cj
		movzx	eax, byte ptr [edx+180h]
		shr	al, 1
		and	eax, 1
		retn
_ZNK16QXmlStreamReader12isWhitespaceEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 495. _ZNK16QXmlStreamReader7isCDATAEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamReader7isCDATAEv
_ZNK16QXmlStreamReader7isCDATAEv proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	edx, [eax]
		xor	eax, eax
		cmp	dword ptr [edx+7Ch], 6
		jz	short loc_6ED710B0
		rep retn
; ---------------------------------------------------------------------------

loc_6ED710B0:				; CODE XREF: _ZNK16QXmlStreamReader7isCDATAEv+Cj
		movzx	eax, byte ptr [edx+180h]
		shr	al, 2
		and	eax, 1
		retn
_ZNK16QXmlStreamReader7isCDATAEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 483. _ZNK16QXmlStreamReader20isStandaloneDocumentEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamReader20isStandaloneDocumentEv
_ZNK16QXmlStreamReader20isStandaloneDocumentEv proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax]
		movzx	eax, byte ptr [eax+180h]
		shr	al, 3
		and	eax, 1
		retn
_ZNK16QXmlStreamReader20isStandaloneDocumentEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 479. _ZNK16QXmlStreamReader15documentVersionEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamReader15documentVersionEv
_ZNK16QXmlStreamReader15documentVersionEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		cmp	dword ptr [edx+7Ch], 2
		jz	short loc_6ED71107
		mov	dword ptr [eax], 0
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax+8], 0
		retn	4
; ---------------------------------------------------------------------------

loc_6ED71107:				; CODE XREF: _ZNK16QXmlStreamReader15documentVersionEv+Ej
		mov	ecx, [edx+168h]
		mov	[eax], ecx
		mov	ecx, [edx+16Ch]
		mov	edx, [edx+170h]
		mov	[eax+4], ecx
		mov	[eax+8], edx
		retn	4
_ZNK16QXmlStreamReader15documentVersionEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 480. _ZNK16QXmlStreamReader16documentEncodingEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamReader16documentEncodingEv
_ZNK16QXmlStreamReader16documentEncodingEv proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx]
		cmp	dword ptr [edx+7Ch], 2
		jz	short loc_6ED71157
		mov	dword ptr [eax], 0
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax+8], 0
		retn	4
; ---------------------------------------------------------------------------

loc_6ED71157:				; CODE XREF: _ZNK16QXmlStreamReader16documentEncodingEv+Ej
		mov	ecx, [edx+174h]
		mov	[eax], ecx
		mov	ecx, [edx+178h]
		mov	edx, [edx+17Ch]
		mov	[eax+4], ecx
		mov	[eax+8], edx
		retn	4
_ZNK16QXmlStreamReader16documentEncodingEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 221. _ZN16QXmlStreamWriter9setDeviceEP9QIODevice

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlStreamWriter9setDeviceEP9QIODevice
_ZN16QXmlStreamWriter9setDeviceEP9QIODevice proc near

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [eax]
		cmp	[ebx+28h], esi
		jz	short loc_6ED711C5
		movzx	eax, byte ptr [ebx+30h]
		mov	dword ptr [ebx+2Ch], 0
		test	al, 1
		jz	short loc_6ED711C2
		mov	edx, [ebx+28h]
		test	edx, edx
		jz	short loc_6ED711BC
		mov	eax, [edx]
		mov	[esp+1Ch+var_1C], edx
		call	dword ptr [eax+10h]
		movzx	eax, byte ptr [ebx+30h]

loc_6ED711BC:				; CODE XREF: _ZN16QXmlStreamWriter9setDeviceEP9QIODevice+2Ej
		and	eax, 0FFFFFFFEh
		mov	[ebx+30h], al

loc_6ED711C2:				; CODE XREF: _ZN16QXmlStreamWriter9setDeviceEP9QIODevice+27j
		mov	[ebx+28h], esi

loc_6ED711C5:				; CODE XREF: _ZN16QXmlStreamWriter9setDeviceEP9QIODevice+18j
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
_ZN16QXmlStreamWriter9setDeviceEP9QIODevice endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 500. _ZNK16QXmlStreamWriter6deviceEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamWriter6deviceEv
_ZNK16QXmlStreamWriter6deviceEv	proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax]
		mov	eax, [eax+28h]
		retn
_ZNK16QXmlStreamWriter6deviceEv	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 499. _ZNK16QXmlStreamWriter5codecEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamWriter5codecEv
_ZNK16QXmlStreamWriter5codecEv proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax]
		mov	eax, [eax+54h]
		retn
_ZNK16QXmlStreamWriter5codecEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 205. _ZN16QXmlStreamWriter17setAutoFormattingEb

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlStreamWriter17setAutoFormattingEb
_ZN16QXmlStreamWriter17setAutoFormattingEb proc	near

arg_0		= dword	ptr  4
arg_4		= byte ptr  8

		mov	eax, [esp+arg_0]
		movzx	edx, [esp+arg_4]
		mov	ecx, [eax]
		and	edx, 1
		shl	edx, 6
		movzx	eax, byte ptr [ecx+30h]
		and	eax, 0FFFFFFBFh
		or	eax, edx
		mov	[ecx+30h], al
		retn
_ZN16QXmlStreamWriter17setAutoFormattingEb endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 497. _ZNK16QXmlStreamWriter14autoFormattingEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamWriter14autoFormattingEv
_ZNK16QXmlStreamWriter14autoFormattingEv proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax]
		movzx	eax, byte ptr [eax+30h]
		shr	al, 6
		and	eax, 1
		retn
_ZNK16QXmlStreamWriter14autoFormattingEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 501. _ZNK16QXmlStreamWriter8hasErrorEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamWriter8hasErrorEv
_ZNK16QXmlStreamWriter8hasErrorEv proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax]
		movzx	eax, byte ptr [eax+30h]
		shr	al, 5
		and	eax, 1
		retn
_ZNK16QXmlStreamWriter8hasErrorEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 498. _ZNK16QXmlStreamWriter20autoFormattingIndentEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamWriter20autoFormattingIndentEv
_ZNK16QXmlStreamWriter20autoFormattingIndentEv proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_C], ebx
		mov	ebx, ds:_ZNK10QByteArray5countEc
		mov	[esp+1Ch+var_4], edi
		mov	[esp+1Ch+var_8], esi
		mov	esi, [eax]
		mov	[esp+1Ch+var_18], 20h
		add	esi, 34h
		mov	[esp+1Ch+var_1C], esi
		call	ebx ; _ZNK10QByteArray5countEc
		mov	[esp+1Ch+var_1C], esi
		mov	[esp+1Ch+var_18], 9
		mov	edi, eax
		call	ebx ; _ZNK10QByteArray5countEc
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		sub	edi, eax
		mov	eax, edi
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
_ZNK16QXmlStreamWriter20autoFormattingIndentEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 337. _ZN24QXmlStreamEntityResolverD0Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN24QXmlStreamEntityResolverD0Ev
_ZN24QXmlStreamEntityResolverD0Ev proc near ; DATA XREF: .rdata:6EDA764Co

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7648
		add	esp, 0Ch
		jmp	sub_6ED988B0
_ZN24QXmlStreamEntityResolverD0Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 522. _ZNK20QXmlStreamAttributes5valueERK7QString

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZNK20QXmlStreamAttributes5valueERK7QString
_ZNK20QXmlStreamAttributes5valueERK7QString proc near

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 64h
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A90C
		mov	[ebp+var_28], offset sub_6ED713C5
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	edx, [eax+8]
		test	edx, edx
		jle	loc_6ED71398
		mov	ebx, ds:_ZeqRK7QStringRK10QStringRef
		mov	[ebp+var_54], 0
		mov	[ebp+var_50], ebx
		jmp	short loc_6ED71333
; ---------------------------------------------------------------------------

loc_6ED71322:				; CODE XREF: _ZNK20QXmlStreamAttributes5valueERK7QString+A3j
		mov	edx, [ebp+arg_4]
		add	[ebp+var_54], 1
		mov	ebx, [ebp+var_54]
		mov	eax, [edx]
		cmp	ebx, [eax+8]
		jge	short loc_6ED71398

loc_6ED71333:				; CODE XREF: _ZNK20QXmlStreamAttributes5valueERK7QString+50j
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		mov	[ebp+var_58], eax
		mov	edx, [ebp+var_58]
		imul	eax, [ebp+var_54], 38h
		mov	ebx, [ebp+var_58]
		add	edx, eax
		mov	ecx, [edx+30h]
		lea	eax, [ebx+eax+28h]
		mov	edx, [edx+2Ch]
		mov	[ebp+var_14], eax
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	[ebp+var_C], ecx
		mov	[ebp+var_10], edx
		mov	edx, [ebp+arg_8]
		mov	[ebp+var_48], 1
		mov	[esp], edx
		call	[ebp+var_50]
		test	al, al
		jz	short loc_6ED71322
		imul	eax, [ebp+var_54], 38h
		mov	edx, [ebp+var_58]
		mov	ebx, [ebp+var_58]
		add	edx, eax
		mov	ecx, [edx+3Ch]
		lea	eax, [ebx+eax+34h]
		mov	edx, [edx+38h]
		mov	ebx, [ebp+arg_0]
		mov	[ebx], eax
		mov	[ebx+4], edx
		mov	[ebx+8], ecx
		jmp	short loc_6ED713AF
; ---------------------------------------------------------------------------

loc_6ED71398:				; CODE XREF: _ZNK20QXmlStreamAttributes5valueERK7QString+3Aj
					; _ZNK20QXmlStreamAttributes5valueERK7QString+61j
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 0
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax+8], 0

loc_6ED713AF:				; CODE XREF: _ZNK20QXmlStreamAttributes5valueERK7QString+C6j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		add	esp, 64h
		pop	ebx
		pop	ebp
		retn	4
_ZNK20QXmlStreamAttributes5valueERK7QString endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED713C5	proc near		; DATA XREF: _ZNK20QXmlStreamAttributes5valueERK7QString+21o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED713C5	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 524. _ZNK20QXmlStreamAttributes5valueERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZNK20QXmlStreamAttributes5valueERK7QStringS2_
_ZNK20QXmlStreamAttributes5valueERK7QStringS2_ proc near

var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 84h
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset word_6ED9A912
		mov	[ebp+var_38], offset sub_6ED71519
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	ecx, [eax+8]
		test	ecx, ecx
		jle	loc_6ED71500
		mov	ebx, ds:_ZeqRK7QStringRK10QStringRef
		mov	[ebp+var_68], 0
		mov	[ebp+var_60], ebx
		mov	[ebp+var_64], ebx
		jmp	short loc_6ED7144D
; ---------------------------------------------------------------------------

loc_6ED71438:				; CODE XREF: _ZNK20QXmlStreamAttributes5valueERK7QStringS2_+ADj
					; _ZNK20QXmlStreamAttributes5valueERK7QStringS2_+DCj
		mov	edx, [ebp+arg_4]
		add	[ebp+var_68], 1
		mov	ebx, [ebp+var_68]
		mov	eax, [edx]
		cmp	ebx, [eax+8]
		jge	loc_6ED71500

loc_6ED7144D:				; CODE XREF: _ZNK20QXmlStreamAttributes5valueERK7QStringS2_+56j
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		mov	[ebp+var_6C], eax
		mov	edx, [ebp+var_6C]
		imul	eax, [ebp+var_68], 38h
		mov	ebx, [ebp+var_6C]
		add	edx, eax
		mov	ecx, [edx+18h]
		lea	eax, [ebx+eax+10h]
		mov	edx, [edx+14h]
		mov	[ebp+var_14], eax
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	[ebp+var_C], ecx
		mov	[ebp+var_10], edx
		mov	edx, [ebp+arg_C]
		mov	[ebp+var_58], 1
		mov	[esp], edx
		call	[ebp+var_60]
		test	al, al
		jz	short loc_6ED71438
		imul	eax, [ebp+var_68], 38h
		mov	edx, ebx
		add	edx, eax
		lea	eax, [ebx+eax+1Ch]
		mov	ecx, [edx+24h]
		mov	[ebp+var_20], eax
		mov	edx, [edx+20h]
		lea	ebx, [ebp+var_20]
		mov	eax, [ebp+arg_8]
		mov	[esp+4], ebx
		mov	[ebp+var_18], ecx
		mov	[ebp+var_1C], edx
		mov	[esp], eax
		call	[ebp+var_64]
		test	al, al
		jz	loc_6ED71438
		imul	eax, [ebp+var_68], 38h
		mov	edx, [ebp+var_6C]
		mov	ebx, [ebp+var_6C]
		add	edx, eax
		mov	ecx, [edx+3Ch]
		lea	eax, [ebx+eax+34h]
		mov	edx, [edx+38h]
		mov	ebx, [ebp+arg_0]
		mov	[ebx], eax
		mov	[ebx+4], edx
		mov	[ebx+8], ecx

loc_6ED714E3:				; CODE XREF: _ZNK20QXmlStreamAttributes5valueERK7QStringS2_+137j
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		add	esp, 84h
		pop	ebx
		pop	ebp
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED71500:				; CODE XREF: _ZNK20QXmlStreamAttributes5valueERK7QStringS2_+3Dj
					; _ZNK20QXmlStreamAttributes5valueERK7QStringS2_+67j
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 0
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax+8], 0
		jmp	short loc_6ED714E3
_ZNK20QXmlStreamAttributes5valueERK7QStringS2_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED71519	proc near		; DATA XREF: _ZNK20QXmlStreamAttributes5valueERK7QStringS2_+24o
		add	ebp, 8
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED71519	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 520. _ZNK20QXmlStreamAttributes5valueERK13QLatin1String

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZNK20QXmlStreamAttributes5valueERK13QLatin1String
_ZNK20QXmlStreamAttributes5valueERK13QLatin1String proc	near

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 64h
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A918
		mov	[ebp+var_28], offset sub_6ED71625
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	ebx, [eax+8]
		test	ebx, ebx
		jle	loc_6ED715F8
		mov	ebx, ds:_ZeqRK13QLatin1StringRK10QStringRef
		mov	[ebp+var_54], 0
		mov	[ebp+var_50], ebx
		jmp	short loc_6ED71593
; ---------------------------------------------------------------------------

loc_6ED71582:				; CODE XREF: _ZNK20QXmlStreamAttributes5valueERK13QLatin1String+A3j
		mov	edx, [ebp+arg_4]
		add	[ebp+var_54], 1
		mov	ebx, [ebp+var_54]
		mov	eax, [edx]
		cmp	ebx, [eax+8]
		jge	short loc_6ED715F8

loc_6ED71593:				; CODE XREF: _ZNK20QXmlStreamAttributes5valueERK13QLatin1String+50j
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		mov	[ebp+var_58], eax
		mov	edx, [ebp+var_58]
		imul	eax, [ebp+var_54], 38h
		mov	ebx, [ebp+var_58]
		add	edx, eax
		mov	ecx, [edx+30h]
		lea	eax, [ebx+eax+28h]
		mov	edx, [edx+2Ch]
		mov	[ebp+var_14], eax
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	[ebp+var_C], ecx
		mov	[ebp+var_10], edx
		mov	edx, [ebp+arg_8]
		mov	[ebp+var_48], 1
		mov	[esp], edx
		call	[ebp+var_50]
		test	al, al
		jz	short loc_6ED71582
		imul	eax, [ebp+var_54], 38h
		mov	edx, [ebp+var_58]
		mov	ebx, [ebp+var_58]
		add	edx, eax
		mov	ecx, [edx+3Ch]
		lea	eax, [ebx+eax+34h]
		mov	edx, [edx+38h]
		mov	ebx, [ebp+arg_0]
		mov	[ebx], eax
		mov	[ebx+4], edx
		mov	[ebx+8], ecx
		jmp	short loc_6ED7160F
; ---------------------------------------------------------------------------

loc_6ED715F8:				; CODE XREF: _ZNK20QXmlStreamAttributes5valueERK13QLatin1String+3Aj
					; _ZNK20QXmlStreamAttributes5valueERK13QLatin1String+61j
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 0
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax+8], 0

loc_6ED7160F:				; CODE XREF: _ZNK20QXmlStreamAttributes5valueERK13QLatin1String+C6j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		add	esp, 64h
		pop	ebx
		pop	ebp
		retn	4
_ZNK20QXmlStreamAttributes5valueERK13QLatin1String endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED71625	proc near		; DATA XREF: _ZNK20QXmlStreamAttributes5valueERK13QLatin1String+21o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED71625	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 521. _ZNK20QXmlStreamAttributes5valueERK13QLatin1StringS2_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZNK20QXmlStreamAttributes5valueERK13QLatin1StringS2_
_ZNK20QXmlStreamAttributes5valueERK13QLatin1StringS2_ proc near

var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 84h
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset word_6ED9A91E
		mov	[ebp+var_38], offset sub_6ED71779
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	eax, [eax+8]
		test	eax, eax
		jle	loc_6ED71760
		mov	ebx, ds:_ZeqRK13QLatin1StringRK10QStringRef
		mov	[ebp+var_68], 0
		mov	[ebp+var_60], ebx
		mov	[ebp+var_64], ebx
		jmp	short loc_6ED716AD
; ---------------------------------------------------------------------------

loc_6ED71698:				; CODE XREF: _ZNK20QXmlStreamAttributes5valueERK13QLatin1StringS2_+ADj
					; _ZNK20QXmlStreamAttributes5valueERK13QLatin1StringS2_+DCj
		mov	edx, [ebp+arg_4]
		add	[ebp+var_68], 1
		mov	ebx, [ebp+var_68]
		mov	eax, [edx]
		cmp	ebx, [eax+8]
		jge	loc_6ED71760

loc_6ED716AD:				; CODE XREF: _ZNK20QXmlStreamAttributes5valueERK13QLatin1StringS2_+56j
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		mov	[ebp+var_6C], eax
		mov	edx, [ebp+var_6C]
		imul	eax, [ebp+var_68], 38h
		mov	ebx, [ebp+var_6C]
		add	edx, eax
		mov	ecx, [edx+18h]
		lea	eax, [ebx+eax+10h]
		mov	edx, [edx+14h]
		mov	[ebp+var_14], eax
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	[ebp+var_C], ecx
		mov	[ebp+var_10], edx
		mov	edx, [ebp+arg_C]
		mov	[ebp+var_58], 1
		mov	[esp], edx
		call	[ebp+var_60]
		test	al, al
		jz	short loc_6ED71698
		imul	eax, [ebp+var_68], 38h
		mov	edx, ebx
		add	edx, eax
		lea	eax, [ebx+eax+1Ch]
		mov	ecx, [edx+24h]
		mov	[ebp+var_20], eax
		mov	edx, [edx+20h]
		lea	ebx, [ebp+var_20]
		mov	eax, [ebp+arg_8]
		mov	[esp+4], ebx
		mov	[ebp+var_18], ecx
		mov	[ebp+var_1C], edx
		mov	[esp], eax
		call	[ebp+var_64]
		test	al, al
		jz	loc_6ED71698
		imul	eax, [ebp+var_68], 38h
		mov	edx, [ebp+var_6C]
		mov	ebx, [ebp+var_6C]
		add	edx, eax
		mov	ecx, [edx+3Ch]
		lea	eax, [ebx+eax+34h]
		mov	edx, [edx+38h]
		mov	ebx, [ebp+arg_0]
		mov	[ebx], eax
		mov	[ebx+4], edx
		mov	[ebx+8], ecx

loc_6ED71743:				; CODE XREF: _ZNK20QXmlStreamAttributes5valueERK13QLatin1StringS2_+137j
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		add	esp, 84h
		pop	ebx
		pop	ebp
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED71760:				; CODE XREF: _ZNK20QXmlStreamAttributes5valueERK13QLatin1StringS2_+3Dj
					; _ZNK20QXmlStreamAttributes5valueERK13QLatin1StringS2_+67j
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 0
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax+8], 0
		jmp	short loc_6ED71743
_ZNK20QXmlStreamAttributes5valueERK13QLatin1StringS2_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED71779	proc near		; DATA XREF: _ZNK20QXmlStreamAttributes5valueERK13QLatin1StringS2_+24o
		add	ebp, 8
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED71779	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 523. _ZNK20QXmlStreamAttributes5valueERK7QStringRK13QLatin1String

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZNK20QXmlStreamAttributes5valueERK7QStringRK13QLatin1String
_ZNK20QXmlStreamAttributes5valueERK7QStringRK13QLatin1String proc near

var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 74h
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset dword_6ED9A924
		mov	[ebp+var_38], offset sub_6ED718BF
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	edx, [eax+8]
		test	edx, edx
		jle	loc_6ED718A6
		mov	ebx, ds:_ZeqRK13QLatin1StringRK10QStringRef
		mov	[ebp+var_64], 0
		mov	[ebp+var_60], ebx
		jmp	short loc_6ED717F7
; ---------------------------------------------------------------------------

loc_6ED717E2:				; CODE XREF: _ZNK20QXmlStreamAttributes5valueERK7QStringRK13QLatin1String+A7j
					; _ZNK20QXmlStreamAttributes5valueERK7QStringRK13QLatin1String+D9j
		mov	edx, [ebp+arg_4]
		add	[ebp+var_64], 1
		mov	ebx, [ebp+var_64]
		mov	eax, [edx]
		cmp	ebx, [eax+8]
		jge	loc_6ED718A6

loc_6ED717F7:				; CODE XREF: _ZNK20QXmlStreamAttributes5valueERK7QStringRK13QLatin1String+50j
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		mov	[ebp+var_68], eax
		mov	edx, [ebp+var_68]
		imul	eax, [ebp+var_64], 38h
		mov	ebx, [ebp+var_68]
		add	edx, eax
		mov	ecx, [edx+18h]
		lea	eax, [ebx+eax+10h]
		mov	edx, [edx+14h]
		mov	[ebp+var_14], eax
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	[ebp+var_C], ecx
		mov	[ebp+var_10], edx
		mov	edx, [ebp+arg_C]
		mov	[ebp+var_58], 1
		mov	[esp], edx
		call	[ebp+var_60]
		test	al, al
		jz	short loc_6ED717E2
		imul	eax, [ebp+var_64], 38h
		mov	edx, ebx
		add	edx, eax
		lea	eax, [ebx+eax+1Ch]
		mov	ecx, [edx+24h]
		mov	[ebp+var_20], eax
		mov	edx, [edx+20h]
		lea	ebx, [ebp+var_20]
		mov	eax, [ebp+arg_8]
		mov	[esp+4], ebx
		mov	[ebp+var_18], ecx
		mov	[ebp+var_1C], edx
		mov	[esp], eax
		call	ds:_ZeqRK7QStringRK10QStringRef
		test	al, al
		jz	loc_6ED717E2
		imul	eax, [ebp+var_64], 38h
		mov	edx, [ebp+var_68]
		mov	ebx, [ebp+var_68]
		add	edx, eax
		mov	ecx, [edx+3Ch]
		lea	eax, [ebx+eax+34h]
		mov	edx, [edx+38h]
		mov	ebx, [ebp+arg_0]
		mov	[ebx], eax
		mov	[ebx+4], edx
		mov	[ebx+8], ecx

loc_6ED71890:				; CODE XREF: _ZNK20QXmlStreamAttributes5valueERK7QStringRK13QLatin1String+12Dj
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		add	esp, 74h
		pop	ebx
		pop	ebp
		retn	4
; ---------------------------------------------------------------------------

loc_6ED718A6:				; CODE XREF: _ZNK20QXmlStreamAttributes5valueERK7QStringRK13QLatin1String+3Aj
					; _ZNK20QXmlStreamAttributes5valueERK7QStringRK13QLatin1String+61j
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 0
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax+8], 0
		jmp	short loc_6ED71890
_ZNK20QXmlStreamAttributes5valueERK7QStringRK13QLatin1String endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED718BF	proc near		; DATA XREF: _ZNK20QXmlStreamAttributes5valueERK7QStringRK13QLatin1String+21o
		add	ebp, 8
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED718BF	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 177. _ZN16QXmlStreamReader7addDataERK10QByteArray

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlStreamReader7addDataERK10QByteArray
_ZN16QXmlStreamReader7addDataERK10QByteArray proc near
					; CODE XREF: _ZN16QXmlStreamReader7addDataEPKc+5Dp
					; _ZN16QXmlStreamReader7addDataERK7QString+73p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	edx, [esp+0Ch+arg_4]
		mov	eax, [eax]
		mov	ecx, [eax+68h]
		test	ecx, ecx
		jz	short loc_6ED71906
		mov	eax, ds:_Z8qWarningPKcz
		mov	[esp+0Ch+arg_0], offset	aQxmlstreamread	; "QXmlStreamReader: addData() with device"...
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------

loc_6ED71906:				; CODE XREF: _ZN16QXmlStreamReader7addDataERK10QByteArray+12j
		add	eax, 2Ch
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_ZN10QByteArray6appendERKS_
		mov	[esp+0Ch+arg_4], edx
		add	esp, 0Ch
		jmp	eax
_ZN16QXmlStreamReader7addDataERK10QByteArray endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED71920	proc near		; CODE XREF: sub_6ED71960+A2p
					; sub_6ED71960+DAp ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch

		push	ebx
		mov	ebx, eax
		sub	esp, 28h
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], 0
		mov	[esp+2Ch+var_20], 0
		mov	[esp+2Ch+var_24], edx
		mov	[esp+2Ch+var_28], offset aQxmlstream ; "QXmlStream"
		call	ds:_ZN16QCoreApplication9translateEPKcS1_S1_NS_8EncodingE
		mov	eax, ebx
		sub	esp, 4
		add	esp, 28h
		pop	ebx
		retn
sub_6ED71920	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED71960	proc near		; CODE XREF: _ZN16QXmlStreamReader10raiseErrorERK7QString+1Cp
					; sub_6ED71AE0+1Ap ...

var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= byte ptr -10h
var_C		= byte ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A92A
		mov	[ebp+var_28], offset sub_6ED71A6D
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		mov	[edx+80h], eax
		add	edx, 84h
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_54], edx
		mov	[esp], edx
		mov	edx, ds:_ZN7QStringaSERKS_
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		mov	[ebp+var_50], edx
		call	edx ; _ZN7QStringaSERKS_
		mov	edx, [ebp+arg_0]
		mov	eax, ds:_ZN7QString11shared_nullE
		cmp	[edx+84h], eax
		jz	short loc_6ED719E7

loc_6ED719D0:				; CODE XREF: sub_6ED71960+91j
					; sub_6ED71960+D0j ...
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_4C]
		mov	dword ptr [edx+7Ch], 1
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED719E7:				; CODE XREF: sub_6ED71960+6Ej
		cmp	[ebp+arg_4], 4
		jz	short loc_6ED71A32
		cmp	[ebp+arg_4], 2
		jnz	short loc_6ED719D0
		mov	edx, offset aInvalidDocumen ; "Invalid document."
		lea	eax, [ebp+var_10]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED71920
		mov	eax, [ebp+var_54]
		lea	edx, [ebp+var_10]
		mov	[esp+4], edx
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	[ebp+var_50]
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED94560
		jmp	short loc_6ED719D0
; ---------------------------------------------------------------------------

loc_6ED71A32:				; CODE XREF: sub_6ED71960+8Bj
		mov	edx, offset aPrematureEndOf ; "Premature end of	document."
		lea	eax, [ebp+var_C]
		call	sub_6ED71920
		mov	edx, [ebp+var_54]
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	[ebp+var_48], 2
		mov	[esp], edx
		call	[ebp+var_50]
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED94560
		jmp	loc_6ED719D0
sub_6ED71960	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED71A6D	proc near		; DATA XREF: sub_6ED71960+20o
		add	ebp, 8
		mov	edx, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		lea	eax, [ebp-0Ch]
		mov	[ebp-58h], edx
		jz	short loc_6ED71A82
		lea	eax, [ebp-10h]

loc_6ED71A82:				; CODE XREF: sub_6ED71A6D+10j
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED71A6D	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 166. _ZN16QXmlStreamReader10raiseErrorERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlStreamReader10raiseErrorERK7QString
_ZN16QXmlStreamReader10raiseErrorERK7QString proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_18], 2
		mov	[esp+1Ch+var_14], eax
		mov	eax, [esp+1Ch+arg_0]
		mov	eax, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED71960
		add	esp, 1Ch
		retn
_ZN16QXmlStreamReader10raiseErrorERK7QString endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED71AE0	proc near		; CODE XREF: sub_6ED77250+14Ap
					; sub_6ED7BA60+C9p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_18], 3
		mov	[esp+1Ch+var_14], eax
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED71960
		add	esp, 1Ch
		retn
sub_6ED71AE0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 472. _ZNK16QXmlStreamReader11tokenStringEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamReader11tokenStringEv
_ZNK16QXmlStreamReader11tokenStringEv proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_18], 0FFFFFFFFh
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [eax]
		mov	eax, [eax+7Ch]
		movsx	eax, ds:word_6EDA4DF2[eax+eax]
		add	eax, offset aNotoken ; "NoToken"
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebx], eax
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
_ZNK16QXmlStreamReader11tokenStringEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 370. _ZN30QXmlStreamNamespaceDeclarationaSERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN30QXmlStreamNamespaceDeclarationaSERKS_
_ZN30QXmlStreamNamespaceDeclarationaSERKS_ proc	near
					; CODE XREF: _ZN30QXmlStreamNamespaceDeclarationC1ERKS_+7Ep
					; _ZN30QXmlStreamNamespaceDeclarationC2ERKS_+7Ep

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_C], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_8], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_4], edi
		mov	edi, ds:_ZN7QStringaSERKS_
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], esi
		call	edi ; _ZN7QStringaSERKS_
		mov	eax, [esi+4]
		mov	[ebx+4], eax
		mov	eax, [esi+8]
		mov	[ebx+8], eax
		lea	eax, [esi+0Ch]
		mov	[esp+1Ch+var_18], eax
		lea	eax, [ebx+0Ch]
		mov	[esp+1Ch+var_1C], eax
		call	edi ; _ZN7QStringaSERKS_
		mov	eax, [esi+10h]
		mov	[ebx+10h], eax
		mov	eax, [esi+14h]
		mov	[ebx+14h], eax
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_8]
		mov	ebx, [esp+1Ch+var_C]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
_ZN30QXmlStreamNamespaceDeclarationaSERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 363. _ZN30QXmlStreamNamespaceDeclarationC1ERKS_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN30QXmlStreamNamespaceDeclarationC1ERKS_
_ZN30QXmlStreamNamespaceDeclarationC1ERKS_ proc	near ; CODE XREF: sub_6ED95530+139p

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A932
		mov	[ebp+var_18], offset sub_6ED71C40
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx+8], 0
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [eax+10h], 0
		mov	dword ptr [eax+14h], 0
		mov	eax, [ebp+arg_4]
		mov	[esp], edx
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		call	_ZN30QXmlStreamNamespaceDeclarationaSERKS_
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN30QXmlStreamNamespaceDeclarationC1ERKS_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED71C40	proc near		; DATA XREF: _ZN30QXmlStreamNamespaceDeclarationC1ERKS_+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], edx
		call	sub_6ED94560
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED71C40	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 366. _ZN30QXmlStreamNamespaceDeclarationC2ERKS_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN30QXmlStreamNamespaceDeclarationC2ERKS_
_ZN30QXmlStreamNamespaceDeclarationC2ERKS_ proc	near

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A938
		mov	[ebp+var_18], offset sub_6ED71D20
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx+8], 0
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [eax+10h], 0
		mov	dword ptr [eax+14h], 0
		mov	eax, [ebp+arg_4]
		mov	[esp], edx
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		call	_ZN30QXmlStreamNamespaceDeclarationaSERKS_
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN30QXmlStreamNamespaceDeclarationC2ERKS_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED71D20	proc near		; DATA XREF: _ZN30QXmlStreamNamespaceDeclarationC2ERKS_+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], edx
		call	sub_6ED94560
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED71D20	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 361. _ZN29QXmlStreamNotationDeclarationaSERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN29QXmlStreamNotationDeclarationaSERKS_
_ZN29QXmlStreamNotationDeclarationaSERKS_ proc near
					; CODE XREF: _ZN29QXmlStreamNotationDeclarationC1ERKS_+98p
					; _ZN29QXmlStreamNotationDeclarationC2ERKS_+98p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_C], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_8], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_4], edi
		mov	edi, ds:_ZN7QStringaSERKS_
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], esi
		call	edi ; _ZN7QStringaSERKS_
		mov	eax, [esi+4]
		mov	[ebx+4], eax
		mov	eax, [esi+8]
		mov	[ebx+8], eax
		lea	eax, [esi+0Ch]
		mov	[esp+1Ch+var_18], eax
		lea	eax, [ebx+0Ch]
		mov	[esp+1Ch+var_1C], eax
		call	edi ; _ZN7QStringaSERKS_
		mov	eax, [esi+10h]
		mov	[ebx+10h], eax
		mov	eax, [esi+14h]
		mov	[ebx+14h], eax
		lea	eax, [esi+18h]
		mov	[esp+1Ch+var_18], eax
		lea	eax, [ebx+18h]
		mov	[esp+1Ch+var_1C], eax
		call	edi ; _ZN7QStringaSERKS_
		mov	eax, [esi+1Ch]
		mov	[ebx+1Ch], eax
		mov	eax, [esi+20h]
		mov	[ebx+20h], eax
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_8]
		mov	ebx, [esp+1Ch+var_C]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
_ZN29QXmlStreamNotationDeclarationaSERKS_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 355. _ZN29QXmlStreamNotationDeclarationC1ERKS_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN29QXmlStreamNotationDeclarationC1ERKS_
_ZN29QXmlStreamNotationDeclarationC1ERKS_ proc near ; CODE XREF: sub_6ED950E0+141p

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A93E
		mov	[ebp+var_18], offset sub_6ED71E9A
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx+8], 0
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+10h], 0
		mov	dword ptr [edx+14h], 0
		mov	[edx+18h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [eax+1Ch], 0
		mov	dword ptr [eax+20h], 0
		mov	eax, [ebp+arg_4]
		mov	[esp], edx
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		call	_ZN29QXmlStreamNotationDeclarationaSERKS_
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN29QXmlStreamNotationDeclarationC1ERKS_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED71E9A	proc near		; DATA XREF: _ZN29QXmlStreamNotationDeclarationC1ERKS_+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		add	eax, 18h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], edx
		call	sub_6ED94560
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED71E9A	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 357. _ZN29QXmlStreamNotationDeclarationC2ERKS_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN29QXmlStreamNotationDeclarationC2ERKS_
_ZN29QXmlStreamNotationDeclarationC2ERKS_ proc near

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A944
		mov	[ebp+var_18], offset sub_6ED71FAA
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx+8], 0
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+10h], 0
		mov	dword ptr [edx+14h], 0
		mov	[edx+18h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [eax+1Ch], 0
		mov	dword ptr [eax+20h], 0
		mov	eax, [ebp+arg_4]
		mov	[esp], edx
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		call	_ZN29QXmlStreamNotationDeclarationaSERKS_
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN29QXmlStreamNotationDeclarationC2ERKS_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED71FAA	proc near		; DATA XREF: _ZN29QXmlStreamNotationDeclarationC2ERKS_+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		add	eax, 18h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], edx
		call	sub_6ED94560
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED71FAA	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 317. _ZN19QXmlStreamAttributeaSERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN19QXmlStreamAttributeaSERKS_
_ZN19QXmlStreamAttributeaSERKS_	proc near ; CODE XREF: _ZN19QXmlStreamAttributeC1ERKS_+B2p
					; _ZN19QXmlStreamAttributeC2ERKS_+B2p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		push	esi
		push	ebx
		sub	esp, 10h
		mov	edi, ds:_ZN7QStringaSERKS_
		mov	ebx, [esp+1Ch+arg_0]
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], esi
		call	edi ; _ZN7QStringaSERKS_
		mov	eax, [esi+4]
		mov	[ebx+4], eax
		mov	eax, [esi+8]
		mov	[ebx+8], eax
		lea	eax, [esi+0Ch]
		mov	[esp+1Ch+var_18], eax
		lea	eax, [ebx+0Ch]
		mov	[esp+1Ch+var_1C], eax
		call	edi ; _ZN7QStringaSERKS_
		mov	eax, [esi+10h]
		mov	[ebx+10h], eax
		mov	eax, [esi+14h]
		mov	[ebx+14h], eax
		lea	eax, [esi+18h]
		mov	[esp+1Ch+var_18], eax
		lea	eax, [ebx+18h]
		mov	[esp+1Ch+var_1C], eax
		call	edi ; _ZN7QStringaSERKS_
		mov	eax, [esi+1Ch]
		mov	[ebx+1Ch], eax
		mov	eax, [esi+20h]
		mov	[ebx+20h], eax
		lea	eax, [esi+24h]
		mov	[esp+1Ch+var_18], eax
		lea	eax, [ebx+24h]
		mov	[esp+1Ch+var_1C], eax
		call	edi ; _ZN7QStringaSERKS_
		mov	eax, [esi+28h]
		mov	[ebx+28h], eax
		mov	eax, [esi+2Ch]
		mov	[ebx+2Ch], eax
		movzx	eax, byte ptr [ebx+34h]
		movzx	edx, byte ptr [esi+34h]
		and	eax, 0FFFFFFFEh
		and	edx, 1
		or	eax, edx
		mov	[ebx+34h], al
		add	esp, 10h
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		retn
_ZN19QXmlStreamAttributeaSERKS_	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 309. _ZN19QXmlStreamAttributeC1ERKS_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN19QXmlStreamAttributeC1ERKS_
_ZN19QXmlStreamAttributeC1ERKS_	proc near ; CODE XREF: sub_6ED94720+56p
					; sub_6ED94720+C4p ...

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A94A
		mov	[ebp+var_18], offset sub_6ED72174
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx+8], 0
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+10h], 0
		mov	dword ptr [edx+14h], 0
		mov	[edx+18h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+1Ch], 0
		mov	dword ptr [edx+20h], 0
		mov	[edx+24h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+28h], 0
		mov	dword ptr [eax+2Ch], 0
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	[esp], edx
		call	_ZN19QXmlStreamAttributeaSERKS_
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN19QXmlStreamAttributeC1ERKS_	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED72174	proc near		; DATA XREF: _ZN19QXmlStreamAttributeC1ERKS_+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		add	eax, 24h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 18h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], edx
		call	sub_6ED94560
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED72174	endp

; Exported entry 313. _ZN19QXmlStreamAttributeC2ERKS_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN19QXmlStreamAttributeC2ERKS_
_ZN19QXmlStreamAttributeC2ERKS_	proc near

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A950
		mov	[ebp+var_18], offset sub_6ED722A4
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx+8], 0
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+10h], 0
		mov	dword ptr [edx+14h], 0
		mov	[edx+18h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+1Ch], 0
		mov	dword ptr [edx+20h], 0
		mov	[edx+24h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+28h], 0
		mov	dword ptr [eax+2Ch], 0
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	[esp], edx
		call	_ZN19QXmlStreamAttributeaSERKS_
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN19QXmlStreamAttributeC2ERKS_	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED722A4	proc near		; DATA XREF: _ZN19QXmlStreamAttributeC2ERKS_+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		add	eax, 24h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 18h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], edx
		call	sub_6ED94560
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED722A4	endp

; Exported entry 354. _ZN27QXmlStreamEntityDeclarationaSERKS_

; =============== S U B	R O U T	I N E =======================================


		public _ZN27QXmlStreamEntityDeclarationaSERKS_
_ZN27QXmlStreamEntityDeclarationaSERKS_	proc near
					; CODE XREF: _ZN27QXmlStreamEntityDeclarationC1ERKS_+CCp
					; _ZN27QXmlStreamEntityDeclarationC2ERKS_+CCp

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		push	esi
		push	ebx
		sub	esp, 10h
		mov	edi, ds:_ZN7QStringaSERKS_
		mov	ebx, [esp+1Ch+arg_0]
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], esi
		call	edi ; _ZN7QStringaSERKS_
		mov	eax, [esi+4]
		mov	[ebx+4], eax
		mov	eax, [esi+8]
		mov	[ebx+8], eax
		lea	eax, [esi+0Ch]
		mov	[esp+1Ch+var_18], eax
		lea	eax, [ebx+0Ch]
		mov	[esp+1Ch+var_1C], eax
		call	edi ; _ZN7QStringaSERKS_
		mov	eax, [esi+10h]
		mov	[ebx+10h], eax
		mov	eax, [esi+14h]
		mov	[ebx+14h], eax
		lea	eax, [esi+18h]
		mov	[esp+1Ch+var_18], eax
		lea	eax, [ebx+18h]
		mov	[esp+1Ch+var_1C], eax
		call	edi ; _ZN7QStringaSERKS_
		mov	eax, [esi+1Ch]
		mov	[ebx+1Ch], eax
		mov	eax, [esi+20h]
		mov	[ebx+20h], eax
		lea	eax, [esi+24h]
		mov	[esp+1Ch+var_18], eax
		lea	eax, [ebx+24h]
		mov	[esp+1Ch+var_1C], eax
		call	edi ; _ZN7QStringaSERKS_
		mov	eax, [esi+28h]
		mov	[ebx+28h], eax
		mov	eax, [esi+2Ch]
		mov	[ebx+2Ch], eax
		lea	eax, [esi+30h]
		mov	[esp+1Ch+var_18], eax
		lea	eax, [ebx+30h]
		mov	[esp+1Ch+var_1C], eax
		call	edi ; _ZN7QStringaSERKS_
		mov	eax, [esi+34h]
		mov	[ebx+34h], eax
		mov	eax, [esi+38h]
		mov	[ebx+38h], eax
		add	esp, 10h
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		retn
_ZN27QXmlStreamEntityDeclarationaSERKS_	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 348. _ZN27QXmlStreamEntityDeclarationC1ERKS_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN27QXmlStreamEntityDeclarationC1ERKS_
_ZN27QXmlStreamEntityDeclarationC1ERKS_	proc near ; CODE XREF: sub_6ED94CE0+141p

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A956
		mov	[ebp+var_18], offset sub_6ED7248E
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx+8], 0
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+10h], 0
		mov	dword ptr [edx+14h], 0
		mov	[edx+18h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+1Ch], 0
		mov	dword ptr [edx+20h], 0
		mov	[edx+24h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+28h], 0
		mov	dword ptr [edx+2Ch], 0
		mov	[edx+30h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [eax+34h], 0
		mov	dword ptr [eax+38h], 0
		mov	eax, [ebp+arg_4]
		mov	[esp], edx
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		call	_ZN27QXmlStreamEntityDeclarationaSERKS_
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN27QXmlStreamEntityDeclarationC1ERKS_	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED7248E	proc near		; DATA XREF: _ZN27QXmlStreamEntityDeclarationC1ERKS_+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		add	eax, 30h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 24h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 18h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], edx
		call	sub_6ED94560
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED7248E	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 350. _ZN27QXmlStreamEntityDeclarationC2ERKS_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN27QXmlStreamEntityDeclarationC2ERKS_
_ZN27QXmlStreamEntityDeclarationC2ERKS_	proc near

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A95C
		mov	[ebp+var_18], offset sub_6ED725EE
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx+8], 0
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+10h], 0
		mov	dword ptr [edx+14h], 0
		mov	[edx+18h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+1Ch], 0
		mov	dword ptr [edx+20h], 0
		mov	[edx+24h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+28h], 0
		mov	dword ptr [edx+2Ch], 0
		mov	[edx+30h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [eax+34h], 0
		mov	dword ptr [eax+38h], 0
		mov	eax, [ebp+arg_4]
		mov	[esp], edx
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		call	_ZN27QXmlStreamEntityDeclarationaSERKS_
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN27QXmlStreamEntityDeclarationC2ERKS_	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED725EE	proc near		; DATA XREF: _ZN27QXmlStreamEntityDeclarationC2ERKS_+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		add	eax, 30h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 24h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 18h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], edx
		call	sub_6ED94560
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED725EE	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 176. _ZN16QXmlStreamReader7addDataEPKc

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamReader7addDataEPKc
_ZN16QXmlStreamReader7addDataEPKc proc near

var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A962
		mov	[ebp+var_28], offset sub_6ED726FF
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZN10QByteArrayC1EPKc
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	_ZN16QXmlStreamReader7addDataERK10QByteArray
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED726F2
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_Z5qFreePv

loc_6ED726F2:				; CODE XREF: _ZN16QXmlStreamReader7addDataEPKc+6Dj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlStreamReader7addDataEPKc endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED726FF	proc near		; DATA XREF: _ZN16QXmlStreamReader7addDataEPKc+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-50h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_6ED90150
		mov	eax, [ebp-50h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED726FF	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 178. _ZN16QXmlStreamReader7addDataERK7QString

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamReader7addDataERK7QString
_ZN16QXmlStreamReader7addDataERK7QString proc near

var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_24], esp
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A968
		mov	[ebp+var_28], offset sub_6ED727D5
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		or	byte ptr [eax+181h], 8
		mov	edx, [ebp+arg_4]
		mov	[esp+8], edx
		mov	eax, [eax+70h]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZNK10QTextCodec11fromUnicodeERK7QString
		mov	eax, [ebp+arg_0]
		lea	edx, [ebp+var_C]
		mov	[ebp+var_48], 1
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	_ZN16QXmlStreamReader7addDataERK10QByteArray
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED727C8
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_Z5qFreePv

loc_6ED727C8:				; CODE XREF: _ZN16QXmlStreamReader7addDataERK7QString+83j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlStreamReader7addDataERK7QString endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED727D5	proc near		; DATA XREF: _ZN16QXmlStreamReader7addDataERK7QString+23o
		add	ebp, 8
		mov	edx, [ebp-44h]
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	[ebp-50h], edx
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED90150
		mov	eax, [ebp-50h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED727D5	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 216. _ZN16QXmlStreamWriter23setAutoFormattingIndentEi

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamWriter23setAutoFormattingIndentEi
_ZN16QXmlStreamWriter23setAutoFormattingIndentEi proc near

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A96E
		mov	[ebp+var_28], offset sub_6ED728C5
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	eax, [eax]
		sar	edx, 1Fh
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[ebp+var_50], eax
		mov	eax, [ebp+arg_4]
		sar	eax, 1Fh
		and	eax, 0FFFFFFE9h
		add	eax, 20h
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		xor	eax, edx
		sub	eax, edx
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZN10QByteArrayC1Eic
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_50]
		mov	[ebp+var_48], 1
		add	eax, 34h
		mov	[esp], eax
		call	ds:_ZN10QByteArrayaSERKS_
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED728B8
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_Z5qFreePv

loc_6ED728B8:				; CODE XREF: _ZN16QXmlStreamWriter23setAutoFormattingIndentEi+93j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlStreamWriter23setAutoFormattingIndentEi endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED728C5	proc near		; DATA XREF: _ZN16QXmlStreamWriter23setAutoFormattingIndentEi+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-54h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_6ED90150
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED728C5	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED72900	proc near		; CODE XREF: sub_6ED776A0+33p
					; sub_6ED776A0+5Ap ...

var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		lea	eax, [ebp+var_8]
		sub	esp, 60h
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A974
		mov	[ebp+var_28], offset sub_6ED72A57
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	ebx, [edx+28h]
		test	ebx, ebx
		jz	loc_6ED72A14
		test	byte ptr [edx+30h], 20h
		jnz	loc_6ED729F5
		mov	ebx, [ebp+arg_4]
		mov	eax, [ebx]
		mov	ecx, [ebx+8]
		test	eax, eax
		jz	loc_6ED72A07
		mov	ebx, [ebp+arg_4]
		mov	edx, [eax]
		mov	eax, [ebx+4]
		add	eax, eax
		add	eax, [edx+0Ch]

loc_6ED72966:				; CODE XREF: sub_6ED72900+10Fj
		mov	[esp+0Ch], ecx
		mov	ecx, [ebp+arg_0]
		lea	edx, [ebp+var_C]
		mov	[esp+8], eax
		mov	eax, [ecx+58h]
		mov	[esp], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	ds:_ZN12QTextEncoder11fromUnicodeEPK5QChari
		mov	eax, [ebp+var_C]
		mov	edx, [eax+8]
		sub	esp, 4
		mov	ebx, edx
		sar	ebx, 1Fh
		mov	[esp+8], edx
		mov	edx, [ebp+arg_0]
		mov	[esp+0Ch], ebx
		mov	eax, [eax+0Ch]
		mov	[esp+4], eax
		mov	eax, [edx+28h]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	ds:_ZN9QIODevice5writeEPKcx
		mov	ecx, [ebp+var_C]
		mov	ebx, [ecx+8]
		mov	esi, ebx
		xor	eax, ebx
		sar	esi, 1Fh
		xor	edx, esi
		or	edx, eax
		jz	short loc_6ED729D8
		mov	ebx, [ebp+arg_0]
		or	byte ptr [ebx+30h], 20h

loc_6ED729D8:				; CODE XREF: sub_6ED72900+CFj
		lock dec dword ptr [ecx]
		setnz	al
		test	al, al
		jnz	short loc_6ED729F5
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_Z5qFreePv

loc_6ED729F5:				; CODE XREF: sub_6ED72900+43j
					; sub_6ED72900+E0j ...
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		lea	esp, [ebp-8]
		pop	ebx
		pop	esi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED72A07:				; CODE XREF: sub_6ED72900+53j
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	eax, [eax+0Ch]
		jmp	loc_6ED72966
; ---------------------------------------------------------------------------

loc_6ED72A14:				; CODE XREF: sub_6ED72900+39j
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+2Ch]
		test	eax, eax
		jz	short loc_6ED72A41
		mov	ebx, [ebp+arg_4]
		lea	edx, [ebp+var_18]
		mov	[esp+8], eax
		mov	[esp], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], ebx
		call	ds:_ZNK10QStringRef8appendToEP7QString
		sub	esp, 4
		jmp	short loc_6ED729F5
; ---------------------------------------------------------------------------

loc_6ED72A41:				; CODE XREF: sub_6ED72900+11Cj
		mov	dword ptr [esp], offset	aQxmlstreamwrit	; "QXmlStreamWriter: No	device"
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_Z8qWarningPKcz
		jmp	short loc_6ED729F5
sub_6ED72900	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED72A57	proc near		; DATA XREF: sub_6ED72900+1Fo
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-50h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_6ED90150
		mov	edx, [ebp-50h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED72A57	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED72A90	proc near		; CODE XREF: sub_6ED73E40+2C4p
					; sub_6ED77460+7Fp ...

var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		lea	eax, [ebp+var_8]
		sub	esp, 60h
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A97A
		mov	[ebp+var_28], offset sub_6ED72BBF
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	esi, [edx+28h]
		test	esi, esi
		jz	loc_6ED72B80
		test	byte ptr [edx+30h], 20h
		jz	short loc_6ED72AE7

loc_6ED72AD5:				; CODE XREF: sub_6ED72A90+CDj
					; sub_6ED72A90+E6j ...
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		lea	esp, [ebp-8]
		pop	ebx
		pop	esi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED72AE7:				; CODE XREF: sub_6ED72A90+43j
		mov	ecx, [ebp+arg_4]
		lea	eax, [ebp+var_C]
		mov	[esp+8], ecx
		mov	edx, [edx+58h]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], edx
		call	ds:_ZN12QTextEncoder11fromUnicodeERK7QString
		mov	eax, [ebp+var_C]
		mov	edx, [eax+8]
		sub	esp, 4
		mov	ecx, edx
		sar	ecx, 1Fh
		mov	[esp+8], edx
		mov	edx, [ebp+arg_0]
		mov	[esp+0Ch], ecx
		mov	eax, [eax+0Ch]
		mov	[esp+4], eax
		mov	eax, [edx+28h]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	ds:_ZN9QIODevice5writeEPKcx
		mov	ecx, [ebp+var_C]
		mov	ebx, [ecx+8]
		mov	esi, ebx
		xor	eax, ebx
		sar	esi, 1Fh
		xor	edx, esi
		or	edx, eax
		jz	short loc_6ED72B55
		mov	eax, [ebp+arg_0]
		or	byte ptr [eax+30h], 20h

loc_6ED72B55:				; CODE XREF: sub_6ED72A90+BCj
		lock dec dword ptr [ecx]
		setnz	al
		test	al, al
		jnz	loc_6ED72AD5
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	loc_6ED72AD5
; ---------------------------------------------------------------------------
		align 10h

loc_6ED72B80:				; CODE XREF: sub_6ED72A90+39j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+2Ch]
		test	eax, eax
		jz	short loc_6ED72BA6
		mov	ecx, [ebp+arg_4]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], ecx
		call	ds:_ZN7QString6appendERKS_
		jmp	loc_6ED72AD5
; ---------------------------------------------------------------------------

loc_6ED72BA6:				; CODE XREF: sub_6ED72A90+F8j
		mov	dword ptr [esp], offset	aQxmlstreamwrit	; "QXmlStreamWriter: No	device"
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_Z8qWarningPKcz
		jmp	loc_6ED72AD5
sub_6ED72A90	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED72BBF	proc near		; DATA XREF: sub_6ED72A90+1Fo
		add	ebp, 8
		mov	edx, [ebp-44h]
		lea	eax, [ebp-0Ch]
		mov	[ebp-50h], edx
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED90150
		mov	ecx, [ebp-50h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
sub_6ED72BBF	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED72BF0	proc near		; CODE XREF: sub_6ED83560+2118p
					; sub_6ED83560+2C0Fp ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	esi, [esp+2Ch+arg_4]
		mov	ebx, [esp+2Ch+arg_0]
		mov	eax, [esi]
		mov	ecx, [ebx+4Ch]
		mov	edx, [ebx+50h]
		mov	edi, [eax+8]
		add	ecx, edi
		cmp	ecx, edx
		jl	short loc_6ED72C3B
		lea	eax, [ecx+1]
		add	edx, edx
		cmp	eax, edx
		jl	short loc_6ED72C77

loc_6ED72C19:				; CODE XREF: sub_6ED72BF0+89j
		mov	[ebx+50h], eax
		shl	eax, 2
		mov	[esp+2Ch+var_28], eax
		mov	eax, [ebx+48h]
		mov	[esp+2Ch+var_2C], eax
		call	ds:_Z8qReallocPvj
		test	eax, eax
		mov	[ebx+48h], eax
		jz	short loc_6ED72C7B

loc_6ED72C36:				; CODE XREF: sub_6ED72BF0+91j
		mov	eax, [esi]
		mov	edi, [eax+8]

loc_6ED72C3B:				; CODE XREF: sub_6ED72BF0+1Ej
		mov	edx, edi
		sub	edx, 1
		js	short loc_6ED72C6F
		mov	ebp, [ebx+48h]
		add	edx, edx
		xor	ecx, ecx
		add	edx, [eax+0Ch]
		lea	esi, [esi+0]

loc_6ED72C50:				; CODE XREF: sub_6ED72BF0+7Dj
		mov	esi, [ebx+4Ch]
		add	ecx, 1
		movzx	eax, word ptr [edx]
		sub	edx, 2
		add	esi, 1
		or	eax, 1A0000h
		cmp	ecx, edi
		mov	[ebx+4Ch], esi
		mov	[ebp+esi*4+0], eax
		jnz	short loc_6ED72C50

loc_6ED72C6F:				; CODE XREF: sub_6ED72BF0+50j
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED72C77:				; CODE XREF: sub_6ED72BF0+27j
		mov	eax, edx
		jmp	short loc_6ED72C19
; ---------------------------------------------------------------------------

loc_6ED72C7B:				; CODE XREF: sub_6ED72BF0+44j
		call	ds:_Z9qBadAllocv
		jmp	short loc_6ED72C36
sub_6ED72BF0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED72C90	proc near		; CODE XREF: sub_6ED82180+30Ep
					; sub_6ED83010+3F3p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	edi, [esp+2Ch+arg_4]
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_8]
		mov	ecx, [edi]
		mov	ebp, [ebx+4Ch]
		mov	edx, [ebx+50h]
		mov	eax, [ecx+8]
		add	ebp, eax
		cmp	ebp, edx
		jl	short loc_6ED72CDF
		lea	eax, [ebp+1]
		add	edx, edx
		cmp	eax, edx
		jl	short loc_6ED72D12

loc_6ED72CBD:				; CODE XREF: sub_6ED72C90+84j
		mov	[ebx+50h], eax
		shl	eax, 2
		mov	[esp+2Ch+var_28], eax
		mov	eax, [ebx+48h]
		mov	[esp+2Ch+var_2C], eax
		call	ds:_Z8qReallocPvj
		test	eax, eax
		mov	[ebx+48h], eax
		jz	short loc_6ED72D16

loc_6ED72CDA:				; CODE XREF: sub_6ED72C90+90j
		mov	ecx, [edi]
		mov	eax, [ecx+8]

loc_6ED72CDF:				; CODE XREF: sub_6ED72C90+22j
		sub	eax, 1
		cmp	eax, esi
		jl	short loc_6ED72D0A
		mov	ebp, [ebx+48h]
		lea	edx, [eax+eax]
		add	edx, [ecx+0Ch]
		nop

loc_6ED72CF0:				; CODE XREF: sub_6ED72C90+78j
		mov	ecx, [ebx+4Ch]
		sub	eax, 1
		movzx	edi, word ptr [edx]
		sub	edx, 2
		add	ecx, 1
		cmp	esi, eax
		mov	[ebx+4Ch], ecx
		mov	[ebp+ecx*4+0], edi
		jle	short loc_6ED72CF0

loc_6ED72D0A:				; CODE XREF: sub_6ED72C90+54j
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED72D12:				; CODE XREF: sub_6ED72C90+2Bj
		mov	eax, edx
		jmp	short loc_6ED72CBD
; ---------------------------------------------------------------------------

loc_6ED72D16:				; CODE XREF: sub_6ED72C90+48j
		call	ds:_Z9qBadAllocv
		lea	esi, [esi+0]
		jmp	short loc_6ED72CDA
sub_6ED72C90	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED72D30	proc near		; CODE XREF: sub_6ED83560+564Dp

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	esi, [esp+3Ch+arg_4]
		mov	ebx, [esp+3Ch+arg_0]
		mov	edi, [esi]
		mov	edx, [ebx+50h]
		mov	eax, [edi+8]
		mov	[esp+3Ch+var_20], eax
		add	eax, [ebx+4Ch]
		cmp	eax, edx
		jl	short loc_6ED72D89
		add	eax, 1
		add	edx, edx
		cmp	eax, edx
		jl	loc_6ED72E17

loc_6ED72D5F:				; CODE XREF: sub_6ED72D30+E9j
		mov	[ebx+50h], eax
		shl	eax, 2
		mov	[esp+3Ch+var_38], eax
		mov	eax, [ebx+48h]
		mov	[esp+3Ch+var_3C], eax
		call	ds:_Z8qReallocPvj
		test	eax, eax
		mov	[ebx+48h], eax
		jz	loc_6ED72E1E

loc_6ED72D80:				; CODE XREF: sub_6ED72D30+F4j
		mov	edi, [esi]
		mov	eax, [edi+8]
		mov	[esp+3Ch+var_20], eax

loc_6ED72D89:				; CODE XREF: sub_6ED72D30+20j
		mov	ecx, [esp+3Ch+var_20]
		sub	ecx, 1
		js	short loc_6ED72DF8
		add	ecx, ecx
		xor	edx, edx
		mov	ebp, [ebx+48h]
		jmp	short loc_6ED72DBC
; ---------------------------------------------------------------------------
		align 10h

loc_6ED72DA0:				; CODE XREF: sub_6ED72D30+97j
					; sub_6ED72D30+9Dj
		mov	esi, [ebx+4Ch]
		movzx	eax, ax
		add	esi, 1
		mov	[ebx+4Ch], esi
		mov	[ebp+esi*4+0], eax

loc_6ED72DB0:				; CODE XREF: sub_6ED72D30+E5j
		add	edx, 1
		sub	ecx, 2
		cmp	edx, [esp+3Ch+var_20]
		jz	short loc_6ED72DF8

loc_6ED72DBC:				; CODE XREF: sub_6ED72D30+69j
					; sub_6ED72D30+C6j
		mov	eax, [edi+0Ch]
		movzx	eax, word ptr [eax+ecx]
		cmp	ax, 3Bh
		jz	short loc_6ED72DA0
		cmp	ax, 26h
		jz	short loc_6ED72DA0
		cmp	ax, 0Dh
		jz	short loc_6ED72DDB
		cmp	ax, 0Ah
		jnz	short loc_6ED72E00

loc_6ED72DDB:				; CODE XREF: sub_6ED72D30+A3j
		mov	eax, [ebx+4Ch]
		add	edx, 1
		sub	ecx, 2
		add	eax, 1
		cmp	edx, [esp+3Ch+var_20]
		mov	[ebx+4Ch], eax
		mov	dword ptr [ebp+eax*4+0], 20h
		jnz	short loc_6ED72DBC

loc_6ED72DF8:				; CODE XREF: sub_6ED72D30+60j
					; sub_6ED72D30+8Aj
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED72E00:				; CODE XREF: sub_6ED72D30+A9j
		mov	esi, [ebx+4Ch]
		movzx	eax, ax
		or	eax, 1A0000h
		add	esi, 1
		mov	[ebx+4Ch], esi
		mov	[ebp+esi*4+0], eax
		jmp	short loc_6ED72DB0
; ---------------------------------------------------------------------------

loc_6ED72E17:				; CODE XREF: sub_6ED72D30+29j
		mov	eax, edx
		jmp	loc_6ED72D5F
; ---------------------------------------------------------------------------

loc_6ED72E1E:				; CODE XREF: sub_6ED72D30+4Aj
		call	ds:_Z9qBadAllocv
		jmp	loc_6ED72D80
sub_6ED72D30	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED72E30	proc near		; CODE XREF: sub_6ED83560+4CE9p
					; sub_6ED83560+4FAEp ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	esi, [esp+3Ch+arg_4]
		mov	ebx, [esp+3Ch+arg_0]
		mov	edi, [esi]
		mov	edx, [ebx+50h]
		mov	eax, [edi+8]
		mov	[esp+3Ch+var_20], eax
		add	eax, [ebx+4Ch]
		cmp	eax, edx
		jl	short loc_6ED72E85
		add	eax, 1
		add	edx, edx
		cmp	eax, edx
		jl	loc_6ED72EF0

loc_6ED72E5F:				; CODE XREF: sub_6ED72E30+C2j
		mov	[ebx+50h], eax
		shl	eax, 2
		mov	[esp+3Ch+var_38], eax
		mov	eax, [ebx+48h]
		mov	[esp+3Ch+var_3C], eax
		call	ds:_Z8qReallocPvj
		test	eax, eax
		mov	[ebx+48h], eax
		jz	short loc_6ED72EF7

loc_6ED72E7C:				; CODE XREF: sub_6ED72E30+D0j
		mov	edi, [esi]
		mov	eax, [edi+8]
		mov	[esp+3Ch+var_20], eax

loc_6ED72E85:				; CODE XREF: sub_6ED72E30+20j
		mov	ecx, [esp+3Ch+var_20]
		sub	ecx, 1
		js	short loc_6ED72EE7
		add	ecx, ecx
		xor	edx, edx
		mov	ebp, [ebx+48h]
		jmp	short loc_6ED72EB8
; ---------------------------------------------------------------------------

loc_6ED72E97:				; CODE XREF: sub_6ED72E30+93j
					; sub_6ED72E30+99j
		mov	esi, [ebx+4Ch]
		movzx	eax, ax
		add	edx, 1
		or	eax, 1A0000h
		sub	ecx, 2
		add	esi, 1
		cmp	edx, [esp+3Ch+var_20]
		mov	[ebx+4Ch], esi
		mov	[ebp+esi*4+0], eax
		jz	short loc_6ED72EE7

loc_6ED72EB8:				; CODE XREF: sub_6ED72E30+65j
					; sub_6ED72E30+B5j
		mov	eax, [edi+0Ch]
		movzx	eax, word ptr [eax+ecx]
		cmp	ax, 0Dh
		jz	short loc_6ED72E97
		cmp	ax, 0Ah
		jz	short loc_6ED72E97
		mov	esi, [ebx+4Ch]
		add	edx, 1
		sub	ecx, 2
		movzx	eax, ax
		add	esi, 1
		cmp	edx, [esp+3Ch+var_20]
		mov	[ebx+4Ch], esi
		mov	[ebp+esi*4+0], eax
		jnz	short loc_6ED72EB8

loc_6ED72EE7:				; CODE XREF: sub_6ED72E30+5Cj
					; sub_6ED72E30+86j
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED72EF0:				; CODE XREF: sub_6ED72E30+29j
		mov	eax, edx
		jmp	loc_6ED72E5F
; ---------------------------------------------------------------------------

loc_6ED72EF7:				; CODE XREF: sub_6ED72E30+4Aj
		call	ds:_Z9qBadAllocv
		lea	esi, [esi+0]
		jmp	loc_6ED72E7C
sub_6ED72E30	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 173. _ZN16QXmlStreamReader28addExtraNamespaceDeclarationERK30QXmlStreamNamespaceDeclaration

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamReader28addExtraNamespaceDeclarationERK30QXmlStreamNamespaceDeclaration
_ZN16QXmlStreamReader28addExtraNamespaceDeclarationERK30QXmlStreamNamespaceDeclaration proc near
					; CODE XREF: _ZN16QXmlStreamReader29addExtraNamespaceDeclarationsERK7QVectorI30QXmlStreamNamespaceDeclarationE+32p

var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A980
		mov	[ebp+var_18], offset sub_6ED73136
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		mov	edx, eax
		mov	[ebp+var_40], eax
		mov	eax, [eax+4]
		lea	ecx, [eax+1]
		mov	[ebp+var_48], ecx
		mov	ecx, edx
		mov	edx, [edx+8]
		cmp	[ebp+var_48], edx
		jl	loc_6ED73100
		add	eax, 2
		add	edx, edx
		cmp	eax, edx
		jl	loc_6ED730F5

loc_6ED72F6D:				; CODE XREF: _ZN16QXmlStreamReader28addExtraNamespaceDeclarationERK30QXmlStreamNamespaceDeclaration+1E7j
		mov	edx, [ebp+var_40]
		mov	[edx+8], eax
		lea	eax, [eax+eax*2]
		shl	eax, 3
		mov	[esp+4], eax
		mov	eax, [edx]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_Z8qReallocPvj
		mov	ecx, [ebp+var_40]
		test	eax, eax
		mov	[ebp+var_60], eax
		mov	[ecx], eax
		jz	loc_6ED73110
		mov	eax, [ecx+4]
		add	eax, 1
		mov	[ebp+var_48], eax

loc_6ED72FA8:				; CODE XREF: _ZN16QXmlStreamReader28addExtraNamespaceDeclarationERK30QXmlStreamNamespaceDeclaration+1F5j
					; _ZN16QXmlStreamReader28addExtraNamespaceDeclarationERK30QXmlStreamNamespaceDeclaration+221j
		mov	eax, [ebp+var_48]
		mov	ecx, [ebp+var_40]
		mov	edx, [ebp+arg_4]
		mov	[ecx+4], eax
		mov	eax, [ebp+var_40]
		mov	edx, [edx+8]
		mov	ecx, [ebp+arg_4]
		mov	eax, [eax+10h]
		mov	[ebp+var_5C], edx
		mov	edx, [ebp+var_40]
		mov	ecx, [ecx+4]
		mov	[ebp+var_54], eax
		mov	eax, [edx+0Ch]
		mov	[ebp+var_68], ecx
		mov	ecx, [ebp+var_54]
		cmp	ecx, [eax+8]
		jz	short loc_6ED72FF3
		mov	eax, edx
		add	eax, 0Ch
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	[ebp+var_38], 2
		call	ds:_ZN7QString6resizeEi

loc_6ED72FF3:				; CODE XREF: _ZN16QXmlStreamReader28addExtraNamespaceDeclarationERK30QXmlStreamNamespaceDeclaration+C8j
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+var_5C]
		mov	ecx, [ebp+arg_4]
		add	eax, 0Ch
		mov	[ebp+var_4C], eax
		mov	eax, [ebp+var_68]
		mov	[esp+0Ch], edx
		mov	edx, [ecx]
		add	eax, eax
		add	eax, [edx+0Ch]
		mov	edx, [ebp+var_4C]
		mov	[ebp+var_38], 2
		mov	[esp+8], eax
		mov	eax, [ebp+var_54]
		mov	[esp], edx
		mov	[esp+4], eax
		call	ds:_ZN7QString6insertEiPK5QChari
		mov	ecx, [ebp+var_48]
		mov	edx, [ebp+var_60]
		lea	eax, [ecx+ecx*2]
		mov	ecx, [ebp+var_40]
		lea	eax, [edx+eax*8]
		mov	[ebp+var_44], eax
		mov	eax, [ebp+var_5C]
		mov	edx, [ebp+var_44]
		add	eax, [ecx+10h]
		mov	[ecx+10h], eax
		mov	ecx, [ebp+var_4C]
		mov	[ebp+var_50], eax
		mov	eax, [ebp+var_54]
		mov	[edx], ecx
		mov	ecx, [ebp+var_5C]
		mov	[edx+4], eax
		mov	eax, [ebp+arg_4]
		mov	[edx+8], ecx
		mov	edx, [ebp+arg_4]
		mov	eax, [eax+14h]
		mov	ecx, [ebp+var_40]
		mov	edx, [edx+10h]
		mov	[ebp+var_58], eax
		mov	eax, [ecx+0Ch]
		mov	[ebp+var_64], edx
		mov	edx, [ebp+var_50]
		cmp	edx, [eax+8]
		jz	short loc_6ED73097
		mov	ecx, [ebp+var_4C]
		mov	[esp+4], edx
		mov	[ebp+var_38], 1
		mov	[esp], ecx
		call	ds:_ZN7QString6resizeEi

loc_6ED73097:				; CODE XREF: _ZN16QXmlStreamReader28addExtraNamespaceDeclarationERK30QXmlStreamNamespaceDeclaration+16Ej
		mov	eax, [ebp+var_58]
		mov	ecx, [ebp+arg_4]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+var_64]
		mov	edx, [ecx+0Ch]
		add	eax, eax
		add	eax, [edx+0Ch]
		mov	edx, [ebp+var_4C]
		mov	[ebp+var_38], 1
		mov	[esp+8], eax
		mov	eax, [ebp+var_50]
		mov	[esp], edx
		mov	[esp+4], eax
		call	ds:_ZN7QString6insertEiPK5QChari
		mov	ecx, [ebp+var_40]
		mov	eax, [ebp+var_58]
		mov	edx, [ebp+var_44]
		add	[ecx+10h], eax
		mov	ecx, [ebp+var_4C]
		mov	eax, [ebp+var_50]
		mov	[edx+0Ch], ecx
		mov	ecx, [ebp+var_58]
		mov	[edx+10h], eax
		lea	eax, [ebp+var_3C]
		mov	[edx+14h], ecx
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED730F5:				; CODE XREF: _ZN16QXmlStreamReader28addExtraNamespaceDeclarationERK30QXmlStreamNamespaceDeclaration+57j
		mov	eax, edx
		jmp	loc_6ED72F6D
; ---------------------------------------------------------------------------
		align 10h

loc_6ED73100:				; CODE XREF: _ZN16QXmlStreamReader28addExtraNamespaceDeclarationERK30QXmlStreamNamespaceDeclaration+4Aj
		mov	eax, [ecx]
		mov	[ebp+var_60], eax
		jmp	loc_6ED72FA8
; ---------------------------------------------------------------------------
		align 10h

loc_6ED73110:				; CODE XREF: _ZN16QXmlStreamReader28addExtraNamespaceDeclarationERK30QXmlStreamNamespaceDeclaration+89j
		mov	[ebp+var_38], 0FFFFFFFFh
		call	ds:_Z9qBadAllocv
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+var_40]
		mov	eax, [eax]
		mov	[ebp+var_60], eax
		mov	eax, [edx+4]
		add	eax, 1
		mov	[ebp+var_48], eax
		jmp	loc_6ED72FA8
_ZN16QXmlStreamReader28addExtraNamespaceDeclarationERK30QXmlStreamNamespaceDeclaration endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED73136	proc near		; DATA XREF: _ZN16QXmlStreamReader28addExtraNamespaceDeclarationERK30QXmlStreamNamespaceDeclaration+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED73136	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 174. _ZN16QXmlStreamReader29addExtraNamespaceDeclarationsERK7QVectorI30QXmlStreamNamespaceDeclarationE

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlStreamReader29addExtraNamespaceDeclarationsERK7QVectorI30QXmlStreamNamespaceDeclarationE
_ZN16QXmlStreamReader29addExtraNamespaceDeclarationsERK7QVectorI30QXmlStreamNamespaceDeclarationE proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		push	esi
		push	ebx
		sub	esp, 10h
		mov	esi, [esp+1Ch+arg_4]
		mov	edi, [esp+1Ch+arg_0]
		mov	eax, [esi]
		mov	eax, [eax+8]
		test	eax, eax
		jle	short loc_6ED7318E
		xor	ebx, ebx
		lea	esi, [esi+0]

loc_6ED73170:				; CODE XREF: _ZN16QXmlStreamReader29addExtraNamespaceDeclarationsERK7QVectorI30QXmlStreamNamespaceDeclarationE+3Cj
		imul	eax, ebx, 1Ch
		add	ebx, 1
		add	eax, 10h
		add	eax, [esi]
		mov	[esp+1Ch+var_1C], edi
		mov	[esp+1Ch+var_18], eax
		call	_ZN16QXmlStreamReader28addExtraNamespaceDeclarationERK30QXmlStreamNamespaceDeclaration
		mov	eax, [esi]
		cmp	ebx, [eax+8]
		jl	short loc_6ED73170

loc_6ED7318E:				; CODE XREF: _ZN16QXmlStreamReader29addExtraNamespaceDeclarationsERK7QVectorI30QXmlStreamNamespaceDeclarationE+15j
		add	esp, 10h
		pop	ebx
		pop	esi
		pop	edi
		retn
_ZN16QXmlStreamReader29addExtraNamespaceDeclarationsERK7QVectorI30QXmlStreamNamespaceDeclarationE endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 307. _ZN19QXmlStreamAttributeC1ERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN19QXmlStreamAttributeC1ERK7QStringS2_
_ZN19QXmlStreamAttributeC1ERK7QStringS2_ proc near
					; CODE XREF: _ZN20QXmlStreamAttributes6appendERK7QStringS2_+4Dp

var_70		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 84h
		mov	[ebp+var_4C], eax
		lea	eax, [ebp+var_6C]
		mov	[ebp+var_54], offset sub_6ED997C0
		mov	[ebp+var_50], offset dword_6ED9A988
		mov	[ebp+var_48], offset sub_6ED733E6
		mov	[ebp+var_44], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_70], edx
		mov	[ecx], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	dword ptr [ecx+4], 0
		mov	dword ptr [ecx+8], 0
		mov	[ecx+0Ch], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	dword ptr [ecx+10h], 0
		mov	dword ptr [ecx+14h], 0
		mov	[ecx+18h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	dword ptr [ecx+1Ch], 0
		mov	dword ptr [ecx+20h], 0
		mov	[ecx+24h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	dword ptr [ecx+28h], 0
		mov	dword ptr [ecx+2Ch], 0
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0
		mov	word ptr [esp+4], 3Ah
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_68], 7
		mov	[esp], eax
		call	ds:_ZNK7QString7indexOfE5QChariN2Qt15CaseSensitivityE
		mov	ecx, [ebp+arg_4]
		mov	edx, [ecx]
		mov	ecx, eax
		not	ecx
		mov	[ebp+var_14], edx
		add	ecx, [edx+8]
		lock inc dword ptr [edx]
		setnz	bl
		add	eax, 1
		mov	[ebp+var_10], eax
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], ecx
		mov	[ebp+var_68], 5
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_10]
		mov	edx, [ebp+arg_0]
		mov	[edx+4], eax
		mov	eax, [ebp+var_C]
		mov	[edx+8], eax
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED73387

loc_6ED732BC:				; CODE XREF: _ZN19QXmlStreamAttributeC1ERK7QStringS2_+1FAj
		mov	ecx, [ebp+arg_4]
		mov	eax, [ecx]
		mov	edx, [eax+8]
		mov	[ebp+var_20], eax
		lock inc dword ptr [eax]
		setnz	cl
		lea	eax, [ebp+var_20]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_1C], 0
		mov	[ebp+var_18], edx
		mov	[ebp+var_68], 3
		add	eax, 18h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_1C]
		mov	edx, [ebp+arg_0]
		mov	[edx+1Ch], eax
		mov	eax, [ebp+var_18]
		mov	[edx+20h], eax
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED733B5
		mov	edx, [ebp+arg_8]
		test	edx, edx
		jz	loc_6ED733D3

loc_6ED7331F:				; CODE XREF: _ZN19QXmlStreamAttributeC1ERK7QStringS2_+22Dj
		mov	ecx, [ebp+arg_8]
		mov	eax, [ecx]
		mov	edx, [eax+8]
		mov	[ebp+var_2C], eax
		lock inc dword ptr [eax]
		setnz	cl

loc_6ED73330:				; CODE XREF: _ZN19QXmlStreamAttributeC1ERK7QStringS2_+241j
		lea	eax, [ebp+var_2C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_28], 0
		mov	[ebp+var_24], edx
		mov	[ebp+var_68], 1
		add	eax, 24h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_28]
		mov	ecx, [ebp+arg_0]
		mov	[ecx+28h], eax
		mov	eax, [ebp+var_24]
		mov	[ecx+2Ch], eax
		mov	eax, [ebp+var_2C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED733A0

loc_6ED73373:				; CODE XREF: _ZN19QXmlStreamAttributeC1ERK7QStringS2_+213j
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 84h
		pop	ebx
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED73387:				; CODE XREF: _ZN19QXmlStreamAttributeC1ERK7QStringS2_+116j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_68], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED732BC
; ---------------------------------------------------------------------------
		align 10h

loc_6ED733A0:				; CODE XREF: _ZN19QXmlStreamAttributeC1ERK7QStringS2_+1D1j
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_68], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED73373
; ---------------------------------------------------------------------------

loc_6ED733B5:				; CODE XREF: _ZN19QXmlStreamAttributeC1ERK7QStringS2_+16Ej
		mov	eax, [ebp+var_20]
		mov	[ebp+var_68], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	edx, [ebp+arg_8]
		test	edx, edx
		jnz	loc_6ED7331F

loc_6ED733D3:				; CODE XREF: _ZN19QXmlStreamAttributeC1ERK7QStringS2_+179j
		mov	eax, [ebp+var_70]
		mov	[ebp+var_2C], eax
		lock inc dword ptr [eax]
		setnz	al
		xor	edx, edx
		jmp	loc_6ED73330
_ZN19QXmlStreamAttributeC1ERK7QStringS2_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED733E6	proc near		; DATA XREF: _ZN19QXmlStreamAttributeC1ERK7QStringS2_+21o
		add	ebp, 8
		mov	eax, [ebp-68h]
		mov	edx, [ebp-64h]
		cmp	eax, 1
		mov	[ebp-74h], edx
		jz	short loc_6ED7342A
		cmp	eax, 2
		jz	loc_6ED734A1
		cmp	eax, 3
		jz	short loc_6ED7342A
		cmp	eax, 4
		jz	loc_6ED7348D
		cmp	eax, 5
		jz	short loc_6ED7342A
		cmp	eax, 6
		jz	short loc_6ED7342A
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560

loc_6ED7342A:				; CODE XREF: sub_6ED733E6+Fj
					; sub_6ED733E6+1Dj ...
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-68h], 0
		add	eax, 24h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-68h], 0
		add	eax, 18h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-68h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	ecx, [ebp+8]
		mov	dword ptr [ebp-68h], 0
		mov	[esp+0], ecx
		call	sub_6ED94560
		mov	eax, [ebp-74h]
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED7348D:				; CODE XREF: sub_6ED733E6+22j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		jmp	short loc_6ED7342A
; ---------------------------------------------------------------------------

loc_6ED734A1:				; CODE XREF: sub_6ED733E6+14j
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		jmp	loc_6ED7342A
sub_6ED733E6	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 311. _ZN19QXmlStreamAttributeC2ERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN19QXmlStreamAttributeC2ERK7QStringS2_
_ZN19QXmlStreamAttributeC2ERK7QStringS2_ proc near

var_70		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 84h
		mov	[ebp+var_4C], eax
		lea	eax, [ebp+var_6C]
		mov	[ebp+var_54], offset sub_6ED997C0
		mov	[ebp+var_50], offset word_6ED9A99A
		mov	[ebp+var_48], offset sub_6ED73706
		mov	[ebp+var_44], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_70], edx
		mov	[ecx], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	dword ptr [ecx+4], 0
		mov	dword ptr [ecx+8], 0
		mov	[ecx+0Ch], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	dword ptr [ecx+10h], 0
		mov	dword ptr [ecx+14h], 0
		mov	[ecx+18h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	dword ptr [ecx+1Ch], 0
		mov	dword ptr [ecx+20h], 0
		mov	[ecx+24h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	dword ptr [ecx+28h], 0
		mov	dword ptr [ecx+2Ch], 0
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0
		mov	word ptr [esp+4], 3Ah
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_68], 7
		mov	[esp], eax
		call	ds:_ZNK7QString7indexOfE5QChariN2Qt15CaseSensitivityE
		mov	ecx, [ebp+arg_4]
		mov	edx, [ecx]
		mov	ecx, eax
		not	ecx
		mov	[ebp+var_14], edx
		add	ecx, [edx+8]
		lock inc dword ptr [edx]
		setnz	bl
		add	eax, 1
		mov	[ebp+var_10], eax
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], ecx
		mov	[ebp+var_68], 5
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_10]
		mov	edx, [ebp+arg_0]
		mov	[edx+4], eax
		mov	eax, [ebp+var_C]
		mov	[edx+8], eax
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED736A7

loc_6ED735DC:				; CODE XREF: _ZN19QXmlStreamAttributeC2ERK7QStringS2_+1FAj
		mov	ecx, [ebp+arg_4]
		mov	eax, [ecx]
		mov	edx, [eax+8]
		mov	[ebp+var_20], eax
		lock inc dword ptr [eax]
		setnz	cl
		lea	eax, [ebp+var_20]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_1C], 0
		mov	[ebp+var_18], edx
		mov	[ebp+var_68], 3
		add	eax, 18h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_1C]
		mov	edx, [ebp+arg_0]
		mov	[edx+1Ch], eax
		mov	eax, [ebp+var_18]
		mov	[edx+20h], eax
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED736D5
		mov	ecx, [ebp+arg_8]
		test	ecx, ecx
		jz	loc_6ED736F3

loc_6ED7363F:				; CODE XREF: _ZN19QXmlStreamAttributeC2ERK7QStringS2_+22Dj
		mov	ecx, [ebp+arg_8]
		mov	eax, [ecx]
		mov	edx, [eax+8]
		mov	[ebp+var_2C], eax
		lock inc dword ptr [eax]
		setnz	cl

loc_6ED73650:				; CODE XREF: _ZN19QXmlStreamAttributeC2ERK7QStringS2_+241j
		lea	eax, [ebp+var_2C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_28], 0
		mov	[ebp+var_24], edx
		mov	[ebp+var_68], 1
		add	eax, 24h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_28]
		mov	ecx, [ebp+arg_0]
		mov	[ecx+28h], eax
		mov	eax, [ebp+var_24]
		mov	[ecx+2Ch], eax
		mov	eax, [ebp+var_2C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED736C0

loc_6ED73693:				; CODE XREF: _ZN19QXmlStreamAttributeC2ERK7QStringS2_+213j
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 84h
		pop	ebx
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED736A7:				; CODE XREF: _ZN19QXmlStreamAttributeC2ERK7QStringS2_+116j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_68], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED735DC
; ---------------------------------------------------------------------------
		align 10h

loc_6ED736C0:				; CODE XREF: _ZN19QXmlStreamAttributeC2ERK7QStringS2_+1D1j
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_68], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED73693
; ---------------------------------------------------------------------------

loc_6ED736D5:				; CODE XREF: _ZN19QXmlStreamAttributeC2ERK7QStringS2_+16Ej
		mov	eax, [ebp+var_20]
		mov	[ebp+var_68], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	ecx, [ebp+arg_8]
		test	ecx, ecx
		jnz	loc_6ED7363F

loc_6ED736F3:				; CODE XREF: _ZN19QXmlStreamAttributeC2ERK7QStringS2_+179j
		mov	eax, [ebp+var_70]
		mov	[ebp+var_2C], eax
		lock inc dword ptr [eax]
		setnz	al
		xor	edx, edx
		jmp	loc_6ED73650
_ZN19QXmlStreamAttributeC2ERK7QStringS2_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED73706	proc near		; DATA XREF: _ZN19QXmlStreamAttributeC2ERK7QStringS2_+21o
		add	ebp, 8
		mov	eax, [ebp-68h]
		mov	edx, [ebp-64h]
		cmp	eax, 1
		mov	[ebp-74h], edx
		jz	short loc_6ED7374A
		cmp	eax, 2
		jz	loc_6ED737C1
		cmp	eax, 3
		jz	short loc_6ED7374A
		cmp	eax, 4
		jz	loc_6ED737AD
		cmp	eax, 5
		jz	short loc_6ED7374A
		cmp	eax, 6
		jz	short loc_6ED7374A
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560

loc_6ED7374A:				; CODE XREF: sub_6ED73706+Fj
					; sub_6ED73706+1Dj ...
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-68h], 0
		add	eax, 24h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-68h], 0
		add	eax, 18h
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-68h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	ecx, [ebp+8]
		mov	dword ptr [ebp-68h], 0
		mov	[esp+0], ecx
		call	sub_6ED94560
		mov	eax, [ebp-74h]
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED737AD:				; CODE XREF: sub_6ED73706+22j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		jmp	short loc_6ED7374A
; ---------------------------------------------------------------------------

loc_6ED737C1:				; CODE XREF: sub_6ED73706+14j
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		jmp	loc_6ED7374A
sub_6ED73706	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED737E0	proc near		; CODE XREF: sub_6ED75B20+3Cp
					; .text:6ED7607Cp ...

var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 84h
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A9AC
		mov	[ebp+var_28], offset sub_6ED73B0D
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	dword ptr [edx], 0
		mov	dword ptr [edx+4], 0FFFFFFFFh
		mov	dword ptr [edx+8], 0
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [ecx+18h], 0
		mov	dword ptr [ecx+1Ch], 0FFFFFFFFh
		mov	dword ptr [ecx+20h], 10h
		mov	dword ptr [esp+4], 380h
		mov	dword ptr [esp], 0
		mov	[ebp+var_48], 3
		call	ds:_Z8qReallocPvj
		mov	ebx, [ebp+arg_0]
		test	eax, eax
		mov	[ebx+18h], eax
		jz	loc_6ED73AD7

loc_6ED7387A:				; CODE XREF: sub_6ED737E0+306j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		add	eax, 0Ch
		mov	[ebp+var_54], eax
		mov	eax, [edx+0Ch]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED73AC8

loc_6ED73894:				; CODE XREF: sub_6ED737E0+2F2j
		mov	ecx, [ebp+var_54]
		mov	dword ptr [esp+4], 20h
		mov	[ebp+var_48], 3
		mov	[esp], ecx
		call	ds:_ZN7QString7reallocEi
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx+0Ch]

loc_6ED738B5:				; CODE XREF: sub_6ED737E0+2ECj
		or	byte ptr [eax+10h], 10h
		mov	eax, [ebp+arg_0]
		mov	ebx, [ebp+arg_0]
		mov	dword ptr [eax+10h], 0
		mov	eax, [eax+4]
		mov	ecx, [ebx+8]
		lea	edx, [eax+1]
		cmp	edx, ecx
		jl	loc_6ED73A90
		add	eax, 2
		add	ecx, ecx
		cmp	eax, ecx
		jl	loc_6ED73A82

loc_6ED738E4:				; CODE XREF: sub_6ED737E0+2A4j
		mov	edx, [ebp+arg_0]
		mov	[edx+8], eax
		lea	eax, [eax+eax*2]
		shl	eax, 3
		mov	[esp+4], eax
		mov	eax, [edx]
		mov	[ebp+var_48], 3
		mov	[esp], eax
		call	ds:_Z8qReallocPvj
		mov	ecx, [ebp+arg_0]
		test	eax, eax
		mov	[ecx], eax
		jz	loc_6ED73AF0
		mov	edx, [ecx+4]
		add	edx, 1

loc_6ED73919:				; CODE XREF: sub_6ED737E0+2B2j
					; sub_6ED737E0+328j
		mov	ecx, [ebp+arg_0]
		mov	[ecx+4], edx
		lea	edx, [edx+edx*2]
		lea	edx, [eax+edx*8]
		mov	[ebp+var_50], edx
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aXml_2 ; "xml"
		mov	[ebp+var_48], 3
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [eax+8]
		mov	ecx, [ebp+arg_0]
		mov	ebx, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	[ebp+var_64], edx
		mov	edx, [ecx+0Ch]
		mov	ebx, [ebx+10h]
		cmp	ebx, [edx+8]
		mov	[ebp+var_5C], ebx
		jz	short loc_6ED7397B
		mov	[esp+4], ebx
		mov	ebx, [ebp+var_54]
		mov	[ebp+var_48], 2
		mov	[esp], ebx
		call	ds:_ZN7QString6resizeEi
		mov	eax, [ebp+var_C]

loc_6ED7397B:				; CODE XREF: sub_6ED737E0+17Fj
		mov	edx, [ebp+var_64]
		mov	ecx, [ebp+var_5C]
		mov	ebx, [ebp+var_54]
		mov	[esp+0Ch], edx
		mov	eax, [eax+0Ch]
		mov	[esp+4], ecx
		mov	[esp], ebx
		mov	[ebp+var_48], 2
		mov	[esp+8], eax
		call	ds:_ZN7QString6insertEiPK5QChari
		mov	ecx, [ebp+var_50]
		mov	edx, [ebp+var_64]
		mov	eax, [ebp+arg_0]
		mov	[ecx], ebx
		mov	ebx, [ebp+var_5C]
		add	[eax+10h], edx
		mov	eax, [ebp+var_C]
		mov	[ecx+4], ebx
		mov	[ecx+8], edx
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED73AB0

loc_6ED739CB:				; CODE XREF: sub_6ED737E0+2E3j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aHttpWww_w3_o_1	; "http://www.w3.org/XML/1998/namespace"
		mov	[ebp+var_48], 3
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+arg_0]
		mov	ecx, [eax+8]
		mov	[ebp+var_10], eax
		mov	edx, [edx+10h]
		mov	[ebp+var_60], ecx
		mov	[ebp+var_58], edx
		mov	edx, [ebx+0Ch]
		mov	ecx, [ebp+var_58]
		cmp	ecx, [edx+8]
		jz	short loc_6ED73A21
		mov	ebx, [ebp+var_54]
		mov	[esp+4], ecx
		mov	[ebp+var_48], 1
		mov	[esp], ebx
		call	ds:_ZN7QString6resizeEi
		mov	eax, [ebp+var_10]

loc_6ED73A21:				; CODE XREF: sub_6ED737E0+225j
		mov	edx, [ebp+var_60]
		mov	ecx, [ebp+var_58]
		mov	ebx, [ebp+var_54]
		mov	[esp+0Ch], edx
		mov	eax, [eax+0Ch]
		mov	[esp+4], ecx
		mov	[esp], ebx
		mov	[ebp+var_48], 1
		mov	[esp+8], eax
		call	ds:_ZN7QString6insertEiPK5QChari
		mov	ecx, [ebp+var_50]
		mov	edx, [ebp+var_60]
		mov	eax, [ebp+arg_0]
		mov	[ecx+0Ch], ebx
		mov	ebx, [ebp+var_58]
		add	[eax+10h], edx
		mov	eax, [ebp+var_10]
		mov	[ecx+10h], ebx
		mov	[ecx+14h], edx
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED73A97

loc_6ED73A6E:				; CODE XREF: sub_6ED737E0+2CAj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 84h
		pop	ebx
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED73A82:				; CODE XREF: sub_6ED737E0+FEj
		mov	eax, ecx
		jmp	loc_6ED738E4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED73A90:				; CODE XREF: sub_6ED737E0+F1j
		mov	eax, [ebx]
		jmp	loc_6ED73919
; ---------------------------------------------------------------------------

loc_6ED73A97:				; CODE XREF: sub_6ED737E0+28Cj
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED73A6E
; ---------------------------------------------------------------------------
		align 10h

loc_6ED73AB0:				; CODE XREF: sub_6ED737E0+1E5j
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED739CB
; ---------------------------------------------------------------------------

loc_6ED73AC8:				; CODE XREF: sub_6ED737E0+AEj
		cmp	dword ptr [eax+4], 1Fh
		jg	loc_6ED738B5
		jmp	loc_6ED73894
; ---------------------------------------------------------------------------

loc_6ED73AD7:				; CODE XREF: sub_6ED737E0+94j
		mov	esi, esi
		lea	edi, [edi+0]
		call	ds:_Z9qBadAllocv
		jmp	loc_6ED7387A
; ---------------------------------------------------------------------------
		align 10h

loc_6ED73AF0:				; CODE XREF: sub_6ED737E0+12Dj
		mov	[ebp+var_48], 3
		call	ds:_Z9qBadAllocv
		mov	ebx, [ebp+arg_0]
		mov	edx, [ebx+4]
		mov	eax, [ebx]
		add	edx, 1
		jmp	loc_6ED73919
sub_6ED737E0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED73B0D	proc near		; DATA XREF: sub_6ED737E0+24o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-6Ch], edx
		jz	short loc_6ED73B95
		cmp	eax, 2
		jz	short loc_6ED73B35
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED73B35:				; CODE XREF: sub_6ED73B0D+14j
					; sub_6ED73B0D+9Aj
		mov	ebx, [ebp+8]
		mov	ecx, [ebp-6Ch]
		mov	eax, [ebx+18h]
		mov	[ebp-68h], ecx
		test	eax, eax
		jz	short loc_6ED73B55
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_Z5qFreePv

loc_6ED73B55:				; CODE XREF: sub_6ED73B0D+36j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-48h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp+8]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED73B83
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_Z5qFreePv

loc_6ED73B83:				; CODE XREF: sub_6ED73B0D+64j
		mov	ecx, [ebp-68h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED73B95:				; CODE XREF: sub_6ED73B0D+Fj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		jmp	short loc_6ED73B35
sub_6ED73B0D	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED73BB0	proc near		; CODE XREF: _ZN16QXmlStreamWriter8setCodecEP10QTextCodec+57p
					; sub_6ED75B20+E9p ...

var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 64h
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A9B6
		mov	[ebp+var_28], offset sub_6ED73C95
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_6EDA1A89 ; " "
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	ecx, [ebp+arg_0]
		lea	edx, [ebp+var_10]
		mov	[esp+8], edx
		mov	edx, [ecx+58h]
		mov	[ebp+var_48], 2
		mov	[ebp+var_10], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[esp+4], edx
		call	ds:_ZN12QTextEncoder11fromUnicodeERK7QString
		sub	esp, 4
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED73C80

loc_6ED73C33:				; CODE XREF: sub_6ED73BB0+E3j
		mov	edx, [ebp+var_C]
		mov	ebx, [ebp+arg_0]
		cmp	dword ptr [edx+8], 1
		movzx	eax, byte ptr [ebx+30h]
		setz	cl
		shl	ecx, 7
		and	eax, 7Fh
		or	eax, ecx
		mov	[ebx+30h], al
		lock dec dword ptr [edx]
		setnz	al
		test	al, al
		jnz	short loc_6ED73C6C
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_Z5qFreePv

loc_6ED73C6C:				; CODE XREF: sub_6ED73BB0+A7j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	ebx, [ebp+var_4]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED73C80:				; CODE XREF: sub_6ED73BB0+81j
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED73C33
sub_6ED73BB0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED73C95	proc near		; DATA XREF: sub_6ED73BB0+21o
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-50h], eax
		jz	short loc_6ED73CC8
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED90150
		mov	ecx, [ebp-50h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED73CC8:				; CODE XREF: sub_6ED73C95+Dj
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	ebx, [ebp-50h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ebx
		call	_Unwind_SjLj_Resume
sub_6ED73C95	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 218. _ZN16QXmlStreamWriter8setCodecEP10QTextCodec

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlStreamWriter8setCodecEP10QTextCodec
_ZN16QXmlStreamWriter8setCodecEP10QTextCodec proc near
					; CODE XREF: _ZN16QXmlStreamWriter8setCodecEPKc+93p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 2Ch
		mov	[esp+2Ch+var_8], esi
		mov	esi, [esp+2Ch+arg_4]
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_C], ebx
		mov	[esp+2Ch+var_4], edi
		test	esi, esi
		mov	ebx, [eax]
		jz	short loc_6ED73D4C
		mov	edi, [ebx+58h]
		mov	[ebx+54h], esi
		test	edi, edi
		jz	short loc_6ED73D28
		mov	[esp+2Ch+var_2C], edi
		call	ds:_ZN12QTextEncoderD1Ev
		mov	[esp+2Ch+var_2C], edi
		call	sub_6ED988B0

loc_6ED73D28:				; CODE XREF: _ZN16QXmlStreamWriter8setCodecEP10QTextCodec+25j
		lea	eax, [esp+2Ch+var_10]
		mov	[esp+2Ch+var_10], 1
		mov	[esp+2Ch+var_28], eax
		mov	[esp+2Ch+var_2C], esi
		call	ds:_ZNK10QTextCodec11makeEncoderE6QFlagsINS_14ConversionFlagEE
		mov	[ebx+58h], eax
		mov	[esp+2Ch+var_2C], ebx
		call	sub_6ED73BB0

loc_6ED73D4C:				; CODE XREF: _ZN16QXmlStreamWriter8setCodecEP10QTextCodec+1Bj
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
_ZN16QXmlStreamWriter8setCodecEP10QTextCodec endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 219. _ZN16QXmlStreamWriter8setCodecEPKc

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamWriter8setCodecEPKc
_ZN16QXmlStreamWriter8setCodecEPKc proc	near

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A9BE
		mov	[ebp+var_28], offset sub_6ED73E05
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZN10QByteArrayC1EPKc
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN10QTextCodec12codecForNameERK10QByteArray
		mov	[ebp+var_50], eax
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED73DDF
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_Z5qFreePv

loc_6ED73DDF:				; CODE XREF: _ZN16QXmlStreamWriter8setCodecEPKc+6Aj
		mov	eax, [ebp+var_50]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	_ZN16QXmlStreamWriter8setCodecEP10QTextCodec
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlStreamWriter8setCodecEPKc endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED73E05	proc near		; DATA XREF: _ZN16QXmlStreamWriter8setCodecEPKc+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-54h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_6ED90150
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED73E05	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED73E40	proc near		; CODE XREF: _ZN16QXmlStreamWriter14writeAttributeERK7QStringS2_+68p
					; _ZN16QXmlStreamWriter15writeCharactersERK7QString+2Dp ...

var_77		= byte ptr -77h
var_76		= word ptr -76h
var_74		= dword	ptr -74h
var_6E		= word ptr -6Eh
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_A		= word ptr -0Ah
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= byte ptr  10h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 94h
		movzx	eax, [ebp+arg_8]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_54], offset sub_6ED997C0
		mov	[ebp+var_50], offset dword_6ED9A9C4
		mov	[ebp+var_77], al
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		mov	[ebp+var_4C], edx
		mov	[ebp+var_48], offset sub_6ED7414B
		mov	[ebp+var_44], esp
		call	_Unwind_SjLj_Register
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+var_10]
		mov	ebx, [ebp+arg_4]
		mov	ecx, [edx]
		mov	eax, [ebx]
		cmp	ecx, 1
		mov	ebx, [eax+8]
		jz	loc_6ED7413D

loc_6ED73E9E:				; CODE XREF: sub_6ED73E40+306j
		lea	eax, [ebp+var_10]
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	[ebp+var_68], 1
		call	ds:_ZN7QString7reallocEi
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	edx, [ebp+var_10]

loc_6ED73EBD:				; CODE XREF: sub_6ED73E40+300j
		or	byte ptr [edx+10h], 10h
		mov	ebx, [eax+8]
		test	ebx, ebx
		jle	loc_6ED740F0
		mov	[ebp+var_74], 0
		jmp	short loc_6ED73F3B
; ---------------------------------------------------------------------------

loc_6ED73ED5:				; CODE XREF: sub_6ED73E40+13Aj
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED73FB1

loc_6ED73EE3:				; CODE XREF: sub_6ED73E40+16Bj
		mov	edx, [eax+8]

loc_6ED73EE6:				; CODE XREF: sub_6ED73E40+17Dj
		add	edx, 1
		mov	[esp], edx
		mov	[ebp+var_68], 1
		call	ds:_ZN7QString4growEi
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	ds:_ZN7QString7reallocEi
		mov	eax, [ebp+var_10]
		mov	edx, [eax+8]

loc_6ED73F0F:				; CODE XREF: sub_6ED73E40+177j
		mov	ecx, [eax+0Ch]
		movzx	ebx, [ebp+var_6E]
		mov	[ecx+edx*2], bx
		add	edx, 1
		mov	[eax+8], edx
		mov	word ptr [ecx+edx*2], 0

loc_6ED73F26:				; CODE XREF: sub_6ED73E40+1A3j
					; sub_6ED73E40+1C9j ...
		mov	edx, [ebp+arg_4]
		add	[ebp+var_74], 1
		mov	ebx, [ebp+var_74]
		mov	eax, [edx]
		cmp	ebx, [eax+8]
		jge	loc_6ED740F0

loc_6ED73F3B:				; CODE XREF: sub_6ED73E40+93j
		mov	eax, [eax+0Ch]
		mov	ebx, [ebp+var_74]
		movzx	eax, word ptr [eax+ebx*2]
		cmp	ax, 3Ch
		mov	[ebp+var_6E], ax
		mov	[ebp+var_A], ax
		jz	short loc_6ED73FC2
		cmp	[ebp+var_6E], 3Eh
		jz	loc_6ED73FE8
		cmp	[ebp+var_6E], 26h
		jz	loc_6ED74010
		cmp	[ebp+var_6E], 22h
		xchg	ax, ax
		jz	loc_6ED74036
		cmp	[ebp+var_77], 0
		jz	loc_6ED73ED5
		lea	edx, [ebp+var_A]
		mov	[esp], edx
		mov	[ebp+var_68], 1
		call	ds:_ZNK5QChar7isSpaceEv
		test	al, al
		jnz	loc_6ED74042
		movzx	ebx, [ebp+var_A]
		mov	eax, [ebp+var_10]
		mov	[ebp+var_6E], bx
		mov	edx, [eax]
		cmp	edx, 1
		jnz	loc_6ED73EE3

loc_6ED73FB1:				; CODE XREF: sub_6ED73E40+9Dj
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jl	loc_6ED73F0F
		jmp	loc_6ED73EE6
; ---------------------------------------------------------------------------

loc_6ED73FC2:				; CODE XREF: sub_6ED73E40+111j
		mov	[ebp+var_14], offset aLt_1 ; "&lt;"
		lea	eax, [ebp+var_14]

loc_6ED73FCC:				; CODE XREF: sub_6ED73E40+200j
					; sub_6ED73E40+282j
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_68], 1
		call	ds:_ZN7QString6appendERK13QLatin1String
		jmp	loc_6ED73F26
; ---------------------------------------------------------------------------

loc_6ED73FE8:				; CODE XREF: sub_6ED73E40+118j
		mov	[ebp+var_18], offset aGt_1 ; "&gt;"
		lea	eax, [ebp+var_18]

loc_6ED73FF2:				; CODE XREF: sub_6ED73E40+29Bj
		lea	edx, [ebp+var_10]
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_68], 1
		call	ds:_ZN7QString6appendERK13QLatin1String
		jmp	loc_6ED73F26
; ---------------------------------------------------------------------------
		align 10h

loc_6ED74010:				; CODE XREF: sub_6ED73E40+123j
		mov	[ebp+var_1C], offset aAmp_1 ; "&amp;"
		lea	eax, [ebp+var_1C]

loc_6ED7401A:				; CODE XREF: sub_6ED73E40+2AAj
		lea	ebx, [ebp+var_10]
		mov	[esp+4], eax
		mov	[esp], ebx
		mov	[ebp+var_68], 1
		call	ds:_ZN7QString6appendERK13QLatin1String
		jmp	loc_6ED73F26
; ---------------------------------------------------------------------------

loc_6ED74036:				; CODE XREF: sub_6ED73E40+130j
		mov	[ebp+var_20], offset aQuot_2 ; "&quot;"
		lea	eax, [ebp+var_20]
		jmp	short loc_6ED73FCC
; ---------------------------------------------------------------------------

loc_6ED74042:				; CODE XREF: sub_6ED73E40+155j
		movzx	eax, [ebp+var_A]
		cmp	ax, 0Ah
		mov	[ebp+var_76], ax
		jz	loc_6ED740D1
		cmp	[ebp+var_76], 0Dh
		jz	loc_6ED740E0
		cmp	[ebp+var_76], 9
		jz	short loc_6ED740B8
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED740C7
		mov	edx, [eax+8]

loc_6ED74073:				; CODE XREF: sub_6ED73E40+28Fj
		add	edx, 1
		mov	[esp], edx
		mov	[ebp+var_68], 1
		call	ds:_ZN7QString4growEi
		lea	edx, [ebp+var_10]
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZN7QString7reallocEi
		mov	eax, [ebp+var_10]
		mov	edx, [eax+8]

loc_6ED7409C:				; CODE XREF: sub_6ED73E40+28Dj
		mov	ecx, [eax+0Ch]
		movzx	ebx, [ebp+var_76]
		mov	[ecx+edx*2], bx
		add	edx, 1
		mov	[eax+8], edx
		mov	word ptr [ecx+edx*2], 0
		jmp	loc_6ED73F26
; ---------------------------------------------------------------------------

loc_6ED740B8:				; CODE XREF: sub_6ED73E40+224j
		mov	[ebp+var_2C], offset a9	; "&#9;"
		lea	eax, [ebp+var_2C]
		jmp	loc_6ED73FCC
; ---------------------------------------------------------------------------

loc_6ED740C7:				; CODE XREF: sub_6ED73E40+22Ej
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jl	short loc_6ED7409C
		jmp	short loc_6ED74073
; ---------------------------------------------------------------------------

loc_6ED740D1:				; CODE XREF: sub_6ED73E40+20Ej
		mov	[ebp+var_24], offset a10 ; "&#10;"
		lea	eax, [ebp+var_24]
		jmp	loc_6ED73FF2
; ---------------------------------------------------------------------------

loc_6ED740E0:				; CODE XREF: sub_6ED73E40+219j
		mov	[ebp+var_28], offset a13 ; "&#13;"
		lea	eax, [ebp+var_28]
		jmp	loc_6ED7401A
; ---------------------------------------------------------------------------
		align 10h

loc_6ED740F0:				; CODE XREF: sub_6ED73E40+86j
					; sub_6ED73E40+F5j
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_68], 1
		mov	[esp], eax
		call	sub_6ED72A90
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED74129
		mov	eax, [ebp+var_10]
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED74129:				; CODE XREF: sub_6ED73E40+2D4j
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 94h
		pop	ebx
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED7413D:				; CODE XREF: sub_6ED73E40+58j
		cmp	ebx, [edx+4]
		jle	loc_6ED73EBD
		jmp	loc_6ED73E9E
sub_6ED73E40	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED7414B	proc near		; DATA XREF: sub_6ED73E40+2Bo
		add	ebp, 8
		mov	eax, [ebp-64h]
		mov	dword ptr [ebp-68h], 0
		mov	[ebp-7Ch], eax
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-7Ch]
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED7414B	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 352. _ZN27QXmlStreamEntityDeclarationD1Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN27QXmlStreamEntityDeclarationD1Ev
_ZN27QXmlStreamEntityDeclarationD1Ev proc near ; CODE XREF: sub_6ED94C90+26p
					; sub_6ED94CE0+221p

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A9CA
		mov	[ebp+var_18], offset sub_6ED7428E
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+30h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED74273

loc_6ED741C3:				; CODE XREF: _ZN27QXmlStreamEntityDeclarationD1Ev+109j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+24h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED74258

loc_6ED741D7:				; CODE XREF: _ZN27QXmlStreamEntityDeclarationD1Ev+EEj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+18h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED74240

loc_6ED741E7:				; CODE XREF: _ZN27QXmlStreamEntityDeclarationD1Ev+D6j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED74228

loc_6ED741F7:				; CODE XREF: _ZN27QXmlStreamEntityDeclarationD1Ev+BEj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED7421B
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED7421B:				; CODE XREF: _ZN27QXmlStreamEntityDeclarationD1Ev+84j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED74228:				; CODE XREF: _ZN27QXmlStreamEntityDeclarationD1Ev+75j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		mov	[ebp+var_38], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED741F7
; ---------------------------------------------------------------------------

loc_6ED74240:				; CODE XREF: _ZN27QXmlStreamEntityDeclarationD1Ev+65j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+18h]
		mov	[ebp+var_38], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED741E7
; ---------------------------------------------------------------------------

loc_6ED74258:				; CODE XREF: _ZN27QXmlStreamEntityDeclarationD1Ev+51j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+24h]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED741D7
; ---------------------------------------------------------------------------

loc_6ED74273:				; CODE XREF: _ZN27QXmlStreamEntityDeclarationD1Ev+3Dj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+30h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED741C3
_ZN27QXmlStreamEntityDeclarationD1Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED7428E	proc near		; DATA XREF: _ZN27QXmlStreamEntityDeclarationD1Ev+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-40h], edx
		jz	short loc_6ED742BE
		cmp	eax, 2
		jz	short loc_6ED742D3
		cmp	eax, 3
		jz	short loc_6ED742E8
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 24h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED742BE:				; CODE XREF: sub_6ED7428E+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 18h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED742D3:				; CODE XREF: sub_6ED7428E+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED742E8:				; CODE XREF: sub_6ED7428E+19j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED7428E	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 353. _ZN27QXmlStreamEntityDeclarationD2Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN27QXmlStreamEntityDeclarationD2Ev
_ZN27QXmlStreamEntityDeclarationD2Ev proc near

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A9F4
		mov	[ebp+var_18], offset sub_6ED7441E
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+30h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED74403

loc_6ED74353:				; CODE XREF: _ZN27QXmlStreamEntityDeclarationD2Ev+109j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+24h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED743E8

loc_6ED74367:				; CODE XREF: _ZN27QXmlStreamEntityDeclarationD2Ev+EEj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+18h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED743D0

loc_6ED74377:				; CODE XREF: _ZN27QXmlStreamEntityDeclarationD2Ev+D6j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED743B8

loc_6ED74387:				; CODE XREF: _ZN27QXmlStreamEntityDeclarationD2Ev+BEj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED743AB
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED743AB:				; CODE XREF: _ZN27QXmlStreamEntityDeclarationD2Ev+84j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED743B8:				; CODE XREF: _ZN27QXmlStreamEntityDeclarationD2Ev+75j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		mov	[ebp+var_38], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED74387
; ---------------------------------------------------------------------------

loc_6ED743D0:				; CODE XREF: _ZN27QXmlStreamEntityDeclarationD2Ev+65j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+18h]
		mov	[ebp+var_38], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED74377
; ---------------------------------------------------------------------------

loc_6ED743E8:				; CODE XREF: _ZN27QXmlStreamEntityDeclarationD2Ev+51j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+24h]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED74367
; ---------------------------------------------------------------------------

loc_6ED74403:				; CODE XREF: _ZN27QXmlStreamEntityDeclarationD2Ev+3Dj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+30h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED74353
_ZN27QXmlStreamEntityDeclarationD2Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED7441E	proc near		; DATA XREF: _ZN27QXmlStreamEntityDeclarationD2Ev+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-40h], edx
		jz	short loc_6ED7444E
		cmp	eax, 2
		jz	short loc_6ED74463
		cmp	eax, 3
		jz	short loc_6ED74478
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 24h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED7444E:				; CODE XREF: sub_6ED7441E+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 18h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED74463:				; CODE XREF: sub_6ED7441E+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED74478:				; CODE XREF: sub_6ED7441E+19j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED7441E	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 368. _ZN30QXmlStreamNamespaceDeclarationD1Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN30QXmlStreamNamespaceDeclarationD1Ev
_ZN30QXmlStreamNamespaceDeclarationD1Ev	proc near ; CODE XREF: sub_6ED954E0+26p
					; sub_6ED95530+237p

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9AA00
		mov	[ebp+var_18], offset sub_6ED74528
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED74510

loc_6ED744DF:				; CODE XREF: _ZN30QXmlStreamNamespaceDeclarationD1Ev+86j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED74503
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED74503:				; CODE XREF: _ZN30QXmlStreamNamespaceDeclarationD1Ev+4Cj
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED74510:				; CODE XREF: _ZN30QXmlStreamNamespaceDeclarationD1Ev+3Dj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED744DF
_ZN30QXmlStreamNamespaceDeclarationD1Ev	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED74528	proc near		; DATA XREF: _ZN30QXmlStreamNamespaceDeclarationD1Ev+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	[esp+0], edx
		call	sub_6ED94560
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED74528	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED74560	proc near		; CODE XREF: _ZNK16QXmlStreamReader21namespaceDeclarationsEv+63p

var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0A8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset dword_6ED9AA24
		mov	[ebp+var_38], offset sub_6ED74819
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_0]
		imul	edx, [edx+1Ch],	38h
		mov	ecx, [ecx+18h]
		add	edx, ecx
		mov	[ebp+var_84], edx
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_84]
		mov	eax, [edx+4]
		add	edx, 0DCh
		mov	ecx, [ecx+34h]
		mov	[ebp+var_88], edx
		add	eax, 1
		sub	eax, ecx
		mov	[ebp+var_80], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+0DCh]
		mov	eax, [edx+4]
		cmp	[ebp+var_80], eax
		jg	loc_6ED747E9
		test	byte ptr [edx+0Ch], 2
		jz	loc_6ED747D1

loc_6ED745E9:				; CODE XREF: sub_6ED74560+277j
					; sub_6ED74560+283j ...
		mov	ecx, [ebp+var_88]
		mov	edx, [ebp+var_80]
		mov	[esp+8], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], ecx
		mov	[esp+4], edx
		call	sub_6ED95530
		mov	ecx, [ebp+var_80]
		test	ecx, ecx
		jle	loc_6ED747C4
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	edx, ds:_ZN7QStringaSERKS_
		mov	[ebp+var_74], 0
		mov	[ebp+var_64], eax
		mov	[ebp+var_60], eax
		mov	[ebp+var_68], edx
		mov	[ebp+var_6C], edx
		jmp	loc_6ED7472D
; ---------------------------------------------------------------------------

loc_6ED74637:				; CODE XREF: sub_6ED74560+235j
		mov	eax, [eax]
		mov	[ebp+var_14], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED74642:				; CODE XREF: sub_6ED74560+24Aj
		mov	ecx, [ebp+var_70]
		mov	edx, [ebp+var_7C]
		mov	eax, [ecx+4]
		mov	[ebp+var_10], eax
		mov	eax, [ecx+8]
		mov	[ebp+var_58], 2
		mov	[ebp+var_C], eax
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		imul	eax, [ebp+var_78], 1Ch
		lea	eax, [edx+eax+10h]
		mov	[esp], eax
		call	[ebp+var_68]
		mov	edx, [ebp+var_10]
		imul	eax, [ebp+var_78], 1Ch
		add	eax, [ebp+var_7C]
		mov	[eax+14h], edx
		mov	edx, [ebp+var_C]
		mov	[eax+18h], edx
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED746A3
		mov	eax, [ebp+var_14]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED746A3:				; CODE XREF: sub_6ED74560+12Ej
		mov	edx, [ebp+var_70]
		mov	eax, [edx+0Ch]
		test	eax, eax
		jz	loc_6ED747B0
		mov	eax, [eax]
		mov	[ebp+var_20], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED746BC:				; CODE XREF: sub_6ED74560+25Fj
		mov	ecx, [ebp+var_70]
		mov	edx, [ebp+var_7C]
		mov	eax, [ecx+10h]
		mov	[ebp+var_1C], eax
		mov	eax, [ecx+14h]
		mov	[ebp+var_58], 1
		mov	[ebp+var_18], eax
		lea	eax, [ebp+var_20]
		mov	[esp+4], eax
		imul	eax, [ebp+var_78], 1Ch
		lea	eax, [edx+eax+1Ch]
		mov	[esp], eax
		call	[ebp+var_6C]
		mov	edx, [ebp+var_1C]
		imul	eax, [ebp+var_78], 1Ch
		add	eax, [ebp+var_7C]
		mov	[eax+20h], edx
		mov	edx, [ebp+var_18]
		mov	[eax+24h], edx
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED7471D
		mov	eax, [ebp+var_20]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED7471D:				; CODE XREF: sub_6ED74560+1A8j
		add	[ebp+var_74], 1
		mov	edx, [ebp+var_74]
		cmp	[ebp+var_80], edx
		jle	loc_6ED747C4

loc_6ED7472D:				; CODE XREF: sub_6ED74560+D2j
		mov	ecx, [ebp+var_84]
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_74]
		add	eax, [ecx+34h]
		mov	edx, [edx]
		mov	ecx, [ebp+arg_0]
		lea	eax, [eax+eax*2]
		shl	eax, 3
		add	eax, edx
		mov	[ebp+var_70], eax
		mov	eax, [ecx+0DCh]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED7477C
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], eax
		mov	eax, [ebp+var_88]
		mov	[esp], eax
		call	sub_6ED95530

loc_6ED7477C:				; CODE XREF: sub_6ED74560+1F7j
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_74]
		mov	edx, [edx+0DCh]
		mov	[ebp+var_78], ecx
		mov	[ebp+var_7C], edx
		mov	edx, [ebp+var_70]
		mov	eax, [edx]
		test	eax, eax
		jnz	loc_6ED74637
		mov	ecx, [ebp+var_64]
		mov	edx, [ebp+var_60]
		mov	[ebp+var_14], ecx
		lock inc dword ptr [edx]
		setnz	al
		jmp	loc_6ED74642
; ---------------------------------------------------------------------------
		align 10h

loc_6ED747B0:				; CODE XREF: sub_6ED74560+14Bj
		mov	ecx, [ebp+var_64]
		mov	edx, [ebp+var_60]
		mov	[ebp+var_20], ecx
		lock inc dword ptr [edx]
		setnz	al
		jmp	loc_6ED746BC
; ---------------------------------------------------------------------------

loc_6ED747C4:				; CODE XREF: sub_6ED74560+AEj
					; sub_6ED74560+1C7j
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED747D1:				; CODE XREF: sub_6ED74560+83j
		mov	ecx, [ebp+var_80]
		cmp	ecx, [edx+8]
		jge	loc_6ED745E9
		mov	edx, eax
		sar	edx, 1
		cmp	ecx, edx
		jge	loc_6ED745E9

loc_6ED747E9:				; CODE XREF: sub_6ED74560+79j
		mov	eax, [ebp+var_80]
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 1Ch
		mov	dword ptr [esp], 2Ch
		mov	[esp+4], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN11QVectorData4growEiiib
		jmp	loc_6ED745E9
sub_6ED74560	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED74819	proc near		; DATA XREF: sub_6ED74560+23o
		add	ebp, 8
		mov	ecx, [ebp-54h]
		cmp	dword ptr [ebp-58h], 1
		mov	[ebp-8Ch], ecx
		jz	short loc_6ED74852
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		mov	eax, [ebp-8Ch]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED74852:				; CODE XREF: sub_6ED74819+10j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-8Ch]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
sub_6ED74819	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 485. _ZNK16QXmlStreamReader21namespaceDeclarationsEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamReader21namespaceDeclarationsEv
_ZNK16QXmlStreamReader21namespaceDeclarationsEv	proc near
					; CODE XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader+1C7p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_4], esi
		mov	esi, [eax]
		mov	edx, [esi+0DCh]
		mov	eax, [edx+8]
		test	eax, eax
		jnz	short loc_6ED748A8
		cmp	dword ptr [esi+7Ch], 4
		jz	short loc_6ED748E0

loc_6ED748A8:				; CODE XREF: _ZNK16QXmlStreamReader21namespaceDeclarationsEv+20j
					; _ZNK16QXmlStreamReader21namespaceDeclarationsEv+6Ej
		mov	[ebx], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebx]
		test	byte ptr [eax+0Ch], 1
		jnz	short loc_6ED748CE
		mov	edx, [eax+4]
		mov	[esp+1Ch+var_14], edx
		mov	eax, [eax+8]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED95530

loc_6ED748CE:				; CODE XREF: _ZNK16QXmlStreamReader21namespaceDeclarationsEv+36j
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED748E0:				; CODE XREF: _ZNK16QXmlStreamReader21namespaceDeclarationsEv+26j
		mov	[esp+1Ch+var_1C], esi
		call	sub_6ED74560
		mov	edx, [esi+0DCh]
		jmp	short loc_6ED748A8
_ZNK16QXmlStreamReader21namespaceDeclarationsEv	endp

; Exported entry 369. _ZN30QXmlStreamNamespaceDeclarationD2Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN30QXmlStreamNamespaceDeclarationD2Ev
_ZN30QXmlStreamNamespaceDeclarationD2Ev	proc near

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9AA2C
		mov	[ebp+var_18], offset sub_6ED74978
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED74960

loc_6ED7492F:				; CODE XREF: _ZN30QXmlStreamNamespaceDeclarationD2Ev+86j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED74953
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED74953:				; CODE XREF: _ZN30QXmlStreamNamespaceDeclarationD2Ev+4Cj
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED74960:				; CODE XREF: _ZN30QXmlStreamNamespaceDeclarationD2Ev+3Dj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED7492F
_ZN30QXmlStreamNamespaceDeclarationD2Ev	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED74978	proc near		; DATA XREF: _ZN30QXmlStreamNamespaceDeclarationD2Ev+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	[esp+0], edx
		call	sub_6ED94560
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED74978	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 359. _ZN29QXmlStreamNotationDeclarationD1Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN29QXmlStreamNotationDeclarationD1Ev
_ZN29QXmlStreamNotationDeclarationD1Ev proc near ; CODE	XREF: sub_6ED95090+26p
					; sub_6ED950E0+253p

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9AA32
		mov	[ebp+var_18], offset sub_6ED74A60
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+18h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED74A48

loc_6ED749EF:				; CODE XREF: _ZN29QXmlStreamNotationDeclarationD1Ev+AEj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED74A30

loc_6ED749FF:				; CODE XREF: _ZN29QXmlStreamNotationDeclarationD1Ev+96j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED74A23
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED74A23:				; CODE XREF: _ZN29QXmlStreamNotationDeclarationD1Ev+5Cj
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED74A30:				; CODE XREF: _ZN29QXmlStreamNotationDeclarationD1Ev+4Dj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED749FF
; ---------------------------------------------------------------------------

loc_6ED74A48:				; CODE XREF: _ZN29QXmlStreamNotationDeclarationD1Ev+3Dj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+18h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED749EF
_ZN29QXmlStreamNotationDeclarationD1Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED74A60	proc near		; DATA XREF: _ZN29QXmlStreamNotationDeclarationD1Ev+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-40h], eax
		jz	short loc_6ED74A84
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED74A84:				; CODE XREF: sub_6ED74A60+Dj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED74A60	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED74AB0	proc near		; CODE XREF: _ZNK16QXmlStreamReader18entityDeclarationsEv+21p
					; _ZNK16QXmlStreamReader20notationDeclarationsEv+21p

var_104		= dword	ptr -104h
var_100		= dword	ptr -100h
var_FC		= dword	ptr -0FCh
var_F8		= dword	ptr -0F8h
var_F4		= dword	ptr -0F4h
var_F0		= dword	ptr -0F0h
var_EC		= dword	ptr -0ECh
var_E8		= dword	ptr -0E8h
var_E4		= dword	ptr -0E4h
var_E0		= dword	ptr -0E0h
var_DC		= dword	ptr -0DCh
var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_D0		= dword	ptr -0D0h
var_CC		= dword	ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= byte ptr -0ACh
var_A8		= dword	ptr -0A8h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 118h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_8C], eax
		lea	eax, [ebp+var_AC]
		mov	[esp], eax
		mov	[ebp+var_94], offset sub_6ED997C0
		mov	[ebp+var_90], offset dword_6ED9AA58
		mov	[ebp+var_88], offset sub_6ED754B9
		mov	[ebp+var_84], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_0]
		mov	eax, [edx+0D0h]
		add	edx, 0D8h
		mov	[ebp+var_F8], edx
		add	eax, 1
		mov	[ebp+var_104], eax
		mov	edx, [ecx+0D8h]
		mov	eax, [edx+4]
		cmp	[ebp+var_104], eax
		jg	loc_6ED75443
		test	byte ptr [edx+0Ch], 2
		jz	loc_6ED75428

loc_6ED74B34:				; CODE XREF: sub_6ED74AB0+981j
					; sub_6ED74AB0+98Dj ...
		mov	edx, [ebp+var_104]
		mov	ecx, [ebp+var_F8]
		mov	[esp+8], eax
		mov	[ebp+var_A8], 0FFFFFFFFh
		mov	[esp+4], edx
		mov	[esp], ecx
		call	sub_6ED950E0
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0D0h]
		test	eax, eax
		js	loc_6ED74E60
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	ecx, ds:_ZN7QStringaSERKS_
		mov	[ebp+var_F0], 0
		mov	[ebp+var_EC], 0
		mov	[ebp+var_BC], edx
		mov	[ebp+var_B8], edx
		mov	[ebp+var_C8], ecx
		mov	[ebp+var_CC], ecx
		jmp	loc_6ED74D91
; ---------------------------------------------------------------------------

loc_6ED74BA8:				; CODE XREF: sub_6ED74AB0+34Ej
		mov	eax, [eax]
		mov	[ebp+var_18], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED74BB3:				; CODE XREF: sub_6ED74AB0+369j
		mov	ecx, [ebp+var_E0]
		mov	edx, [ebp+var_D4]
		mov	eax, [ecx+4]
		mov	[ebp+var_14], eax
		mov	eax, [ecx+8]
		mov	ecx, [ebp+var_E4]
		mov	[ebp+var_A8], 9
		mov	[ebp+var_10], eax
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		lea	eax, [edx+edx*4]
		lea	eax, [ecx+eax*8+10h]
		mov	[esp], eax
		call	[ebp+var_C8]
		mov	edx, [ebp+var_D4]
		mov	ecx, [ebp+var_E4]
		lea	eax, [edx+edx*4]
		mov	edx, [ebp+var_14]
		lea	eax, [ecx+eax*8]
		mov	[eax+14h], edx
		mov	edx, [ebp+var_10]
		mov	[eax+18h], edx
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED74C33
		mov	eax, [ebp+var_18]
		mov	[ebp+var_A8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED74C33:				; CODE XREF: sub_6ED74AB0+16Bj
		mov	edx, [ebp+var_E0]
		mov	eax, [edx+18h]
		test	eax, eax
		jz	loc_6ED74E40
		mov	eax, [eax]
		mov	[ebp+var_24], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED74C4F:				; CODE XREF: sub_6ED74AB0+3A5j
		mov	ecx, [ebp+var_E0]
		mov	edx, [ebp+var_D4]
		mov	eax, [ecx+1Ch]
		mov	[ebp+var_20], eax
		mov	eax, [ecx+20h]
		mov	ecx, [ebp+var_E4]
		mov	[ebp+var_A8], 8
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_24]
		mov	[esp+4], eax
		lea	eax, [edx+edx*4]
		lea	eax, [ecx+eax*8+1Ch]
		mov	[esp], eax
		call	[ebp+var_CC]
		mov	edx, [ebp+var_D4]
		mov	ecx, [ebp+var_E4]
		lea	eax, [edx+edx*4]
		mov	edx, [ebp+var_20]
		lea	eax, [ecx+eax*8]
		mov	[eax+20h], edx
		mov	edx, [ebp+var_1C]
		mov	[eax+24h], edx
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED74CCF
		mov	eax, [ebp+var_24]
		mov	[ebp+var_A8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED74CCF:				; CODE XREF: sub_6ED74AB0+207j
		mov	edx, [ebp+var_E0]
		mov	eax, [edx+0Ch]
		test	eax, eax
		jz	loc_6ED74E20
		mov	eax, [eax]
		mov	[ebp+var_30], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED74CEB:				; CODE XREF: sub_6ED74AB0+385j
		mov	ecx, [ebp+var_E0]
		mov	edx, [ebp+var_D4]
		mov	eax, [ecx+10h]
		mov	[ebp+var_2C], eax
		mov	eax, [ecx+14h]
		mov	ecx, [ebp+var_E4]
		mov	[ebp+var_A8], 7
		mov	[ebp+var_28], eax
		lea	eax, [ebp+var_30]
		mov	[esp+4], eax
		lea	eax, [edx+edx*4]
		lea	eax, [ecx+eax*8+28h]
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	edx, [ebp+var_D4]
		mov	ecx, [ebp+var_E4]
		lea	eax, [edx+edx*4]
		mov	edx, [ebp+var_2C]
		lea	eax, [ecx+eax*8]
		mov	[eax+2Ch], edx
		mov	edx, [ebp+var_28]
		mov	[eax+30h], edx
		mov	eax, [ebp+var_30]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED74D6B
		mov	eax, [ebp+var_30]
		mov	[ebp+var_A8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED74D6B:				; CODE XREF: sub_6ED74AB0+2A3j
		mov	edx, [ebp+arg_0]
		add	[ebp+var_EC], 1
		add	[ebp+var_F0], 24h
		mov	eax, [edx+0D0h]
		add	eax, 1
		cmp	[ebp+var_EC], eax
		jge	loc_6ED74E60

loc_6ED74D91:				; CODE XREF: sub_6ED74AB0+F3j
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_EC]
		mov	ecx, [ebp+var_F0]
		add	ecx, [edx+0CCh]
		mov	[ebp+var_D4], eax
		mov	[ebp+var_E0], ecx
		mov	eax, [edx+0D8h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED74DE5
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_A8], 0FFFFFFFFh
		mov	[esp+4], eax
		mov	eax, [ebp+var_F8]
		mov	[esp], eax
		call	sub_6ED950E0

loc_6ED74DE5:				; CODE XREF: sub_6ED74AB0+30Dj
		mov	ecx, [ebp+var_E0]
		mov	edx, [ebp+arg_0]
		mov	eax, [ecx]
		mov	edx, [edx+0D8h]
		test	eax, eax
		mov	[ebp+var_E4], edx
		jnz	loc_6ED74BA8
		mov	eax, [ebp+var_BC]
		mov	edx, [ebp+var_B8]
		mov	[ebp+var_18], eax
		lock inc dword ptr [edx]
		setnz	al
		jmp	loc_6ED74BB3
; ---------------------------------------------------------------------------
		align 10h

loc_6ED74E20:				; CODE XREF: sub_6ED74AB0+22Aj
		mov	ecx, [ebp+var_BC]
		mov	edx, [ebp+var_B8]
		mov	[ebp+var_30], ecx
		lock inc dword ptr [edx]
		setnz	al
		jmp	loc_6ED74CEB
; ---------------------------------------------------------------------------
		align 10h

loc_6ED74E40:				; CODE XREF: sub_6ED74AB0+18Ej
		mov	ecx, [ebp+var_BC]
		mov	edx, [ebp+var_B8]
		mov	[ebp+var_24], ecx
		lock inc dword ptr [edx]
		setnz	al
		jmp	loc_6ED74C4F
; ---------------------------------------------------------------------------
		align 10h

loc_6ED74E60:				; CODE XREF: sub_6ED74AB0+B5j
					; sub_6ED74AB0+2DBj
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+0E4h]
		mov	dword ptr [ecx+0D0h], 0FFFFFFFFh
		add	ecx, 0ECh
		mov	[ebp+var_F4], ecx
		add	eax, 1
		mov	[ebp+var_100], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+0ECh]
		mov	eax, [edx+4]
		cmp	[ebp+var_100], eax
		jg	loc_6ED753F2
		test	byte ptr [edx+0Ch], 2
		jz	loc_6ED753D7

loc_6ED74EAA:				; CODE XREF: sub_6ED74AB0+930j
					; sub_6ED74AB0+93Cj ...
		mov	ecx, [ebp+var_F4]
		mov	edx, [ebp+var_100]
		mov	[esp+8], eax
		mov	[ebp+var_A8], 0FFFFFFFFh
		mov	[esp], ecx
		mov	[esp+4], edx
		call	sub_6ED94CE0
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+0E4h]
		test	ecx, ecx
		js	loc_6ED75340
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	ecx, ds:_ZN7QStringaSERKS_
		mov	[ebp+var_E8], 0
		mov	[ebp+var_B4], edx
		mov	[ebp+var_B0], edx
		mov	[ebp+var_C0], ecx
		mov	[ebp+var_C4], ecx
		jmp	loc_6ED75233
; ---------------------------------------------------------------------------

loc_6ED74F14:				; CODE XREF: sub_6ED74AB0+7F4j
		mov	eax, [eax]
		mov	[ebp+var_3C], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED74F1F:				; CODE XREF: sub_6ED74AB0+80Fj
		mov	ecx, [ebp+var_D0]
		mov	edx, [ebp+var_D8]
		mov	eax, [ecx+4]
		mov	[ebp+var_38], eax
		mov	eax, [ecx+8]
		mov	[ebp+var_A8], 6
		mov	[ebp+var_34], eax
		lea	eax, [ebp+var_3C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_DC]
		shl	eax, 6
		lea	eax, [eax+edx+10h]
		mov	[esp], eax
		call	[ebp+var_C0]
		mov	eax, [ebp+var_DC]
		mov	ecx, [ebp+var_D8]
		mov	edx, [ebp+var_38]
		shl	eax, 6
		lea	eax, [eax+ecx+10h]
		mov	[eax+4], edx
		mov	edx, [ebp+var_34]
		mov	[eax+8], edx
		mov	eax, [ebp+var_3C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED74FA0
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_A8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED74FA0:				; CODE XREF: sub_6ED74AB0+4D8j
		mov	edx, [ebp+var_D0]
		mov	eax, [edx+0Ch]
		test	eax, eax
		jz	loc_6ED752E0
		mov	eax, [eax]
		mov	[ebp+var_48], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED74FBC:				; CODE XREF: sub_6ED74AB0+845j
		mov	ecx, [ebp+var_D0]
		mov	edx, [ebp+var_D8]
		mov	eax, [ecx+10h]
		mov	[ebp+var_44], eax
		mov	eax, [ecx+14h]
		mov	[ebp+var_A8], 5
		mov	[ebp+var_40], eax
		lea	eax, [ebp+var_48]
		mov	[esp+4], eax
		mov	eax, [ebp+var_DC]
		shl	eax, 6
		lea	eax, [edx+eax+1Ch]
		mov	[esp], eax
		call	[ebp+var_C4]
		mov	eax, [ebp+var_DC]
		mov	ecx, [ebp+var_D8]
		mov	edx, [ebp+var_44]
		shl	eax, 6
		lea	eax, [eax+ecx+10h]
		mov	[eax+10h], edx
		mov	edx, [ebp+var_40]
		mov	[eax+14h], edx
		mov	eax, [ebp+var_48]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED7503D
		mov	eax, [ebp+var_48]
		mov	[ebp+var_A8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED7503D:				; CODE XREF: sub_6ED74AB0+575j
		mov	edx, [ebp+var_D0]
		mov	eax, [edx+24h]
		test	eax, eax
		jz	loc_6ED752C4
		mov	eax, [eax]
		mov	[ebp+var_54], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED75059:				; CODE XREF: sub_6ED74AB0+829j
		mov	ecx, [ebp+var_D0]
		mov	edx, [ebp+var_D8]
		mov	eax, [ecx+28h]
		mov	[ebp+var_50], eax
		mov	eax, [ecx+2Ch]
		mov	[ebp+var_A8], 4
		mov	[ebp+var_4C], eax
		lea	eax, [ebp+var_54]
		mov	[esp+4], eax
		mov	eax, [ebp+var_DC]
		shl	eax, 6
		lea	eax, [edx+eax+28h]
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_DC]
		mov	ecx, [ebp+var_D8]
		mov	edx, [ebp+var_50]
		shl	eax, 6
		lea	eax, [eax+ecx+20h]
		mov	[eax+0Ch], edx
		mov	edx, [ebp+var_4C]
		mov	[eax+10h], edx
		mov	eax, [ebp+var_54]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED750DA
		mov	eax, [ebp+var_54]
		mov	[ebp+var_A8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED750DA:				; CODE XREF: sub_6ED74AB0+612j
		mov	edx, [ebp+var_D0]
		mov	eax, [edx+18h]
		test	eax, eax
		jz	loc_6ED75320
		mov	eax, [eax]
		mov	[ebp+var_60], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED750F6:				; CODE XREF: sub_6ED74AB0+885j
		mov	ecx, [ebp+var_D0]
		mov	edx, [ebp+var_D8]
		mov	eax, [ecx+1Ch]
		mov	[ebp+var_5C], eax
		mov	eax, [ecx+20h]
		mov	[ebp+var_A8], 3
		mov	[ebp+var_58], eax
		lea	eax, [ebp+var_60]
		mov	[esp+4], eax
		mov	eax, [ebp+var_DC]
		shl	eax, 6
		lea	eax, [edx+eax+34h]
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_DC]
		mov	ecx, [ebp+var_D8]
		mov	edx, [ebp+var_5C]
		shl	eax, 6
		lea	eax, [eax+ecx+30h]
		mov	[eax+8], edx
		mov	edx, [ebp+var_58]
		mov	[eax+0Ch], edx
		mov	eax, [ebp+var_60]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED75177
		mov	eax, [ebp+var_60]
		mov	[ebp+var_A8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED75177:				; CODE XREF: sub_6ED74AB0+6AFj
		mov	edx, [ebp+var_D0]
		mov	eax, [edx+30h]
		test	eax, eax
		jz	loc_6ED75300
		mov	eax, [eax]
		mov	[ebp+var_6C], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED75193:				; CODE XREF: sub_6ED74AB0+865j
		mov	ecx, [ebp+var_D0]
		mov	edx, [ebp+var_D8]
		mov	eax, [ecx+34h]
		mov	[ebp+var_68], eax
		mov	eax, [ecx+38h]
		mov	[ebp+var_A8], 2
		mov	[ebp+var_64], eax
		lea	eax, [ebp+var_6C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_DC]
		shl	eax, 6
		lea	eax, [eax+edx+40h]
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_DC]
		mov	ecx, [ebp+var_D8]
		mov	edx, [ebp+var_68]
		shl	eax, 6
		lea	eax, [eax+ecx+40h]
		mov	[eax+4], edx
		mov	edx, [ebp+var_64]
		mov	[eax+8], edx
		mov	eax, [ebp+var_6C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED75214
		mov	eax, [ebp+var_6C]
		mov	[ebp+var_A8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED75214:				; CODE XREF: sub_6ED74AB0+74Cj
		mov	edx, [ebp+arg_0]
		add	[ebp+var_E8], 1
		mov	eax, [edx+0E4h]
		add	eax, 1
		cmp	[ebp+var_E8], eax
		jge	loc_6ED75340

loc_6ED75233:				; CODE XREF: sub_6ED74AB0+45Fj
		mov	ecx, [ebp+arg_0]
		mov	eax, [ebp+var_E8]
		mov	ecx, [ecx+0E0h]
		mov	edx, eax
		shl	edx, 6
		mov	[ebp+var_DC], eax
		add	edx, ecx
		mov	[ebp+var_D0], edx
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0ECh]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED7528B
		mov	edx, [eax+4]
		mov	ecx, [ebp+var_F4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_A8], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_6ED94CE0

loc_6ED7528B:				; CODE XREF: sub_6ED74AB0+7B3j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_D0]
		mov	eax, [eax+0ECh]
		mov	[ebp+var_D8], eax
		mov	eax, [edx]
		test	eax, eax
		jnz	loc_6ED74F14
		mov	ecx, [ebp+var_B4]
		mov	edx, [ebp+var_B0]
		mov	[ebp+var_3C], ecx
		lock inc dword ptr [edx]
		setnz	al
		jmp	loc_6ED74F1F
; ---------------------------------------------------------------------------

loc_6ED752C4:				; CODE XREF: sub_6ED74AB0+598j
		mov	ecx, [ebp+var_B4]
		mov	edx, [ebp+var_B0]
		mov	[ebp+var_54], ecx
		lock inc dword ptr [edx]
		setnz	al
		jmp	loc_6ED75059
; ---------------------------------------------------------------------------
		align 10h

loc_6ED752E0:				; CODE XREF: sub_6ED74AB0+4FBj
		mov	ecx, [ebp+var_B4]
		mov	edx, [ebp+var_B0]
		mov	[ebp+var_48], ecx
		lock inc dword ptr [edx]
		setnz	al
		jmp	loc_6ED74FBC
; ---------------------------------------------------------------------------
		align 10h

loc_6ED75300:				; CODE XREF: sub_6ED74AB0+6D2j
		mov	ecx, [ebp+var_B4]
		mov	edx, [ebp+var_B0]
		mov	[ebp+var_6C], ecx
		lock inc dword ptr [edx]
		setnz	al
		jmp	loc_6ED75193
; ---------------------------------------------------------------------------
		align 10h

loc_6ED75320:				; CODE XREF: sub_6ED74AB0+635j
		mov	ecx, [ebp+var_B4]
		mov	edx, [ebp+var_B0]
		mov	[ebp+var_60], ecx
		lock inc dword ptr [edx]
		setnz	al
		jmp	loc_6ED750F6
; ---------------------------------------------------------------------------
		align 10h

loc_6ED75340:				; CODE XREF: sub_6ED74AB0+42Bj
					; sub_6ED74AB0+77Dj
		mov	ecx, [ebp+arg_0]
		mov	eax, ds:_ZN9QHashData11shared_nullE
		mov	dword ptr [ecx+0E4h], 0FFFFFFFFh
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax+8]
		setnz	dl
		mov	eax, [ecx+58h]
		mov	edx, [ebp+var_C]
		cmp	eax, edx
		mov	[ebp+var_FC], edx
		jz	short loc_6ED7539E
		lock inc dword ptr [edx+8]
		setnz	al
		mov	eax, [ecx+58h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_6ED75496

loc_6ED75385:				; CODE XREF: sub_6ED74AB0+A04j
		mov	eax, [ebp+var_FC]
		mov	ecx, [ebp+arg_0]
		mov	[ecx+58h], eax
		test	byte ptr [eax+1Ch], 1
		jz	loc_6ED75479

loc_6ED7539B:				; CODE XREF: sub_6ED74AB0+9E1j
		mov	eax, [ebp+var_C]

loc_6ED7539E:				; CODE XREF: sub_6ED74AB0+8BAj
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED753C7
		mov	eax, [ebp+var_C]
		mov	dword ptr [esp+4], offset sub_6ED92900
		mov	[ebp+var_A8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_6ED753C7:				; CODE XREF: sub_6ED74AB0+8F7j
		lea	eax, [ebp+var_AC]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED753D7:				; CODE XREF: sub_6ED74AB0+3F4j
		mov	ecx, [ebp+var_100]
		cmp	ecx, [edx+8]
		jge	loc_6ED74EAA
		mov	edx, eax
		sar	edx, 1
		cmp	ecx, edx
		jge	loc_6ED74EAA

loc_6ED753F2:				; CODE XREF: sub_6ED74AB0+3EAj
		mov	eax, [ebp+var_100]
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 40h
		mov	dword ptr [esp], 50h
		mov	[esp+4], eax
		mov	[ebp+var_A8], 0FFFFFFFFh
		call	ds:_ZN11QVectorData4growEiiib
		jmp	loc_6ED74EAA
; ---------------------------------------------------------------------------

loc_6ED75428:				; CODE XREF: sub_6ED74AB0+7Ej
		mov	ecx, [ebp+var_104]
		cmp	ecx, [edx+8]
		jge	loc_6ED74B34
		mov	edx, eax
		sar	edx, 1
		cmp	ecx, edx
		jge	loc_6ED74B34

loc_6ED75443:				; CODE XREF: sub_6ED74AB0+74j
		mov	eax, [ebp+var_104]
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 28h
		mov	dword ptr [esp], 38h
		mov	[esp+4], eax
		mov	[ebp+var_A8], 0FFFFFFFFh
		call	ds:_ZN11QVectorData4growEiiib
		jmp	loc_6ED74B34
; ---------------------------------------------------------------------------

loc_6ED75479:				; CODE XREF: sub_6ED74AB0+8E5j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_A8], 1
		add	eax, 58h
		mov	[esp], eax
		call	sub_6ED929C0
		jmp	loc_6ED7539B
; ---------------------------------------------------------------------------

loc_6ED75496:				; CODE XREF: sub_6ED74AB0+8CFj
		mov	dword ptr [esp+4], offset sub_6ED92900
		mov	eax, [ecx+58h]
		mov	[ebp+var_A8], 1
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_6ED75385
sub_6ED74AB0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED754B9	proc near		; DATA XREF: sub_6ED74AB0+2Fo
		add	ebp, 8
		mov	eax, [ebp-0A8h]
		mov	edx, [ebp-0A4h]
		cmp	eax, 1
		mov	[ebp-108h], edx
		jz	short loc_6ED75534
		cmp	eax, 2
		jz	loc_6ED75582
		cmp	eax, 3
		jz	loc_6ED7557C
		cmp	eax, 4
		jz	loc_6ED75577
		cmp	eax, 5
		jz	short loc_6ED75572
		cmp	eax, 6
		jz	short loc_6ED7556B
		cmp	eax, 7
		nop
		lea	esi, [esi+0]
		jz	short loc_6ED75566
		cmp	eax, 8
		jz	short loc_6ED75561
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_6ED92AB0
		mov	ecx, [ebp-108h]
		mov	dword ptr [ebp-0A8h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED75534:				; CODE XREF: sub_6ED754B9+18j
		lea	eax, [ebp-6Ch]

loc_6ED75537:				; CODE XREF: sub_6ED754B9+ABj
					; sub_6ED754B9+B0j ...
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_6ED94560
		mov	eax, [ebp-108h]
		mov	dword ptr [ebp-0A8h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED75561:				; CODE XREF: sub_6ED754B9+4Cj
		lea	eax, [ebp-18h]
		jmp	short loc_6ED75537
; ---------------------------------------------------------------------------

loc_6ED75566:				; CODE XREF: sub_6ED754B9+47j
		lea	eax, [ebp-24h]
		jmp	short loc_6ED75537
; ---------------------------------------------------------------------------

loc_6ED7556B:				; CODE XREF: sub_6ED754B9+3Dj
		lea	eax, [ebp-30h]
		xchg	ax, ax
		jmp	short loc_6ED75537
; ---------------------------------------------------------------------------

loc_6ED75572:				; CODE XREF: sub_6ED754B9+38j
		lea	eax, [ebp-3Ch]
		jmp	short loc_6ED75537
; ---------------------------------------------------------------------------

loc_6ED75577:				; CODE XREF: sub_6ED754B9+2Fj
		lea	eax, [ebp-48h]
		jmp	short loc_6ED75537
; ---------------------------------------------------------------------------

loc_6ED7557C:				; CODE XREF: sub_6ED754B9+26j
		lea	eax, [ebp-54h]
		nop
		jmp	short loc_6ED75537
; ---------------------------------------------------------------------------

loc_6ED75582:				; CODE XREF: sub_6ED754B9+1Dj
		lea	eax, [ebp-60h]
		jmp	short loc_6ED75537
sub_6ED754B9	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 481. _ZNK16QXmlStreamReader18entityDeclarationsEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamReader18entityDeclarationsEv
_ZNK16QXmlStreamReader18entityDeclarationsEv proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_4], esi
		mov	esi, [eax]
		cmp	dword ptr [esi+0E4h], 0FFFFFFFFh
		jz	short loc_6ED755B6
		mov	[esp+1Ch+var_1C], esi
		call	sub_6ED74AB0

loc_6ED755B6:				; CODE XREF: _ZNK16QXmlStreamReader18entityDeclarationsEv+1Cj
		mov	edx, [esi+0ECh]
		mov	[ebx], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebx]
		test	byte ptr [eax+0Ch], 1
		jnz	short loc_6ED755E2
		mov	edx, [eax+4]
		mov	[esp+1Ch+var_14], edx
		mov	eax, [eax+8]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED94CE0

loc_6ED755E2:				; CODE XREF: _ZNK16QXmlStreamReader18entityDeclarationsEv+3Aj
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
_ZNK16QXmlStreamReader18entityDeclarationsEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 484. _ZNK16QXmlStreamReader20notationDeclarationsEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamReader20notationDeclarationsEv
_ZNK16QXmlStreamReader20notationDeclarationsEv proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_4], esi
		mov	esi, [eax]
		cmp	dword ptr [esi+0D0h], 0FFFFFFFFh
		jz	short loc_6ED75626
		mov	[esp+1Ch+var_1C], esi
		call	sub_6ED74AB0

loc_6ED75626:				; CODE XREF: _ZNK16QXmlStreamReader20notationDeclarationsEv+1Cj
		mov	edx, [esi+0D8h]
		mov	[ebx], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebx]
		test	byte ptr [eax+0Ch], 1
		jnz	short loc_6ED75652
		mov	edx, [eax+4]
		mov	[esp+1Ch+var_14], edx
		mov	eax, [eax+8]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED950E0

loc_6ED75652:				; CODE XREF: _ZNK16QXmlStreamReader20notationDeclarationsEv+3Aj
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
_ZNK16QXmlStreamReader20notationDeclarationsEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 360. _ZN29QXmlStreamNotationDeclarationD2Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN29QXmlStreamNotationDeclarationD2Ev
_ZN29QXmlStreamNotationDeclarationD2Ev proc near

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9AA6E
		mov	[ebp+var_18], offset sub_6ED75720
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+18h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED75708

loc_6ED756AF:				; CODE XREF: _ZN29QXmlStreamNotationDeclarationD2Ev+AEj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED756F0

loc_6ED756BF:				; CODE XREF: _ZN29QXmlStreamNotationDeclarationD2Ev+96j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED756E3
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED756E3:				; CODE XREF: _ZN29QXmlStreamNotationDeclarationD2Ev+5Cj
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED756F0:				; CODE XREF: _ZN29QXmlStreamNotationDeclarationD2Ev+4Dj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED756BF
; ---------------------------------------------------------------------------

loc_6ED75708:				; CODE XREF: _ZN29QXmlStreamNotationDeclarationD2Ev+3Dj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+18h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED756AF
_ZN29QXmlStreamNotationDeclarationD2Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED75720	proc near		; DATA XREF: _ZN29QXmlStreamNotationDeclarationD2Ev+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-40h], eax
		jz	short loc_6ED75744
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED75744:				; CODE XREF: sub_6ED75720+Dj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED75720	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 315. _ZN19QXmlStreamAttributeD1Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN19QXmlStreamAttributeD1Ev
_ZN19QXmlStreamAttributeD1Ev proc near	; CODE XREF: _ZN20QXmlStreamAttributes6appendERK7QStringS2_+78p
					; sub_6ED7599A+16p ...

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9AA76
		mov	[ebp+var_18], offset sub_6ED75853
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+24h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED75838

loc_6ED757B3:				; CODE XREF: _ZN19QXmlStreamAttributeD1Ev+DEj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+18h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED75820

loc_6ED757C3:				; CODE XREF: _ZN19QXmlStreamAttributeD1Ev+C6j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED75804

loc_6ED757D3:				; CODE XREF: _ZN19QXmlStreamAttributeD1Ev+AAj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED757F7
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED757F7:				; CODE XREF: _ZN19QXmlStreamAttributeD1Ev+70j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED75804:				; CODE XREF: _ZN19QXmlStreamAttributeD1Ev+61j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		mov	[ebp+var_38], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED757D3
; ---------------------------------------------------------------------------
		align 10h

loc_6ED75820:				; CODE XREF: _ZN19QXmlStreamAttributeD1Ev+51j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+18h]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED757C3
; ---------------------------------------------------------------------------

loc_6ED75838:				; CODE XREF: _ZN19QXmlStreamAttributeD1Ev+3Dj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+24h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED757B3
_ZN19QXmlStreamAttributeD1Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED75853	proc near		; DATA XREF: _ZN19QXmlStreamAttributeD1Ev+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-40h], edx
		jz	short loc_6ED7587E
		cmp	eax, 2
		jz	short loc_6ED75893
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 18h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED7587E:				; CODE XREF: sub_6ED75853+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED75893:				; CODE XREF: sub_6ED75853+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED75853	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 467. _ZNK16QXmlStreamReader10attributesEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QXmlStreamReader10attributesEv
_ZNK16QXmlStreamReader10attributesEv proc near
					; CODE XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader+623p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [eax]
		mov	edx, [eax+0A8h]
		mov	[ebx], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebx]
		test	byte ptr [eax+0Ch], 1
		jnz	short loc_6ED758FA
		mov	edx, [eax+4]
		mov	[esp+1Ch+var_14], edx
		mov	eax, [eax+8]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED94910

loc_6ED758FA:				; CODE XREF: _ZNK16QXmlStreamReader10attributesEv+22j
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
_ZNK16QXmlStreamReader10attributesEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 333. _ZN20QXmlStreamAttributes6appendERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN20QXmlStreamAttributes6appendERK7QStringS2_
_ZN20QXmlStreamAttributes6appendERK7QStringS2_ proc near

var_7C		= byte ptr -7Ch
var_78		= dword	ptr -78h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_40		= byte ptr -40h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 98h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_5C], eax
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		mov	[ebp+var_64], offset sub_6ED997C0
		mov	[ebp+var_60], offset word_6ED9AAA6
		mov	[ebp+var_58], offset sub_6ED7599A
		mov	[ebp+var_54], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		lea	eax, [ebp+var_40]
		mov	[esp], eax
		call	_ZN19QXmlStreamAttributeC1ERK7QStringS2_
		lea	eax, [ebp+var_40]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_78], 1
		mov	[esp], eax
		call	sub_6ED94720
		lea	eax, [ebp+var_40]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	_ZN19QXmlStreamAttributeD1Ev
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN20QXmlStreamAttributes6appendERK7QStringS2_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED7599A	proc near		; DATA XREF: _ZN20QXmlStreamAttributes6appendERK7QStringS2_+23o
		add	ebp, 8
		mov	eax, [ebp-74h]
		mov	dword ptr [ebp-78h], 0
		mov	[ebp-80h], eax
		lea	eax, [ebp-40h]
		mov	[esp+0], eax
		call	_ZN19QXmlStreamAttributeD1Ev
		mov	eax, [ebp-80h]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED7599A	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 316. _ZN19QXmlStreamAttributeD2Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN19QXmlStreamAttributeD2Ev
_ZN19QXmlStreamAttributeD2Ev proc near

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9AAAC
		mov	[ebp+var_18], offset sub_6ED75AB3
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+24h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED75A98

loc_6ED75A13:				; CODE XREF: _ZN19QXmlStreamAttributeD2Ev+DEj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+18h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED75A80

loc_6ED75A23:				; CODE XREF: _ZN19QXmlStreamAttributeD2Ev+C6j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED75A64

loc_6ED75A33:				; CODE XREF: _ZN19QXmlStreamAttributeD2Ev+AAj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED75A57
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED75A57:				; CODE XREF: _ZN19QXmlStreamAttributeD2Ev+70j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED75A64:				; CODE XREF: _ZN19QXmlStreamAttributeD2Ev+61j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		mov	[ebp+var_38], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED75A33
; ---------------------------------------------------------------------------
		align 10h

loc_6ED75A80:				; CODE XREF: _ZN19QXmlStreamAttributeD2Ev+51j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+18h]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED75A23
; ---------------------------------------------------------------------------

loc_6ED75A98:				; CODE XREF: _ZN19QXmlStreamAttributeD2Ev+3Dj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+24h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED75A13
_ZN19QXmlStreamAttributeD2Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED75AB3	proc near		; DATA XREF: _ZN19QXmlStreamAttributeD2Ev+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-40h], edx
		jz	short loc_6ED75ADE
		cmp	eax, 2
		jz	short loc_6ED75AF3
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 18h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED75ADE:				; CODE XREF: sub_6ED75AB3+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED75AF3:				; CODE XREF: sub_6ED75AB3+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED75AB3	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED75B20	proc near		; CODE XREF: _ZN16QXmlStreamWriterC1EP7QString+56p
					; _ZN16QXmlStreamWriterC2EP7QString+56p ...

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9AAC4
		mov	[ebp+var_28], offset sub_6ED75C36
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED737E0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [esp+8], 20h
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_48], 2
		add	eax, 34h
		mov	[ebp+var_50], eax
		mov	[esp], eax
		call	ds:_ZN10QByteArrayC1Eic
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		and	byte ptr [edx+30h], 0FEh
		mov	dword ptr [edx+38h], 0
		mov	dword ptr [edx+3Ch], 0
		mov	dword ptr [edx+40h], 0
		mov	dword ptr [edx+44h], 0
		mov	dword ptr [edx+48h], 0
		mov	dword ptr [edx+4Ch], 0
		mov	[edx+24h], eax
		mov	dword ptr [edx+28h], 0
		mov	dword ptr [edx+2Ch], 0
		mov	dword ptr [esp], 6Ah
		mov	[ebp+var_48], 1
		call	ds:_ZN10QTextCodec11codecForMibEi
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_C], 1
		mov	[edx+54h], eax
		lea	edx, [ebp+var_C]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QTextCodec11makeEncoderE6QFlagsINS_14ConversionFlagEE
		mov	edx, [ebp+arg_0]
		mov	[edx+58h], eax
		mov	[esp], edx
		call	sub_6ED73BB0
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+30h]
		mov	dword ptr [edx+50h], 1
		mov	dword ptr [edx+5Ch], 0
		and	eax, 0FFFFFF81h
		mov	[edx+30h], al
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED75B20	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED75C36	proc near		; DATA XREF: sub_6ED75B20+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-54h], eax
		jz	short loc_6ED75C57
		mov	edx, [ebp-50h]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], edx
		call	sub_6ED90150

loc_6ED75C57:				; CODE XREF: sub_6ED75C36+Dj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], eax
		call	sub_6ED91D00
		mov	edx, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED75C36	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 223. _ZN16QXmlStreamWriterC1EP7QString

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamWriterC1EP7QString
_ZN16QXmlStreamWriterC1EP7QString proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9AACC
		mov	[ebp+var_18], offset sub_6ED75CF9
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 60h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 1
		mov	[esp+4], edx
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	sub_6ED75B20
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+var_40]
		mov	[edx+2Ch], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlStreamWriterC1EP7QString endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED75CF9	proc near		; DATA XREF: _ZN16QXmlStreamWriterC1EP7QString+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-40h]
		mov	[ebp-44h], eax
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED75CF9	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 227. _ZN16QXmlStreamWriterC2EP7QString

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamWriterC2EP7QString
_ZN16QXmlStreamWriterC2EP7QString proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9AAD2
		mov	[ebp+var_18], offset sub_6ED75D99
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 60h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 1
		mov	[esp+4], edx
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	sub_6ED75B20
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+var_40]
		mov	[edx+2Ch], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlStreamWriterC2EP7QString endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED75D99	proc near		; DATA XREF: _ZN16QXmlStreamWriterC2EP7QString+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-40h]
		mov	[ebp-44h], eax
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED75D99	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 224. _ZN16QXmlStreamWriterC1EP9QIODevice

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamWriterC1EP9QIODevice
_ZN16QXmlStreamWriterC1EP9QIODevice proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9AAD8
		mov	[ebp+var_18], offset sub_6ED75E39
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 60h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 1
		mov	[esp+4], edx
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	sub_6ED75B20
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+var_40]
		mov	[edx+28h], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlStreamWriterC1EP9QIODevice endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED75E39	proc near		; DATA XREF: _ZN16QXmlStreamWriterC1EP9QIODevice+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-40h]
		mov	[ebp-44h], eax
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED75E39	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 228. _ZN16QXmlStreamWriterC2EP9QIODevice

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamWriterC2EP9QIODevice
_ZN16QXmlStreamWriterC2EP9QIODevice proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9AADE
		mov	[ebp+var_18], offset sub_6ED75ED9
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 60h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 1
		mov	[esp+4], edx
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	sub_6ED75B20
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+var_40]
		mov	[edx+28h], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlStreamWriterC2EP9QIODevice endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED75ED9	proc near		; DATA XREF: _ZN16QXmlStreamWriterC2EP9QIODevice+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-40h]
		mov	[ebp-44h], eax
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED75ED9	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 225. _ZN16QXmlStreamWriterC1Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamWriterC1Ev
_ZN16QXmlStreamWriterC1Ev proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9AAE4
		mov	[ebp+var_18], offset sub_6ED75F70
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 60h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 1
		mov	[esp+4], edx
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	sub_6ED75B20
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlStreamWriterC1Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED75F70	proc near		; DATA XREF: _ZN16QXmlStreamWriterC1Ev+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-40h]
		mov	[ebp-44h], eax
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED75F70	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 229. _ZN16QXmlStreamWriterC2Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamWriterC2Ev
_ZN16QXmlStreamWriterC2Ev proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9AAEA
		mov	[ebp+var_18], offset sub_6ED76010
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 60h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 1
		mov	[esp+4], edx
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	sub_6ED75B20
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlStreamWriterC2Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED76010	proc near		; DATA XREF: _ZN16QXmlStreamWriterC2Ev+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-40h]
		mov	[ebp-44h], eax
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED76010	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp-8]
		mov	[ebp-2Ch], eax
		lea	eax, [ebp-4Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-34h], offset sub_6ED997C0
		mov	dword ptr [ebp-30h], offset dword_6ED9AAF0
		mov	dword ptr [ebp-28h], offset loc_6ED76156
		mov	[ebp-24h], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED737E0
		mov	eax, [ebp+8]
		mov	dword ptr [esp+8], 20h
		mov	dword ptr [esp+4], 4
		mov	dword ptr [ebp-48h], 2
		add	eax, 34h
		mov	[ebp-50h], eax
		mov	[esp], eax
		call	ds:_ZN10QByteArrayC1Eic
		mov	edx, [ebp+8]
		mov	eax, [ebp+0Ch]
		and	byte ptr [edx+30h], 0FEh
		mov	dword ptr [edx+38h], 0
		mov	dword ptr [edx+3Ch], 0
		mov	dword ptr [edx+40h], 0
		mov	dword ptr [edx+44h], 0
		mov	dword ptr [edx+48h], 0
		mov	dword ptr [edx+4Ch], 0
		mov	[edx+24h], eax
		mov	dword ptr [edx+28h], 0
		mov	dword ptr [edx+2Ch], 0
		mov	dword ptr [esp], 6Ah
		mov	dword ptr [ebp-48h], 1
		call	ds:_ZN10QTextCodec11codecForMibEi
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-0Ch], 1
		mov	[edx+54h], eax
		lea	edx, [ebp-0Ch]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QTextCodec11makeEncoderE6QFlagsINS_14ConversionFlagEE
		mov	edx, [ebp+8]
		mov	[edx+58h], eax
		mov	[esp], edx
		call	sub_6ED73BB0
		mov	edx, [ebp+8]
		movzx	eax, byte ptr [edx+30h]
		mov	dword ptr [edx+50h], 1
		mov	dword ptr [edx+5Ch], 0
		and	eax, 0FFFFFF81h
		mov	[edx+30h], al
		lea	eax, [ebp-4Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED76156:				; DATA XREF: .text:6ED76060o
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-54h], eax
		jz	short loc_6ED76177
		mov	edx, [ebp-50h]
		mov	dword ptr [ebp-48h], 0
		mov	[esp], edx
		call	sub_6ED90150

loc_6ED76177:				; CODE XREF: .text:6ED76163j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-48h], 0
		mov	[esp], eax
		call	sub_6ED91D00
		mov	edx, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h
; Exported entry 362. _ZN30QXmlStreamNamespaceDeclarationC1ERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN30QXmlStreamNamespaceDeclarationC1ERK7QStringS2_
_ZN30QXmlStreamNamespaceDeclarationC1ERK7QStringS2_ proc near

var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset dword_6ED9AAF8
		mov	[ebp+var_38], offset sub_6ED76300
		mov	[ebp+var_34], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx+8], 0
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	dword ptr [eax+10h], 0
		mov	dword ptr [eax+14h], 0
		mov	eax, [edx]
		mov	[ebp+var_14], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_10], 0
		mov	eax, [edx]
		mov	eax, [eax+8]
		mov	[ebp+var_C], eax
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		mov	[ebp+var_58], 2
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_10]
		mov	edx, [ebp+arg_0]
		mov	[edx+4], eax
		mov	eax, [ebp+var_C]
		mov	[edx+8], eax
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED762C6

loc_6ED76260:				; CODE XREF: _ZN30QXmlStreamNamespaceDeclarationC1ERK7QStringS2_+139j
		mov	edx, [ebp+arg_8]
		mov	eax, [edx]
		mov	[ebp+var_20], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_8]
		mov	[ebp+var_1C], 0
		mov	eax, [edx]
		mov	eax, [eax+8]
		mov	[ebp+var_18], eax
		lea	eax, [ebp+var_20]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 0Ch
		mov	[esp], eax
		mov	[ebp+var_58], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_1C]
		mov	edx, [ebp+arg_0]
		mov	[edx+10h], eax
		mov	eax, [ebp+var_18]
		mov	[edx+14h], eax
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED762E0
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED762C6:				; CODE XREF: _ZN30QXmlStreamNamespaceDeclarationC1ERK7QStringS2_+BEj
		mov	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_58], 3
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED76260
; ---------------------------------------------------------------------------
		align 10h

loc_6ED762E0:				; CODE XREF: _ZN30QXmlStreamNamespaceDeclarationC1ERK7QStringS2_+117j
		mov	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_58], 3
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN30QXmlStreamNamespaceDeclarationC1ERK7QStringS2_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED76300	proc near		; DATA XREF: _ZN30QXmlStreamNamespaceDeclarationC1ERK7QStringS2_+1Do
		add	ebp, 8
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-60h], edx
		jz	short loc_6ED76361
		cmp	eax, 2
		jz	short loc_6ED76328
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560

loc_6ED76328:				; CODE XREF: sub_6ED76300+14j
					; sub_6ED76300+73j
		mov	eax, [ebp+8]
		add	eax, 0Ch
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		mov	edx, [ebp-60h]
		mov	[esp+0], edx
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED76361:				; CODE XREF: sub_6ED76300+Fj
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		jmp	short loc_6ED76328
sub_6ED76300	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 365. _ZN30QXmlStreamNamespaceDeclarationC2ERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN30QXmlStreamNamespaceDeclarationC2ERK7QStringS2_
_ZN30QXmlStreamNamespaceDeclarationC2ERK7QStringS2_ proc near

var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset word_6ED9AB02
		mov	[ebp+var_38], offset sub_6ED764E0
		mov	[ebp+var_34], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx+8], 0
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	dword ptr [eax+10h], 0
		mov	dword ptr [eax+14h], 0
		mov	eax, [edx]
		mov	[ebp+var_14], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_10], 0
		mov	eax, [edx]
		mov	eax, [eax+8]
		mov	[ebp+var_C], eax
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		mov	[ebp+var_58], 2
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_10]
		mov	edx, [ebp+arg_0]
		mov	[edx+4], eax
		mov	eax, [ebp+var_C]
		mov	[edx+8], eax
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED764A6

loc_6ED76440:				; CODE XREF: _ZN30QXmlStreamNamespaceDeclarationC2ERK7QStringS2_+139j
		mov	edx, [ebp+arg_8]
		mov	eax, [edx]
		mov	[ebp+var_20], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_8]
		mov	[ebp+var_1C], 0
		mov	eax, [edx]
		mov	eax, [eax+8]
		mov	[ebp+var_18], eax
		lea	eax, [ebp+var_20]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 0Ch
		mov	[esp], eax
		mov	[ebp+var_58], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_1C]
		mov	edx, [ebp+arg_0]
		mov	[edx+10h], eax
		mov	eax, [ebp+var_18]
		mov	[edx+14h], eax
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED764C0
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED764A6:				; CODE XREF: _ZN30QXmlStreamNamespaceDeclarationC2ERK7QStringS2_+BEj
		mov	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_58], 3
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED76440
; ---------------------------------------------------------------------------
		align 10h

loc_6ED764C0:				; CODE XREF: _ZN30QXmlStreamNamespaceDeclarationC2ERK7QStringS2_+117j
		mov	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_58], 3
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN30QXmlStreamNamespaceDeclarationC2ERK7QStringS2_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED764E0	proc near		; DATA XREF: _ZN30QXmlStreamNamespaceDeclarationC2ERK7QStringS2_+1Do
		add	ebp, 8
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-60h], edx
		jz	short loc_6ED76541
		cmp	eax, 2
		jz	short loc_6ED76508
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560

loc_6ED76508:				; CODE XREF: sub_6ED764E0+14j
					; sub_6ED764E0+73j
		mov	eax, [ebp+8]
		add	eax, 0Ch
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		mov	eax, [ebp+8]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		mov	edx, [ebp-60h]
		mov	[esp+0], edx
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED76541:				; CODE XREF: sub_6ED764E0+Fj
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		jmp	short loc_6ED76508
sub_6ED764E0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 308. _ZN19QXmlStreamAttributeC1ERK7QStringS2_S2_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN19QXmlStreamAttributeC1ERK7QStringS2_S2_
_ZN19QXmlStreamAttributeC1ERK7QStringS2_S2_ proc near
					; CODE XREF: _ZN20QXmlStreamAttributes6appendERK7QStringS2_S2_+54p

var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 98h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_4C], eax
		lea	eax, [ebp+var_6C]
		mov	[ebp+var_54], offset sub_6ED997C0
		mov	[ebp+var_50], offset dword_6ED9AB0C
		mov	[ebp+var_48], offset sub_6ED76896
		mov	[ebp+var_44], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_70], edx
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_70]
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx+8], 0
		mov	[edx+0Ch], eax
		mov	edx, eax
		lock inc dword ptr [eax]
		setnz	al
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+10h], 0
		mov	dword ptr [eax+14h], 0
		mov	[eax+18h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_70]
		mov	dword ptr [edx+1Ch], 0
		mov	dword ptr [edx+20h], 0
		mov	[edx+24h], eax
		lock inc dword ptr [eax]
		setnz	al
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+28h], 0
		mov	dword ptr [eax+2Ch], 0
		mov	eax, [ebp+arg_4]
		test	eax, eax
		jz	loc_6ED76883
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	edx, [eax+8]
		mov	[ebp+var_14], eax
		lock inc dword ptr [eax]
		setnz	cl

loc_6ED76629:				; CODE XREF: _ZN19QXmlStreamAttributeC1ERK7QStringS2_S2_+331j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], edx
		mov	[ebp+var_10], 0
		add	eax, 0Ch
		mov	[ebp+var_74], eax
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	edx, [ebp+var_74]
		mov	[esp], edx
		mov	[ebp+var_68], 7
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_10]
		mov	edx, [ebp+arg_0]
		mov	[edx+10h], eax
		mov	eax, [ebp+var_C]
		mov	[edx+14h], eax
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED767D0
		mov	ecx, [ebp+arg_8]
		test	ecx, ecx
		jz	loc_6ED767EE

loc_6ED76681:				; CODE XREF: _ZN19QXmlStreamAttributeC1ERK7QStringS2_S2_+288j
		mov	edx, [ebp+arg_8]
		mov	eax, [edx]
		mov	edx, [eax+8]
		mov	[ebp+var_20], eax
		lock inc dword ptr [eax]
		setnz	cl

loc_6ED76692:				; CODE XREF: _ZN19QXmlStreamAttributeC1ERK7QStringS2_S2_+29Cj
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_18], edx
		mov	[ebp+var_1C], 0
		add	eax, 18h
		mov	[ebp+var_78], eax
		lea	eax, [ebp+var_20]
		mov	[esp+4], eax
		mov	edx, [ebp+var_78]
		mov	[esp], edx
		mov	[ebp+var_68], 5
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_1C]
		mov	edx, [ebp+arg_0]
		mov	[edx+1Ch], eax
		mov	eax, [ebp+var_18]
		mov	[edx+20h], eax
		mov	eax, [ebp+var_78]
		mov	[esp], edx
		mov	[esp+4], eax
		call	ds:_ZN7QStringaSERKS_
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+1Ch]
		mov	[edx+4], eax
		mov	eax, [edx+20h]
		mov	[edx+8], eax
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED76852
		mov	edx, [ebp+arg_C]
		test	edx, edx
		jz	loc_6ED76870

loc_6ED76709:				; CODE XREF: _ZN19QXmlStreamAttributeC1ERK7QStringS2_S2_+30Aj
		mov	edx, [ebp+arg_C]
		mov	eax, [edx]
		mov	edx, [eax+8]
		mov	[ebp+var_2C], eax
		lock inc dword ptr [eax]
		setnz	cl

loc_6ED7671A:				; CODE XREF: _ZN19QXmlStreamAttributeC1ERK7QStringS2_S2_+31Ej
		lea	eax, [ebp+var_2C]
		mov	[ebp+var_28], 0
		mov	[ebp+var_24], edx
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 24h
		mov	[esp], eax
		mov	[ebp+var_68], 3
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_28]
		mov	edx, [ebp+arg_0]
		mov	[edx+28h], eax
		mov	eax, [ebp+var_24]
		mov	[edx+2Ch], eax
		mov	eax, [ebp+var_2C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED76821
		mov	eax, [ebp+arg_4]
		test	eax, eax
		jz	loc_6ED7683F

loc_6ED7676C:				; CODE XREF: _ZN19QXmlStreamAttributeC1ERK7QStringS2_S2_+2D9j
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	edx, [eax+8]
		mov	[ebp+var_38], eax
		lock inc dword ptr [eax]
		setnz	cl

loc_6ED7677D:				; CODE XREF: _ZN19QXmlStreamAttributeC1ERK7QStringS2_S2_+2EDj
		lea	eax, [ebp+var_38]
		mov	[ebp+var_34], 0
		mov	[ebp+var_30], edx
		mov	[esp+4], eax
		mov	eax, [ebp+var_74]
		mov	[esp], eax
		mov	[ebp+var_68], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_34]
		mov	edx, [ebp+arg_0]
		mov	[edx+10h], eax
		mov	eax, [ebp+var_30]
		mov	[edx+14h], eax
		mov	eax, [ebp+var_38]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED76801
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED767D0:				; CODE XREF: _ZN19QXmlStreamAttributeC1ERK7QStringS2_S2_+110j
		mov	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_68], 8
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	ecx, [ebp+arg_8]
		test	ecx, ecx
		jnz	loc_6ED76681

loc_6ED767EE:				; CODE XREF: _ZN19QXmlStreamAttributeC1ERK7QStringS2_S2_+11Bj
		mov	eax, [ebp+var_70]
		mov	[ebp+var_20], eax
		lock inc dword ptr [eax]
		setnz	al
		xor	edx, edx
		jmp	loc_6ED76692
; ---------------------------------------------------------------------------

loc_6ED76801:				; CODE XREF: _ZN19QXmlStreamAttributeC1ERK7QStringS2_S2_+25Bj
		mov	eax, [ebp+var_38]
		mov	[esp], eax
		mov	[ebp+var_68], 2
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED76821:				; CODE XREF: _ZN19QXmlStreamAttributeC1ERK7QStringS2_S2_+1FBj
		mov	eax, [ebp+var_2C]
		mov	[esp], eax
		mov	[ebp+var_68], 4
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	eax, [ebp+arg_4]
		test	eax, eax
		jnz	loc_6ED7676C

loc_6ED7683F:				; CODE XREF: _ZN19QXmlStreamAttributeC1ERK7QStringS2_S2_+206j
		mov	eax, [ebp+var_70]
		mov	[ebp+var_38], eax
		lock inc dword ptr [eax]
		setnz	al
		xor	edx, edx
		jmp	loc_6ED7677D
; ---------------------------------------------------------------------------

loc_6ED76852:				; CODE XREF: _ZN19QXmlStreamAttributeC1ERK7QStringS2_S2_+198j
		mov	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_68], 6
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	edx, [ebp+arg_C]
		test	edx, edx
		jnz	loc_6ED76709

loc_6ED76870:				; CODE XREF: _ZN19QXmlStreamAttributeC1ERK7QStringS2_S2_+1A3j
		mov	eax, [ebp+var_70]
		mov	[ebp+var_2C], eax
		lock inc dword ptr [eax]
		setnz	al
		xor	edx, edx
		jmp	loc_6ED7671A
; ---------------------------------------------------------------------------

loc_6ED76883:				; CODE XREF: _ZN19QXmlStreamAttributeC1ERK7QStringS2_S2_+B2j
		mov	eax, [ebp+var_70]
		mov	[ebp+var_14], eax
		lock inc dword ptr [eax]
		setnz	al
		xor	edx, edx
		jmp	loc_6ED76629
_ZN19QXmlStreamAttributeC1ERK7QStringS2_S2_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED76896	proc near		; DATA XREF: _ZN19QXmlStreamAttributeC1ERK7QStringS2_S2_+20o
		add	ebp, 8
		mov	eax, [ebp-68h]
		mov	edx, [ebp-64h]
		cmp	eax, 1
		mov	[ebp-7Ch], edx
		jz	short loc_6ED768E4
		cmp	eax, 2
		jz	loc_6ED7696F
		cmp	eax, 3
		jz	short loc_6ED768E4
		cmp	eax, 4
		jz	loc_6ED76958
		cmp	eax, 5
		jz	short loc_6ED768E4
		cmp	eax, 6
		jz	short loc_6ED76944
		cmp	eax, 7
		nop
		lea	esi, [esi+0]
		jz	short loc_6ED768E4
		lea	eax, [ebp-38h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560

loc_6ED768E4:				; CODE XREF: sub_6ED76896+Fj
					; sub_6ED76896+1Dj ...
		mov	eax, [ebp+8]
		add	eax, 24h
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		mov	eax, [ebp+8]
		add	eax, 18h
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		mov	eax, [ebp-74h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		mov	edx, [ebp+8]
		mov	[esp+0], edx
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		mov	eax, [ebp-7Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED76944:				; CODE XREF: sub_6ED76896+30j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		jmp	short loc_6ED768E4
; ---------------------------------------------------------------------------

loc_6ED76958:				; CODE XREF: sub_6ED76896+22j
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		jmp	loc_6ED768E4
; ---------------------------------------------------------------------------

loc_6ED7696F:				; CODE XREF: sub_6ED76896+14j
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		jmp	loc_6ED768E4
sub_6ED76896	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 334. _ZN20QXmlStreamAttributes6appendERK7QStringS2_S2_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN20QXmlStreamAttributes6appendERK7QStringS2_S2_
_ZN20QXmlStreamAttributes6appendERK7QStringS2_S2_ proc near

var_7C		= byte ptr -7Ch
var_78		= dword	ptr -78h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_40		= byte ptr -40h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 98h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_5C], eax
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		mov	[ebp+var_64], offset sub_6ED997C0
		mov	[ebp+var_60], offset dword_6ED9AB20
		mov	[ebp+var_58], offset sub_6ED76A21
		mov	[ebp+var_54], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_C]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		lea	eax, [ebp+var_40]
		mov	[esp], eax
		call	_ZN19QXmlStreamAttributeC1ERK7QStringS2_S2_
		lea	eax, [ebp+var_40]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_78], 1
		mov	[esp], eax
		call	sub_6ED94720
		lea	eax, [ebp+var_40]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	_ZN19QXmlStreamAttributeD1Ev
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN20QXmlStreamAttributes6appendERK7QStringS2_S2_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED76A21	proc near		; DATA XREF: _ZN20QXmlStreamAttributes6appendERK7QStringS2_S2_+23o
		add	ebp, 8
		mov	eax, [ebp-74h]
		mov	dword ptr [ebp-78h], 0
		mov	[ebp-80h], eax
		lea	eax, [ebp-40h]
		mov	[esp+0], eax
		call	_ZN19QXmlStreamAttributeD1Ev
		mov	eax, [ebp-80h]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED76A21	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 312. _ZN19QXmlStreamAttributeC2ERK7QStringS2_S2_

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN19QXmlStreamAttributeC2ERK7QStringS2_S2_
_ZN19QXmlStreamAttributeC2ERK7QStringS2_S2_ proc near

var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 98h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_4C], eax
		lea	eax, [ebp+var_6C]
		mov	[ebp+var_54], offset sub_6ED997C0
		mov	[ebp+var_50], offset word_6ED9AB26
		mov	[ebp+var_48], offset sub_6ED76D86
		mov	[ebp+var_44], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_70], edx
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_70]
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx+8], 0
		mov	[edx+0Ch], eax
		mov	edx, eax
		lock inc dword ptr [eax]
		setnz	al
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+10h], 0
		mov	dword ptr [eax+14h], 0
		mov	[eax+18h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_70]
		mov	dword ptr [edx+1Ch], 0
		mov	dword ptr [edx+20h], 0
		mov	[edx+24h], eax
		lock inc dword ptr [eax]
		setnz	al
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+28h], 0
		mov	edx, [ebp+arg_4]
		mov	dword ptr [eax+2Ch], 0
		test	edx, edx
		jz	loc_6ED76D73
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	edx, [eax+8]
		mov	[ebp+var_14], eax
		lock inc dword ptr [eax]
		setnz	cl

loc_6ED76B19:				; CODE XREF: _ZN19QXmlStreamAttributeC2ERK7QStringS2_S2_+331j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], edx
		mov	[ebp+var_10], 0
		add	eax, 0Ch
		mov	[ebp+var_74], eax
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	edx, [ebp+var_74]
		mov	[esp], edx
		mov	[ebp+var_68], 7
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_10]
		mov	edx, [ebp+arg_0]
		mov	[edx+10h], eax
		mov	eax, [ebp+var_C]
		mov	[edx+14h], eax
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED76CC0
		mov	eax, [ebp+arg_8]
		test	eax, eax
		jz	loc_6ED76CDE

loc_6ED76B71:				; CODE XREF: _ZN19QXmlStreamAttributeC2ERK7QStringS2_S2_+288j
		mov	edx, [ebp+arg_8]
		mov	eax, [edx]
		mov	edx, [eax+8]
		mov	[ebp+var_20], eax
		lock inc dword ptr [eax]
		setnz	cl

loc_6ED76B82:				; CODE XREF: _ZN19QXmlStreamAttributeC2ERK7QStringS2_S2_+29Cj
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_18], edx
		mov	[ebp+var_1C], 0
		add	eax, 18h
		mov	[ebp+var_78], eax
		lea	eax, [ebp+var_20]
		mov	[esp+4], eax
		mov	edx, [ebp+var_78]
		mov	[esp], edx
		mov	[ebp+var_68], 5
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_1C]
		mov	edx, [ebp+arg_0]
		mov	[edx+1Ch], eax
		mov	eax, [ebp+var_18]
		mov	[edx+20h], eax
		mov	eax, [ebp+var_78]
		mov	[esp], edx
		mov	[esp+4], eax
		call	ds:_ZN7QStringaSERKS_
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+1Ch]
		mov	[edx+4], eax
		mov	eax, [edx+20h]
		mov	[edx+8], eax
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED76D42
		mov	ecx, [ebp+arg_C]
		test	ecx, ecx
		jz	loc_6ED76D60

loc_6ED76BF9:				; CODE XREF: _ZN19QXmlStreamAttributeC2ERK7QStringS2_S2_+30Aj
		mov	edx, [ebp+arg_C]
		mov	eax, [edx]
		mov	edx, [eax+8]
		mov	[ebp+var_2C], eax
		lock inc dword ptr [eax]
		setnz	cl

loc_6ED76C0A:				; CODE XREF: _ZN19QXmlStreamAttributeC2ERK7QStringS2_S2_+31Ej
		lea	eax, [ebp+var_2C]
		mov	[ebp+var_28], 0
		mov	[ebp+var_24], edx
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 24h
		mov	[esp], eax
		mov	[ebp+var_68], 3
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_28]
		mov	edx, [ebp+arg_0]
		mov	[edx+28h], eax
		mov	eax, [ebp+var_24]
		mov	[edx+2Ch], eax
		mov	eax, [ebp+var_2C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED76D11
		mov	edx, [ebp+arg_4]
		test	edx, edx
		jz	loc_6ED76D2F

loc_6ED76C5C:				; CODE XREF: _ZN19QXmlStreamAttributeC2ERK7QStringS2_S2_+2D9j
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	edx, [eax+8]
		mov	[ebp+var_38], eax
		lock inc dword ptr [eax]
		setnz	cl

loc_6ED76C6D:				; CODE XREF: _ZN19QXmlStreamAttributeC2ERK7QStringS2_S2_+2EDj
		lea	eax, [ebp+var_38]
		mov	[ebp+var_34], 0
		mov	[ebp+var_30], edx
		mov	[esp+4], eax
		mov	eax, [ebp+var_74]
		mov	[esp], eax
		mov	[ebp+var_68], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_34]
		mov	edx, [ebp+arg_0]
		mov	[edx+10h], eax
		mov	eax, [ebp+var_30]
		mov	[edx+14h], eax
		mov	eax, [ebp+var_38]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED76CF1
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED76CC0:				; CODE XREF: _ZN19QXmlStreamAttributeC2ERK7QStringS2_S2_+110j
		mov	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_68], 8
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	eax, [ebp+arg_8]
		test	eax, eax
		jnz	loc_6ED76B71

loc_6ED76CDE:				; CODE XREF: _ZN19QXmlStreamAttributeC2ERK7QStringS2_S2_+11Bj
		mov	eax, [ebp+var_70]
		mov	[ebp+var_20], eax
		lock inc dword ptr [eax]
		setnz	al
		xor	edx, edx
		jmp	loc_6ED76B82
; ---------------------------------------------------------------------------

loc_6ED76CF1:				; CODE XREF: _ZN19QXmlStreamAttributeC2ERK7QStringS2_S2_+25Bj
		mov	eax, [ebp+var_38]
		mov	[esp], eax
		mov	[ebp+var_68], 2
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED76D11:				; CODE XREF: _ZN19QXmlStreamAttributeC2ERK7QStringS2_S2_+1FBj
		mov	eax, [ebp+var_2C]
		mov	[esp], eax
		mov	[ebp+var_68], 4
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	edx, [ebp+arg_4]
		test	edx, edx
		jnz	loc_6ED76C5C

loc_6ED76D2F:				; CODE XREF: _ZN19QXmlStreamAttributeC2ERK7QStringS2_S2_+206j
		mov	eax, [ebp+var_70]
		mov	[ebp+var_38], eax
		lock inc dword ptr [eax]
		setnz	al
		xor	edx, edx
		jmp	loc_6ED76C6D
; ---------------------------------------------------------------------------

loc_6ED76D42:				; CODE XREF: _ZN19QXmlStreamAttributeC2ERK7QStringS2_S2_+198j
		mov	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_68], 6
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	ecx, [ebp+arg_C]
		test	ecx, ecx
		jnz	loc_6ED76BF9

loc_6ED76D60:				; CODE XREF: _ZN19QXmlStreamAttributeC2ERK7QStringS2_S2_+1A3j
		mov	eax, [ebp+var_70]
		mov	[ebp+var_2C], eax
		lock inc dword ptr [eax]
		setnz	al
		xor	edx, edx
		jmp	loc_6ED76C0A
; ---------------------------------------------------------------------------

loc_6ED76D73:				; CODE XREF: _ZN19QXmlStreamAttributeC2ERK7QStringS2_S2_+B2j
		mov	eax, [ebp+var_70]
		mov	[ebp+var_14], eax
		lock inc dword ptr [eax]
		setnz	al
		xor	edx, edx
		jmp	loc_6ED76B19
_ZN19QXmlStreamAttributeC2ERK7QStringS2_S2_ endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED76D86	proc near		; DATA XREF: _ZN19QXmlStreamAttributeC2ERK7QStringS2_S2_+20o
		add	ebp, 8
		mov	eax, [ebp-68h]
		mov	edx, [ebp-64h]
		cmp	eax, 1
		mov	[ebp-7Ch], edx
		jz	short loc_6ED76DD4
		cmp	eax, 2
		jz	loc_6ED76E5F
		cmp	eax, 3
		jz	short loc_6ED76DD4
		cmp	eax, 4
		jz	loc_6ED76E48
		cmp	eax, 5
		jz	short loc_6ED76DD4
		cmp	eax, 6
		jz	short loc_6ED76E34
		cmp	eax, 7
		nop
		lea	esi, [esi+0]
		jz	short loc_6ED76DD4
		lea	eax, [ebp-38h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560

loc_6ED76DD4:				; CODE XREF: sub_6ED76D86+Fj
					; sub_6ED76D86+1Dj ...
		mov	eax, [ebp+8]
		add	eax, 24h
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		mov	eax, [ebp+8]
		add	eax, 18h
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		mov	eax, [ebp-74h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		mov	edx, [ebp+8]
		mov	[esp+0], edx
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		mov	eax, [ebp-7Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED76E34:				; CODE XREF: sub_6ED76D86+30j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		jmp	short loc_6ED76DD4
; ---------------------------------------------------------------------------

loc_6ED76E48:				; CODE XREF: sub_6ED76D86+22j
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		jmp	loc_6ED76DD4
; ---------------------------------------------------------------------------

loc_6ED76E5F:				; CODE XREF: sub_6ED76D86+14j
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		jmp	loc_6ED76DD4
sub_6ED76D86	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		lea	eax, [ebp-8]
		push	ebx
		sub	esp, 84h
		mov	[ebp-2Ch], eax
		lea	eax, [ebp-4Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-34h], offset sub_6ED997C0
		mov	dword ptr [ebp-30h], offset word_6ED9AB3A
		mov	dword ptr [ebp-28h], offset loc_6ED771AD
		mov	[ebp-24h], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+8]
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	dword ptr [edx], 0
		mov	dword ptr [edx+4], 0FFFFFFFFh
		mov	dword ptr [edx+8], 0
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+8]
		mov	dword ptr [ecx+18h], 0
		mov	dword ptr [ecx+1Ch], 0FFFFFFFFh
		mov	dword ptr [ecx+20h], 10h
		mov	dword ptr [esp+4], 380h
		mov	dword ptr [esp], 0
		mov	dword ptr [ebp-48h], 3
		call	ds:_Z8qReallocPvj
		mov	ebx, [ebp+8]
		test	eax, eax
		mov	[ebx+18h], eax
		jz	loc_6ED77177

loc_6ED76F1A:				; CODE XREF: .text:6ED77186j
		mov	eax, [ebp+8]
		mov	edx, [ebp+8]
		add	eax, 0Ch
		mov	[ebp-54h], eax
		mov	eax, [edx+0Ch]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED77168

loc_6ED76F34:				; CODE XREF: .text:6ED77172j
		mov	ecx, [ebp-54h]
		mov	dword ptr [esp+4], 20h
		mov	dword ptr [ebp-48h], 3
		mov	[esp], ecx
		call	ds:_ZN7QString7reallocEi
		mov	ebx, [ebp+8]
		mov	eax, [ebx+0Ch]

loc_6ED76F55:				; CODE XREF: .text:6ED7716Cj
		or	byte ptr [eax+10h], 10h
		mov	eax, [ebp+8]
		mov	ebx, [ebp+8]
		mov	dword ptr [eax+10h], 0
		mov	eax, [eax+4]
		mov	ecx, [ebx+8]
		lea	edx, [eax+1]
		cmp	edx, ecx
		jl	loc_6ED77130
		add	eax, 2
		add	ecx, ecx
		cmp	eax, ecx
		jl	loc_6ED77122

loc_6ED76F84:				; CODE XREF: .text:6ED77124j
		mov	edx, [ebp+8]
		mov	[edx+8], eax
		lea	eax, [eax+eax*2]
		shl	eax, 3
		mov	[esp+4], eax
		mov	eax, [edx]
		mov	dword ptr [ebp-48h], 3
		mov	[esp], eax
		call	ds:_Z8qReallocPvj
		mov	ecx, [ebp+8]
		test	eax, eax
		mov	[ecx], eax
		jz	loc_6ED77190
		mov	edx, [ecx+4]
		add	edx, 1

loc_6ED76FB9:				; CODE XREF: .text:6ED77132j
					; .text:6ED771A8j
		mov	ecx, [ebp+8]
		mov	[ecx+4], edx
		lea	edx, [edx+edx*2]
		lea	edx, [eax+edx*8]
		mov	[ebp-50h], edx
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aXml_2 ; "xml"
		mov	dword ptr [ebp-48h], 3
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [eax+8]
		mov	ecx, [ebp+8]
		mov	ebx, [ebp+8]
		mov	[ebp-0Ch], eax
		mov	[ebp-64h], edx
		mov	edx, [ecx+0Ch]
		mov	ebx, [ebx+10h]
		cmp	ebx, [edx+8]
		mov	[ebp-5Ch], ebx
		jz	short loc_6ED7701B
		mov	[esp+4], ebx
		mov	ebx, [ebp-54h]
		mov	dword ptr [ebp-48h], 2
		mov	[esp], ebx
		call	ds:_ZN7QString6resizeEi
		mov	eax, [ebp-0Ch]

loc_6ED7701B:				; CODE XREF: .text:6ED76FFFj
		mov	edx, [ebp-64h]
		mov	ecx, [ebp-5Ch]
		mov	ebx, [ebp-54h]
		mov	[esp+0Ch], edx
		mov	eax, [eax+0Ch]
		mov	[esp+4], ecx
		mov	[esp], ebx
		mov	dword ptr [ebp-48h], 2
		mov	[esp+8], eax
		call	ds:_ZN7QString6insertEiPK5QChari
		mov	ecx, [ebp-50h]
		mov	edx, [ebp-64h]
		mov	eax, [ebp+8]
		mov	[ecx], ebx
		mov	ebx, [ebp-5Ch]
		add	[eax+10h], edx
		mov	eax, [ebp-0Ch]
		mov	[ecx+4], ebx
		mov	[ecx+8], edx
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED77150

loc_6ED7706B:				; CODE XREF: .text:6ED77163j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aHttpWww_w3_o_1	; "http://www.w3.org/XML/1998/namespace"
		mov	dword ptr [ebp-48h], 3
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+8]
		mov	ebx, [ebp+8]
		mov	ecx, [eax+8]
		mov	[ebp-10h], eax
		mov	edx, [edx+10h]
		mov	[ebp-60h], ecx
		mov	[ebp-58h], edx
		mov	edx, [ebx+0Ch]
		mov	ecx, [ebp-58h]
		cmp	ecx, [edx+8]
		jz	short loc_6ED770C1
		mov	ebx, [ebp-54h]
		mov	[esp+4], ecx
		mov	dword ptr [ebp-48h], 1
		mov	[esp], ebx
		call	ds:_ZN7QString6resizeEi
		mov	eax, [ebp-10h]

loc_6ED770C1:				; CODE XREF: .text:6ED770A5j
		mov	edx, [ebp-60h]
		mov	ecx, [ebp-58h]
		mov	ebx, [ebp-54h]
		mov	[esp+0Ch], edx
		mov	eax, [eax+0Ch]
		mov	[esp+4], ecx
		mov	[esp], ebx
		mov	dword ptr [ebp-48h], 1
		mov	[esp+8], eax
		call	ds:_ZN7QString6insertEiPK5QChari
		mov	ecx, [ebp-50h]
		mov	edx, [ebp-60h]
		mov	eax, [ebp+8]
		mov	[ecx+0Ch], ebx
		mov	ebx, [ebp-58h]
		add	[eax+10h], edx
		mov	eax, [ebp-10h]
		mov	[ecx+10h], ebx
		mov	[ecx+14h], edx
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED77137

loc_6ED7710E:				; CODE XREF: .text:6ED7714Aj
		lea	eax, [ebp-4Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 84h
		pop	ebx
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED77122:				; CODE XREF: .text:6ED76F7Ej
		mov	eax, ecx
		jmp	loc_6ED76F84
; ---------------------------------------------------------------------------
		align 10h

loc_6ED77130:				; CODE XREF: .text:6ED76F71j
		mov	eax, [ebx]
		jmp	loc_6ED76FB9
; ---------------------------------------------------------------------------

loc_6ED77137:				; CODE XREF: .text:6ED7710Cj
		mov	eax, [ebp-10h]
		mov	dword ptr [ebp-48h], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED7710E
; ---------------------------------------------------------------------------
		align 10h

loc_6ED77150:				; CODE XREF: .text:6ED77065j
		mov	eax, [ebp-0Ch]
		mov	dword ptr [ebp-48h], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7706B
; ---------------------------------------------------------------------------

loc_6ED77168:				; CODE XREF: .text:6ED76F2Ej
		cmp	dword ptr [eax+4], 1Fh
		jg	loc_6ED76F55
		jmp	loc_6ED76F34
; ---------------------------------------------------------------------------

loc_6ED77177:				; CODE XREF: .text:6ED76F14j
		mov	esi, esi
		lea	edi, [edi+0]
		call	ds:_Z9qBadAllocv
		jmp	loc_6ED76F1A
; ---------------------------------------------------------------------------
		align 10h

loc_6ED77190:				; CODE XREF: .text:6ED76FADj
		mov	dword ptr [ebp-48h], 3
		call	ds:_Z9qBadAllocv
		mov	ebx, [ebp+8]
		mov	edx, [ebx+4]
		mov	eax, [ebx]
		add	edx, 1
		jmp	loc_6ED76FB9
; ---------------------------------------------------------------------------

loc_6ED771AD:				; DATA XREF: .text:6ED76EA4o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-6Ch], edx
		jz	short loc_6ED77235
		cmp	eax, 2
		jz	short loc_6ED771D5
		lea	eax, [ebp-10h]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED771D5:				; CODE XREF: .text:6ED771C1j
					; .text:6ED77247j
		mov	ebx, [ebp+8]
		mov	ecx, [ebp-6Ch]
		mov	eax, [ebx+18h]
		mov	[ebp-68h], ecx
		test	eax, eax
		jz	short loc_6ED771F5
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_Z5qFreePv

loc_6ED771F5:				; CODE XREF: .text:6ED771E3j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-48h], 0
		add	eax, 0Ch
		mov	[esp], eax
		call	sub_6ED94560
		mov	edx, [ebp+8]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED77223
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_Z5qFreePv

loc_6ED77223:				; CODE XREF: .text:6ED77211j
		mov	ecx, [ebp-68h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED77235:				; CODE XREF: .text:6ED771BCj
		lea	eax, [ebp-0Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		jmp	short loc_6ED771D5
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED77250	proc near		; CODE XREF: sub_6ED83560+1E09p
					; sub_6ED83560+2E08p ...

var_4E		= word ptr -4Eh
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_A		= word ptr -0Ah
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		lea	eax, [ebp+var_8]
		sub	esp, 70h
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9AB44
		mov	[ebp+var_28], offset sub_6ED77418
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		test	eax, eax
		jz	loc_6ED77400
		mov	ecx, [ebp+arg_4]
		mov	edx, [eax]
		mov	eax, [ecx+4]
		add	eax, eax
		add	eax, [edx+0Ch]

loc_6ED7729B:				; CODE XREF: sub_6ED77250+1B8j
		mov	edx, [ebp+arg_4]
		mov	ebx, [edx+8]
		mov	ecx, ebx
		sub	ecx, 1
		js	loc_6ED773B9
		movzx	edx, word ptr [eax+ecx*2]
		lea	ebx, [eax+ebx*2-4]
		mov	esi, offset off_6EDA1AE4
		cmp	dx, 0FFh
		ja	loc_6ED7740D
		mov	eax, edx
		lea	edx, [eax-0Ah]
		cmp	dl, 55h
		ja	short loc_6ED772F6
		xchg	ax, ax

loc_6ED772D0:				; CODE XREF: sub_6ED77250+A4j
		movzx	edx, dl
		jmp	dword ptr [esi+edx*4]
; ---------------------------------------------------------------------------

loc_6ED772D6:				; CODE XREF: sub_6ED77250+ACj
					; sub_6ED77250+B4j ...
		sub	ecx, 1
		js	loc_6ED773B9
		movzx	edx, word ptr [ebx]
		sub	ebx, 2
		cmp	dx, 0FFh
		ja	short loc_6ED7730E
		mov	eax, edx
		lea	edx, [eax-0Ah]
		cmp	dl, 55h
		jbe	short loc_6ED772D0

loc_6ED772F6:				; CODE XREF: sub_6ED77250+7Cj
					; DATA XREF: .rdata:6EDA1AE8o ...
		lea	edx, [eax-41h]
		cmp	dl, 19h
		jbe	short loc_6ED772D6
		lea	edx, [eax-61h]
		cmp	dl, 19h
		jbe	short loc_6ED772D6
		lea	edx, [eax-30h]
		cmp	dl, 9
		jbe	short loc_6ED772D6

loc_6ED7730E:				; CODE XREF: sub_6ED77250+9Aj
		movzx	eax, al
		mov	[ebp+var_4E], ax

loc_6ED77315:				; CODE XREF: sub_6ED77250+1C3j
		lea	ecx, [ebp+var_10]
		mov	[esp], ecx
		mov	[ebp+var_A], 20h
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], offset aUnexpectedCh_0 ; "Unexpected	character '%1' in public id "...
		mov	dword ptr [esp+4], offset aQxmlstream ;	"QXmlStream"
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN16QCoreApplication9translateEPKcS1_S1_NS_8EncodingE
		lea	edx, [ebp+var_A]
		lea	eax, [ebp+var_14]
		lea	ecx, [ebp+var_10]
		mov	[ebp+var_48], 2
		sub	esp, 4
		mov	[esp+10h], edx
		movzx	edx, [ebp+var_4E]
		mov	dword ptr [esp+0Ch], 0
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	[esp+8], dx
		call	ds:_ZNK7QString3argE5QChariRKS0_
		sub	esp, 4
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	sub_6ED71AE0
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED773E5

loc_6ED773AC:				; CODE XREF: sub_6ED77250+1A8j
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED773D0

loc_6ED773B9:				; CODE XREF: sub_6ED77250+56j
					; sub_6ED77250+89j ...
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		lea	esp, [ebp-8]
		pop	ebx
		pop	esi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED773D0:				; CODE XREF: sub_6ED77250+167j
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED773B9
; ---------------------------------------------------------------------------

loc_6ED773E5:				; CODE XREF: sub_6ED77250+15Aj
		mov	eax, [ebp+var_14]
		mov	[ebp+var_48], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED773AC
; ---------------------------------------------------------------------------
		align 10h

loc_6ED77400:				; CODE XREF: sub_6ED77250+38j
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	eax, [eax+0Ch]
		jmp	loc_6ED7729B
; ---------------------------------------------------------------------------

loc_6ED7740D:				; CODE XREF: sub_6ED77250+6Ej
		mov	[ebp+var_4E], 0
		jmp	loc_6ED77315
sub_6ED77250	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED77418	proc near		; DATA XREF: sub_6ED77250+22o
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-54h], eax
		jz	short loc_6ED77439
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED77439:				; CODE XREF: sub_6ED77418+Dj
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	edx, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED77418	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED77460	proc near		; CODE XREF: sub_6ED775A0+20p
					; sub_6ED775A0+47p ...

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 74h
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9AB4C
		mov	[ebp+var_28], offset sub_6ED77572
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	ebx, [edx+28h]
		test	ebx, ebx
		jz	short loc_6ED774A7
		movzx	edx, byte ptr [edx+30h]
		test	dl, 20h
		jnz	short loc_6ED774F1
		test	dl, dl
		js	short loc_6ED77524

loc_6ED774A7:				; CODE XREF: sub_6ED77460+38j
		mov	eax, [ebp+arg_8]
		lea	ecx, [ebp+var_C]
		mov	[esp+8], eax
		mov	edx, [ebp+arg_4]
		mov	[esp], ecx
		mov	[esp+4], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString10fromLatin1EPKci
		lea	eax, [ebp+var_C]
		sub	esp, 4
		mov	[esp+4], eax
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		mov	[ebp+var_48], 1
		call	sub_6ED72A90
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED77501

loc_6ED774F1:				; CODE XREF: sub_6ED77460+41j
					; sub_6ED77460+F9j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	ebx, [ebp+var_4]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED77501:				; CODE XREF: sub_6ED77460+8Fj
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	ebx, [ebp+var_4]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED77524:				; CODE XREF: sub_6ED77460+45j
		mov	eax, [ebp+arg_8]
		mov	edx, eax
		sar	edx, 1Fh
		mov	[ebp+var_54], edx
		mov	[ebp+var_58], eax
		mov	[esp+8], eax
		mov	[esp+0Ch], edx
		mov	edx, [ebp+arg_4]
		mov	[esp], ebx
		mov	[esp+4], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN9QIODevice5writeEPKcx
		xor	edx, [ebp+var_54]
		xor	eax, [ebp+var_58]
		or	edx, eax
		jz	short loc_6ED774F1
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_4C]
		or	byte ptr [ecx+30h], 20h
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	ebx, [ebp+var_4]
		leave
		retn
sub_6ED77460	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED77572	proc near		; DATA XREF: sub_6ED77460+1Eo
		add	ebp, 8
		mov	ecx, [ebp-44h]
		lea	eax, [ebp-0Ch]
		mov	[ebp-5Ch], ecx
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-5Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED77572	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED775A0	proc near		; CODE XREF: _ZN16QXmlStreamWriter26writeProcessingInstructionERK7QStringS2_+BDp
					; _ZN16QXmlStreamWriter12writeCommentERK7QString+31p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 14h
		mov	esi, [esp+1Ch+arg_0]
		mov	ebx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_14], 1
		mov	[esp+1Ch+var_18], offset byte_6EDA1C3C
		mov	[esp+1Ch+var_1C], esi
		call	sub_6ED77460
		test	ebx, ebx
		jle	short loc_6ED775F0
		lea	esi, [esi+0]

loc_6ED775D0:				; CODE XREF: sub_6ED775A0+4Ej
		mov	eax, [esi+34h]
		sub	ebx, 1
		mov	edx, [eax+8]
		mov	[esp+1Ch+var_14], edx
		mov	eax, [eax+0Ch]
		mov	[esp+1Ch+var_1C], esi
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED77460
		test	ebx, ebx
		jg	short loc_6ED775D0

loc_6ED775F0:				; CODE XREF: sub_6ED775A0+27j
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
sub_6ED775A0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 196. _ZN16QXmlStreamWriter14writeAttributeERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlStreamWriter14writeAttributeERK7QStringS2_
_ZN16QXmlStreamWriter14writeAttributeERK7QStringS2_ proc near
					; CODE XREF: _ZN16QXmlStreamWriter14writeAttributeERK19QXmlStreamAttribute+CCp

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_8], esi
		mov	esi, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_4], edi
		mov	edi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_C], ebx
		mov	ebx, [eax]
		mov	[esp+1Ch+var_14], 1
		mov	[esp+1Ch+var_18], offset asc_6EDA1A89 ;	" "
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED77460
		mov	[esp+1Ch+var_18], edi
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED72A90
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_14], 2
		mov	[esp+1Ch+var_18], offset word_6EDA1C3E
		call	sub_6ED77460
		mov	[esp+1Ch+var_18], esi
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_14], 1
		call	sub_6ED73E40
		mov	esi, [esp+1Ch+var_8]
		mov	[esp+1Ch+arg_0], ebx
		mov	edi, [esp+1Ch+var_4]
		mov	[esp+1Ch+arg_8], 1
		mov	ebx, [esp+1Ch+var_C]
		mov	[esp+1Ch+arg_4], offset	byte_6EDA1C41
		add	esp, 1Ch
		jmp	sub_6ED77460
_ZN16QXmlStreamWriter14writeAttributeERK7QStringS2_ endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED776A0	proc near		; CODE XREF: _ZN16QXmlStreamWriter21writeDefaultNamespaceERK7QString+12Bj
					; sub_6ED802C0+1FEp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 14h
		mov	esi, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	ecx, [esi+8]
		test	ecx, ecx
		jz	short loc_6ED77720
		mov	[esp+1Ch+var_14], 7
		mov	[esp+1Ch+var_18], offset aXmlns_2 ; " xmlns:"
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED77460
		mov	[esp+1Ch+var_18], esi
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED72900
		mov	[esp+1Ch+var_14], 2
		mov	[esp+1Ch+var_18], offset word_6EDA1C3E

loc_6ED776E8:				; CODE XREF: sub_6ED776A0+90j
		add	esi, 0Ch
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED77460
		mov	[esp+1Ch+var_18], esi
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED72900
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_14], 1
		mov	[esp+1Ch+var_18], offset byte_6EDA1C41
		call	sub_6ED77460
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED77720:				; CODE XREF: sub_6ED776A0+12j
		mov	[esp+1Ch+var_14], 8
		mov	[esp+1Ch+var_18], offset aXmlns_3 ; " xmlns=\""
		jmp	short loc_6ED776E8
sub_6ED776A0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 215. _ZN16QXmlStreamWriter21writeDefaultNamespaceERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlStreamWriter21writeDefaultNamespaceERK7QString
_ZN16QXmlStreamWriter21writeDefaultNamespaceERK7QString	proc near

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 4Ch
		mov	eax, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_10], ebx
		mov	[esp+4Ch+var_C], esi
		mov	[esp+4Ch+var_8], edi
		mov	[esp+4Ch+var_30], eax
		mov	eax, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_4], ebp
		mov	ebx, [eax]
		mov	eax, [ebx+4]
		mov	esi, [ebx+8]
		lea	edx, [eax+1]
		cmp	edx, esi
		jl	loc_6ED77847
		add	eax, 2
		add	esi, esi
		cmp	eax, esi
		jl	loc_6ED77840

loc_6ED7777F:				; CODE XREF: _ZN16QXmlStreamWriter21writeDefaultNamespaceERK7QString+102j
		mov	[ebx+8], eax
		lea	eax, [eax+eax*2]
		shl	eax, 3
		mov	[esp+4Ch+var_48], eax
		mov	eax, [ebx]
		mov	[esp+4Ch+var_4C], eax
		call	ds:_Z8qReallocPvj
		test	eax, eax
		mov	[ebx], eax
		jz	loc_6ED77870

loc_6ED777A1:				; CODE XREF: _ZN16QXmlStreamWriter21writeDefaultNamespaceERK7QString+138j
		mov	edx, [ebx+4]
		add	edx, 1

loc_6ED777A7:				; CODE XREF: _ZN16QXmlStreamWriter21writeDefaultNamespaceERK7QString+109j
		mov	[ebx+4], edx
		lea	edx, [edx+edx*2]
		mov	ecx, [ebx+0Ch]
		lea	esi, [eax+edx*8]
		mov	edx, [esp+4Ch+var_30]
		mov	dword ptr [esi+8], 0
		mov	dword ptr [esi+4], 0
		mov	edi, [ebx+10h]
		cmp	edi, [ecx+8]
		mov	eax, [edx]
		lea	edx, [ebx+0Ch]
		mov	dword ptr [esi], 0
		mov	ebp, [eax+8]
		jz	short loc_6ED777F6
		mov	[esp+4Ch+var_4C], edx
		mov	[esp+4Ch+var_20], edx
		mov	[esp+4Ch+var_48], edi
		call	ds:_ZN7QString6resizeEi
		mov	ecx, [esp+4Ch+var_30]
		mov	edx, [esp+4Ch+var_20]
		mov	eax, [ecx]

loc_6ED777F6:				; CODE XREF: _ZN16QXmlStreamWriter21writeDefaultNamespaceERK7QString+99j
		mov	[esp+4Ch+var_40], ebp
		mov	eax, [eax+0Ch]
		mov	[esp+4Ch+var_20], edx
		mov	[esp+4Ch+var_4C], edx
		mov	[esp+4Ch+var_48], edi
		mov	[esp+4Ch+var_44], eax
		call	ds:_ZN7QString6insertEiPK5QChari
		mov	edx, [esp+4Ch+var_20]
		add	[ebx+10h], ebp
		mov	[esi+10h], edi
		mov	[esi+0Ch], edx
		mov	[esi+14h], ebp
		test	byte ptr [ebx+30h], 2
		jnz	short loc_6ED77850
		mov	ebx, [esp+4Ch+var_10]
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED77840:				; CODE XREF: _ZN16QXmlStreamWriter21writeDefaultNamespaceERK7QString+39j
		mov	eax, esi
		jmp	loc_6ED7777F
; ---------------------------------------------------------------------------

loc_6ED77847:				; CODE XREF: _ZN16QXmlStreamWriter21writeDefaultNamespaceERK7QString+2Cj
		mov	eax, [ebx]
		jmp	loc_6ED777A7
; ---------------------------------------------------------------------------
		align 10h

loc_6ED77850:				; CODE XREF: _ZN16QXmlStreamWriter21writeDefaultNamespaceERK7QString+E6j
		mov	[esp+4Ch+arg_4], esi
		mov	edi, [esp+4Ch+var_8]
		mov	[esp+4Ch+arg_0], ebx
		mov	esi, [esp+4Ch+var_C]
		mov	ebx, [esp+4Ch+var_10]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		jmp	sub_6ED776A0
; ---------------------------------------------------------------------------

loc_6ED77870:				; CODE XREF: _ZN16QXmlStreamWriter21writeDefaultNamespaceERK7QString+5Bj
		call	ds:_Z9qBadAllocv
		mov	eax, [ebx]
		jmp	loc_6ED777A1
_ZN16QXmlStreamWriter21writeDefaultNamespaceERK7QString	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED77880	proc near		; CODE XREF: _ZN16QXmlStreamWriter18writeStartDocumentERK7QStringb+50p
					; _ZN16QXmlStreamWriter18writeStartDocumentERK7QString+49p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= byte ptr -10h
arg_0		= dword	ptr  4
arg_4		= byte ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		movzx	edx, [esp+2Ch+arg_4]
		movzx	ecx, byte ptr [ebx+30h]
		and	edx, 1
		shl	edx, 4
		mov	eax, ecx
		and	ecx, 0FFFFFFEFh
		shr	al, 4
		or	ecx, edx
		and	eax, 1
		test	cl, 2
		mov	[ebx+30h], cl
		jz	short loc_6ED778E6
		and	ecx, 4
		jnz	short loc_6ED778F0
		mov	[esp+2Ch+var_10], al
		mov	[esp+2Ch+var_24], 1
		mov	[esp+2Ch+var_28], offset asc_6EDA1C57 ;	">"
		mov	[esp+2Ch+var_2C], ebx
		call	sub_6ED77460
		movzx	edx, byte ptr [ebx+30h]
		movzx	eax, [esp+2Ch+var_10]

loc_6ED778D7:				; CODE XREF: sub_6ED77880+C2j
		and	edx, 0FFFFFFF9h
		mov	[ebx+30h], dl
		mov	edx, [ebx+4]
		add	edx, 1
		mov	[ebx+50h], edx

loc_6ED778E6:				; CODE XREF: sub_6ED77880+2Bj
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED778F0:				; CODE XREF: sub_6ED77880+30j
		mov	[esp+2Ch+var_10], al
		mov	[esp+2Ch+var_24], 2
		mov	[esp+2Ch+var_28], offset asc_6EDA1C54 ;	"/>"
		mov	[esp+2Ch+var_2C], ebx
		call	sub_6ED77460
		mov	ecx, [ebx+1Ch]
		imul	edx, ecx, 38h
		sub	ecx, 1
		add	edx, [ebx+18h]
		mov	[ebx+1Ch], ecx
		shr	ecx, 1Fh
		mov	[ebx+14h], cl
		mov	esi, [edx+30h]
		mov	[ebx+10h], esi
		mov	edx, [edx+34h]
		lea	esi, [edx-1]
		mov	[ebx+50h], edx
		movzx	edx, byte ptr [ebx+30h]
		mov	[ebx+4], esi
		and	edx, 0FFFFFFF7h
		mov	[ebx+30h], dl
		movzx	eax, [esp+2Ch+var_10]
		jmp	short loc_6ED778D7
sub_6ED77880	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 212. _ZN16QXmlStreamWriter18writeStartDocumentERK7QStringb

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamWriter18writeStartDocumentERK7QStringb
_ZN16QXmlStreamWriter18writeStartDocumentERK7QStringb proc near

var_58		= dword	ptr -58h
var_51		= byte ptr -51h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= byte ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		movzx	eax, [ebp+arg_8]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_2C], edx
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9AB52
		mov	[ebp+var_51], al
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_28], offset sub_6ED77B10
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		mov	[ebp+var_50], eax
		mov	dword ptr [esp+4], 0
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED77880
		mov	dword ptr [esp+8], 0Fh
		mov	dword ptr [esp+4], offset a?xmlVersion ; "<?xml	version=\""
		mov	eax, [ebp+var_50]
		mov	[esp], eax
		call	sub_6ED77460
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	edx, [ebp+var_50]
		mov	[esp], edx
		call	sub_6ED72A90
		mov	eax, [ebp+var_50]
		mov	edx, [eax+28h]
		test	edx, edx
		jz	loc_6ED77A79
		mov	[esp], eax
		mov	dword ptr [esp+8], 0Ch
		mov	dword ptr [esp+4], offset aEncoding_1 ;	"\" encoding=\""
		call	sub_6ED77460
		mov	edx, [ebp+var_50]
		lea	ecx, [ebp+var_10]
		mov	eax, [edx+54h]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx]
		mov	eax, [ebp+var_10]
		lea	ecx, [ebp+var_C]
		mov	edx, [ebp+var_50]
		mov	eax, [eax+8]
		sub	esp, 4
		mov	[ebp+var_58], eax
		mov	eax, [edx+54h]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	eax, [edx]
		mov	[ebp+var_48], 2
		call	eax
		mov	eax, [ebp+var_58]
		sub	esp, 4
		mov	[esp+8], eax
		mov	eax, [ebp+var_C]
		mov	eax, [eax+0Ch]
		mov	[esp+4], eax
		mov	edx, [ebp+var_50]
		mov	[esp], edx
		mov	[ebp+var_48], 1
		call	sub_6ED77460
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED77AF8

loc_6ED77A6C:				; CODE XREF: _ZN16QXmlStreamWriter18writeStartDocumentERK7QStringb+1BBj
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED77AB0

loc_6ED77A79:				; CODE XREF: _ZN16QXmlStreamWriter18writeStartDocumentERK7QStringb+8Aj
		cmp	[ebp+var_51], 0
		jnz	short loc_6ED77AC9

loc_6ED77A7F:				; CODE XREF: _ZN16QXmlStreamWriter18writeStartDocumentERK7QStringb+177j
		mov	dword ptr [esp+8], 13h
		mov	dword ptr [esp+4], offset aStandaloneNo? ; "\" standalone=\"no\"?>"
		mov	edx, [ebp+var_50]
		mov	[esp], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED77460
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED77AB0:				; CODE XREF: _ZN16QXmlStreamWriter18writeStartDocumentERK7QStringb+127j
		mov	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_Z5qFreePv
		cmp	[ebp+var_51], 0
		jz	short loc_6ED77A7F

loc_6ED77AC9:				; CODE XREF: _ZN16QXmlStreamWriter18writeStartDocumentERK7QStringb+12Dj
		mov	dword ptr [esp+8], 14h
		mov	dword ptr [esp+4], offset aStandaloneYes? ; "\"	standalone=\"yes\"?>"
		mov	eax, [ebp+var_50]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED77460
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED77AF8:				; CODE XREF: _ZN16QXmlStreamWriter18writeStartDocumentERK7QStringb+116j
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_Z5qFreePv
		jmp	loc_6ED77A6C
_ZN16QXmlStreamWriter18writeStartDocumentERK7QStringb endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED77B10	proc near		; DATA XREF: _ZN16QXmlStreamWriter18writeStartDocumentERK7QStringb+24o
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-5Ch], eax
		jz	short loc_6ED77B31
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED90150

loc_6ED77B31:				; CODE XREF: sub_6ED77B10+Dj
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED90150
		mov	edx, [ebp-5Ch]
		mov	[esp+0], edx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED77B10	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 211. _ZN16QXmlStreamWriter18writeStartDocumentERK7QString

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamWriter18writeStartDocumentERK7QString
_ZN16QXmlStreamWriter18writeStartDocumentERK7QString proc near
					; CODE XREF: _ZN16QXmlStreamWriter18writeStartDocumentEv+62p

var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9AB5A
		mov	[ebp+var_28], offset sub_6ED77CD5
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		mov	dword ptr [esp+4], 0
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[ebp+var_50], eax
		mov	[esp], eax
		call	sub_6ED77880
		mov	edx, [ebp+var_50]
		mov	dword ptr [esp+8], 0Fh
		mov	dword ptr [esp+4], offset a?xmlVersion ; "<?xml	version=\""
		mov	[esp], edx
		call	sub_6ED77460
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	eax, [ebp+var_50]
		mov	[esp], eax
		call	sub_6ED72A90
		mov	edx, [ebp+var_50]
		mov	ecx, [edx+28h]
		test	ecx, ecx
		jz	loc_6ED77C91
		mov	[esp], edx
		mov	dword ptr [esp+8], 0Ch
		mov	dword ptr [esp+4], offset aEncoding_1 ;	"\" encoding=\""
		call	sub_6ED77460
		mov	edx, [ebp+var_50]
		lea	ecx, [ebp+var_10]
		mov	eax, [edx+54h]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	dword ptr [edx]
		mov	eax, [ebp+var_10]
		lea	ecx, [ebp+var_C]
		mov	edx, [ebp+var_50]
		mov	eax, [eax+8]
		sub	esp, 4
		mov	[ebp+var_54], eax
		mov	eax, [edx+54h]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	eax, [edx]
		mov	[ebp+var_48], 2
		call	eax
		mov	eax, [ebp+var_54]
		sub	esp, 4
		mov	edx, [ebp+var_50]
		mov	[esp+8], eax
		mov	eax, [ebp+var_C]
		mov	eax, [eax+0Ch]
		mov	[esp], edx
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		call	sub_6ED77460
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED77CC0

loc_6ED77C71:				; CODE XREF: _ZN16QXmlStreamWriter18writeStartDocumentERK7QString+173j
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED77C91
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_Z5qFreePv

loc_6ED77C91:				; CODE XREF: _ZN16QXmlStreamWriter18writeStartDocumentERK7QString+83j
					; _ZN16QXmlStreamWriter18writeStartDocumentERK7QString+11Cj
		mov	eax, [ebp+var_50]
		mov	dword ptr [esp+8], 3
		mov	dword ptr [esp+4], offset a?_0 ; "\"?>"
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED77460
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED77CC0:				; CODE XREF: _ZN16QXmlStreamWriter18writeStartDocumentERK7QString+10Fj
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 2
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	short loc_6ED77C71
_ZN16QXmlStreamWriter18writeStartDocumentERK7QString endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED77CD5	proc near		; DATA XREF: _ZN16QXmlStreamWriter18writeStartDocumentERK7QString+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-58h], eax
		jz	short loc_6ED77CF6
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED90150

loc_6ED77CF6:				; CODE XREF: sub_6ED77CD5+Dj
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED90150
		mov	edx, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED77CD5	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 213. _ZN16QXmlStreamWriter18writeStartDocumentEv

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamWriter18writeStartDocumentEv
_ZN16QXmlStreamWriter18writeStartDocumentEv proc near
					; CODE XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader+185p

var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9AB62
		mov	[ebp+var_28], offset sub_6ED77DB4
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	a1_0_0 ; "1.0"
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_48], 1
		mov	[ebp+var_C], eax
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	_ZN16QXmlStreamWriter18writeStartDocumentERK7QString
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED77DA7
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED77DA7:				; CODE XREF: _ZN16QXmlStreamWriter18writeStartDocumentEv+72j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlStreamWriter18writeStartDocumentEv endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED77DB4	proc near		; DATA XREF: _ZN16QXmlStreamWriter18writeStartDocumentEv+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-50h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp-50h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED77DB4	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 214. _ZN16QXmlStreamWriter20writeEntityReferenceERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlStreamWriter20writeEntityReferenceERK7QString
_ZN16QXmlStreamWriter20writeEntityReferenceERK7QString proc near
					; CODE XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader+4FEp

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_0]
		mov	ebx, [eax]
		mov	[esp+1Ch+var_18], 1
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED77880
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_14], 1
		mov	[esp+1Ch+var_18], offset asc_6EDA1CA7 ;	"&"
		call	sub_6ED77460
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED72A90
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_14], 1
		mov	[esp+1Ch+var_18], offset asc_6EDA1CA9 ;	";"
		call	sub_6ED77460
		add	esp, 18h
		pop	ebx
		retn
_ZN16QXmlStreamWriter20writeEntityReferenceERK7QString endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 193. _ZN16QXmlStreamWriter10writeCDATAERK7QString

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamWriter10writeCDATAERK7QString
_ZN16QXmlStreamWriter10writeCDATAERK7QString proc near
					; CODE XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader+6D5p

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9AB68
		mov	[ebp+var_28], offset sub_6ED77F58
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		mov	dword ptr [esp+4], 1
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[ebp+var_50], eax
		mov	[esp], eax
		call	sub_6ED77880
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_14]
		mov	[esp+8], eax
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[ebp+var_14], offset aCdata_1 ;	"]]]]><![CDATA[>"
		mov	[ebp+var_10], offset asc_6EDA1CBB ; "]]>"
		mov	dword ptr [esp+0Ch], 1
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN7QString7replaceERK13QLatin1StringS2_N2Qt15CaseSensitivityE
		mov	eax, [ebp+var_50]
		mov	dword ptr [esp+8], 9
		mov	dword ptr [esp+4], offset aCdata_2 ; "<![CDATA["
		mov	[esp], eax
		call	sub_6ED77460
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_50]
		mov	[esp], eax
		call	sub_6ED72A90
		mov	eax, [ebp+var_50]
		mov	dword ptr [esp+8], 3
		mov	dword ptr [esp+4], offset asc_6EDA1CBB ; "]]>"
		mov	[esp], eax
		call	sub_6ED77460
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED77F4B
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED77F4B:				; CODE XREF: _ZN16QXmlStreamWriter10writeCDATAERK7QString+E6j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlStreamWriter10writeCDATAERK7QString endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED77F58	proc near		; DATA XREF: _ZN16QXmlStreamWriter10writeCDATAERK7QString+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-54h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED77F58	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 217. _ZN16QXmlStreamWriter26writeProcessingInstructionERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlStreamWriter26writeProcessingInstructionERK7QStringS2_
_ZN16QXmlStreamWriter26writeProcessingInstructionERK7QStringS2_	proc near
					; CODE XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader+141p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_8], esi
		mov	esi, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_4], edi
		mov	edi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_C], ebx
		mov	ebx, [eax]
		mov	[esp+1Ch+var_18], 0
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED77880
		test	al, al
		jnz	short loc_6ED77FC7
		test	byte ptr [ebx+30h], 40h
		jnz	short loc_6ED78040

loc_6ED77FC7:				; CODE XREF: _ZN16QXmlStreamWriter26writeProcessingInstructionERK7QStringS2_+2Fj
					; _ZN16QXmlStreamWriter26writeProcessingInstructionERK7QStringS2_+C2j
		mov	[esp+1Ch+var_14], 2
		mov	[esp+1Ch+var_18], offset a?_1 ;	"<?"
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED77460
		mov	[esp+1Ch+var_18], edi
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED72A90
		mov	eax, ds:_ZN7QString11shared_nullE
		cmp	[esi], eax
		jz	short loc_6ED78018
		mov	[esp+1Ch+var_14], 1
		mov	[esp+1Ch+var_18], offset asc_6EDA1A89 ;	" "
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED77460
		mov	[esp+1Ch+var_18], esi
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED72A90

loc_6ED78018:				; CODE XREF: _ZN16QXmlStreamWriter26writeProcessingInstructionERK7QStringS2_+62j
		mov	[esp+1Ch+arg_0], ebx
		mov	esi, [esp+1Ch+var_8]
		mov	[esp+1Ch+arg_8], 2
		mov	ebx, [esp+1Ch+var_C]
		mov	[esp+1Ch+arg_4], offset	a?_2 ; "?>"
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		jmp	sub_6ED77460
; ---------------------------------------------------------------------------

loc_6ED78040:				; CODE XREF: _ZN16QXmlStreamWriter26writeProcessingInstructionERK7QStringS2_+35j
		mov	eax, [ebx+1Ch]
		mov	[esp+1Ch+var_1C], ebx
		add	eax, 1
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED775A0
		jmp	loc_6ED77FC7
_ZN16QXmlStreamWriter26writeProcessingInstructionERK7QStringS2_	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 194. _ZN16QXmlStreamWriter12writeCommentERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlStreamWriter12writeCommentERK7QString
_ZN16QXmlStreamWriter12writeCommentERK7QString proc near
					; CODE XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader+3FEp

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_0]
		mov	ebx, [eax]
		mov	[esp+1Ch+var_18], 0
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED77880
		test	al, al
		jnz	short loc_6ED78096
		test	byte ptr [ebx+30h], 40h
		jz	short loc_6ED78096
		mov	eax, [ebx+1Ch]
		mov	[esp+1Ch+var_1C], ebx
		add	eax, 1
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED775A0

loc_6ED78096:				; CODE XREF: _ZN16QXmlStreamWriter12writeCommentERK7QString+1Cj
					; _ZN16QXmlStreamWriter12writeCommentERK7QString+22j
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_14], 4
		mov	[esp+1Ch+var_18], offset asc_6EDA1CCF ;	"<!--"
		call	sub_6ED77460
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED72A90
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_14], 3
		mov	[esp+1Ch+var_18], offset asc_6EDA1CD4 ;	"-->"
		call	sub_6ED77460
		and	byte ptr [ebx+30h], 0F5h
		add	esp, 18h
		pop	ebx
		retn
_ZN16QXmlStreamWriter12writeCommentERK7QString endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 200. _ZN16QXmlStreamWriter15writeCharactersERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlStreamWriter15writeCharactersERK7QString
_ZN16QXmlStreamWriter15writeCharactersERK7QString proc near
					; CODE XREF: _ZN16QXmlStreamWriter16writeTextElementERK7QStringS2_S2_+34p
					; _ZN16QXmlStreamWriter16writeTextElementERK7QStringS2_+2Ap ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_0]
		mov	ebx, [eax]
		mov	[esp+1Ch+var_18], 1
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED77880
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_14], 0
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED73E40
		add	esp, 18h
		pop	ebx
		retn
_ZN16QXmlStreamWriter15writeCharactersERK7QString endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 201. _ZN16QXmlStreamWriter15writeEndElementEv

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlStreamWriter15writeEndElementEv
_ZN16QXmlStreamWriter15writeEndElementEv proc near
					; CODE XREF: _ZN16QXmlStreamWriter16writeEndDocumentEv+14p
					; _ZN16QXmlStreamWriter16writeTextElementERK7QStringS2_S2_+48j	...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 14h
		mov	eax, [esp+1Ch+arg_0]
		mov	ebx, [eax]
		mov	ecx, [ebx+1Ch]
		test	ecx, ecx
		js	loc_6ED781DD
		movzx	eax, byte ptr [ebx+30h]
		and	eax, 6
		cmp	al, 2
		jz	loc_6ED781F7
		mov	[esp+1Ch+var_18], 0
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED77880
		test	al, al
		jnz	short loc_6ED78164
		movzx	eax, byte ptr [ebx+30h]
		and	eax, 48h
		cmp	al, 40h
		jz	short loc_6ED781E3

loc_6ED78164:				; CODE XREF: _ZN16QXmlStreamWriter15writeEndElementEv+37j
					; _ZN16QXmlStreamWriter15writeEndElementEv+D2j
		mov	edx, [ebx+1Ch]
		test	edx, edx
		js	short loc_6ED781DD
		mov	edx, [ebx+1Ch]
		and	byte ptr [ebx+30h], 0F7h
		imul	esi, edx, 38h
		sub	edx, 1
		add	esi, [ebx+18h]
		mov	[ebx+1Ch], edx
		shr	edx, 1Fh
		mov	[ebx+14h], dl
		mov	eax, [esi+30h]
		mov	[ebx+10h], eax
		mov	eax, [esi+34h]
		lea	ecx, [eax-1]
		mov	[ebx+50h], eax
		mov	[ebx+4], ecx
		mov	[esp+1Ch+var_14], 2
		mov	[esp+1Ch+var_18], offset asc_6EDA1CD8 ;	"</"
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED77460
		mov	eax, [esi+20h]
		test	eax, eax
		jnz	loc_6ED78240

loc_6ED781B9:				; CODE XREF: _ZN16QXmlStreamWriter15writeEndElementEv+147j
		mov	[esp+1Ch+var_18], esi
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED72900
		mov	[esp+1Ch+var_14], 1
		mov	[esp+1Ch+var_18], offset asc_6EDA1C57 ;	">"
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED77460

loc_6ED781DD:				; CODE XREF: _ZN16QXmlStreamWriter15writeEndElementEv+10j
					; _ZN16QXmlStreamWriter15writeEndElementEv+49j
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_6ED781E3:				; CODE XREF: _ZN16QXmlStreamWriter15writeEndElementEv+42j
		mov	eax, [ebx+1Ch]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED775A0
		jmp	loc_6ED78164
; ---------------------------------------------------------------------------

loc_6ED781F7:				; CODE XREF: _ZN16QXmlStreamWriter15writeEndElementEv+1Fj
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_14], 2
		mov	[esp+1Ch+var_18], offset asc_6EDA1C54 ;	"/>"
		call	sub_6ED77460
		mov	edx, [ebx+1Ch]
		and	byte ptr [ebx+30h], 0F5h
		imul	eax, edx, 38h
		sub	edx, 1
		add	eax, [ebx+18h]
		mov	[ebx+1Ch], edx
		shr	edx, 1Fh
		mov	[ebx+14h], dl
		mov	ecx, [eax+30h]
		mov	[ebx+10h], ecx
		mov	eax, [eax+34h]
		lea	ecx, [eax-1]
		mov	[ebx+4], ecx
		mov	[ebx+50h], eax
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_6ED78240:				; CODE XREF: _ZN16QXmlStreamWriter15writeEndElementEv+93j
		lea	eax, [esi+18h]
		mov	[esp+1Ch+var_18], eax
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED72900
		mov	[esp+1Ch+var_14], 1
		mov	[esp+1Ch+var_18], offset asc_6EDA1CDB ;	":"
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED77460
		jmp	loc_6ED781B9
_ZN16QXmlStreamWriter15writeEndElementEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 202. _ZN16QXmlStreamWriter16writeEndDocumentEv

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlStreamWriter16writeEndDocumentEv
_ZN16QXmlStreamWriter16writeEndDocumentEv proc near
					; CODE XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader+1A0p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 14h
		mov	esi, [esp+1Ch+arg_0]
		mov	ebx, [esi]
		cmp	dword ptr [ebx+1Ch], 0FFFFFFFFh
		jz	short loc_6ED7828F

loc_6ED78281:				; CODE XREF: _ZN16QXmlStreamWriter16writeEndDocumentEv+1Dj
		mov	[esp+1Ch+var_1C], esi
		call	_ZN16QXmlStreamWriter15writeEndElementEv
		cmp	dword ptr [ebx+1Ch], 0FFFFFFFFh
		jnz	short loc_6ED78281

loc_6ED7828F:				; CODE XREF: _ZN16QXmlStreamWriter16writeEndDocumentEv+Fj
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_14], 1
		mov	[esp+1Ch+var_18], offset byte_6EDA1C3C
		call	sub_6ED77460
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
_ZN16QXmlStreamWriter16writeEndDocumentEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 220. _ZN16QXmlStreamWriter8writeDTDERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlStreamWriter8writeDTDERK7QString
_ZN16QXmlStreamWriter8writeDTDERK7QString proc near
					; CODE XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader+47Ep

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_0]
		mov	ebx, [eax]
		mov	[esp+1Ch+var_18], 1
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED77880
		test	byte ptr [ebx+30h], 40h
		jnz	short loc_6ED78303

loc_6ED782D0:				; CODE XREF: _ZN16QXmlStreamWriter8writeDTDERK7QString+6Bj
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED72A90
		test	byte ptr [ebx+30h], 40h
		jz	short loc_6ED782FE
		mov	[esp+1Ch+var_14], 1
		mov	[esp+1Ch+var_18], offset byte_6EDA1C3C
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED77460

loc_6ED782FE:				; CODE XREF: _ZN16QXmlStreamWriter8writeDTDERK7QString+34j
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_6ED78303:				; CODE XREF: _ZN16QXmlStreamWriter8writeDTDERK7QString+1Ej
		mov	[esp+1Ch+var_14], 1
		mov	[esp+1Ch+var_18], offset byte_6EDA1C3C
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED77460
		jmp	short loc_6ED782D0
_ZN16QXmlStreamWriter8writeDTDERK7QString endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED78320	proc near		; CODE XREF: sub_6ED83560+13AFp
					; sub_6ED83560+14DEp ...

var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9AB6E
		mov	[ebp+var_28], offset sub_6ED783CE
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		mov	[edx+184h], eax
		mov	eax, [edx+80h]
		test	eax, eax
		jz	short loc_6ED78372

loc_6ED78365:				; CODE XREF: sub_6ED78320+8Cj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED78372:				; CODE XREF: sub_6ED78320+43j
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_C]
		mov	[esp+8], eax
		mov	dword ptr [esp+4], 4
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	sub_6ED71960
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED78365
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED78320	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED783CE	proc near		; DATA XREF: sub_6ED78320+1Do
		add	ebp, 8
		mov	edx, [ebp-44h]
		lea	eax, [ebp-0Ch]
		mov	[ebp-50h], edx
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-50h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED783CE	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED78400	proc near		; CODE XREF: _ZN16QXmlStreamReader5clearEv+Dp
					; _ZN16QXmlStreamReader9setDeviceEP9QIODevice+40j ...

var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9AB74
		mov	[ebp+var_28], offset sub_6ED788D5
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+180h]
		mov	dword ptr [edx+184h], 0
		mov	byte ptr [edx+0ACh], 0
		mov	word ptr [edx+1A8h], 0FFFFh
		and	eax, 0FFFFFFF0h
		or	eax, 2
		mov	[edx+180h], al
		mov	eax, [edx+194h]
		mov	word ptr [edx+1AAh], 0
		mov	dword ptr [eax], 0
		mov	dword ptr [edx+188h], 1
		mov	dword ptr [eax+4], 0
		mov	eax, [edx+50h]
		mov	dword ptr [edx+4Ch], 0FFFFFFFFh
		cmp	eax, 1Fh
		jg	short loc_6ED784D0
		add	eax, eax
		cmp	eax, 20h
		jl	loc_6ED787D0

loc_6ED784A2:				; CODE XREF: sub_6ED78400+3D5j
		mov	edx, [ebp+arg_0]
		mov	[edx+50h], eax
		shl	eax, 2
		mov	[esp+4], eax
		mov	eax, [edx+48h]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_Z8qReallocPvj
		mov	edx, [ebp+arg_0]
		test	eax, eax
		mov	[edx+48h], eax
		jz	loc_6ED788C5

loc_6ED784D0:				; CODE XREF: sub_6ED78400+95j
					; sub_6ED78400+4D0j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		add	eax, 198h
		mov	[ebp+var_60], eax
		mov	eax, [edx+198h]
		mov	edx, ds:_ZN7QString11shared_nullE
		cmp	eax, edx
		mov	[ebp+var_50], edx
		jz	short loc_6ED7852E
		mov	[ebp+var_10], edx
		lock inc dword ptr [edx]
		setnz	al
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	eax, [ebp+var_60]
		mov	[ebp+var_48], 2
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED787B5

loc_6ED78525:				; CODE XREF: sub_6ED78400+3C8j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+198h]

loc_6ED7852E:				; CODE XREF: sub_6ED78400+EFj
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED78880

loc_6ED78539:				; CODE XREF: sub_6ED78400+490j
		mov	eax, [ebp+var_60]
		mov	dword ptr [esp+4], 100h
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString7reallocEi
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+198h]

loc_6ED7855D:				; CODE XREF: sub_6ED78400+487j
		or	byte ptr [eax+10h], 10h
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+1Ch], 0FFFFFFFFh
		mov	byte ptr [eax+14h], 0
		add	eax, 0A8h
		mov	[ebp+var_64], eax
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+var_C]
		mov	[ebp+var_58], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0A8h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED78858

loc_6ED785A8:				; CODE XREF: sub_6ED78400+477j
		mov	eax, [ebp+var_58]
		mov	edx, [ebp+arg_0]
		mov	[edx+0A8h], eax
		test	byte ptr [eax+0Ch], 1
		jz	loc_6ED78830

loc_6ED785BE:				; CODE XREF: sub_6ED78400+453j
		mov	eax, [ebp+var_C]
		test	eax, eax
		jz	short loc_6ED785D3
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED78895

loc_6ED785D3:				; CODE XREF: sub_6ED78400+1C3j
					; sub_6ED78400+4AEj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0A8h]
		cmp	dword ptr [eax+4], 0Fh
		jle	loc_6ED787F0
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED78825

loc_6ED785F1:				; CODE XREF: sub_6ED78400+41Fj
					; sub_6ED78400+429j
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+0A0h], 0
		mov	dword ptr [eax+0A4h], 0
		mov	dword ptr [eax+98h], 0
		mov	dword ptr [eax+9Ch], 0
		mov	dword ptr [eax+90h], 0
		mov	dword ptr [eax+94h], 0
		mov	dword ptr [eax+44h], 0
		mov	dword ptr [eax+38h], 0
		mov	dword ptr [eax+3Ch], 0
		mov	dword ptr [esp], 6Ah
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN10QTextCodec11codecForMibEi
		mov	edx, [ebp+arg_0]
		mov	[edx+70h], eax
		mov	eax, [edx+74h]
		test	eax, eax
		mov	[ebp+var_5C], eax
		jz	short loc_6ED7867D
		mov	[esp], eax
		call	ds:_ZN12QTextDecoderD1Ev
		mov	edx, [ebp+var_5C]
		mov	[esp], edx
		call	sub_6ED988B0

loc_6ED7867D:				; CODE XREF: sub_6ED78400+267j
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+74h], 0
		mov	dword ptr [eax+1A0h], 0FFFFFFFFh
		mov	eax, [eax+1A4h]
		cmp	eax, 0Fh
		jg	short loc_6ED786DE
		add	eax, eax
		cmp	eax, 10h
		jl	loc_6ED787E0

loc_6ED786A7:				; CODE XREF: sub_6ED78400+3E5j
		mov	edx, [ebp+arg_0]
		mov	[edx+1A4h], eax
		shl	eax, 5
		mov	[esp+4], eax
		mov	eax, [edx+19Ch]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_Z8qReallocPvj
		mov	edx, [ebp+arg_0]
		test	eax, eax
		mov	[edx+19Ch], eax
		jz	loc_6ED788B3

loc_6ED786DE:				; CODE XREF: sub_6ED78400+29Aj
					; sub_6ED78400+4C0j
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_0]
		mov	byte ptr [edx+78h], 0
		mov	dword ptr [eax+1ACh], 0
		movzx	eax, byte ptr [edx+180h]
		and	eax, 0Fh
		mov	[edx+180h], al
		movzx	eax, byte ptr [edx+181h]
		and	eax, 0FFFFFFF0h
		or	eax, 10h
		mov	[edx+181h], al
		mov	eax, edx
		add	eax, 28h
		mov	[esp], eax
		mov	eax, ds:_ZN10QByteArray5clearEv
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[ebp+var_54], eax
		call	eax ; _ZN10QByteArray5clearEv
		mov	eax, [ebp+arg_0]
		add	eax, 2Ch
		mov	[esp], eax
		call	[ebp+var_54]
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_50]
		cmp	eax, [edx+40h]
		jz	short loc_6ED7877D
		mov	[ebp+var_14], eax
		mov	eax, ds:_ZN7QString11shared_nullE
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 1
		add	eax, 40h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED787A0

loc_6ED7877D:				; CODE XREF: sub_6ED78400+343j
					; sub_6ED78400+3B3j
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_4C]
		mov	dword ptr [edx+7Ch], 0
		mov	dword ptr [edx+80h], 0
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED787A0:				; CODE XREF: sub_6ED78400+37Bj
		mov	eax, [ebp+var_14]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED7877D
; ---------------------------------------------------------------------------

loc_6ED787B5:				; CODE XREF: sub_6ED78400+11Fj
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED78525
; ---------------------------------------------------------------------------
		align 10h

loc_6ED787D0:				; CODE XREF: sub_6ED78400+9Cj
		mov	eax, 20h
		jmp	loc_6ED784A2
; ---------------------------------------------------------------------------
		align 10h

loc_6ED787E0:				; CODE XREF: sub_6ED78400+2A1j
		mov	eax, 10h
		jmp	loc_6ED786A7
; ---------------------------------------------------------------------------
		align 10h

loc_6ED787F0:				; CODE XREF: sub_6ED78400+1E0j
		mov	dword ptr [esp+8], 10h
		mov	eax, [eax+8]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		mov	eax, [ebp+var_64]
		mov	[esp], eax
		call	sub_6ED94910
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0A8h]
		mov	edx, [eax]
		cmp	edx, 1
		jnz	loc_6ED785F1

loc_6ED78825:				; CODE XREF: sub_6ED78400+1EBj
		or	byte ptr [eax+0Ch], 2
		jmp	loc_6ED785F1
; ---------------------------------------------------------------------------
		align 10h

loc_6ED78830:				; CODE XREF: sub_6ED78400+1B8j
		mov	edx, [ebp+var_58]
		mov	eax, [edx+4]
		mov	[esp+8], eax
		mov	eax, [edx+8]
		mov	[ebp+var_48], 3
		mov	[esp+4], eax
		mov	eax, [ebp+var_64]
		mov	[esp], eax
		call	sub_6ED94910
		jmp	loc_6ED785BE
; ---------------------------------------------------------------------------

loc_6ED78858:				; CODE XREF: sub_6ED78400+1A2j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0A8h]
		mov	[ebp+var_48], 3
		mov	[esp+4], eax
		mov	eax, [ebp+var_64]
		mov	[esp], eax
		call	sub_6ED946D0
		jmp	loc_6ED785A8
; ---------------------------------------------------------------------------
		align 10h

loc_6ED78880:				; CODE XREF: sub_6ED78400+133j
		cmp	dword ptr [eax+4], 0FFh
		jg	loc_6ED7855D
		lea	esi, [esi+0]
		jmp	loc_6ED78539
; ---------------------------------------------------------------------------

loc_6ED78895:				; CODE XREF: sub_6ED78400+1CDj
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	sub_6ED946D0
		jmp	loc_6ED785D3
; ---------------------------------------------------------------------------

loc_6ED788B3:				; CODE XREF: sub_6ED78400+2D8j
		call	ds:_Z9qBadAllocv
		lea	esi, [esi+0]
		jmp	loc_6ED786DE
; ---------------------------------------------------------------------------

loc_6ED788C5:				; CODE XREF: sub_6ED78400+CAj
		call	ds:_Z9qBadAllocv
		nop
		lea	esi, [esi+0]
		jmp	loc_6ED784D0
sub_6ED78400	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED788D5	proc near		; DATA XREF: sub_6ED78400+23o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-6Ch], edx
		jz	short loc_6ED7890F
		cmp	eax, 2
		jz	short loc_6ED78933
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-6Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED7890F:				; CODE XREF: sub_6ED788D5+Fj
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	edx, [ebp-6Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED78933:				; CODE XREF: sub_6ED788D5+14j
		mov	eax, [ebp-0Ch]
		mov	edx, [ebp-6Ch]
		test	eax, eax
		mov	[ebp-68h], edx
		jz	short loc_6ED78963
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED78963
		mov	eax, [ebp-0Ch]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+arg_0], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_6ED946D0

loc_6ED78963:				; CODE XREF: sub_6ED788D5+69j
					; sub_6ED788D5+73j
		mov	eax, [ebp-68h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED788D5	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 175. _ZN16QXmlStreamReader5clearEv

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlStreamReader5clearEv
_ZN16QXmlStreamReader5clearEv proc near

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_0]
		mov	ebx, [eax]
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED78400
		mov	eax, [ebx+68h]
		test	eax, eax
		jz	short loc_6ED789A6
		cmp	byte ptr [ebx+6Ch], 0
		jnz	short loc_6ED789B0

loc_6ED7899F:				; CODE XREF: _ZN16QXmlStreamReader5clearEv+38j
		mov	dword ptr [ebx+68h], 0

loc_6ED789A6:				; CODE XREF: _ZN16QXmlStreamReader5clearEv+17j
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED789B0:				; CODE XREF: _ZN16QXmlStreamReader5clearEv+1Dj
		mov	edx, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+10h]
		jmp	short loc_6ED7899F
_ZN16QXmlStreamReader5clearEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 180. _ZN16QXmlStreamReader9setDeviceEP9QIODevice

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlStreamReader9setDeviceEP9QIODevice
_ZN16QXmlStreamReader9setDeviceEP9QIODevice proc near
					; CODE XREF: _ZN16QXmlStreamReaderC1EP9QIODevice+77p
					; _ZN16QXmlStreamReaderC2EP9QIODevice+77p

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [eax]
		cmp	byte ptr [ebx+6Ch], 0
		jz	short loc_6ED789EE
		mov	eax, [ebx+68h]
		test	eax, eax
		jz	short loc_6ED789EA
		mov	edx, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [edx+10h]

loc_6ED789EA:				; CODE XREF: _ZN16QXmlStreamReader9setDeviceEP9QIODevice+20j
		mov	byte ptr [ebx+6Ch], 0

loc_6ED789EE:				; CODE XREF: _ZN16QXmlStreamReader9setDeviceEP9QIODevice+19j
		mov	[ebx+68h], esi
		mov	esi, [esp+1Ch+var_4]
		mov	[esp+1Ch+arg_0], ebx
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		jmp	sub_6ED78400
_ZN16QXmlStreamReader9setDeviceEP9QIODevice endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED78A10	proc near		; CODE XREF: _ZN16QXmlStreamReaderC1Ev+56p
					; _ZN16QXmlStreamReaderC2Ev+56p ...

var_DC		= dword	ptr -0DCh
var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_D0		= dword	ptr -0D0h
var_CC		= dword	ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= byte ptr -9Ch
var_98		= dword	ptr -98h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_5C		= dword	ptr -5Ch
var_58		= byte ptr -58h
var_54		= dword	ptr -54h
var_50		= byte ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= byte ptr -48h
var_44		= dword	ptr -44h
var_40		= byte ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0F8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_7C], eax
		lea	eax, [ebp+var_9C]
		mov	[ebp+var_84], offset sub_6ED997C0
		mov	[ebp+var_80], offset word_6ED9AB7E
		mov	[ebp+var_78], offset sub_6ED79C60
		mov	[ebp+var_74], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		mov	[ebp+var_98], 0FFFFFFFFh
		call	sub_6ED737E0
		mov	eax, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		mov	[ecx+24h], eax
		mov	eax, ds:_ZN10QByteArray11shared_nullE
		mov	[ecx+28h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ecx+2Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ecx+40h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, ds:_ZN9QHashData11shared_nullE
		mov	dword ptr [ecx+48h], 0
		mov	dword ptr [ecx+4Ch], 0FFFFFFFFh
		mov	dword ptr [ecx+50h], 0
		mov	[ecx+54h], edx
		lock inc dword ptr [edx+8]
		setnz	cl
		mov	ecx, [ebp+arg_0]
		mov	[ecx+58h], edx
		lock inc dword ptr [edx+8]
		setnz	cl
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+5Ch], 0
		mov	dword ptr [edx+60h], 0FFFFFFFFh
		mov	dword ptr [edx+64h], 0
		mov	[edx+84h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+arg_0]
		mov	[ecx+88h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, ds:_ZN11QVectorData11shared_nullE
		mov	[ecx+0A8h], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [ecx+0B0h], 0
		mov	dword ptr [ecx+0B4h], 0
		mov	dword ptr [ecx+0B8h], 0
		mov	dword ptr [ecx+0C0h], 0
		mov	dword ptr [ecx+0C4h], 0FFFFFFFFh
		mov	dword ptr [ecx+0C8h], 0
		mov	dword ptr [ecx+0CCh], 0
		mov	dword ptr [ecx+0D0h], 0FFFFFFFFh
		mov	dword ptr [ecx+0D4h], 0
		mov	[ecx+0D8h], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	ecx, [ebp+arg_0]
		mov	[ecx+0DCh], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	ecx, [ebp+arg_0]
		mov	[ecx+0ECh], edx
		mov	dword ptr [ecx+0E0h], 0
		mov	dword ptr [ecx+0E4h], 0FFFFFFFFh
		mov	dword ptr [ecx+0E8h], 0
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+0F0h], 0
		mov	dword ptr [edx+0F4h], 0
		mov	dword ptr [edx+0F8h], 0
		mov	dword ptr [edx+0FCh], 0
		mov	dword ptr [edx+100h], 0
		mov	dword ptr [edx+104h], 0
		mov	dword ptr [edx+108h], 0
		mov	dword ptr [edx+10Ch], 0
		mov	dword ptr [edx+110h], 0
		mov	dword ptr [edx+114h], 0
		mov	dword ptr [edx+118h], 0
		mov	dword ptr [edx+11Ch], 0
		mov	dword ptr [edx+120h], 0
		mov	dword ptr [edx+124h], 0
		mov	dword ptr [edx+128h], 0
		mov	dword ptr [edx+12Ch], 0
		mov	dword ptr [edx+130h], 0
		mov	dword ptr [edx+134h], 0
		mov	dword ptr [edx+138h], 0
		mov	dword ptr [edx+13Ch], 0
		mov	dword ptr [edx+140h], 0
		mov	dword ptr [edx+144h], 0
		mov	dword ptr [edx+148h], 0
		mov	dword ptr [edx+14Ch], 0
		mov	dword ptr [edx+150h], 0
		mov	dword ptr [edx+154h], 0
		mov	dword ptr [edx+158h], 0
		mov	dword ptr [edx+15Ch], 0
		mov	dword ptr [edx+160h], 0
		mov	dword ptr [edx+164h], 0
		mov	dword ptr [edx+168h], 0
		mov	dword ptr [edx+16Ch], 0
		mov	dword ptr [edx+170h], 0
		mov	dword ptr [edx+174h], 0
		mov	dword ptr [edx+178h], 0
		mov	dword ptr [edx+17Ch], 0
		mov	[edx+198h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [ecx+19Ch], 0
		mov	dword ptr [ecx+1A0h], 0FFFFFFFFh
		mov	dword ptr [ecx+1A4h], 0
		mov	dword ptr [ecx+68h], 0
		mov	byte ptr [ecx+6Ch], 0
		mov	dword ptr [ecx+74h], 0
		mov	dword ptr [ecx+190h], 0
		mov	dword ptr [ecx+194h], 0
		mov	dword ptr [ecx+18Ch], 80h
		mov	dword ptr [esp+4], 800h
		mov	dword ptr [esp], 0
		mov	[ebp+var_98], 10h
		call	ds:_Z8qReallocPvj
		mov	edx, [ebp+arg_0]
		test	eax, eax
		mov	[edx+190h], eax
		jz	loc_6ED79C55

loc_6ED78D9F:				; CODE XREF: sub_6ED78A10+124Bj
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+18Ch]
		shl	eax, 2
		mov	[esp+4], eax
		mov	eax, [ecx+194h]
		mov	[esp], eax
		mov	[ebp+var_98], 10h
		call	ds:_Z8qReallocPvj
		mov	edx, [ebp+arg_0]
		mov	[edx+194h], eax
		mov	edx, [edx+190h]
		test	edx, edx
		jz	loc_6ED79AE5

loc_6ED78DDF:				; CODE XREF: sub_6ED78A10+10DBj
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [ecx+1B0h], 0
		mov	[esp], ecx
		mov	[ebp+var_98], 10h
		call	sub_6ED78400
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_6EDA1CDD ; "<"
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_C], eax
		mov	[ebp+var_3C], eax
		lock inc dword ptr [eax]
		setnz	dl
		movzx	eax, [ebp+var_38]
		and	eax, 0FFFFFFECh
		or	eax, 0Ch
		mov	[ebp+var_38], al
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aLt_2 ;	"lt"
		mov	[ebp+var_98], 0Eh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_10], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		add	eax, 54h
		mov	[ebp+var_A0], eax
		mov	eax, [edx+54h]
		mov	eax, [eax+8]
		cmp	eax, 1
		jz	short loc_6ED78E80
		mov	ecx, [ebp+var_A0]
		mov	[esp], ecx
		mov	[ebp+var_98], 0Dh
		call	sub_6ED929C0

loc_6ED78E80:				; CODE XREF: sub_6ED78A10+456j
		lea	eax, [ebp+var_34]
		mov	[esp+8], eax
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	eax, [ebp+var_A0]
		mov	[esp], eax
		mov	[ebp+var_98], 0Dh
		call	sub_6ED98330
		mov	[ebp+var_C8], eax
		mov	ecx, [ebp+arg_0]
		mov	edx, [eax]
		mov	[ebp+var_B4], edx
		cmp	edx, [ecx+54h]
		jz	loc_6ED79A20
		lea	eax, [ebp+var_3C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_B4]
		add	eax, 0Ch
		mov	[esp], eax
		mov	[ebp+var_98], 0Dh
		call	ds:_ZN7QStringaSERKS_
		mov	ecx, [ebp+var_B4]
		movzx	edx, [ebp+var_38]
		movzx	eax, byte ptr [ecx+10h]
		and	edx, 1
		and	eax, 0FFFFFFFEh
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, [ebp+var_38]
		and	eax, 0FFFFFFFDh
		and	edx, 2
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, [ebp+var_38]
		and	eax, 0FFFFFFFBh
		and	edx, 4
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, [ebp+var_38]
		and	eax, 0FFFFFFF7h
		and	edx, 8
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, [ebp+var_38]
		and	eax, 0FFFFFFEFh
		and	edx, 10h
		or	eax, edx
		mov	[ecx+10h], al

loc_6ED78F38:				; CODE XREF: sub_6ED78A10+10D0j
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED79520

loc_6ED78F49:				; CODE XREF: sub_6ED78A10+B26j
		mov	eax, [ebp+var_3C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED796E0

loc_6ED78F5A:				; CODE XREF: sub_6ED78A10+CE6j
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED796C0

loc_6ED78F6B:				; CODE XREF: sub_6ED78A10+CC6j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_6EDA1C57 ; ">"
		mov	[ebp+var_98], 10h
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_14], eax
		mov	[ebp+var_44], eax
		lock inc dword ptr [eax]
		setnz	dl
		movzx	eax, [ebp+var_40]
		and	eax, 0FFFFFFECh
		or	eax, 0Ch
		mov	[ebp+var_40], al
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aGt_2 ;	"gt"
		mov	[ebp+var_98], 0Bh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_18], eax
		mov	eax, [edx+54h]
		mov	eax, [eax+8]
		cmp	eax, 1
		jz	short loc_6ED78FEB
		mov	ecx, [ebp+var_A0]
		mov	[esp], ecx
		mov	[ebp+var_98], 0Ah
		call	sub_6ED929C0

loc_6ED78FEB:				; CODE XREF: sub_6ED78A10+5C1j
		lea	eax, [ebp+var_34]
		mov	[esp+8], eax
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		mov	eax, [ebp+var_A0]
		mov	[esp], eax
		mov	[ebp+var_98], 0Ah
		call	sub_6ED98330
		mov	[ebp+var_C4], eax
		mov	ecx, [ebp+arg_0]
		mov	edx, [eax]
		mov	[ebp+var_B0], edx
		cmp	edx, [ecx+54h]
		jz	loc_6ED79955
		lea	eax, [ebp+var_44]
		mov	[esp+4], eax
		mov	eax, [ebp+var_B0]
		add	eax, 0Ch
		mov	[esp], eax
		mov	[ebp+var_98], 0Ah
		call	ds:_ZN7QStringaSERKS_
		mov	ecx, [ebp+var_B0]
		movzx	edx, [ebp+var_40]
		movzx	eax, byte ptr [ecx+10h]
		and	edx, 1
		and	eax, 0FFFFFFFEh
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, [ebp+var_40]
		and	eax, 0FFFFFFFDh
		and	edx, 2
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, [ebp+var_40]
		and	eax, 0FFFFFFFBh
		and	edx, 4
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, [ebp+var_40]
		and	eax, 0FFFFFFF7h
		and	edx, 8
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, [ebp+var_40]
		and	eax, 0FFFFFFEFh
		and	edx, 10h
		or	eax, edx
		mov	[ecx+10h], al

loc_6ED790A3:				; CODE XREF: sub_6ED78A10+1005j
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED796A0

loc_6ED790B4:				; CODE XREF: sub_6ED78A10+CA6j
		mov	eax, [ebp+var_44]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED79680

loc_6ED790C5:				; CODE XREF: sub_6ED78A10+C86j
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED79660

loc_6ED790D6:				; CODE XREF: sub_6ED78A10+C66j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_6EDA1CA7 ; "&"
		mov	[ebp+var_98], 10h
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_1C], eax
		mov	[ebp+var_4C], eax
		lock inc dword ptr [eax]
		setnz	dl
		movzx	eax, [ebp+var_48]
		and	eax, 0FFFFFFECh
		or	eax, 0Ch
		mov	[ebp+var_48], al
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aAmp_2 ; "amp"
		mov	[ebp+var_98], 8
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_20], eax
		mov	eax, [edx+54h]
		mov	eax, [eax+8]
		cmp	eax, 1
		jz	short loc_6ED79156
		mov	ecx, [ebp+var_A0]
		mov	[esp], ecx
		mov	[ebp+var_98], 7
		call	sub_6ED929C0

loc_6ED79156:				; CODE XREF: sub_6ED78A10+72Cj
		lea	eax, [ebp+var_34]
		mov	[esp+8], eax
		lea	eax, [ebp+var_20]
		mov	[esp+4], eax
		mov	eax, [ebp+var_A0]
		mov	[esp], eax
		mov	[ebp+var_98], 7
		call	sub_6ED98330
		mov	[ebp+var_C0], eax
		mov	ecx, [ebp+arg_0]
		mov	edx, [eax]
		mov	[ebp+var_AC], edx
		cmp	edx, [ecx+54h]
		jz	loc_6ED79890
		lea	eax, [ebp+var_4C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_AC]
		add	eax, 0Ch
		mov	[esp], eax
		mov	[ebp+var_98], 7
		call	ds:_ZN7QStringaSERKS_
		mov	ecx, [ebp+var_AC]
		movzx	edx, [ebp+var_48]
		movzx	eax, byte ptr [ecx+10h]
		and	edx, 1
		and	eax, 0FFFFFFFEh
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, [ebp+var_48]
		and	eax, 0FFFFFFFDh
		and	edx, 2
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, [ebp+var_48]
		and	eax, 0FFFFFFFBh
		and	edx, 4
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, [ebp+var_48]
		and	eax, 0FFFFFFF7h
		and	edx, 8
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, [ebp+var_48]
		and	eax, 0FFFFFFEFh
		and	edx, 10h
		or	eax, edx
		mov	[ecx+10h], al

loc_6ED7920E:				; CODE XREF: sub_6ED78A10+F40j
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED79640

loc_6ED7921F:				; CODE XREF: sub_6ED78A10+C46j
		mov	eax, [ebp+var_4C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED79620

loc_6ED79230:				; CODE XREF: sub_6ED78A10+C26j
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED79600

loc_6ED79241:				; CODE XREF: sub_6ED78A10+C06j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_6EDA1CE9 ; "'"
		mov	[ebp+var_98], 10h
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_24], eax
		mov	[ebp+var_54], eax
		lock inc dword ptr [eax]
		setnz	dl
		movzx	eax, [ebp+var_50]
		and	eax, 0FFFFFFECh
		or	eax, 0Ch
		mov	[ebp+var_50], al
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aApos_1	; "apos"
		mov	[ebp+var_98], 5
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_28], eax
		mov	eax, [edx+54h]
		mov	eax, [eax+8]
		cmp	eax, 1
		jz	short loc_6ED792C1
		mov	ecx, [ebp+var_A0]
		mov	[esp], ecx
		mov	[ebp+var_98], 4
		call	sub_6ED929C0

loc_6ED792C1:				; CODE XREF: sub_6ED78A10+897j
		lea	eax, [ebp+var_34]
		mov	[esp+8], eax
		lea	eax, [ebp+var_28]
		mov	[esp+4], eax
		mov	eax, [ebp+var_A0]
		mov	[esp], eax
		mov	[ebp+var_98], 4
		call	sub_6ED98330
		mov	[ebp+var_BC], eax
		mov	ecx, [ebp+arg_0]
		mov	edx, [eax]
		mov	[ebp+var_A8], edx
		cmp	edx, [ecx+54h]
		jz	loc_6ED797C5
		lea	eax, [ebp+var_54]
		mov	[esp+4], eax
		mov	eax, [ebp+var_A8]
		add	eax, 0Ch
		mov	[esp], eax
		mov	[ebp+var_98], 4
		call	ds:_ZN7QStringaSERKS_
		mov	ecx, [ebp+var_A8]
		movzx	edx, [ebp+var_50]
		movzx	eax, byte ptr [ecx+10h]
		and	edx, 1
		and	eax, 0FFFFFFFEh
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, [ebp+var_50]
		and	eax, 0FFFFFFFDh
		and	edx, 2
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, [ebp+var_50]
		and	eax, 0FFFFFFFBh
		and	edx, 4
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, [ebp+var_50]
		and	eax, 0FFFFFFF7h
		and	edx, 8
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, [ebp+var_50]
		and	eax, 0FFFFFFEFh
		and	edx, 10h
		or	eax, edx
		mov	[ecx+10h], al

loc_6ED79379:				; CODE XREF: sub_6ED78A10+E75j
		mov	eax, [ebp+var_28]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED795E0

loc_6ED7938A:				; CODE XREF: sub_6ED78A10+BE6j
		mov	eax, [ebp+var_54]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED795C0

loc_6ED7939B:				; CODE XREF: sub_6ED78A10+BC6j
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED795A0

loc_6ED793AC:				; CODE XREF: sub_6ED78A10+BA6j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	byte_6EDA1C41
		mov	[ebp+var_98], 10h
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_2C], eax
		mov	[ebp+var_5C], eax
		lock inc dword ptr [eax]
		setnz	dl
		movzx	eax, [ebp+var_58]
		and	eax, 0FFFFFFECh
		or	eax, 0Ch
		mov	[ebp+var_58], al
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aQuot_3	; "quot"
		mov	[ebp+var_98], 2
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_30], eax
		mov	eax, [edx+54h]
		mov	eax, [eax+8]
		cmp	eax, 1
		jz	short loc_6ED7942C
		mov	ecx, [ebp+var_A0]
		mov	[esp], ecx
		mov	[ebp+var_98], 1
		call	sub_6ED929C0

loc_6ED7942C:				; CODE XREF: sub_6ED78A10+A02j
		lea	eax, [ebp+var_34]
		mov	[esp+8], eax
		lea	eax, [ebp+var_30]
		mov	[esp+4], eax
		mov	eax, [ebp+var_A0]
		mov	[esp], eax
		mov	[ebp+var_98], 1
		call	sub_6ED98330
		mov	[ebp+var_B8], eax
		mov	ecx, [ebp+arg_0]
		mov	edx, [eax]
		mov	[ebp+var_A4], edx
		cmp	edx, [ecx+54h]
		jz	loc_6ED79700
		lea	eax, [ebp+var_5C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_A4]
		add	eax, 0Ch
		mov	[esp], eax
		mov	[ebp+var_98], 1
		call	ds:_ZN7QStringaSERKS_
		mov	ecx, [ebp+var_A4]
		movzx	edx, [ebp+var_58]
		movzx	eax, byte ptr [ecx+10h]
		and	edx, 1
		and	eax, 0FFFFFFFEh
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, [ebp+var_58]
		and	eax, 0FFFFFFFDh
		and	edx, 2
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, [ebp+var_58]
		and	eax, 0FFFFFFFBh
		and	edx, 4
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, [ebp+var_58]
		and	eax, 0FFFFFFF7h
		and	edx, 8
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, [ebp+var_58]
		and	eax, 0FFFFFFEFh
		and	edx, 10h
		or	eax, edx
		mov	[ecx+10h], al

loc_6ED794E4:				; CODE XREF: sub_6ED78A10+DB0j
		mov	eax, [ebp+var_30]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED79580

loc_6ED794F5:				; CODE XREF: sub_6ED78A10+B86j
		mov	eax, [ebp+var_5C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED79566

loc_6ED79502:				; CODE XREF: sub_6ED78A10+B6Cj
		mov	eax, [ebp+var_2C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED79540
		lea	eax, [ebp+var_9C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED79520:				; CODE XREF: sub_6ED78A10+533j
		mov	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_98], 0Eh
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED78F49
; ---------------------------------------------------------------------------
		align 10h

loc_6ED79540:				; CODE XREF: sub_6ED78A10+AFDj
		mov	eax, [ebp+var_2C]
		mov	[esp], eax
		mov	[ebp+var_98], 10h
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_9C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED79566:				; CODE XREF: sub_6ED78A10+AF0j
		mov	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_98], 3
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED79502
; ---------------------------------------------------------------------------
		align 10h

loc_6ED79580:				; CODE XREF: sub_6ED78A10+ADFj
		mov	eax, [ebp+var_30]
		mov	[esp], eax
		mov	[ebp+var_98], 2
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED794F5
; ---------------------------------------------------------------------------
		align 10h

loc_6ED795A0:				; CODE XREF: sub_6ED78A10+996j
		mov	eax, [ebp+var_24]
		mov	[esp], eax
		mov	[ebp+var_98], 10h
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED793AC
; ---------------------------------------------------------------------------
		align 10h

loc_6ED795C0:				; CODE XREF: sub_6ED78A10+985j
		mov	eax, [ebp+var_54]
		mov	[esp], eax
		mov	[ebp+var_98], 6
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7939B
; ---------------------------------------------------------------------------
		align 10h

loc_6ED795E0:				; CODE XREF: sub_6ED78A10+974j
		mov	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_98], 5
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7938A
; ---------------------------------------------------------------------------
		align 10h

loc_6ED79600:				; CODE XREF: sub_6ED78A10+82Bj
		mov	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_98], 10h
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED79241
; ---------------------------------------------------------------------------
		align 10h

loc_6ED79620:				; CODE XREF: sub_6ED78A10+81Aj
		mov	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_98], 9
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED79230
; ---------------------------------------------------------------------------
		align 10h

loc_6ED79640:				; CODE XREF: sub_6ED78A10+809j
		mov	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_98], 8
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7921F
; ---------------------------------------------------------------------------
		align 10h

loc_6ED79660:				; CODE XREF: sub_6ED78A10+6C0j
		mov	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_98], 10h
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED790D6
; ---------------------------------------------------------------------------
		align 10h

loc_6ED79680:				; CODE XREF: sub_6ED78A10+6AFj
		mov	eax, [ebp+var_44]
		mov	[esp], eax
		mov	[ebp+var_98], 0Ch
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED790C5
; ---------------------------------------------------------------------------
		align 10h

loc_6ED796A0:				; CODE XREF: sub_6ED78A10+69Ej
		mov	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_98], 0Bh
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED790B4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED796C0:				; CODE XREF: sub_6ED78A10+555j
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_98], 10h
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED78F6B
; ---------------------------------------------------------------------------
		align 10h

loc_6ED796E0:				; CODE XREF: sub_6ED78A10+544j
		mov	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_98], 0Fh
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED78F5A
; ---------------------------------------------------------------------------
		align 10h

loc_6ED79700:				; CODE XREF: sub_6ED78A10+A56j
		mov	eax, [edx+0Ch]
		cmp	eax, [edx+18h]
		jge	loc_6ED79C10

loc_6ED7970C:				; CODE XREF: sub_6ED78A10+1240j
		mov	eax, [ebp+var_34]
		mov	[ebp+var_CC], eax
		mov	dword ptr [esp+4], 4
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+54h]
		mov	[esp], eax
		mov	[ebp+var_98], 1
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		jz	short loc_6ED797A1
		mov	edx, [ebp+var_30]
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+var_5C]
		mov	[eax+0Ch], edx
		lock inc dword ptr [edx]
		setnz	cl
		movzx	ecx, [ebp+var_58]
		movzx	edx, byte ptr [eax+10h]
		and	ecx, 1
		and	edx, 0FFFFFFFEh
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, [ebp+var_58]
		and	edx, 0FFFFFFFDh
		and	ecx, 2
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, [ebp+var_58]
		and	edx, 0FFFFFFFBh
		and	ecx, 4
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, [ebp+var_58]
		and	edx, 0FFFFFFF7h
		and	ecx, 8
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, [ebp+var_58]
		and	edx, 0FFFFFFEFh
		and	ecx, 10h
		or	edx, ecx
		mov	[eax+10h], dl

loc_6ED797A1:				; CODE XREF: sub_6ED78A10+D28j
		mov	ecx, [ebp+var_CC]
		mov	[eax+4], ecx
		mov	ecx, [ebp+var_B8]
		mov	edx, [ecx]
		mov	[eax], edx
		mov	[ecx], eax
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+54h]
		add	dword ptr [eax+0Ch], 1
		jmp	loc_6ED794E4
; ---------------------------------------------------------------------------

loc_6ED797C5:				; CODE XREF: sub_6ED78A10+8EBj
		mov	eax, [edx+0Ch]
		cmp	eax, [edx+18h]
		jge	loc_6ED79BC5

loc_6ED797D1:				; CODE XREF: sub_6ED78A10+11F5j
		mov	eax, [ebp+var_34]
		mov	[ebp+var_D0], eax
		mov	dword ptr [esp+4], 4
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+54h]
		mov	[esp], eax
		mov	[ebp+var_98], 4
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		jz	short loc_6ED79866
		mov	edx, [ebp+var_28]
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+var_54]
		mov	[eax+0Ch], edx
		lock inc dword ptr [edx]
		setnz	cl
		movzx	ecx, [ebp+var_50]
		movzx	edx, byte ptr [eax+10h]
		and	ecx, 1
		and	edx, 0FFFFFFFEh
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, [ebp+var_50]
		and	edx, 0FFFFFFFDh
		and	ecx, 2
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, [ebp+var_50]
		and	edx, 0FFFFFFFBh
		and	ecx, 4
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, [ebp+var_50]
		and	edx, 0FFFFFFF7h
		and	ecx, 8
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, [ebp+var_50]
		and	edx, 0FFFFFFEFh
		and	ecx, 10h
		or	edx, ecx
		mov	[eax+10h], dl

loc_6ED79866:				; CODE XREF: sub_6ED78A10+DEDj
		mov	ecx, [ebp+var_D0]
		mov	[eax+4], ecx
		mov	ecx, [ebp+var_BC]
		mov	edx, [ecx]
		mov	[eax], edx
		mov	[ecx], eax
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+54h]
		add	dword ptr [eax+0Ch], 1
		jmp	loc_6ED79379
; ---------------------------------------------------------------------------
		align 10h

loc_6ED79890:				; CODE XREF: sub_6ED78A10+780j
		mov	eax, [edx+0Ch]
		cmp	eax, [edx+18h]
		jge	loc_6ED79B80

loc_6ED7989C:				; CODE XREF: sub_6ED78A10+11B0j
		mov	eax, [ebp+var_34]
		mov	[ebp+var_D4], eax
		mov	dword ptr [esp+4], 4
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+54h]
		mov	[esp], eax
		mov	[ebp+var_98], 7
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		jz	short loc_6ED79931
		mov	edx, [ebp+var_20]
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+var_4C]
		mov	[eax+0Ch], edx
		lock inc dword ptr [edx]
		setnz	cl
		movzx	ecx, [ebp+var_48]
		movzx	edx, byte ptr [eax+10h]
		and	ecx, 1
		and	edx, 0FFFFFFFEh
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, [ebp+var_48]
		and	edx, 0FFFFFFFDh
		and	ecx, 2
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, [ebp+var_48]
		and	edx, 0FFFFFFFBh
		and	ecx, 4
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, [ebp+var_48]
		and	edx, 0FFFFFFF7h
		and	ecx, 8
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, [ebp+var_48]
		and	edx, 0FFFFFFEFh
		and	ecx, 10h
		or	edx, ecx
		mov	[eax+10h], dl

loc_6ED79931:				; CODE XREF: sub_6ED78A10+EB8j
		mov	ecx, [ebp+var_D4]
		mov	[eax+4], ecx
		mov	ecx, [ebp+var_C0]
		mov	edx, [ecx]
		mov	[eax], edx
		mov	[ecx], eax
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+54h]
		add	dword ptr [eax+0Ch], 1
		jmp	loc_6ED7920E
; ---------------------------------------------------------------------------

loc_6ED79955:				; CODE XREF: sub_6ED78A10+615j
		mov	eax, [edx+0Ch]
		cmp	eax, [edx+18h]
		jge	loc_6ED79B35

loc_6ED79961:				; CODE XREF: sub_6ED78A10+1165j
		mov	eax, [ebp+var_34]
		mov	[ebp+var_D8], eax
		mov	dword ptr [esp+4], 4
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+54h]
		mov	[esp], eax
		mov	[ebp+var_98], 0Ah
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		jz	short loc_6ED799F6
		mov	edx, [ebp+var_18]
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+var_44]
		mov	[eax+0Ch], edx
		lock inc dword ptr [edx]
		setnz	cl
		movzx	ecx, [ebp+var_40]
		movzx	edx, byte ptr [eax+10h]
		and	ecx, 1
		and	edx, 0FFFFFFFEh
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, [ebp+var_40]
		and	edx, 0FFFFFFFDh
		and	ecx, 2
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, [ebp+var_40]
		and	edx, 0FFFFFFFBh
		and	ecx, 4
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, [ebp+var_40]
		and	edx, 0FFFFFFF7h
		and	ecx, 8
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, [ebp+var_40]
		and	edx, 0FFFFFFEFh
		and	ecx, 10h
		or	edx, ecx
		mov	[eax+10h], dl

loc_6ED799F6:				; CODE XREF: sub_6ED78A10+F7Dj
		mov	ecx, [ebp+var_D8]
		mov	[eax+4], ecx
		mov	ecx, [ebp+var_C4]
		mov	edx, [ecx]
		mov	[eax], edx
		mov	[ecx], eax
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+54h]
		add	dword ptr [eax+0Ch], 1
		jmp	loc_6ED790A3
; ---------------------------------------------------------------------------
		align 10h

loc_6ED79A20:				; CODE XREF: sub_6ED78A10+4AAj
		mov	eax, [edx+0Ch]
		cmp	eax, [edx+18h]
		jge	loc_6ED79AF0

loc_6ED79A2C:				; CODE XREF: sub_6ED78A10+1120j
		mov	eax, [ebp+var_34]
		mov	[ebp+var_DC], eax
		mov	dword ptr [esp+4], 4
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+54h]
		mov	[esp], eax
		mov	[ebp+var_98], 0Dh
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		jz	short loc_6ED79AC1
		mov	edx, [ebp+var_10]
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+var_3C]
		mov	[eax+0Ch], edx
		lock inc dword ptr [edx]
		setnz	cl
		movzx	ecx, [ebp+var_38]
		movzx	edx, byte ptr [eax+10h]
		and	ecx, 1
		and	edx, 0FFFFFFFEh
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, [ebp+var_38]
		and	edx, 0FFFFFFFDh
		and	ecx, 2
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, [ebp+var_38]
		and	edx, 0FFFFFFFBh
		and	ecx, 4
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, [ebp+var_38]
		and	edx, 0FFFFFFF7h
		and	ecx, 8
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, [ebp+var_38]
		and	edx, 0FFFFFFEFh
		and	ecx, 10h
		or	edx, ecx
		mov	[eax+10h], dl

loc_6ED79AC1:				; CODE XREF: sub_6ED78A10+1048j
		mov	ecx, [ebp+var_DC]
		mov	[eax+4], ecx
		mov	ecx, [ebp+var_C8]
		mov	edx, [ecx]
		mov	[eax], edx
		mov	[ecx], eax
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+54h]
		add	dword ptr [eax+0Ch], 1
		jmp	loc_6ED78F38
; ---------------------------------------------------------------------------

loc_6ED79AE5:				; CODE XREF: sub_6ED78A10+3C9j
		call	ds:_Z9qBadAllocv
		jmp	loc_6ED78DDF
; ---------------------------------------------------------------------------

loc_6ED79AF0:				; CODE XREF: sub_6ED78A10+1016j
		movsx	eax, word ptr [edx+16h]
		mov	[esp], edx
		add	eax, 1
		mov	[esp+4], eax
		call	ds:_ZN9QHashData6rehashEi
		lea	eax, [ebp+var_34]
		mov	[esp+8], eax
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	ecx, [ebp+var_A0]
		mov	[esp], ecx
		mov	[ebp+var_98], 0Dh
		call	sub_6ED98330
		mov	[ebp+var_C8], eax
		jmp	loc_6ED79A2C
; ---------------------------------------------------------------------------

loc_6ED79B35:				; CODE XREF: sub_6ED78A10+F4Bj
		movsx	eax, word ptr [edx+16h]
		mov	[esp], edx
		add	eax, 1
		mov	[esp+4], eax
		call	ds:_ZN9QHashData6rehashEi
		lea	eax, [ebp+var_34]
		mov	[esp+8], eax
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		mov	eax, [ebp+var_A0]
		mov	[esp], eax
		mov	[ebp+var_98], 0Ah
		call	sub_6ED98330
		mov	[ebp+var_C4], eax
		jmp	loc_6ED79961
; ---------------------------------------------------------------------------
		align 10h

loc_6ED79B80:				; CODE XREF: sub_6ED78A10+E86j
		movsx	eax, word ptr [edx+16h]
		mov	[esp], edx
		add	eax, 1
		mov	[esp+4], eax
		call	ds:_ZN9QHashData6rehashEi
		lea	eax, [ebp+var_34]
		mov	[esp+8], eax
		lea	eax, [ebp+var_20]
		mov	[esp+4], eax
		mov	edx, [ebp+var_A0]
		mov	[esp], edx
		mov	[ebp+var_98], 7
		call	sub_6ED98330
		mov	[ebp+var_C0], eax
		jmp	loc_6ED7989C
; ---------------------------------------------------------------------------

loc_6ED79BC5:				; CODE XREF: sub_6ED78A10+DBBj
		movsx	eax, word ptr [edx+16h]
		mov	[esp], edx
		add	eax, 1
		mov	[esp+4], eax
		call	ds:_ZN9QHashData6rehashEi
		lea	eax, [ebp+var_34]
		mov	[esp+8], eax
		lea	eax, [ebp+var_28]
		mov	[esp+4], eax
		mov	ecx, [ebp+var_A0]
		mov	[esp], ecx
		mov	[ebp+var_98], 4
		call	sub_6ED98330
		mov	[ebp+var_BC], eax
		jmp	loc_6ED797D1
; ---------------------------------------------------------------------------
		align 10h

loc_6ED79C10:				; CODE XREF: sub_6ED78A10+CF6j
		movsx	eax, word ptr [edx+16h]
		mov	[esp], edx
		add	eax, 1
		mov	[esp+4], eax
		call	ds:_ZN9QHashData6rehashEi
		lea	eax, [ebp+var_34]
		mov	[esp+8], eax
		lea	eax, [ebp+var_30]
		mov	[esp+4], eax
		mov	eax, [ebp+var_A0]
		mov	[esp], eax
		mov	[ebp+var_98], 1
		call	sub_6ED98330
		mov	[ebp+var_B8], eax
		jmp	loc_6ED7970C
; ---------------------------------------------------------------------------

loc_6ED79C55:				; CODE XREF: sub_6ED78A10+389j
		call	ds:_Z9qBadAllocv
		jmp	loc_6ED78D9F
sub_6ED78A10	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED79C60	proc near		; DATA XREF: sub_6ED78A10+26o
		add	ebp, 8
		mov	eax, [ebp-98h]
		mov	edx, [ebp-94h]
		cmp	eax, 1
		mov	[ebp-0E4h], edx
		jz	loc_6ED79D20
		cmp	eax, 2
		jz	loc_6ED79D35
		cmp	eax, 3
		jz	loc_6ED7A037
		cmp	eax, 4
		jz	loc_6ED7A04C
		cmp	eax, 5
		lea	esi, [esi+0]
		jz	loc_6ED7A061
		cmp	eax, 6
		jz	loc_6ED79FF3
		cmp	eax, 7
		jz	loc_6ED7A008
		cmp	eax, 8
		nop
		lea	esi, [esi+0]
		jz	loc_6ED7A01D
		cmp	eax, 9
		jz	loc_6ED79FAF
		cmp	eax, 0Ah
		jz	loc_6ED79FC4
		cmp	eax, 0Bh
		nop
		lea	esi, [esi+0]
		jz	loc_6ED79FD9
		cmp	eax, 0Ch
		jz	loc_6ED79F6B
		cmp	eax, 0Dh
		jz	loc_6ED79F80
		cmp	eax, 0Eh
		nop
		lea	esi, [esi+0]
		jz	loc_6ED79F95
		cmp	eax, 0Fh
		jz	short loc_6ED79D4A
		lea	eax, [ebp-30h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560

loc_6ED79D20:				; CODE XREF: sub_6ED79C60+18j
		lea	eax, [ebp-5Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560

loc_6ED79D35:				; CODE XREF: sub_6ED79C60+21j
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560

loc_6ED79D4A:				; CODE XREF: sub_6ED79C60+A9j
					; sub_6ED79C60+34Aj ...
		mov	edx, [ebp+8]
		mov	ecx, [ebp-0E4h]
		mov	eax, [edx+19Ch]
		mov	[ebp-0E0h], ecx
		test	eax, eax
		jz	short loc_6ED79D76
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	ds:_Z5qFreePv

loc_6ED79D76:				; CODE XREF: sub_6ED79C60+101j
		mov	eax, [ebp+8]
		add	eax, 198h
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560
		mov	eax, [ebp+8]
		add	eax, 0ECh
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED95060
		mov	ecx, [ebp+8]
		mov	eax, [ecx+0E0h]
		test	eax, eax
		jz	short loc_6ED79DCA
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	ds:_Z5qFreePv

loc_6ED79DCA:				; CODE XREF: sub_6ED79C60+155j
		mov	eax, [ebp+8]
		add	eax, 0DCh
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED958D0
		mov	eax, [ebp+8]
		add	eax, 0D8h
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED954B0
		mov	edx, [ebp+8]
		mov	eax, [edx+0CCh]
		test	eax, eax
		jz	short loc_6ED79E1E
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	ds:_Z5qFreePv

loc_6ED79E1E:				; CODE XREF: sub_6ED79C60+1A9j
		mov	ecx, [ebp+8]
		mov	eax, [ecx+0C0h]
		test	eax, eax
		jz	short loc_6ED79E3E
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	ds:_Z5qFreePv

loc_6ED79E3E:				; CODE XREF: sub_6ED79C60+1C9j
		mov	eax, [ebp+8]
		add	eax, 0A8h
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED91130
		mov	eax, [ebp+8]
		add	eax, 88h
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560
		mov	eax, [ebp+8]
		add	eax, 84h
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560
		mov	edx, [ebp+8]
		mov	eax, [edx+5Ch]
		test	eax, eax
		jz	short loc_6ED79EA9
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	ds:_Z5qFreePv

loc_6ED79EA9:				; CODE XREF: sub_6ED79C60+234j
		mov	eax, [ebp+8]
		add	eax, 58h
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED92AB0
		mov	eax, [ebp+8]
		add	eax, 54h
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED92AB0
		mov	ecx, [ebp+8]
		mov	eax, [ecx+48h]
		test	eax, eax
		jz	short loc_6ED79EF6
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	ds:_Z5qFreePv

loc_6ED79EF6:				; CODE XREF: sub_6ED79C60+281j
		mov	eax, [ebp+8]
		add	eax, 40h
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560
		mov	eax, [ebp+8]
		add	eax, 2Ch
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED90150
		mov	eax, [ebp+8]
		add	eax, 28h
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED90150
		mov	eax, [ebp+8]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED91D00
		mov	edx, [ebp-0E0h]
		mov	[esp+0], edx
		mov	dword ptr [ebp-98h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED79F6B:				; CODE XREF: sub_6ED79C60+89j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560

loc_6ED79F80:				; CODE XREF: sub_6ED79C60+92j
		lea	eax, [ebp-3Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560

loc_6ED79F95:				; CODE XREF: sub_6ED79C60+A0j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560
		jmp	loc_6ED79D4A
; ---------------------------------------------------------------------------

loc_6ED79FAF:				; CODE XREF: sub_6ED79C60+69j
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560

loc_6ED79FC4:				; CODE XREF: sub_6ED79C60+72j
		lea	eax, [ebp-44h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560

loc_6ED79FD9:				; CODE XREF: sub_6ED79C60+80j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560
		jmp	loc_6ED79D4A
; ---------------------------------------------------------------------------

loc_6ED79FF3:				; CODE XREF: sub_6ED79C60+49j
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560

loc_6ED7A008:				; CODE XREF: sub_6ED79C60+52j
		lea	eax, [ebp-4Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560

loc_6ED7A01D:				; CODE XREF: sub_6ED79C60+60j
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560
		jmp	loc_6ED79D4A
; ---------------------------------------------------------------------------

loc_6ED7A037:				; CODE XREF: sub_6ED79C60+2Aj
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560

loc_6ED7A04C:				; CODE XREF: sub_6ED79C60+33j
		lea	eax, [ebp-54h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560

loc_6ED7A061:				; CODE XREF: sub_6ED79C60+40j
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560
		jmp	loc_6ED79D4A
sub_6ED79C60	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 185. _ZN16QXmlStreamReaderC1Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamReaderC1Ev
_ZN16QXmlStreamReaderC1Ev proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9ABA2
		mov	[ebp+var_18], offset sub_6ED7A0F0
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 1B8h ;	size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 1
		mov	[esp+4], edx
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	sub_6ED78A10
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlStreamReaderC1Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED7A0F0	proc near		; DATA XREF: _ZN16QXmlStreamReaderC1Ev+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-40h]
		mov	[ebp-44h], eax
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED7A0F0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 190. _ZN16QXmlStreamReaderC2Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamReaderC2Ev
_ZN16QXmlStreamReaderC2Ev proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9ABA8
		mov	[ebp+var_18], offset sub_6ED7A190
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 1B8h ;	size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 1
		mov	[esp+4], edx
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	sub_6ED78A10
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlStreamReaderC2Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED7A190	proc near		; DATA XREF: _ZN16QXmlStreamReaderC2Ev+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-40h]
		mov	[ebp-44h], eax
		mov	[esp+0], edx
		call	sub_6ED988B0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED7A190	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 0F8h
		lea	eax, [ebp-8]
		mov	[ebp-7Ch], eax
		lea	eax, [ebp-9Ch]
		mov	dword ptr [ebp-84h], offset sub_6ED997C0
		mov	dword ptr [ebp-80h], offset word_6ED9ABAE
		mov	dword ptr [ebp-78h], offset loc_6ED7B410
		mov	[ebp-74h], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+8]
		mov	[esp], edx
		mov	dword ptr [ebp-98h], 0FFFFFFFFh
		call	sub_6ED737E0
		mov	eax, [ebp+0Ch]
		mov	ecx, [ebp+8]
		mov	[ecx+24h], eax
		mov	eax, ds:_ZN10QByteArray11shared_nullE
		mov	[ecx+28h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ecx+2Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ecx+40h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, ds:_ZN9QHashData11shared_nullE
		mov	dword ptr [ecx+48h], 0
		mov	dword ptr [ecx+4Ch], 0FFFFFFFFh
		mov	dword ptr [ecx+50h], 0
		mov	[ecx+54h], edx
		lock inc dword ptr [edx+8]
		setnz	cl
		mov	ecx, [ebp+8]
		mov	[ecx+58h], edx
		lock inc dword ptr [edx+8]
		setnz	cl
		mov	edx, [ebp+8]
		mov	dword ptr [edx+5Ch], 0
		mov	dword ptr [edx+60h], 0FFFFFFFFh
		mov	dword ptr [edx+64h], 0
		mov	[edx+84h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+8]
		mov	[ecx+88h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, ds:_ZN11QVectorData11shared_nullE
		mov	[ecx+0A8h], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	ecx, [ebp+8]
		mov	dword ptr [ecx+0B0h], 0
		mov	dword ptr [ecx+0B4h], 0
		mov	dword ptr [ecx+0B8h], 0
		mov	dword ptr [ecx+0C0h], 0
		mov	dword ptr [ecx+0C4h], 0FFFFFFFFh
		mov	dword ptr [ecx+0C8h], 0
		mov	dword ptr [ecx+0CCh], 0
		mov	dword ptr [ecx+0D0h], 0FFFFFFFFh
		mov	dword ptr [ecx+0D4h], 0
		mov	[ecx+0D8h], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	ecx, [ebp+8]
		mov	[ecx+0DCh], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	ecx, [ebp+8]
		mov	[ecx+0ECh], edx
		mov	dword ptr [ecx+0E0h], 0
		mov	dword ptr [ecx+0E4h], 0FFFFFFFFh
		mov	dword ptr [ecx+0E8h], 0
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+8]
		mov	dword ptr [edx+0F0h], 0
		mov	dword ptr [edx+0F4h], 0
		mov	dword ptr [edx+0F8h], 0
		mov	dword ptr [edx+0FCh], 0
		mov	dword ptr [edx+100h], 0
		mov	dword ptr [edx+104h], 0
		mov	dword ptr [edx+108h], 0
		mov	dword ptr [edx+10Ch], 0
		mov	dword ptr [edx+110h], 0
		mov	dword ptr [edx+114h], 0
		mov	dword ptr [edx+118h], 0
		mov	dword ptr [edx+11Ch], 0
		mov	dword ptr [edx+120h], 0
		mov	dword ptr [edx+124h], 0
		mov	dword ptr [edx+128h], 0
		mov	dword ptr [edx+12Ch], 0
		mov	dword ptr [edx+130h], 0
		mov	dword ptr [edx+134h], 0
		mov	dword ptr [edx+138h], 0
		mov	dword ptr [edx+13Ch], 0
		mov	dword ptr [edx+140h], 0
		mov	dword ptr [edx+144h], 0
		mov	dword ptr [edx+148h], 0
		mov	dword ptr [edx+14Ch], 0
		mov	dword ptr [edx+150h], 0
		mov	dword ptr [edx+154h], 0
		mov	dword ptr [edx+158h], 0
		mov	dword ptr [edx+15Ch], 0
		mov	dword ptr [edx+160h], 0
		mov	dword ptr [edx+164h], 0
		mov	dword ptr [edx+168h], 0
		mov	dword ptr [edx+16Ch], 0
		mov	dword ptr [edx+170h], 0
		mov	dword ptr [edx+174h], 0
		mov	dword ptr [edx+178h], 0
		mov	dword ptr [edx+17Ch], 0
		mov	[edx+198h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+8]
		mov	dword ptr [ecx+19Ch], 0
		mov	dword ptr [ecx+1A0h], 0FFFFFFFFh
		mov	dword ptr [ecx+1A4h], 0
		mov	dword ptr [ecx+68h], 0
		mov	byte ptr [ecx+6Ch], 0
		mov	dword ptr [ecx+74h], 0
		mov	dword ptr [ecx+190h], 0
		mov	dword ptr [ecx+194h], 0
		mov	dword ptr [ecx+18Ch], 80h
		mov	dword ptr [esp+4], 800h
		mov	dword ptr [esp], 0
		mov	dword ptr [ebp-98h], 10h
		call	ds:_Z8qReallocPvj
		mov	edx, [ebp+8]
		test	eax, eax
		mov	[edx+190h], eax
		jz	loc_6ED7B405

loc_6ED7A54F:				; CODE XREF: .text:6ED7B40Bj
		mov	ecx, [ebp+8]
		mov	eax, [ecx+18Ch]
		shl	eax, 2
		mov	[esp+4], eax
		mov	eax, [ecx+194h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 10h
		call	ds:_Z8qReallocPvj
		mov	edx, [ebp+8]
		mov	ecx, [edx+190h]
		mov	[edx+194h], eax
		test	ecx, ecx
		jz	loc_6ED7B295

loc_6ED7A58F:				; CODE XREF: .text:6ED7B29Bj
		mov	ecx, [ebp+8]
		mov	dword ptr [ecx+1B0h], 0
		mov	[esp], ecx
		mov	dword ptr [ebp-98h], 10h
		call	sub_6ED78400
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_6EDA1CDD ; "<"
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp-0Ch], eax
		mov	[ebp-3Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		movzx	eax, byte ptr [ebp-38h]
		and	eax, 0FFFFFFECh
		or	eax, 0Ch
		mov	[ebp-38h], al
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aLt_2 ;	"lt"
		mov	dword ptr [ebp-98h], 0Eh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp-10h], eax
		mov	eax, [ebp+8]
		mov	edx, [ebp+8]
		add	eax, 54h
		mov	[ebp-0A0h], eax
		mov	eax, [edx+54h]
		mov	eax, [eax+8]
		cmp	eax, 1
		jz	short loc_6ED7A630
		mov	ecx, [ebp-0A0h]
		mov	[esp], ecx
		mov	dword ptr [ebp-98h], 0Dh
		call	sub_6ED929C0

loc_6ED7A630:				; CODE XREF: .text:6ED7A616j
		lea	eax, [ebp-34h]
		mov	[esp+8], eax
		lea	eax, [ebp-10h]
		mov	[esp+4], eax
		mov	eax, [ebp-0A0h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0Dh
		call	sub_6ED98330
		mov	[ebp-0C8h], eax
		mov	ecx, [ebp+8]
		mov	edx, [eax]
		mov	[ebp-0B4h], edx
		cmp	edx, [ecx+54h]
		jz	loc_6ED7B1D0
		lea	eax, [ebp-3Ch]
		mov	[esp+4], eax
		mov	eax, [ebp-0B4h]
		add	eax, 0Ch
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0Dh
		call	ds:_ZN7QStringaSERKS_
		mov	ecx, [ebp-0B4h]
		movzx	edx, byte ptr [ebp-38h]
		movzx	eax, byte ptr [ecx+10h]
		and	edx, 1
		and	eax, 0FFFFFFFEh
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, byte ptr [ebp-38h]
		and	eax, 0FFFFFFFDh
		and	edx, 2
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, byte ptr [ebp-38h]
		and	eax, 0FFFFFFFBh
		and	edx, 4
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, byte ptr [ebp-38h]
		and	eax, 0FFFFFFF7h
		and	edx, 8
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, byte ptr [ebp-38h]
		and	eax, 0FFFFFFEFh
		and	edx, 10h
		or	eax, edx
		mov	[ecx+10h], al

loc_6ED7A6E8:				; CODE XREF: .text:6ED7B290j
		mov	eax, [ebp-10h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7ACD0

loc_6ED7A6F9:				; CODE XREF: .text:6ED7ACE6j
		mov	eax, [ebp-3Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7AE90

loc_6ED7A70A:				; CODE XREF: .text:6ED7AEA6j
		mov	eax, [ebp-0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7AE70

loc_6ED7A71B:				; CODE XREF: .text:6ED7AE86j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_6EDA1C57 ; ">"
		mov	dword ptr [ebp-98h], 10h
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp-14h], eax
		mov	[ebp-44h], eax
		lock inc dword ptr [eax]
		setnz	dl
		movzx	eax, byte ptr [ebp-40h]
		and	eax, 0FFFFFFECh
		or	eax, 0Ch
		mov	[ebp-40h], al
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aGt_2 ;	"gt"
		mov	dword ptr [ebp-98h], 0Bh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+8]
		mov	[ebp-18h], eax
		mov	eax, [edx+54h]
		mov	eax, [eax+8]
		cmp	eax, 1
		jz	short loc_6ED7A79B
		mov	ecx, [ebp-0A0h]
		mov	[esp], ecx
		mov	dword ptr [ebp-98h], 0Ah
		call	sub_6ED929C0

loc_6ED7A79B:				; CODE XREF: .text:6ED7A781j
		lea	eax, [ebp-34h]
		mov	[esp+8], eax
		lea	eax, [ebp-18h]
		mov	[esp+4], eax
		mov	eax, [ebp-0A0h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0Ah
		call	sub_6ED98330
		mov	[ebp-0C4h], eax
		mov	ecx, [ebp+8]
		mov	edx, [eax]
		mov	[ebp-0B0h], edx
		cmp	edx, [ecx+54h]
		jz	loc_6ED7B105
		lea	eax, [ebp-44h]
		mov	[esp+4], eax
		mov	eax, [ebp-0B0h]
		add	eax, 0Ch
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0Ah
		call	ds:_ZN7QStringaSERKS_
		mov	ecx, [ebp-0B0h]
		movzx	edx, byte ptr [ebp-40h]
		movzx	eax, byte ptr [ecx+10h]
		and	edx, 1
		and	eax, 0FFFFFFFEh
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, byte ptr [ebp-40h]
		and	eax, 0FFFFFFFDh
		and	edx, 2
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, byte ptr [ebp-40h]
		and	eax, 0FFFFFFFBh
		and	edx, 4
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, byte ptr [ebp-40h]
		and	eax, 0FFFFFFF7h
		and	edx, 8
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, byte ptr [ebp-40h]
		and	eax, 0FFFFFFEFh
		and	edx, 10h
		or	eax, edx
		mov	[ecx+10h], al

loc_6ED7A853:				; CODE XREF: .text:6ED7B1C5j
		mov	eax, [ebp-18h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7AE50

loc_6ED7A864:				; CODE XREF: .text:6ED7AE66j
		mov	eax, [ebp-44h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7AE30

loc_6ED7A875:				; CODE XREF: .text:6ED7AE46j
		mov	eax, [ebp-14h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7AE10

loc_6ED7A886:				; CODE XREF: .text:6ED7AE26j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_6EDA1CA7 ; "&"
		mov	dword ptr [ebp-98h], 10h
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp-1Ch], eax
		mov	[ebp-4Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		movzx	eax, byte ptr [ebp-48h]
		and	eax, 0FFFFFFECh
		or	eax, 0Ch
		mov	[ebp-48h], al
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aAmp_2 ; "amp"
		mov	dword ptr [ebp-98h], 8
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+8]
		mov	[ebp-20h], eax
		mov	eax, [edx+54h]
		mov	eax, [eax+8]
		cmp	eax, 1
		jz	short loc_6ED7A906
		mov	ecx, [ebp-0A0h]
		mov	[esp], ecx
		mov	dword ptr [ebp-98h], 7
		call	sub_6ED929C0

loc_6ED7A906:				; CODE XREF: .text:6ED7A8ECj
		lea	eax, [ebp-34h]
		mov	[esp+8], eax
		lea	eax, [ebp-20h]
		mov	[esp+4], eax
		mov	eax, [ebp-0A0h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 7
		call	sub_6ED98330
		mov	[ebp-0C0h], eax
		mov	ecx, [ebp+8]
		mov	edx, [eax]
		mov	[ebp-0ACh], edx
		cmp	edx, [ecx+54h]
		jz	loc_6ED7B040
		lea	eax, [ebp-4Ch]
		mov	[esp+4], eax
		mov	eax, [ebp-0ACh]
		add	eax, 0Ch
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 7
		call	ds:_ZN7QStringaSERKS_
		mov	ecx, [ebp-0ACh]
		movzx	edx, byte ptr [ebp-48h]
		movzx	eax, byte ptr [ecx+10h]
		and	edx, 1
		and	eax, 0FFFFFFFEh
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, byte ptr [ebp-48h]
		and	eax, 0FFFFFFFDh
		and	edx, 2
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, byte ptr [ebp-48h]
		and	eax, 0FFFFFFFBh
		and	edx, 4
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, byte ptr [ebp-48h]
		and	eax, 0FFFFFFF7h
		and	edx, 8
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, byte ptr [ebp-48h]
		and	eax, 0FFFFFFEFh
		and	edx, 10h
		or	eax, edx
		mov	[ecx+10h], al

loc_6ED7A9BE:				; CODE XREF: .text:6ED7B100j
		mov	eax, [ebp-20h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7ADF0

loc_6ED7A9CF:				; CODE XREF: .text:6ED7AE06j
		mov	eax, [ebp-4Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7ADD0

loc_6ED7A9E0:				; CODE XREF: .text:6ED7ADE6j
		mov	eax, [ebp-1Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7ADB0

loc_6ED7A9F1:				; CODE XREF: .text:6ED7ADC6j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_6EDA1CE9 ; "'"
		mov	dword ptr [ebp-98h], 10h
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp-24h], eax
		mov	[ebp-54h], eax
		lock inc dword ptr [eax]
		setnz	dl
		movzx	eax, byte ptr [ebp-50h]
		and	eax, 0FFFFFFECh
		or	eax, 0Ch
		mov	[ebp-50h], al
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aApos_1	; "apos"
		mov	dword ptr [ebp-98h], 5
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+8]
		mov	[ebp-28h], eax
		mov	eax, [edx+54h]
		mov	eax, [eax+8]
		cmp	eax, 1
		jz	short loc_6ED7AA71
		mov	ecx, [ebp-0A0h]
		mov	[esp], ecx
		mov	dword ptr [ebp-98h], 4
		call	sub_6ED929C0

loc_6ED7AA71:				; CODE XREF: .text:6ED7AA57j
		lea	eax, [ebp-34h]
		mov	[esp+8], eax
		lea	eax, [ebp-28h]
		mov	[esp+4], eax
		mov	eax, [ebp-0A0h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 4
		call	sub_6ED98330
		mov	[ebp-0BCh], eax
		mov	ecx, [ebp+8]
		mov	edx, [eax]
		mov	[ebp-0A8h], edx
		cmp	edx, [ecx+54h]
		jz	loc_6ED7AF75
		lea	eax, [ebp-54h]
		mov	[esp+4], eax
		mov	eax, [ebp-0A8h]
		add	eax, 0Ch
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 4
		call	ds:_ZN7QStringaSERKS_
		mov	ecx, [ebp-0A8h]
		movzx	edx, byte ptr [ebp-50h]
		movzx	eax, byte ptr [ecx+10h]
		and	edx, 1
		and	eax, 0FFFFFFFEh
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, byte ptr [ebp-50h]
		and	eax, 0FFFFFFFDh
		and	edx, 2
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, byte ptr [ebp-50h]
		and	eax, 0FFFFFFFBh
		and	edx, 4
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, byte ptr [ebp-50h]
		and	eax, 0FFFFFFF7h
		and	edx, 8
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, byte ptr [ebp-50h]
		and	eax, 0FFFFFFEFh
		and	edx, 10h
		or	eax, edx
		mov	[ecx+10h], al

loc_6ED7AB29:				; CODE XREF: .text:6ED7B035j
		mov	eax, [ebp-28h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7AD90

loc_6ED7AB3A:				; CODE XREF: .text:6ED7ADA6j
		mov	eax, [ebp-54h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7AD70

loc_6ED7AB4B:				; CODE XREF: .text:6ED7AD86j
		mov	eax, [ebp-24h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7AD50

loc_6ED7AB5C:				; CODE XREF: .text:6ED7AD66j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	byte_6EDA1C41
		mov	dword ptr [ebp-98h], 10h
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp-2Ch], eax
		mov	[ebp-5Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		movzx	eax, byte ptr [ebp-58h]
		and	eax, 0FFFFFFECh
		or	eax, 0Ch
		mov	[ebp-58h], al
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aQuot_3	; "quot"
		mov	dword ptr [ebp-98h], 2
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+8]
		mov	[ebp-30h], eax
		mov	eax, [edx+54h]
		mov	eax, [eax+8]
		cmp	eax, 1
		jz	short loc_6ED7ABDC
		mov	ecx, [ebp-0A0h]
		mov	[esp], ecx
		mov	dword ptr [ebp-98h], 1
		call	sub_6ED929C0

loc_6ED7ABDC:				; CODE XREF: .text:6ED7ABC2j
		lea	eax, [ebp-34h]
		mov	[esp+8], eax
		lea	eax, [ebp-30h]
		mov	[esp+4], eax
		mov	eax, [ebp-0A0h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 1
		call	sub_6ED98330
		mov	[ebp-0B8h], eax
		mov	ecx, [ebp+8]
		mov	edx, [eax]
		mov	[ebp-0A4h], edx
		cmp	edx, [ecx+54h]
		jz	loc_6ED7AEB0
		lea	eax, [ebp-5Ch]
		mov	[esp+4], eax
		mov	eax, [ebp-0A4h]
		add	eax, 0Ch
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 1
		call	ds:_ZN7QStringaSERKS_
		mov	ecx, [ebp-0A4h]
		movzx	edx, byte ptr [ebp-58h]
		movzx	eax, byte ptr [ecx+10h]
		and	edx, 1
		and	eax, 0FFFFFFFEh
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, byte ptr [ebp-58h]
		and	eax, 0FFFFFFFDh
		and	edx, 2
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, byte ptr [ebp-58h]
		and	eax, 0FFFFFFFBh
		and	edx, 4
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, byte ptr [ebp-58h]
		and	eax, 0FFFFFFF7h
		and	edx, 8
		or	eax, edx
		mov	[ecx+10h], al
		movzx	edx, byte ptr [ebp-58h]
		and	eax, 0FFFFFFEFh
		and	edx, 10h
		or	eax, edx
		mov	[ecx+10h], al

loc_6ED7AC94:				; CODE XREF: .text:6ED7AF70j
		mov	eax, [ebp-30h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7AD30

loc_6ED7ACA5:				; CODE XREF: .text:6ED7AD46j
		mov	eax, [ebp-5Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED7AD16

loc_6ED7ACB2:				; CODE XREF: .text:6ED7AD2Cj
		mov	eax, [ebp-2Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED7ACF0
		lea	eax, [ebp-9Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7ACD0:				; CODE XREF: .text:6ED7A6F3j
		mov	eax, [ebp-10h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0Eh
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7A6F9
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7ACF0:				; CODE XREF: .text:6ED7ACBDj
		mov	eax, [ebp-2Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 10h
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp-9Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED7AD16:				; CODE XREF: .text:6ED7ACB0j
		mov	eax, [ebp-5Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 3
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED7ACB2
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7AD30:				; CODE XREF: .text:6ED7AC9Fj
		mov	eax, [ebp-30h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 2
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7ACA5
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7AD50:				; CODE XREF: .text:6ED7AB56j
		mov	eax, [ebp-24h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 10h
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7AB5C
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7AD70:				; CODE XREF: .text:6ED7AB45j
		mov	eax, [ebp-54h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 6
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7AB4B
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7AD90:				; CODE XREF: .text:6ED7AB34j
		mov	eax, [ebp-28h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 5
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7AB3A
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7ADB0:				; CODE XREF: .text:6ED7A9EBj
		mov	eax, [ebp-1Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 10h
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7A9F1
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7ADD0:				; CODE XREF: .text:6ED7A9DAj
		mov	eax, [ebp-4Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 9
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7A9E0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7ADF0:				; CODE XREF: .text:6ED7A9C9j
		mov	eax, [ebp-20h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 8
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7A9CF
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7AE10:				; CODE XREF: .text:6ED7A880j
		mov	eax, [ebp-14h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 10h
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7A886
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7AE30:				; CODE XREF: .text:6ED7A86Fj
		mov	eax, [ebp-44h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0Ch
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7A875
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7AE50:				; CODE XREF: .text:6ED7A85Ej
		mov	eax, [ebp-18h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0Bh
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7A864
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7AE70:				; CODE XREF: .text:6ED7A715j
		mov	eax, [ebp-0Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 10h
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7A71B
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7AE90:				; CODE XREF: .text:6ED7A704j
		mov	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0Fh
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7A70A
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7AEB0:				; CODE XREF: .text:6ED7AC16j
		mov	eax, [edx+0Ch]
		cmp	eax, [edx+18h]
		jge	loc_6ED7B3C0

loc_6ED7AEBC:				; CODE XREF: .text:6ED7B400j
		mov	eax, [ebp-34h]
		mov	[ebp-0CCh], eax
		mov	dword ptr [esp+4], 4
		mov	edx, [ebp+8]
		mov	eax, [edx+54h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 1
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		jz	short loc_6ED7AF51
		mov	edx, [ebp-30h]
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp-5Ch]
		mov	[eax+0Ch], edx
		lock inc dword ptr [edx]
		setnz	cl
		movzx	ecx, byte ptr [ebp-58h]
		movzx	edx, byte ptr [eax+10h]
		and	ecx, 1
		and	edx, 0FFFFFFFEh
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, byte ptr [ebp-58h]
		and	edx, 0FFFFFFFDh
		and	ecx, 2
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, byte ptr [ebp-58h]
		and	edx, 0FFFFFFFBh
		and	ecx, 4
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, byte ptr [ebp-58h]
		and	edx, 0FFFFFFF7h
		and	ecx, 8
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, byte ptr [ebp-58h]
		and	edx, 0FFFFFFEFh
		and	ecx, 10h
		or	edx, ecx
		mov	[eax+10h], dl

loc_6ED7AF51:				; CODE XREF: .text:6ED7AEE8j
		mov	ecx, [ebp-0CCh]
		mov	[eax+4], ecx
		mov	ecx, [ebp-0B8h]
		mov	edx, [ecx]
		mov	[eax], edx
		mov	[ecx], eax
		mov	edx, [ebp+8]
		mov	eax, [edx+54h]
		add	dword ptr [eax+0Ch], 1
		jmp	loc_6ED7AC94
; ---------------------------------------------------------------------------

loc_6ED7AF75:				; CODE XREF: .text:6ED7AAABj
		mov	eax, [edx+0Ch]
		cmp	eax, [edx+18h]
		jge	loc_6ED7B375

loc_6ED7AF81:				; CODE XREF: .text:6ED7B3B5j
		mov	eax, [ebp-34h]
		mov	[ebp-0D0h], eax
		mov	dword ptr [esp+4], 4
		mov	edx, [ebp+8]
		mov	eax, [edx+54h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 4
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		jz	short loc_6ED7B016
		mov	edx, [ebp-28h]
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp-54h]
		mov	[eax+0Ch], edx
		lock inc dword ptr [edx]
		setnz	cl
		movzx	ecx, byte ptr [ebp-50h]
		movzx	edx, byte ptr [eax+10h]
		and	ecx, 1
		and	edx, 0FFFFFFFEh
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, byte ptr [ebp-50h]
		and	edx, 0FFFFFFFDh
		and	ecx, 2
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, byte ptr [ebp-50h]
		and	edx, 0FFFFFFFBh
		and	ecx, 4
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, byte ptr [ebp-50h]
		and	edx, 0FFFFFFF7h
		and	ecx, 8
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, byte ptr [ebp-50h]
		and	edx, 0FFFFFFEFh
		and	ecx, 10h
		or	edx, ecx
		mov	[eax+10h], dl

loc_6ED7B016:				; CODE XREF: .text:6ED7AFADj
		mov	ecx, [ebp-0D0h]
		mov	[eax+4], ecx
		mov	ecx, [ebp-0BCh]
		mov	edx, [ecx]
		mov	[eax], edx
		mov	[ecx], eax
		mov	edx, [ebp+8]
		mov	eax, [edx+54h]
		add	dword ptr [eax+0Ch], 1
		jmp	loc_6ED7AB29
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7B040:				; CODE XREF: .text:6ED7A940j
		mov	eax, [edx+0Ch]
		cmp	eax, [edx+18h]
		jge	loc_6ED7B330

loc_6ED7B04C:				; CODE XREF: .text:6ED7B370j
		mov	eax, [ebp-34h]
		mov	[ebp-0D4h], eax
		mov	dword ptr [esp+4], 4
		mov	edx, [ebp+8]
		mov	eax, [edx+54h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 7
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		jz	short loc_6ED7B0E1
		mov	edx, [ebp-20h]
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp-4Ch]
		mov	[eax+0Ch], edx
		lock inc dword ptr [edx]
		setnz	cl
		movzx	ecx, byte ptr [ebp-48h]
		movzx	edx, byte ptr [eax+10h]
		and	ecx, 1
		and	edx, 0FFFFFFFEh
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, byte ptr [ebp-48h]
		and	edx, 0FFFFFFFDh
		and	ecx, 2
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, byte ptr [ebp-48h]
		and	edx, 0FFFFFFFBh
		and	ecx, 4
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, byte ptr [ebp-48h]
		and	edx, 0FFFFFFF7h
		and	ecx, 8
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, byte ptr [ebp-48h]
		and	edx, 0FFFFFFEFh
		and	ecx, 10h
		or	edx, ecx
		mov	[eax+10h], dl

loc_6ED7B0E1:				; CODE XREF: .text:6ED7B078j
		mov	ecx, [ebp-0D4h]
		mov	[eax+4], ecx
		mov	ecx, [ebp-0C0h]
		mov	edx, [ecx]
		mov	[eax], edx
		mov	[ecx], eax
		mov	edx, [ebp+8]
		mov	eax, [edx+54h]
		add	dword ptr [eax+0Ch], 1
		jmp	loc_6ED7A9BE
; ---------------------------------------------------------------------------

loc_6ED7B105:				; CODE XREF: .text:6ED7A7D5j
		mov	eax, [edx+0Ch]
		cmp	eax, [edx+18h]
		jge	loc_6ED7B2E5

loc_6ED7B111:				; CODE XREF: .text:6ED7B325j
		mov	eax, [ebp-34h]
		mov	[ebp-0D8h], eax
		mov	dword ptr [esp+4], 4
		mov	edx, [ebp+8]
		mov	eax, [edx+54h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0Ah
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		jz	short loc_6ED7B1A6
		mov	edx, [ebp-18h]
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp-44h]
		mov	[eax+0Ch], edx
		lock inc dword ptr [edx]
		setnz	cl
		movzx	ecx, byte ptr [ebp-40h]
		movzx	edx, byte ptr [eax+10h]
		and	ecx, 1
		and	edx, 0FFFFFFFEh
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, byte ptr [ebp-40h]
		and	edx, 0FFFFFFFDh
		and	ecx, 2
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, byte ptr [ebp-40h]
		and	edx, 0FFFFFFFBh
		and	ecx, 4
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, byte ptr [ebp-40h]
		and	edx, 0FFFFFFF7h
		and	ecx, 8
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, byte ptr [ebp-40h]
		and	edx, 0FFFFFFEFh
		and	ecx, 10h
		or	edx, ecx
		mov	[eax+10h], dl

loc_6ED7B1A6:				; CODE XREF: .text:6ED7B13Dj
		mov	ecx, [ebp-0D8h]
		mov	[eax+4], ecx
		mov	ecx, [ebp-0C4h]
		mov	edx, [ecx]
		mov	[eax], edx
		mov	[ecx], eax
		mov	edx, [ebp+8]
		mov	eax, [edx+54h]
		add	dword ptr [eax+0Ch], 1
		jmp	loc_6ED7A853
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7B1D0:				; CODE XREF: .text:6ED7A66Aj
		mov	eax, [edx+0Ch]
		cmp	eax, [edx+18h]
		jge	loc_6ED7B2A0

loc_6ED7B1DC:				; CODE XREF: .text:6ED7B2E0j
		mov	eax, [ebp-34h]
		mov	[ebp-0DCh], eax
		mov	dword ptr [esp+4], 4
		mov	edx, [ebp+8]
		mov	eax, [edx+54h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0Dh
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		jz	short loc_6ED7B271
		mov	edx, [ebp-10h]
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp-3Ch]
		mov	[eax+0Ch], edx
		lock inc dword ptr [edx]
		setnz	cl
		movzx	ecx, byte ptr [ebp-38h]
		movzx	edx, byte ptr [eax+10h]
		and	ecx, 1
		and	edx, 0FFFFFFFEh
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, byte ptr [ebp-38h]
		and	edx, 0FFFFFFFDh
		and	ecx, 2
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, byte ptr [ebp-38h]
		and	edx, 0FFFFFFFBh
		and	ecx, 4
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, byte ptr [ebp-38h]
		and	edx, 0FFFFFFF7h
		and	ecx, 8
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, byte ptr [ebp-38h]
		and	edx, 0FFFFFFEFh
		and	ecx, 10h
		or	edx, ecx
		mov	[eax+10h], dl

loc_6ED7B271:				; CODE XREF: .text:6ED7B208j
		mov	ecx, [ebp-0DCh]
		mov	[eax+4], ecx
		mov	ecx, [ebp-0C8h]
		mov	edx, [ecx]
		mov	[eax], edx
		mov	[ecx], eax
		mov	edx, [ebp+8]
		mov	eax, [edx+54h]
		add	dword ptr [eax+0Ch], 1
		jmp	loc_6ED7A6E8
; ---------------------------------------------------------------------------

loc_6ED7B295:				; CODE XREF: .text:6ED7A589j
		call	ds:_Z9qBadAllocv
		jmp	loc_6ED7A58F
; ---------------------------------------------------------------------------

loc_6ED7B2A0:				; CODE XREF: .text:6ED7B1D6j
		movsx	eax, word ptr [edx+16h]
		mov	[esp], edx
		add	eax, 1
		mov	[esp+4], eax
		call	ds:_ZN9QHashData6rehashEi
		lea	eax, [ebp-34h]
		mov	[esp+8], eax
		lea	eax, [ebp-10h]
		mov	[esp+4], eax
		mov	ecx, [ebp-0A0h]
		mov	[esp], ecx
		mov	dword ptr [ebp-98h], 0Dh
		call	sub_6ED98330
		mov	[ebp-0C8h], eax
		jmp	loc_6ED7B1DC
; ---------------------------------------------------------------------------

loc_6ED7B2E5:				; CODE XREF: .text:6ED7B10Bj
		movsx	eax, word ptr [edx+16h]
		mov	[esp], edx
		add	eax, 1
		mov	[esp+4], eax
		call	ds:_ZN9QHashData6rehashEi
		lea	eax, [ebp-34h]
		mov	[esp+8], eax
		lea	eax, [ebp-18h]
		mov	[esp+4], eax
		mov	eax, [ebp-0A0h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0Ah
		call	sub_6ED98330
		mov	[ebp-0C4h], eax
		jmp	loc_6ED7B111
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7B330:				; CODE XREF: .text:6ED7B046j
		movsx	eax, word ptr [edx+16h]
		mov	[esp], edx
		add	eax, 1
		mov	[esp+4], eax
		call	ds:_ZN9QHashData6rehashEi
		lea	eax, [ebp-34h]
		mov	[esp+8], eax
		lea	eax, [ebp-20h]
		mov	[esp+4], eax
		mov	edx, [ebp-0A0h]
		mov	[esp], edx
		mov	dword ptr [ebp-98h], 7
		call	sub_6ED98330
		mov	[ebp-0C0h], eax
		jmp	loc_6ED7B04C
; ---------------------------------------------------------------------------

loc_6ED7B375:				; CODE XREF: .text:6ED7AF7Bj
		movsx	eax, word ptr [edx+16h]
		mov	[esp], edx
		add	eax, 1
		mov	[esp+4], eax
		call	ds:_ZN9QHashData6rehashEi
		lea	eax, [ebp-34h]
		mov	[esp+8], eax
		lea	eax, [ebp-28h]
		mov	[esp+4], eax
		mov	ecx, [ebp-0A0h]
		mov	[esp], ecx
		mov	dword ptr [ebp-98h], 4
		call	sub_6ED98330
		mov	[ebp-0BCh], eax
		jmp	loc_6ED7AF81
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7B3C0:				; CODE XREF: .text:6ED7AEB6j
		movsx	eax, word ptr [edx+16h]
		mov	[esp], edx
		add	eax, 1
		mov	[esp+4], eax
		call	ds:_ZN9QHashData6rehashEi
		lea	eax, [ebp-34h]
		mov	[esp+8], eax
		lea	eax, [ebp-30h]
		mov	[esp+4], eax
		mov	eax, [ebp-0A0h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 1
		call	sub_6ED98330
		mov	[ebp-0B8h], eax
		jmp	loc_6ED7AEBC
; ---------------------------------------------------------------------------

loc_6ED7B405:				; CODE XREF: .text:6ED7A549j
		call	ds:_Z9qBadAllocv
		jmp	loc_6ED7A54F
; ---------------------------------------------------------------------------

loc_6ED7B410:				; DATA XREF: .text:6ED7A1E6o
		add	ebp, 8
		mov	eax, [ebp-98h]
		mov	edx, [ebp-94h]
		cmp	eax, 1
		mov	[ebp-0E4h], edx
		jz	loc_6ED7B4D0
		cmp	eax, 2
		jz	loc_6ED7B4E5
		cmp	eax, 3
		jz	loc_6ED7B7E7
		cmp	eax, 4
		jz	loc_6ED7B7FC
		cmp	eax, 5
		lea	esi, [esi+0]
		jz	loc_6ED7B811
		cmp	eax, 6
		jz	loc_6ED7B7A3
		cmp	eax, 7
		jz	loc_6ED7B7B8
		cmp	eax, 8
		nop
		lea	esi, [esi+0]
		jz	loc_6ED7B7CD
		cmp	eax, 9
		jz	loc_6ED7B75F
		cmp	eax, 0Ah
		jz	loc_6ED7B774
		cmp	eax, 0Bh
		nop
		lea	esi, [esi+0]
		jz	loc_6ED7B789
		cmp	eax, 0Ch
		jz	loc_6ED7B71B
		cmp	eax, 0Dh
		jz	loc_6ED7B730
		cmp	eax, 0Eh
		nop
		lea	esi, [esi+0]
		jz	loc_6ED7B745
		cmp	eax, 0Fh
		jz	short loc_6ED7B4FA
		lea	eax, [ebp-30h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560

loc_6ED7B4D0:				; CODE XREF: .text:6ED7B428j
		lea	eax, [ebp-5Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560

loc_6ED7B4E5:				; CODE XREF: .text:6ED7B431j
		lea	eax, [ebp-2Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560

loc_6ED7B4FA:				; CODE XREF: .text:6ED7B4B9j
					; .text:6ED7B75Aj ...
		mov	edx, [ebp+8]
		mov	ecx, [ebp-0E4h]
		mov	eax, [edx+19Ch]
		mov	[ebp-0E0h], ecx
		test	eax, eax
		jz	short loc_6ED7B526
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	ds:_Z5qFreePv

loc_6ED7B526:				; CODE XREF: .text:6ED7B511j
		mov	eax, [ebp+8]
		add	eax, 198h
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560
		mov	eax, [ebp+8]
		add	eax, 0ECh
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED95060
		mov	ecx, [ebp+8]
		mov	eax, [ecx+0E0h]
		test	eax, eax
		jz	short loc_6ED7B57A
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	ds:_Z5qFreePv

loc_6ED7B57A:				; CODE XREF: .text:6ED7B565j
		mov	eax, [ebp+8]
		add	eax, 0DCh
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED958D0
		mov	eax, [ebp+8]
		add	eax, 0D8h
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED954B0
		mov	edx, [ebp+8]
		mov	eax, [edx+0CCh]
		test	eax, eax
		jz	short loc_6ED7B5CE
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	ds:_Z5qFreePv

loc_6ED7B5CE:				; CODE XREF: .text:6ED7B5B9j
		mov	ecx, [ebp+8]
		mov	eax, [ecx+0C0h]
		test	eax, eax
		jz	short loc_6ED7B5EE
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	ds:_Z5qFreePv

loc_6ED7B5EE:				; CODE XREF: .text:6ED7B5D9j
		mov	eax, [ebp+8]
		add	eax, 0A8h
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED91130
		mov	eax, [ebp+8]
		add	eax, 88h
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560
		mov	eax, [ebp+8]
		add	eax, 84h
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560
		mov	edx, [ebp+8]
		mov	eax, [edx+5Ch]
		test	eax, eax
		jz	short loc_6ED7B659
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	ds:_Z5qFreePv

loc_6ED7B659:				; CODE XREF: .text:6ED7B644j
		mov	eax, [ebp+8]
		add	eax, 58h
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED92AB0
		mov	eax, [ebp+8]
		add	eax, 54h
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED92AB0
		mov	ecx, [ebp+8]
		mov	eax, [ecx+48h]
		test	eax, eax
		jz	short loc_6ED7B6A6
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	ds:_Z5qFreePv

loc_6ED7B6A6:				; CODE XREF: .text:6ED7B691j
		mov	eax, [ebp+8]
		add	eax, 40h
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560
		mov	eax, [ebp+8]
		add	eax, 2Ch
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED90150
		mov	eax, [ebp+8]
		add	eax, 28h
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED90150
		mov	eax, [ebp+8]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED91D00
		mov	edx, [ebp-0E0h]
		mov	[esp], edx
		mov	dword ptr [ebp-98h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED7B71B:				; CODE XREF: .text:6ED7B499j
		lea	eax, [ebp-10h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560

loc_6ED7B730:				; CODE XREF: .text:6ED7B4A2j
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560

loc_6ED7B745:				; CODE XREF: .text:6ED7B4B0j
		lea	eax, [ebp-0Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560
		jmp	loc_6ED7B4FA
; ---------------------------------------------------------------------------

loc_6ED7B75F:				; CODE XREF: .text:6ED7B479j
		lea	eax, [ebp-18h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560

loc_6ED7B774:				; CODE XREF: .text:6ED7B482j
		lea	eax, [ebp-44h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560

loc_6ED7B789:				; CODE XREF: .text:6ED7B490j
		lea	eax, [ebp-14h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560
		jmp	loc_6ED7B4FA
; ---------------------------------------------------------------------------

loc_6ED7B7A3:				; CODE XREF: .text:6ED7B459j
		lea	eax, [ebp-20h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560

loc_6ED7B7B8:				; CODE XREF: .text:6ED7B462j
		lea	eax, [ebp-4Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560

loc_6ED7B7CD:				; CODE XREF: .text:6ED7B470j
		lea	eax, [ebp-1Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560
		jmp	loc_6ED7B4FA
; ---------------------------------------------------------------------------

loc_6ED7B7E7:				; CODE XREF: .text:6ED7B43Aj
		lea	eax, [ebp-28h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560

loc_6ED7B7FC:				; CODE XREF: .text:6ED7B443j
		lea	eax, [ebp-54h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560

loc_6ED7B811:				; CODE XREF: .text:6ED7B450j
		lea	eax, [ebp-24h]
		mov	[esp], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560
		jmp	loc_6ED7B4FA
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED7B830	proc near		; CODE XREF: sub_6ED83560+2BBEp

var_70		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_9		= byte ptr -9
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_4C], eax
		lea	eax, [ebp+var_6C]
		mov	[ebp+var_54], offset sub_6ED997C0
		mov	[ebp+var_50], offset dword_6ED9ABD8
		mov	[ebp+var_48], offset sub_6ED7BA0B
		mov	[ebp+var_44], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_9], 1
		add	eax, [edx+188h]
		sub	eax, 1
		shl	eax, 4
		add	eax, [edx+190h]
		cmp	word ptr [eax+0Ch], 78h
		jz	loc_6ED7B980
		mov	ecx, [eax+8]
		mov	edx, [eax+4]
		sub	edx, ecx
		add	ecx, [eax]
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_24], edx
		lea	edx, [ebp+var_2C]
		mov	[ebp+var_28], ecx
		add	eax, 198h
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_14]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_68], 2
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_9]
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	dword ptr [esp+8], 0Ah
		mov	[esp], eax
		mov	[ebp+var_68], 1
		call	ds:_ZNK7QString6toUIntEPbi
		mov	[ebp+var_70], eax
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED7B967

loc_6ED7B8F3:				; CODE XREF: sub_6ED7B830+14Aj
					; sub_6ED7B830+1BDj ...
		mov	eax, [ebp+var_70]
		movzx	edx, [ebp+var_9]
		sub	eax, 9
		cmp	eax, 1
		jbe	short loc_6ED7B908
		cmp	[ebp+var_70], 0Dh
		jnz	short loc_6ED7B920

loc_6ED7B908:				; CODE XREF: sub_6ED7B830+D0j
					; sub_6ED7B830+FBj ...
		and	edx, 1
		jz	short loc_6ED7B950
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_70]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7B920:				; CODE XREF: sub_6ED7B830+D6j
		mov	eax, [ebp+var_70]
		sub	eax, 20h
		cmp	eax, 0D7DFh
		jbe	short loc_6ED7B908
		mov	eax, [ebp+var_70]
		sub	eax, 0E000h
		cmp	eax, 1FFDh
		jbe	short loc_6ED7B908
		mov	eax, [ebp+var_70]
		sub	eax, 10000h
		cmp	eax, 0FFFFFh
		jbe	short loc_6ED7B908
		nop
		lea	esi, [esi+0]

loc_6ED7B950:				; CODE XREF: sub_6ED7B830+DBj
		lea	eax, [ebp+var_6C]
		mov	[ebp+var_70], 0
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_70]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED7B967:				; CODE XREF: sub_6ED7B830+C1j
		mov	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_68], 2
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7B8F3
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7B980:				; CODE XREF: sub_6ED7B830+53j
		mov	ecx, [eax+8]
		mov	edx, ecx
		not	edx
		add	ecx, [eax]
		add	edx, [eax+4]
		mov	eax, [ebp+arg_0]
		add	ecx, 1
		mov	[ebp+var_18], edx
		lea	edx, [ebp+var_20]
		mov	[ebp+var_1C], ecx
		add	eax, 198h
		mov	[ebp+var_20], eax
		lea	eax, [ebp+var_10]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_68], 4
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_9]
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	dword ptr [esp+8], 10h
		mov	[esp], eax
		mov	[ebp+var_68], 3
		call	ds:_ZNK7QString6toUIntEPbi
		mov	[ebp+var_70], eax
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED7B8F3
		mov	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_68], 4
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7B8F3
sub_6ED7B830	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED7BA0B	proc near		; DATA XREF: sub_6ED7B830+20o
		add	ebp, 8
		mov	eax, [ebp-68h]
		mov	edx, [ebp-64h]
		cmp	eax, 1
		mov	[ebp-74h], edx
		jz	short loc_6ED7BA38
		cmp	eax, 2
		jz	short loc_6ED7BA4A
		cmp	eax, 3
		jz	short loc_6ED7BA38
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560

loc_6ED7BA38:				; CODE XREF: sub_6ED7BA0B+Fj
					; sub_6ED7BA0B+19j ...
		mov	eax, [ebp-74h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED7BA4A:				; CODE XREF: sub_6ED7BA0B+14j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED94560
		jmp	short loc_6ED7BA38
sub_6ED7BA0B	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED7BA60	proc near		; CODE XREF: sub_6ED83560+2D5Bp

var_F0		= dword	ptr -0F0h
var_EC		= dword	ptr -0ECh
var_E8		= dword	ptr -0E8h
var_E4		= dword	ptr -0E4h
var_E0		= dword	ptr -0E0h
var_DC		= dword	ptr -0DCh
var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_CD		= byte ptr -0CDh
var_CC		= dword	ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= byte ptr -0BCh
var_B8		= dword	ptr -0B8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= byte ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_1E		= word ptr -1Eh
var_1C		= word ptr -1Ch
var_19		= byte ptr -19h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 10Ch
		mov	[ebp+var_9C], eax
		lea	eax, [ebp+var_BC]
		mov	[ebp+var_A4], offset sub_6ED997C0
		mov	[ebp+var_A0], offset dword_6ED9ABE4
		mov	[ebp+var_98], offset sub_6ED7C3EC
		mov	[ebp+var_94], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_C0], edx
		mov	[ebp+var_24], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_28]
		mov	[ebp+var_28], offset a1_0_0 ; "1.0"
		mov	[esp], eax
		mov	[ebp+var_B8], 0Eh
		add	ecx, 168h
		mov	[ebp+var_E8], ecx
		mov	[esp+4], ecx
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_6ED7BB74

loc_6ED7BAF4:				; CODE XREF: sub_6ED7BA60+1F4j
					; sub_6ED7BA60+210j ...
		mov	edi, [ebp+var_24]
		mov	ecx, [ebp+arg_0]
		cmp	[ebp+var_C0], edi
		mov	[ebp+var_C4], edi
		mov	eax, [ecx+1A0h]
		jz	loc_6ED7BC90

loc_6ED7BB12:				; CODE XREF: sub_6ED7BA60+289j
		lea	eax, [ebp+var_24]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_B8], 0Eh
		mov	[esp], eax
		call	sub_6ED71AE0

loc_6ED7BB2E:				; CODE XREF: sub_6ED7BA60+23Bj
					; sub_6ED7BA60+2A2j
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_24]
		mov	dword ptr [edx+1A0h], 0FFFFFFFFh
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED7BB5E
		mov	eax, [ebp+var_24]
		mov	[ebp+var_B8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED7BB5E:				; CODE XREF: sub_6ED7BA60+E6j
		lea	eax, [ebp+var_BC]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED7BB74:				; CODE XREF: sub_6ED7BA60+8Ej
		mov	edi, [ebp+var_E8]
		lea	eax, [ebp+var_2C]
		mov	[esp], eax
		mov	[esp+4], edi
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_2C]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0
		mov	word ptr [esp+4], 20h
		mov	[esp], eax
		mov	[ebp+var_B8], 0Dh
		call	ds:_ZNK7QString7indexOfE5QChariN2Qt15CaseSensitivityE
		cmp	eax, 0FFFFFFFFh
		setnz	al
		mov	[ebp+var_19], al
		shl	eax, 1Fh
		sar	eax, 1Fh
		lea	edx, [ebp+var_19]
		and	edx, eax
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_F0], edx
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7BC75

loc_6ED7BBE5:				; CODE XREF: sub_6ED7BA60+22Bj
		mov	esi, [ebp+var_F0]
		test	esi, esi
		jz	loc_6ED7C39E
		lea	eax, [ebp+var_30]
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], offset aInvalidXmlVers ; "Invalid XML version string."
		mov	dword ptr [esp+4], offset aQxmlstream ;	"QXmlStream"
		mov	[esp], eax
		mov	[ebp+var_B8], 0Eh
		call	ds:_ZN16QCoreApplication9translateEPKcS1_S1_NS_8EncodingE
		sub	esp, 4
		lea	eax, [ebp+var_30]
		mov	[esp+4], eax
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		mov	[ebp+var_B8], 0Ch
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_30]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED7BAF4
		mov	eax, [ebp+var_30]
		mov	[ebp+var_B8], 0Eh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7BAF4
; ---------------------------------------------------------------------------

loc_6ED7BC75:				; CODE XREF: sub_6ED7BA60+17Fj
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_B8], 0Eh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7BBE5
; ---------------------------------------------------------------------------

loc_6ED7BC90:				; CODE XREF: sub_6ED7BA60+ACj
		add	eax, 1
		test	eax, eax
		mov	[ebp+var_D8], eax
		jle	loc_6ED7BB2E
		mov	edi, [ebp+arg_0]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_CC], 0
		add	edi, 198h
		add	eax, 28h
		add	edx, 40h
		mov	[ebp+var_DC], edi
		mov	[ebp+var_EC], eax
		mov	[ebp+var_E4], edx
		mov	[ebp+var_CD], 0
		jmp	short loc_6ED7BD08
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7BCE0:				; CODE XREF: sub_6ED7BA60+353j
					; sub_6ED7BA60+36Fj ...
		mov	ecx, [ebp+var_C4]
		cmp	[ebp+var_24], ecx
		jnz	loc_6ED7BB12
		add	[ebp+var_CC], 1
		mov	ecx, [ebp+var_D8]
		cmp	[ebp+var_CC], ecx
		jge	loc_6ED7BB2E

loc_6ED7BD08:				; CODE XREF: sub_6ED7BA60+279j
		mov	edi, [ebp+arg_0]
		mov	eax, [ebp+var_CC]
		shl	eax, 5
		add	eax, [edi+19Ch]
		mov	edi, [ebp+var_DC]
		mov	edx, [eax+8]
		mov	ecx, [eax+4]
		mov	[ebp+var_74], edi
		mov	[ebp+var_80], edi
		cmp	edx, 1
		sbb	ebx, ebx
		sub	ecx, edx
		lea	esi, [edx-1]
		not	ebx
		add	edx, [eax]
		mov	[ebp+var_6C], ecx
		mov	[ebp+var_70], edx
		mov	ecx, [eax+18h]
		mov	edx, [eax+14h]
		sub	edx, ecx
		add	ecx, [eax+10h]
		test	esi, ebx
		mov	[ebp+var_78], edx
		mov	[ebp+var_7C], ecx
		jz	short loc_6ED7BDD4

loc_6ED7BD55:				; CODE XREF: sub_6ED7BA60+55Ej
		lea	edi, [ebp+var_68]
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], offset aInvalidAttribu ; "Invalid attribute in XML declaration."
		mov	dword ptr [esp+4], offset aQxmlstream ;	"QXmlStream"
		mov	[esp], edi
		mov	[ebp+var_B8], 0Ah
		call	ds:_ZN16QCoreApplication9translateEPKcS1_S1_NS_8EncodingE
		sub	esp, 4
		lea	edx, [ebp+var_24]
		mov	[esp+4], edi
		mov	[esp], edx
		mov	[ebp+var_B8], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_68]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED7BCE0
		mov	eax, [ebp+var_68]
		mov	[ebp+var_B8], 0Ah
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7BCE0
; ---------------------------------------------------------------------------

loc_6ED7BDD4:				; CODE XREF: sub_6ED7BA60+2F3j
		lea	eax, [ebp+var_74]
		mov	[esp+4], eax
		lea	eax, [ebp+var_38]
		mov	[ebp+var_38], offset aEncoding_2 ; "encoding"
		mov	[esp], eax
		mov	[ebp+var_B8], 0Ah
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_6ED7BF98
		lea	eax, [ebp+var_3C]
		lea	edx, [ebp+var_80]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		mov	edx, [ebp+arg_0]
		sub	esp, 4
		mov	eax, [ebp+var_80]
		cmp	[ebp+var_CD], 0
		mov	[edx+174h], eax
		mov	eax, [ebp+var_7C]
		mov	[edx+178h], eax
		mov	eax, [ebp+var_78]
		mov	[edx+17Ch], eax
		jz	short loc_6ED7BEA4
		lea	eax, [ebp+var_40]
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], offset aTheStandaloneP ; "The standalone pseudo attribute must ap"...
		mov	dword ptr [esp+4], offset aQxmlstream ;	"QXmlStream"
		mov	[esp], eax
		mov	[ebp+var_B8], 9
		call	ds:_ZN16QCoreApplication9translateEPKcS1_S1_NS_8EncodingE
		sub	esp, 4
		lea	eax, [ebp+var_40]
		lea	ecx, [ebp+var_24]
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	[ebp+var_B8], 8
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_40]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7C285

loc_6ED7BEA4:				; CODE XREF: sub_6ED7BA60+3DBj
					; sub_6ED7BA60+83Bj
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_B8], 9
		call	ds:_ZN9QXmlUtils9isEncNameERK7QString
		test	al, al
		jnz	loc_6ED7C006
		lea	eax, [ebp+var_44]
		mov	[ebp+var_1C], 20h
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], offset a1IsAnInvalidEn ; "%1	is an invalid encoding name."
		mov	dword ptr [esp+4], offset aQxmlstream ;	"QXmlStream"
		mov	[esp], eax
		call	ds:_ZN16QCoreApplication9translateEPKcS1_S1_NS_8EncodingE
		sub	esp, 4
		lea	edx, [ebp+var_1C]
		mov	[esp+10h], edx
		lea	edx, [ebp+var_3C]
		lea	eax, [ebp+var_48]
		mov	[esp+8], edx
		lea	edx, [ebp+var_44]
		mov	dword ptr [esp+0Ch], 0
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_B8], 7
		call	ds:_ZNK7QString3argERKS_iRK5QChar
		sub	esp, 4
		lea	eax, [ebp+var_48]
		lea	edi, [ebp+var_24]
		mov	[esp+4], eax
		mov	[esp], edi
		mov	[ebp+var_B8], 6
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_48]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7C2C0

loc_6ED7BF5B:				; CODE XREF: sub_6ED7BA60+876j
		mov	eax, [ebp+var_44]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7C2A0

loc_6ED7BF6C:				; CODE XREF: sub_6ED7BA60+60Dj
					; sub_6ED7BA60+61Aj ...
		mov	eax, [ebp+var_3C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED7BCE0
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_B8], 0Ah
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7BCE0
; ---------------------------------------------------------------------------

loc_6ED7BF98:				; CODE XREF: sub_6ED7BA60+39Aj
		lea	eax, [ebp+var_74]
		mov	[esp+4], eax
		lea	eax, [ebp+var_58]
		mov	[ebp+var_58], offset aStandalone_0 ; "standalone"
		mov	[esp], eax
		mov	[ebp+var_B8], 0Ah
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_6ED7BD55
		lea	eax, [ebp+var_80]
		mov	[esp+4], eax
		lea	eax, [ebp+var_5C]
		mov	[ebp+var_5C], offset aYes_0 ; "yes"
		mov	[esp], eax
		mov	[ebp+var_B8], 0Ah
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_6ED7C150
		mov	ecx, [ebp+arg_0]
		or	byte ptr [ecx+180h], 8
		mov	[ebp+var_CD], 1
		jmp	loc_6ED7BCE0
; ---------------------------------------------------------------------------

loc_6ED7C006:				; CODE XREF: sub_6ED7BA60+45Cj
		lea	eax, [ebp+var_4C]
		lea	edx, [ebp+var_3C]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_B8], 9
		call	ds:_ZNK7QString8toLatin1Ev
		sub	esp, 4
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_B8], 5
		call	ds:_ZN10QTextCodec12codecForNameERK10QByteArray
		mov	[ebp+var_C8], eax
		mov	eax, [ebp+var_4C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7C192
		mov	ebx, [ebp+var_C8]
		test	ebx, ebx
		jz	loc_6ED7C1B6

loc_6ED7C061:				; CODE XREF: sub_6ED7BA60+750j
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_C8]
		cmp	ecx, [edx+70h]
		jz	loc_6ED7BF6C
		test	byte ptr [edx+181h], 8
		jnz	loc_6ED7BF6C
		mov	edi, [edx+74h]
		mov	[edx+70h], ecx
		test	edi, edi
		mov	[ebp+var_D4], edi
		jz	short loc_6ED7C0B7
		mov	[esp], edi
		mov	[ebp+var_B8], 9
		call	ds:_ZN12QTextDecoderD1Ev
		mov	[esp], edi
		call	sub_6ED988B0
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+70h]
		mov	[ebp+var_C8], eax

loc_6ED7C0B7:				; CODE XREF: sub_6ED7BA60+62Ej
		mov	edx, [ebp+var_C8]
		mov	[ebp+var_B8], 9
		mov	[esp], edx
		call	ds:_ZNK10QTextCodec11makeDecoderEv
		mov	ecx, [ebp+arg_0]
		mov	edi, [ecx+38h]
		mov	edx, [ecx+28h]
		mov	[ecx+74h], eax
		mov	[ebp+var_E0], edi
		mov	ecx, [edx]
		cmp	ecx, 1
		jz	loc_6ED7C370

loc_6ED7C0ED:				; CODE XREF: sub_6ED7BA60+918j
		mov	eax, [edx+8]
		mov	[ebp+var_B8], 9
		mov	[esp+4], eax
		mov	eax, [ebp+var_EC]
		mov	[esp], eax
		call	ds:_ZN10QByteArray7reallocEi
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+74h]
		mov	edx, [edx+28h]
		mov	ecx, [edx+0Ch]

loc_6ED7C119:				; CODE XREF: sub_6ED7BA60+91Ej
		mov	edi, [ebp+var_E0]
		mov	edx, [ebp+var_E4]
		mov	[esp+8], ecx
		mov	[esp], eax
		mov	[esp+0Ch], edi
		mov	[esp+4], edx
		mov	[ebp+var_B8], 9
		call	ds:_ZN12QTextDecoder9toUnicodeEP7QStringPKci
		jmp	loc_6ED7BF6C
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7C150:				; CODE XREF: sub_6ED7BA60+58Aj
		lea	eax, [ebp+var_80]
		mov	[esp+4], eax
		lea	eax, [ebp+var_60]
		mov	[ebp+var_60], offset aNo_0 ; "no"
		mov	[esp], eax
		mov	[ebp+var_B8], 0Ah
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_6ED7C2E0
		mov	edi, [ebp+arg_0]
		and	byte ptr [edi+180h], 0F7h
		mov	[ebp+var_CD], 1
		jmp	loc_6ED7BCE0
; ---------------------------------------------------------------------------

loc_6ED7C192:				; CODE XREF: sub_6ED7BA60+5EDj
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_B8], 9
		mov	[esp], eax
		call	ds:_Z5qFreePv
		mov	ebx, [ebp+var_C8]
		test	ebx, ebx
		jnz	loc_6ED7C061

loc_6ED7C1B6:				; CODE XREF: sub_6ED7BA60+5FBj
		lea	eax, [ebp+var_50]
		mov	[ebp+var_1E], 20h
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], offset aEncoding1IsUns ; "Encoding %1 is unsupported"
		mov	dword ptr [esp+4], offset aQxmlstream ;	"QXmlStream"
		mov	[esp], eax
		mov	[ebp+var_B8], 9
		call	ds:_ZN16QCoreApplication9translateEPKcS1_S1_NS_8EncodingE
		sub	esp, 4
		lea	eax, [ebp+var_1E]
		mov	[esp+10h], eax
		lea	eax, [ebp+var_3C]
		lea	edx, [ebp+var_54]
		mov	[esp+8], eax
		lea	eax, [ebp+var_50]
		mov	dword ptr [esp+0Ch], 0
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_B8], 4
		call	ds:_ZNK7QString3argERKS_iRK5QChar
		sub	esp, 4
		lea	eax, [ebp+var_54]
		mov	[esp+4], eax
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		mov	[ebp+var_B8], 3
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_54]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7C383

loc_6ED7C259:				; CODE XREF: sub_6ED7BA60+939j
		mov	eax, [ebp+var_50]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED7BF6C
		mov	eax, [ebp+var_50]
		mov	[ebp+var_B8], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7BF6C
; ---------------------------------------------------------------------------

loc_6ED7C285:				; CODE XREF: sub_6ED7BA60+43Ej
		mov	eax, [ebp+var_40]
		mov	[ebp+var_B8], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7BEA4
; ---------------------------------------------------------------------------

loc_6ED7C2A0:				; CODE XREF: sub_6ED7BA60+506j
		mov	eax, [ebp+var_44]
		mov	[ebp+var_B8], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7BF6C
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7C2C0:				; CODE XREF: sub_6ED7BA60+4F5j
		mov	eax, [ebp+var_48]
		mov	[ebp+var_B8], 7
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7BF5B
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7C2E0:				; CODE XREF: sub_6ED7BA60+716j
		lea	eax, [ebp+var_64]
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], offset aStandaloneAcce ; "Standalone	accepts	only yes or no."
		mov	dword ptr [esp+4], offset aQxmlstream ;	"QXmlStream"
		mov	[esp], eax
		mov	[ebp+var_B8], 0Ah
		call	ds:_ZN16QCoreApplication9translateEPKcS1_S1_NS_8EncodingE
		sub	esp, 4
		lea	eax, [ebp+var_64]
		mov	[esp+4], eax
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		mov	[ebp+var_B8], 2
		call	ds:_ZN7QStringaSERKS_
		mov	edx, [ebp+var_64]
		lock dec dword ptr [edx]
		setnz	al
		test	al, al
		mov	[ebp+var_CD], 1
		jnz	loc_6ED7BCE0
		mov	eax, [ebp+var_64]
		mov	[ebp+var_B8], 0Ah
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_CD], 1
		jmp	loc_6ED7BCE0
; ---------------------------------------------------------------------------

loc_6ED7C370:				; CODE XREF: sub_6ED7BA60+687j
		mov	ecx, [edx+0Ch]
		lea	ebx, [edx+10h]
		cmp	ecx, ebx
		jnz	loc_6ED7C0ED
		jmp	loc_6ED7C119
; ---------------------------------------------------------------------------

loc_6ED7C383:				; CODE XREF: sub_6ED7BA60+7F3j
		mov	eax, [ebp+var_54]
		mov	[ebp+var_B8], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7C259
; ---------------------------------------------------------------------------

loc_6ED7C39E:				; CODE XREF: sub_6ED7BA60+18Dj
		lea	eax, [ebp+var_34]
		mov	edx, offset aUnsupportedXml ; "Unsupported XML version."
		mov	[ebp+var_B8], 0Eh
		call	sub_6ED71920
		lea	eax, [ebp+var_34]
		mov	[esp+4], eax
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		mov	[ebp+var_B8], 0Bh
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp+var_34]
		mov	[esp], eax
		mov	[ebp+var_B8], 0Eh
		call	sub_6ED94560
		jmp	loc_6ED7BAF4
sub_6ED7BA60	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED7C3EC	proc near		; DATA XREF: sub_6ED7BA60+2Fo
		add	ebp, 18h
		mov	eax, [ebp-0B8h]
		mov	edx, [ebp-0B4h]
		cmp	eax, 1
		mov	[ebp-0F4h], edx
		jz	loc_6ED7C554
		cmp	eax, 2
		jz	loc_6ED7C525
		cmp	eax, 3
		jz	loc_6ED7C53A
		cmp	eax, 4
		nop
		jz	loc_6ED7C50E
		cmp	eax, 5
		jz	loc_6ED7C4E2
		cmp	eax, 6
		jz	loc_6ED7C4F7
		cmp	eax, 7
		nop
		lea	esi, [esi+0]
		jz	short loc_6ED7C4B6
		cmp	eax, 8
		jz	loc_6ED7C4CB
		cmp	eax, 9
		xchg	ax, ax
		jz	short loc_6ED7C489
		cmp	eax, 0Ah
		jz	loc_6ED7C5A2
		cmp	eax, 0Bh
		xchg	ax, ax
		jz	loc_6ED7C588
		cmp	eax, 0Ch
		jz	loc_6ED7C56E
		cmp	eax, 0Dh
		jz	short loc_6ED7C489
		lea	eax, [ebp-68h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0B8h], 0
		call	sub_6ED94560

loc_6ED7C489:				; CODE XREF: sub_6ED7C3EC+64j
					; sub_6ED7C3EC+86j ...
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0B8h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-0F4h]
		mov	dword ptr [ebp-0B8h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED7C4B6:				; CODE XREF: sub_6ED7C3EC+54j
		lea	eax, [ebp-40h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0B8h], 0
		call	sub_6ED94560

loc_6ED7C4CB:				; CODE XREF: sub_6ED7C3EC+59j
					; sub_6ED7C3EC+120j ...
		lea	eax, [ebp-3Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0B8h], 0
		call	sub_6ED94560
		jmp	short loc_6ED7C489
; ---------------------------------------------------------------------------

loc_6ED7C4E2:				; CODE XREF: sub_6ED7C3EC+3Dj
		lea	eax, [ebp-48h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0B8h], 0
		call	sub_6ED94560

loc_6ED7C4F7:				; CODE XREF: sub_6ED7C3EC+46j
		lea	eax, [ebp-44h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0B8h], 0
		call	sub_6ED94560
		jmp	short loc_6ED7C4CB
; ---------------------------------------------------------------------------

loc_6ED7C50E:				; CODE XREF: sub_6ED7C3EC+34j
		lea	eax, [ebp-4Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0B8h], 0
		call	sub_6ED90150
		jmp	short loc_6ED7C4CB
; ---------------------------------------------------------------------------

loc_6ED7C525:				; CODE XREF: sub_6ED7C3EC+21j
		lea	eax, [ebp-54h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0B8h], 0
		call	sub_6ED94560

loc_6ED7C53A:				; CODE XREF: sub_6ED7C3EC+2Aj
		lea	eax, [ebp-50h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0B8h], 0
		call	sub_6ED94560
		jmp	loc_6ED7C4CB
; ---------------------------------------------------------------------------

loc_6ED7C554:				; CODE XREF: sub_6ED7C3EC+18j
		lea	eax, [ebp-64h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0B8h], 0
		call	sub_6ED94560
		jmp	loc_6ED7C489
; ---------------------------------------------------------------------------

loc_6ED7C56E:				; CODE XREF: sub_6ED7C3EC+7Dj
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0B8h], 0
		call	sub_6ED94560
		jmp	loc_6ED7C489
; ---------------------------------------------------------------------------

loc_6ED7C588:				; CODE XREF: sub_6ED7C3EC+74j
		lea	eax, [ebp-30h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0B8h], 0
		call	sub_6ED94560
		jmp	loc_6ED7C489
; ---------------------------------------------------------------------------

loc_6ED7C5A2:				; CODE XREF: sub_6ED7C3EC+69j
		lea	eax, [ebp-34h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0B8h], 0
		call	sub_6ED94560
		jmp	loc_6ED7C489
sub_6ED7C3EC	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED7C5C0	proc near		; CODE XREF: sub_6ED7C5C0+95p
					; _ZN16QXmlStreamReaderD2Ev+71p ...

var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9AC04
		mov	[ebp+var_18], offset sub_6ED7CA30
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+74h]
		test	edx, edx
		mov	[ebp+var_40], edx
		jz	short loc_6ED7C617
		mov	[esp], edx
		mov	[ebp+var_38], 3
		call	ds:_ZN12QTextDecoderD1Ev
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED988B0

loc_6ED7C617:				; CODE XREF: sub_6ED7C5C0+3Aj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+190h]
		mov	[ebp+var_38], 3
		mov	[esp], eax
		call	ds:_Z5qFreePv
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+194h]
		mov	[esp], eax
		call	ds:_Z5qFreePv
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1ACh]
		test	eax, eax
		mov	[ebp+var_44], eax
		jz	short loc_6ED7C665
		mov	[esp], eax
		call	sub_6ED7C5C0
		mov	edx, [ebp+var_44]
		mov	[esp], edx
		call	sub_6ED988B0

loc_6ED7C665:				; CODE XREF: sub_6ED7C5C0+90j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+19Ch]
		test	eax, eax
		jz	short loc_6ED7C682
		mov	[esp], eax
		mov	[ebp+var_38], 4
		call	ds:_Z5qFreePv

loc_6ED7C682:				; CODE XREF: sub_6ED7C5C0+B0j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+198h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7C880

loc_6ED7C699:				; CODE XREF: sub_6ED7C5C0+2D9j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0ECh]
		test	eax, eax
		jz	short loc_6ED7C6B4
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7CA08

loc_6ED7C6B4:				; CODE XREF: sub_6ED7C5C0+E4j
					; sub_6ED7C5C0+46Bj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0E0h]
		test	eax, eax
		jz	short loc_6ED7C6D1
		mov	[esp], eax
		mov	[ebp+var_38], 7
		call	ds:_Z5qFreePv

loc_6ED7C6D1:				; CODE XREF: sub_6ED7C5C0+FFj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0DCh]
		test	eax, eax
		jz	short loc_6ED7C6EC
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7C9E0

loc_6ED7C6EC:				; CODE XREF: sub_6ED7C5C0+11Cj
					; sub_6ED7C5C0+443j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0D8h]
		test	eax, eax
		jz	short loc_6ED7C707
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7C9B3

loc_6ED7C707:				; CODE XREF: sub_6ED7C5C0+137j
					; sub_6ED7C5C0+416j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0CCh]
		test	eax, eax
		jz	short loc_6ED7C724
		mov	[esp], eax
		mov	[ebp+var_38], 0Ah
		call	ds:_Z5qFreePv

loc_6ED7C724:				; CODE XREF: sub_6ED7C5C0+152j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0C0h]
		test	eax, eax
		jz	short loc_6ED7C741
		mov	[esp], eax
		mov	[ebp+var_38], 0Bh
		call	ds:_Z5qFreePv

loc_6ED7C741:				; CODE XREF: sub_6ED7C5C0+16Fj
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_0]
		mov	eax, [edx+0A8h]
		add	ecx, 0A8h
		test	eax, eax
		jz	short loc_6ED7C765
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7C992

loc_6ED7C765:				; CODE XREF: sub_6ED7C5C0+195j
					; sub_6ED7C5C0+3EEj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+88h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7C974

loc_6ED7C77C:				; CODE XREF: sub_6ED7C5C0+3CDj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+84h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7C956

loc_6ED7C793:				; CODE XREF: sub_6ED7C5C0+3AFj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+5Ch]
		test	eax, eax
		jz	short loc_6ED7C7AD
		mov	[esp], eax
		mov	[ebp+var_38], 0Fh
		call	ds:_Z5qFreePv

loc_6ED7C7AD:				; CODE XREF: sub_6ED7C5C0+1DBj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+58h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7C933

loc_6ED7C7C2:				; CODE XREF: sub_6ED7C5C0+391j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+54h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7C910

loc_6ED7C7D7:				; CODE XREF: sub_6ED7C5C0+36Ej
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+48h]
		test	eax, eax
		jz	short loc_6ED7C7F1
		mov	[esp], eax
		mov	[ebp+var_38], 12h
		call	ds:_Z5qFreePv

loc_6ED7C7F1:				; CODE XREF: sub_6ED7C5C0+21Fj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+40h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7C8F0

loc_6ED7C805:				; CODE XREF: sub_6ED7C5C0+346j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+2Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7C8D3

loc_6ED7C819:				; CODE XREF: sub_6ED7C5C0+329j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+28h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7C8B8

loc_6ED7C82D:				; CODE XREF: sub_6ED7C5C0+30Ej
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], eax
		mov	eax, [eax+18h]
		test	eax, eax
		jz	short loc_6ED7C84A
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_Z5qFreePv

loc_6ED7C84A:				; CODE XREF: sub_6ED7C5C0+278j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED7C8A0

loc_6ED7C85A:				; CODE XREF: sub_6ED7C5C0+2F6j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED7C873
		mov	[esp], eax
		mov	[ebp+var_38], 0FFFFFFFFh
		call	ds:_Z5qFreePv

loc_6ED7C873:				; CODE XREF: sub_6ED7C5C0+2A1j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED7C880:				; CODE XREF: sub_6ED7C5C0+D3j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+198h]
		mov	[ebp+var_38], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7C699
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7C8A0:				; CODE XREF: sub_6ED7C5C0+298j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED7C85A
; ---------------------------------------------------------------------------

loc_6ED7C8B8:				; CODE XREF: sub_6ED7C5C0+267j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+28h]
		mov	[ebp+var_38], 15h
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	loc_6ED7C82D
; ---------------------------------------------------------------------------

loc_6ED7C8D3:				; CODE XREF: sub_6ED7C5C0+253j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+2Ch]
		mov	[ebp+var_38], 14h
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	loc_6ED7C819
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7C8F0:				; CODE XREF: sub_6ED7C5C0+23Fj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+40h]
		mov	[ebp+var_38], 13h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7C805
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7C910:				; CODE XREF: sub_6ED7C5C0+211j
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED92900
		mov	eax, [edx+54h]
		mov	[ebp+var_38], 11h
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_6ED7C7D7
; ---------------------------------------------------------------------------

loc_6ED7C933:				; CODE XREF: sub_6ED7C5C0+1FCj
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED92900
		mov	eax, [edx+58h]
		mov	[ebp+var_38], 10h
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_6ED7C7C2
; ---------------------------------------------------------------------------

loc_6ED7C956:				; CODE XREF: sub_6ED7C5C0+1CDj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+84h]
		mov	[ebp+var_38], 0Eh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7C793
; ---------------------------------------------------------------------------

loc_6ED7C974:				; CODE XREF: sub_6ED7C5C0+1B6j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+88h]
		mov	[ebp+var_38], 0Dh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7C77C
; ---------------------------------------------------------------------------

loc_6ED7C992:				; CODE XREF: sub_6ED7C5C0+19Fj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0A8h]
		mov	[esp], ecx
		mov	[ebp+var_38], 0Ch
		mov	[esp+4], eax
		call	sub_6ED946D0
		jmp	loc_6ED7C765
; ---------------------------------------------------------------------------

loc_6ED7C9B3:				; CODE XREF: sub_6ED7C5C0+141j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0D8h]
		mov	[ebp+var_38], 9
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 0D8h
		mov	[esp], eax
		call	sub_6ED95090
		jmp	loc_6ED7C707
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7C9E0:				; CODE XREF: sub_6ED7C5C0+126j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0DCh]
		mov	[ebp+var_38], 8
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 0DCh
		mov	[esp], eax
		call	sub_6ED954E0
		jmp	loc_6ED7C6EC
; ---------------------------------------------------------------------------

loc_6ED7CA08:				; CODE XREF: sub_6ED7C5C0+EEj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0ECh]
		mov	[ebp+var_38], 6
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 0ECh
		mov	[esp], eax
		call	sub_6ED94C90
		jmp	loc_6ED7C6B4
sub_6ED7C5C0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED7CA30	proc near		; DATA XREF: sub_6ED7C5C0+1Do
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-68h], edx
		jz	loc_6ED7CB1D
		cmp	eax, 2
		jz	loc_6ED7CB4E
		cmp	eax, 3
		jz	loc_6ED7CB77
		cmp	eax, 4
		jz	loc_6ED7CB8E
		cmp	eax, 5
		jz	loc_6ED7CBA5
		cmp	eax, 6
		lea	esi, [esi+0]
		jz	loc_6ED7CBCE
		cmp	eax, 7
		jz	loc_6ED7CBE5
		cmp	eax, 8
		jz	loc_6ED7CBFC
		cmp	eax, 9
		nop
		lea	esi, [esi+0]
		jz	loc_6ED7CC25
		cmp	eax, 0Ah
		jz	loc_6ED7CC4E
		cmp	eax, 0Bh
		jz	loc_6ED7CC65
		cmp	eax, 0Ch
		nop
		lea	esi, [esi+0]
		jz	loc_6ED7CC7C
		cmp	eax, 0Dh
		jz	loc_6ED7CC93
		cmp	eax, 0Eh
		jz	loc_6ED7CCB9
		cmp	eax, 0Fh
		nop
		lea	esi, [esi+0]
		jz	loc_6ED7CCCE
		cmp	eax, 10h
		jz	loc_6ED7CCE3
		cmp	eax, 11h
		jz	loc_6ED7CD09
		cmp	eax, 12h
		nop
		lea	esi, [esi+0]
		jz	loc_6ED7CD1E
		cmp	eax, 13h
		jz	loc_6ED7CD33
		cmp	eax, 14h
		jz	loc_6ED7CD48
		mov	eax, [ebp-48h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED7CB1D:				; CODE XREF: sub_6ED7CA30+Fj
		mov	eax, [ebp-68h]
		mov	edx, [ebp-48h]
		mov	[ebp-4Ch], eax
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED7CB3C
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0
		call	ds:_Z5qFreePv

loc_6ED7CB3C:				; CODE XREF: sub_6ED7CA30+FAj
		mov	eax, [ebp-4Ch]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED7CB4E:				; CODE XREF: sub_6ED7CA30+18j
		mov	eax, [ebp-68h]
		mov	edx, [ebp+8]
		mov	[ebp-64h], eax
		mov	eax, [edx+19Ch]
		test	eax, eax
		jz	short loc_6ED7CB71
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0
		call	ds:_Z5qFreePv

loc_6ED7CB71:				; CODE XREF: sub_6ED7CA30+12Fj
		mov	eax, [ebp-64h]
		mov	[ebp-68h], eax

loc_6ED7CB77:				; CODE XREF: sub_6ED7CA30+21j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 198h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED7CB8E:				; CODE XREF: sub_6ED7CA30+2Aj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0ECh
		mov	[esp+0], eax
		call	sub_6ED95060

loc_6ED7CBA5:				; CODE XREF: sub_6ED7CA30+33j
		mov	eax, [ebp-68h]
		mov	edx, [ebp+8]
		mov	[ebp-60h], eax
		mov	eax, [edx+0E0h]
		test	eax, eax
		jz	short loc_6ED7CBC8
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0
		call	ds:_Z5qFreePv

loc_6ED7CBC8:				; CODE XREF: sub_6ED7CA30+186j
		mov	eax, [ebp-60h]
		mov	[ebp-68h], eax

loc_6ED7CBCE:				; CODE XREF: sub_6ED7CA30+40j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0DCh
		mov	[esp+0], eax
		call	sub_6ED958D0

loc_6ED7CBE5:				; CODE XREF: sub_6ED7CA30+49j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0D8h
		mov	[esp+0], eax
		call	sub_6ED954B0

loc_6ED7CBFC:				; CODE XREF: sub_6ED7CA30+52j
		mov	eax, [ebp-68h]
		mov	edx, [ebp+8]
		mov	[ebp-5Ch], eax
		mov	eax, [edx+0CCh]
		test	eax, eax
		jz	short loc_6ED7CC1F
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0
		call	ds:_Z5qFreePv

loc_6ED7CC1F:				; CODE XREF: sub_6ED7CA30+1DDj
		mov	eax, [ebp-5Ch]
		mov	[ebp-68h], eax

loc_6ED7CC25:				; CODE XREF: sub_6ED7CA30+60j
		mov	eax, [ebp-68h]
		mov	edx, [ebp+8]
		mov	[ebp-58h], eax
		mov	eax, [edx+0C0h]
		test	eax, eax
		jz	short loc_6ED7CC48
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0
		call	ds:_Z5qFreePv

loc_6ED7CC48:				; CODE XREF: sub_6ED7CA30+206j
		mov	eax, [ebp-58h]
		mov	[ebp-68h], eax

loc_6ED7CC4E:				; CODE XREF: sub_6ED7CA30+69j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0A8h
		mov	[esp+0], eax
		call	sub_6ED91130

loc_6ED7CC65:				; CODE XREF: sub_6ED7CA30+72j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 88h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED7CC7C:				; CODE XREF: sub_6ED7CA30+80j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 84h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED7CC93:				; CODE XREF: sub_6ED7CA30+89j
		mov	eax, [ebp-68h]
		mov	edx, [ebp+8]
		mov	[ebp-54h], eax
		mov	eax, [edx+5Ch]
		test	eax, eax
		jz	short loc_6ED7CCB3
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0
		call	ds:_Z5qFreePv

loc_6ED7CCB3:				; CODE XREF: sub_6ED7CA30+271j
		mov	eax, [ebp-54h]
		mov	[ebp-68h], eax

loc_6ED7CCB9:				; CODE XREF: sub_6ED7CA30+92j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 58h
		mov	[esp+0], eax
		call	sub_6ED92AB0

loc_6ED7CCCE:				; CODE XREF: sub_6ED7CA30+A0j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 54h
		mov	[esp+0], eax
		call	sub_6ED92AB0

loc_6ED7CCE3:				; CODE XREF: sub_6ED7CA30+A9j
		mov	eax, [ebp-68h]
		mov	edx, [ebp+8]
		mov	[ebp-50h], eax
		mov	eax, [edx+48h]
		test	eax, eax
		jz	short loc_6ED7CD03
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0
		call	ds:_Z5qFreePv

loc_6ED7CD03:				; CODE XREF: sub_6ED7CA30+2C1j
		mov	eax, [ebp-50h]
		mov	[ebp-68h], eax

loc_6ED7CD09:				; CODE XREF: sub_6ED7CA30+B2j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 40h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED7CD1E:				; CODE XREF: sub_6ED7CA30+C0j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 2Ch
		mov	[esp+0], eax
		call	sub_6ED90150

loc_6ED7CD33:				; CODE XREF: sub_6ED7CA30+C9j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 28h
		mov	[esp+0], eax
		call	sub_6ED90150

loc_6ED7CD48:				; CODE XREF: sub_6ED7CA30+D2j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED91D00
		mov	edx, [ebp-68h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED7CA30	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 182. _ZN16QXmlStreamReaderC1EPKc

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamReaderC1EPKc
_ZN16QXmlStreamReaderC1EPKc proc near

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9AC32
		mov	[ebp+var_28], offset sub_6ED7CE44
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 1B8h ;	size_t
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_50], eax
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	sub_6ED78A10
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_50]
		mov	[eax], edx
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN10QByteArrayC1EPKc
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_50]
		add	eax, 2Ch
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN10QByteArrayaSERKS_
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED7CE24
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED7CE24:				; CODE XREF: _ZN16QXmlStreamReaderC1EPKc+A5j
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_Z5qFreePv
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlStreamReaderC1EPKc endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED7CE44	proc near		; DATA XREF: _ZN16QXmlStreamReaderC1EPKc+1Do
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-54h], edx
		jz	short loc_6ED7CE6C
		cmp	eax, 2
		jz	short loc_6ED7CE90
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED90150

loc_6ED7CE6C:				; CODE XREF: sub_6ED7CE44+Fj
		mov	eax, [ebp+8]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED90510
		mov	edx, [ebp-54h]
		mov	[esp+0], edx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED7CE90:				; CODE XREF: sub_6ED7CE44+14j
		mov	eax, [ebp-50h]
		mov	[esp+0], eax
		call	sub_6ED988B0
		mov	edx, [ebp-54h]
		mov	[esp+0], edx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED7CE44	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 187. _ZN16QXmlStreamReaderC2EPKc

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamReaderC2EPKc
_ZN16QXmlStreamReaderC2EPKc proc near

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9AC3C
		mov	[ebp+var_28], offset sub_6ED7CF84
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 1B8h ;	size_t
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_50], eax
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	sub_6ED78A10
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_50]
		mov	[eax], edx
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN10QByteArrayC1EPKc
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_50]
		add	eax, 2Ch
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN10QByteArrayaSERKS_
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED7CF64
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED7CF64:				; CODE XREF: _ZN16QXmlStreamReaderC2EPKc+A5j
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_Z5qFreePv
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlStreamReaderC2EPKc endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED7CF84	proc near		; DATA XREF: _ZN16QXmlStreamReaderC2EPKc+1Do
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-54h], edx
		jz	short loc_6ED7CFAC
		cmp	eax, 2
		jz	short loc_6ED7CFD0
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED90150

loc_6ED7CFAC:				; CODE XREF: sub_6ED7CF84+Fj
		mov	eax, [ebp+8]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED90510
		mov	edx, [ebp-54h]
		mov	[esp+0], edx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED7CFD0:				; CODE XREF: sub_6ED7CF84+14j
		mov	eax, [ebp-50h]
		mov	[esp+0], eax
		call	sub_6ED988B0
		mov	edx, [ebp-54h]
		mov	[esp+0], edx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED7CF84	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 183. _ZN16QXmlStreamReaderC1ERK10QByteArray

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamReaderC1ERK10QByteArray
_ZN16QXmlStreamReaderC1ERK10QByteArray proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9AC46
		mov	[ebp+var_18], offset sub_6ED7D07C
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 1B8h ;	size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 2
		mov	[esp+4], edx
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	sub_6ED78A10
		mov	edx, [ebp+var_40]
		mov	eax, [ebp+arg_0]
		mov	[eax], edx
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 2Ch
		mov	[esp], eax
		call	ds:_ZN10QByteArrayaSERKS_
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlStreamReaderC1ERK10QByteArray endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED7D07C	proc near		; DATA XREF: _ZN16QXmlStreamReaderC1ERK10QByteArray+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], eax
		jz	short loc_6ED7D0AF
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], edx
		call	sub_6ED90510
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED7D0AF:				; CODE XREF: sub_6ED7D07C+Dj
		mov	eax, [ebp-40h]
		mov	[esp+0], eax
		call	sub_6ED988B0
		mov	edx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED7D07C	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 188. _ZN16QXmlStreamReaderC2ERK10QByteArray

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamReaderC2ERK10QByteArray
_ZN16QXmlStreamReaderC2ERK10QByteArray proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9AC4E
		mov	[ebp+var_18], offset sub_6ED7D15C
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 1B8h ;	size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 2
		mov	[esp+4], edx
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	sub_6ED78A10
		mov	edx, [ebp+var_40]
		mov	eax, [ebp+arg_0]
		mov	[eax], edx
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 2Ch
		mov	[esp], eax
		call	ds:_ZN10QByteArrayaSERKS_
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlStreamReaderC2ERK10QByteArray endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED7D15C	proc near		; DATA XREF: _ZN16QXmlStreamReaderC2ERK10QByteArray+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], eax
		jz	short loc_6ED7D18F
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], edx
		call	sub_6ED90510
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED7D18F:				; CODE XREF: sub_6ED7D15C+Dj
		mov	eax, [ebp-40h]
		mov	[esp+0], eax
		call	sub_6ED988B0
		mov	edx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED7D15C	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 181. _ZN16QXmlStreamReaderC1EP9QIODevice

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamReaderC1EP9QIODevice
_ZN16QXmlStreamReaderC1EP9QIODevice proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9AC56
		mov	[ebp+var_18], offset sub_6ED7D239
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 1B8h ;	size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 2
		mov	[esp+4], edx
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	sub_6ED78A10
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_40]
		mov	[eax], edx
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	_ZN16QXmlStreamReader9setDeviceEP9QIODevice
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlStreamReaderC1EP9QIODevice endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED7D239	proc near		; DATA XREF: _ZN16QXmlStreamReaderC1EP9QIODevice+20o
		add	ebp, 8
		mov	edx, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], edx
		jz	short loc_6ED7D26C
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED90510
		mov	edx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED7D26C:				; CODE XREF: sub_6ED7D239+Dj
		mov	eax, [ebp-40h]
		mov	[esp+0], eax
		call	sub_6ED988B0
		mov	edx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED7D239	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 186. _ZN16QXmlStreamReaderC2EP9QIODevice

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamReaderC2EP9QIODevice
_ZN16QXmlStreamReaderC2EP9QIODevice proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9AC5E
		mov	[ebp+var_18], offset sub_6ED7D319
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 1B8h ;	size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 2
		mov	[esp+4], edx
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	sub_6ED78A10
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_40]
		mov	[eax], edx
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	_ZN16QXmlStreamReader9setDeviceEP9QIODevice
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlStreamReaderC2EP9QIODevice endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED7D319	proc near		; DATA XREF: _ZN16QXmlStreamReaderC2EP9QIODevice+20o
		add	ebp, 8
		mov	edx, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], edx
		jz	short loc_6ED7D34C
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED90510
		mov	edx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED7D34C:				; CODE XREF: sub_6ED7D319+Dj
		mov	eax, [ebp-40h]
		mov	[esp+0], eax
		call	sub_6ED988B0
		mov	edx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED7D319	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 184. _ZN16QXmlStreamReaderC1ERK7QString

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamReaderC1ERK7QString
_ZN16QXmlStreamReaderC1ERK7QString proc	near

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9AC66
		mov	[ebp+var_28], offset sub_6ED7D46A
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 1B8h ;	size_t
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_48], 3
		mov	[esp+4], edx
		mov	[ebp+var_50], eax
		mov	[esp], eax
		call	sub_6ED78A10
		mov	ecx, [ebp+var_50]
		lea	eax, [ebp+var_C]
		mov	edx, [ebp+arg_0]
		mov	[edx], ecx
		mov	edx, [ebp+arg_4]
		mov	[esp+8], edx
		mov	edx, [ecx+70h]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		mov	[esp+4], edx
		call	ds:_ZNK10QTextCodec11fromUnicodeERK7QString
		sub	esp, 4
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_50]
		mov	[ebp+var_48], 1
		add	eax, 2Ch
		mov	[esp], eax
		call	ds:_ZN10QByteArrayaSERKS_
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7D455

loc_6ED7D425:				; CODE XREF: _ZN16QXmlStreamReaderC1ERK7QString+F8j
		mov	ecx, [ebp+var_50]
		mov	eax, [ecx+70h]
		mov	[ebp+var_48], 2
		mov	[esp], eax
		call	ds:_ZNK10QTextCodec11makeDecoderEv
		mov	edx, [ebp+var_50]
		or	byte ptr [edx+181h], 8
		mov	[edx+74h], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED7D455:				; CODE XREF: _ZN16QXmlStreamReaderC1ERK7QString+AFj
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 2
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	short loc_6ED7D425
_ZN16QXmlStreamReaderC1ERK7QString endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED7D46A	proc near		; DATA XREF: _ZN16QXmlStreamReaderC1ERK7QString+20o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-54h], edx
		jz	short loc_6ED7D492
		cmp	eax, 2
		jz	short loc_6ED7D4B6
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED90150

loc_6ED7D492:				; CODE XREF: sub_6ED7D46A+Fj
		mov	ecx, [ebp+8]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], ecx
		call	sub_6ED90510
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED7D4B6:				; CODE XREF: sub_6ED7D46A+14j
		mov	ecx, [ebp-50h]
		mov	[esp+0], ecx
		call	sub_6ED988B0
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED7D46A	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 189. _ZN16QXmlStreamReaderC2ERK7QString

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamReaderC2ERK7QString
_ZN16QXmlStreamReaderC2ERK7QString proc	near

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9AC70
		mov	[ebp+var_28], offset sub_6ED7D5DA
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 1B8h ;	size_t
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_48], 3
		mov	[esp+4], edx
		mov	[ebp+var_50], eax
		mov	[esp], eax
		call	sub_6ED78A10
		mov	ecx, [ebp+var_50]
		lea	eax, [ebp+var_C]
		mov	edx, [ebp+arg_0]
		mov	[edx], ecx
		mov	edx, [ebp+arg_4]
		mov	[esp+8], edx
		mov	edx, [ecx+70h]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		mov	[esp+4], edx
		call	ds:_ZNK10QTextCodec11fromUnicodeERK7QString
		sub	esp, 4
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_50]
		mov	[ebp+var_48], 1
		add	eax, 2Ch
		mov	[esp], eax
		call	ds:_ZN10QByteArrayaSERKS_
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7D5C5

loc_6ED7D595:				; CODE XREF: _ZN16QXmlStreamReaderC2ERK7QString+F8j
		mov	ecx, [ebp+var_50]
		mov	eax, [ecx+70h]
		mov	[ebp+var_48], 2
		mov	[esp], eax
		call	ds:_ZNK10QTextCodec11makeDecoderEv
		mov	edx, [ebp+var_50]
		or	byte ptr [edx+181h], 8
		mov	[edx+74h], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED7D5C5:				; CODE XREF: _ZN16QXmlStreamReaderC2ERK7QString+AFj
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 2
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	short loc_6ED7D595
_ZN16QXmlStreamReaderC2ERK7QString endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED7D5DA	proc near		; DATA XREF: _ZN16QXmlStreamReaderC2ERK7QString+20o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-54h], edx
		jz	short loc_6ED7D602
		cmp	eax, 2
		jz	short loc_6ED7D626
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED90150

loc_6ED7D602:				; CODE XREF: sub_6ED7D5DA+Fj
		mov	ecx, [ebp+8]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], ecx
		call	sub_6ED90510
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED7D626:				; CODE XREF: sub_6ED7D5DA+14j
		mov	ecx, [ebp-50h]
		mov	[esp+0], ecx
		call	sub_6ED988B0
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED7D5DA	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 192. _ZN16QXmlStreamReaderD2Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamReaderD2Ev
_ZN16QXmlStreamReaderD2Ev proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9AC7A
		mov	[ebp+var_18], offset sub_6ED7D6E7
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		cmp	byte ptr [edx+6Ch], 0
		mov	[ebp+var_40], edx
		jz	short loc_6ED7D6AD
		mov	eax, [edx+68h]
		test	eax, eax
		jz	short loc_6ED7D6AD
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+10h]
		mov	[ebp+var_38], 1
		call	eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		mov	[ebp+var_40], eax

loc_6ED7D6AD:				; CODE XREF: _ZN16QXmlStreamReaderD2Ev+3Bj
					; _ZN16QXmlStreamReaderD2Ev+42j
		mov	eax, [ebp+var_40]
		test	eax, eax
		jz	short loc_6ED7D6D1
		mov	eax, [ebp+var_40]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED7C5C0
		mov	edx, [ebp+var_40]
		mov	[esp], edx
		call	sub_6ED988B0

loc_6ED7D6D1:				; CODE XREF: _ZN16QXmlStreamReaderD2Ev+62j
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlStreamReaderD2Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED7D6E7	proc near		; DATA XREF: _ZN16QXmlStreamReaderD2Ev+1Do
		add	ebp, 8
		mov	edx, [ebp-34h]
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-44h], edx
		mov	[esp+0], eax
		call	sub_6ED90510
		mov	edx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED7D6E7	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 191. _ZN16QXmlStreamReaderD1Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamReaderD1Ev
_ZN16QXmlStreamReaderD1Ev proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9AC80
		mov	[ebp+var_18], offset sub_6ED7D7B7
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		cmp	byte ptr [edx+6Ch], 0
		mov	[ebp+var_40], edx
		jz	short loc_6ED7D77D
		mov	eax, [edx+68h]
		test	eax, eax
		jz	short loc_6ED7D77D
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+10h]
		mov	[ebp+var_38], 1
		call	eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		mov	[ebp+var_40], eax

loc_6ED7D77D:				; CODE XREF: _ZN16QXmlStreamReaderD1Ev+3Bj
					; _ZN16QXmlStreamReaderD1Ev+42j
		mov	edx, [ebp+var_40]
		test	edx, edx
		jz	short loc_6ED7D7A1
		mov	eax, [ebp+var_40]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED7C5C0
		mov	edx, [ebp+var_40]
		mov	[esp], edx
		call	sub_6ED988B0

loc_6ED7D7A1:				; CODE XREF: _ZN16QXmlStreamReaderD1Ev+62j
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlStreamReaderD1Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED7D7B7	proc near		; DATA XREF: _ZN16QXmlStreamReaderD1Ev+1Do
		add	ebp, 8
		mov	edx, [ebp-34h]
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-44h], edx
		mov	[esp+0], eax
		call	sub_6ED90510
		mov	edx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED7D7B7	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED7D7F0	proc near		; CODE XREF: sub_6ED83560+7C5p

var_BC		= dword	ptr -0BCh
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= byte ptr -9Ch
var_98		= dword	ptr -98h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_64		= dword	ptr -64h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= byte ptr -18h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 0DCh
		mov	[ebp+var_7C], eax
		lea	eax, [ebp+var_9C]
		mov	[ebp+var_84], offset sub_6ED997C0
		mov	[ebp+var_80], offset word_6ED9AC86
		mov	[ebp+var_78], offset sub_6ED7DDE7
		mov	[ebp+var_74], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		cmp	word ptr [edx+1A8h], 0
		jz	loc_6ED7DD53
		mov	edi, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_A0], edi
		mov	[ebp+var_20], edi
		lock inc dword ptr [edi]
		setnz	al
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_AC], 0
		mov	edx, [eax+188h]
		mov	ecx, eax
		mov	eax, [eax+194h]
		cmp	word ptr [ecx+1A8h], 2Bh
		mov	esi, [eax+edx*4]
		jz	loc_6ED7D914
		movsx	edx, ds:word_6EDA32C0[esi+esi]
		xor	eax, eax
		mov	[ebp+var_B0], esi
		xor	esi, esi
		mov	[ebp+var_BC], esi
		lea	ecx, word_6EDA3980[edx+edx]
		mov	[ebp+var_A8], edx
		jmp	short loc_6ED7D8EB
; ---------------------------------------------------------------------------

loc_6ED7D8A4:				; CODE XREF: sub_6ED7D7F0+105j
					; sub_6ED7D7F0+111j
		mov	edi, [ebp+var_B0]
		mov	esi, offset word_6EDA2EA0
		movsx	edx, word ptr [esi+edi*2]
		neg	edx

loc_6ED7D8B5:				; CODE XREF: sub_6ED7D7F0+116j
		test	edx, edx
		jle	short loc_6ED7D8E0
		mov	ebx, ds:off_6EDA2960[ebx*4]
		test	ebx, ebx
		jz	short loc_6ED7D8E0
		cmp	[ebp+var_BC], 3
		jg	short loc_6ED7D8E0
		mov	edi, [ebp+var_BC]
		mov	[ebp+edi*4+var_64], eax
		add	edi, 1
		mov	[ebp+var_BC], edi

loc_6ED7D8E0:				; CODE XREF: sub_6ED7D7F0+C7j
					; sub_6ED7D7F0+D2j ...
		add	eax, 1
		add	ecx, 2
		cmp	eax, 39h
		jz	short loc_6ED7D908

loc_6ED7D8EB:				; CODE XREF: sub_6ED7D7F0+B2j
		mov	edx, [ebp+var_A8]
		mov	ebx, eax
		add	edx, eax
		js	short loc_6ED7D8A4
		movsx	edx, ds:word_6EDA43C0[edx+edx]
		cmp	eax, edx
		jnz	short loc_6ED7D8A4
		movsx	edx, word ptr [ecx]
		jmp	short loc_6ED7D8B5
; ---------------------------------------------------------------------------

loc_6ED7D908:				; CODE XREF: sub_6ED7D7F0+F9j
		mov	eax, [ebp+var_BC]
		mov	[ebp+var_AC], eax

loc_6ED7D914:				; CODE XREF: sub_6ED7D7F0+87j
		mov	edx, [ebp+var_A0]
		cmp	edx, [ebp+var_20]
		jz	short loc_6ED7D956
		mov	[ebp+var_54], edx
		lock inc dword ptr [edx]
		setnz	al
		lea	eax, [ebp+var_54]
		mov	[esp+4], eax
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_98], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_54]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7DC5F

loc_6ED7D956:				; CODE XREF: sub_6ED7D7F0+12Dj
		cmp	[ebp+var_AC], 3
		jg	loc_6ED7DC82

loc_6ED7D963:				; CODE XREF: sub_6ED7D7F0+48Cj
		mov	ecx, [ebp+var_AC]
		test	ecx, ecx
		jz	loc_6ED7DC82
		mov	esi, [ebp+var_AC]
		mov	eax, 1
		mov	[ebp+var_A4], 0
		sub	esi, 1
		mov	[ebp+var_B4], esi
		jmp	loc_6ED7DA47
; ---------------------------------------------------------------------------

loc_6ED7D994:				; CODE XREF: sub_6ED7D7F0+267j
		cmp	[ebp+var_AC], 3
		mov	eax, offset aOr	; " or "
		jnz	short loc_6ED7D9A7
		mov	eax, offset aOr_0 ; ", or "

loc_6ED7D9A7:				; CODE XREF: sub_6ED7D7F0+1B0j
		lea	edx, [ebp+var_28]
		lea	ecx, [ebp+var_20]
		mov	[ebp+var_28], eax
		mov	[esp+4], edx
		mov	[esp], ecx
		mov	[ebp+var_98], 5
		call	ds:_ZN7QString6appendERK13QLatin1String

loc_6ED7D9C7:				; CODE XREF: sub_6ED7D7F0+291j
					; sub_6ED7D7F0+2F7j ...
		lea	eax, [ebp+var_30]
		mov	[esp+4], eax
		lea	eax, [ebp+var_20]
		mov	[ebp+var_30], offset asc_6EDA1CE9 ; "'"
		mov	[esp], eax
		mov	[ebp+var_98], 5
		call	ds:_ZN7QString6appendERK13QLatin1String
		mov	edx, [ebp+var_A4]
		lea	ecx, [ebp+var_20]
		mov	[esp], ecx
		mov	eax, [ebp+edx*4+var_64]
		mov	eax, ds:off_6EDA2960[eax*4]
		mov	[ebp+var_34], eax
		lea	eax, [ebp+var_34]
		mov	[esp+4], eax
		call	ds:_ZN7QString6appendERK13QLatin1String
		lea	eax, [ebp+var_38]
		lea	esi, [ebp+var_20]
		mov	[ebp+var_38], offset asc_6EDA1CE9 ; "'"
		mov	[esp+4], eax
		mov	[esp], esi
		call	ds:_ZN7QString6appendERK13QLatin1String
		add	[ebp+var_A4], 1
		xor	eax, eax
		mov	edi, [ebp+var_A4]
		cmp	[ebp+var_AC], edi
		jle	loc_6ED7DB08

loc_6ED7DA47:				; CODE XREF: sub_6ED7D7F0+19Fj
		test	al, al
		jnz	short loc_6ED7DA86
		mov	eax, [ebp+var_A4]
		cmp	[ebp+var_B4], eax
		jz	loc_6ED7D994
		lea	esi, [ebp+var_2C]
		lea	edi, [ebp+var_20]
		mov	[ebp+var_2C], offset asc_6EDA1E3E ; ", "
		mov	[esp+4], esi
		mov	[esp], edi
		mov	[ebp+var_98], 5
		call	ds:_ZN7QString6appendERK13QLatin1String
		jmp	loc_6ED7D9C7
; ---------------------------------------------------------------------------

loc_6ED7DA86:				; CODE XREF: sub_6ED7D7F0+259j
		lea	eax, [ebp+var_24]
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], offset aExpected ; "Expected	"
		mov	dword ptr [esp+4], offset aQxmlstream ;	"QXmlStream"
		mov	[esp], eax
		mov	[ebp+var_98], 5
		call	ds:_ZN16QCoreApplication9translateEPKcS1_S1_NS_8EncodingE
		sub	esp, 4
		lea	eax, [ebp+var_24]
		lea	edi, [ebp+var_20]
		mov	[esp+4], eax
		mov	[esp], edi
		mov	[ebp+var_98], 4
		call	ds:_ZN7QString6appendERKS_
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED7D9C7
		mov	eax, [ebp+var_24]
		mov	[ebp+var_98], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7D9C7
; ---------------------------------------------------------------------------

loc_6ED7DB08:				; CODE XREF: sub_6ED7D7F0+251j
		lea	eax, [ebp+var_3C]
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], offset aButGot ; ", but got '"
		mov	dword ptr [esp+4], offset aQxmlstream ;	"QXmlStream"
		mov	[esp], eax
		call	ds:_ZN16QCoreApplication9translateEPKcS1_S1_NS_8EncodingE
		sub	esp, 4
		lea	eax, [ebp+var_3C]
		mov	[esp+4], eax
		mov	[esp], esi
		mov	[ebp+var_98], 3
		call	ds:_ZN7QString6appendERKS_
		mov	eax, [ebp+var_3C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7DDB1

loc_6ED7DB62:				; CODE XREF: sub_6ED7D7F0+5D7j
		mov	edx, [ebp+arg_0]
		movsx	eax, word ptr [edx+1A8h]
		mov	[ebp+var_98], 5
		mov	eax, ds:off_6EDA2960[eax*4]
		mov	[ebp+var_40], eax
		lea	eax, [ebp+var_40]
		mov	[esp+4], eax
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		call	ds:_ZN7QString6appendERK13QLatin1String
		lea	eax, [ebp+var_44]
		mov	[esp+4], eax
		lea	eax, [ebp+var_20]
		mov	[ebp+var_44], offset asc_6EDA1CE9 ; "'"
		mov	[esp], eax
		call	ds:_ZN7QString6appendERK13QLatin1String
		mov	eax, [ebp+var_20]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED7DD42

loc_6ED7DBBB:				; CODE XREF: sub_6ED7D7F0+54Cj
		mov	edx, [eax+8]

loc_6ED7DBBE:				; CODE XREF: sub_6ED7D7F0+55Ej
		add	edx, 1
		mov	[esp], edx
		mov	[ebp+var_98], 5
		call	ds:_ZN7QString4growEi
		mov	[esp+4], eax
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		call	ds:_ZN7QString7reallocEi
		mov	eax, [ebp+var_20]
		mov	edx, [eax+8]

loc_6ED7DBEA:				; CODE XREF: sub_6ED7D7F0+558j
		mov	ecx, [eax+0Ch]
		mov	esi, [ebp+arg_0]
		mov	word ptr [ecx+edx*2], 2Eh
		add	edx, 1
		mov	[eax+8], edx
		mov	eax, [ebp+var_20]
		mov	edx, [eax+8]
		mov	eax, [eax+0Ch]
		mov	word ptr [eax+edx*2], 0
		lea	eax, [ebp+var_20]
		mov	[esp+4], eax
		mov	[esp], esi
		mov	[ebp+var_98], 5
		call	sub_6ED71AE0
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED7DC47

loc_6ED7DC31:				; CODE XREF: sub_6ED7D7F0+46Dj
					; sub_6ED7D7F0+5A0j ...
		lea	eax, [ebp+var_9C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED7DC47:				; CODE XREF: sub_6ED7D7F0+43Fj
		mov	eax, [ebp+var_20]
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED7DC31
; ---------------------------------------------------------------------------

loc_6ED7DC5F:				; CODE XREF: sub_6ED7D7F0+160j
		mov	eax, [ebp+var_54]
		mov	[ebp+var_98], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		cmp	[ebp+var_AC], 3
		jle	loc_6ED7D963

loc_6ED7DC82:				; CODE XREF: sub_6ED7D7F0+16Dj
					; sub_6ED7D7F0+17Bj
		lea	eax, [ebp+var_48]
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], offset aUnexpected ;	"Unexpected '"
		mov	dword ptr [esp+4], offset aQxmlstream ;	"QXmlStream"
		mov	[esp], eax
		mov	[ebp+var_98], 5
		call	ds:_ZN16QCoreApplication9translateEPKcS1_S1_NS_8EncodingE
		sub	esp, 4
		lea	eax, [ebp+var_48]
		mov	[esp+4], eax
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_98], 2
		call	ds:_ZN7QString6appendERKS_
		mov	eax, [ebp+var_48]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7DDCC

loc_6ED7DCE9:				; CODE XREF: sub_6ED7D7F0+5F2j
		mov	ecx, [ebp+arg_0]
		movsx	eax, word ptr [ecx+1A8h]
		mov	[ebp+var_98], 5
		mov	eax, ds:off_6EDA2960[eax*4]
		mov	[ebp+var_4C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		call	ds:_ZN7QString6appendERK13QLatin1String
		lea	eax, [ebp+var_50]
		mov	[esp+4], eax
		lea	eax, [ebp+var_20]
		mov	[ebp+var_50], offset asc_6EDA1CE9 ; "'"
		mov	[esp], eax
		call	ds:_ZN7QString6appendERK13QLatin1String
		mov	eax, [ebp+var_20]
		mov	edx, [eax]
		cmp	edx, 1
		jnz	loc_6ED7DBBB

loc_6ED7DD42:				; CODE XREF: sub_6ED7D7F0+3C5j
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jl	loc_6ED7DBEA
		jmp	loc_6ED7DBBE
; ---------------------------------------------------------------------------

loc_6ED7DD53:				; CODE XREF: sub_6ED7D7F0+46j
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_1C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_1C]
		mov	[esp+8], eax
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_98], 6
		mov	[esp], ecx
		call	sub_6ED71960
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED7DC31
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7DC31
; ---------------------------------------------------------------------------

loc_6ED7DDB1:				; CODE XREF: sub_6ED7D7F0+36Cj
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_98], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7DB62
; ---------------------------------------------------------------------------

loc_6ED7DDCC:				; CODE XREF: sub_6ED7D7F0+4F3j
		mov	eax, [ebp+var_48]
		mov	[ebp+var_98], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7DCE9
sub_6ED7D7F0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED7DDE7	proc near		; DATA XREF: sub_6ED7D7F0+29o
		add	ebp, 18h
		mov	eax, [ebp-98h]
		mov	ecx, [ebp-94h]
		cmp	eax, 1
		mov	[ebp-0B8h], ecx
		jz	loc_6ED7DE8D
		cmp	eax, 2
		jz	short loc_6ED7DE76
		cmp	eax, 3
		jz	short loc_6ED7DE5F
		cmp	eax, 4
		jz	short loc_6ED7DE32
		cmp	eax, 5
		jz	loc_6ED7DEA4
		lea	eax, [ebp-54h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560

loc_6ED7DE32:				; CODE XREF: sub_6ED7DDE7+2Bj
					; sub_6ED7DDE7+8Dj ...
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560
		mov	edi, [ebp-0B8h]
		mov	dword ptr [ebp-98h], 0FFFFFFFFh
		mov	[esp+0], edi
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED7DE5F:				; CODE XREF: sub_6ED7DDE7+26j
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560
		jmp	short loc_6ED7DE32
; ---------------------------------------------------------------------------

loc_6ED7DE76:				; CODE XREF: sub_6ED7DDE7+21j
		lea	eax, [ebp-3Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560
		jmp	short loc_6ED7DE32
; ---------------------------------------------------------------------------

loc_6ED7DE8D:				; CODE XREF: sub_6ED7DDE7+18j
		lea	eax, [ebp-48h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560
		jmp	short loc_6ED7DE32
; ---------------------------------------------------------------------------

loc_6ED7DEA4:				; CODE XREF: sub_6ED7DDE7+30j
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_6ED94560
		mov	esi, [ebp-0B8h]
		mov	dword ptr [ebp-98h], 0FFFFFFFFh
		mov	[esp+0], esi
		call	_Unwind_SjLj_Resume
sub_6ED7DDE7	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	dword ptr [ebp-24h], offset sub_6ED997C0
		mov	dword ptr [ebp-20h], offset word_6ED9AC96
		mov	dword ptr [ebp-18h], offset loc_6ED7E350
		mov	[ebp-14h], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+8]
		mov	edx, [edx+74h]
		test	edx, edx
		mov	[ebp-40h], edx
		jz	short loc_6ED7DF37
		mov	[esp], edx
		mov	dword ptr [ebp-38h], 3
		call	ds:_ZN12QTextDecoderD1Ev
		mov	eax, [ebp-40h]
		mov	[esp], eax
		call	sub_6ED988B0

loc_6ED7DF37:				; CODE XREF: .text:6ED7DF1Aj
		mov	edx, [ebp+8]
		mov	eax, [edx+190h]
		mov	dword ptr [ebp-38h], 3
		mov	[esp], eax
		call	ds:_Z5qFreePv
		mov	edx, [ebp+8]
		mov	eax, [edx+194h]
		mov	[esp], eax
		call	ds:_Z5qFreePv
		mov	eax, [ebp+8]
		mov	eax, [eax+1ACh]
		test	eax, eax
		mov	[ebp-44h], eax
		jz	short loc_6ED7DF85
		mov	[esp], eax
		call	sub_6ED7C5C0
		mov	edx, [ebp-44h]
		mov	[esp], edx
		call	sub_6ED988B0

loc_6ED7DF85:				; CODE XREF: .text:6ED7DF70j
		mov	edx, [ebp+8]
		mov	eax, [edx+19Ch]
		test	eax, eax
		jz	short loc_6ED7DFA2
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 4
		call	ds:_Z5qFreePv

loc_6ED7DFA2:				; CODE XREF: .text:6ED7DF90j
		mov	edx, [ebp+8]
		mov	eax, [edx+198h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7E1A0

loc_6ED7DFB9:				; CODE XREF: .text:6ED7E1B9j
		mov	edx, [ebp+8]
		mov	eax, [edx+0ECh]
		test	eax, eax
		jz	short loc_6ED7DFD4
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7E328

loc_6ED7DFD4:				; CODE XREF: .text:6ED7DFC4j
					; .text:6ED7E34Bj
		mov	edx, [ebp+8]
		mov	eax, [edx+0E0h]
		test	eax, eax
		jz	short loc_6ED7DFF1
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 7
		call	ds:_Z5qFreePv

loc_6ED7DFF1:				; CODE XREF: .text:6ED7DFDFj
		mov	edx, [ebp+8]
		mov	eax, [edx+0DCh]
		test	eax, eax
		jz	short loc_6ED7E00C
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7E300

loc_6ED7E00C:				; CODE XREF: .text:6ED7DFFCj
					; .text:6ED7E323j
		mov	edx, [ebp+8]
		mov	eax, [edx+0D8h]
		test	eax, eax
		jz	short loc_6ED7E027
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7E2D3

loc_6ED7E027:				; CODE XREF: .text:6ED7E017j
					; .text:6ED7E2F6j
		mov	edx, [ebp+8]
		mov	eax, [edx+0CCh]
		test	eax, eax
		jz	short loc_6ED7E044
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 0Ah
		call	ds:_Z5qFreePv

loc_6ED7E044:				; CODE XREF: .text:6ED7E032j
		mov	edx, [ebp+8]
		mov	eax, [edx+0C0h]
		test	eax, eax
		jz	short loc_6ED7E061
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 0Bh
		call	ds:_Z5qFreePv

loc_6ED7E061:				; CODE XREF: .text:6ED7E04Fj
		mov	edx, [ebp+8]
		mov	ecx, [ebp+8]
		mov	eax, [edx+0A8h]
		add	ecx, 0A8h
		test	eax, eax
		jz	short loc_6ED7E085
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7E2B2

loc_6ED7E085:				; CODE XREF: .text:6ED7E075j
					; .text:6ED7E2CEj
		mov	edx, [ebp+8]
		mov	eax, [edx+88h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7E294

loc_6ED7E09C:				; CODE XREF: .text:6ED7E2ADj
		mov	edx, [ebp+8]
		mov	eax, [edx+84h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7E276

loc_6ED7E0B3:				; CODE XREF: .text:6ED7E28Fj
		mov	edx, [ebp+8]
		mov	eax, [edx+5Ch]
		test	eax, eax
		jz	short loc_6ED7E0CD
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 0Fh
		call	ds:_Z5qFreePv

loc_6ED7E0CD:				; CODE XREF: .text:6ED7E0BBj
		mov	edx, [ebp+8]
		mov	eax, [edx+58h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7E253

loc_6ED7E0E2:				; CODE XREF: .text:6ED7E271j
		mov	edx, [ebp+8]
		mov	eax, [edx+54h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7E230

loc_6ED7E0F7:				; CODE XREF: .text:6ED7E24Ej
		mov	edx, [ebp+8]
		mov	eax, [edx+48h]
		test	eax, eax
		jz	short loc_6ED7E111
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 12h
		call	ds:_Z5qFreePv

loc_6ED7E111:				; CODE XREF: .text:6ED7E0FFj
		mov	edx, [ebp+8]
		mov	eax, [edx+40h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7E210

loc_6ED7E125:				; CODE XREF: .text:6ED7E226j
		mov	edx, [ebp+8]
		mov	eax, [edx+2Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7E1F3

loc_6ED7E139:				; CODE XREF: .text:6ED7E209j
		mov	edx, [ebp+8]
		mov	eax, [edx+28h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7E1D8

loc_6ED7E14D:				; CODE XREF: .text:6ED7E1EEj
		mov	eax, [ebp+8]
		mov	[ebp-48h], eax
		mov	eax, [eax+18h]
		test	eax, eax
		jz	short loc_6ED7E16A
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 1
		call	ds:_Z5qFreePv

loc_6ED7E16A:				; CODE XREF: .text:6ED7E158j
		mov	edx, [ebp+8]
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED7E1C0

loc_6ED7E17A:				; CODE XREF: .text:6ED7E1D6j
		mov	edx, [ebp+8]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED7E193
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	ds:_Z5qFreePv

loc_6ED7E193:				; CODE XREF: .text:6ED7E181j
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED7E1A0:				; CODE XREF: .text:6ED7DFB3j
		mov	edx, [ebp+8]
		mov	eax, [edx+198h]
		mov	dword ptr [ebp-38h], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7DFB9
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7E1C0:				; CODE XREF: .text:6ED7E178j
		mov	edx, [ebp+8]
		mov	eax, [edx+0Ch]
		mov	dword ptr [ebp-38h], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED7E17A
; ---------------------------------------------------------------------------

loc_6ED7E1D8:				; CODE XREF: .text:6ED7E147j
		mov	edx, [ebp+8]
		mov	eax, [edx+28h]
		mov	dword ptr [ebp-38h], 15h
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	loc_6ED7E14D
; ---------------------------------------------------------------------------

loc_6ED7E1F3:				; CODE XREF: .text:6ED7E133j
		mov	edx, [ebp+8]
		mov	eax, [edx+2Ch]
		mov	dword ptr [ebp-38h], 14h
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	loc_6ED7E139
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7E210:				; CODE XREF: .text:6ED7E11Fj
		mov	edx, [ebp+8]
		mov	eax, [edx+40h]
		mov	dword ptr [ebp-38h], 13h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7E125
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7E230:				; CODE XREF: .text:6ED7E0F1j
		mov	edx, [ebp+8]
		mov	dword ptr [esp+4], offset sub_6ED92900
		mov	eax, [edx+54h]
		mov	dword ptr [ebp-38h], 11h
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_6ED7E0F7
; ---------------------------------------------------------------------------

loc_6ED7E253:				; CODE XREF: .text:6ED7E0DCj
		mov	edx, [ebp+8]
		mov	dword ptr [esp+4], offset sub_6ED92900
		mov	eax, [edx+58h]
		mov	dword ptr [ebp-38h], 10h
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_6ED7E0E2
; ---------------------------------------------------------------------------

loc_6ED7E276:				; CODE XREF: .text:6ED7E0ADj
		mov	edx, [ebp+8]
		mov	eax, [edx+84h]
		mov	dword ptr [ebp-38h], 0Eh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7E0B3
; ---------------------------------------------------------------------------

loc_6ED7E294:				; CODE XREF: .text:6ED7E096j
		mov	edx, [ebp+8]
		mov	eax, [edx+88h]
		mov	dword ptr [ebp-38h], 0Dh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7E09C
; ---------------------------------------------------------------------------

loc_6ED7E2B2:				; CODE XREF: .text:6ED7E07Fj
		mov	edx, [ebp+8]
		mov	eax, [edx+0A8h]
		mov	[esp], ecx
		mov	dword ptr [ebp-38h], 0Ch
		mov	[esp+4], eax
		call	sub_6ED946D0
		jmp	loc_6ED7E085
; ---------------------------------------------------------------------------

loc_6ED7E2D3:				; CODE XREF: .text:6ED7E021j
		mov	edx, [ebp+8]
		mov	eax, [edx+0D8h]
		mov	dword ptr [ebp-38h], 9
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 0D8h
		mov	[esp], eax
		call	sub_6ED95090
		jmp	loc_6ED7E027
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7E300:				; CODE XREF: .text:6ED7E006j
		mov	edx, [ebp+8]
		mov	eax, [edx+0DCh]
		mov	dword ptr [ebp-38h], 8
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 0DCh
		mov	[esp], eax
		call	sub_6ED954E0
		jmp	loc_6ED7E00C
; ---------------------------------------------------------------------------

loc_6ED7E328:				; CODE XREF: .text:6ED7DFCEj
		mov	edx, [ebp+8]
		mov	eax, [edx+0ECh]
		mov	dword ptr [ebp-38h], 6
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 0ECh
		mov	[esp], eax
		call	sub_6ED94C90
		jmp	loc_6ED7DFD4
; ---------------------------------------------------------------------------

loc_6ED7E350:				; DATA XREF: .text:6ED7DEFDo
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-68h], edx
		jz	loc_6ED7E43D
		cmp	eax, 2
		jz	loc_6ED7E46E
		cmp	eax, 3
		jz	loc_6ED7E497
		cmp	eax, 4
		jz	loc_6ED7E4AE
		cmp	eax, 5
		jz	loc_6ED7E4C5
		cmp	eax, 6
		lea	esi, [esi+0]
		jz	loc_6ED7E4EE
		cmp	eax, 7
		jz	loc_6ED7E505
		cmp	eax, 8
		jz	loc_6ED7E51C
		cmp	eax, 9
		nop
		lea	esi, [esi+0]
		jz	loc_6ED7E545
		cmp	eax, 0Ah
		jz	loc_6ED7E56E
		cmp	eax, 0Bh
		jz	loc_6ED7E585
		cmp	eax, 0Ch
		nop
		lea	esi, [esi+0]
		jz	loc_6ED7E59C
		cmp	eax, 0Dh
		jz	loc_6ED7E5B3
		cmp	eax, 0Eh
		jz	loc_6ED7E5D9
		cmp	eax, 0Fh
		nop
		lea	esi, [esi+0]
		jz	loc_6ED7E5EE
		cmp	eax, 10h
		jz	loc_6ED7E603
		cmp	eax, 11h
		jz	loc_6ED7E629
		cmp	eax, 12h
		nop
		lea	esi, [esi+0]
		jz	loc_6ED7E63E
		cmp	eax, 13h
		jz	loc_6ED7E653
		cmp	eax, 14h
		jz	loc_6ED7E668
		mov	eax, [ebp-48h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp], eax
		call	sub_6ED94560

loc_6ED7E43D:				; CODE XREF: .text:6ED7E35Fj
		mov	eax, [ebp-68h]
		mov	edx, [ebp-48h]
		mov	[ebp-4Ch], eax
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED7E45C
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 0
		call	ds:_Z5qFreePv

loc_6ED7E45C:				; CODE XREF: .text:6ED7E44Aj
		mov	eax, [ebp-4Ch]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED7E46E:				; CODE XREF: .text:6ED7E368j
		mov	eax, [ebp-68h]
		mov	edx, [ebp+8]
		mov	[ebp-64h], eax
		mov	eax, [edx+19Ch]
		test	eax, eax
		jz	short loc_6ED7E491
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 0
		call	ds:_Z5qFreePv

loc_6ED7E491:				; CODE XREF: .text:6ED7E47Fj
		mov	eax, [ebp-64h]
		mov	[ebp-68h], eax

loc_6ED7E497:				; CODE XREF: .text:6ED7E371j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 198h
		mov	[esp], eax
		call	sub_6ED94560

loc_6ED7E4AE:				; CODE XREF: .text:6ED7E37Aj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0ECh
		mov	[esp], eax
		call	sub_6ED95060

loc_6ED7E4C5:				; CODE XREF: .text:6ED7E383j
		mov	eax, [ebp-68h]
		mov	edx, [ebp+8]
		mov	[ebp-60h], eax
		mov	eax, [edx+0E0h]
		test	eax, eax
		jz	short loc_6ED7E4E8
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 0
		call	ds:_Z5qFreePv

loc_6ED7E4E8:				; CODE XREF: .text:6ED7E4D6j
		mov	eax, [ebp-60h]
		mov	[ebp-68h], eax

loc_6ED7E4EE:				; CODE XREF: .text:6ED7E390j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0DCh
		mov	[esp], eax
		call	sub_6ED958D0

loc_6ED7E505:				; CODE XREF: .text:6ED7E399j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0D8h
		mov	[esp], eax
		call	sub_6ED954B0

loc_6ED7E51C:				; CODE XREF: .text:6ED7E3A2j
		mov	eax, [ebp-68h]
		mov	edx, [ebp+8]
		mov	[ebp-5Ch], eax
		mov	eax, [edx+0CCh]
		test	eax, eax
		jz	short loc_6ED7E53F
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 0
		call	ds:_Z5qFreePv

loc_6ED7E53F:				; CODE XREF: .text:6ED7E52Dj
		mov	eax, [ebp-5Ch]
		mov	[ebp-68h], eax

loc_6ED7E545:				; CODE XREF: .text:6ED7E3B0j
		mov	eax, [ebp-68h]
		mov	edx, [ebp+8]
		mov	[ebp-58h], eax
		mov	eax, [edx+0C0h]
		test	eax, eax
		jz	short loc_6ED7E568
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 0
		call	ds:_Z5qFreePv

loc_6ED7E568:				; CODE XREF: .text:6ED7E556j
		mov	eax, [ebp-58h]
		mov	[ebp-68h], eax

loc_6ED7E56E:				; CODE XREF: .text:6ED7E3B9j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0A8h
		mov	[esp], eax
		call	sub_6ED91130

loc_6ED7E585:				; CODE XREF: .text:6ED7E3C2j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 88h
		mov	[esp], eax
		call	sub_6ED94560

loc_6ED7E59C:				; CODE XREF: .text:6ED7E3D0j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 84h
		mov	[esp], eax
		call	sub_6ED94560

loc_6ED7E5B3:				; CODE XREF: .text:6ED7E3D9j
		mov	eax, [ebp-68h]
		mov	edx, [ebp+8]
		mov	[ebp-54h], eax
		mov	eax, [edx+5Ch]
		test	eax, eax
		jz	short loc_6ED7E5D3
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 0
		call	ds:_Z5qFreePv

loc_6ED7E5D3:				; CODE XREF: .text:6ED7E5C1j
		mov	eax, [ebp-54h]
		mov	[ebp-68h], eax

loc_6ED7E5D9:				; CODE XREF: .text:6ED7E3E2j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 58h
		mov	[esp], eax
		call	sub_6ED92AB0

loc_6ED7E5EE:				; CODE XREF: .text:6ED7E3F0j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 54h
		mov	[esp], eax
		call	sub_6ED92AB0

loc_6ED7E603:				; CODE XREF: .text:6ED7E3F9j
		mov	eax, [ebp-68h]
		mov	edx, [ebp+8]
		mov	[ebp-50h], eax
		mov	eax, [edx+48h]
		test	eax, eax
		jz	short loc_6ED7E623
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 0
		call	ds:_Z5qFreePv

loc_6ED7E623:				; CODE XREF: .text:6ED7E611j
		mov	eax, [ebp-50h]
		mov	[ebp-68h], eax

loc_6ED7E629:				; CODE XREF: .text:6ED7E402j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 40h
		mov	[esp], eax
		call	sub_6ED94560

loc_6ED7E63E:				; CODE XREF: .text:6ED7E410j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 2Ch
		mov	[esp], eax
		call	sub_6ED90150

loc_6ED7E653:				; CODE XREF: .text:6ED7E419j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 28h
		mov	[esp], eax
		call	sub_6ED90150

loc_6ED7E668:				; CODE XREF: .text:6ED7E422j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], eax
		call	sub_6ED91D00
		mov	edx, [ebp-68h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h
; Exported entry 222. _ZN16QXmlStreamWriterC1EP10QByteArray

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamWriterC1EP10QByteArray
_ZN16QXmlStreamWriterC1EP10QByteArray proc near

var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9ACD0
		mov	[ebp+var_28], offset sub_6ED7E76A
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 60h ; size_t
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_48], 3
		mov	[esp+4], edx
		mov	[ebp+var_50], eax
		mov	[esp], eax
		call	sub_6ED75B20
		mov	edx, [ebp+var_50]
		mov	eax, [ebp+arg_0]
		mov	[eax], edx
		mov	dword ptr [esp], 8 ; size_t
		mov	[ebp+var_48], 2
		call	sub_6ED988D0
		mov	[ebp+var_54], eax
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		mov	eax, [ebp+var_54]
		mov	[esp], eax
		call	ds:_ZN7QBufferC1EP10QByteArrayP7QObject
		mov	eax, [ebp+var_54]
		mov	edx, [ebp+var_50]
		mov	[ebp+var_C], 2
		mov	[edx+28h], eax
		mov	eax, [eax]
		lea	edx, [ebp+var_C]
		mov	eax, [eax+34h]
		mov	[esp+4], edx
		mov	edx, [ebp+var_54]
		mov	[ebp+var_48], 2
		mov	[esp], edx
		call	eax
		mov	eax, [ebp+var_50]
		or	byte ptr [eax+30h], 1
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlStreamWriterC1EP10QByteArray endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED7E76A	proc near		; DATA XREF: _ZN16QXmlStreamWriterC1EP10QByteArray+20o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-58h], edx
		jz	short loc_6ED7E78B
		cmp	eax, 2
		jz	short loc_6ED7E7AF
		mov	eax, [ebp-54h]
		mov	[esp+0], eax
		call	sub_6ED988B0

loc_6ED7E78B:				; CODE XREF: sub_6ED7E76A+Fj
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], edx
		call	sub_6ED90550
		mov	eax, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED7E7AF:				; CODE XREF: sub_6ED7E76A+14j
		mov	eax, [ebp-50h]
		mov	[esp+0], eax
		call	sub_6ED988B0
		mov	edx, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED7E76A	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 226. _ZN16QXmlStreamWriterC2EP10QByteArray

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamWriterC2EP10QByteArray
_ZN16QXmlStreamWriterC2EP10QByteArray proc near

var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9ACDA
		mov	[ebp+var_28], offset sub_6ED7E8AA
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 60h ; size_t
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_48], 3
		mov	[esp+4], edx
		mov	[ebp+var_50], eax
		mov	[esp], eax
		call	sub_6ED75B20
		mov	edx, [ebp+var_50]
		mov	eax, [ebp+arg_0]
		mov	[eax], edx
		mov	dword ptr [esp], 8 ; size_t
		mov	[ebp+var_48], 2
		call	sub_6ED988D0
		mov	[ebp+var_54], eax
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		mov	eax, [ebp+var_54]
		mov	[esp], eax
		call	ds:_ZN7QBufferC1EP10QByteArrayP7QObject
		mov	eax, [ebp+var_54]
		mov	edx, [ebp+var_50]
		mov	[ebp+var_C], 2
		mov	[edx+28h], eax
		mov	eax, [eax]
		lea	edx, [ebp+var_C]
		mov	eax, [eax+34h]
		mov	[esp+4], edx
		mov	edx, [ebp+var_54]
		mov	[ebp+var_48], 2
		mov	[esp], edx
		call	eax
		mov	eax, [ebp+var_50]
		or	byte ptr [eax+30h], 1
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlStreamWriterC2EP10QByteArray endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED7E8AA	proc near		; DATA XREF: _ZN16QXmlStreamWriterC2EP10QByteArray+20o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-58h], edx
		jz	short loc_6ED7E8CB
		cmp	eax, 2
		jz	short loc_6ED7E8EF
		mov	eax, [ebp-54h]
		mov	[esp+0], eax
		call	sub_6ED988B0

loc_6ED7E8CB:				; CODE XREF: sub_6ED7E8AA+Fj
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], edx
		call	sub_6ED90550
		mov	eax, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED7E8EF:				; CODE XREF: sub_6ED7E8AA+14j
		mov	eax, [ebp-50h]
		mov	[esp+0], eax
		call	sub_6ED988B0
		mov	edx, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED7E8AA	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED7E910	proc near		; CODE XREF: sub_6ED7EB70+4DDp
					; sub_6ED7EB70+DB6p ...

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_A		= word ptr -0Ah
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9ACEC
		mov	[ebp+var_28], offset sub_6ED7EB09
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	edx, [edx+4]
		test	edx, edx
		mov	[ebp+var_54], edx
		js	short loc_6ED7E9B4
		lea	eax, [edx+edx*2]
		shl	eax, 3
		mov	[ebp+var_58], eax
		mov	eax, ds:_ZeqRK10QStringRefS1_
		mov	[ebp+var_50], eax
		jmp	short loc_6ED7E96C
; ---------------------------------------------------------------------------

loc_6ED7E962:				; CODE XREF: sub_6ED7E910+7Dj
		sub	[ebp+var_58], 18h
		sub	[ebp+var_54], 1
		js	short loc_6ED7E9B4

loc_6ED7E96C:				; CODE XREF: sub_6ED7E910+50j
		mov	edx, [ebp+arg_4]
		mov	eax, [ebp+var_58]
		add	eax, [edx]
		mov	edx, [ebp+arg_8]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[ebp+var_5C], eax
		mov	[esp], eax
		mov	[esp+4], edx
		call	[ebp+var_50]
		test	al, al
		jz	short loc_6ED7E962
		mov	edx, [ebp+var_5C]
		mov	eax, [edx+0Ch]
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		mov	edx, [ebp+var_5C]
		mov	eax, [edx+10h]
		mov	edx, [ebp+arg_0]
		mov	[edx+4], eax
		mov	edx, [ebp+var_5C]
		mov	eax, [edx+14h]
		mov	edx, [ebp+arg_0]
		mov	[edx+8], eax
		jmp	short loc_6ED7E9D7
; ---------------------------------------------------------------------------

loc_6ED7E9B4:				; CODE XREF: sub_6ED7E910+3Dj
					; sub_6ED7E910+5Aj
		mov	eax, [ebp+arg_4]
		test	byte ptr [eax+181h], 10h
		jnz	short loc_6ED7E9F0

loc_6ED7E9C0:				; CODE XREF: sub_6ED7E910+E8j
					; sub_6ED7E910+1B1j ...
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], 0
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx+8], 0

loc_6ED7E9D7:				; CODE XREF: sub_6ED7E910+A2j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7E9F0:				; CODE XREF: sub_6ED7E910+AEj
		mov	edx, [ebp+arg_8]
		mov	eax, [edx+8]
		test	eax, eax
		jz	short loc_6ED7E9C0
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_A], 20h
		mov	[esp+4], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZNK10QStringRef8toStringEv
		lea	eax, [ebp+var_10]
		mov	[ebp+var_48], 3
		sub	esp, 4
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], offset aNamespacePrefi ; "Namespace prefix '%1' not declared"
		mov	dword ptr [esp+4], offset aQxmlstream ;	"QXmlStream"
		mov	[esp], eax
		call	ds:_ZN16QCoreApplication9translateEPKcS1_S1_NS_8EncodingE
		sub	esp, 4
		lea	edx, [ebp+var_A]
		mov	[esp+10h], edx
		lea	edx, [ebp+var_14]
		lea	eax, [ebp+var_18]
		mov	[esp+8], edx
		lea	edx, [ebp+var_10]
		mov	dword ptr [esp+0Ch], 0
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZNK7QString3argERKS_iRK5QChar
		sub	esp, 4
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	sub_6ED71AE0
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED7EADF

loc_6ED7EAA9:				; CODE XREF: sub_6ED7E910+1E2j
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED7EAF4

loc_6ED7EAB6:				; CODE XREF: sub_6ED7E910+1F7j
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED7E9C0
		mov	eax, [ebp+var_14]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7E9C0
; ---------------------------------------------------------------------------

loc_6ED7EADF:				; CODE XREF: sub_6ED7E910+197j
		mov	eax, [ebp+var_18]
		mov	[ebp+var_48], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED7EAA9
; ---------------------------------------------------------------------------

loc_6ED7EAF4:				; CODE XREF: sub_6ED7E910+1A4j
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED7EAB6
sub_6ED7E910	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED7EB09	proc near		; DATA XREF: sub_6ED7E910+20o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-60h], edx
		jz	short loc_6ED7EB31
		cmp	eax, 2
		jz	short loc_6ED7EB43
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED7EB31:				; CODE XREF: sub_6ED7EB09+Fj
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED7EB43:				; CODE XREF: sub_6ED7EB09+14j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-60h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED7EB09	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED7EB70	proc near		; CODE XREF: sub_6ED83560+11BBp

var_22D		= byte ptr -22Dh
var_22C		= dword	ptr -22Ch
var_228		= dword	ptr -228h
var_224		= dword	ptr -224h
var_220		= dword	ptr -220h
var_21C		= dword	ptr -21Ch
var_218		= dword	ptr -218h
var_214		= dword	ptr -214h
var_210		= dword	ptr -210h
var_20C		= dword	ptr -20Ch
var_208		= dword	ptr -208h
var_204		= dword	ptr -204h
var_200		= dword	ptr -200h
var_1FC		= dword	ptr -1FCh
var_1F8		= dword	ptr -1F8h
var_1F4		= dword	ptr -1F4h
var_1F0		= dword	ptr -1F0h
var_1EC		= dword	ptr -1ECh
var_1E8		= dword	ptr -1E8h
var_1E4		= dword	ptr -1E4h
var_1E0		= dword	ptr -1E0h
var_1DC		= dword	ptr -1DCh
var_1D8		= dword	ptr -1D8h
var_1D4		= dword	ptr -1D4h
var_1D0		= dword	ptr -1D0h
var_1CC		= dword	ptr -1CCh
var_1C8		= dword	ptr -1C8h
var_1C4		= dword	ptr -1C4h
var_1C0		= dword	ptr -1C0h
var_1BC		= dword	ptr -1BCh
var_1B8		= dword	ptr -1B8h
var_1B4		= dword	ptr -1B4h
var_1B0		= dword	ptr -1B0h
var_1AC		= dword	ptr -1ACh
var_1A8		= dword	ptr -1A8h
var_1A4		= dword	ptr -1A4h
var_1A0		= dword	ptr -1A0h
var_19C		= dword	ptr -19Ch
var_198		= dword	ptr -198h
var_194		= dword	ptr -194h
var_190		= dword	ptr -190h
var_18C		= byte ptr -18Ch
var_188		= dword	ptr -188h
var_184		= dword	ptr -184h
var_174		= dword	ptr -174h
var_170		= dword	ptr -170h
var_16C		= dword	ptr -16Ch
var_168		= dword	ptr -168h
var_164		= dword	ptr -164h
var_150		= byte ptr -150h
var_14C		= dword	ptr -14Ch
var_148		= dword	ptr -148h
var_144		= byte ptr -144h
var_140		= dword	ptr -140h
var_13C		= dword	ptr -13Ch
var_138		= byte ptr -138h
var_134		= dword	ptr -134h
var_130		= dword	ptr -130h
var_12C		= byte ptr -12Ch
var_128		= dword	ptr -128h
var_124		= dword	ptr -124h
var_11C		= byte ptr -11Ch
var_118		= dword	ptr -118h
var_114		= dword	ptr -114h
var_110		= dword	ptr -110h
var_10C		= dword	ptr -10Ch
var_108		= dword	ptr -108h
var_104		= dword	ptr -104h
var_100		= dword	ptr -100h
var_FC		= dword	ptr -0FCh
var_F8		= dword	ptr -0F8h
var_F4		= dword	ptr -0F4h
var_F0		= dword	ptr -0F0h
var_EC		= dword	ptr -0ECh
var_E8		= dword	ptr -0E8h
var_E4		= dword	ptr -0E4h
var_E0		= dword	ptr -0E0h
var_DC		= dword	ptr -0DCh
var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_D0		= dword	ptr -0D0h
var_CC		= dword	ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		lea	eax, [ebp+var_8]
		sub	esp, 250h
		mov	[ebp+var_16C], eax
		lea	eax, [ebp+var_18C]
		mov	[esp], eax
		mov	[ebp+var_174], offset sub_6ED997C0
		mov	[ebp+var_170], offset word_6ED9ACF6
		mov	[ebp+var_168], offset loc_6ED7FE54
		mov	[ebp+var_164], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+1A0h]
		add	eax, 1
		mov	[ebp+var_1C8], eax
		test	byte ptr [edx+181h], 10h
		jz	loc_6ED7F029
		cmp	dword ptr [edx+0C4h], 0
		js	loc_6ED7F029
		mov	ebx, [ebp+arg_0]
		add	edx, 114h
		mov	ecx, ds:_ZN7QString11shared_nullE
		mov	esi, ds:_ZeqRK10QStringRefS1_
		mov	[ebp+var_22C], edx
		add	ebx, 198h
		mov	[ebp+var_1A0], ecx
		mov	[ebp+var_208], ebx
		mov	[ebp+var_204], 0
		mov	[ebp+var_210], esi
		jmp	short loc_6ED7EC40
; ---------------------------------------------------------------------------

loc_6ED7EC21:				; CODE XREF: sub_6ED7EB70+EEj
					; sub_6ED7EB70+F5j ...
		mov	edx, [ebp+arg_0]
		add	[ebp+var_204], 1
		mov	eax, [edx+0C4h]
		add	eax, 1
		cmp	[ebp+var_204], eax
		jge	loc_6ED7F029

loc_6ED7EC40:				; CODE XREF: sub_6ED7EB70+AFj
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_204]
		mov	edx, [edx+0C0h]
		shl	eax, 6
		add	eax, edx
		cmp	byte ptr [eax+3Dh], 0
		mov	[ebp+var_1E4], eax
		jz	short loc_6ED7EC21
		mov	eax, [eax+30h]
		test	eax, eax
		jz	short loc_6ED7EC21
		mov	ebx, [ebp+var_1A0]
		cmp	[eax], ebx
		jz	short loc_6ED7EC21
		mov	ebx, [ebp+var_22C]
		mov	esi, [ebp+var_1E4]
		mov	[ebp+var_188], 0FFFFFFFFh
		mov	[esp+4], ebx
		mov	[esp], esi
		call	ds:_ZeqRK10QStringRefS1_
		test	al, al
		jz	short loc_6ED7EC21
		mov	esi, [ebp+var_1E4]
		mov	eax, [esi+0Ch]
		test	eax, eax
		jz	loc_6ED7EC21
		mov	edx, [ebp+var_1A0]
		cmp	edx, [eax]
		jz	loc_6ED7EC21
		cmp	[ebp+var_1C8], 0
		mov	[ebp+var_1D0], 0
		jg	loc_6ED7FD4E
		xchg	ax, ax

loc_6ED7ECD0:				; CODE XREF: sub_6ED7EB70+1235j
					; sub_6ED7EB70+124Ej
		mov	edx, [ebp+var_1C8]
		cmp	[ebp+var_1D0], edx
		jnz	loc_6ED7EC21
		mov	ebx, [ebp+var_1E4]
		mov	esi, [ebx+20h]
		test	esi, esi
		jz	loc_6ED7EEB0

loc_6ED7ECF3:				; CODE XREF: sub_6ED7EB70+368j
		mov	eax, [ebp+var_1E4]
		mov	[ebp+var_1C], offset aXmlns_4 ;	"xmlns"
		mov	[ebp+var_188], 0FFFFFFFFh
		add	eax, 18h
		mov	[esp+4], eax
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_6ED7EC21
		mov	esi, [ebp+arg_0]
		mov	edx, [esi+4]
		mov	ecx, [esi+8]
		lea	eax, [edx+1]
		cmp	eax, ecx
		jl	loc_6ED7FD20
		add	ecx, ecx
		lea	eax, [edx+2]
		cmp	eax, ecx
		jl	loc_6ED7FD19

loc_6ED7ED46:				; CODE XREF: sub_6ED7EB70+11ABj
		mov	edx, [ebp+arg_0]
		mov	[edx+8], eax
		imul	eax, 18h
		mov	[esp+4], eax
		mov	eax, [edx]
		mov	[ebp+var_188], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_Z8qReallocPvj
		mov	ecx, [ebp+arg_0]
		test	eax, eax
		mov	edx, eax
		mov	[ecx], eax
		jz	loc_6ED7FFEC
		mov	eax, [ecx+4]
		add	eax, 1

loc_6ED7ED7D:				; CODE XREF: sub_6ED7EB70+11B2j
					; sub_6ED7EB70+1497j
		mov	esi, [ebp+arg_0]
		mov	[ebp+var_20], offset aXml_2 ; "xml"
		mov	[esi+4], eax
		imul	eax, 18h
		lea	eax, [edx+eax]
		mov	edx, [ebp+var_1E4]
		mov	[ebp+var_220], eax
		mov	eax, [edx+24h]
		mov	[ebp+var_10C], eax
		mov	eax, [edx+28h]
		mov	[ebp+var_108], eax
		mov	eax, [edx+2Ch]
		mov	[ebp+var_104], eax
		mov	eax, [edx+30h]
		mov	[ebp+var_58], eax
		mov	eax, [edx+34h]
		mov	[ebp+var_54], eax
		mov	eax, [edx+38h]
		mov	[ebp+var_188], 11h
		mov	[ebp+var_50], eax
		lea	eax, [ebp+var_10C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		mov	[ebp+var_22D], al
		lea	eax, [ebp+var_58]
		mov	[esp+4], eax
		lea	eax, [ebp+var_24]
		mov	[ebp+var_24], offset aHttpWww_w3_o_1 ; "http://www.w3.org/XML/1998/namespace"
		mov	[esp], eax
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		cmp	[ebp+var_22D], al
		jz	loc_6ED7FDFE

loc_6ED7EE15:				; CODE XREF: sub_6ED7EB70+12AAj
					; sub_6ED7EB70+12B4j ...
		lea	eax, [ebp+var_30]
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], offset aIllegalNamespa ; "Illegal namespace declaration."
		mov	dword ptr [esp+4], offset aQxmlstream ;	"QXmlStream"
		mov	[esp], eax
		mov	[ebp+var_188], 11h
		call	ds:_ZN16QCoreApplication9translateEPKcS1_S1_NS_8EncodingE
		push	ecx
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_30]
		mov	[esp+4], eax
		mov	[ebp+var_188], 10h
		mov	[esp], ecx
		call	sub_6ED71AE0
		mov	eax, [ebp+var_30]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7FDE3

loc_6ED7EE79:				; CODE XREF: sub_6ED7EB70+1289j
					; sub_6ED7EB70+12D9j
		mov	ebx, [ebp+var_220]
		mov	eax, [ebp+var_10C]
		mov	[ebx], eax
		mov	eax, [ebp+var_108]
		mov	[ebx+4], eax
		mov	eax, [ebp+var_104]
		mov	[ebx+8], eax
		mov	eax, [ebp+var_58]
		mov	[ebx+0Ch], eax
		mov	eax, [ebp+var_54]
		mov	[ebx+10h], eax
		mov	eax, [ebp+var_50]
		mov	[ebx+14h], eax
		jmp	loc_6ED7EC21
; ---------------------------------------------------------------------------

loc_6ED7EEB0:				; CODE XREF: sub_6ED7EB70+17Dj
		mov	eax, ebx
		add	eax, 24h
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[ebp+var_C], offset aXmlns_4 ; "xmlns"
		mov	[esp], eax
		mov	[ebp+var_188], 0FFFFFFFFh
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_6ED7ECF3
		mov	esi, [ebp+arg_0]
		mov	edx, [esi+4]
		mov	ecx, [esi+8]
		lea	eax, [edx+1]
		cmp	eax, ecx
		jl	loc_6ED7FD47
		add	ecx, ecx
		lea	eax, [edx+2]
		cmp	eax, ecx
		jge	short loc_6ED7EEFD
		mov	eax, ecx

loc_6ED7EEFD:				; CODE XREF: sub_6ED7EB70+389j
		mov	edx, [ebp+arg_0]
		mov	[edx+8], eax
		imul	eax, 18h
		mov	[esp+4], eax
		mov	eax, [edx]
		mov	[ebp+var_188], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_Z8qReallocPvj
		mov	ecx, [ebp+arg_0]
		test	eax, eax
		mov	edx, eax
		mov	[ecx], eax
		jz	loc_6ED7FD27
		mov	eax, [ecx+4]
		add	eax, 1

loc_6ED7EF34:				; CODE XREF: sub_6ED7EB70+11D2j
					; sub_6ED7EB70+11D9j
		mov	esi, [ebp+arg_0]
		mov	[ebp+var_10], offset aHttpWww_w3_o_2 ; "http://www.w3.org/2000/xmlns/"
		mov	[esi+4], eax
		lea	eax, [eax+eax*2]
		lea	eax, [edx+eax*8]
		mov	edx, [ebp+var_1E4]
		mov	dword ptr [eax+8], 0
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax], 0
		mov	[ebp+var_224], eax
		mov	eax, [edx+30h]
		mov	[ebp+var_10C], eax
		mov	eax, [edx+34h]
		mov	[ebp+var_108], eax
		mov	eax, [edx+38h]
		mov	[ebp+var_188], 13h
		mov	[ebp+var_104], eax
		lea	eax, [ebp+var_10C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_6ED7FBD5

loc_6ED7EFAA:				; CODE XREF: sub_6ED7EB70+1084j
		lea	eax, [ebp+var_18]
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], offset aIllegalNamespa ; "Illegal namespace declaration."
		mov	dword ptr [esp+4], offset aQxmlstream ;	"QXmlStream"
		mov	[esp], eax
		mov	[ebp+var_188], 13h
		call	ds:_ZN16QCoreApplication9translateEPKcS1_S1_NS_8EncodingE
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_18]
		push	ebx
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	[ebp+var_188], 12h
		call	sub_6ED71AE0
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED7EC21
		mov	eax, [ebp+var_18]
		mov	[ebp+var_188], 13h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7EC21
; ---------------------------------------------------------------------------

loc_6ED7F029:				; CODE XREF: sub_6ED7EB70+5Fj
					; sub_6ED7EB70+6Cj ...
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_4C]
		mov	ecx, [ebp+arg_0]
		mov	[esp], eax
		mov	[ebp+var_188], 0FFFFFFFFh
		add	edx, 0FCh
		mov	[esp+8], edx
		mov	[esp+4], ecx
		call	sub_6ED7E910
		mov	esi, [ebp+arg_0]
		mov	ebx, [ebp+var_4C]
		mov	ecx, [ebp+var_48]
		push	edx
		mov	edx, [ebp+var_44]
		imul	eax, [esi+1Ch],	38h
		add	eax, [esi+18h]
		mov	[esi+108h], ebx
		mov	[esi+10Ch], ecx
		mov	[esi+110h], edx
		add	esi, 0A8h
		mov	[eax+24h], ebx
		mov	[eax+28h], ecx
		mov	[eax+2Ch], edx
		mov	eax, [ebp+var_1C8]
		mov	[ebp+var_1B0], esi
		mov	[esp], esi
		mov	[esp+4], eax
		call	sub_6ED94890
		cmp	[ebp+var_1C8], 0
		jle	loc_6ED7F63A
		mov	edx, [ebp+arg_0]
		mov	ecx, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_1B4], 0
		add	edx, 198h
		mov	[ebp+var_218], edx
		mov	[ebp+var_19C], ecx
		mov	[ebp+var_198], ecx

loc_6ED7F0D7:				; CODE XREF: sub_6ED7EB70+AC4j
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx+0A8h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED7F10D
		mov	edx, [eax+4]
		mov	esi, [ebp+var_1B0]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], esi
		mov	[ebp+var_188], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_6ED94910

loc_6ED7F10D:				; CODE XREF: sub_6ED7EB70+575j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_1B4]
		mov	ecx, [ebp+arg_0]
		mov	eax, [eax+0A8h]
		mov	[ebp+var_1D8], edx
		mov	[ebp+var_1D4], eax
		mov	eax, edx
		shl	eax, 5
		add	eax, [ecx+19Ch]
		mov	edx, [eax+8]
		test	edx, edx
		jz	loc_6ED7F9F5
		mov	ecx, [eax]
		sub	edx, 1
		mov	ebx, [ebp+var_218]
		mov	[ebp+var_50], edx
		mov	[ebp+var_54], ecx
		mov	[ebp+var_58], ebx

loc_6ED7F155:				; CODE XREF: sub_6ED7EB70+E9Aj
		mov	esi, [eax+4]
		mov	ecx, [eax]
		mov	ebx, [eax+14h]
		mov	edx, [eax+8]
		mov	[ebp+var_1FC], esi
		mov	esi, [ebp+arg_0]
		mov	[ebp+var_200], ecx
		mov	ecx, [eax+18h]
		sub	ebx, ecx
		add	ecx, [eax+10h]
		mov	eax, [esi+198h]
		mov	[ebp+var_1EC], ebx
		mov	[ebp+var_214], ecx
		mov	[ebp+var_64], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	eax, [ebp+var_200]
		lea	ecx, [ebp+var_64]
		mov	[esp+4], ecx
		mov	[ebp+var_188], 0Eh
		add	eax, edx
		mov	[ebp+var_60], eax
		mov	eax, [ebp+var_1FC]
		sub	eax, edx
		mov	edx, [ebp+var_1D4]
		mov	[ebp+var_5C], eax
		imul	eax, [ebp+var_1D8], 38h
		lea	eax, [edx+eax+10h]
		mov	[ebp+var_1B8], eax
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	edx, [ebp+var_60]
		imul	eax, [ebp+var_1D8], 38h
		add	eax, [ebp+var_1D4]
		mov	[eax+14h], edx
		mov	edx, [ebp+var_5C]
		mov	[eax+18h], edx
		mov	eax, [ebp+var_64]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7FA0F

loc_6ED7F203:				; CODE XREF: sub_6ED7EB70+EB5j
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx+198h]
		mov	[ebp+var_70], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_1FC]
		mov	edx, [ebp+var_1D4]
		mov	esi, [ebp+var_200]
		mov	[ebp+var_188], 0Dh
		mov	[ebp+var_68], eax
		imul	eax, [ebp+var_1D8], 38h
		mov	[ebp+var_6C], esi
		lea	eax, [edx+eax+28h]
		mov	[ebp+var_1DC], eax
		mov	ecx, [ebp+var_1DC]
		lea	eax, [ebp+var_70]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	ds:_ZN7QStringaSERKS_
		mov	edx, [ebp+var_6C]
		imul	eax, [ebp+var_1D8], 38h
		add	eax, [ebp+var_1D4]
		mov	[eax+2Ch], edx
		mov	edx, [ebp+var_68]
		mov	[eax+30h], edx
		mov	eax, [ebp+var_70]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7FB21

loc_6ED7F288:				; CODE XREF: sub_6ED7EB70+FC7j
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx+198h]
		mov	[ebp+var_7C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_1EC]
		mov	edx, [ebp+var_1D4]
		mov	esi, [ebp+var_214]
		mov	[ebp+var_188], 0Ch
		mov	[ebp+var_74], eax
		lea	eax, [ebp+var_7C]
		mov	[esp+4], eax
		imul	eax, [ebp+var_1D8], 38h
		mov	[ebp+var_78], esi
		lea	eax, [edx+eax+34h]
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	edx, [ebp+var_78]
		imul	eax, [ebp+var_1D8], 38h
		add	eax, [ebp+var_1D4]
		mov	[eax+38h], edx
		mov	edx, [ebp+var_74]
		mov	[eax+3Ch], edx
		mov	eax, [ebp+var_7C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7FA2A
		mov	eax, [ebp+var_50]
		test	eax, eax
		jnz	loc_6ED7FA4B

loc_6ED7F30C:				; CODE XREF: sub_6ED7EB70+ED5j
					; sub_6ED7EB70+F8Dj ...
		mov	esi, [ebp+var_1B4]
		test	esi, esi
		jz	loc_6ED7F621
		imul	eax, [ebp+var_1D8], 38h
		mov	ecx, [ebp+var_1D4]
		mov	[ebp+var_1A4], 0
		lea	ecx, [ecx+eax+1Ch]
		add	eax, [ebp+var_1D4]
		mov	[ebp+var_1C4], ecx
		mov	[ebp+var_1AC], eax
		mov	ebx, [ebp+var_1AC]
		add	eax, 18h
		mov	[ebp+var_1BC], eax
		add	ebx, 14h
		mov	[ebp+var_1C0], ebx
		jmp	short loc_6ED7F3E0
; ---------------------------------------------------------------------------

loc_6ED7F361:				; CODE XREF: sub_6ED7EB70+9E4j
					; sub_6ED7EB70+A91j
		lea	eax, [ebp+var_34]
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], offset aAttributeRedef ; "Attribute redefined."
		mov	dword ptr [esp+4], offset aQxmlstream ;	"QXmlStream"
		mov	[esp], eax
		mov	[ebp+var_188], 0Fh
		call	ds:_ZN16QCoreApplication9translateEPKcS1_S1_NS_8EncodingE
		sub	esp, 4
		lea	eax, [ebp+var_34]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_188], 8
		mov	[esp], eax
		call	sub_6ED71AE0
		mov	eax, [ebp+var_34]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7F606

loc_6ED7F3C7:				; CODE XREF: sub_6ED7EB70+92Aj
					; sub_6ED7EB70+9D4j ...
		add	[ebp+var_1A4], 1
		mov	edx, [ebp+var_1B4]
		cmp	[ebp+var_1A4], edx
		jge	loc_6ED7F621

loc_6ED7F3E0:				; CODE XREF: sub_6ED7EB70+7EFj
		mov	esi, [ebp+var_1BC]
		mov	ecx, [ebp+var_1C0]
		mov	ebx, [ebp+var_1B8]
		mov	eax, [esi]
		mov	edx, [ecx]
		mov	esi, [ebp+arg_0]
		mov	[ebp+var_A0], ebx
		mov	[ebp+var_98], eax
		mov	[ebp+var_9C], edx
		mov	eax, [esi+0A8h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED7F43E
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_188], 9
		mov	[esp+4], eax
		mov	eax, [ebp+var_1B0]
		mov	[esp], eax
		call	sub_6ED94910

loc_6ED7F43E:				; CODE XREF: sub_6ED7EB70+8A6j
		mov	ebx, [ebp+var_1A4]
		lea	esi, [ebp+var_A0]
		mov	ecx, [ebp+arg_0]
		imul	eax, ebx, 38h
		mov	edx, [ecx+0A8h]
		mov	[ebp+var_1A8], ebx
		lea	ecx, [edx+eax]
		mov	ebx, [ecx+18h]
		lea	eax, [edx+eax+10h]
		mov	ecx, [ecx+14h]
		mov	[ebp+var_94], eax
		lea	eax, [ebp+var_94]
		mov	[esp+4], esi
		mov	[ebp+var_8C], ebx
		mov	[ebp+var_90], ecx
		mov	[esp], eax
		mov	[ebp+var_188], 9
		call	ds:_ZeqRK10QStringRefS1_
		test	al, al
		jz	loc_6ED7F3C7
		mov	edx, [ebp+var_1AC]
		mov	ebx, [ebp+var_1C4]
		mov	esi, [ebp+arg_0]
		mov	eax, [edx+24h]
		mov	edx, [edx+20h]
		mov	[ebp+var_B8], ebx
		mov	[ebp+var_B0], eax
		mov	[ebp+var_B4], edx
		mov	eax, [esi+0A8h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED7F4F0
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp+4], eax
		mov	eax, [ebp+var_1B0]
		mov	[esp], eax
		call	sub_6ED94910

loc_6ED7F4F0:				; CODE XREF: sub_6ED7EB70+962j
		mov	ecx, [ebp+arg_0]
		imul	eax, [ebp+var_1A8], 38h
		mov	edx, [ecx+0A8h]
		lea	ecx, [edx+eax]
		mov	ebx, [ecx+24h]
		lea	eax, [edx+eax+1Ch]
		mov	ecx, [ecx+20h]
		mov	[ebp+var_AC], eax
		lea	eax, [ebp+var_B8]
		mov	[esp+4], eax
		lea	eax, [ebp+var_AC]
		mov	[ebp+var_A4], ebx
		mov	[ebp+var_A8], ecx
		mov	[esp], eax
		mov	[ebp+var_188], 9
		call	ds:_ZeqRK10QStringRefS1_
		test	al, al
		jz	loc_6ED7F3C7
		mov	ebx, [ebp+arg_0]
		test	byte ptr [ebx+181h], 10h
		jnz	loc_6ED7F361
		mov	esi, [ebp+var_1AC]
		mov	ecx, [ebp+var_1DC]
		mov	eax, [esi+30h]
		mov	edx, [esi+2Ch]
		mov	[ebp+var_D0], ecx
		mov	[ebp+var_C8], eax
		mov	[ebp+var_CC], edx
		mov	eax, [ebx+0A8h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED7F5A7
		mov	edx, [eax+4]
		mov	ebx, [ebp+var_1B0]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ebx
		mov	[esp+4], eax
		call	sub_6ED94910

loc_6ED7F5A7:				; CODE XREF: sub_6ED7EB70+A19j
		mov	esi, [ebp+arg_0]
		imul	eax, [ebp+var_1A8], 38h
		mov	ecx, [esi+0A8h]
		lea	edx, [ecx+eax]
		mov	ebx, [edx+30h]
		lea	eax, [ecx+eax+28h]
		mov	edx, [edx+2Ch]
		mov	[ebp+var_C4], eax
		lea	eax, [ebp+var_D0]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C4]
		mov	[ebp+var_BC], ebx
		mov	[ebp+var_C0], edx
		mov	[esp], eax
		mov	[ebp+var_188], 9
		call	ds:_ZeqRK10QStringRefS1_
		test	al, al
		jz	loc_6ED7F3C7
		jmp	loc_6ED7F361
; ---------------------------------------------------------------------------

loc_6ED7F606:				; CODE XREF: sub_6ED7EB70+851j
		mov	eax, [ebp+var_34]
		mov	[ebp+var_188], 0Fh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7F3C7
; ---------------------------------------------------------------------------

loc_6ED7F621:				; CODE XREF: sub_6ED7EB70+7A4j
					; sub_6ED7EB70+86Aj
		add	[ebp+var_1B4], 1
		mov	ecx, [ebp+var_1C8]
		cmp	[ebp+var_1B4], ecx
		jl	loc_6ED7F0D7

loc_6ED7F63A:				; CODE XREF: sub_6ED7EB70+536j
		mov	esi, [ebp+arg_0]
		cmp	dword ptr [esi+0C4h], 0
		js	loc_6ED7FBB3
		mov	edx, [ebp+arg_0]
		add	esi, 114h
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	ecx, ds:_ZeqRK10QStringRefS1_
		mov	[ebp+var_21C], esi
		add	edx, 198h
		mov	[ebp+var_194], eax
		mov	[ebp+var_190], eax
		mov	[ebp+var_1F0], edx
		mov	[ebp+var_1E8], 0
		mov	[ebp+var_1F8], ecx
		jmp	short loc_6ED7F6AF
; ---------------------------------------------------------------------------
		align 10h

loc_6ED7F690:				; CODE XREF: sub_6ED7EB70+B5Dj
					; sub_6ED7EB70+B64j ...
		mov	edx, [ebp+arg_0]
		add	[ebp+var_1E8], 1
		mov	eax, [edx+0C4h]
		add	eax, 1
		cmp	[ebp+var_1E8], eax
		jge	loc_6ED7FBB3

loc_6ED7F6AF:				; CODE XREF: sub_6ED7EB70+B1Cj
		mov	esi, [ebp+arg_0]
		mov	ebx, [ebp+var_1E8]
		mov	esi, [esi+0C0h]
		shl	ebx, 6
		add	ebx, esi
		cmp	byte ptr [ebx+3Dh], 0
		mov	[ebp+var_1E0], ebx
		jnz	short loc_6ED7F690
		mov	eax, [ebx+30h]
		test	eax, eax
		jz	short loc_6ED7F690
		mov	edx, [ebp+var_194]
		cmp	[eax], edx
		jz	short loc_6ED7F690
		mov	ebx, [ebp+var_21C]
		mov	esi, [ebp+var_1E0]
		mov	[ebp+var_188], 0FFFFFFFFh
		mov	[esp+4], ebx
		mov	[esp], esi
		call	ds:_ZeqRK10QStringRefS1_
		test	al, al
		jz	short loc_6ED7F690
		mov	ecx, [ebp+var_1E0]
		mov	eax, [ecx+0Ch]
		test	eax, eax
		jz	loc_6ED7F690
		mov	ebx, [ebp+var_194]
		cmp	ebx, [eax]
		jz	loc_6ED7F690
		cmp	[ebp+var_1C8], 0
		mov	[ebp+var_1CC], 0
		jg	loc_6ED7FC95
		lea	esi, [esi+0]

loc_6ED7F740:				; CODE XREF: sub_6ED7EB70+1188j
					; sub_6ED7EB70+11A1j
		mov	edx, [ebp+var_1C8]
		cmp	[ebp+var_1CC], edx
		jnz	loc_6ED7F690
		lea	eax, [ebp+var_150]
		mov	[esp], eax
		call	_ZN19QXmlStreamAttributeC1Ev
		mov	ecx, [ebp+var_1E0]
		mov	eax, [ecx+24h]
		test	eax, eax
		jz	loc_6ED7FC5B
		mov	eax, [eax]
		mov	[ebp+var_E8], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED7F77F:				; CODE XREF: sub_6ED7EB70+1103j
		mov	edx, [ebp+var_1E0]
		mov	eax, [edx+28h]
		mov	[ebp+var_E4], eax
		mov	eax, [edx+2Ch]
		mov	[ebp+var_188], 5
		mov	[ebp+var_E0], eax
		lea	eax, [ebp+var_E8]
		mov	[esp+4], eax
		lea	eax, [ebp+var_150]
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_E4]
		mov	[ebp+var_14C], eax
		mov	eax, [ebp+var_E0]
		mov	[ebp+var_148], eax
		mov	eax, [ebp+var_E8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7FB95

loc_6ED7F7E6:				; CODE XREF: sub_6ED7EB70+103Ej
		mov	ecx, [ebp+var_1E0]
		mov	eax, [ecx+0Ch]
		test	eax, eax
		jz	loc_6ED7FC78
		mov	eax, [eax]
		mov	[ebp+var_F4], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED7F805:				; CODE XREF: sub_6ED7EB70+1120j
		mov	edx, [ebp+var_1E0]
		mov	eax, [edx+10h]
		mov	[ebp+var_F0], eax
		mov	eax, [edx+14h]
		mov	[ebp+var_188], 4
		mov	[ebp+var_EC], eax
		lea	eax, [ebp+var_F4]
		mov	[esp+4], eax
		lea	eax, [ebp+var_138]
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_F0]
		mov	[ebp+var_134], eax
		mov	eax, [ebp+var_EC]
		mov	[ebp+var_130], eax
		mov	eax, [ebp+var_F4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7FB77

loc_6ED7F86C:				; CODE XREF: sub_6ED7EB70+1020j
		mov	ecx, [ebp+var_1E0]
		mov	eax, [ecx+30h]
		test	eax, eax
		jz	loc_6ED7FC3E
		mov	eax, [eax]
		mov	[ebp+var_100], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED7F88B:				; CODE XREF: sub_6ED7EB70+10E6j
		mov	edx, [ebp+var_1E0]
		mov	eax, [edx+34h]
		mov	[ebp+var_FC], eax
		mov	eax, [edx+38h]
		mov	[ebp+var_188], 3
		mov	[ebp+var_F8], eax
		lea	eax, [ebp+var_100]
		mov	[esp+4], eax
		lea	eax, [ebp+var_12C]
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_FC]
		mov	[ebp+var_128], eax
		mov	eax, [ebp+var_F8]
		mov	[ebp+var_124], eax
		mov	eax, [ebp+var_100]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7FB59

loc_6ED7F8F2:				; CODE XREF: sub_6ED7EB70+1002j
		mov	ecx, [ebp+var_1E0]
		mov	ebx, [ecx+20h]
		test	ebx, ebx
		jz	loc_6ED7F9AF
		mov	ebx, [ebp+arg_0]
		mov	edx, ecx
		lea	eax, [ebp+var_10C]
		add	edx, 18h
		mov	[esp+8], edx
		mov	[esp], eax
		mov	[esp+4], ebx
		mov	[ebp+var_188], 6
		call	sub_6ED7E910
		mov	eax, [ebp+var_10C]
		push	edx
		test	eax, eax
		jz	loc_6ED7FDC6
		mov	eax, [eax]
		mov	[ebp+var_118], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED7F948:				; CODE XREF: sub_6ED7EB70+126Ej
		mov	eax, [ebp+var_108]
		mov	[ebp+var_188], 1
		mov	[ebp+var_114], eax
		mov	eax, [ebp+var_104]
		mov	[ebp+var_110], eax
		lea	eax, [ebp+var_118]
		mov	[esp+4], eax
		lea	eax, [ebp+var_144]
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_114]
		mov	[ebp+var_140], eax
		mov	eax, [ebp+var_110]
		mov	[ebp+var_13C], eax
		mov	eax, [ebp+var_118]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED7FC20

loc_6ED7F9AF:				; CODE XREF: sub_6ED7EB70+D8Dj
					; sub_6ED7EB70+10C9j
		mov	ebx, [ebp+var_1B0]
		lea	eax, [ebp+var_150]
		or	[ebp+var_11C], 1
		mov	[esp+4], eax
		mov	[esp], ebx
		mov	[ebp+var_188], 6
		call	sub_6ED94720
		lea	eax, [ebp+var_150]
		mov	[esp], eax
		mov	[ebp+var_188], 0FFFFFFFFh
		call	_ZN19QXmlStreamAttributeD1Ev
		jmp	loc_6ED7F690
; ---------------------------------------------------------------------------

loc_6ED7F9F5:				; CODE XREF: sub_6ED7EB70+5CBj
		mov	[ebp+var_58], 0
		mov	[ebp+var_54], 0
		mov	[ebp+var_50], 0
		jmp	loc_6ED7F155
; ---------------------------------------------------------------------------

loc_6ED7FA0F:				; CODE XREF: sub_6ED7EB70+68Dj
		mov	eax, [ebp+var_64]
		mov	[ebp+var_188], 0Fh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7F203
; ---------------------------------------------------------------------------

loc_6ED7FA2A:				; CODE XREF: sub_6ED7EB70+78Bj
		mov	eax, [ebp+var_7C]
		mov	[ebp+var_188], 0Fh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	eax, [ebp+var_50]
		test	eax, eax
		jz	loc_6ED7F30C

loc_6ED7FA4B:				; CODE XREF: sub_6ED7EB70+796j
		mov	ecx, [ebp+arg_0]
		lea	edx, [ebp+var_10C]
		lea	eax, [ebp+var_58]
		mov	[esp+8], eax
		mov	[esp], edx
		mov	[esp+4], ecx
		mov	[ebp+var_188], 0Fh
		call	sub_6ED7E910
		mov	eax, [ebp+var_10C]
		sub	esp, 4
		test	eax, eax
		jz	loc_6ED7FB3C
		mov	eax, [eax]
		mov	[ebp+var_88], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED7FA90:				; CODE XREF: sub_6ED7EB70+FE4j
		mov	eax, [ebp+var_108]
		mov	edx, [ebp+var_1D4]
		mov	[ebp+var_188], 0Ah
		mov	[ebp+var_84], eax
		mov	eax, [ebp+var_104]
		mov	[ebp+var_80], eax
		lea	eax, [ebp+var_88]
		mov	[esp+4], eax
		imul	eax, [ebp+var_1D8], 38h
		lea	eax, [edx+eax+1Ch]
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	edx, [ebp+var_84]
		imul	eax, [ebp+var_1D8], 38h
		add	eax, [ebp+var_1D4]
		mov	[eax+20h], edx
		mov	edx, [ebp+var_80]
		mov	[eax+24h], edx
		mov	eax, [ebp+var_88]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED7F30C
		mov	eax, [ebp+var_88]
		mov	[ebp+var_188], 0Bh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7F30C
; ---------------------------------------------------------------------------

loc_6ED7FB21:				; CODE XREF: sub_6ED7EB70+712j
		mov	eax, [ebp+var_70]
		mov	[ebp+var_188], 0Fh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7F288
; ---------------------------------------------------------------------------

loc_6ED7FB3C:				; CODE XREF: sub_6ED7EB70+F0Cj
		mov	ebx, [ebp+var_19C]
		mov	esi, [ebp+var_198]
		mov	[ebp+var_88], ebx
		lock inc dword ptr [esi]
		setnz	al
		jmp	loc_6ED7FA90
; ---------------------------------------------------------------------------

loc_6ED7FB59:				; CODE XREF: sub_6ED7EB70+D7Cj
		mov	eax, [ebp+var_100]
		mov	[ebp+var_188], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7F8F2
; ---------------------------------------------------------------------------

loc_6ED7FB77:				; CODE XREF: sub_6ED7EB70+CF6j
		mov	eax, [ebp+var_F4]
		mov	[ebp+var_188], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7F86C
; ---------------------------------------------------------------------------

loc_6ED7FB95:				; CODE XREF: sub_6ED7EB70+C70j
		mov	eax, [ebp+var_E8]
		mov	[ebp+var_188], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7F7E6
; ---------------------------------------------------------------------------

loc_6ED7FBB3:				; CODE XREF: sub_6ED7EB70+AD4j
					; sub_6ED7EB70+B39j
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_18C]
		mov	dword ptr [ecx+1A0h], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		lea	esp, [ebp-8]
		pop	ebx
		pop	esi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED7FBD5:				; CODE XREF: sub_6ED7EB70+434j
		lea	eax, [ebp+var_10C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[ebp+var_14], offset aHttpWww_w3_o_1 ; "http://www.w3.org/XML/1998/namespace"
		mov	[esp], eax
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jnz	loc_6ED7EFAA
		mov	ecx, [ebp+var_224]
		mov	eax, [ebp+var_10C]
		mov	[ecx+0Ch], eax
		mov	eax, [ebp+var_108]
		mov	[ecx+10h], eax
		mov	eax, [ebp+var_104]
		mov	[ecx+14h], eax
		jmp	loc_6ED7EC21
; ---------------------------------------------------------------------------

loc_6ED7FC20:				; CODE XREF: sub_6ED7EB70+E39j
		mov	eax, [ebp+var_118]
		mov	[ebp+var_188], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7F9AF
; ---------------------------------------------------------------------------

loc_6ED7FC3E:				; CODE XREF: sub_6ED7EB70+D07j
		mov	ebx, [ebp+var_194]
		mov	esi, [ebp+var_190]
		mov	[ebp+var_100], ebx
		lock inc dword ptr [esi]
		setnz	al
		jmp	loc_6ED7F88B
; ---------------------------------------------------------------------------

loc_6ED7FC5B:				; CODE XREF: sub_6ED7EB70+BFBj
		mov	ebx, [ebp+var_194]
		mov	esi, [ebp+var_190]
		mov	[ebp+var_E8], ebx
		lock inc dword ptr [esi]
		setnz	al
		jmp	loc_6ED7F77F
; ---------------------------------------------------------------------------

loc_6ED7FC78:				; CODE XREF: sub_6ED7EB70+C81j
		mov	ebx, [ebp+var_194]
		mov	esi, [ebp+var_190]
		mov	[ebp+var_F4], ebx
		lock inc dword ptr [esi]
		setnz	al
		jmp	loc_6ED7F805
; ---------------------------------------------------------------------------

loc_6ED7FC95:				; CODE XREF: sub_6ED7EB70+BC7j
		mov	eax, [ebp+var_1E0]
		add	eax, 0Ch
		mov	[ebp+var_1F4], eax

loc_6ED7FCA4:				; CODE XREF: sub_6ED7EB70+11A7j
		mov	esi, [ebp+arg_0]
		mov	eax, [ebp+var_1CC]
		mov	ecx, [ebp+var_1F0]
		mov	ebx, [ebp+var_1F4]
		shl	eax, 5
		add	eax, [esi+19Ch]
		lea	esi, [ebp+var_DC]
		mov	[ebp+var_DC], ecx
		mov	edx, [eax+4]
		mov	eax, [eax]
		mov	[esp+4], ebx
		mov	[esp], esi
		mov	[ebp+var_D4], edx
		mov	[ebp+var_D8], eax
		mov	[ebp+var_188], 7
		call	[ebp+var_1F8]
		test	al, al
		jnz	loc_6ED7F740
		add	[ebp+var_1CC], 1
		mov	eax, [ebp+var_1C8]
		cmp	[ebp+var_1CC], eax
		jge	loc_6ED7F740
		jmp	short loc_6ED7FCA4
; ---------------------------------------------------------------------------

loc_6ED7FD19:				; CODE XREF: sub_6ED7EB70+1D0j
		mov	eax, ecx
		jmp	loc_6ED7ED46
; ---------------------------------------------------------------------------

loc_6ED7FD20:				; CODE XREF: sub_6ED7EB70+1C3j
		mov	edx, [esi]
		jmp	loc_6ED7ED7D
; ---------------------------------------------------------------------------

loc_6ED7FD27:				; CODE XREF: sub_6ED7EB70+3B8j
		mov	[ebp+var_188], 0FFFFFFFFh
		call	ds:_Z9qBadAllocv
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx+4]
		mov	edx, [ebx]
		add	eax, 1
		jmp	loc_6ED7EF34
; ---------------------------------------------------------------------------

loc_6ED7FD47:				; CODE XREF: sub_6ED7EB70+37Cj
		mov	edx, [esi]
		jmp	loc_6ED7EF34
; ---------------------------------------------------------------------------

loc_6ED7FD4E:				; CODE XREF: sub_6ED7EB70+158j
		mov	eax, [ebp+var_1E4]
		add	eax, 0Ch
		mov	[ebp+var_20C], eax

loc_6ED7FD5D:				; CODE XREF: sub_6ED7EB70+1254j
		mov	eax, [ebp+var_1D0]
		mov	ecx, [ebp+arg_0]
		mov	ebx, [ebp+var_208]
		mov	esi, [ebp+var_20C]
		shl	eax, 5
		add	eax, [ecx+19Ch]
		mov	[ebp+var_40], ebx
		mov	edx, [eax+4]
		mov	eax, [eax]
		mov	[esp+4], esi
		mov	[ebp+var_188], 14h
		mov	[ebp+var_38], edx
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_40]
		mov	[esp], eax
		call	[ebp+var_210]
		test	al, al
		jnz	loc_6ED7ECD0
		add	[ebp+var_1D0], 1
		mov	edx, [ebp+var_1C8]
		cmp	[ebp+var_1D0], edx
		jge	loc_6ED7ECD0
		jmp	short loc_6ED7FD5D
; ---------------------------------------------------------------------------

loc_6ED7FDC6:				; CODE XREF: sub_6ED7EB70+DC4j
		mov	esi, [ebp+var_194]
		mov	edx, [ebp+var_190]
		mov	[ebp+var_118], esi
		lock inc dword ptr [edx]
		setnz	al
		jmp	loc_6ED7F948
; ---------------------------------------------------------------------------

loc_6ED7FDE3:				; CODE XREF: sub_6ED7EB70+303j
		mov	eax, [ebp+var_30]
		mov	[ebp+var_188], 11h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED7EE79
; ---------------------------------------------------------------------------

loc_6ED7FDFE:				; CODE XREF: sub_6ED7EB70+29Fj
		lea	eax, [ebp+var_58]
		mov	[esp+4], eax
		lea	eax, [ebp+var_28]
		mov	[ebp+var_28], offset aHttpWww_w3_o_2 ; "http://www.w3.org/2000/xmlns/"
		mov	[esp], eax
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jnz	loc_6ED7EE15
		cmp	[ebp+var_50], 0
		jz	loc_6ED7EE15
		lea	eax, [ebp+var_10C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_2C]
		mov	[ebp+var_2C], offset aXmlns_4 ;	"xmlns"
		mov	[esp], eax
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_6ED7EE79
		jmp	loc_6ED7EE15
; ---------------------------------------------------------------------------

loc_6ED7FE54:				; DATA XREF: sub_6ED7EB70+31o
		add	ebp, 8
		mov	eax, [ebp+var_188]
		mov	ecx, [ebp+var_184]
		cmp	eax, 1
		mov	[ebp+var_228], ecx
		jz	loc_6ED7FF2F
		cmp	eax, 2
		jz	loc_6ED800AC
		cmp	eax, 3
		jz	loc_6ED8008F
		cmp	eax, 4
		jz	loc_6ED80072
		cmp	eax, 5
		jz	loc_6ED7FF2F
		cmp	eax, 6
		jz	loc_6ED8005A
		cmp	eax, 7
		jz	loc_6ED7FFA4
		cmp	eax, 8
		nop
		lea	esi, [esi+0]
		jz	loc_6ED7FF8C
		cmp	eax, 9
		jz	loc_6ED7FFD2
		cmp	eax, 0Ah
		jz	loc_6ED7FF8C
		cmp	eax, 0Bh
		nop
		lea	esi, [esi+0]
		jz	loc_6ED7FFBB
		cmp	eax, 0Ch
		jz	loc_6ED80040
		cmp	eax, 0Dh
		jz	loc_6ED80026
		cmp	eax, 0Eh
		nop
		lea	esi, [esi+0]
		jz	loc_6ED7FF8C
		cmp	eax, 0Fh
		jz	loc_6ED8000C
		cmp	eax, 10h
		jz	short loc_6ED7FF47
		cmp	eax, 11h
		jz	short loc_6ED7FF77
		cmp	eax, 12h
		lea	esi, [esi+0]
		jz	short loc_6ED7FF8C
		cmp	eax, 13h
		jz	short loc_6ED7FF5F
		lea	eax, [ebp+var_118]
		mov	[esp], eax
		mov	[ebp+var_188], 0
		call	sub_6ED94560

loc_6ED7FF2F:				; CODE XREF: sub_6ED7EB70+12FCj
					; sub_6ED7EB70+1320j ...
		lea	eax, [ebp+var_150]
		mov	[esp], eax
		mov	[ebp+var_188], 0
		call	_ZN19QXmlStreamAttributeD1Ev

loc_6ED7FF47:				; CODE XREF: sub_6ED7EB70+1392j
					; sub_6ED7EB70+14B1j
		mov	esi, [ebp+var_228]
		mov	[ebp+var_188], 0FFFFFFFFh
		mov	[esp], esi
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED7FF5F:				; CODE XREF: sub_6ED7EB70+13A5j
		mov	ecx, [ebp+var_228]
		mov	[ebp+var_188], 0FFFFFFFFh
		mov	[esp], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED7FF77:				; CODE XREF: sub_6ED7EB70+1397j
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_188], 0
		call	sub_6ED94560

loc_6ED7FF8C:				; CODE XREF: sub_6ED7EB70+1340j
					; sub_6ED7EB70+1352j ...
		mov	ebx, [ebp+var_228]
		mov	[ebp+var_188], 0FFFFFFFFh
		mov	[esp], ebx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED7FFA4:				; CODE XREF: sub_6ED7EB70+1332j
		lea	eax, [ebp+var_34]
		mov	[esp], eax
		mov	[ebp+var_188], 0
		call	sub_6ED94560
		jmp	short loc_6ED7FF8C
; ---------------------------------------------------------------------------

loc_6ED7FFBB:				; CODE XREF: sub_6ED7EB70+1360j
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		mov	[ebp+var_188], 0
		call	sub_6ED94560
		jmp	short loc_6ED7FF8C
; ---------------------------------------------------------------------------

loc_6ED7FFD2:				; CODE XREF: sub_6ED7EB70+1349j
		lea	eax, [ebp+var_88]
		mov	[esp], eax
		mov	[ebp+var_188], 0
		call	sub_6ED94560
		jmp	short loc_6ED7FF8C
; ---------------------------------------------------------------------------

loc_6ED7FFEC:				; CODE XREF: sub_6ED7EB70+201j
		mov	[ebp+var_188], 0FFFFFFFFh
		call	ds:_Z9qBadAllocv
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx+4]
		mov	edx, [ebx]
		add	eax, 1
		jmp	loc_6ED7ED7D
; ---------------------------------------------------------------------------

loc_6ED8000C:				; CODE XREF: sub_6ED7EB70+1389j
		lea	eax, [ebp+var_30]
		mov	[esp], eax
		mov	[ebp+var_188], 0
		call	sub_6ED94560
		jmp	loc_6ED7FF47
; ---------------------------------------------------------------------------

loc_6ED80026:				; CODE XREF: sub_6ED7EB70+1372j
		lea	eax, [ebp+var_64]
		mov	[esp], eax
		mov	[ebp+var_188], 0
		call	sub_6ED94560
		jmp	loc_6ED7FF8C
; ---------------------------------------------------------------------------

loc_6ED80040:				; CODE XREF: sub_6ED7EB70+1369j
		lea	eax, [ebp+var_70]
		mov	[esp], eax
		mov	[ebp+var_188], 0
		call	sub_6ED94560
		jmp	loc_6ED7FF8C
; ---------------------------------------------------------------------------

loc_6ED8005A:				; CODE XREF: sub_6ED7EB70+1329j
		mov	edx, [ebp+var_228]
		mov	[ebp+var_188], 0FFFFFFFFh
		mov	[esp], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED80072:				; CODE XREF: sub_6ED7EB70+1317j
		lea	eax, [ebp+var_E8]
		mov	[esp], eax
		mov	[ebp+var_188], 0
		call	sub_6ED94560
		jmp	loc_6ED7FF2F
; ---------------------------------------------------------------------------

loc_6ED8008F:				; CODE XREF: sub_6ED7EB70+130Ej
		lea	eax, [ebp+var_F4]
		mov	[esp], eax
		mov	[ebp+var_188], 0
		call	sub_6ED94560
		jmp	loc_6ED7FF2F
; ---------------------------------------------------------------------------

loc_6ED800AC:				; CODE XREF: sub_6ED7EB70+1305j
		lea	eax, [ebp+var_100]
		mov	[esp], eax
		mov	[ebp+var_188], 0
		call	sub_6ED94560
		jmp	loc_6ED7FF2F
sub_6ED7EB70	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 230. _ZN16QXmlStreamWriterD1Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamWriterD1Ev
_ZN16QXmlStreamWriterD1Ev proc near

var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9AD22
		mov	[ebp+var_18], offset sub_6ED8021B
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		mov	[ebp+var_40], edx
		jz	loc_6ED801A6
		test	byte ptr [edx+30h], 1
		jnz	loc_6ED801C0

loc_6ED80119:				; CODE XREF: _ZN16QXmlStreamWriterD1Ev+F5j
					; _ZN16QXmlStreamWriterD1Ev+10Cj
		mov	eax, [ebp+var_40]
		mov	eax, [eax+58h]
		test	eax, eax
		mov	[ebp+var_44], eax
		jz	short loc_6ED80141
		mov	[esp], eax
		mov	[ebp+var_38], 3
		call	ds:_ZN12QTextEncoderD1Ev
		mov	edx, [ebp+var_44]
		mov	[esp], edx
		call	sub_6ED988B0

loc_6ED80141:				; CODE XREF: _ZN16QXmlStreamWriterD1Ev+54j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+34h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED80200

loc_6ED80155:				; CODE XREF: _ZN16QXmlStreamWriterD1Ev+146j
		mov	eax, [ebp+var_40]
		mov	[ebp+var_48], eax
		mov	eax, [eax+18h]
		test	eax, eax
		jz	short loc_6ED80172
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_Z5qFreePv

loc_6ED80172:				; CODE XREF: _ZN16QXmlStreamWriterD1Ev+90j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED801E1

loc_6ED80182:				; CODE XREF: _ZN16QXmlStreamWriterD1Ev+127j
		mov	edx, [ebp+var_40]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED8019B
		mov	[esp], eax
		mov	[ebp+var_38], 0FFFFFFFFh
		call	ds:_Z5qFreePv

loc_6ED8019B:				; CODE XREF: _ZN16QXmlStreamWriterD1Ev+B9j
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED988B0

loc_6ED801A6:				; CODE XREF: _ZN16QXmlStreamWriterD1Ev+39j
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_3C]
		mov	dword ptr [edx], 0
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED801C0:				; CODE XREF: _ZN16QXmlStreamWriterD1Ev+43j
		mov	eax, [edx+28h]
		test	eax, eax
		jz	loc_6ED80119
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+10h]
		mov	[ebp+var_38], 3
		call	eax
		jmp	loc_6ED80119
; ---------------------------------------------------------------------------

loc_6ED801E1:				; CODE XREF: _ZN16QXmlStreamWriterD1Ev+B0j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+0Ch]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED80182
; ---------------------------------------------------------------------------
		align 10h

loc_6ED80200:				; CODE XREF: _ZN16QXmlStreamWriterD1Ev+7Fj
		mov	edx, [ebp+var_40]
		mov	eax, [edx+34h]
		mov	[ebp+var_38], 4
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	loc_6ED80155
_ZN16QXmlStreamWriterD1Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED8021B	proc near		; DATA XREF: _ZN16QXmlStreamWriterD1Ev+1Do
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-50h], edx
		jz	short loc_6ED8024B
		cmp	eax, 2
		jz	short loc_6ED8027C
		cmp	eax, 3
		jz	short loc_6ED80291
		mov	eax, [ebp-48h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED8024B:				; CODE XREF: sub_6ED8021B+Fj
		mov	eax, [ebp-50h]
		mov	edx, [ebp-48h]
		mov	[ebp-4Ch], eax
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED8026A
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0
		call	ds:_Z5qFreePv

loc_6ED8026A:				; CODE XREF: sub_6ED8021B+3Dj
		mov	eax, [ebp-4Ch]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED8027C:				; CODE XREF: sub_6ED8021B+14j
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 34h
		mov	[esp+0], eax
		call	sub_6ED90150

loc_6ED80291:				; CODE XREF: sub_6ED8021B+19j
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED91D00
		mov	edx, [ebp-50h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED8021B	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED802C0	proc near		; CODE XREF: sub_6ED807D0+FBp
					; _ZN16QXmlStreamWriter14writeNamespaceERK7QStringS2_+180p ...

var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_71		= byte ptr -71h
var_70		= dword	ptr -70h
var_69		= byte ptr -69h
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= byte ptr  10h
arg_C		= byte ptr  14h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 0A4h
		movzx	eax, [ebp+arg_8]
		movzx	edx, [ebp+arg_C]
		lea	ecx, [ebp+var_8]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9AD2E
		mov	[ebp+var_71], al
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_69], dl
		mov	[ebp+var_2C], ecx
		mov	[ebp+var_28], offset sub_6ED80758
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	ebx, [ebp+arg_0]
		mov	ebx, [ebx+4]
		test	ebx, ebx
		mov	[ebp+var_54], ebx
		js	short loc_6ED80375
		lea	eax, [ebx+ebx*2]
		shl	eax, 3
		mov	[ebp+var_58], eax
		mov	eax, ds:_ZeqRK7QStringRK10QStringRef
		mov	[ebp+var_50], eax
		nop

loc_6ED80320:				; CODE XREF: sub_6ED802C0+B3j
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_58]
		mov	ebx, [ebp+arg_4]
		add	ecx, [edx]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], ebx
		mov	eax, ecx
		add	eax, 0Ch
		mov	[ebp+var_5C], ecx
		mov	[esp+4], eax
		call	[ebp+var_50]
		test	al, al
		jz	short loc_6ED8036B
		cmp	[ebp+var_69], 0
		jnz	short loc_6ED80361

loc_6ED8034E:				; CODE XREF: sub_6ED802C0+A9j
					; sub_6ED802C0+CAj ...
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_5C]
		mov	ebx, [ebp+var_4]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED80361:				; CODE XREF: sub_6ED802C0+8Cj
		mov	eax, [ebp+var_5C]
		mov	eax, [eax+8]
		test	eax, eax
		jnz	short loc_6ED8034E

loc_6ED8036B:				; CODE XREF: sub_6ED802C0+86j
		sub	[ebp+var_58], 18h
		sub	[ebp+var_54], 1
		jns	short loc_6ED80320

loc_6ED80375:				; CODE XREF: sub_6ED802C0+4Cj
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	ebx, [eax+8]
		test	ebx, ebx
		jnz	short loc_6ED80390
		mov	ecx, [ebp+arg_0]
		add	ecx, 38h
		mov	[ebp+var_5C], ecx
		jmp	short loc_6ED8034E
; ---------------------------------------------------------------------------
		align 10h

loc_6ED80390:				; CODE XREF: sub_6ED802C0+BFj
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx+4]
		mov	ecx, [ebx+8]
		lea	edx, [eax+1]
		cmp	edx, ecx
		jl	loc_6ED804CE
		add	eax, 2
		add	ecx, ecx
		cmp	eax, ecx
		jge	short loc_6ED803AF
		mov	eax, ecx

loc_6ED803AF:				; CODE XREF: sub_6ED802C0+EBj
		mov	edx, [ebp+arg_0]
		mov	[edx+8], eax
		lea	eax, [eax+eax*2]
		shl	eax, 3
		mov	[esp+4], eax
		mov	eax, [edx]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_Z8qReallocPvj
		mov	ecx, [ebp+arg_0]
		test	eax, eax
		mov	[ecx], eax
		jz	loc_6ED8073B
		mov	edx, [ecx+4]
		add	edx, 1

loc_6ED803E4:				; CODE XREF: sub_6ED802C0+210j
					; sub_6ED802C0+493j
		mov	ecx, [ebp+arg_0]
		mov	ebx, [ebp+arg_4]
		mov	[ecx+4], edx
		lea	edx, [edx+edx*2]
		lea	edx, [eax+edx*8]
		mov	eax, [ebx]
		mov	[ebp+var_70], edx
		mov	ecx, [eax+8]
		test	ecx, ecx
		jnz	loc_6ED804D5
		mov	dword ptr [edx], 0
		mov	dword ptr [edx+8], 0
		mov	dword ptr [edx+4], 0

loc_6ED80417:				; CODE XREF: sub_6ED802C0+3C2j
					; sub_6ED802C0+3DBj
		mov	ecx, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		mov	eax, [ecx]
		mov	edx, [edx+10h]
		mov	ecx, [ebp+arg_0]
		mov	ebx, [eax+8]
		mov	[ebp+var_78], edx
		mov	edx, [ecx+0Ch]
		mov	[ebp+var_7C], ebx
		mov	ebx, [ebp+var_78]
		cmp	ebx, [edx+8]
		jz	short loc_6ED80457
		mov	eax, ecx
		add	eax, 0Ch
		mov	[esp], eax
		mov	[esp+4], ebx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString6resizeEi
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]

loc_6ED80457:				; CODE XREF: sub_6ED802C0+177j
		mov	ebx, [ebp+var_7C]
		mov	ecx, [ebp+arg_0]
		mov	[esp+0Ch], ebx
		mov	eax, [eax+0Ch]
		add	ecx, 0Ch
		mov	[ebp+var_80], ecx
		mov	[esp], ecx
		mov	[esp+8], eax
		mov	eax, [ebp+var_78]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	ds:_ZN7QString6insertEiPK5QChari
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_70]
		mov	eax, [ebp+var_78]
		add	[edx+10h], ebx
		mov	ebx, [ebp+var_80]
		mov	edx, [ebp+var_7C]
		cmp	[ebp+var_71], 0
		mov	[ecx+10h], eax
		mov	[ecx+0Ch], ebx
		mov	[ecx+14h], edx
		mov	[ebp+var_5C], ecx
		jz	loc_6ED8034E
		mov	ebx, [ebp+arg_0]
		mov	[esp+4], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], ebx
		call	sub_6ED776A0
		mov	eax, [ebp+var_70]
		mov	[ebp+var_5C], eax
		jmp	loc_6ED8034E
; ---------------------------------------------------------------------------

loc_6ED804CE:				; CODE XREF: sub_6ED802C0+DEj
		mov	eax, [ebx]
		jmp	loc_6ED803E4
; ---------------------------------------------------------------------------

loc_6ED804D5:				; CODE XREF: sub_6ED802C0+13Dj
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+5Ch]
		add	eax, 1
		mov	[edx+5Ch], eax
		nop

loc_6ED804F0:				; CODE XREF: sub_6ED802C0+433j
		lea	ecx, [eax+1]
		lea	ebx, [ebp+var_10]
		mov	[ebp+var_68], ecx
		mov	dword ptr [esp+8], 0Ah
		mov	[esp+4], eax
		mov	[esp], ebx
		mov	[ebp+var_48], 4
		call	ds:_ZN7QString6numberEii
		mov	eax, [ebp+var_10]
		sub	esp, 4
		mov	dword ptr [esp+8], 0
		mov	eax, [eax+8]
		mov	[ebp+var_48], 3
		add	eax, 1
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		call	ds:_ZN7QStringC1EiN2Qt14InitializationE
		mov	eax, [ebp+var_14]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED80728

loc_6ED8054E:				; CODE XREF: sub_6ED802C0+470j
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN7QString7reallocEv
		mov	eax, [ebp+var_14]
		mov	edx, [eax+0Ch]

loc_6ED80567:				; CODE XREF: sub_6ED802C0+476j
		mov	eax, [ebp+var_10]
		lea	ecx, [edx+2]
		mov	word ptr [edx],	6Eh
		mov	edx, [eax+8]
		mov	eax, [eax+0Ch]
		mov	[esp], ecx	; void *
		add	edx, edx
		mov	[esp+8], edx	; size_t
		mov	[esp+4], eax	; void *
		call	memcpy
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED80710

loc_6ED805B5:				; CODE XREF: sub_6ED802C0+463j
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED806F8

loc_6ED805C6:				; CODE XREF: sub_6ED802C0+44Bj
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+4]
		sub	eax, 1
		mov	[ebp+var_60], eax
		jns	loc_6ED806A0

loc_6ED805D8:				; CODE XREF: sub_6ED802C0+420j
					; sub_6ED802C0+42Aj
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_C]
		mov	ebx, [ebp+arg_0]
		mov	edx, [edx+10h]
		mov	ecx, [eax+8]
		mov	[ebp+var_84], edx
		mov	edx, [ebx+0Ch]
		mov	[ebp+var_88], ecx
		mov	ecx, [ebp+var_84]
		cmp	ecx, [edx+8]
		jz	short loc_6ED8061D
		mov	eax, ebx
		add	eax, 0Ch
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	[ebp+var_48], 4
		call	ds:_ZN7QString6resizeEi
		mov	eax, [ebp+var_C]

loc_6ED8061D:				; CODE XREF: sub_6ED802C0+33Fj
		mov	edx, [ebp+var_88]
		mov	ebx, [ebp+arg_0]
		mov	ecx, [ebp+var_84]
		mov	[esp+0Ch], edx
		mov	eax, [eax+0Ch]
		add	ebx, 0Ch
		mov	[ebp+var_8C], ebx
		mov	[esp+4], ecx
		mov	[esp+8], eax
		mov	[esp], ebx
		mov	[ebp+var_48], 4
		call	ds:_ZN7QString6insertEiPK5QChari
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebp+var_88]
		mov	edx, [ebp+var_70]
		mov	ecx, [ebp+var_8C]
		add	[ebx+10h], eax
		mov	ebx, [ebp+var_84]
		mov	[edx+8], eax
		mov	eax, [ebp+var_C]
		mov	[edx], ecx
		mov	[edx+4], ebx
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED80417
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED80417
; ---------------------------------------------------------------------------

loc_6ED806A0:				; CODE XREF: sub_6ED802C0+312j
		lea	eax, [eax+eax*2]
		shl	eax, 3
		mov	[ebp+var_64], eax
		lea	esi, [esi+0]

loc_6ED806B0:				; CODE XREF: sub_6ED802C0+41Bj
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebp+var_64]
		add	eax, [ebx]
		mov	[ebp+var_48], 4
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZeqRK7QStringRK10QStringRef
		test	al, al
		jnz	short loc_6ED806E5
		sub	[ebp+var_64], 18h
		sub	[ebp+var_60], 1
		jns	short loc_6ED806B0
		lea	esi, [esi+0]
		jmp	loc_6ED805D8
; ---------------------------------------------------------------------------

loc_6ED806E5:				; CODE XREF: sub_6ED802C0+411j
		mov	eax, [ebp+var_60]
		test	eax, eax
		js	loc_6ED805D8
		mov	eax, [ebp+var_68]
		jmp	loc_6ED804F0
; ---------------------------------------------------------------------------

loc_6ED806F8:				; CODE XREF: sub_6ED802C0+300j
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED805C6
; ---------------------------------------------------------------------------

loc_6ED80710:				; CODE XREF: sub_6ED802C0+2EFj
		mov	eax, [ebp+var_14]
		mov	[ebp+var_48], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED805B5
; ---------------------------------------------------------------------------

loc_6ED80728:				; CODE XREF: sub_6ED802C0+288j
		mov	edx, [eax+0Ch]
		add	eax, 12h
		cmp	edx, eax
		jnz	loc_6ED8054E
		jmp	loc_6ED80567
; ---------------------------------------------------------------------------

loc_6ED8073B:				; CODE XREF: sub_6ED802C0+118j
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_Z9qBadAllocv
		mov	ebx, [ebp+arg_0]
		mov	edx, [ebx+4]
		mov	eax, [ebx]
		add	edx, 1
		jmp	loc_6ED803E4
sub_6ED802C0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED80758	proc near		; DATA XREF: sub_6ED802C0+2Fo
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-90h], edx
		jz	short loc_6ED80776
		cmp	eax, 2
		jz	short loc_6ED80788
		cmp	eax, 3
		jz	short loc_6ED8079A

loc_6ED80776:				; CODE XREF: sub_6ED80758+12j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED80788:				; CODE XREF: sub_6ED80758+17j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED8079A:				; CODE XREF: sub_6ED80758+1Cj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-90h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED80758	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED807D0	proc near		; CODE XREF: _ZN16QXmlStreamWriter17writeStartElementERK7QStringS2_+10j
					; _ZN16QXmlStreamWriter16writeTextElementERK7QStringS2_S2_+28p	...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_38], 0
		mov	[esp+3Ch+var_3C], ebx
		call	sub_6ED77880
		test	al, al
		jnz	short loc_6ED807F9
		test	byte ptr [ebx+30h], 40h
		jnz	loc_6ED80977

loc_6ED807F9:				; CODE XREF: sub_6ED807D0+1Dj
		mov	eax, [ebx+1Ch]
		mov	ecx, [ebx+20h]
		lea	edx, [eax+1]
		cmp	edx, ecx
		jl	loc_6ED8099A

loc_6ED8080A:				; CODE XREF: sub_6ED807D0+1C4j
		add	eax, 2
		add	ecx, ecx
		cmp	eax, ecx
		jl	loc_6ED80970

loc_6ED80817:				; CODE XREF: sub_6ED807D0+1A2j
		mov	[ebx+20h], eax
		imul	eax, 38h
		mov	[esp+3Ch+var_38], eax
		mov	eax, [ebx+18h]
		mov	[esp+3Ch+var_3C], eax
		call	ds:_Z8qReallocPvj
		test	eax, eax
		mov	[ebx+18h], eax
		jz	loc_6ED809CE

loc_6ED80838:				; CODE XREF: sub_6ED807D0+207j
		mov	edx, [ebx+1Ch]
		add	edx, 1

loc_6ED8083E:				; CODE XREF: sub_6ED807D0+1CDj
		imul	esi, edx, 38h
		mov	edi, [ebx+10h]
		mov	[ebx+1Ch], edx
		mov	edx, [esp+3Ch+arg_8]
		mov	ecx, [ebx+0Ch]
		lea	esi, [eax+esi]
		mov	[esi+30h], edi
		mov	eax, [ebx+4]
		add	eax, 1
		mov	[esi+34h], eax
		mov	eax, [edx]
		lea	edx, [ebx+0Ch]
		cmp	edi, [ecx+8]
		mov	ebp, [eax+8]
		jz	short loc_6ED80885
		mov	[esp+3Ch+var_3C], edx
		mov	[esp+3Ch+var_20], edx
		mov	[esp+3Ch+var_38], edi
		call	ds:_ZN7QString6resizeEi
		mov	ecx, [esp+3Ch+arg_8]
		mov	edx, [esp+3Ch+var_20]
		mov	eax, [ecx]

loc_6ED80885:				; CODE XREF: sub_6ED807D0+98j
		mov	[esp+3Ch+var_30], ebp
		mov	eax, [eax+0Ch]
		mov	[esp+3Ch+var_20], edx
		mov	[esp+3Ch+var_3C], edx
		mov	[esp+3Ch+var_38], edi
		mov	[esp+3Ch+var_34], eax
		call	ds:_ZN7QString6insertEiPK5QChari
		mov	edx, [esp+3Ch+var_20]
		add	[ebx+10h], ebp
		mov	eax, [esp+3Ch+arg_4]
		mov	[esi+4], edi
		mov	[esi], edx
		mov	[esi+8], ebp
		mov	[esp+3Ch+var_30], 0
		mov	[esp+3Ch+var_34], 0
		mov	[esp+3Ch+var_38], eax
		mov	[esp+3Ch+var_3C], ebx
		call	sub_6ED802C0
		mov	edx, [eax]
		mov	[esi+18h], edx
		mov	edx, [eax+4]
		mov	[esi+1Ch], edx
		mov	edx, [eax+8]
		mov	[esi+20h], edx
		mov	edx, [eax+0Ch]
		mov	[esi+24h], edx
		mov	edx, [eax+10h]
		mov	eax, [eax+14h]
		mov	[esi+28h], edx
		mov	[esi+2Ch], eax
		mov	[esp+3Ch+var_34], 1
		mov	[esp+3Ch+var_38], offset asc_6EDA1CDD ;	"<"
		mov	[esp+3Ch+var_3C], ebx
		call	sub_6ED77460
		mov	edx, [esi+20h]
		test	edx, edx
		jnz	loc_6ED809A2

loc_6ED80916:				; CODE XREF: sub_6ED807D0+1F9j
		mov	[esp+3Ch+var_38], esi
		mov	[esp+3Ch+var_3C], ebx
		call	sub_6ED72900
		mov	eax, [ebx+4]
		mov	edi, [ebx+50h]
		or	byte ptr [ebx+30h], 0Ah
		add	eax, 1
		cmp	edi, eax
		jge	short loc_6ED80963
		lea	ebp, [edi+edi*2]
		shl	ebp, 3
		lea	esi, [esi+0]

loc_6ED80940:				; CODE XREF: sub_6ED807D0+18Ej
		mov	eax, [ebx]
		add	edi, 1
		mov	[esp+3Ch+var_3C], ebx
		add	eax, ebp
		add	ebp, 18h
		mov	[esp+3Ch+var_38], eax
		call	sub_6ED776A0
		mov	eax, [ebx+4]
		add	eax, 1
		cmp	edi, eax
		jl	short loc_6ED80940
		mov	edi, [ebx+50h]

loc_6ED80963:				; CODE XREF: sub_6ED807D0+161j
		mov	[esi+34h], edi
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED80970:				; CODE XREF: sub_6ED807D0+41j
		mov	eax, ecx
		jmp	loc_6ED80817
; ---------------------------------------------------------------------------

loc_6ED80977:				; CODE XREF: sub_6ED807D0+23j
		mov	eax, [ebx+1Ch]
		mov	[esp+3Ch+var_3C], ebx
		add	eax, 1
		mov	[esp+3Ch+var_38], eax
		call	sub_6ED775A0
		mov	eax, [ebx+1Ch]
		mov	ecx, [ebx+20h]
		lea	edx, [eax+1]
		cmp	edx, ecx
		jge	loc_6ED8080A

loc_6ED8099A:				; CODE XREF: sub_6ED807D0+34j
		mov	eax, [ebx+18h]
		jmp	loc_6ED8083E
; ---------------------------------------------------------------------------

loc_6ED809A2:				; CODE XREF: sub_6ED807D0+140j
		lea	eax, [esi+18h]
		mov	[esp+3Ch+var_38], eax
		mov	[esp+3Ch+var_3C], ebx
		call	sub_6ED72900
		mov	[esp+3Ch+var_34], 1
		mov	[esp+3Ch+var_38], offset asc_6EDA1CDB ;	":"
		mov	[esp+3Ch+var_3C], ebx
		call	sub_6ED77460
		jmp	loc_6ED80916
; ---------------------------------------------------------------------------

loc_6ED809CE:				; CODE XREF: sub_6ED807D0+62j
		call	ds:_Z9qBadAllocv
		mov	eax, [ebx+18h]
		jmp	loc_6ED80838
sub_6ED807D0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 210. _ZN16QXmlStreamWriter17writeStartElementERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlStreamWriter17writeStartElementERK7QStringS2_
_ZN16QXmlStreamWriter17writeStartElementERK7QStringS2_ proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax]
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	sub_6ED807D0
_ZN16QXmlStreamWriter17writeStartElementERK7QStringS2_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 204. _ZN16QXmlStreamWriter16writeTextElementERK7QStringS2_S2_

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlStreamWriter16writeTextElementERK7QStringS2_S2_
_ZN16QXmlStreamWriter16writeTextElementERK7QStringS2_S2_ proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_C]
		mov	[esp+1Ch+var_14], eax
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [ebx]
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED807D0
		mov	[esp+1Ch+var_18], esi
		mov	[esp+1Ch+var_1C], ebx
		call	_ZN16QXmlStreamWriter15writeCharactersERK7QString
		mov	esi, [esp+1Ch+var_4]
		mov	[esp+1Ch+arg_0], ebx
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		jmp	_ZN16QXmlStreamWriter15writeEndElementEv
_ZN16QXmlStreamWriter16writeTextElementERK7QStringS2_S2_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 209. _ZN16QXmlStreamWriter17writeStartElementERK7QString

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamWriter17writeStartElementERK7QString
_ZN16QXmlStreamWriter17writeStartElementERK7QString proc near
					; CODE XREF: _ZN16QXmlStreamWriter16writeTextElementERK7QStringS2_+1Ep

var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9AD3A
		mov	[ebp+var_28], offset sub_6ED80ADC
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	edx, [eax]
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	eax, [ebp+arg_4]
		mov	[esp], edx
		mov	[ebp+var_48], 1
		mov	[esp+8], eax
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		call	sub_6ED807D0
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED80ACF
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED80ACF:				; CODE XREF: _ZN16QXmlStreamWriter17writeStartElementERK7QString+6Aj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlStreamWriter17writeStartElementERK7QString endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED80ADC	proc near		; DATA XREF: _ZN16QXmlStreamWriter17writeStartElementERK7QString+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-50h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp-50h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED80ADC	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 203. _ZN16QXmlStreamWriter16writeTextElementERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlStreamWriter16writeTextElementERK7QStringS2_
_ZN16QXmlStreamWriter16writeTextElementERK7QStringS2_ proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_18], eax
		mov	[esp+1Ch+var_1C], ebx
		call	_ZN16QXmlStreamWriter17writeStartElementERK7QString
		mov	[esp+1Ch+var_18], esi
		mov	[esp+1Ch+var_1C], ebx
		call	_ZN16QXmlStreamWriter15writeCharactersERK7QString
		mov	esi, [esp+1Ch+var_4]
		mov	[esp+1Ch+arg_0], ebx
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		jmp	_ZN16QXmlStreamWriter15writeEndElementEv
_ZN16QXmlStreamWriter16writeTextElementERK7QStringS2_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 208. _ZN16QXmlStreamWriter17writeEmptyElementERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlStreamWriter17writeEmptyElementERK7QStringS2_
_ZN16QXmlStreamWriter17writeEmptyElementERK7QStringS2_ proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_0]
		mov	ebx, [eax]
		mov	eax, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_14], eax
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED807D0
		or	byte ptr [ebx+30h], 4
		add	esp, 18h
		pop	ebx
		retn
_ZN16QXmlStreamWriter17writeEmptyElementERK7QStringS2_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 207. _ZN16QXmlStreamWriter17writeEmptyElementERK7QString

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamWriter17writeEmptyElementERK7QString
_ZN16QXmlStreamWriter17writeEmptyElementERK7QString proc near

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9AD40
		mov	[ebp+var_28], offset sub_6ED80C29
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		mov	[ebp+var_50], eax
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_48], 1
		mov	[esp+8], eax
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_50]
		mov	[esp], eax
		call	sub_6ED807D0
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED80C15
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED80C15:				; CODE XREF: _ZN16QXmlStreamWriter17writeEmptyElementERK7QString+70j
		mov	eax, [ebp+var_50]
		or	byte ptr [eax+30h], 4
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QXmlStreamWriter17writeEmptyElementERK7QString endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED80C29	proc near		; DATA XREF: _ZN16QXmlStreamWriter17writeEmptyElementERK7QString+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-54h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED80C29	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 198. _ZN16QXmlStreamWriter14writeNamespaceERK7QStringS2_

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlStreamWriter14writeNamespaceERK7QStringS2_
_ZN16QXmlStreamWriter14writeNamespaceERK7QStringS2_ proc near
					; CODE XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader+2CCp

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_30		= dword	ptr -30h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 4Ch
		mov	eax, [esp+4Ch+arg_4]
		mov	edx, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_10], ebx
		mov	[esp+4Ch+var_C], esi
		mov	[esp+4Ch+var_20], eax
		mov	eax, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_8], edi
		mov	[esp+4Ch+var_4], ebp
		mov	ebx, [eax]
		mov	eax, [edx]
		mov	ecx, [eax+8]
		test	ecx, ecx
		jz	loc_6ED80DC0
		mov	edi, [ebx+4]
		mov	esi, [ebx+8]
		lea	ecx, [edi+1]
		cmp	ecx, esi
		jl	short loc_6ED80CE2
		lea	eax, [edi+2]
		add	esi, esi
		cmp	eax, esi
		jl	loc_6ED80E07

loc_6ED80CAC:				; CODE XREF: _ZN16QXmlStreamWriter14writeNamespaceERK7QStringS2_+1A9j
		mov	[ebx+8], eax
		lea	eax, [eax+eax*2]
		shl	eax, 3
		mov	[esp+4Ch+var_48], eax
		mov	eax, [ebx]
		mov	[esp+4Ch+var_28], edx
		mov	[esp+4Ch+var_4C], eax
		call	ds:_Z8qReallocPvj
		mov	edx, [esp+4Ch+var_28]
		test	eax, eax
		mov	esi, eax
		mov	[ebx], eax
		jz	loc_6ED80E10
		mov	ecx, [ebx+4]
		mov	eax, [edx]
		add	ecx, 1
		jmp	short loc_6ED80CE4
; ---------------------------------------------------------------------------

loc_6ED80CE2:				; CODE XREF: _ZN16QXmlStreamWriter14writeNamespaceERK7QStringS2_+3Dj
		mov	esi, [ebx]

loc_6ED80CE4:				; CODE XREF: _ZN16QXmlStreamWriter14writeNamespaceERK7QStringS2_+80j
					; _ZN16QXmlStreamWriter14writeNamespaceERK7QStringS2_+1C8j
		mov	[ebx+4], ecx
		lea	ecx, [ecx+ecx*2]
		mov	ebp, [ebx+10h]
		lea	esi, [esi+ecx*8]
		mov	ecx, [eax+8]
		lea	edi, [ebx+0Ch]
		mov	[esp+4Ch+var_30], ecx
		mov	ecx, [ebx+0Ch]
		cmp	ebp, [ecx+8]
		jz	short loc_6ED80D19
		mov	[esp+4Ch+var_28], edx
		mov	[esp+4Ch+var_48], ebp
		mov	[esp+4Ch+var_4C], edi
		call	ds:_ZN7QString6resizeEi
		mov	edx, [esp+4Ch+var_28]
		mov	eax, [edx]

loc_6ED80D19:				; CODE XREF: _ZN16QXmlStreamWriter14writeNamespaceERK7QStringS2_+A0j
		mov	edx, [esp+4Ch+var_30]
		mov	ecx, ds:_ZN7QString6insertEiPK5QChari
		mov	[esp+4Ch+var_40], edx
		mov	eax, [eax+0Ch]
		mov	[esp+4Ch+var_24], ecx
		mov	[esp+4Ch+var_48], ebp
		mov	[esp+4Ch+var_4C], edi
		mov	[esp+4Ch+var_44], eax
		call	ecx ; _ZN7QString6insertEiPK5QChari
		mov	eax, [esp+4Ch+var_30]
		mov	edx, [esp+4Ch+var_20]
		mov	ecx, [ebx+0Ch]
		add	[ebx+10h], eax
		mov	[esi+8], eax
		mov	eax, [edx]
		mov	[esi+4], ebp
		mov	ebp, [ebx+10h]
		cmp	ebp, [ecx+8]
		mov	[esi], edi
		mov	edx, [eax+8]
		jz	short loc_6ED80D79
		mov	[esp+4Ch+var_28], edx
		mov	[esp+4Ch+var_48], ebp
		mov	[esp+4Ch+var_4C], edi
		call	ds:_ZN7QString6resizeEi
		mov	ecx, [esp+4Ch+var_20]
		mov	edx, [esp+4Ch+var_28]
		mov	eax, [ecx]

loc_6ED80D79:				; CODE XREF: _ZN16QXmlStreamWriter14writeNamespaceERK7QStringS2_+FCj
		mov	[esp+4Ch+var_40], edx
		mov	eax, [eax+0Ch]
		mov	[esp+4Ch+var_28], edx
		mov	[esp+4Ch+var_48], ebp
		mov	[esp+4Ch+var_4C], edi
		mov	[esp+4Ch+var_44], eax
		call	[esp+4Ch+var_24]
		mov	edx, [esp+4Ch+var_28]
		add	[ebx+10h], edx
		mov	[esi+0Ch], edi
		mov	[esi+10h], ebp
		mov	[esi+14h], edx
		test	byte ptr [ebx+30h], 2
		jnz	short loc_6ED80DE7

loc_6ED80DA9:				; CODE XREF: _ZN16QXmlStreamWriter14writeNamespaceERK7QStringS2_+185j
		mov	ebx, [esp+4Ch+var_10]
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED80DC0:				; CODE XREF: _ZN16QXmlStreamWriter14writeNamespaceERK7QStringS2_+2Cj
		mov	[esp+4Ch+var_40], 0
		movzx	eax, byte ptr [ebx+30h]
		mov	edx, [esp+4Ch+var_20]
		mov	[esp+4Ch+var_4C], ebx
		shr	al, 1
		and	eax, 1
		mov	[esp+4Ch+var_44], eax
		mov	[esp+4Ch+var_48], edx
		call	sub_6ED802C0
		jmp	short loc_6ED80DA9
; ---------------------------------------------------------------------------

loc_6ED80DE7:				; CODE XREF: _ZN16QXmlStreamWriter14writeNamespaceERK7QStringS2_+147j
		mov	[esp+4Ch+arg_4], esi
		mov	edi, [esp+4Ch+var_8]
		mov	[esp+4Ch+arg_0], ebx
		mov	esi, [esp+4Ch+var_C]
		mov	ebx, [esp+4Ch+var_10]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		jmp	sub_6ED776A0
; ---------------------------------------------------------------------------

loc_6ED80E07:				; CODE XREF: _ZN16QXmlStreamWriter14writeNamespaceERK7QStringS2_+46j
		mov	eax, esi
		jmp	loc_6ED80CAC
; ---------------------------------------------------------------------------
		align 10h

loc_6ED80E10:				; CODE XREF: _ZN16QXmlStreamWriter14writeNamespaceERK7QStringS2_+72j
		mov	[esp+4Ch+var_28], edx
		call	ds:_Z9qBadAllocv
		mov	ecx, [ebx+4]
		mov	edx, [esp+4Ch+var_28]
		mov	esi, [ebx]
		add	ecx, 1
		mov	eax, [edx]
		jmp	loc_6ED80CE4
_ZN16QXmlStreamWriter14writeNamespaceERK7QStringS2_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 197. _ZN16QXmlStreamWriter14writeAttributeERK7QStringS2_S2_

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlStreamWriter14writeAttributeERK7QStringS2_S2_
_ZN16QXmlStreamWriter14writeAttributeERK7QStringS2_S2_ proc near
					; CODE XREF: _ZN16QXmlStreamWriter14writeAttributeERK19QXmlStreamAttribute+1C8p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 2Ch
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_C], esi
		mov	esi, [esp+2Ch+arg_C]
		mov	[esp+2Ch+var_8], edi
		mov	edi, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_4], ebp
		mov	[esp+2Ch+var_10], ebx
		mov	ebx, [eax]
		mov	eax, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_20], 1
		mov	[esp+2Ch+var_24], 1
		mov	[esp+2Ch+var_2C], ebx
		mov	[esp+2Ch+var_28], eax
		call	sub_6ED802C0
		mov	[esp+2Ch+var_24], 1
		mov	[esp+2Ch+var_28], offset asc_6EDA1A89 ;	" "
		mov	[esp+2Ch+var_2C], ebx
		mov	ebp, eax
		call	sub_6ED77460
		mov	eax, [ebp+8]
		test	eax, eax
		jz	short loc_6ED80EB6
		mov	[esp+2Ch+var_28], ebp
		mov	[esp+2Ch+var_2C], ebx
		call	sub_6ED72900
		mov	[esp+2Ch+var_24], 1
		mov	[esp+2Ch+var_28], offset asc_6EDA1CDB ;	":"
		mov	[esp+2Ch+var_2C], ebx
		call	sub_6ED77460

loc_6ED80EB6:				; CODE XREF: _ZN16QXmlStreamWriter14writeAttributeERK7QStringS2_S2_+60j
		mov	[esp+2Ch+var_28], edi
		mov	[esp+2Ch+var_2C], ebx
		call	sub_6ED72A90
		mov	[esp+2Ch+var_2C], ebx
		mov	[esp+2Ch+var_24], 2
		mov	[esp+2Ch+var_28], offset word_6EDA1C3E
		call	sub_6ED77460
		mov	[esp+2Ch+var_28], esi
		mov	[esp+2Ch+var_2C], ebx
		mov	[esp+2Ch+var_24], 1
		call	sub_6ED73E40
		mov	esi, [esp+2Ch+var_C]
		mov	[esp+2Ch+arg_0], ebx
		mov	edi, [esp+2Ch+var_8]
		mov	[esp+2Ch+arg_8], 1
		mov	ebx, [esp+2Ch+var_10]
		mov	[esp+2Ch+arg_4], offset	byte_6EDA1C41
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		jmp	sub_6ED77460
_ZN16QXmlStreamWriter14writeAttributeERK7QStringS2_S2_ endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 195. _ZN16QXmlStreamWriter14writeAttributeERK19QXmlStreamAttribute

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamWriter14writeAttributeERK19QXmlStreamAttribute
_ZN16QXmlStreamWriter14writeAttributeERK19QXmlStreamAttribute proc near
					; CODE XREF: _ZN16QXmlStreamWriter15writeAttributesERK20QXmlStreamAttributes+32p

var_8C		= byte ptr -8Ch
var_88		= dword	ptr -88h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0A8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_6C], eax
		lea	eax, [ebp+var_8C]
		mov	[ebp+var_74], offset sub_6ED997C0
		mov	[ebp+var_70], offset word_6ED9AD46
		mov	[ebp+var_68], offset sub_6ED811BD
		mov	[ebp+var_64], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	ecx, [edx+14h]
		test	ecx, ecx
		jnz	loc_6ED81023
		mov	eax, [edx+2Ch]
		mov	ecx, edx
		mov	edx, [edx+28h]
		add	ecx, 24h
		mov	[ebp+var_34], ecx
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_10]
		mov	[ebp+var_30], edx
		lea	edx, [ebp+var_34]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_88], 7
		call	ds:_ZNK10QStringRef8toStringEv
		mov	edx, [ebp+arg_4]
		sub	esp, 4
		mov	eax, [edx+20h]
		mov	ecx, edx
		mov	edx, [edx+1Ch]
		add	ecx, 18h
		mov	[ebp+var_28], ecx
		mov	[ebp+var_20], eax
		lea	eax, [ebp+var_C]
		mov	[ebp+var_24], edx
		lea	edx, [ebp+var_28]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_88], 6
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_10]
		mov	[esp+8], eax
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		mov	[ebp+var_88], 5
		call	_ZN16QXmlStreamWriter14writeAttributeERK7QStringS2_
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED81146

loc_6ED81002:				; CODE XREF: _ZN16QXmlStreamWriter14writeAttributeERK19QXmlStreamAttribute+23Cj
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED81161

loc_6ED81013:				; CODE XREF: _ZN16QXmlStreamWriter14writeAttributeERK19QXmlStreamAttribute+1FAj
		lea	eax, [ebp+var_8C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED81023:				; CODE XREF: _ZN16QXmlStreamWriter14writeAttributeERK19QXmlStreamAttribute+3Dj
		mov	ecx, [ebp+arg_4]
		mov	eax, [ecx+2Ch]
		mov	edx, [ecx+28h]
		add	ecx, 24h
		mov	[ebp+var_58], ecx
		mov	[ebp+var_50], eax
		lea	eax, [ebp+var_1C]
		mov	[ebp+var_54], edx
		lea	edx, [ebp+var_58]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_88], 4
		call	ds:_ZNK10QStringRef8toStringEv
		mov	edx, [ebp+arg_4]
		sub	esp, 4
		mov	eax, [edx+8]
		mov	ecx, edx
		mov	edx, [edx+4]
		mov	[ebp+var_4C], ecx
		mov	[ebp+var_44], eax
		lea	eax, [ebp+var_18]
		mov	[ebp+var_48], edx
		lea	edx, [ebp+var_4C]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_88], 3
		call	ds:_ZNK10QStringRef8toStringEv
		mov	edx, [ebp+arg_4]
		sub	esp, 4
		mov	eax, [edx+14h]
		mov	ecx, edx
		mov	edx, [edx+10h]
		add	ecx, 0Ch
		mov	[ebp+var_40], ecx
		mov	[ebp+var_38], eax
		lea	eax, [ebp+var_14]
		mov	[ebp+var_3C], edx
		lea	edx, [ebp+var_40]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_88], 2
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_1C]
		mov	[esp+0Ch], eax
		lea	eax, [ebp+var_18]
		mov	[esp+8], eax
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		mov	[ebp+var_88], 1
		call	_ZN16QXmlStreamWriter14writeAttributeERK7QStringS2_S2_
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED81187

loc_6ED810FE:				; CODE XREF: _ZN16QXmlStreamWriter14writeAttributeERK19QXmlStreamAttribute+27Dj
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED811A2

loc_6ED8110F:				; CODE XREF: _ZN16QXmlStreamWriter14writeAttributeERK19QXmlStreamAttribute+298j
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED81013
		mov	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_88], 4
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_8C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED81146:				; CODE XREF: _ZN16QXmlStreamWriter14writeAttributeERK19QXmlStreamAttribute+DCj
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_88], 6
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED81002
; ---------------------------------------------------------------------------

loc_6ED81161:				; CODE XREF: _ZN16QXmlStreamWriter14writeAttributeERK19QXmlStreamAttribute+EDj
		mov	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_88], 7
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_8C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED81187:				; CODE XREF: _ZN16QXmlStreamWriter14writeAttributeERK19QXmlStreamAttribute+1D8j
		mov	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_88], 2
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED810FE
; ---------------------------------------------------------------------------

loc_6ED811A2:				; CODE XREF: _ZN16QXmlStreamWriter14writeAttributeERK19QXmlStreamAttribute+1E9j
		mov	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_88], 3
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED8110F
_ZN16QXmlStreamWriter14writeAttributeERK19QXmlStreamAttribute endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED811BD	proc near		; DATA XREF: _ZN16QXmlStreamWriter14writeAttributeERK19QXmlStreamAttribute+23o
		add	ebp, 8
		mov	eax, [ebp-88h]
		mov	edx, [ebp-84h]
		cmp	eax, 1
		mov	[ebp-90h], edx
		jz	short loc_6ED8120B
		cmp	eax, 2
		jz	short loc_6ED81220
		cmp	eax, 3
		jz	short loc_6ED81235
		cmp	eax, 4
		jz	short loc_6ED8124D
		cmp	eax, 5
		jz	short loc_6ED81262
		cmp	eax, 6
		xchg	ax, ax
		jz	loc_6ED81277
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_6ED94560

loc_6ED8120B:				; CODE XREF: sub_6ED811BD+18j
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_6ED94560

loc_6ED81220:				; CODE XREF: sub_6ED811BD+1Dj
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_6ED94560

loc_6ED81235:				; CODE XREF: sub_6ED811BD+22j
		mov	ecx, [ebp-90h]
		mov	[esp+0], ecx
		mov	dword ptr [ebp-88h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED8124D:				; CODE XREF: sub_6ED811BD+27j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_6ED94560

loc_6ED81262:				; CODE XREF: sub_6ED811BD+2Cj
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_6ED94560

loc_6ED81277:				; CODE XREF: sub_6ED811BD+33j
		mov	edx, [ebp-90h]
		mov	[esp+0], edx
		mov	dword ptr [ebp-88h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED811BD	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 199. _ZN16QXmlStreamWriter15writeAttributesERK20QXmlStreamAttributes

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlStreamWriter15writeAttributesERK20QXmlStreamAttributes
_ZN16QXmlStreamWriter15writeAttributesERK20QXmlStreamAttributes	proc near
					; CODE XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader+642p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		push	esi
		push	ebx
		sub	esp, 10h
		mov	esi, [esp+1Ch+arg_4]
		mov	edi, [esp+1Ch+arg_0]
		mov	eax, [esi]
		mov	ebx, [eax+8]
		test	ebx, ebx
		jle	short loc_6ED812CE
		xor	ebx, ebx
		lea	esi, [esi+0]

loc_6ED812B0:				; CODE XREF: _ZN16QXmlStreamWriter15writeAttributesERK20QXmlStreamAttributes+3Cj
		imul	eax, ebx, 38h
		add	ebx, 1
		add	eax, 10h
		add	eax, [esi]
		mov	[esp+1Ch+var_1C], edi
		mov	[esp+1Ch+var_18], eax
		call	_ZN16QXmlStreamWriter14writeAttributeERK19QXmlStreamAttribute
		mov	eax, [esi]
		cmp	ebx, [eax+8]
		jl	short loc_6ED812B0

loc_6ED812CE:				; CODE XREF: _ZN16QXmlStreamWriter15writeAttributesERK20QXmlStreamAttributes+15j
		add	esp, 10h
		pop	ebx
		pop	esi
		pop	edi
		retn
_ZN16QXmlStreamWriter15writeAttributesERK20QXmlStreamAttributes	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 206. _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader
_ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader proc near

var_108		= dword	ptr -108h
var_104		= dword	ptr -104h
var_100		= dword	ptr -100h
var_FC		= byte ptr -0FCh
var_F8		= dword	ptr -0F8h
var_E4		= dword	ptr -0E4h
var_E0		= dword	ptr -0E0h
var_DC		= dword	ptr -0DCh
var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= byte ptr -38h
var_34		= byte ptr -34h
var_30		= byte ptr -30h
var_2C		= byte ptr -2Ch
var_28		= byte ptr -28h
var_24		= byte ptr -24h
var_20		= byte ptr -20h
var_1C		= byte ptr -1Ch
var_18		= byte ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 124h
		mov	[ebp+var_DC], eax
		lea	eax, [ebp+var_FC]
		mov	[esp], eax
		mov	[ebp+var_E4], offset sub_6ED997C0
		mov	[ebp+var_E0], offset dword_6ED9AD58
		mov	[ebp+var_D8], offset sub_6ED819D4
		mov	[ebp+var_D4], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	edx, [eax+7Ch]
		cmp	edx, 0Ah	; switch 11 cases
		jbe	short loc_6ED81363

loc_6ED81332:				; CODE XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader:loc_6ED81363j
					; DATA XREF: .rdata:off_6EDA1F14o
		mov	dword ptr [esp], offset	aQxmlstreamwr_0	; jumptable 6ED81363 default case
		mov	[ebp+var_F8], 0FFFFFFFFh
		call	ds:_Z8qWarningPKcz
		lea	esi, [esi+0]

loc_6ED81350:				; CODE XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader:loc_6ED81363j
					; _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader+170j ...
		lea	eax, [ebp+var_FC] ; jumptable 6ED81363 case 0
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	ebx, [ebp+var_4]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED81363:				; CODE XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader+50j
		jmp	ds:off_6EDA1F14[edx*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_6ED81370:				; CODE XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader:loc_6ED81363j
					; DATA XREF: .rdata:off_6EDA1F14o
		mov	edx, [eax+138h]	; jumptable 6ED81363 case 10
		mov	[ebp+var_C0], edx
		mov	edx, [eax+13Ch]
		mov	eax, [eax+140h]
		mov	[ebp+var_F8], 3
		mov	[ebp+var_BC], edx
		lea	edx, [ebp+var_C0]
		mov	[ebp+var_B8], eax
		lea	eax, [ebp+var_3C]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		mov	edx, [ebp+arg_4]
		sub	esp, 4
		mov	eax, [edx]
		mov	edx, [eax+12Ch]
		mov	[ebp+var_B4], edx
		mov	edx, [eax+130h]
		mov	eax, [eax+134h]
		mov	[ebp+var_F8], 2
		mov	[ebp+var_B0], edx
		lea	edx, [ebp+var_B4]
		mov	[ebp+var_AC], eax
		lea	eax, [ebp+var_38]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		mov	ebx, [ebp+arg_0]
		sub	esp, 4
		lea	eax, [ebp+var_3C]
		mov	[esp+8], eax
		lea	eax, [ebp+var_38]
		mov	[esp+4], eax
		mov	[esp], ebx
		mov	[ebp+var_F8], 1
		call	_ZN16QXmlStreamWriter26writeProcessingInstructionERK7QStringS2_
		lea	eax, [ebp+var_38]
		mov	[esp], eax
		mov	[ebp+var_F8], 2
		call	sub_6ED94560
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_F8], 3
		call	sub_6ED94560
		jmp	loc_6ED81350	; jumptable 6ED81363 case 0
; ---------------------------------------------------------------------------

loc_6ED81455:				; CODE XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader:loc_6ED81363j
					; DATA XREF: .rdata:off_6EDA1F14o
		mov	ebx, [ebp+arg_0] ; jumptable 6ED81363 case 2
		mov	[ebp+var_F8], 0FFFFFFFFh
		mov	[esp], ebx
		call	_ZN16QXmlStreamWriter18writeStartDocumentEv
		jmp	loc_6ED81350	; jumptable 6ED81363 case 0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED81470:				; CODE XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader:loc_6ED81363j
					; DATA XREF: .rdata:off_6EDA1F14o
		mov	eax, [ebp+arg_0] ; jumptable 6ED81363 case 3
		mov	[ebp+var_F8], 0FFFFFFFFh
		mov	[esp], eax
		call	_ZN16QXmlStreamWriter16writeEndDocumentEv
		jmp	loc_6ED81350	; jumptable 6ED81363 case 0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED81490:				; CODE XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader:loc_6ED81363j
					; DATA XREF: .rdata:off_6EDA1F14o
		mov	edx, [ebp+arg_4] ; jumptable 6ED81363 case 4
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_F8], 0FFFFFFFFh
		mov	[esp+4], edx
		call	_ZNK16QXmlStreamReader21namespaceDeclarationsEv
		mov	eax, [ebp+var_C]
		mov	eax, [eax+8]
		sub	esp, 4
		test	eax, eax
		jle	loc_6ED81820
		mov	ebx, ds:_ZNK10QStringRef8toStringEv
		mov	[ebp+var_104], 0
		mov	[ebp+var_100], ebx
		jmp	short loc_6ED814FF
; ---------------------------------------------------------------------------

loc_6ED814D5:				; CODE XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader+2DCj
					; _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader+2F8j
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED81800

loc_6ED814E6:				; CODE XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader+536j
		mov	eax, [ebp+var_C]
		add	[ebp+var_104], 1
		mov	edx, [ebp+var_104]
		cmp	edx, [eax+8]
		jge	loc_6ED81820

loc_6ED814FF:				; CODE XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader+1F3j
		mov	eax, [ebp+var_C]
		mov	[ebp+var_108], eax
		mov	edx, [ebp+var_108]
		imul	eax, [ebp+var_104], 1Ch
		mov	ebx, [ebp+var_108]
		add	edx, eax
		mov	ecx, [edx+18h]
		lea	eax, [ebx+eax+10h]
		mov	edx, [edx+14h]
		mov	[ebp+var_54], eax
		lea	eax, [ebp+var_54]
		mov	[esp+4], eax
		mov	[ebp+var_4C], ecx
		mov	[ebp+var_50], edx
		lea	edx, [ebp+var_14]
		mov	[esp], edx
		mov	[ebp+var_F8], 14h
		call	[ebp+var_100]
		imul	eax, [ebp+var_104], 1Ch
		mov	edx, ebx
		sub	esp, 4
		add	edx, eax
		mov	ecx, [edx+24h]
		lea	eax, [ebx+eax+1Ch]
		mov	edx, [edx+20h]
		lea	ebx, [ebp+var_48]
		mov	[ebp+var_48], eax
		lea	eax, [ebp+var_10]
		mov	[esp+4], ebx
		mov	[ebp+var_40], ecx
		mov	[ebp+var_44], edx
		mov	[esp], eax
		mov	[ebp+var_F8], 13h
		call	ds:_ZNK10QStringRef8toStringEv
		mov	eax, [ebp+arg_0]
		sub	esp, 4
		lea	edx, [ebp+var_14]
		lea	ebx, [ebp+var_10]
		mov	[esp+8], edx
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	[ebp+var_F8], 12h
		call	_ZN16QXmlStreamWriter14writeNamespaceERK7QStringS2_
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED814D5
		mov	eax, [ebp+var_10]
		mov	[ebp+var_F8], 13h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED814D5
; ---------------------------------------------------------------------------
		align 10h

loc_6ED815E0:				; CODE XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader:loc_6ED81363j
					; DATA XREF: .rdata:off_6EDA1F14o
		mov	ebx, [ebp+arg_0] ; jumptable 6ED81363 case 5
		mov	[ebp+var_F8], 0FFFFFFFFh
		mov	[esp], ebx
		call	_ZN16QXmlStreamWriter15writeEndElementEv
		jmp	loc_6ED81350	; jumptable 6ED81363 case 0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED81600:				; CODE XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader:loc_6ED81363j
					; DATA XREF: .rdata:off_6EDA1F14o
		cmp	edx, 6		; jumptable 6ED81363 case 6
		jz	loc_6ED81956

loc_6ED81609:				; CODE XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader+67Dj
		mov	edx, [eax+0F0h]
		mov	[ebp+var_84], edx
		mov	edx, [eax+0F4h]
		mov	eax, [eax+0F8h]
		mov	[ebp+var_F8], 0Bh
		mov	[ebp+var_80], edx
		lea	edx, [ebp+var_84]
		mov	[ebp+var_7C], eax
		lea	eax, [ebp+var_28]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_28]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_F8], 0Ah
		mov	[esp], eax
		call	_ZN16QXmlStreamWriter15writeCharactersERK7QString
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_F8], 0Bh
		call	sub_6ED94560
		jmp	loc_6ED81350	; jumptable 6ED81363 case 0
; ---------------------------------------------------------------------------

loc_6ED81680:				; CODE XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader:loc_6ED81363j
					; DATA XREF: .rdata:off_6EDA1F14o
		mov	edx, [eax+0F0h]	; jumptable 6ED81363 case 7
		mov	[ebp+var_90], edx
		mov	edx, [eax+0F4h]
		mov	eax, [eax+0F8h]
		mov	[ebp+var_F8], 9
		mov	[ebp+var_8C], edx
		lea	edx, [ebp+var_90]
		mov	[ebp+var_88], eax
		lea	eax, [ebp+var_2C]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_2C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_F8], 8
		mov	[esp], eax
		call	_ZN16QXmlStreamWriter12writeCommentERK7QString
		lea	eax, [ebp+var_2C]
		mov	[esp], eax
		mov	[ebp+var_F8], 9
		call	sub_6ED94560
		jmp	loc_6ED81350	; jumptable 6ED81363 case 0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED81700:				; CODE XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader:loc_6ED81363j
					; DATA XREF: .rdata:off_6EDA1F14o
		mov	edx, [eax+0F0h]	; jumptable 6ED81363 case 8
		mov	[ebp+var_9C], edx
		mov	edx, [eax+0F4h]
		mov	eax, [eax+0F8h]
		mov	[ebp+var_F8], 7
		mov	[ebp+var_98], edx
		lea	edx, [ebp+var_9C]
		mov	[ebp+var_94], eax
		lea	eax, [ebp+var_30]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		mov	ebx, [ebp+arg_0]
		sub	esp, 4
		lea	eax, [ebp+var_30]
		mov	[esp+4], eax
		mov	[ebp+var_F8], 6
		mov	[esp], ebx
		call	_ZN16QXmlStreamWriter8writeDTDERK7QString
		lea	eax, [ebp+var_30]
		mov	[esp], eax
		mov	[ebp+var_F8], 7
		call	sub_6ED94560
		jmp	loc_6ED81350	; jumptable 6ED81363 case 0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED81780:				; CODE XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader:loc_6ED81363j
					; DATA XREF: .rdata:off_6EDA1F14o
		mov	edx, [eax+120h]	; jumptable 6ED81363 case 9
		mov	[ebp+var_A8], edx
		mov	edx, [eax+124h]
		mov	eax, [eax+128h]
		mov	[ebp+var_F8], 5
		mov	[ebp+var_A4], edx
		lea	edx, [ebp+var_A8]
		mov	[ebp+var_A0], eax
		lea	eax, [ebp+var_34]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		mov	edx, [ebp+arg_0]
		sub	esp, 4
		lea	eax, [ebp+var_34]
		mov	[esp+4], eax
		mov	[ebp+var_F8], 4
		mov	[esp], edx
		call	_ZN16QXmlStreamWriter20writeEntityReferenceERK7QString
		lea	eax, [ebp+var_34]
		mov	[esp], eax
		mov	[ebp+var_F8], 5
		call	sub_6ED94560
		jmp	loc_6ED81350	; jumptable 6ED81363 case 0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED81800:				; CODE XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader+200j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_F8], 14h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED814E6
; ---------------------------------------------------------------------------
		align 10h

loc_6ED81820:				; CODE XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader+1D7j
					; _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader+219j
		mov	ebx, [ebp+arg_4]
		mov	eax, [ebx]
		mov	edx, [eax+120h]
		mov	[ebp+var_6C], edx
		mov	edx, [eax+124h]
		mov	eax, [eax+128h]
		mov	[ebp+var_F8], 11h
		mov	[ebp+var_68], edx
		lea	edx, [ebp+var_6C]
		mov	[ebp+var_64], eax
		lea	eax, [ebp+var_1C]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		mov	eax, [ebx]
		sub	esp, 4
		mov	edx, [eax+108h]
		mov	[ebp+var_60], edx
		mov	edx, [eax+10Ch]
		mov	eax, [eax+110h]
		mov	[ebp+var_F8], 10h
		mov	[ebp+var_5C], edx
		lea	edx, [ebp+var_60]
		mov	[ebp+var_58], eax
		lea	eax, [ebp+var_18]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		mov	edx, [ebp+arg_0]
		sub	esp, 4
		lea	eax, [ebp+var_1C]
		mov	[esp+8], eax
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		mov	eax, [edx]
		mov	[ebp+var_F8], 0Fh
		mov	[esp], eax
		call	sub_6ED807D0
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_F8], 10h
		call	sub_6ED94560
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_F8], 11h
		call	sub_6ED94560
		mov	ebx, [ebp+arg_4]
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_F8], 15h
		mov	[esp+4], ebx
		call	_ZNK16QXmlStreamReader10attributesEv
		sub	esp, 4
		lea	eax, [ebp+var_20]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_F8], 0Eh
		mov	[esp], eax
		call	_ZN16QXmlStreamWriter15writeAttributesERK20QXmlStreamAttributes
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_F8], 15h
		call	sub_6ED91130
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_F8], 0FFFFFFFFh
		call	sub_6ED958D0
		jmp	loc_6ED81350	; jumptable 6ED81363 case 0
; ---------------------------------------------------------------------------

loc_6ED81956:				; CODE XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader+323j
		test	byte ptr [eax+180h], 4
		jz	loc_6ED81609
		mov	edx, [eax+0F0h]
		mov	[ebp+var_78], edx
		mov	edx, [eax+0F4h]
		mov	eax, [eax+0F8h]
		mov	[ebp+var_F8], 0Dh
		mov	[ebp+var_74], edx
		lea	edx, [ebp+var_78]
		mov	[ebp+var_70], eax
		lea	eax, [ebp+var_24]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_24]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_F8], 0Ch
		mov	[esp], eax
		call	_ZN16QXmlStreamWriter10writeCDATAERK7QString
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		mov	[ebp+var_F8], 0Dh
		call	sub_6ED94560
		jmp	loc_6ED81350	; jumptable 6ED81363 case 0
_ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED819D4	proc near		; DATA XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader+30o
		add	ebp, 8
		mov	eax, [ebp-0F8h]
		mov	edx, [ebp-0F4h]
		cmp	eax, 1
		mov	[ebp-10Ch], edx
		jz	loc_6ED81AAC
		cmp	eax, 2
		jz	loc_6ED81AC1
		cmp	eax, 3
		jz	loc_6ED81BFE
		cmp	eax, 4
		jz	loc_6ED81AC1
		cmp	eax, 5
		jz	loc_6ED81BD1
		cmp	eax, 6
		jz	loc_6ED81BE6
		cmp	eax, 7
		jz	loc_6ED81BBA
		cmp	eax, 8
		nop
		lea	esi, [esi+0]
		jz	loc_6ED81B88
		cmp	eax, 9
		jz	loc_6ED81BA0
		cmp	eax, 0Ah
		jz	short loc_6ED81AC1
		cmp	eax, 0Bh
		jz	loc_6ED81B73
		cmp	eax, 0Ch
		jz	loc_6ED81B88
		cmp	eax, 0Dh
		jz	loc_6ED81B5C
		cmp	eax, 0Eh
		jz	loc_6ED81B30
		cmp	eax, 0Fh
		nop
		lea	esi, [esi+0]
		jz	loc_6ED81B45
		cmp	eax, 10h
		jz	loc_6ED81B03
		cmp	eax, 11h
		jz	short loc_6ED81AD9
		cmp	eax, 12h
		jz	short loc_6ED81AEE
		cmp	eax, 13h
		lea	esi, [esi+0]
		jz	short loc_6ED81B03
		cmp	eax, 14h
		jz	short loc_6ED81B03
		lea	eax, [ebp-38h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_6ED94560

loc_6ED81AAC:				; CODE XREF: sub_6ED819D4+18j
		lea	eax, [ebp-3Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_6ED94560

loc_6ED81AC1:				; CODE XREF: sub_6ED819D4+21j
					; sub_6ED819D4+33j ...
		mov	ebx, [ebp-10Ch]
		mov	dword ptr [ebp-0F8h], 0FFFFFFFFh
		mov	[esp+0], ebx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED81AD9:				; CODE XREF: sub_6ED819D4+AEj
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_6ED94560

loc_6ED81AEE:				; CODE XREF: sub_6ED819D4+B3j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_6ED94560

loc_6ED81B03:				; CODE XREF: sub_6ED819D4+A5j
					; sub_6ED819D4+BCj ...
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_6ED958D0
		mov	edx, [ebp-10Ch]
		mov	dword ptr [ebp-0F8h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED81B30:				; CODE XREF: sub_6ED819D4+8Ej
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_6ED94560

loc_6ED81B45:				; CODE XREF: sub_6ED819D4+9Cj
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_6ED94560
		jmp	short loc_6ED81B03
; ---------------------------------------------------------------------------

loc_6ED81B5C:				; CODE XREF: sub_6ED819D4+85j
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_6ED91130
		jmp	short loc_6ED81B03
; ---------------------------------------------------------------------------

loc_6ED81B73:				; CODE XREF: sub_6ED819D4+73j
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_6ED94560

loc_6ED81B88:				; CODE XREF: sub_6ED819D4+5Cj
					; sub_6ED819D4+7Cj ...
		mov	edx, [ebp-10Ch]
		mov	dword ptr [ebp-0F8h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED81BA0:				; CODE XREF: sub_6ED819D4+65j
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_6ED94560
		jmp	loc_6ED81AC1
; ---------------------------------------------------------------------------

loc_6ED81BBA:				; CODE XREF: sub_6ED819D4+4Ej
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_6ED94560
		jmp	short loc_6ED81B88
; ---------------------------------------------------------------------------

loc_6ED81BD1:				; CODE XREF: sub_6ED819D4+3Cj
		lea	eax, [ebp-30h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_6ED94560

loc_6ED81BE6:				; CODE XREF: sub_6ED819D4+45j
		mov	eax, [ebp-10Ch]
		mov	dword ptr [ebp-0F8h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED81BFE:				; CODE XREF: sub_6ED819D4+2Aj
		lea	eax, [ebp-34h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_6ED94560
		jmp	loc_6ED81AC1
sub_6ED819D4	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED81C20	proc near		; CODE XREF: sub_6ED82180+123p
					; sub_6ED82180+4C5p ...

var_7A		= byte ptr -7Ah
var_79		= byte ptr -79h
var_72		= byte ptr -72h
var_71		= byte ptr -71h
var_70		= dword	ptr -70h
var_6A		= word ptr -6Ah
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= byte ptr -18h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 9Ch
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset word_6ED9AD86
		mov	[ebp+var_38], offset sub_6ED8212A
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_0]
		mov	eax, [edx+44h]
		mov	dword ptr [ecx+44h], 0
		mov	edx, eax
		sar	edx, 1Fh
		add	[ecx+0A0h], eax
		adc	[ecx+0A4h], edx
		add	ecx, 40h
		mov	[ebp+var_60], ecx
		mov	dword ptr [esp+4], 0
		mov	[esp], ecx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN7QString6resizeEi
		mov	ebx, [ebp+arg_0]
		mov	esi, [ebx+74h]
		test	esi, esi
		jz	short loc_6ED81CAC
		mov	dword ptr [ebx+38h], 0
		mov	dword ptr [ebx+3Ch], 0

loc_6ED81CAC:				; CODE XREF: sub_6ED81C20+7Cj
		mov	esi, [ebp+arg_0]
		mov	ecx, [esi+68h]
		test	ecx, ecx
		jz	loc_6ED81E40
		add	esi, 28h
		mov	[ebp+var_70], esi
		mov	dword ptr [esp+4], 2000h
		mov	[esp], esi
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN10QByteArray6resizeEi
		mov	edi, [ebp+arg_0]
		mov	[ebp+var_68], 2000h
		mov	[ebp+var_64], 0
		mov	ecx, [edi+28h]
		mov	eax, [edi+38h]
		sub	[ebp+var_68], eax
		mov	edx, [edi+3Ch]
		sbb	[ebp+var_64], edx
		mov	ebx, [ecx]
		cmp	ebx, 1
		jz	loc_6ED820C1

loc_6ED81D03:				; CODE XREF: sub_6ED81C20+4A9j
		mov	eax, [ecx+8]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], eax
		mov	eax, [ebp+var_70]
		mov	[esp], eax
		call	ds:_ZN10QByteArray7reallocEi
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+38h]
		mov	ecx, [ecx+28h]
		mov	ebx, [ecx+0Ch]

loc_6ED81D29:				; CODE XREF: sub_6ED81C20+4B0j
		mov	edi, [ebp+var_64]
		lea	eax, [ebx+eax]
		mov	esi, [ebp+var_68]
		mov	[esp+4], eax
		mov	[esp+0Ch], edi
		mov	edi, [ebp+arg_0]
		mov	[esp+8], esi
		mov	eax, [edi+68h]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN9QIODevice4readEPcx
		mov	edx, eax
		sar	edx, 1Fh
		not	edx
		and	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, edx
		sar	ecx, 1Fh
		add	edx, [eax+38h]
		adc	ecx, [eax+3Ch]
		mov	[eax+38h], edx
		mov	[eax+3Ch], ecx

loc_6ED81D71:				; CODE XREF: sub_6ED81C20+281j
		mov	edi, ecx
		or	edi, edx
		jz	loc_6ED81E30
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx+74h]
		test	eax, eax
		jz	loc_6ED81EA6

loc_6ED81D89:				; CODE XREF: sub_6ED81C20+318j
		mov	ecx, [ebp+arg_0]
		mov	[esp+0Ch], edx
		mov	ebx, [ebp+var_60]
		mov	edx, [ecx+28h]
		mov	edx, [edx+0Ch]
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+8], edx
		call	ds:_ZN12QTextDecoder9toUnicodeEP7QStringPKci
		mov	esi, [ebp+arg_0]
		test	byte ptr [esi+181h], 8
		jnz	loc_6ED81F40

loc_6ED81DC1:				; CODE XREF: sub_6ED81C20+32Ej
		mov	edi, [ebp+arg_0]
		mov	eax, [edi+40h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED820F3

loc_6ED81DD2:				; CODE XREF: sub_6ED81C20+4E0j
		mov	edi, [ebp+var_60]
		mov	dword ptr [esp+4], 1
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], edi
		call	ds:_ZN7QString7reallocEi
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+40h]

loc_6ED81DF3:				; CODE XREF: sub_6ED81C20+4D8j
		or	byte ptr [eax+10h], 10h
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+40h]
		mov	eax, [ecx+44h]
		cmp	eax, [edx+8]
		jl	loc_6ED82023

loc_6ED81E09:				; CODE XREF: sub_6ED81C20:loc_6ED82105j
					; sub_6ED81C20+4F6j
		mov	esi, [ebp+arg_0]
		mov	[ebp+var_6A], 0
		mov	byte ptr [esi+78h], 1

loc_6ED81E16:				; CODE XREF: sub_6ED81C20+21Dj
					; sub_6ED81C20+3DDj ...
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_6A]
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED81E30:				; CODE XREF: sub_6ED81C20+155j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_6A], 0
		mov	byte ptr [eax+78h], 1
		jmp	short loc_6ED81E16
; ---------------------------------------------------------------------------
		align 10h

loc_6ED81E40:				; CODE XREF: sub_6ED81C20+94j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+3Ch]
		or	eax, [edx+38h]
		jnz	loc_6ED82002
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_58], 0FFFFFFFFh
		add	eax, 2Ch
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 28h
		mov	[esp], eax
		call	ds:_ZN10QByteArrayaSERKS_

loc_6ED81E6F:				; CODE XREF: sub_6ED81C20+3FEj
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+28h]
		mov	eax, [eax+8]
		mov	[ecx+38h], eax
		mov	ebx, eax
		mov	eax, ecx
		add	eax, 2Ch
		sar	ebx, 1Fh
		mov	[ecx+3Ch], ebx
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN10QByteArray5clearEv
		mov	esi, [ebp+arg_0]
		mov	edx, [esi+38h]
		mov	ecx, [esi+3Ch]
		jmp	loc_6ED81D71
; ---------------------------------------------------------------------------

loc_6ED81EA6:				; CODE XREF: sub_6ED81C20+163j
		cmp	ecx, 0
		jle	loc_6ED82105

loc_6ED81EAF:				; CODE XREF: sub_6ED81C20+4F0j
		mov	edi, [ebp+arg_0]
		mov	eax, [edi+28h]
		mov	ecx, [eax+0Ch]
		movzx	ebx, byte ptr [ecx+2]
		movzx	edx, byte ptr [ecx]
		movzx	eax, byte ptr [ecx+1]
		mov	[ebp+var_7A], bl
		movzx	ecx, byte ptr [ecx+3]
		mov	[ebp+var_79], cl
		mov	ecx, eax
		or	cl, dl
		mov	[ebp+var_71], cl
		jnz	short loc_6ED81EE1
		cmp	bl, 0FEh
		jnz	short loc_6ED81EE1
		cmp	[ebp+var_79], 0FFh
		jz	short loc_6ED81F0B

loc_6ED81EE1:				; CODE XREF: sub_6ED81C20+2B4j
					; sub_6ED81C20+2B9j
		cmp	al, 0FEh
		setz	bl
		cmp	dl, 0FFh
		setz	cl
		and	bl, cl
		mov	[ebp+var_72], bl
		jz	loc_6ED82040
		cmp	[ebp+var_79], 0
		jnz	loc_6ED82040
		cmp	[ebp+var_7A], 0
		jnz	loc_6ED82040

loc_6ED81F0B:				; CODE XREF: sub_6ED81C20+2BFj
		mov	esi, 3F9h

loc_6ED81F10:				; CODE XREF: sub_6ED81C20+440j
					; sub_6ED81C20+45Bj ...
		mov	[esp], esi
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN10QTextCodec11codecForMibEi
		mov	esi, [ebp+arg_0]
		mov	[esi+70h], eax
		mov	[esp], eax
		call	ds:_ZNK10QTextCodec11makeDecoderEv
		mov	edi, [ebp+arg_0]
		mov	edx, [edi+38h]
		mov	[esi+74h], eax
		jmp	loc_6ED81D89
; ---------------------------------------------------------------------------
		align 10h

loc_6ED81F40:				; CODE XREF: sub_6ED81C20+19Bj
		mov	eax, [esi+74h]
		mov	[esp], eax
		call	ds:_ZNK12QTextDecoder10hasFailureEv
		test	al, al
		jz	loc_6ED81DC1
		lea	edi, [ebp+var_1C]
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], offset aEncounteredInc ; "Encountered incorrectly encoded content"...
		mov	dword ptr [esp+4], offset aQxmlstream ;	"QXmlStream"
		mov	[esp], edi
		call	ds:_ZN16QCoreApplication9translateEPKcS1_S1_NS_8EncodingE
		mov	[ebp+var_58], 2
		sub	esp, 4
		mov	[esp+4], edi
		mov	[esp], esi
		call	sub_6ED71AE0
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED81FB6
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED81FB6:				; CODE XREF: sub_6ED81C20+381j
		mov	ecx, [ebp+arg_0]
		mov	eax, ds:_ZN7QString11shared_nullE
		cmp	[ecx+40h], eax
		jz	short loc_6ED81FF7
		mov	[ebp+var_20], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ebx, [ebp+var_60]
		lea	eax, [ebp+var_20]
		mov	[esp+4], eax
		mov	[ebp+var_58], 1
		mov	[esp], ebx
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED820D5

loc_6ED81FF7:				; CODE XREF: sub_6ED81C20+3A1j
		mov	[ebp+var_6A], 0
		jmp	loc_6ED81E16
; ---------------------------------------------------------------------------

loc_6ED82002:				; CODE XREF: sub_6ED81C20+229j
		mov	eax, edx
		add	eax, 2Ch
		mov	[esp+4], eax
		sub	eax, 4
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN10QByteArray6appendERKS_
		jmp	loc_6ED81E6F
; ---------------------------------------------------------------------------

loc_6ED82023:				; CODE XREF: sub_6ED81C20+1E3j
		mov	edx, [edx+0Ch]
		lea	ecx, [eax+1]
		mov	ebx, [ebp+arg_0]
		movzx	edx, word ptr [edx+eax*2]
		mov	[ebx+44h], ecx
		mov	[ebp+var_6A], dx
		jmp	loc_6ED81E16
; ---------------------------------------------------------------------------
		align 10h

loc_6ED82040:				; CODE XREF: sub_6ED81C20+2D1j
					; sub_6ED81C20+2DBj ...
		test	al, al
		setz	bl
		cmp	dl, 3Ch
		setz	cl
		and	bl, cl
		mov	edi, ebx
		jz	short loc_6ED82066
		cmp	[ebp+var_79], 0
		jnz	short loc_6ED82066
		cmp	[ebp+var_7A], 0
		mov	esi, 3FBh
		jz	loc_6ED81F10

loc_6ED82066:				; CODE XREF: sub_6ED81C20+42Fj
					; sub_6ED81C20+435j
		cmp	[ebp+var_71], 0
		jnz	short loc_6ED82081
		cmp	[ebp+var_7A], 0
		jnz	short loc_6ED82081
		cmp	[ebp+var_79], 3Ch
		mov	esi, 3FAh
		jz	loc_6ED81F10

loc_6ED82081:				; CODE XREF: sub_6ED81C20+44Aj
					; sub_6ED81C20+450j
		cmp	al, 0FFh
		jnz	short loc_6ED8208E
		cmp	dl, 0FEh
		jz	loc_6ED82120

loc_6ED8208E:				; CODE XREF: sub_6ED81C20+463j
		cmp	[ebp+var_72], 0
		jnz	loc_6ED82120
		mov	ebx, edi
		mov	esi, 3F6h
		test	bl, bl
		jnz	loc_6ED81F10
		cmp	al, 3Ch
		jnz	short loc_6ED820B7
		test	dl, dl
		mov	si, 3F5h
		jz	loc_6ED81F10

loc_6ED820B7:				; CODE XREF: sub_6ED81C20+489j
		mov	esi, 6Ah
		jmp	loc_6ED81F10
; ---------------------------------------------------------------------------

loc_6ED820C1:				; CODE XREF: sub_6ED81C20+DDj
		mov	ebx, [ecx+0Ch]
		lea	esi, [ecx+10h]
		cmp	ebx, esi
		jnz	loc_6ED81D03
		nop
		jmp	loc_6ED81D29
; ---------------------------------------------------------------------------

loc_6ED820D5:				; CODE XREF: sub_6ED81C20+3D1j
		mov	eax, [ebp+var_20]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_6A], 0
		jmp	loc_6ED81E16
; ---------------------------------------------------------------------------

loc_6ED820F3:				; CODE XREF: sub_6ED81C20+1ACj
		mov	edx, [eax+4]
		test	edx, edx
		jg	loc_6ED81DF3
		xchg	ax, ax
		jmp	loc_6ED81DD2
; ---------------------------------------------------------------------------

loc_6ED82105:				; CODE XREF: sub_6ED81C20+289j
		jl	loc_6ED81E09
		cmp	edx, 3
		xchg	ax, ax
		ja	loc_6ED81EAF
		jmp	loc_6ED81E09
; ---------------------------------------------------------------------------
		align 10h

loc_6ED82120:				; CODE XREF: sub_6ED81C20+468j
					; sub_6ED81C20+472j
		mov	esi, 3F7h
		jmp	loc_6ED81F10
sub_6ED81C20	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED8212A	proc near		; DATA XREF: sub_6ED81C20+26o
		add	ebp, 18h
		mov	esi, [ebp-54h]
		cmp	dword ptr [ebp-58h], 1
		mov	[ebp-78h], esi
		jz	short loc_6ED8215A
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		mov	[esp+0], esi
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED8215A:				; CODE XREF: sub_6ED8212A+Dj
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED94560
		mov	edx, [ebp-78h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED8212A	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED82180	proc near		; CODE XREF: sub_6ED826E0+5Bp
					; sub_6ED82800+60p ...

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= word ptr -3Ch
var_1D		= byte ptr -1Dh
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= word ptr  0Ch
arg_C		= byte ptr  10h

		push	ebp
		push	edi
		push	esi
		xor	esi, esi
		push	ebx
		sub	esp, 4Ch
		mov	edi, [esp+5Ch+arg_4]
		movzx	eax, [esp+5Ch+arg_8]
		movzx	edx, [esp+5Ch+arg_C]
		mov	ebx, [esp+5Ch+arg_0]
		mov	ebp, edi
		mov	[esp+5Ch+var_3C], ax
		mov	[esp+5Ch+var_1D], dl
		cmp	byte ptr [edi],	0
		jnz	short loc_6ED821E5
		jmp	loc_6ED822B4
; ---------------------------------------------------------------------------

loc_6ED821B0:				; CODE XREF: sub_6ED82180+6Bj
		xor	eax, eax
		cmp	byte ptr [ebx+78h], 0
		jnz	short loc_6ED821CB
		lea	eax, ds:0[edx*4]
		sub	edx, 1
		add	eax, [ebx+48h]
		mov	[ebx+4Ch], edx
		movzx	eax, word ptr [eax]

loc_6ED821CB:				; CODE XREF: sub_6ED82180+36j
					; sub_6ED82180+128j
		movsx	dx, byte ptr [ebp+0]
		cmp	dx, ax
		jnz	short loc_6ED82213

loc_6ED821D5:				; CODE XREF: sub_6ED82180+91j
		add	esi, 1
		cmp	byte ptr [edi+esi], 0
		lea	ebp, [edi+esi]
		jz	loc_6ED82330

loc_6ED821E5:				; CODE XREF: sub_6ED82180+29j
		mov	edx, [ebx+4Ch]
		cmp	edx, 0FFFFFFFFh
		jnz	short loc_6ED821B0
		mov	edx, [ebx+40h]
		mov	eax, [ebx+44h]
		cmp	eax, [edx+8]
		jge	loc_6ED822A0
		mov	edx, [edx+0Ch]
		lea	ecx, [eax+1]
		mov	[ebx+44h], ecx
		movzx	eax, word ptr [edx+eax*2]
		movsx	dx, byte ptr [ebp+0]
		cmp	dx, ax
		jz	short loc_6ED821D5

loc_6ED82213:				; CODE XREF: sub_6ED82180+53j
		test	ax, ax
		jnz	loc_6ED82590

loc_6ED8221C:				; CODE XREF: sub_6ED82180+45Ej
		test	esi, esi
		jz	short loc_6ED8228F
		lea	ebp, [esi-1]
		lea	esi, [edi+esi]
		jmp	short loc_6ED8226A
; ---------------------------------------------------------------------------

loc_6ED82228:				; CODE XREF: sub_6ED82180+FDj
		add	ecx, ecx
		add	eax, 2
		cmp	eax, ecx
		jge	short loc_6ED82233
		mov	eax, ecx

loc_6ED82233:				; CODE XREF: sub_6ED82180+AFj
		mov	[ebx+50h], eax
		shl	eax, 2
		mov	[esp+5Ch+var_58], eax
		mov	eax, [ebx+48h]
		mov	[esp+5Ch+var_5C], eax
		call	ds:_Z8qReallocPvj
		test	eax, eax
		mov	[ebx+48h], eax
		jz	loc_6ED823B0

loc_6ED82254:				; CODE XREF: sub_6ED82180+239j
		mov	edx, [ebx+4Ch]
		sub	esi, 1
		add	edx, 1
		test	ebp, ebp
		mov	[ebx+4Ch], edx
		mov	[eax+edx*4], edi
		jz	short loc_6ED8228F

loc_6ED82267:				; CODE XREF: sub_6ED82180+10Dj
		sub	ebp, 1

loc_6ED8226A:				; CODE XREF: sub_6ED82180+A6j
		mov	eax, [ebx+4Ch]
		mov	ecx, [ebx+50h]
		movsx	di, byte ptr [esi-1]
		lea	edx, [eax+1]
		cmp	edx, ecx
		movzx	edi, di
		jge	short loc_6ED82228
		mov	eax, [ebx+48h]
		sub	esi, 1
		test	ebp, ebp
		mov	[ebx+4Ch], edx
		mov	[eax+edx*4], edi
		jnz	short loc_6ED82267

loc_6ED8228F:				; CODE XREF: sub_6ED82180+9Ej
					; sub_6ED82180+E5j
		xor	eax, eax

loc_6ED82291:				; CODE XREF: sub_6ED82180+14Aj
					; sub_6ED82180+326j
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED822A0:				; CODE XREF: sub_6ED82180+76j
		mov	[esp+5Ch+var_5C], ebx
		call	sub_6ED81C20
		jmp	loc_6ED821CB
; ---------------------------------------------------------------------------
		align 10h

loc_6ED822B0:				; CODE XREF: sub_6ED82180+20Dj
		mov	ebx, [esp+5Ch+var_44]

loc_6ED822B4:				; CODE XREF: sub_6ED82180+2Bj
		cmp	[esp+5Ch+var_1D], 0
		jnz	loc_6ED823C0

loc_6ED822BF:				; CODE XREF: sub_6ED82180+2ECj
		cmp	[esp+5Ch+var_3C], 0
		mov	eax, 1
		js	short loc_6ED82291
		mov	eax, [ebx+4Ch]
		movzx	esi, [esp+5Ch+var_3C]
		mov	ecx, [ebx+50h]
		lea	edx, [eax+1]
		shl	esi, 10h
		cmp	edx, ecx
		jl	loc_6ED824AB
		add	eax, 2
		add	ecx, ecx
		cmp	eax, ecx
		jge	short loc_6ED822F0
		mov	eax, ecx

loc_6ED822F0:				; CODE XREF: sub_6ED82180+16Cj
		mov	[ebx+50h], eax
		shl	eax, 2
		mov	[esp+5Ch+var_58], eax
		mov	eax, [ebx+48h]
		mov	[esp+5Ch+var_5C], eax
		call	ds:_Z8qReallocPvj
		test	eax, eax
		mov	[ebx+48h], eax
		jz	loc_6ED826A8

loc_6ED82311:				; CODE XREF: sub_6ED82180+531j
		mov	edx, [ebx+4Ch]
		add	edx, 1

loc_6ED82317:				; CODE XREF: sub_6ED82180+32Ej
		mov	[ebx+4Ch], edx
		mov	[eax+edx*4], esi
		add	esp, 4Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED82330:				; CODE XREF: sub_6ED82180+5Fj
		lea	eax, [ebx+198h]
		xor	ebp, ebp
		mov	[esp+5Ch+var_40], eax
		mov	eax, [ebx+198h]
		mov	[esp+5Ch+var_44], ebx
		jmp	short loc_6ED82393
; ---------------------------------------------------------------------------

loc_6ED82348:				; CODE XREF: sub_6ED82180+21Dj
		mov	edx, [eax+8]

loc_6ED8234B:				; CODE XREF: sub_6ED82180+227j
		add	edx, 1
		mov	[esp+5Ch+var_5C], edx
		call	ds:_ZN7QString4growEi
		mov	edx, [esp+5Ch+var_40]
		mov	[esp+5Ch+var_5C], edx
		mov	[esp+5Ch+var_58], eax
		call	ds:_ZN7QString7reallocEi
		mov	edx, [esp+5Ch+var_44]
		mov	eax, [edx+198h]
		mov	edx, [eax+8]

loc_6ED82375:				; CODE XREF: sub_6ED82180+225j
		mov	ecx, [eax+0Ch]
		add	ebp, 1
		mov	[ecx+edx*2], bx
		add	edx, 1
		cmp	ebp, esi
		mov	[eax+8], edx
		mov	word ptr [ecx+edx*2], 0
		jge	loc_6ED822B0

loc_6ED82393:				; CODE XREF: sub_6ED82180+1C6j
		mov	edx, [eax]
		movsx	bx, byte ptr [edi+ebp]
		cmp	edx, 1
		jnz	short loc_6ED82348
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jl	short loc_6ED82375
		jmp	short loc_6ED8234B
; ---------------------------------------------------------------------------
		align 10h

loc_6ED823B0:				; CODE XREF: sub_6ED82180+CEj
		call	ds:_Z9qBadAllocv
		mov	eax, [ebx+48h]
		jmp	loc_6ED82254
; ---------------------------------------------------------------------------
		align 10h

loc_6ED823C0:				; CODE XREF: sub_6ED82180+139j
		mov	eax, [ebx+4Ch]
		lea	edx, [ebx+198h]
		xor	ebp, ebp
		mov	[esp+5Ch+var_44], edx
		cmp	eax, 0FFFFFFFFh
		jz	loc_6ED82554

loc_6ED823D8:				; CODE XREF: sub_6ED82180+3CEj
		cmp	byte ptr [ebx+78h], 0
		jnz	loc_6ED82464
		lea	edx, ds:0[eax*4]
		sub	eax, 1
		add	edx, [ebx+48h]
		mov	[ebx+4Ch], eax
		mov	edi, [edx]

loc_6ED823F4:				; CODE XREF: sub_6ED82180+3F0j
					; sub_6ED82180+4D0j
		test	di, di
		jz	short loc_6ED82464
		cmp	di, 0Ah
		jz	loc_6ED824C5
		ja	loc_6ED82575
		cmp	di, 9
		lea	esi, [esi+0]
		jz	loc_6ED824F8

loc_6ED82416:				; CODE XREF: sub_6ED82180+3FFj
		mov	eax, [ebx+4Ch]
		movzx	edi, di
		mov	ecx, [ebx+50h]
		lea	edx, [eax+1]
		cmp	edx, ecx
		jl	loc_6ED8265D
		add	eax, 2
		add	ecx, ecx
		cmp	eax, ecx
		jl	loc_6ED8266C

loc_6ED82437:				; CODE XREF: sub_6ED82180+4F0j
		mov	[ebx+50h], eax
		shl	eax, 2
		mov	[esp+5Ch+var_58], eax
		mov	eax, [ebx+48h]
		mov	[esp+5Ch+var_5C], eax
		call	ds:_Z8qReallocPvj
		test	eax, eax
		mov	[ebx+48h], eax
		jz	loc_6ED826C5

loc_6ED82458:				; CODE XREF: sub_6ED82180+550j
		mov	edx, [ebx+4Ch]
		add	edx, 1

loc_6ED8245E:				; CODE XREF: sub_6ED82180+4E0j
		mov	[ebx+4Ch], edx
		mov	[eax+edx*4], edi

loc_6ED82464:				; CODE XREF: sub_6ED82180+25Cj
					; sub_6ED82180+277j ...
		test	ebp, ebp
		jz	short loc_6ED82472
		cmp	byte ptr [ebx+78h], 0
		jz	loc_6ED822BF

loc_6ED82472:				; CODE XREF: sub_6ED82180+2E6j
		mov	eax, [ebx+198h]
		mov	edi, [eax+8]
		mov	eax, [esp+5Ch+var_44]
		mov	[esp+5Ch+var_5C], ebx
		sub	edi, esi
		sub	edi, ebp
		mov	[esp+5Ch+var_58], eax
		mov	[esp+5Ch+var_54], edi
		call	sub_6ED72C90
		mov	edx, [esp+5Ch+var_44]
		mov	[esp+5Ch+var_58], edi
		mov	[esp+5Ch+var_5C], edx
		call	ds:_ZN7QString6resizeEi
		xor	eax, eax
		jmp	loc_6ED82291
; ---------------------------------------------------------------------------

loc_6ED824AB:				; CODE XREF: sub_6ED82180+15Fj
		mov	eax, [ebx+48h]
		jmp	loc_6ED82317
; ---------------------------------------------------------------------------

loc_6ED824B3:				; CODE XREF: sub_6ED82180+478j
		mov	eax, [ebx+4Ch]
		cmp	eax, 0FFFFFFFFh
		jz	loc_6ED826D5
		sub	eax, 1
		mov	[ebx+4Ch], eax

loc_6ED824C5:				; CODE XREF: sub_6ED82180+27Dj
					; sub_6ED82180+480j ...
		mov	eax, [ebx+44h]
		mov	edi, 0Ah
		add	dword ptr [ebx+90h], 1
		adc	dword ptr [ebx+94h], 0
		mov	edx, eax
		sar	edx, 1Fh
		add	eax, [ebx+0A0h]
		adc	edx, [ebx+0A4h]
		mov	[ebx+98h], eax
		mov	[ebx+9Ch], edx

loc_6ED824F8:				; CODE XREF: sub_6ED82180+290j
					; sub_6ED82180+405j
		mov	eax, [ebx+198h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED82631
		mov	edx, [eax+8]

loc_6ED8250C:				; CODE XREF: sub_6ED82180+4BDj
		add	edx, 1
		mov	[esp+5Ch+var_5C], edx
		call	ds:_ZN7QString4growEi
		mov	[esp+5Ch+var_58], eax
		mov	eax, [esp+5Ch+var_44]
		mov	[esp+5Ch+var_5C], eax
		call	ds:_ZN7QString7reallocEi
		mov	eax, [ebx+198h]
		mov	edx, [eax+8]

loc_6ED82532:				; CODE XREF: sub_6ED82180+4B7j
		mov	ecx, [eax+0Ch]
		add	ebp, 1
		mov	[ecx+edx*2], di
		add	edx, 1
		mov	[eax+8], edx
		mov	eax, [ebx+4Ch]
		mov	word ptr [ecx+edx*2], 0
		cmp	eax, 0FFFFFFFFh
		jnz	loc_6ED823D8

loc_6ED82554:				; CODE XREF: sub_6ED82180+252j
		mov	edx, [ebx+40h]
		mov	eax, [ebx+44h]
		cmp	eax, [edx+8]
		jge	loc_6ED82642
		mov	edx, [edx+0Ch]
		lea	ecx, [eax+1]
		mov	[ebx+44h], ecx
		movzx	edi, word ptr [edx+eax*2]
		jmp	loc_6ED823F4
; ---------------------------------------------------------------------------

loc_6ED82575:				; CODE XREF: sub_6ED82180+283j
		cmp	di, 0Dh
		jz	short loc_6ED825E3
		cmp	di, 20h
		jnz	loc_6ED82416
		jmp	loc_6ED824F8
; ---------------------------------------------------------------------------
		align 10h

loc_6ED82590:				; CODE XREF: sub_6ED82180+96j
		movzx	ebp, ax
		mov	eax, [ebx+4Ch]
		mov	ecx, [ebx+50h]
		lea	edx, [eax+1]
		cmp	edx, ecx
		jl	loc_6ED82655
		add	eax, 2
		add	ecx, ecx
		cmp	eax, ecx
		jl	loc_6ED82665

loc_6ED825B1:				; CODE XREF: sub_6ED82180+4E7j
		mov	[ebx+50h], eax
		shl	eax, 2
		mov	[esp+5Ch+var_58], eax
		mov	eax, [ebx+48h]
		mov	[esp+5Ch+var_5C], eax
		call	ds:_Z8qReallocPvj
		test	eax, eax
		mov	[ebx+48h], eax
		jz	loc_6ED826B6

loc_6ED825D2:				; CODE XREF: sub_6ED82180+540j
		mov	edx, [ebx+4Ch]
		add	edx, 1

loc_6ED825D8:				; CODE XREF: sub_6ED82180+4D8j
		mov	[ebx+4Ch], edx
		mov	[eax+edx*4], ebp
		jmp	loc_6ED8221C
; ---------------------------------------------------------------------------

loc_6ED825E3:				; CODE XREF: sub_6ED82180+3F9j
		mov	eax, [ebx+4Ch]
		cmp	eax, 0FFFFFFFFh
		jz	loc_6ED82675
		mov	edx, [ebx+48h]
		mov	eax, [edx+eax*4]

loc_6ED825F5:				; CODE XREF: sub_6ED82180+507j
					; sub_6ED82180+523j
		cmp	eax, 0Ah
		jz	loc_6ED824B3
		test	eax, eax
		jnz	loc_6ED824C5

loc_6ED82606:				; CODE XREF: sub_6ED82180+519j
		lea	eax, [ebx+48h]
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_58], 1
		call	sub_6ED91240
		mov	eax, [ebx+4Ch]
		mov	edx, [ebx+48h]
		add	eax, 1
		mov	[ebx+4Ch], eax
		mov	dword ptr [edx+eax*4], 0Dh
		jmp	loc_6ED82464
; ---------------------------------------------------------------------------

loc_6ED82631:				; CODE XREF: sub_6ED82180+383j
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jl	loc_6ED82532
		jmp	loc_6ED8250C
; ---------------------------------------------------------------------------

loc_6ED82642:				; CODE XREF: sub_6ED82180+3DDj
		mov	[esp+5Ch+var_5C], ebx
		call	sub_6ED81C20
		movzx	edi, ax
		lea	esi, [esi+0]
		jmp	loc_6ED823F4
; ---------------------------------------------------------------------------

loc_6ED82655:				; CODE XREF: sub_6ED82180+41Ej
		mov	eax, [ebx+48h]
		jmp	loc_6ED825D8
; ---------------------------------------------------------------------------

loc_6ED8265D:				; CODE XREF: sub_6ED82180+2A4j
		mov	eax, [ebx+48h]
		jmp	loc_6ED8245E
; ---------------------------------------------------------------------------

loc_6ED82665:				; CODE XREF: sub_6ED82180+42Bj
		mov	eax, ecx
		jmp	loc_6ED825B1
; ---------------------------------------------------------------------------

loc_6ED8266C:				; CODE XREF: sub_6ED82180+2B1j
		mov	eax, ecx
		xchg	ax, ax
		jmp	loc_6ED82437
; ---------------------------------------------------------------------------

loc_6ED82675:				; CODE XREF: sub_6ED82180+469j
		mov	edx, [ebx+40h]
		mov	eax, [ebx+44h]
		cmp	eax, [edx+8]
		jge	short loc_6ED8268C
		mov	edx, [edx+0Ch]
		movzx	eax, word ptr [edx+eax*2]
		jmp	loc_6ED825F5
; ---------------------------------------------------------------------------

loc_6ED8268C:				; CODE XREF: sub_6ED82180+4FEj
		mov	[esp+5Ch+var_5C], ebx
		call	sub_6ED81C20
		movzx	eax, ax
		test	eax, eax
		jz	loc_6ED82606
		sub	dword ptr [ebx+44h], 1
		jmp	loc_6ED825F5
; ---------------------------------------------------------------------------

loc_6ED826A8:				; CODE XREF: sub_6ED82180+18Bj
		call	ds:_Z9qBadAllocv
		mov	eax, [ebx+48h]
		jmp	loc_6ED82311
; ---------------------------------------------------------------------------

loc_6ED826B6:				; CODE XREF: sub_6ED82180+44Cj
		call	ds:_Z9qBadAllocv
		mov	eax, [ebx+48h]
		nop
		jmp	loc_6ED825D2
; ---------------------------------------------------------------------------

loc_6ED826C5:				; CODE XREF: sub_6ED82180+2D2j
		call	ds:_Z9qBadAllocv
		mov	eax, [ebx+48h]
		xchg	ax, ax
		jmp	loc_6ED82458
; ---------------------------------------------------------------------------

loc_6ED826D5:				; CODE XREF: sub_6ED82180+339j
		add	dword ptr [ebx+44h], 1
		jmp	loc_6ED824C5
sub_6ED82180	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED826E0	proc near		; CODE XREF: _ZN16QXmlStreamReader8readNextEv+54p

var_4D		= byte ptr -4Dh
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9AD8E
		mov	[ebp+var_28], offset sub_6ED827CC
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		or	byte ptr [eax+180h], 10h
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 36h
		mov	dword ptr [esp+4], offset a?xml_0 ; "<?xml"
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED82180
		mov	[ebp+var_4D], 1
		test	al, al
		jnz	short loc_6ED8275C
		mov	eax, [ebp+arg_0]
		cmp	byte ptr [eax+78h], 0
		mov	dword ptr [eax+7Ch], 2
		jnz	short loc_6ED82770

loc_6ED82758:				; CODE XREF: sub_6ED826E0+D1j
		mov	[ebp+var_4D], 0

loc_6ED8275C:				; CODE XREF: sub_6ED826E0+66j
					; sub_6ED826E0+EAj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_4D]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED82770:				; CODE XREF: sub_6ED826E0+76j
		and	byte ptr [eax+180h], 0EFh
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_C]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	sub_6ED71960
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED82758
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_4D], 0
		jmp	short loc_6ED8275C
sub_6ED826E0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED827CC	proc near		; DATA XREF: sub_6ED826E0+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-54h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED827CC	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED82800	proc near		; CODE XREF: sub_6ED83560+1988p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [ebx+4Ch]
		cmp	eax, 0FFFFFFFFh
		jz	loc_6ED828A2
		mov	edx, [ebx+48h]
		mov	eax, [edx+eax*4]

loc_6ED8281A:				; CODE XREF: sub_6ED82800+1EAj
		cmp	eax, 45h
		jz	loc_6ED828C1

loc_6ED82823:				; CODE XREF: sub_6ED82800+BBj
		jbe	short loc_6ED82840
		cmp	eax, 49h
		jz	loc_6ED82910
		cmp	eax, 4Eh
		jz	short loc_6ED82870

loc_6ED82833:				; CODE XREF: sub_6ED82800+43j
					; sub_6ED82800+1E0j
		xor	eax, eax

loc_6ED82835:				; CODE XREF: sub_6ED82800+105j
					; sub_6ED82800+180j ...
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED82840:				; CODE XREF: sub_6ED82800:loc_6ED82823j
		cmp	eax, 43h
		jnz	short loc_6ED82833
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_10], 1
		mov	[esp+1Ch+var_14], 2Fh
		mov	[esp+1Ch+var_18], offset aCdata_4 ; "CDATA"
		call	sub_6ED82180
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED82870:				; CODE XREF: sub_6ED82800+31j
		mov	[esp+1Ch+var_10], 1
		mov	[esp+1Ch+var_14], 21h
		mov	[esp+1Ch+var_18], offset aNotation_1 ; "NOTATION"
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED82180
		test	al, al
		jz	loc_6ED82985

loc_6ED82898:				; CODE XREF: sub_6ED82800+E3j
					; sub_6ED82800+132j ...
		mov	eax, 1
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_6ED828A2:				; CODE XREF: sub_6ED82800+Ej
		mov	edx, [ebx+40h]
		mov	eax, [ebx+44h]
		cmp	eax, [edx+8]
		jge	loc_6ED829D2
		mov	edx, [edx+0Ch]
		movzx	eax, word ptr [edx+eax*2]
		cmp	eax, 45h
		jnz	loc_6ED82823

loc_6ED828C1:				; CODE XREF: sub_6ED82800+1Dj
		mov	[esp+1Ch+var_10], 1
		mov	[esp+1Ch+var_14], 20h
		mov	[esp+1Ch+var_18], offset aEntity_0 ; "ENTITY"
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED82180
		test	al, al
		jnz	short loc_6ED82898
		mov	[esp+1Ch+var_10], 1
		mov	[esp+1Ch+var_14], 33h
		mov	[esp+1Ch+var_18], offset aEntities ; "ENTITIES"
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED82180
		jmp	loc_6ED82835
; ---------------------------------------------------------------------------
		align 10h

loc_6ED82910:				; CODE XREF: sub_6ED82800+28j
		mov	[esp+1Ch+var_10], 1
		mov	[esp+1Ch+var_14], 30h
		mov	[esp+1Ch+var_18], offset aId ; "ID"
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED82180
		test	al, al
		jnz	loc_6ED82898
		mov	[esp+1Ch+var_10], 1
		mov	[esp+1Ch+var_14], 31h
		mov	[esp+1Ch+var_18], offset aIdref	; "IDREF"
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED82180
		test	al, al
		jnz	loc_6ED82898
		mov	[esp+1Ch+var_10], 1
		mov	[esp+1Ch+var_14], 32h
		mov	[esp+1Ch+var_18], offset aIdrefs ; "IDREFS"
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED82180
		jmp	loc_6ED82835
; ---------------------------------------------------------------------------

loc_6ED82985:				; CODE XREF: sub_6ED82800+92j
		mov	[esp+1Ch+var_10], 1
		mov	[esp+1Ch+var_14], 34h
		mov	[esp+1Ch+var_18], offset aNmtoken ; "NMTOKEN"
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED82180
		test	al, al
		jnz	loc_6ED82898
		mov	[esp+1Ch+var_10], 1
		mov	[esp+1Ch+var_14], 35h
		mov	[esp+1Ch+var_18], offset aNmtokens ; "NMTOKENS"
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED82180
		jmp	loc_6ED82835
; ---------------------------------------------------------------------------

loc_6ED829D2:				; CODE XREF: sub_6ED82800+ABj
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED81C20
		movzx	eax, ax
		test	eax, eax
		nop
		jz	loc_6ED82833
		sub	dword ptr [ebx+44h], 1
		jmp	loc_6ED8281A
sub_6ED82800	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED829F0	proc near		; CODE XREF: sub_6ED83560+18E8p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [ebx+4Ch]
		cmp	eax, 0FFFFFFFFh
		jz	short loc_6ED82A70
		mov	edx, [ebx+48h]
		mov	eax, [edx+eax*4]

loc_6ED82A06:				; CODE XREF: sub_6ED829F0+D7j
		cmp	eax, 49h
		jz	short loc_6ED82A87

loc_6ED82A0B:				; CODE XREF: sub_6ED829F0+95j
		cmp	eax, 52h
		jz	short loc_6ED82A20
		cmp	eax, 46h
		jz	short loc_6ED82A45

loc_6ED82A15:				; CODE XREF: sub_6ED829F0+CDj
		xor	eax, eax
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED82A20:				; CODE XREF: sub_6ED829F0+1Ej
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_10], 0
		mov	[esp+1Ch+var_14], 25h
		mov	[esp+1Ch+var_18], offset aRequired_0 ; "REQUIRED"
		call	sub_6ED82180
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_6ED82A45:				; CODE XREF: sub_6ED829F0+23j
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_10], 0
		mov	[esp+1Ch+var_14], 27h
		mov	[esp+1Ch+var_18], offset aFixed_0 ; "FIXED"
		call	sub_6ED82180
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED82A70:				; CODE XREF: sub_6ED829F0+Ej
		mov	edx, [ebx+40h]
		mov	eax, [ebx+44h]
		cmp	eax, [edx+8]
		jge	short loc_6ED82AB0
		mov	edx, [edx+0Ch]
		movzx	eax, word ptr [edx+eax*2]
		cmp	eax, 49h
		jnz	short loc_6ED82A0B

loc_6ED82A87:				; CODE XREF: sub_6ED829F0+19j
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_10], 0
		mov	[esp+1Ch+var_14], 26h
		mov	[esp+1Ch+var_18], offset aImplied_0 ; "IMPLIED"
		call	sub_6ED82180
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED82AB0:				; CODE XREF: sub_6ED829F0+89j
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED81C20
		movzx	eax, ax
		test	eax, eax
		jz	loc_6ED82A15
		sub	dword ptr [ebx+44h], 1
		jmp	loc_6ED82A06
sub_6ED829F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED82AD0	proc near		; CODE XREF: sub_6ED83560+1786p
					; sub_6ED83560+17C9p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4

		push	ebp
		push	edi
		xor	edi, edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	ebx, [esp+2Ch+arg_0]
		mov	eax, [ebx+4Ch]
		lea	ebp, [ebx+198h]
		cmp	eax, 0FFFFFFFFh
		jz	loc_6ED82C23

loc_6ED82AEF:				; CODE XREF: sub_6ED82AD0+14Dj
		cmp	byte ptr [ebx+78h], 0
		jnz	short loc_6ED82B74
		lea	edx, ds:0[eax*4]
		sub	eax, 1
		add	edx, [ebx+48h]
		mov	[ebx+4Ch], eax
		mov	esi, [edx]

loc_6ED82B07:				; CODE XREF: sub_6ED82AD0+16Fj
					; sub_6ED82AD0+2A8j
		test	si, si
		jz	short loc_6ED82B74
		cmp	si, 0Ah
		jz	loc_6ED82B98
		ja	loc_6ED82C44
		cmp	si, 9
		jz	loc_6ED82BCB
		mov	eax, [ebx+4Ch]
		movzx	esi, si
		mov	ecx, [ebx+50h]
		lea	edx, [eax+1]
		cmp	edx, ecx
		jl	loc_6ED82C68

loc_6ED82B3A:				; CODE XREF: sub_6ED82AD0+192j
		add	eax, 2
		add	ecx, ecx
		cmp	eax, ecx
		jl	loc_6ED82D61

loc_6ED82B47:				; CODE XREF: sub_6ED82AD0+293j
		mov	[ebx+50h], eax
		shl	eax, 2
		mov	[esp+2Ch+var_28], eax
		mov	eax, [ebx+48h]
		mov	[esp+2Ch+var_2C], eax
		call	ds:_Z8qReallocPvj
		test	eax, eax
		mov	[ebx+48h], eax
		jz	loc_6ED82D97

loc_6ED82B68:				; CODE XREF: sub_6ED82AD0+2D0j
		mov	edx, [ebx+4Ch]
		add	edx, 1

loc_6ED82B6E:				; CODE XREF: sub_6ED82AD0+19Bj
		mov	[ebx+4Ch], edx
		mov	[eax+edx*4], esi

loc_6ED82B74:				; CODE XREF: sub_6ED82AD0+23j
					; sub_6ED82AD0+3Aj
		xor	eax, eax
		test	edi, edi
		jnz	loc_6ED82CC3

loc_6ED82B7E:				; CODE XREF: sub_6ED82AD0+1EDj
					; sub_6ED82AD0+21Cj
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED82B86:				; CODE XREF: sub_6ED82AD0+1B5j
		mov	eax, [ebx+4Ch]
		cmp	eax, 0FFFFFFFFh
		jz	loc_6ED82DD7
		sub	eax, 1
		mov	[ebx+4Ch], eax

loc_6ED82B98:				; CODE XREF: sub_6ED82AD0+40j
					; sub_6ED82AD0+1BDj ...
		mov	eax, [ebx+44h]
		mov	esi, 0Ah
		add	dword ptr [ebx+90h], 1
		adc	dword ptr [ebx+94h], 0
		mov	edx, eax
		sar	edx, 1Fh
		add	eax, [ebx+0A0h]
		adc	edx, [ebx+0A4h]
		mov	[ebx+98h], eax
		mov	[ebx+9Ch], edx

loc_6ED82BCB:				; CODE XREF: sub_6ED82AD0+50j
					; sub_6ED82AD0+17Ej
		mov	eax, [ebx+198h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED82D50
		mov	edx, [eax+8]

loc_6ED82BDF:				; CODE XREF: sub_6ED82AD0+28Cj
		add	edx, 1
		mov	[esp+2Ch+var_2C], edx
		call	ds:_ZN7QString4growEi
		mov	[esp+2Ch+var_2C], ebp
		mov	[esp+2Ch+var_28], eax
		call	ds:_ZN7QString7reallocEi
		mov	eax, [ebx+198h]
		mov	edx, [eax+8]

loc_6ED82C01:				; CODE XREF: sub_6ED82AD0+286j
		mov	ecx, [eax+0Ch]
		add	edi, 1
		mov	[ecx+edx*2], si
		add	edx, 1
		mov	[eax+8], edx
		mov	eax, [ebx+4Ch]
		mov	word ptr [ecx+edx*2], 0
		cmp	eax, 0FFFFFFFFh
		jnz	loc_6ED82AEF

loc_6ED82C23:				; CODE XREF: sub_6ED82AD0+19j
		mov	edx, [ebx+40h]
		mov	eax, [ebx+44h]
		cmp	eax, [edx+8]
		jge	loc_6ED82D68
		mov	edx, [edx+0Ch]
		lea	ecx, [eax+1]
		mov	[ebx+44h], ecx
		movzx	esi, word ptr [edx+eax*2]
		jmp	loc_6ED82B07
; ---------------------------------------------------------------------------

loc_6ED82C44:				; CODE XREF: sub_6ED82AD0+46j
		cmp	si, 0Dh
		jz	short loc_6ED82C70
		cmp	si, 20h
		jz	loc_6ED82BCB
		mov	eax, [ebx+4Ch]
		movzx	esi, si
		mov	ecx, [ebx+50h]
		lea	edx, [eax+1]
		cmp	edx, ecx
		jge	loc_6ED82B3A

loc_6ED82C68:				; CODE XREF: sub_6ED82AD0+64j
		mov	eax, [ebx+48h]
		jmp	loc_6ED82B6E
; ---------------------------------------------------------------------------

loc_6ED82C70:				; CODE XREF: sub_6ED82AD0+178j
		mov	eax, [ebx+4Ch]
		cmp	eax, 0FFFFFFFFh
		jz	loc_6ED82D80
		mov	edx, [ebx+48h]
		mov	eax, [edx+eax*4]

loc_6ED82C82:				; CODE XREF: sub_6ED82AD0+2C2j
					; sub_6ED82AD0+2ECj
		cmp	eax, 0Ah
		jz	loc_6ED82B86
		test	eax, eax
		jnz	loc_6ED82B98

loc_6ED82C93:				; CODE XREF: sub_6ED82AD0+2E2j
		lea	eax, [ebx+48h]
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], 1
		call	sub_6ED91240
		mov	eax, [ebx+4Ch]
		mov	edx, [ebx+48h]
		add	eax, 1
		mov	[ebx+4Ch], eax
		mov	dword ptr [edx+eax*4], 0Dh
		xor	eax, eax
		test	edi, edi
		jz	loc_6ED82B7E

loc_6ED82CC3:				; CODE XREF: sub_6ED82AD0+A8j
		mov	[esp+2Ch+var_20], 1
		mov	[esp+2Ch+var_24], 24h
		mov	[esp+2Ch+var_28], offset aNdata_1 ; "NDATA"
		mov	[esp+2Ch+var_2C], ebx
		call	sub_6ED82180
		mov	edx, eax
		mov	eax, 1
		test	dl, dl
		jnz	loc_6ED82B7E
		mov	eax, [ebx+4Ch]
		mov	ecx, [ebx+50h]
		lea	edx, [eax+1]
		cmp	edx, ecx
		jl	loc_6ED82DC1
		add	eax, 2
		add	ecx, ecx
		cmp	eax, ecx
		jl	loc_6ED82DD0

loc_6ED82D10:				; CODE XREF: sub_6ED82AD0+302j
		mov	[ebx+50h], eax
		shl	eax, 2
		mov	[esp+2Ch+var_28], eax
		mov	eax, [ebx+48h]
		mov	[esp+2Ch+var_2C], eax
		call	ds:_Z8qReallocPvj
		test	eax, eax
		mov	[ebx+48h], eax
		jz	loc_6ED82DE5

loc_6ED82D31:				; CODE XREF: sub_6ED82AD0+320j
		mov	edx, [ebx+4Ch]
		add	edx, 1

loc_6ED82D37:				; CODE XREF: sub_6ED82AD0+2F4j
		mov	[ebx+4Ch], edx
		mov	dword ptr [eax+edx*4], 20h
		add	esp, 1Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED82D50:				; CODE XREF: sub_6ED82AD0+106j
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jl	loc_6ED82C01
		jmp	loc_6ED82BDF
; ---------------------------------------------------------------------------

loc_6ED82D61:				; CODE XREF: sub_6ED82AD0+71j
		mov	eax, ecx
		jmp	loc_6ED82B47
; ---------------------------------------------------------------------------

loc_6ED82D68:				; CODE XREF: sub_6ED82AD0+15Cj
		mov	[esp+2Ch+var_2C], ebx
		nop
		lea	esi, [esi+0]
		call	sub_6ED81C20
		movzx	esi, ax
		jmp	loc_6ED82B07
; ---------------------------------------------------------------------------
		align 10h

loc_6ED82D80:				; CODE XREF: sub_6ED82AD0+1A6j
		mov	edx, [ebx+40h]
		mov	eax, [ebx+44h]
		cmp	eax, [edx+8]
		jge	short loc_6ED82DA5
		mov	edx, [edx+0Ch]
		movzx	eax, word ptr [edx+eax*2]
		jmp	loc_6ED82C82
; ---------------------------------------------------------------------------

loc_6ED82D97:				; CODE XREF: sub_6ED82AD0+92j
		call	ds:_Z9qBadAllocv
		mov	eax, [ebx+48h]
		jmp	loc_6ED82B68
; ---------------------------------------------------------------------------

loc_6ED82DA5:				; CODE XREF: sub_6ED82AD0+2B9j
		mov	[esp+2Ch+var_2C], ebx
		call	sub_6ED81C20
		movzx	eax, ax
		test	eax, eax
		jz	loc_6ED82C93
		sub	dword ptr [ebx+44h], 1
		jmp	loc_6ED82C82
; ---------------------------------------------------------------------------

loc_6ED82DC1:				; CODE XREF: sub_6ED82AD0+22Dj
		mov	eax, [ebx+48h]
		jmp	loc_6ED82D37
; ---------------------------------------------------------------------------
		align 10h

loc_6ED82DD0:				; CODE XREF: sub_6ED82AD0+23Aj
		mov	eax, ecx
		jmp	loc_6ED82D10
; ---------------------------------------------------------------------------

loc_6ED82DD7:				; CODE XREF: sub_6ED82AD0+BCj
		add	dword ptr [ebx+44h], 1
		nop
		lea	esi, [esi+0]
		jmp	loc_6ED82B98
; ---------------------------------------------------------------------------

loc_6ED82DE5:				; CODE XREF: sub_6ED82AD0+25Bj
		call	ds:_Z9qBadAllocv
		mov	eax, [ebx+48h]
		xchg	ax, ax
		jmp	loc_6ED82D31
sub_6ED82AD0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED82E00	proc near		; CODE XREF: sub_6ED83560+138Ap
					; sub_6ED83560+1700p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [ebx+4Ch]
		cmp	eax, 0FFFFFFFFh
		jz	short loc_6ED82E50
		mov	edx, [ebx+48h]
		mov	eax, [edx+eax*4]

loc_6ED82E16:				; CODE XREF: sub_6ED82E00+A3j
		cmp	eax, 50h
		jz	short loc_6ED82E67

loc_6ED82E1B:				; CODE XREF: sub_6ED82E00+65j
		cmp	eax, 53h
		jz	short loc_6ED82E27

loc_6ED82E20:				; CODE XREF: sub_6ED82E00+9Dj
		xor	eax, eax
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_6ED82E27:				; CODE XREF: sub_6ED82E00+1Ej
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_10], 1
		mov	[esp+1Ch+var_14], 22h
		mov	[esp+1Ch+var_18], offset aSystem_2 ; "SYSTEM"
		call	sub_6ED82180
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED82E50:				; CODE XREF: sub_6ED82E00+Ej
		mov	edx, [ebx+40h]
		mov	eax, [ebx+44h]
		cmp	eax, [edx+8]
		jge	short loc_6ED82E90
		mov	edx, [edx+0Ch]
		movzx	eax, word ptr [edx+eax*2]
		cmp	eax, 50h
		jnz	short loc_6ED82E1B

loc_6ED82E67:				; CODE XREF: sub_6ED82E00+19j
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_10], 1
		mov	[esp+1Ch+var_14], 23h
		mov	[esp+1Ch+var_18], offset aPublic_2 ; "PUBLIC"
		call	sub_6ED82180
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED82E90:				; CODE XREF: sub_6ED82E00+59j
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED81C20
		movzx	eax, ax
		test	eax, eax
		jz	short loc_6ED82E20
		sub	dword ptr [ebx+44h], 1
		jmp	loc_6ED82E16
sub_6ED82E00	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED82EB0	proc near		; CODE XREF: sub_6ED83560+14ACp

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [ebx+4Ch]
		cmp	eax, 0FFFFFFFFh
		jz	short loc_6ED82EE0
		mov	edx, [ebx+48h]
		mov	eax, [edx+eax*4]

loc_6ED82EC6:				; CODE XREF: sub_6ED82EB0+46j
					; sub_6ED82EB0+157j
		sub	eax, 41h
		cmp	eax, 1Ah	; switch 27 cases
		jbe	short loc_6ED82ED5

loc_6ED82ECE:				; CODE XREF: sub_6ED82EB0:loc_6ED82ED5j
					; sub_6ED82EB0+14Dj
					; DATA XREF: ...
		xor	eax, eax	; jumptable 6ED82ED5 default case

loc_6ED82ED0:				; CODE XREF: sub_6ED82EB0+BEj
					; sub_6ED82EB0+E4j
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_6ED82ED5:				; CODE XREF: sub_6ED82EB0+1Cj
		jmp	ds:off_6EDA21D0[eax*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_6ED82EE0:				; CODE XREF: sub_6ED82EB0+Ej
		mov	edx, [ebx+40h]
		mov	eax, [ebx+44h]
		cmp	eax, [edx+8]
		jge	loc_6ED82FF0
		mov	edx, [edx+0Ch]
		movzx	eax, word ptr [edx+eax*2]
		jmp	short loc_6ED82EC6
; ---------------------------------------------------------------------------

loc_6ED82EF8:				; CODE XREF: sub_6ED82EB0:loc_6ED82ED5j
					; DATA XREF: .rdata:off_6EDA21D0o
		mov	[esp+1Ch+var_1C], ebx ;	jumptable 6ED82ED5 case	26
		mov	[esp+1Ch+var_10], 0
		mov	[esp+1Ch+var_14], 1Ch
		mov	[esp+1Ch+var_18], offset aCdata_3 ; "[CDATA["
		call	sub_6ED82180
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED82F20:				; CODE XREF: sub_6ED82EB0:loc_6ED82ED5j
					; DATA XREF: .rdata:off_6EDA21D0o
		mov	[esp+1Ch+var_1C], ebx ;	jumptable 6ED82ED5 case	13
		mov	[esp+1Ch+var_10], 1
		mov	[esp+1Ch+var_14], 21h
		mov	[esp+1Ch+var_18], offset aNotation_1 ; "NOTATION"
		call	sub_6ED82180
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_6ED82F45:				; CODE XREF: sub_6ED82EB0:loc_6ED82ED5j
					; DATA XREF: .rdata:off_6EDA21D0o
		mov	[esp+1Ch+var_10], 1 ; jumptable	6ED82ED5 case 4
		mov	[esp+1Ch+var_14], 1Eh
		mov	[esp+1Ch+var_18], offset aElement ; "ELEMENT"
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED82180
		mov	edx, eax
		mov	eax, 1
		test	dl, dl
		jnz	loc_6ED82ED0
		mov	[esp+1Ch+var_10], 1
		mov	[esp+1Ch+var_14], 20h
		mov	[esp+1Ch+var_18], offset aEntity_0 ; "ENTITY"
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED82180
		jmp	loc_6ED82ED0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED82FA0:				; CODE XREF: sub_6ED82EB0:loc_6ED82ED5j
					; DATA XREF: .rdata:off_6EDA21D0o
		mov	[esp+1Ch+var_1C], ebx ;	jumptable 6ED82ED5 case	3
		mov	[esp+1Ch+var_10], 1
		mov	[esp+1Ch+var_14], 1Dh
		mov	[esp+1Ch+var_18], offset aDoctype_1 ; "DOCTYPE"
		call	sub_6ED82180
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_6ED82FC5:				; CODE XREF: sub_6ED82EB0:loc_6ED82ED5j
					; DATA XREF: .rdata:off_6EDA21D0o
		mov	[esp+1Ch+var_1C], ebx ;	jumptable 6ED82ED5 case	0
		mov	[esp+1Ch+var_10], 1
		mov	[esp+1Ch+var_14], 1Fh
		mov	[esp+1Ch+var_18], offset aAttlist_0 ; "ATTLIST"
		call	sub_6ED82180
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED82FF0:				; CODE XREF: sub_6ED82EB0+39j
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED81C20
		movzx	eax, ax
		test	eax, eax
		jz	loc_6ED82ECE	; jumptable 6ED82ED5 default case
		sub	dword ptr [ebx+44h], 1
		jmp	loc_6ED82EC6
sub_6ED82EB0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED83010	proc near		; CODE XREF: sub_6ED83560+132Dp
					; sub_6ED83560+181Fp ...

var_80		= dword	ptr -80h
var_79		= byte ptr -79h
var_78		= word ptr -78h
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5A		= word ptr -5Ah
var_58		= dword	ptr -58h
var_52		= word ptr -52h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= word ptr  10h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 0A4h
		movzx	eax, [ebp+arg_8]
		lea	edx, [ebp+var_8]
		mov	[ebp+var_2C], edx
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_78], ax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_30], offset dword_6ED9AD94
		mov	[ebp+var_28], offset sub_6ED83527
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	ecx, [ebp+arg_0]
		movsx	edx, [ebp+var_78]
		mov	eax, [ecx+198h]
		mov	ebx, [ecx+90h]
		add	ecx, 198h
		mov	[ebp+var_58], ecx
		mov	[ebp+var_64], edx
		mov	eax, [eax+8]
		mov	[ebp+var_80], ebx
		mov	[ebp+var_68], eax
		mov	eax, [ebp+arg_4]
		add	eax, 1
		mov	[ebp+var_60], eax
		lea	esi, [esi+0]

loc_6ED83080:				; CODE XREF: sub_6ED83010+172j
					; sub_6ED83010+1AEj
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+4Ch]
		cmp	eax, 0FFFFFFFFh
		jz	loc_6ED83297

loc_6ED8308F:				; CODE XREF: sub_6ED83010+281j
		cmp	byte ptr [ecx+78h], 0
		jnz	loc_6ED833E8
		lea	edx, ds:0[eax*4]
		sub	eax, 1
		add	edx, [ecx+48h]
		mov	[ecx+4Ch], eax
		mov	edx, [edx]
		mov	[ebp+var_50], edx

loc_6ED830AE:				; CODE XREF: sub_6ED83010+2A9j
					; sub_6ED83010+36Ej
		mov	edx, [ebp+var_50]
		test	edx, edx
		jz	loc_6ED833E8
		cmp	[ebp+var_50], 0Ah
		jz	loc_6ED831E5
		cmp	[ebp+var_50], 0Dh
		jz	loc_6ED832C0
		cmp	[ebp+var_50], 9
		mov	[ebp+var_52], 9
		jz	loc_6ED8321C
		mov	eax, [ebp+var_50]
		sub	eax, 0FFFEh
		cmp	eax, 1
		jbe	loc_6ED83460
		cmp	[ebp+var_50], 1Fh
		jbe	loc_6ED83460
		cmp	[ebp+var_50], 10FFFFh
		ja	loc_6ED83460
		mov	edx, [ebp+arg_0]
		movzx	ebx, word ptr [ebp+var_50]
		mov	eax, [edx+198h]
		mov	[ebp+var_5A], bx
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED833A0
		mov	edx, [eax+8]

loc_6ED83124:				; CODE XREF: sub_6ED83010+39Cj
		add	edx, 1
		mov	[esp], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4growEi
		mov	ecx, [ebp+var_58]
		mov	[esp], ecx
		mov	[esp+4], eax
		call	ds:_ZN7QString7reallocEi
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx+198h]
		mov	edx, [eax+8]

loc_6ED83153:				; CODE XREF: sub_6ED83010+396j
		mov	ecx, [eax+0Ch]
		movzx	ebx, [ebp+var_5A]
		mov	[ecx+edx*2], bx
		add	edx, 1
		mov	[eax+8], edx
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+198h]
		mov	edx, [eax+8]
		mov	eax, [eax+0Ch]
		mov	word ptr [eax+edx*2], 0

loc_6ED83179:				; CODE XREF: sub_6ED83010+340j
		mov	ecx, [ebp+arg_4]
		movsx	eax, byte ptr [ecx]
		cmp	eax, [ebp+var_50]
		jnz	loc_6ED83080
		mov	ebx, [ebp+var_60]
		cmp	byte ptr [ebx],	0
		jz	loc_6ED834F6
		mov	edx, [ebp+var_64]
		mov	ecx, [ebp+var_60]
		mov	ebx, [ebp+arg_0]
		mov	dword ptr [esp+0Ch], 0
		mov	[esp+8], edx
		mov	[esp+4], ecx
		mov	[esp], ebx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED82180
		test	al, al
		jz	loc_6ED83080

loc_6ED831C4:				; CODE XREF: sub_6ED83010+4EBj
		mov	[ebp+var_79], 1
		jmp	loc_6ED83436
; ---------------------------------------------------------------------------
		align 10h

loc_6ED831D0:				; CODE XREF: sub_6ED83010+2C8j
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+4Ch]
		cmp	eax, 0FFFFFFFFh
		jz	loc_6ED83450
		sub	eax, 1
		mov	[ecx+4Ch], eax

loc_6ED831E5:				; CODE XREF: sub_6ED83010+ADj
					; sub_6ED83010+2D0j ...
		mov	ebx, [ebp+arg_0]
		mov	[ebp+var_52], 0Ah
		mov	eax, [ebx+44h]
		add	dword ptr [ebx+90h], 1
		adc	dword ptr [ebx+94h], 0
		mov	edx, eax
		sar	edx, 1Fh
		add	eax, [ebx+0A0h]
		adc	edx, [ebx+0A4h]
		mov	[ebx+98h], eax
		mov	[ebx+9Ch], edx

loc_6ED8321C:				; CODE XREF: sub_6ED83010+C7j
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx+198h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED83355
		mov	edx, [eax+8]

loc_6ED83233:				; CODE XREF: sub_6ED83010+351j
		add	edx, 1
		mov	[esp], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4growEi
		mov	[esp+4], eax
		mov	eax, [ebp+var_58]
		mov	[esp], eax
		call	ds:_ZN7QString7reallocEi
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+198h]
		mov	edx, [eax+8]

loc_6ED83262:				; CODE XREF: sub_6ED83010+34Bj
		mov	ecx, [eax+0Ch]
		movzx	ebx, [ebp+var_52]
		mov	[ecx+edx*2], bx
		add	edx, 1
		mov	ecx, [ebp+arg_0]
		mov	[eax+8], edx
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+198h]
		mov	edx, [eax+8]
		mov	eax, [eax+0Ch]
		mov	word ptr [eax+edx*2], 0
		mov	eax, [ecx+4Ch]
		cmp	eax, 0FFFFFFFFh
		jnz	loc_6ED8308F

loc_6ED83297:				; CODE XREF: sub_6ED83010+79j
		mov	ebx, [ebp+arg_0]
		mov	edx, [ebx+40h]
		mov	eax, [ebx+44h]
		cmp	eax, [edx+8]
		jge	loc_6ED83366
		mov	edx, [edx+0Ch]
		lea	ecx, [eax+1]
		mov	[ebx+44h], ecx
		movzx	edx, word ptr [edx+eax*2]
		mov	[ebp+var_50], edx
		jmp	loc_6ED830AE
; ---------------------------------------------------------------------------
		align 10h

loc_6ED832C0:				; CODE XREF: sub_6ED83010+B7j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4Ch]
		cmp	eax, 0FFFFFFFFh
		jz	loc_6ED83383
		mov	edx, [edx+48h]
		mov	eax, [edx+eax*4]

loc_6ED832D5:				; CODE XREF: sub_6ED83010+388j
					; sub_6ED83010+3C5j
		cmp	eax, 0Ah
		jz	loc_6ED831D0
		test	eax, eax
		jnz	loc_6ED831E5

loc_6ED832E6:				; CODE XREF: sub_6ED83010+3B8j
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+arg_0]
		mov	eax, [edx+4Ch]
		mov	ecx, [ebx+50h]
		lea	edx, [eax+1]
		cmp	edx, ecx
		jl	loc_6ED833E0
		add	ecx, ecx
		add	eax, 2
		cmp	eax, ecx
		jge	short loc_6ED83308
		mov	eax, ecx

loc_6ED83308:				; CODE XREF: sub_6ED83010+2F4j
		mov	edx, [ebp+arg_0]
		mov	[edx+50h], eax
		shl	eax, 2
		mov	[esp+4], eax
		mov	eax, [edx+48h]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_Z8qReallocPvj
		mov	ecx, [ebp+arg_0]
		test	eax, eax
		mov	[ecx+48h], eax
		jz	loc_6ED834D8
		mov	edx, [ecx+4Ch]
		add	edx, 1

loc_6ED8333C:				; CODE XREF: sub_6ED83010+3D3j
					; sub_6ED83010+4E1j
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_50], 0
		mov	[ecx+4Ch], edx
		mov	dword ptr [eax+edx*4], 0Dh
		jmp	loc_6ED83179
; ---------------------------------------------------------------------------

loc_6ED83355:				; CODE XREF: sub_6ED83010+21Aj
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jl	loc_6ED83262
		jmp	loc_6ED83233
; ---------------------------------------------------------------------------

loc_6ED83366:				; CODE XREF: sub_6ED83010+293j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED81C20
		movzx	eax, ax
		mov	[ebp+var_50], eax
		jmp	loc_6ED830AE
; ---------------------------------------------------------------------------

loc_6ED83383:				; CODE XREF: sub_6ED83010+2B9j
		mov	ebx, [ebp+arg_0]
		mov	edx, [ebx+40h]
		mov	eax, [ebx+44h]
		cmp	eax, [edx+8]
		jge	short loc_6ED833B1
		mov	edx, [edx+0Ch]
		movzx	eax, word ptr [edx+eax*2]
		jmp	loc_6ED832D5
; ---------------------------------------------------------------------------
		align 10h

loc_6ED833A0:				; CODE XREF: sub_6ED83010+10Bj
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jl	loc_6ED83153
		jmp	loc_6ED83124
; ---------------------------------------------------------------------------

loc_6ED833B1:				; CODE XREF: sub_6ED83010+37Fj
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED81C20
		movzx	eax, ax
		test	eax, eax
		jz	loc_6ED832E6
		mov	edx, [ebp+arg_0]
		sub	dword ptr [edx+44h], 1
		jmp	loc_6ED832D5
; ---------------------------------------------------------------------------
		align 10h

loc_6ED833E0:				; CODE XREF: sub_6ED83010+2E7j
		mov	eax, [ebx+48h]
		jmp	loc_6ED8333C
; ---------------------------------------------------------------------------

loc_6ED833E8:				; CODE XREF: sub_6ED83010+83j
					; sub_6ED83010+A3j
		mov	eax, [ebp+var_68]
		mov	edx, [ebp+var_58]
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	[esp+4], edx
		mov	[esp], ecx
		call	sub_6ED72C90
		mov	ebx, [ebp+var_68]
		mov	eax, [ebp+var_58]
		mov	[esp+4], ebx
		mov	[esp], eax
		call	ds:_ZN7QString6resizeEi

loc_6ED8341B:				; CODE XREF: sub_6ED83010+4AAj
					; sub_6ED83010+4C3j
		mov	eax, [ebp+var_80]
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_79], 0
		mov	edx, eax
		sar	edx, 1Fh
		mov	[ecx+90h], eax
		mov	[ecx+94h], edx

loc_6ED83436:				; CODE XREF: sub_6ED83010+1B8j
					; sub_6ED83010+512j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_79]
		mov	ebx, [ebp+var_4]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED83450:				; CODE XREF: sub_6ED83010+1C9j
		mov	ebx, [ebp+arg_0]
		add	dword ptr [ebx+44h], 1
		jmp	loc_6ED831E5
; ---------------------------------------------------------------------------
		align 10h

loc_6ED83460:				; CODE XREF: sub_6ED83010+D8j
					; sub_6ED83010+E2j ...
		lea	ecx, [ebp+var_C]
		mov	dword ptr [esp+10h], 0
		lea	ebx, [ebp+var_C]
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], offset aInvalidXmlChar ; "Invalid XML character."
		mov	dword ptr [esp+4], offset aQxmlstream ;	"QXmlStream"
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN16QCoreApplication9translateEPKcS1_S1_NS_8EncodingE
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 1
		sub	esp, 4
		mov	[esp+4], ebx
		mov	[esp], eax
		call	sub_6ED71AE0
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED8341B
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED8341B
; ---------------------------------------------------------------------------

loc_6ED834D8:				; CODE XREF: sub_6ED83010+320j
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_Z9qBadAllocv
		mov	ebx, [ebp+arg_0]
		mov	edx, [ebx+4Ch]
		mov	eax, [ebx+48h]
		add	edx, 1
		jmp	loc_6ED8333C
; ---------------------------------------------------------------------------

loc_6ED834F6:				; CODE XREF: sub_6ED83010+17Ej
		cmp	[ebp+var_78], 0
		js	loc_6ED831C4
		movzx	eax, [ebp+var_78]
		mov	[ebp+var_48], 0FFFFFFFFh
		shl	eax, 10h
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED91B80
		mov	[ebp+var_79], 1
		jmp	loc_6ED83436
sub_6ED83010	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED83527	proc near		; DATA XREF: sub_6ED83010+2Co
		add	ebp, 8
		mov	edx, [ebp-44h]
		lea	eax, [ebp-0Ch]
		mov	[ebp-84h], edx
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-84h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
sub_6ED83527	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED83560	proc near		; CODE XREF: sub_6ED89B30+1C5p
					; _ZN16QXmlStreamReader8readNextEv+6Ap

var_478		= dword	ptr -478h
var_474		= dword	ptr -474h
var_470		= dword	ptr -470h
var_46C		= dword	ptr -46Ch
var_468		= dword	ptr -468h
var_464		= dword	ptr -464h
var_460		= dword	ptr -460h
var_459		= byte ptr -459h
var_458		= dword	ptr -458h
var_454		= dword	ptr -454h
var_450		= dword	ptr -450h
var_44C		= dword	ptr -44Ch
var_445		= byte ptr -445h
var_444		= dword	ptr -444h
var_440		= dword	ptr -440h
var_43C		= dword	ptr -43Ch
var_438		= dword	ptr -438h
var_434		= dword	ptr -434h
var_430		= dword	ptr -430h
var_42C		= dword	ptr -42Ch
var_428		= dword	ptr -428h
var_424		= dword	ptr -424h
var_420		= dword	ptr -420h
var_41C		= dword	ptr -41Ch
var_418		= dword	ptr -418h
var_414		= dword	ptr -414h
var_410		= dword	ptr -410h
var_40C		= dword	ptr -40Ch
var_408		= dword	ptr -408h
var_404		= dword	ptr -404h
var_400		= dword	ptr -400h
var_3FC		= dword	ptr -3FCh
var_3F8		= dword	ptr -3F8h
var_3F4		= dword	ptr -3F4h
var_3F0		= dword	ptr -3F0h
var_3EC		= dword	ptr -3ECh
var_3E8		= dword	ptr -3E8h
var_3E4		= dword	ptr -3E4h
var_3E0		= dword	ptr -3E0h
var_3DC		= dword	ptr -3DCh
var_3D8		= dword	ptr -3D8h
var_3D4		= dword	ptr -3D4h
var_3D0		= dword	ptr -3D0h
var_3CC		= dword	ptr -3CCh
var_3C8		= dword	ptr -3C8h
var_3C4		= dword	ptr -3C4h
var_3BD		= byte ptr -3BDh
var_3BC		= dword	ptr -3BCh
var_3B8		= dword	ptr -3B8h
var_3B4		= dword	ptr -3B4h
var_3B0		= dword	ptr -3B0h
var_3AC		= dword	ptr -3ACh
var_3A4		= dword	ptr -3A4h
var_3A0		= dword	ptr -3A0h
var_39C		= dword	ptr -39Ch
var_394		= dword	ptr -394h
var_390		= dword	ptr -390h
var_38C		= dword	ptr -38Ch
var_388		= dword	ptr -388h
var_384		= dword	ptr -384h
var_380		= dword	ptr -380h
var_37A		= word ptr -37Ah
var_378		= dword	ptr -378h
var_374		= dword	ptr -374h
var_370		= dword	ptr -370h
var_36C		= dword	ptr -36Ch
var_368		= dword	ptr -368h
var_364		= dword	ptr -364h
var_360		= dword	ptr -360h
var_35A		= word ptr -35Ah
var_358		= dword	ptr -358h
var_354		= dword	ptr -354h
var_350		= dword	ptr -350h
var_34C		= dword	ptr -34Ch
var_348		= dword	ptr -348h
var_342		= word ptr -342h
var_340		= dword	ptr -340h
var_33C		= dword	ptr -33Ch
var_338		= dword	ptr -338h
var_334		= dword	ptr -334h
var_330		= dword	ptr -330h
var_32C		= dword	ptr -32Ch
var_328		= dword	ptr -328h
var_324		= dword	ptr -324h
var_320		= dword	ptr -320h
var_31C		= dword	ptr -31Ch
var_318		= dword	ptr -318h
var_314		= dword	ptr -314h
var_310		= dword	ptr -310h
var_30C		= dword	ptr -30Ch
var_308		= dword	ptr -308h
var_304		= dword	ptr -304h
var_300		= dword	ptr -300h
var_2FC		= dword	ptr -2FCh
var_2F5		= byte ptr -2F5h
var_2F4		= dword	ptr -2F4h
var_2F0		= dword	ptr -2F0h
var_2EC		= dword	ptr -2ECh
var_2E8		= dword	ptr -2E8h
var_2E4		= word ptr -2E4h
var_2E2		= word ptr -2E2h
var_2E0		= dword	ptr -2E0h
var_2DC		= dword	ptr -2DCh
var_2D8		= dword	ptr -2D8h
var_2D4		= dword	ptr -2D4h
var_2D0		= dword	ptr -2D0h
var_2CC		= byte ptr -2CCh
var_2C8		= dword	ptr -2C8h
var_2C4		= dword	ptr -2C4h
var_2B4		= dword	ptr -2B4h
var_2B0		= dword	ptr -2B0h
var_2AC		= dword	ptr -2ACh
var_2A8		= dword	ptr -2A8h
var_2A4		= dword	ptr -2A4h
var_28C		= dword	ptr -28Ch
var_288		= dword	ptr -288h
var_284		= dword	ptr -284h
var_280		= dword	ptr -280h
var_27C		= dword	ptr -27Ch
var_278		= dword	ptr -278h
var_274		= dword	ptr -274h
var_270		= dword	ptr -270h
var_26C		= dword	ptr -26Ch
var_268		= dword	ptr -268h
var_264		= dword	ptr -264h
var_260		= dword	ptr -260h
var_25C		= dword	ptr -25Ch
var_258		= dword	ptr -258h
var_254		= dword	ptr -254h
var_250		= dword	ptr -250h
var_24C		= dword	ptr -24Ch
var_248		= dword	ptr -248h
var_244		= dword	ptr -244h
var_240		= dword	ptr -240h
var_23C		= dword	ptr -23Ch
var_238		= dword	ptr -238h
var_234		= dword	ptr -234h
var_230		= dword	ptr -230h
var_22C		= dword	ptr -22Ch
var_228		= dword	ptr -228h
var_224		= dword	ptr -224h
var_220		= dword	ptr -220h
var_21C		= dword	ptr -21Ch
var_218		= dword	ptr -218h
var_214		= dword	ptr -214h
var_210		= dword	ptr -210h
var_20C		= dword	ptr -20Ch
var_208		= dword	ptr -208h
var_204		= dword	ptr -204h
var_200		= dword	ptr -200h
var_1FC		= dword	ptr -1FCh
var_1F8		= dword	ptr -1F8h
var_1F4		= dword	ptr -1F4h
var_1F0		= dword	ptr -1F0h
var_1EC		= dword	ptr -1ECh
var_1E8		= dword	ptr -1E8h
var_1E4		= dword	ptr -1E4h
var_1E0		= dword	ptr -1E0h
var_1DC		= dword	ptr -1DCh
var_1D8		= dword	ptr -1D8h
var_1D4		= dword	ptr -1D4h
var_1D0		= dword	ptr -1D0h
var_1CC		= dword	ptr -1CCh
var_1C8		= dword	ptr -1C8h
var_1C4		= dword	ptr -1C4h
var_1C0		= dword	ptr -1C0h
var_1BC		= dword	ptr -1BCh
var_1B8		= dword	ptr -1B8h
var_1B4		= dword	ptr -1B4h
var_1B0		= dword	ptr -1B0h
var_1AC		= dword	ptr -1ACh
var_1A8		= dword	ptr -1A8h
var_1A4		= dword	ptr -1A4h
var_1A0		= dword	ptr -1A0h
var_19C		= dword	ptr -19Ch
var_198		= dword	ptr -198h
var_194		= dword	ptr -194h
var_190		= dword	ptr -190h
var_18C		= dword	ptr -18Ch
var_188		= dword	ptr -188h
var_184		= dword	ptr -184h
var_180		= dword	ptr -180h
var_17C		= dword	ptr -17Ch
var_178		= dword	ptr -178h
var_174		= dword	ptr -174h
var_170		= dword	ptr -170h
var_16C		= dword	ptr -16Ch
var_168		= dword	ptr -168h
var_164		= dword	ptr -164h
var_160		= dword	ptr -160h
var_15C		= dword	ptr -15Ch
var_158		= dword	ptr -158h
var_154		= dword	ptr -154h
var_150		= dword	ptr -150h
var_14C		= dword	ptr -14Ch
var_148		= dword	ptr -148h
var_144		= dword	ptr -144h
var_140		= dword	ptr -140h
var_13C		= dword	ptr -13Ch
var_138		= dword	ptr -138h
var_134		= dword	ptr -134h
var_130		= dword	ptr -130h
var_12C		= dword	ptr -12Ch
var_128		= dword	ptr -128h
var_124		= dword	ptr -124h
var_120		= dword	ptr -120h
var_11C		= dword	ptr -11Ch
var_118		= dword	ptr -118h
var_114		= dword	ptr -114h
var_110		= dword	ptr -110h
var_10C		= dword	ptr -10Ch
var_108		= byte ptr -108h
var_104		= dword	ptr -104h
var_100		= dword	ptr -100h
var_FC		= byte ptr -0FCh
var_F8		= dword	ptr -0F8h
var_F4		= dword	ptr -0F4h
var_F0		= dword	ptr -0F0h
var_EC		= byte ptr -0ECh
var_E8		= byte ptr -0E8h
var_E4		= byte ptr -0E4h
var_E0		= byte ptr -0E0h
var_DC		= dword	ptr -0DCh
var_D8		= byte ptr -0D8h
var_D4		= byte ptr -0D4h
var_D0		= dword	ptr -0D0h
var_CC		= byte ptr -0CCh
var_C8		= byte ptr -0C8h
var_C4		= byte ptr -0C4h
var_C0		= byte ptr -0C0h
var_BC		= byte ptr -0BCh
var_B8		= byte ptr -0B8h
var_B4		= byte ptr -0B4h
var_B0		= byte ptr -0B0h
var_AC		= byte ptr -0ACh
var_A8		= byte ptr -0A8h
var_A4		= byte ptr -0A4h
var_A0		= byte ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= byte ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= byte ptr -78h
var_74		= byte ptr -74h
var_70		= byte ptr -70h
var_6C		= byte ptr -6Ch
var_68		= byte ptr -68h
var_64		= dword	ptr -64h
var_60		= byte ptr -60h
var_5C		= byte ptr -5Ch
var_58		= byte ptr -58h
var_54		= byte ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= byte ptr -48h
var_44		= dword	ptr -44h
var_40		= byte ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= byte ptr -34h
var_30		= dword	ptr -30h
var_2C		= byte ptr -2Ch
var_28		= word ptr -28h
var_26		= word ptr -26h
var_24		= word ptr -24h
var_22		= word ptr -22h
var_20		= word ptr -20h
var_1E		= word ptr -1Eh
var_1C		= word ptr -1Ch
var_1A		= word ptr -1Ah
var_18		= byte ptr -18h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 48Ch
		mov	[ebp+var_2AC], eax
		lea	eax, [ebp+var_2CC]
		mov	[esp], eax
		mov	[ebp+var_2B4], offset sub_6ED997C0
		mov	[ebp+var_2B0], offset word_6ED9AD9A
		mov	[ebp+var_2A8], offset loc_6ED8903B
		mov	[ebp+var_2A4], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+7Ch]
		cmp	eax, 0Ah	; switch 11 cases
		jbe	loc_6ED837B8

loc_6ED835B6:				; CODE XREF: sub_6ED83560:loc_6ED837B8j
					; sub_6ED83560+AC2j
					; DATA XREF: ...
		mov	esi, [ebp+arg_0] ; jumptable 6ED837B8 default case
		cmp	byte ptr [esi+0ACh], 0
		jz	loc_6ED83E6C

loc_6ED835C6:				; CODE XREF: sub_6ED83560+97Bj
					; sub_6ED83560+3695j
		mov	eax, [esi+7Ch]

loc_6ED835C9:				; CODE XREF: sub_6ED83560:loc_6ED837B8j
					; sub_6ED83560+531j ...
		cmp	eax, 1		; jumptable 6ED837B8 cases 0,1
		jz	short loc_6ED835D8
		mov	edi, [ebp+arg_0]
		mov	dword ptr [edi+7Ch], 0

loc_6ED835D8:				; CODE XREF: sub_6ED83560+6Cj
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+184h]
		test	eax, eax
		mov	[ebp+var_2E0], eax
		jnz	loc_6ED837C0
		mov	ebx, [ebp+arg_0]
		mov	edx, [ebx+188h]
		mov	eax, [ebx+194h]
		mov	eax, [eax+edx*4]
		mov	[ebp+var_2DC], eax

loc_6ED83607:				; CODE XREF: sub_6ED83560+30Aj
		mov	esi, [ebp+arg_0]
		mov	edi, ds:_Z8qReallocPvj
		mov	edx, ds:_Z9qBadAllocv
		movzx	eax, word ptr [esi+1A8h]
		add	esi, 198h
		mov	[ebp+var_2F0], esi
		mov	[ebp+var_2F4], edi
		mov	[ebp+var_310], edx
		jmp	loc_6ED8372C
; ---------------------------------------------------------------------------
		align 10h

loc_6ED83640:				; CODE XREF: sub_6ED83560+1D0j
		mov	ecx, [ebp+var_2DC]
		cwde
		movsx	edx, ds:word_6EDA32C0[ecx+ecx]

loc_6ED8364F:				; CODE XREF: sub_6ED83560+253j
					; sub_6ED83560+6D6j ...
		add	edx, eax
		js	short loc_6ED83663
		movsx	ecx, ds:word_6EDA43C0[edx+edx]
		cmp	ecx, eax
		jz	loc_6ED83B10

loc_6ED83663:				; CODE XREF: sub_6ED83560+F1j
					; sub_6ED83560+1EFj
		mov	eax, [ebp+var_2DC]
		movsx	eax, ds:word_6EDA2EA0[eax+eax]
		neg	eax
		mov	[ebp+var_2DC], eax
		cmp	[ebp+var_2DC], 1A0h
		jz	loc_6ED83B2E

loc_6ED83689:				; CODE XREF: sub_6ED83560+5C8j
		cmp	[ebp+var_2DC], 0
		jle	loc_6ED83D13
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+188h]
		mov	edx, [ecx+18Ch]
		add	eax, 1
		mov	[ecx+188h], eax
		lea	ecx, [edx-1]
		cmp	eax, ecx
		jz	loc_6ED83B72
		mov	ebx, [ebp+arg_0]
		mov	edx, [ebx+190h]

loc_6ED836C2:				; CODE XREF: sub_6ED83560+68Fj
					; sub_6ED83560+E1Fj
		mov	ebx, [ebp+arg_0]
		shl	eax, 4
		lea	eax, [edx+eax]
		movzx	edx, word ptr [ebx+1AAh]
		mov	[eax+0Ch], dx
		mov	edx, [ebx+198h]
		mov	edx, [edx+8]
		mov	dword ptr [eax+8], 0
		mov	dword ptr [eax+4], 1
		mov	[eax], edx
		movzx	esi, word ptr [ebx+1AAh]
		test	si, si
		mov	[ebp+var_2E2], si
		jnz	loc_6ED83A96

loc_6ED83706:				; CODE XREF: sub_6ED83560+5A8j
		mov	edi, [ebp+arg_0]
		mov	ecx, [ebp+var_2DC]
		mov	eax, [edi+194h]
		mov	edx, [edi+188h]
		mov	word ptr [edi+1A8h], 0FFFFh
		mov	[eax+edx*4], ecx
		mov	eax, 0FFFFFFFFh

loc_6ED8372C:				; CODE XREF: sub_6ED83560+D5j
		cmp	ax, 0FFFFh
		jnz	loc_6ED83640
		mov	ebx, [ebp+var_2DC]
		movzx	ebx, ds:word_6EDA32C0[ebx+ebx]
		cmp	bx, 0FFC7h
		mov	[ebp+var_2E4], bx
		jz	loc_6ED83663
		mov	esi, [ebp+arg_0]
		mov	eax, [esi+4Ch]
		cmp	eax, 0FFFFFFFFh
		jz	loc_6ED83C80
		cmp	byte ptr [esi+78h], 0
		jnz	loc_6ED83C05
		lea	edx, ds:0[eax*4]
		sub	eax, 1
		add	edx, [esi+48h]
		mov	[esi+4Ch], eax
		mov	ecx, [edx]

loc_6ED83780:				; CODE XREF: sub_6ED83560+73Fj
					; sub_6ED83560+DF8j
		mov	edx, [ebp+arg_0]
		test	ecx, 0FF0000h
		mov	word ptr [edx+1A8h], 1
		mov	[edx+1AAh], cx
		jz	loc_6ED83CA4
		shr	ecx, 10h
		mov	[edx+1A8h], cx
		movsx	eax, cx
		movsx	edx, [ebp+var_2E4]
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------

loc_6ED837B8:				; CODE XREF: sub_6ED83560+50j
		jmp	ds:off_6EDA2464[eax*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_6ED837C0:				; CODE XREF: sub_6ED83560+89j
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+188h]
		mov	eax, [ecx+194h]
		mov	eax, [eax+edx*4-4]
		mov	dword ptr [ecx+184h], 0
		mov	[ebp+var_30C], eax

loc_6ED837E3:				; CODE XREF: sub_6ED83560+822j
		cmp	[ebp+var_2E0], 10Ch ; switch 269 cases
		jbe	loc_6ED83D36

loc_6ED837F3:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	esi, [ebp+arg_0] ; jumptable 6ED83D3C default case

loc_6ED837F6:				; CODE XREF: sub_6ED83560+1501j
					; sub_6ED83560+18FCj ...
		mov	eax, [esi+188h]
		lea	esi, [esi+0]

loc_6ED83800:				; CODE XREF: sub_6ED83560+F43j
					; sub_6ED83560+F71j ...
		mov	ecx, [ebp+var_2E0]
		shl	eax, 2
		mov	ebx, [ebp+var_30C]
		mov	edi, [ebp+arg_0]
		movsx	edx, ds:word_6EDA2A60[ecx+ecx]
		movsx	ecx, ds:word_6EDA3616[ebx+ebx]
		add	eax, [edi+194h]
		sub	edx, 39h
		add	ecx, edx
		js	short loc_6ED83845
		add	ecx, 3F9h
		movsx	ebx, ds:word_6EDA43C0[ecx+ecx]
		cmp	edx, ebx
		jz	loc_6ED86AC0

loc_6ED83845:				; CODE XREF: sub_6ED83560+2CDj
		movsx	edx, ds:word_6EDA3200[edx+edx]
		mov	[ebp+var_2DC], edx

loc_6ED83853:				; CODE XREF: sub_6ED83560+356Ej
		mov	edi, [ebp+arg_0]
		mov	esi, [ebp+var_2DC]
		mov	[ebp+var_2F5], 1
		mov	ebx, [edi+7Ch]
		mov	[eax], esi
		test	ebx, ebx
		jz	loc_6ED83607
		jmp	loc_6ED83B55
; ---------------------------------------------------------------------------

loc_6ED83875:				; CODE XREF: sub_6ED83560:loc_6ED837B8j
					; DATA XREF: .rdata:off_6EDA2464o
		mov	edi, [ebp+arg_0] ; jumptable 6ED837B8 case 8
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		add	edi, 0D8h
		mov	[ebp+var_F4], eax
		mov	[ebp+var_358], edi
		mov	[ebp+var_2D4], eax
		lock inc dword ptr [eax]
		setnz	al
		mov	ecx, [ebp+var_F4]
		mov	[ebp+var_318], ecx
		lock inc dword ptr [ecx]
		setnz	al
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx+0D8h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED86C4C

loc_6ED838C4:				; CODE XREF: sub_6ED83560+3708j
		mov	edi, [ebp+var_318]
		mov	esi, [ebp+arg_0]
		mov	[esi+0D8h], edi
		test	byte ptr [edi+0Ch], 1
		jnz	short loc_6ED838FF
		mov	eax, [edi+4]
		mov	[esp+8], eax
		mov	eax, [edi+8]
		mov	[ebp+var_2C8], 5
		mov	[esp+4], eax
		mov	eax, [ebp+var_358]
		mov	[esp], eax
		call	sub_6ED950E0

loc_6ED838FF:				; CODE XREF: sub_6ED83560+377j
		mov	eax, [ebp+var_F4]
		test	eax, eax
		jz	short loc_6ED83935
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED83935
		mov	eax, [ebp+var_F4]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_F4]
		mov	[esp], eax
		call	sub_6ED95090

loc_6ED83935:				; CODE XREF: sub_6ED83560+3A7j
					; sub_6ED83560+3B1j
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_2D4]
		add	edx, 0ECh
		mov	[ebp+var_F8], ecx
		mov	[ebp+var_354], edx
		lock inc dword ptr [ecx]
		setnz	al
		mov	ebx, [ebp+var_F8]
		mov	[ebp+var_314], ebx
		lock inc dword ptr [ebx]
		setnz	al
		mov	esi, [ebp+arg_0]
		mov	eax, [esi+0ECh]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED86C93

loc_6ED8397F:				; CODE XREF: sub_6ED83560+3758j
		mov	esi, [ebp+var_314]
		mov	ebx, [ebp+arg_0]
		mov	[ebx+0ECh], esi
		test	byte ptr [esi+0Ch], 1
		jnz	short loc_6ED839BA
		mov	eax, [esi+4]
		mov	edi, [ebp+var_354]
		mov	[esp+8], eax
		mov	eax, [esi+8]
		mov	[esp], edi
		mov	[ebp+var_2C8], 4
		mov	[esp+4], eax
		call	sub_6ED94CE0

loc_6ED839BA:				; CODE XREF: sub_6ED83560+432j
		mov	eax, [ebp+var_F8]
		test	eax, eax
		jz	short loc_6ED839F0
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED839F0
		mov	eax, [ebp+var_F8]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_F8]
		mov	[esp], eax
		call	sub_6ED94C90

loc_6ED839F0:				; CODE XREF: sub_6ED83560+462j
					; sub_6ED83560+46Cj
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+144h], 0
		mov	dword ptr [eax+14Ch], 0
		mov	dword ptr [eax+148h], 0
		mov	dword ptr [eax+150h], 0
		mov	dword ptr [eax+158h], 0
		mov	dword ptr [eax+154h], 0
		mov	dword ptr [eax+15Ch], 0
		mov	dword ptr [eax+164h], 0
		mov	dword ptr [eax+160h], 0

loc_6ED83A4D:				; CODE XREF: sub_6ED83560:loc_6ED837B8j
					; DATA XREF: .rdata:off_6EDA2464o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED837B8 cases 6,7
		movzx	eax, byte ptr [ecx+180h]
		mov	dword ptr [ecx+0F0h], 0
		mov	dword ptr [ecx+0F8h], 0
		mov	dword ptr [ecx+0F4h], 0
		and	eax, 0FFFFFFFBh
		or	eax, 2
		cmp	byte ptr [ecx+0ACh], 0
		mov	[ecx+180h], al
		jz	loc_6ED83DF5

loc_6ED83A8E:				; CODE XREF: sub_6ED83560+DDAj
		mov	eax, [ecx+7Ch]
		jmp	loc_6ED835C9	; jumptable 6ED837B8 cases 0,1
; ---------------------------------------------------------------------------

loc_6ED83A96:				; CODE XREF: sub_6ED83560+1A0j
		mov	eax, [ebx+198h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED83BF4
		mov	edx, [eax+8]

loc_6ED83AAA:				; CODE XREF: sub_6ED83560+6A0j
		add	edx, 1
		mov	[esp], edx
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	ds:_ZN7QString4growEi
		mov	edi, [ebp+var_2F0]
		mov	[esp], edi
		mov	[esp+4], eax
		call	ds:_ZN7QString7reallocEi
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+198h]
		mov	edx, [eax+8]

loc_6ED83ADF:				; CODE XREF: sub_6ED83560+69Aj
		mov	ecx, [eax+0Ch]
		movzx	ebx, [ebp+var_2E2]
		mov	[ecx+edx*2], bx
		add	edx, 1
		mov	[eax+8], edx
		mov	esi, [ebp+arg_0]
		mov	eax, [esi+198h]
		mov	edx, [eax+8]
		mov	eax, [eax+0Ch]
		mov	word ptr [eax+edx*2], 0
		jmp	loc_6ED83706
; ---------------------------------------------------------------------------
		align 10h

loc_6ED83B10:				; CODE XREF: sub_6ED83560+FDj
		movsx	edx, ds:word_6EDA3980[edx+edx]
		mov	[ebp+var_2DC], edx
		cmp	[ebp+var_2DC], 1A0h
		jnz	loc_6ED83689

loc_6ED83B2E:				; CODE XREF: sub_6ED83560+123j
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_2F5], 1
		mov	eax, [edx+194h]
		mov	dword ptr [eax], 0
		mov	dword ptr [edx+188h], 1
		mov	dword ptr [eax+4], 0

loc_6ED83B55:				; CODE XREF: sub_6ED83560+310j
					; sub_6ED83560+7D1j ...
		lea	eax, [ebp+var_2CC]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_2F5]
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED83B72:				; CODE XREF: sub_6ED83560+153j
		mov	esi, [ebp+arg_0]
		lea	eax, [edx+edx]
		shl	edx, 5
		mov	[esi+18Ch], eax
		mov	[esp+4], edx
		mov	eax, [esi+190h]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_Z8qReallocPvj
		test	eax, eax
		mov	[esi+190h], eax
		jz	loc_6ED84384

loc_6ED83BAC:				; CODE XREF: sub_6ED83560+E2Aj
		mov	edi, [ebp+arg_0]
		mov	eax, [edi+18Ch]
		shl	eax, 2
		mov	[esp+4], eax
		mov	eax, [edi+194h]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], eax
		call	[ebp+var_2F4]
		mov	edx, [edi+190h]
		test	edx, edx
		mov	[edi+194h], eax
		jz	loc_6ED84360
		mov	eax, [edi+188h]
		jmp	loc_6ED836C2
; ---------------------------------------------------------------------------

loc_6ED83BF4:				; CODE XREF: sub_6ED83560+541j
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jl	loc_6ED83ADF
		jmp	loc_6ED83AAA
; ---------------------------------------------------------------------------

loc_6ED83C05:				; CODE XREF: sub_6ED83560+208j
		mov	edx, [ebp+arg_0]
		mov	word ptr [edx+1A8h], 1
		mov	word ptr [edx+1AAh], 0

loc_6ED83C1A:				; CODE XREF: sub_6ED83560+869j
					; sub_6ED83560+38D4j
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+arg_0]
		movsx	edx, [ebp+var_2E4]
		mov	word ptr [eax+1A8h], 0
		xor	eax, eax
		cmp	byte ptr [ecx+14h], 0
		jnz	loc_6ED8364F
		cmp	byte ptr [ecx+180h], 0
		js	loc_6ED8364F
		test	edx, edx
		js	short loc_6ED83C5C
		cmp	ds:word_6EDA43C0[edx+edx], 0
		jz	loc_6ED88E02

loc_6ED83C5C:				; CODE XREF: sub_6ED83560+6EBj
		mov	esi, [ebp+var_2DC]
		movsx	eax, ds:word_6EDA2EA0[esi+esi]
		neg	eax

loc_6ED83C6C:				; CODE XREF: sub_6ED83560+58AAj
		test	eax, eax
		js	loc_6ED88E9B
		xor	eax, eax
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------
		align 10h

loc_6ED83C80:				; CODE XREF: sub_6ED83560+1FEj
		mov	edi, [ebp+arg_0]
		mov	edx, [edi+40h]
		mov	eax, [edi+44h]
		cmp	eax, [edx+8]
		jge	loc_6ED84340
		mov	edx, [edx+0Ch]
		lea	ecx, [eax+1]
		mov	[edi+44h], ecx
		movzx	ecx, word ptr [edx+eax*2]
		jmp	loc_6ED83780
; ---------------------------------------------------------------------------

loc_6ED83CA4:				; CODE XREF: sub_6ED83560+239j
		cmp	cx, 2Ch
		jz	loc_6ED86D49
		jbe	loc_6ED83D87
		cmp	cx, 3Ch
		jz	loc_6ED86DBD
		xchg	ax, ax
		jbe	loc_6ED8438F
		cmp	cx, 5Bh
		lea	esi, [esi+0]
		jz	loc_6ED86DA0
		ja	loc_6ED871B9
		cmp	cx, 3Eh
		jz	loc_6ED86D83
		jb	loc_6ED86D66
		cmp	cx, 3Fh
		jnz	loc_6ED83DCF
		mov	edx, [ebp+arg_0]
		mov	eax, 18h
		mov	word ptr [edx+1A8h], 18h
		movsx	edx, [ebp+var_2E4]
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------

loc_6ED83D13:				; CODE XREF: sub_6ED83560+130j
		jnz	short loc_6ED83D43
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED7D7F0
		mov	[ebp+var_2F5], 0
		jmp	loc_6ED83B55
; ---------------------------------------------------------------------------

loc_6ED83D36:				; CODE XREF: sub_6ED83560+28Dj
		mov	edi, [ebp+var_2E0]
		jmp	ds:off_6EDA2490[edi*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_6ED83D43:				; CODE XREF: sub_6ED83560:loc_6ED83D13j
		mov	ebx, [ebp+var_2DC]
		mov	esi, [ebp+arg_0]
		not	ebx
		mov	eax, [esi+188h]
		movsx	edx, ds:word_6EDA2C80[ebx+ebx]
		mov	[ebp+var_2E0], ebx
		sub	eax, edx
		mov	edx, [esi+194h]
		mov	[esi+188h], eax
		mov	edx, [edx+eax*4]
		add	eax, 1
		mov	[esi+188h], eax
		mov	[ebp+var_30C], edx
		jmp	loc_6ED837E3
; ---------------------------------------------------------------------------

loc_6ED83D87:				; CODE XREF: sub_6ED83560+74Ej
		cmp	cx, 23h
		jz	loc_6ED86DDA
		ja	loc_6ED843D3
		cmp	cx, 0Dh
		nop
		lea	esi, [esi+0]
		jz	loc_6ED86DF7
		ja	loc_6ED87210
		cmp	cx, 9
		jz	loc_6ED86B07
		cmp	cx, 0Ah
		lea	esi, [esi+0]
		jz	loc_6ED86AD3
		test	cx, cx
		jz	loc_6ED83C1A

loc_6ED83DCF:				; CODE XREF: sub_6ED83560+790j
					; sub_6ED83560+EA0j ...
		cmp	ecx, 1Fh
		ja	loc_6ED8726A
		mov	esi, [ebp+arg_0]
		mov	eax, 1
		movsx	edx, [ebp+var_2E4]
		mov	word ptr [esi+1A8h], 1
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------

loc_6ED83DF5:				; CODE XREF: sub_6ED83560+528j
		mov	ebx, [ebp+arg_0]
		mov	dword ptr [esp+4], 0
		mov	[ebp+var_2C8], 0FFFFFFFFh
		add	ebx, 198h
		mov	[ebp+var_340], ebx
		mov	[esp], ebx
		call	ds:_ZN7QString6resizeEi
		mov	esi, [ebp+arg_0]
		mov	eax, [esi+198h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED86F92

loc_6ED83E33:				; CODE XREF: sub_6ED83560+3A40j
		mov	edi, [ebp+var_340]
		mov	dword ptr [esp+4], 100h
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], edi
		call	ds:_ZN7QString7reallocEi
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+198h]

loc_6ED83E5D:				; CODE XREF: sub_6ED83560+3A39j
		or	byte ptr [eax+10h], 10h
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+7Ch]
		jmp	loc_6ED835C9	; jumptable 6ED837B8 cases 0,1
; ---------------------------------------------------------------------------

loc_6ED83E6C:				; CODE XREF: sub_6ED83560+60j
		mov	edi, [ebp+arg_0]
		mov	dword ptr [esp+4], 0
		mov	[ebp+var_2C8], 0FFFFFFFFh
		add	edi, 198h
		mov	[ebp+var_34C], edi
		mov	[esp], edi
		call	ds:_ZN7QString6resizeEi
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+198h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED86FF6

loc_6ED83EAA:				; CODE XREF: sub_6ED83560+3AA3j
		mov	ecx, [ebp+var_34C]
		mov	dword ptr [esp+4], 100h

loc_6ED83EB8:				; CODE XREF: sub_6ED83560+36E7j
		mov	[esp], ecx
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	ds:_ZN7QString7reallocEi
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx+198h]

loc_6ED83ED4:				; CODE XREF: sub_6ED83560+3A9Dj
					; sub_6ED83560+4842j
		or	byte ptr [eax+10h], 10h
		mov	esi, [ebp+arg_0]
		jmp	loc_6ED835C6
; ---------------------------------------------------------------------------

loc_6ED83EE0:				; CODE XREF: sub_6ED83560:loc_6ED837B8j
					; DATA XREF: .rdata:off_6EDA2464o
		mov	ebx, [ebp+arg_0] ; jumptable 6ED837B8 case 10
		cmp	byte ptr [ebx+0ACh], 0
		mov	dword ptr [ebx+12Ch], 0
		mov	dword ptr [ebx+134h], 0
		mov	dword ptr [ebx+130h], 0
		mov	dword ptr [ebx+138h], 0
		mov	dword ptr [ebx+140h], 0
		mov	dword ptr [ebx+13Ch], 0
		jz	loc_6ED86B9A

loc_6ED83F2C:				; CODE XREF: sub_6ED83560+D65j
		mov	eax, [ebx+7Ch]
		jmp	loc_6ED835C9	; jumptable 6ED837B8 cases 0,1
; ---------------------------------------------------------------------------

loc_6ED83F34:				; CODE XREF: sub_6ED83560:loc_6ED837B8j
					; DATA XREF: .rdata:off_6EDA2464o
		mov	edi, [ebp+arg_0] ; jumptable 6ED837B8 case 5
		cmp	byte ptr [edi+0ACh], 0
		mov	dword ptr [edi+120h], 0
		mov	dword ptr [edi+128h], 0
		mov	dword ptr [edi+124h], 0
		mov	dword ptr [edi+0FCh], 0
		mov	dword ptr [edi+104h], 0
		mov	dword ptr [edi+100h], 0
		mov	dword ptr [edi+114h], 0
		mov	dword ptr [edi+11Ch], 0
		mov	dword ptr [edi+118h], 0
		mov	dword ptr [edi+108h], 0
		mov	dword ptr [edi+110h], 0
		mov	dword ptr [edi+10Ch], 0
		jz	loc_6ED86B24
		mov	eax, [edi+7Ch]
		jmp	loc_6ED835C9	; jumptable 6ED837B8 cases 0,1
; ---------------------------------------------------------------------------

loc_6ED83FC4:				; CODE XREF: sub_6ED83560:loc_6ED837B8j
					; DATA XREF: .rdata:off_6EDA2464o
		mov	ebx, [ebp+arg_0] ; jumptable 6ED837B8 case 2
		mov	eax, [ebx+74h]
		or	byte ptr [ebx+181h], 8
		mov	dword ptr [ebx+168h], 0
		mov	dword ptr [ebx+170h], 0
		mov	dword ptr [ebx+16Ch], 0
		mov	dword ptr [ebx+174h], 0
		mov	dword ptr [ebx+17Ch], 0
		mov	dword ptr [ebx+178h], 0
		mov	[esp], eax
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	ds:_ZNK12QTextDecoder10hasFailureEv
		test	al, al
		jz	loc_6ED835B6	; jumptable 6ED837B8 default case
		mov	edx, offset aEncounteredInc ; "Encountered incorrectly encoded content"...
		lea	eax, [ebp+var_2C]
		lea	esi, [ebp+var_2C]
		call	sub_6ED71920
		mov	[esp+4], esi
		mov	[esp], ebx
		mov	[ebp+var_2C8], 49h
		call	sub_6ED71AE0
		lea	eax, [ebp+var_2C]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	sub_6ED94560
		mov	edx, [ebp+arg_0]
		mov	eax, ds:_ZN7QString11shared_nullE
		cmp	[edx+40h], eax
		jz	short loc_6ED840B3
		mov	[ebp+var_100], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_100]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_2C8], 1
		add	eax, 40h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_100]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED874B9

loc_6ED840B3:				; CODE XREF: sub_6ED83560+B0Ej
		mov	[ebp+var_2F5], 0
		jmp	loc_6ED83B55
; ---------------------------------------------------------------------------

loc_6ED840BF:				; CODE XREF: sub_6ED83560:loc_6ED837B8j
					; DATA XREF: .rdata:off_6EDA2464o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED837B8 case 4
		mov	eax, [ecx+0DCh]
		mov	dword ptr [ecx+128h], 0
		mov	dword ptr [ecx+124h], 0
		mov	dword ptr [ecx+104h], 0
		mov	dword ptr [ecx+100h], 0
		mov	dword ptr [ecx+11Ch], 0
		mov	dword ptr [ecx+118h], 0
		mov	dword ptr [ecx+110h], 0
		mov	dword ptr [ecx+10Ch], 0
		mov	esi, [eax+8]
		mov	dword ptr [ecx+120h], 0
		mov	dword ptr [ecx+0FCh], 0
		mov	dword ptr [ecx+114h], 0
		test	esi, esi
		mov	dword ptr [ecx+108h], 0
		jz	short loc_6ED841BE
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		add	ecx, 0DCh
		mov	[ebp+var_3C8], ecx
		mov	[ebp+var_F0], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ebx, [ebp+var_F0]
		mov	[ebp+var_324], ebx
		lock inc dword ptr [ebx]
		setnz	al
		mov	esi, [ebp+arg_0]
		mov	eax, [esi+0DCh]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED84454

loc_6ED8418D:				; CODE XREF: sub_6ED83560+F10j
		mov	eax, [ebp+var_324]
		mov	edi, [ebp+arg_0]
		mov	[edi+0DCh], eax
		test	byte ptr [eax+0Ch], 1
		jz	loc_6ED84423

loc_6ED841A6:				; CODE XREF: sub_6ED83560+EEFj
		lea	eax, [ebp+var_F0]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	sub_6ED958D0

loc_6ED841BE:				; CODE XREF: sub_6ED83560+BE5j
		mov	esi, [ebp+arg_0]
		mov	eax, [esi+0A8h]
		mov	ebx, [eax+8]
		test	ebx, ebx
		jnz	loc_6ED86C6D

loc_6ED841D2:				; CODE XREF: sub_6ED83560+372Ej
		mov	edi, [ebp+arg_0]
		test	byte ptr [edi+180h], 1
		jz	loc_6ED86BEB
		cmp	dword ptr [edi+7Ch], 1
		jz	short loc_6ED841EF
		mov	dword ptr [edi+7Ch], 5

loc_6ED841EF:				; CODE XREF: sub_6ED83560+C86j
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+arg_0]
		mov	ebx, [ebp+arg_0]
		mov	edx, [eax+1Ch]
		imul	eax, edx, 38h
		sub	edx, 1
		add	eax, [ecx+18h]
		mov	[ecx+1Ch], edx
		shr	edx, 1Fh
		mov	ecx, [eax+30h]
		mov	[ebx+10h], ecx
		mov	ecx, [eax+34h]
		mov	[ebx+14h], dl
		sub	ecx, 1
		mov	[ebx+4], ecx
		mov	edx, [eax+24h]
		mov	[ebx+108h], edx
		mov	edx, [eax+28h]
		mov	[ebx+10Ch], edx
		mov	edx, [eax+2Ch]
		mov	[ebx+110h], edx
		mov	edx, [eax]
		mov	[ebx+120h], edx
		mov	edx, [eax+4]
		mov	[ebx+124h], edx
		mov	edx, [eax+8]
		mov	[ebx+128h], edx
		mov	edx, [eax+0Ch]
		mov	[ebx+114h], edx
		mov	edx, [eax+10h]
		mov	eax, [eax+14h]
		and	byte ptr [ebx+180h], 0FEh
		mov	[ebx+118h], edx
		mov	[ebx+11Ch], eax
		mov	[ebp+var_2F5], 1
		jmp	loc_6ED83B55
; ---------------------------------------------------------------------------

loc_6ED8427F:				; CODE XREF: sub_6ED83560:loc_6ED837B8j
					; DATA XREF: .rdata:off_6EDA2464o
		mov	ebx, [ebp+arg_0] ; jumptable 6ED837B8 case 9
		cmp	byte ptr [ebx+0ACh], 0
		mov	dword ptr [ebx+0F0h], 0
		mov	dword ptr [ebx+0F8h], 0
		mov	dword ptr [ebx+0F4h], 0
		mov	dword ptr [ebx+120h], 0
		mov	dword ptr [ebx+128h], 0
		mov	dword ptr [ebx+124h], 0
		jnz	loc_6ED83F2C
		mov	esi, [ebp+arg_0]
		mov	dword ptr [esp+4], 0
		mov	[ebp+var_2C8], 0FFFFFFFFh
		add	esi, 198h
		mov	[ebp+var_38C], esi
		mov	[esp], esi
		call	ds:_ZN7QString6resizeEi
		mov	edi, [ebp+arg_0]
		mov	eax, [edi+198h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED8732B

loc_6ED84309:				; CODE XREF: sub_6ED83560+3DE0j
		mov	eax, [ebp+var_38C]
		mov	dword ptr [esp+4], 100h

loc_6ED84317:				; CODE XREF: sub_6ED83560+3686j
		mov	[esp], eax
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	ds:_ZN7QString7reallocEi
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+198h]

loc_6ED84333:				; CODE XREF: sub_6ED83560+3DA5j
					; sub_6ED83560+3DD2j
		or	byte ptr [eax+10h], 10h
		mov	ecx, [ebp+arg_0]
		jmp	loc_6ED83A8E
; ---------------------------------------------------------------------------
		align 10h

loc_6ED84340:				; CODE XREF: sub_6ED83560+72Cj
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED81C20
		movzx	ecx, ax
		jmp	loc_6ED83780
; ---------------------------------------------------------------------------
		align 10h

loc_6ED84360:				; CODE XREF: sub_6ED83560+683j
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	ds:_Z9qBadAllocv
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+190h]
		mov	eax, [eax+188h]
		jmp	loc_6ED836C2
; ---------------------------------------------------------------------------

loc_6ED84384:				; CODE XREF: sub_6ED83560+646j
		call	[ebp+var_310]
		jmp	loc_6ED83BAC
; ---------------------------------------------------------------------------

loc_6ED8438F:				; CODE XREF: sub_6ED83560+760j
		cmp	cx, 39h
		ja	loc_6ED86FA5
		cmp	cx, 30h
		lea	esi, [esi+0]
		jnb	loc_6ED86F11
		cmp	cx, 2Eh
		jz	loc_6ED86EF4
		jbe	loc_6ED86ED7
		mov	edi, [ebp+arg_0]
		mov	eax, 10h
		movsx	edx, [ebp+var_2E4]
		mov	word ptr [edi+1A8h], 10h
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------

loc_6ED843D3:				; CODE XREF: sub_6ED83560+831j
		cmp	cx, 28h
		jz	loc_6ED86EBA
		ja	loc_6ED8715A
		cmp	cx, 26h
		jz	loc_6ED86E9D
		lea	esi, [esi+0]
		ja	loc_6ED86E80
		cmp	cx, 25h
		lea	esi, [esi+0]
		jnz	loc_6ED83DCF
		mov	esi, [ebp+arg_0]
		mov	eax, 0Fh
		movsx	edx, [ebp+var_2E4]
		mov	word ptr [esi+1A8h], 0Fh
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------

loc_6ED84423:				; CODE XREF: sub_6ED83560+C40j
		mov	edx, [ebp+var_324]
		mov	ecx, [ebp+var_3C8]
		mov	eax, [edx+4]
		mov	[esp+8], eax
		mov	eax, [edx+8]
		mov	[esp], ecx
		mov	[ebp+var_2C8], 6
		mov	[esp+4], eax
		call	sub_6ED95530
		jmp	loc_6ED841A6
; ---------------------------------------------------------------------------

loc_6ED84454:				; CODE XREF: sub_6ED83560+C27j
		mov	eax, [esi+0DCh]
		mov	[esp], ecx
		mov	[ebp+var_2C8], 6
		mov	[esp+4], eax
		call	sub_6ED954E0
		jmp	loc_6ED8418D
; ---------------------------------------------------------------------------

loc_6ED84475:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	ebx, [ebp+arg_0] ; jumptable 6ED83D3C cases 142,143,178,179
		mov	ecx, [ebx+188h]
		mov	eax, [ebx+190h]
		mov	edx, ecx
		shl	edx, 4
		mov	ecx, edx
		lea	edx, [eax+edx]
		lea	eax, [ecx+eax+10h]
		mov	edi, edx
		mov	esi, eax
		mov	ecx, 4
		rep movsd
		mov	eax, [ebx+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED844A8:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	edx, [ebp+arg_0] ; jumptable 6ED83D3C cases 144-147,180-183
		mov	ecx, [edx+188h]
		mov	eax, [edx+190h]
		lea	edx, [ecx+1]
		shl	edx, 4
		shl	ecx, 4
		mov	edx, [edx+eax+4]
		add	[eax+ecx+4], edx
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED844D6:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED83D3C cases 17,18
		mov	ebx, [ebp+arg_0]
		mov	eax, [ecx+188h]
		add	eax, 2
		shl	eax, 4
		add	eax, [ecx+190h]
		mov	ecx, [eax+8]
		mov	edx, [eax+4]
		sub	edx, ecx
		add	ecx, [eax]
		mov	eax, [ebp+arg_0]
		mov	[ebx+14Ch], edx
		mov	[ebx+148h], ecx
		add	eax, 198h
		mov	[ebx+144h], eax

loc_6ED84512:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	esi, [ebp+arg_0] ; jumptable 6ED83D3C cases 19,20
		cmp	dword ptr [esi+7Ch], 1
		jz	short loc_6ED84522
		mov	dword ptr [esi+7Ch], 8

loc_6ED84522:				; CODE XREF: sub_6ED83560+FB9j
		mov	eax, [ebp+arg_0]
		mov	edi, [ebp+arg_0]
		add	eax, 198h
		mov	[edi+0F0h], eax
		mov	eax, [edi+198h]
		mov	dword ptr [edi+0F4h], 0
		mov	eax, [eax+8]
		mov	[edi+0F8h], eax

loc_6ED8454C:				; CODE XREF: sub_6ED83560+14B3j
					; sub_6ED83560+1A69j ...
		mov	eax, [edi+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED84557:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	edx, [ebp+arg_0] ; jumptable 6ED83D3C case 93
		mov	ecx, [edx+188h]
		mov	eax, [edx+0E4h]
		add	ecx, 2
		shl	ecx, 4
		add	ecx, [edx+190h]
		shl	eax, 6
		add	eax, [edx+0E0h]
		mov	ebx, [ecx+8]
		mov	edx, [ecx+4]
		sub	edx, ebx
		add	ebx, [ecx]
		mov	ecx, [ebp+arg_0]
		mov	[eax+14h], edx
		mov	[eax+10h], ebx
		add	ecx, 198h
		cmp	byte ptr [eax+3Ch], 0
		mov	[eax+0Ch], ecx
		jz	short loc_6ED845E5 ; jumptable 6ED83D3C	cases 94,95
		mov	edx, offset aNdataInParamet ; "NDATA in	parameter entity declaration."
		lea	eax, [ebp+var_48]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	sub_6ED71920
		mov	ebx, [ebp+arg_0]
		lea	ecx, [ebp+var_48]
		mov	[esp+4], ecx
		mov	[ebp+var_2C8], 3Dh
		mov	[esp], ebx
		call	sub_6ED71AE0
		lea	eax, [ebp+var_48]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	sub_6ED94560

loc_6ED845E5:				; CODE XREF: sub_6ED83560+7DCj
					; sub_6ED83560+103Bj
					; DATA XREF: ...
		mov	edi, [ebp+arg_0] ; jumptable 6ED83D3C cases 94,95
		movzx	eax, word ptr [edi+180h]
		and	ax, 108h
		cmp	ax, 100h
		jz	loc_6ED87D89
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	eax, [eax+0E4h]
		mov	edx, [edx+0E0h]
		shl	eax, 6
		add	eax, edx
		mov	[ebp+var_360], eax
		cmp	byte ptr [eax+3Dh], 0
		jnz	short loc_6ED84657
		mov	ecx, [ebp+arg_0]
		mov	ebx, [ebp+var_360]
		mov	edx, [ecx+188h]
		add	edx, 1
		shl	edx, 4
		add	edx, [ecx+190h]
		mov	ecx, [edx+8]
		mov	eax, [edx+4]
		sub	eax, ecx
		add	ecx, [edx]
		mov	edx, [ebp+arg_0]
		mov	[ebx+38h], eax
		mov	[ebx+34h], ecx
		add	edx, 198h
		mov	[ebx+30h], edx

loc_6ED84657:				; CODE XREF: sub_6ED83560+10BEj
		mov	esi, [ebp+var_360]
		lea	eax, [ebp+var_DC]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp+4], esi
		call	ds:_ZNK10QStringRef8toStringEv
		push	edi
		cmp	byte ptr [esi+3Ch], 0
		jz	loc_6ED877E5
		mov	edi, [ebp+arg_0]
		add	edi, 58h
		mov	[ebp+var_378], edi

loc_6ED84691:				; CODE XREF: sub_6ED83560+4291j
		mov	edx, [ebp+var_378]
		lea	eax, [ebp+var_DC]
		mov	dword ptr [esp+8], 0
		mov	[esp+4], eax
		mov	[ebp+var_2C8], 3Ch
		mov	[esp], edx
		call	sub_6ED98330
		mov	ecx, [ebp+var_378]
		mov	eax, [eax]
		cmp	eax, [ecx]
		jz	loc_6ED889E3

loc_6ED846CB:				; CODE XREF: sub_6ED83560+2177j
					; sub_6ED83560+5018j ...
		lea	eax, [ebp+var_DC]

loc_6ED846D1:				; CODE XREF: sub_6ED83560+2282j
					; sub_6ED83560+351Ej ...
		mov	[esp], eax
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	sub_6ED94560

loc_6ED846E3:				; CODE XREF: sub_6ED83560+11E6j
					; sub_6ED83560+15DAj ...
		mov	edx, [ebp+arg_0]

loc_6ED846E6:				; CODE XREF: sub_6ED83560+160Aj
					; sub_6ED83560+18BEj
		mov	eax, [edx+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED846F1:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	eax, [ebp+arg_0] ; jumptable 6ED83D3C case 236
		or	byte ptr [eax+180h], 1

loc_6ED846FB:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	edx, [ebp+arg_0] ; jumptable 6ED83D3C case 237
		cmp	dword ptr [edx+7Ch], 1
		jz	short loc_6ED8470B
		mov	dword ptr [edx+7Ch], 4

loc_6ED8470B:				; CODE XREF: sub_6ED83560+11A2j
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED7EB70
		mov	ebx, [ebp+arg_0]
		mov	edx, [ebx+1Ch]
		test	edx, edx
		jnz	short loc_6ED8473C
		movzx	eax, byte ptr [ebx+180h]
		and	eax, 0FFFFFFC0h
		cmp	al, 40h
		jz	loc_6ED88306

loc_6ED8473C:				; CODE XREF: sub_6ED83560+11C8j
					; sub_6ED83560+4DEAj
		mov	eax, [ebp+arg_0]
		or	byte ptr [eax+180h], 40h
		jmp	short loc_6ED846E3
; ---------------------------------------------------------------------------

loc_6ED84748:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	edi, [ebp+arg_0] ; jumptable 6ED83D3C case 129
		and	byte ptr [edi+180h], 0FDh

loc_6ED84752:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	eax, [ebp+arg_0] ; jumptable 6ED83D3C case 130
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+arg_0]
		mov	eax, [eax+188h]
		mov	edx, [edx+190h]
		add	ebx, 198h
		shl	eax, 4
		add	eax, edx
		mov	[ebp+var_3B8], eax
		mov	ecx, [eax+4]
		mov	[ebp+var_36C], ebx
		mov	[ebp+var_320], 0
		mov	[ebp+var_464], ecx

loc_6ED84791:				; CODE XREF: sub_6ED83560+37E4j
					; sub_6ED83560+3A2Dj ...
		mov	esi, [ebp+arg_0]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], esi
		call	sub_6ED91B20
		test	eax, eax
		jz	short loc_6ED847EF
		cmp	ax, 20h
		mov	edx, eax
		jz	loc_6ED86D20
		ja	loc_6ED86F2E
		cmp	ax, 9
		jz	loc_6ED86D20
		ja	loc_6ED86CBD
		test	ax, ax
		nop
		jnz	loc_6ED86F56

loc_6ED847D6:				; CODE XREF: sub_6ED83560+3F54j
		mov	esi, [ebp+arg_0]
		mov	[esp+4], eax
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], esi
		call	sub_6ED91B80

loc_6ED847EF:				; CODE XREF: sub_6ED83560+1248j
					; sub_6ED83560+3784j ...
		mov	eax, [ebp+var_320]
		mov	edi, [ebp+var_3B8]
		add	eax, [ebp+var_464]
		mov	[edi+4], eax
		mov	eax, [ebp+arg_0]
		cmp	byte ptr [eax+78h], 0
		jz	loc_6ED874DE
		mov	ecx, [ebp+arg_0]
		cmp	byte ptr [ecx+180h], 0
		jns	loc_6ED88BB7

loc_6ED84821:				; CODE XREF: sub_6ED83560+199Cj
					; sub_6ED83560+1D85j ...
		mov	eax, [ecx+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED8482C:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	edi, [ebp+arg_0] ; jumptable 6ED83D3C case 101
		cmp	dword ptr [edi+7Ch], 1
		jz	short loc_6ED8483C
		mov	dword ptr [edi+7Ch], 6

loc_6ED8483C:				; CODE XREF: sub_6ED83560+12D3j
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+180h]
		or	eax, 4
		and	eax, 0FFFFFFFDh
		mov	[edx+180h], al
		mov	ecx, [ebp+arg_0]
		mov	eax, [edx+188h]
		mov	edx, [ecx+190h]
		add	eax, 1
		shl	eax, 4
		mov	eax, [eax+edx]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset asc_6EDA1CBB ; "]]>"
		mov	[esp], ecx
		mov	[ebp+var_430], eax
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	sub_6ED83010
		test	al, al
		jz	loc_6ED889D6
		mov	ebx, [ebp+arg_0]
		mov	esi, [ebp+var_430]
		mov	eax, [ebx+198h]
		mov	edx, ebx
		add	edx, 198h
		mov	[ebx+0F0h], edx
		mov	eax, [eax+8]
		mov	[ebx+0F4h], esi
		sub	eax, 3
		sub	eax, [ebp+var_430]
		mov	[ebx+0F8h], eax
		mov	eax, [ebx+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED848DA:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	eax, [ebp+arg_0] ; jumptable 6ED83D3C case 102
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED82E00
		test	al, al
		jnz	loc_6ED87842
		mov	edx, [ebp+arg_0]
		cmp	byte ptr [edx+78h], 0
		jz	loc_6ED87842
		mov	dword ptr [esp+4], 66h
		mov	[esp], edx
		call	sub_6ED78320
		mov	[ebp+var_2F5], 0
		jmp	loc_6ED83B55
; ---------------------------------------------------------------------------

loc_6ED84920:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	edx, [ebp+arg_0] ; jumptable 6ED83D3C case 68
		mov	byte ptr [edx+0BCh], 1
		mov	eax, [edx+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED84935:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	edx, [ebp+arg_0] ; jumptable 6ED83D3C case 97
		cmp	dword ptr [edx+7Ch], 1
		jz	short loc_6ED84945
		mov	dword ptr [edx+7Ch], 0Ah

loc_6ED84945:				; CODE XREF: sub_6ED83560+13DCj
		mov	ecx, [ebp+arg_0]
		lea	esi, [ebp+var_60]
		mov	ebx, [ebp+arg_0]
		mov	eax, [ecx+188h]
		add	eax, 2
		shl	eax, 4
		add	eax, [ecx+190h]
		mov	ecx, [eax+8]
		mov	edx, [eax+4]
		sub	edx, ecx
		add	ecx, [eax]
		mov	eax, [ebp+arg_0]
		mov	[ebx+134h], edx
		mov	[ebx+130h], ecx
		mov	[ebp+var_64], offset aXml_2 ; "xml"
		add	eax, 198h
		mov	[ebx+12Ch], eax
		mov	eax, ebx
		add	eax, 12Ch
		mov	[esp+4], eax
		mov	[esp], esi
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	ds:_ZNK10QStringRef8toStringEv
		lea	eax, [ebp+var_64]
		mov	[ebp+var_2C8], 36h
		push	edx
		mov	dword ptr [esp+8], 0
		mov	[esp+4], eax
		mov	[esp], esi
		call	ds:_ZNK7QString7compareERK13QLatin1StringN2Qt15CaseSensitivityE
		mov	[ebp+var_468], eax
		mov	[esp], esi
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	sub_6ED94560
		cmp	[ebp+var_468], 0
		jz	loc_6ED880BD

loc_6ED849F1:				; CODE XREF: sub_6ED83560+1826j
					; sub_6ED83560+28BAj ...
		mov	eax, [ebx+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED849FC:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	edi, [ebp+arg_0] ; jumptable 6ED83D3C case 98
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], edi
		call	sub_6ED82EB0
		test	al, al
		jnz	loc_6ED8454C
		mov	eax, [ebp+arg_0]
		cmp	byte ptr [eax+78h], 0
		jz	loc_6ED874DE
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+4], 62h
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED78320
		mov	[ebp+var_2F5], 0
		jmp	loc_6ED83B55
; ---------------------------------------------------------------------------

loc_6ED84A4F:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	esi, [ebp+arg_0] ; jumptable 6ED83D3C case 88
		movzx	eax, word ptr [esi+180h]
		and	ax, 108h
		cmp	ax, 100h
		jz	loc_6ED837F6
		mov	edx, [ebp+arg_0]
		mov	edi, [ebp+arg_0]
		mov	eax, [edx+188h]
		mov	edi, [edi+0C4h]
		add	eax, 2
		shl	eax, 4
		add	eax, [edx+190h]
		mov	[ebp+var_428], edi
		add	edi, 1
		mov	[ebp+var_300], edi
		mov	ecx, [eax]
		mov	edx, [eax+4]
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_2C8], 40h
		mov	[ebp+var_174], ecx
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_170], edx
		lea	edx, [ebp+var_178]
		add	eax, 198h
		mov	[ebp+var_178], eax
		lea	eax, [ebp+var_19C]
		mov	[esp+8], edx
		mov	[esp+4], ecx
		mov	[esp], eax
		call	sub_6ED91C50
		mov	esi, [ebp+var_428]
		mov	ebx, ds:_ZN7QString11shared_nullE
		mov	edi, ds:_ZeqRK10QStringRefS1_
		push	ecx
		shl	esi, 6
		mov	[ebp+var_2D0], ebx
		mov	[ebp+var_33C], esi
		mov	[ebp+var_308], edi
		jmp	loc_6ED84B32
; ---------------------------------------------------------------------------
		align 10h

loc_6ED84B10:				; CODE XREF: sub_6ED83560+16CCj
		mov	edi, [ebp+var_2FC]
		mov	dword ptr [edi+0Ch], 0
		mov	dword ptr [edi+14h], 0
		mov	dword ptr [edi+10h], 0

loc_6ED84B2B:				; CODE XREF: sub_6ED83560+1638j
					; sub_6ED83560+16EBj
		sub	[ebp+var_33C], 40h

loc_6ED84B32:				; CODE XREF: sub_6ED83560+15A4j
		mov	eax, [ebp+var_300]
		test	eax, eax
		jz	loc_6ED846E3
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_33C]
		sub	[ebp+var_300], 1
		add	ecx, [edx+0C0h]
		mov	[ebp+var_2FC], ecx
		mov	eax, [ecx]
		test	eax, eax
		jz	short loc_6ED84B70
		mov	ebx, [ebp+var_2D0]
		cmp	[eax], ebx
		jnz	loc_6ED846E6

loc_6ED84B70:				; CODE XREF: sub_6ED83560+1600j
		mov	esi, [ebp+var_2FC]
		mov	eax, [ebp+var_19C]
		mov	[esi], eax
		mov	eax, [ebp+var_198]
		mov	[esi+4], eax
		mov	eax, [ebp+var_194]
		mov	[esi+8], eax
		mov	edx, [ebp+var_300]
		test	edx, edx
		jle	short loc_6ED84B2B
		add	esi, 0Ch
		mov	[ebp+var_304], esi
		mov	[ebp+var_2E8], 0
		lea	esi, [esi+0]

loc_6ED84BB0:				; CODE XREF: sub_6ED83560+16E5j
		mov	edi, [ebp+var_2E8]
		mov	edx, [ebp+arg_0]
		shl	edi, 6
		mov	eax, edi
		add	eax, [edx+0C0h]
		mov	[ebp+var_2EC], edi
		mov	edx, [eax]
		test	edx, edx
		jz	short loc_6ED84C0A
		mov	ecx, [ebp+var_2D0]
		cmp	ecx, [edx]
		jz	short loc_6ED84C0A
		lea	edx, [ebp+var_19C]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_2C8], 3Fh
		call	[ebp+var_308]
		test	al, al
		jz	short loc_6ED84C32
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebp+var_2EC]
		add	eax, [ebx+0C0h]

loc_6ED84C0A:				; CODE XREF: sub_6ED83560+166Ej
					; sub_6ED83560+1678j
		mov	esi, [ebp+var_304]
		add	eax, 0Ch
		mov	[esp], eax
		mov	[ebp+var_2C8], 3Fh
		mov	[esp+4], esi
		call	ds:_ZeqRK10QStringRefS1_
		test	al, al
		jnz	loc_6ED84B10

loc_6ED84C32:				; CODE XREF: sub_6ED83560+1699j
		add	[ebp+var_2E8], 1
		mov	ecx, [ebp+var_2E8]
		cmp	[ebp+var_300], ecx
		jg	loc_6ED84BB0
		jmp	loc_6ED84B2B
; ---------------------------------------------------------------------------

loc_6ED84C50:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	esi, [ebp+arg_0] ; jumptable 6ED83D3C case 90
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], esi
		call	sub_6ED82E00
		test	al, al
		jnz	loc_6ED878A9
		cmp	byte ptr [esi+78h], 0
		jz	loc_6ED878A9
		mov	dword ptr [esp+4], 5Ah
		mov	[esp], esi
		call	sub_6ED78320
		mov	[ebp+var_2F5], 0
		jmp	loc_6ED83B55
; ---------------------------------------------------------------------------

loc_6ED84C93:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	ebx, [ebp+arg_0] ; jumptable 6ED83D3C case 89
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], ebx
		call	sub_6ED82E00
		test	al, al
		jnz	loc_6ED87971
		cmp	byte ptr [ebx+78h], 0
		jz	loc_6ED87971
		mov	dword ptr [esp+4], 59h
		mov	[esp], ebx
		call	sub_6ED78320
		mov	[ebp+var_2F5], 0
		jmp	loc_6ED83B55
; ---------------------------------------------------------------------------

loc_6ED84CD6:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	edi, [ebp+arg_0] ; jumptable 6ED83D3C case 91
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], edi
		call	sub_6ED82AD0
		test	al, al
		jnz	loc_6ED877F6
		cmp	byte ptr [edi+78h], 0
		jz	loc_6ED877F6
		mov	dword ptr [esp+4], 5Bh
		mov	[esp], edi
		call	sub_6ED78320
		mov	[ebp+var_2F5], 0
		jmp	loc_6ED83B55
; ---------------------------------------------------------------------------

loc_6ED84D19:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	eax, [ebp+arg_0] ; jumptable 6ED83D3C case 92
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED82AD0
		test	al, al
		jnz	loc_6ED87712
		mov	edx, [ebp+arg_0]
		cmp	byte ptr [edx+78h], 0
		jz	loc_6ED87712
		mov	dword ptr [esp+4], 5Ch
		mov	[esp], edx
		call	sub_6ED78320
		mov	[ebp+var_2F5], 0
		jmp	loc_6ED83B55
; ---------------------------------------------------------------------------

loc_6ED84D5F:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	ebx, [ebp+arg_0] ; jumptable 6ED83D3C case 99
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset asc_6EDA2329 ; "--"
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], ebx
		call	sub_6ED83010
		test	al, al
		jnz	loc_6ED849F1
		mov	esi, [ebp+arg_0]
		mov	dword ptr [esp+4], 63h
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], esi
		call	sub_6ED78320
		mov	[ebp+var_2F5], 0
		jmp	loc_6ED83B55
; ---------------------------------------------------------------------------

loc_6ED84DB5:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	edi, [ebp+arg_0] ; jumptable 6ED83D3C case 100
		cmp	dword ptr [edi+7Ch], 1
		jz	short loc_6ED84DC5
		mov	dword ptr [edi+7Ch], 7

loc_6ED84DC5:				; CODE XREF: sub_6ED83560+185Cj
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+arg_0]
		mov	esi, [ebp+arg_0]
		mov	ebx, [eax+188h]
		mov	eax, [eax+190h]
		mov	edx, ebx
		shl	edx, 4
		mov	edx, [edx+eax]
		mov	eax, [ecx+198h]
		add	ecx, 198h
		mov	[esi+0F0h], ecx
		add	edx, 4
		mov	eax, [eax+8]
		mov	[esi+0F4h], edx
		sub	eax, 3
		sub	eax, edx
		mov	[esi+0F8h], eax
		mov	eax, ebx
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED84E12:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	eax, [ebp+arg_0] ; jumptable 6ED83D3C case 21
		mov	byte ptr [eax+0ACh], 1

loc_6ED84E1C:				; CODE XREF: sub_6ED83560+2FB1j
		mov	edx, eax
		jmp	loc_6ED846E6
; ---------------------------------------------------------------------------

loc_6ED84E23:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED83D3C case 22
		mov	byte ptr [ecx+0ACh], 0
		mov	eax, [ecx+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED84E38:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED83D3C case 78
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED829F0
		test	al, al
		jnz	loc_6ED87656
		mov	esi, [ebp+arg_0]
		cmp	byte ptr [esi+78h], 0
		jz	loc_6ED837F6
		mov	dword ptr [esp+4], 4Eh

loc_6ED84E6A:				; CODE XREF: sub_6ED83560+547Ej
		mov	edi, [ebp+arg_0]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], edi
		call	sub_6ED78320
		mov	[ebp+var_2F5], 0
		jmp	loc_6ED83B55
; ---------------------------------------------------------------------------

loc_6ED84E8B:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	edx, [ebp+arg_0] ; jumptable 6ED83D3C case 83
		mov	ecx, [edx+188h]
		mov	eax, [edx+190h]
		mov	edx, ecx
		shl	edx, 4
		mov	ecx, edx
		lea	edx, [eax+edx]
		lea	eax, [ecx+eax+10h]
		mov	edi, edx
		mov	esi, eax
		mov	ecx, 4
		rep movsd
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+0B0h], 0
		mov	dword ptr [eax+0B8h], 0
		mov	dword ptr [eax+0B4h], 0
		mov	byte ptr [eax+0BCh], 0
		mov	[esp], eax
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	sub_6ED82800
		test	al, al
		jnz	loc_6ED846E3
		mov	ecx, [ebp+arg_0]
		cmp	byte ptr [ecx+78h], 0
		jz	loc_6ED84821
		mov	dword ptr [esp+4], 53h

loc_6ED84F0A:				; CODE XREF: sub_6ED83560+1D93j
					; sub_6ED83560+1FB3j ...
		mov	ebx, [ebp+arg_0]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], ebx
		call	sub_6ED78320
		mov	[ebp+var_2F5], 0
		jmp	loc_6ED83B55
; ---------------------------------------------------------------------------

loc_6ED84F2B:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED83D3C case 96
		cmp	dword ptr [ecx+7Ch], 1
		jz	short loc_6ED84F3B
		mov	dword ptr [ecx+7Ch], 0Ah

loc_6ED84F3B:				; CODE XREF: sub_6ED83560+19D2j
		mov	ebx, [ebp+arg_0]
		mov	edi, [ebp+arg_0]
		mov	ecx, [ebx+188h]
		mov	eax, [ebx+190h]
		add	ebx, 198h
		mov	edx, ecx
		shl	edx, 4
		lea	edx, [edx+eax+30h]
		mov	esi, [edx]
		mov	[ebp+var_470], esi
		mov	edx, [edx+4]
		mov	[ebp+var_46C], edx
		mov	edx, ecx
		shl	edx, 4
		lea	edx, [edx+eax+20h]
		mov	ecx, [edx+8]
		mov	eax, [edx+4]
		sub	eax, ecx
		add	ecx, [edx]
		mov	[edi+12Ch], ebx
		mov	[edi+134h], eax
		mov	[edi+130h], ecx
		mov	[ebp+var_420], ebx
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset a?_2 ; "?>"
		mov	[esp], edi
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	sub_6ED83010
		test	al, al
		jnz	loc_6ED87FBD
		mov	edi, [ebp+arg_0]
		cmp	dword ptr [edi+7Ch], 1
		jz	loc_6ED8454C
		mov	dword ptr [esp+4], 60h

loc_6ED84FD7:				; CODE XREF: sub_6ED83560+2CFDj
					; sub_6ED83560+2F4Dj ...
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED78320
		mov	[ebp+var_2F5], 0
		jmp	loc_6ED83B55
; ---------------------------------------------------------------------------

loc_6ED84FF8:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	esi, [ebp+arg_0] ; jumptable 6ED83D3C case 84
		mov	eax, [esi+0C4h]
		mov	ecx, [esi+0C8h]
		lea	edx, [eax+1]
		cmp	edx, ecx
		jge	loc_6ED87F6C
		mov	eax, [esi+0C0h]

loc_6ED85018:				; CODE XREF: sub_6ED83560+4A58j
					; sub_6ED83560+62EFj
		mov	ebx, [ebp+arg_0]
		mov	[ebx+0C4h], edx
		shl	edx, 6
		lea	edx, [eax+edx]
		mov	[ebp+var_328], edx
		mov	dword ptr [edx+8], 0
		mov	dword ptr [edx], 0
		mov	dword ptr [edx+4], 0
		movzx	eax, byte ptr [ebx+0BCh]
		mov	[edx+3Ch], al
		mov	edx, [ebx+188h]
		shl	edx, 4
		add	edx, [ebx+190h]
		mov	eax, [edx+8]
		test	eax, eax
		jz	loc_6ED87F49
		mov	ecx, [edx]
		mov	edx, ebx
		sub	eax, 1
		add	edx, 198h
		mov	[ebp+var_124], edx
		mov	[ebp+var_11C], eax
		mov	[ebp+var_120], ecx

loc_6ED85084:				; CODE XREF: sub_6ED83560+4A07j
		mov	esi, [ebp+arg_0]
		lea	eax, [ebp+var_130]
		lea	edx, [ebp+var_124]
		mov	[esp+8], edx
		mov	[esp], eax
		mov	[esp+4], esi
		mov	[ebp+var_2C8], 45h
		call	sub_6ED91C50
		mov	edi, [ebp+var_328]
		mov	eax, [ebp+var_130]
		push	ecx
		mov	[edi+18h], eax
		mov	eax, [ebp+var_12C]
		mov	[edi+1Ch], eax
		mov	eax, [ebp+var_128]
		mov	[edi+20h], eax
		mov	eax, [esi+188h]
		shl	eax, 4
		add	eax, [esi+190h]
		add	esi, 198h
		mov	ecx, [eax+8]
		mov	edx, [eax+4]
		sub	edx, ecx
		add	ecx, [eax]
		mov	[ebp+var_134], edx
		lea	edx, [ebp+var_13C]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_148]
		mov	[ebp+var_42C], esi
		mov	[ebp+var_13C], esi
		mov	[ebp+var_138], ecx
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_2C8], 44h
		call	sub_6ED91C50
		mov	eax, [ebp+var_148]
		push	edx
		mov	[edi+24h], eax
		mov	eax, [ebp+var_144]
		mov	[edi+28h], eax
		mov	eax, [ebp+var_140]
		mov	[edi+2Ch], eax
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+188h]
		shl	eax, 4
		add	eax, [ecx+190h]
		mov	edx, [eax+4]
		mov	eax, [eax]
		mov	[ebp+var_154], esi
		mov	[esp+4], ecx
		mov	[ebp+var_14C], edx
		lea	edx, [ebp+var_154]
		mov	[ebp+var_150], eax
		lea	eax, [ebp+var_160]
		mov	[esp+8], edx
		mov	[esp], eax
		mov	[ebp+var_2C8], 43h
		call	sub_6ED91C50
		mov	esi, [ebp+var_328]
		push	eax
		mov	eax, [ebp+var_160]
		mov	edi, ds:_ZeqRK13QLatin1StringRK10QStringRef
		mov	[esi+0Ch], eax
		mov	eax, [ebp+var_15C]
		mov	[esi+10h], eax
		mov	eax, [ebp+var_158]
		mov	[esi+14h], eax
		mov	eax, esi
		add	eax, 18h
		mov	[esp+4], eax
		lea	eax, [ebp+var_38]
		mov	[ebp+var_38], offset aXmlns_4 ;	"xmlns"
		mov	[esp], eax
		mov	[ebp+var_2D8], edi
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	edi ; _ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jnz	loc_6ED86AB1
		mov	ecx, [ebp+var_328]
		cmp	dword ptr [ecx+20h], 0
		jz	loc_6ED86A83

loc_6ED85202:				; CODE XREF: sub_6ED83560+354Bj
		xor	eax, eax

loc_6ED85204:				; CODE XREF: sub_6ED83560+3556j
		mov	ebx, [ebp+var_328]
		mov	[ebx+3Dh], al
		mov	esi, [ebp+arg_0]
		mov	eax, [esi+0B0h]
		test	eax, eax
		jz	loc_6ED88DE2
		mov	edx, ds:_ZN7QString11shared_nullE
		cmp	[eax], edx
		jz	loc_6ED88DE2
		mov	eax, [ebp+var_328]
		cmp	byte ptr [eax+3Ch], 0
		jz	loc_6ED88CEA
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_16C]
		mov	ecx, [ebp+arg_0]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0FFFFFFFFh
		add	edx, 0B0h
		mov	[esp+8], edx
		mov	[esp+4], ecx
		call	sub_6ED91C50
		mov	ebx, [ebp+var_328]
		mov	eax, [ebp+var_16C]
		push	edi
		mov	[ebx+30h], eax
		mov	eax, [ebp+var_168]
		mov	[ebx+34h], eax
		mov	eax, [ebp+var_164]
		mov	[ebx+38h], eax
		mov	esi, [ebp+arg_0]
		mov	eax, [esi+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED85298:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	esi, [ebp+arg_0] ; jumptable 6ED83D3C case 263
		mov	edi, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	esi, [esi+188h]
		mov	edi, [edi+190h]
		shl	esi, 4
		add	esi, edi
		mov	eax, [esi+4]
		mov	dword ptr [esp+4], 0
		mov	[esp], edx
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[ebp+var_450], eax
		call	sub_6ED91590
		add	eax, [ebp+var_450]
		mov	[esi+4], eax
		mov	ecx, [ebp+arg_0]
		cmp	byte ptr [ecx+78h], 0
		jz	loc_6ED84821
		mov	dword ptr [esp+4], 107h
		jmp	loc_6ED84F0A
; ---------------------------------------------------------------------------

loc_6ED852F8:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	eax, [ebp+arg_0] ; jumptable 6ED83D3C case 105
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_0]
		mov	ebx, [ebp+arg_0]
		imul	eax, [eax+0D0h], 24h
		mov	edx, [edx+0CCh]
		add	ebx, 198h
		add	eax, edx
		mov	[ebp+var_380], eax
		mov	eax, [ecx+188h]
		mov	esi, [ebp+var_380]
		add	eax, 2
		shl	eax, 4
		add	eax, [ecx+190h]
		mov	ecx, [eax+8]
		mov	edx, [eax+4]
		sub	edx, ecx
		add	ecx, [eax]
		mov	eax, esi
		mov	[ebp+var_41C], ebx
		add	eax, 0Ch
		mov	[esi+0Ch], ebx
		mov	[esi+10h], ecx
		mov	[esi+14h], edx
		mov	edi, [ebp+arg_0]
		mov	[esp+4], eax
		mov	[ebp+var_2C8], 33h
		mov	[esp], edi
		call	sub_6ED77250
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+var_41C]
		mov	eax, [edx+188h]
		add	eax, 4
		shl	eax, 4
		add	eax, [edx+190h]
		mov	ecx, [eax+8]
		mov	edx, [eax+4]
		sub	edx, ecx
		add	ecx, [eax]
		mov	eax, ecx
		mov	ecx, [ebp+var_380]
		mov	[ecx+18h], ebx
		mov	[ecx+1Ch], eax
		mov	[ecx+20h], edx
		mov	esi, [ebp+arg_0]
		mov	eax, [esi+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED853B2:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED83D3C cases 140,141
		mov	eax, [ecx+188h]
		shl	eax, 4
		add	eax, [ecx+190h]

loc_6ED853C4:				; CODE XREF: sub_6ED83560+1FCCj
		mov	edx, [ecx+198h]
		mov	edx, [edx+8]
		mov	dword ptr [eax+4], 0
		mov	[eax], edx
		jmp	loc_6ED84821
; ---------------------------------------------------------------------------

loc_6ED853DB:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	esi, [ebp+arg_0] ; jumptable 6ED83D3C cases 264-268
		mov	edi, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	esi, [esi+188h]
		mov	edi, [edi+190h]
		add	edx, 198h
		shl	esi, 4
		add	esi, edi
		mov	[ebp+var_3A4], esi
		mov	eax, [esi+4]
		mov	[ebp+var_394], edx
		mov	[ebp+var_364], 0
		mov	[ebp+var_44C], eax
		jmp	short loc_6ED85454
; ---------------------------------------------------------------------------

loc_6ED8541C:				; CODE XREF: sub_6ED83560+1F31j
		cmp	ds:byte_6EDA4EA0[eax], 2
		jz	loc_6ED854CA

loc_6ED85429:				; CODE XREF: sub_6ED83560+1F4Fj
					; sub_6ED83560+1F58j ...
		movzx	edx, [ebp+var_342]
		mov	ecx, [ebp+var_394]
		add	[ebp+var_364], 1
		mov	[esp+4], dx
		mov	[esp], ecx
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	sub_6ED94660

loc_6ED85454:				; CODE XREF: sub_6ED83560+1EBAj
		mov	ebx, [ebp+arg_0]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], ebx
		call	sub_6ED91B20
		test	eax, eax
		mov	[ebp+var_330], eax
		jz	loc_6ED87AFD
		movzx	ecx, word ptr [ebp+var_330]
		movzx	eax, cx
		test	eax, 0FF80h
		mov	[ebp+var_342], cx
		mov	[ebp+var_28], cx
		jz	short loc_6ED8541C
		lea	esi, [ebp+var_28]
		mov	[esp], esi
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	ds:_ZNK5QChar8categoryEv
		lea	edx, [eax-0Fh]
		cmp	edx, 4
		jbe	loc_6ED85429
		cmp	eax, 5
		jz	loc_6ED85429
		sub	eax, 1
		cmp	eax, 5
		jbe	loc_6ED85429

loc_6ED854CA:				; CODE XREF: sub_6ED83560+1EC3j
		mov	edi, [ebp+var_330]
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp+4], edi
		mov	[esp], eax
		call	sub_6ED91B80

loc_6ED854E9:				; CODE XREF: sub_6ED83560+45DDj
		mov	eax, [ebp+var_364]
		mov	edx, [ebp+var_3A4]
		add	eax, [ebp+var_44C]
		mov	[edx+4], eax
		mov	ecx, [ebp+arg_0]
		cmp	byte ptr [ecx+78h], 0
		jz	loc_6ED84821
		mov	dword ptr [esp+4], 10Ch
		jmp	loc_6ED84F0A
; ---------------------------------------------------------------------------

loc_6ED85518:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	edx, [ebp+arg_0] ; jumptable 6ED83D3C cases 176,177
		mov	eax, [edx+188h]
		mov	ecx, edx
		shl	eax, 4
		add	eax, [edx+190h]
		jmp	loc_6ED853C4
; ---------------------------------------------------------------------------

loc_6ED85531:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	ebx, [ebp+arg_0] ; jumptable 6ED83D3C cases 213,214

loc_6ED85534:				; CODE XREF: sub_6ED83560+2C66j
					; sub_6ED83560+2CAEj
		mov	edx, [ebx+198h]
		mov	eax, [ebx+188h]
		mov	edx, [edx+8]
		shl	eax, 4
		add	eax, [ebx+190h]
		mov	[eax], edx
		mov	dword ptr [eax+4], 0
		mov	eax, [ebx+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED85560:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	esi, [ebp+arg_0] ; jumptable 6ED83D3C case 240
		mov	eax, [esi+188h]
		mov	ebx, [esi+190h]
		lea	edx, [eax+1]
		shl	eax, 4
		lea	ecx, [ebx+eax]
		mov	eax, [ecx+4]
		shl	edx, 4
		add	eax, [ebx+edx+4]
		add	eax, 1
		mov	[ecx+4], eax
		mov	eax, [esi+188h]
		add	eax, 1
		shl	eax, 4
		add	eax, [esi+190h]
		add	esi, 198h
		mov	ecx, [eax+8]
		mov	edx, [eax+4]
		sub	edx, ecx
		add	ecx, [eax]
		mov	[ebp+var_248], edx
		lea	eax, [ebp+var_DC]
		lea	edx, [ebp+var_250]
		mov	[ebp+var_3CC], esi
		mov	[ebp+var_250], esi
		mov	[ebp+var_24C], ecx
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_2C8], 1Ch
		call	ds:_ZNK10QStringRef8toStringEv
		push	edi
		mov	edi, [ebp+arg_0]
		lea	eax, [ebp+var_DC]
		mov	dword ptr [esp+8], 0
		mov	[esp+4], eax
		add	edi, 54h
		mov	[ebp+var_438], edi
		mov	[esp], edi
		mov	[ebp+var_2C8], 1Bh
		call	sub_6ED98330
		mov	edx, [ebp+arg_0]
		mov	eax, [eax]
		cmp	eax, [edx+54h]
		jz	loc_6ED884A9
		mov	ecx, [ebp+var_438]
		lea	eax, [ebp+var_DC]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	sub_6ED92AE0
		mov	[ebp+var_39C], eax
		movzx	eax, byte ptr [eax+4]
		test	al, 2
		jnz	loc_6ED88838
		test	al, 8
		jz	loc_6ED8880A

loc_6ED85656:				; CODE XREF: sub_6ED83560+52D3j
		test	al, 4
		jz	loc_6ED887D2
		mov	edx, [ebp+var_39C]
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_2C8], 1Bh
		mov	[esp+4], edx
		mov	[esp], ecx
		call	sub_6ED72BF0

loc_6ED8567D:				; CODE XREF: sub_6ED83560+5293j
					; sub_6ED83560+52A5j
		mov	edi, [ebp+arg_0]
		mov	eax, [edi+188h]
		mov	edx, [edi+190h]
		add	eax, 1
		shl	eax, 4
		mov	eax, [eax+edx+4]
		mov	[ebp+var_2C8], 1Bh
		add	eax, 2
		mov	[esp+4], eax
		mov	eax, [ebp+var_3CC]
		mov	[esp], eax
		call	ds:_ZN7QString4chopEi
		mov	edx, [edi+198h]
		mov	eax, [edi+188h]
		mov	edx, [edx+8]
		shl	eax, 4
		add	eax, [edi+190h]
		mov	[eax], edx
		mov	dword ptr [eax+4], 0
		jmp	loc_6ED846CB
; ---------------------------------------------------------------------------

loc_6ED856DC:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED83D3C case 241
		mov	eax, [ecx+188h]
		mov	ebx, [ecx+190h]
		lea	edx, [eax+1]
		shl	eax, 4
		lea	ecx, [ebx+eax]
		mov	eax, [ecx+4]
		shl	edx, 4
		add	eax, [ebx+edx+4]
		add	eax, 1
		mov	[ecx+4], eax
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx+188h]
		add	eax, 1
		shl	eax, 4
		add	eax, [ebx+190h]
		add	ebx, 198h
		mov	ecx, [eax+8]
		mov	edx, [eax+4]
		sub	edx, ecx
		add	ecx, [eax]
		mov	[ebp+var_260], edx
		lea	eax, [ebp+var_D0]
		lea	edx, [ebp+var_268]
		mov	[ebp+var_3E8], ebx
		mov	[ebp+var_268], ebx
		mov	[ebp+var_264], ecx
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_2C8], 15h
		call	ds:_ZNK10QStringRef8toStringEv
		mov	esi, [ebp+arg_0]
		lea	eax, [ebp+var_D0]
		push	edx
		mov	dword ptr [esp+8], 0
		add	esi, 58h
		mov	[ebp+var_434], esi
		mov	[esp+4], eax
		mov	[esp], esi
		mov	[ebp+var_2C8], 14h
		call	sub_6ED98330
		mov	edx, [ebp+arg_0]
		mov	eax, [eax]
		cmp	eax, [edx+58h]
		jz	loc_6ED88585
		or	byte ptr [edx+181h], 2
		mov	ecx, [ebp+var_434]
		lea	eax, [ebp+var_D0]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	sub_6ED92AE0
		mov	[ebp+var_3F4], eax
		test	byte ptr [eax+4], 3
		jz	loc_6ED88710
		mov	ebx, [ebp+arg_0]
		or	byte ptr [ebx+181h], 1

loc_6ED857DC:				; CODE XREF: sub_6ED83560+5031j
					; sub_6ED83560+5042j ...
		lea	eax, [ebp+var_D0]
		jmp	loc_6ED846D1
; ---------------------------------------------------------------------------

loc_6ED857E7:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED83D3C case 242
		mov	eax, [ecx+188h]
		mov	ebx, [ecx+190h]
		lea	edx, [eax+1]
		shl	eax, 4
		lea	ecx, [ebx+eax]
		mov	eax, [ecx+4]
		shl	edx, 4
		add	eax, [ebx+edx+4]
		add	eax, 1
		mov	[ecx+4], eax
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED8581D:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	esi, [ebp+arg_0] ; jumptable 6ED83D3C case 243
		mov	eax, [esi+188h]
		mov	ebx, [esi+190h]
		lea	edx, [eax+1]
		shl	eax, 4
		lea	ecx, [ebx+eax]
		mov	eax, [ecx+4]
		shl	edx, 4
		add	eax, [ebx+edx+4]
		add	eax, 1
		mov	[ecx+4], eax
		mov	eax, [esi+188h]
		add	eax, 1
		shl	eax, 4
		add	eax, [esi+190h]
		add	esi, 198h
		mov	ecx, [eax+8]
		mov	edx, [eax+4]
		sub	edx, ecx
		add	ecx, [eax]
		mov	[ebp+var_278], edx
		lea	eax, [ebp+var_D0]
		lea	edx, [ebp+var_280]
		mov	[ebp+var_3E4], esi
		mov	[ebp+var_280], esi
		mov	[ebp+var_27C], ecx
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_2C8], 0Fh
		call	ds:_ZNK10QStringRef8toStringEv
		mov	edi, [ebp+arg_0]
		lea	eax, [ebp+var_D0]
		push	esi
		mov	dword ptr [esp+8], 0
		add	edi, 54h
		mov	[ebp+var_400], edi
		mov	[esp+4], eax
		mov	[esp], edi
		mov	[ebp+var_2C8], 0Eh
		call	sub_6ED98330
		mov	edx, [ebp+arg_0]
		mov	eax, [eax]
		cmp	eax, [edx+54h]
		jz	loc_6ED881E4
		mov	ecx, [ebp+var_400]
		lea	eax, [ebp+var_D0]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	sub_6ED92AE0
		mov	[ebp+var_384], eax
		mov	ebx, eax
		movzx	eax, byte ptr [eax+4]
		test	al, 2
		jz	loc_6ED88148

loc_6ED8590D:				; CODE XREF: sub_6ED83560+4BF0j
		lea	eax, [ebp+var_D4]
		mov	edx, offset aReferenceToExt ; "Reference to external entity '%1' in at"...
		mov	[ebp+var_24], 20h
		mov	[ebp+var_2C8], 0Eh
		call	sub_6ED71920
		lea	edx, [ebp+var_24]
		mov	[esp+10h], edx
		lea	edx, [ebp+var_D0]
		lea	eax, [ebp+var_D8]
		mov	[esp+8], edx
		lea	edx, [ebp+var_D4]
		mov	dword ptr [esp+0Ch], 0
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_2C8], 0Dh
		call	ds:_ZNK7QString3argERKS_iRK5QChar
		mov	esi, [ebp+arg_0]
		lea	eax, [ebp+var_D8]
		push	ebx
		mov	[esp+4], eax
		mov	[esp], esi
		mov	[ebp+var_2C8], 0Ch
		call	sub_6ED71AE0
		lea	eax, [ebp+var_D8]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0Dh
		call	sub_6ED94560
		lea	eax, [ebp+var_D4]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0Eh
		call	sub_6ED94560

loc_6ED859B9:				; CODE XREF: sub_6ED83560+4C7Fj
					; sub_6ED83560+4D53j
		lea	eax, [ebp+var_D0]

loc_6ED859BF:				; CODE XREF: sub_6ED83560+311Ej
		mov	[esp], eax
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	sub_6ED94560
		mov	ecx, [ebp+arg_0]
		jmp	loc_6ED84821
; ---------------------------------------------------------------------------

loc_6ED859D9:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED83D3C case 174
		mov	ebx, [ebp+arg_0]
		mov	edi, [ebp+arg_0]
		mov	ecx, [ecx+188h]
		mov	ebx, [ebx+190h]
		add	edi, 198h
		shl	ecx, 4
		add	ecx, ebx
		mov	[ebp+var_3B4], ecx
		mov	esi, [ecx+4]
		mov	[ebp+var_3EC], edi
		mov	[ebp+var_3A0], 1
		mov	[ebp+var_460], esi

loc_6ED85A18:				; CODE XREF: sub_6ED83560+2551j
		mov	edi, [ebp+var_3A0]
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		sub	edi, 1
		mov	[ebp+var_414], edi
		mov	[esp], eax
		call	sub_6ED91B20
		test	eax, eax
		jz	loc_6ED872CF
		cmp	ax, 22h
		mov	[ebp+var_35A], ax
		jz	loc_6ED872AB
		ja	loc_6ED87287
		cmp	ax, 0Ah
		nop
		jz	loc_6ED870F5
		ja	loc_6ED877C4
		test	ax, ax
		nop
		jz	loc_6ED876F4
		cmp	ax, 9
		lea	esi, [esi+0]
		jz	loc_6ED87126

loc_6ED85A86:				; CODE XREF: sub_6ED83560+3D45j
					; sub_6ED83560+3D50j ...
		movzx	ebx, [ebp+var_35A]
		mov	esi, [ebp+var_3EC]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp+4], bx
		mov	[esp], esi
		call	sub_6ED94660

loc_6ED85AAA:				; CODE XREF: sub_6ED83560+3BF5j
					; sub_6ED83560+3FADj
		add	[ebp+var_3A0], 1
		jmp	loc_6ED85A18
; ---------------------------------------------------------------------------

loc_6ED85AB6:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	esi, [ebp+arg_0] ; jumptable 6ED83D3C case 175
		mov	eax, [esi+188h]
		shl	eax, 4
		add	eax, [esi+190h]
		add	esi, 198h
		mov	ecx, [eax+8]
		mov	edx, [eax+4]
		sub	edx, ecx
		add	ecx, [eax]
		mov	[ebp+var_17C], edx
		lea	eax, [ebp+var_6C]
		lea	edx, [ebp+var_184]
		mov	[ebp+var_410], esi
		mov	[ebp+var_184], esi
		mov	[ebp+var_180], ecx
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_2C8], 32h
		call	ds:_ZNK10QStringRef8toStringEv
		push	eax
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		mov	[ebp+var_2C8], 31h
		call	ds:_ZN9QXmlUtils10isPublicIDERK7QString
		mov	[ebp+var_459], al
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		mov	[ebp+var_2C8], 32h
		call	sub_6ED94560
		cmp	[ebp+var_459], 0
		jz	loc_6ED8835A
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED85B5D:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	edx, [ebp+arg_0] ; jumptable 6ED83D3C case 229
		mov	eax, [edx+188h]
		shl	eax, 4
		add	eax, [edx+190h]
		mov	edx, [eax+8]
		test	edx, edx
		jz	loc_6ED87DAD
		mov	ecx, [ebp+arg_0]
		sub	edx, 1
		mov	eax, [eax]
		mov	[ebp+var_194], edx
		add	ecx, 198h
		test	edx, edx
		mov	[ebp+var_19C], ecx
		mov	[ebp+var_198], eax
		jz	loc_6ED87DCB

loc_6ED85BA2:				; CODE XREF: sub_6ED83560+48D1j
					; sub_6ED83560+48E1j
		mov	edi, [ebp+arg_0]
		mov	eax, [edi+1A0h]
		mov	ecx, [edi+1A4h]
		lea	edx, [eax+1]
		cmp	edx, ecx
		jl	loc_6ED8834F
		add	eax, 2
		add	ecx, ecx
		cmp	eax, ecx
		jge	short loc_6ED85BC7
		mov	eax, ecx

loc_6ED85BC7:				; CODE XREF: sub_6ED83560+2663j
		mov	ecx, [ebp+arg_0]
		mov	[ecx+1A4h], eax
		shl	eax, 5
		mov	[esp+4], eax
		mov	eax, [ecx+19Ch]
		mov	[ebp+var_2C8], 2Ch
		mov	[esp], eax
		call	ds:_Z8qReallocPvj
		mov	ebx, [ebp+arg_0]
		test	eax, eax
		mov	[ebx+19Ch], eax
		jz	loc_6ED89A1D
		mov	edx, [ebx+1A0h]
		add	edx, 1

loc_6ED85C0A:				; CODE XREF: sub_6ED83560+4DF5j
					; sub_6ED83560+64DFj
		mov	edi, [ebp+arg_0]
		mov	ecx, 4
		mov	[edi+1A0h], edx
		shl	edx, 5
		lea	edx, [eax+edx]
		mov	[ebp+var_338], edx
		mov	edx, [edi+188h]
		shl	edx, 4
		add	edx, [edi+190h]
		mov	edi, [ebp+var_338]
		mov	esi, edx
		rep movsd
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_0]
		mov	eax, [edx+188h]
		mov	edx, [ebp+var_338]
		add	eax, 4
		shl	eax, 4
		add	edx, 10h
		add	eax, [ecx+190h]
		mov	edi, edx
		mov	ecx, 4
		mov	esi, eax
		rep movsd
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+arg_0]
		mov	ebx, [ebp+arg_0]
		mov	edx, [eax+188h]
		add	ecx, 198h
		shl	edx, 4
		add	edx, [eax+190h]
		mov	eax, [edx+4]
		mov	edx, [edx]
		mov	[ebp+var_3B0], ecx
		mov	[ebp+var_1C0], ecx
		mov	[ebp+var_1B8], eax
		mov	[ebp+var_1BC], edx
		cmp	dword ptr [ebx+0C4h], 0
		js	loc_6ED87B94
		mov	esi, ds:_ZeqRK10QStringRefS1_
		add	ebx, 114h
		mov	[ebp+var_474], ebx
		mov	[ebp+var_334], 0
		mov	[ebp+var_478], esi
		jmp	short loc_6ED85CF4
; ---------------------------------------------------------------------------

loc_6ED85CD5:				; CODE XREF: sub_6ED83560+27B2j
					; sub_6ED83560+27D3j ...
		mov	esi, [ebp+arg_0]
		add	[ebp+var_334], 1
		mov	eax, [esi+0C4h]
		add	eax, 1
		cmp	[ebp+var_334], eax
		jge	loc_6ED87B94

loc_6ED85CF4:				; CODE XREF: sub_6ED83560+2773j
		mov	eax, [ebp+arg_0]
		mov	edi, [ebp+var_334]
		mov	eax, [eax+0C0h]
		shl	edi, 6
		add	edi, eax
		mov	[ebp+var_32C], edi
		cmp	byte ptr [edi+3Ch], 0
		jnz	short loc_6ED85CD5
		mov	edx, [ebp+var_474]
		mov	[esp], edi
		mov	[ebp+var_2C8], 28h
		mov	[esp+4], edx
		call	ds:_ZeqRK10QStringRefS1_
		test	al, al
		jz	short loc_6ED85CD5
		mov	eax, edi
		lea	ecx, [ebp+var_1C0]
		add	eax, 0Ch
		mov	[esp+4], ecx
		mov	[esp], eax
		call	[ebp+var_478]
		test	al, al
		jz	short loc_6ED85CD5
		mov	ebx, [ebp+arg_0]
		xor	edx, edx
		mov	edi, [ebp+var_338]
		mov	eax, [ebx+198h]
		mov	esi, [eax+8]
		mov	[ebp+var_3F8], esi
		cmp	dword ptr [edi+14h], 0
		jle	loc_6ED87B82
		mov	[ebp+var_348], 0
		mov	[ebp+var_3BD], 1
		mov	[ebp+var_350], 0
		jmp	short loc_6ED85DE2
; ---------------------------------------------------------------------------

loc_6ED85D92:				; CODE XREF: sub_6ED83560+289Cj
		mov	[ebp+var_3BD], 0

loc_6ED85D99:				; CODE XREF: sub_6ED83560+28AEj
		mov	ebx, [ebp+var_3B0]
		mov	[esp+4], ax
		mov	[ebp+var_2C8], 28h
		mov	[esp], ebx
		call	sub_6ED94660
		add	[ebp+var_350], 1

loc_6ED85DBD:				; CODE XREF: sub_6ED83560+28A5j
		mov	esi, [ebp+var_338]
		add	[ebp+var_348], 1
		mov	edi, [ebp+var_348]
		cmp	[esi+14h], edi
		jle	loc_6ED87B42
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+198h]

loc_6ED85DE2:				; CODE XREF: sub_6ED83560+2830j
		mov	ecx, [ebp+var_338]
		mov	edx, [ebp+var_348]
		mov	eax, [eax+0Ch]
		add	edx, [ecx+10h]
		movzx	eax, word ptr [eax+edx*2]
		cmp	ax, 20h
		jnz	short loc_6ED85D92
		cmp	[ebp+var_3BD], 0
		jnz	short loc_6ED85DBD
		mov	[ebp+var_3BD], 1
		jmp	short loc_6ED85D99
; ---------------------------------------------------------------------------

loc_6ED85E10:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	ebx, [ebp+arg_0] ; jumptable 6ED83D3C case 173
		test	byte ptr [ebx+180h], 20h
		jz	loc_6ED849F1
		mov	esi, [ebp+arg_0]
		mov	eax, [esi+198h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED88BF2

loc_6ED85E34:				; CODE XREF: sub_6ED83560+569Aj
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		add	eax, 198h
		mov	[esp], eax
		call	ds:_ZN7QString7reallocEv
		mov	edi, [ebp+arg_0]
		mov	eax, [edi+198h]
		mov	edx, [eax+0Ch]

loc_6ED85E5B:				; CODE XREF: sub_6ED83560+56A0j
		mov	eax, [eax+8]
		mov	word ptr [edx+eax*2-2],	20h
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED85E73:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	edx, [ebp+arg_0] ; jumptable 6ED83D3C case 103
		mov	ecx, [edx+188h]
		imul	eax, [edx+0D0h], 24h
		add	eax, [edx+0CCh]
		add	ecx, 2
		shl	ecx, 4
		add	ecx, [edx+190h]
		mov	ebx, [ecx+8]
		mov	edx, [ecx+4]
		sub	edx, ebx
		add	ebx, [ecx]
		mov	ecx, [ebp+arg_0]
		mov	[eax+20h], edx
		mov	[eax+1Ch], ebx
		mov	dword ptr [eax+0Ch], 0
		add	ecx, 198h
		mov	[eax+18h], ecx
		mov	dword ptr [eax+14h], 0
		mov	dword ptr [eax+10h], 0
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED85ED4:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	esi, [ebp+arg_0] ; jumptable 6ED83D3C case 259
		mov	edi, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	esi, [esi+188h]
		mov	edi, [edi+190h]
		add	edx, 198h
		shl	esi, 4
		add	esi, edi
		mov	[ebp+var_3AC], esi
		mov	eax, [esi+4]
		mov	[ebp+var_43C], edx
		mov	[ebp+var_3DC], 0
		mov	[ebp+var_458], eax

loc_6ED85F13:				; CODE XREF: sub_6ED83560+3B73j
		mov	esi, [ebp+arg_0]
		mov	eax, [esi+4Ch]
		cmp	eax, 0FFFFFFFFh
		jz	loc_6ED87533
		cmp	byte ptr [esi+78h], 0
		jnz	loc_6ED85FE2
		lea	edx, ds:0[eax*4]
		sub	eax, 1
		add	edx, [esi+48h]
		mov	[esi+4Ch], eax
		mov	eax, [edx]

loc_6ED85F3E:				; CODE XREF: sub_6ED83560+3FF2j
					; sub_6ED83560+4B50j
		test	ax, ax
		mov	[ebp+var_37A], ax
		jz	loc_6ED85FE2
		cmp	[ebp+var_37A], 0Ah
		jz	loc_6ED8701D
		ja	loc_6ED87512
		cmp	[ebp+var_37A], 9
		jz	loc_6ED87057

loc_6ED85F70:				; CODE XREF: sub_6ED83560+3FC8j
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+arg_0]
		movzx	edi, [ebp+var_37A]
		mov	eax, [edx+4Ch]
		mov	ecx, [ebx+50h]
		mov	[ebp+var_440], edi
		lea	edx, [eax+1]
		cmp	edx, ecx
		jl	loc_6ED880B5
		add	eax, 2
		add	ecx, ecx
		cmp	eax, ecx
		jge	short loc_6ED85F9F
		mov	eax, ecx

loc_6ED85F9F:				; CODE XREF: sub_6ED83560+2A3Bj
		mov	esi, [ebp+arg_0]
		mov	[esi+50h], eax
		shl	eax, 2
		mov	[esp+4], eax
		mov	eax, [esi+48h]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_Z8qReallocPvj
		test	eax, eax
		mov	[esi+48h], eax
		jz	loc_6ED8901A
		mov	edx, [esi+4Ch]
		add	edx, 1

loc_6ED85FD3:				; CODE XREF: sub_6ED83560+4B58j
					; sub_6ED83560+5AD6j
		mov	ecx, [ebp+arg_0]
		mov	ebx, [ebp+var_440]
		mov	[ecx+4Ch], edx
		mov	[eax+edx*4], ebx

loc_6ED85FE2:				; CODE XREF: sub_6ED83560+29C6j
					; sub_6ED83560+29E8j ...
		mov	eax, [ebp+var_3DC]
		mov	edx, [ebp+var_3AC]
		add	eax, [ebp+var_458]
		mov	[edx+4], eax
		mov	ecx, [ebp+arg_0]
		cmp	byte ptr [ecx+78h], 0
		jz	loc_6ED84821
		mov	dword ptr [esp+4], 103h
		jmp	loc_6ED84F0A
; ---------------------------------------------------------------------------

loc_6ED86011:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	esi, [ebp+arg_0] ; jumptable 6ED83D3C case 262
		mov	edi, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	esi, [esi+188h]
		mov	edi, [edi+190h]
		shl	esi, 4
		add	esi, edi
		mov	eax, [esi+4]
		mov	[esp], edx
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[ebp+var_454], eax
		mov	eax, esi
		add	eax, 8
		mov	[esp+4], eax
		call	sub_6ED91590
		add	eax, [ebp+var_454]
		mov	[esi+4], eax
		mov	ecx, [ebp+arg_0]
		cmp	byte ptr [ecx+78h], 0
		jz	loc_6ED84821
		mov	dword ptr [esp+4], 106h
		jmp	loc_6ED84F0A
; ---------------------------------------------------------------------------

loc_6ED86072:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	esi, [ebp+arg_0] ; jumptable 6ED83D3C cases 215,216
		mov	ecx, [esi+188h]
		mov	eax, [esi+190h]
		mov	edx, ecx
		shl	edx, 4
		mov	ecx, edx
		lea	edx, [eax+edx]
		lea	eax, [ecx+eax+10h]
		mov	edi, edx
		mov	esi, eax
		mov	ecx, 4
		rep movsd
		mov	edx, [ebp+arg_0]
		mov	esi, [ebp+arg_0]
		mov	eax, [edx+188h]
		mov	ecx, eax
		shl	ecx, 4
		add	ecx, [edx+190h]
		mov	ebx, [ecx+8]
		mov	edx, [ecx+4]
		sub	edx, ebx
		add	ebx, [ecx]
		mov	ecx, [ebp+arg_0]
		mov	[esi+0B8h], edx
		mov	[esi+0B4h], ebx
		add	ecx, 198h
		mov	[esi+0B0h], ecx
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED860DB:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	edi, [ebp+arg_0] ; jumptable 6ED83D3C cases 217-220
		mov	ecx, [edi+188h]
		mov	eax, [edi+190h]
		lea	edx, [ecx+1]
		shl	edx, 4
		mov	edx, [edx+eax+4]
		shl	ecx, 4
		add	[eax+ecx+4], edx
		mov	eax, [edi+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED86106:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	esi, [ebp+arg_0] ; jumptable 6ED83D3C case 244
		mov	dword ptr [esp+4], 3
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], esi
		call	sub_6ED7B830
		test	eax, eax
		mov	[ebp+var_104], eax
		jz	loc_6ED886CC
		cmp	eax, 0FFFEh
		jbe	loc_6ED88486
		lea	eax, [ebp+var_104]
		lea	edi, [ebp+var_E8]
		mov	[esp+4], eax
		mov	dword ptr [esp+8], 1
		mov	[esp], edi
		call	ds:_ZN7QString8fromUcs4EPKji
		mov	[ebp+var_2C8], 8
		push	eax
		mov	[esp+4], edi
		mov	[esp], esi
		call	sub_6ED72BF0
		lea	eax, [ebp+var_E8]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	sub_6ED94560

loc_6ED8618C:				; CODE XREF: sub_6ED83560+4F44j
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx+188h]
		mov	edx, [ebx+190h]
		add	eax, 2
		shl	eax, 4
		mov	eax, [eax+edx+4]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		add	eax, 3
		mov	[esp+4], eax
		mov	eax, ebx
		add	eax, 198h
		mov	[esp], eax
		call	ds:_ZN7QString4chopEi
		jmp	loc_6ED85534
; ---------------------------------------------------------------------------

loc_6ED861CB:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED83D3C cases 247,248
		mov	eax, [ecx+190h]
		mov	ebx, ecx
		mov	ecx, [ecx+188h]
		lea	edx, [ecx+1]
		shl	edx, 4
		shl	ecx, 4
		mov	edx, [edx+eax+4]
		add	[eax+ecx+4], edx
		jmp	loc_6ED849F1
; ---------------------------------------------------------------------------

loc_6ED861F2:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	ebx, [ebp+arg_0] ; jumptable 6ED83D3C case 10
		mov	edx, [ebx+60h]
		lea	eax, ds:0[edx*4]
		sub	edx, 1
		add	eax, [ebx+5Ch]
		mov	[ebx+60h], edx
		mov	eax, [eax]
		and	byte ptr [eax+4], 0EFh
		jmp	loc_6ED85534
; ---------------------------------------------------------------------------

loc_6ED86213:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	esi, [ebp+arg_0] ; jumptable 6ED83D3C case 11
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 37h
		mov	dword ptr [esp+4], offset aVersion_1 ; "version"
		mov	[esp], esi
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	sub_6ED82180
		test	al, al
		jnz	loc_6ED837F6
		mov	edi, [ebp+arg_0]
		cmp	byte ptr [edi+78h], 0
		jz	loc_6ED8454C
		mov	dword ptr [esp+4], 0Bh
		jmp	loc_6ED84FD7
; ---------------------------------------------------------------------------

loc_6ED86262:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	edx, [ebp+arg_0] ; jumptable 6ED83D3C case 12
		cmp	dword ptr [edx+7Ch], 1
		jz	short loc_6ED86272
		mov	dword ptr [edx+7Ch], 2

loc_6ED86272:				; CODE XREF: sub_6ED83560+2D09j
		mov	ecx, [ebp+arg_0]
		mov	ebx, [ebp+arg_0]
		mov	eax, [ecx+188h]
		add	eax, 5
		shl	eax, 4
		add	eax, [ecx+190h]
		mov	ecx, [eax+8]
		mov	edx, [eax+4]
		sub	edx, ecx
		add	ecx, [eax]
		mov	eax, [ebp+arg_0]
		mov	[ebx+170h], edx
		mov	[ebx+16Ch], ecx
		add	eax, 198h
		mov	[ebx+168h], eax
		mov	[esp], ebx
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	sub_6ED7BA60
		mov	eax, [ebx+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED862CB:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	esi, [ebp+arg_0] ; jumptable 6ED83D3C case 13
		mov	ebx, [esi+188h]
		or	byte ptr [esi+181h], 4
		lea	eax, [ebx+1]
		shl	eax, 4
		add	eax, [esi+190h]
		mov	ecx, [eax+8]
		mov	edx, [eax+4]
		sub	edx, ecx
		add	ecx, [eax]
		mov	eax, esi
		add	eax, 198h
		mov	[esi+15Ch], eax
		mov	eax, ebx
		mov	[esi+160h], ecx
		mov	[esi+164h], edx
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED86311:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	edi, [ebp+arg_0] ; jumptable 6ED83D3C case 14
		mov	eax, [edi+188h]
		add	eax, 1
		shl	eax, 4
		add	eax, [edi+190h]
		add	edi, 198h
		mov	ecx, [eax+8]
		mov	edx, [eax+4]
		sub	edx, ecx
		add	ecx, [eax]
		lea	eax, [ebp+var_118]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_3F0], edi
		mov	[ebp+var_118], edi
		mov	[ebp+var_114], ecx
		mov	[ebp+var_110], edx
		mov	[esp], eax
		mov	[ebp+var_2C8], 46h
		call	sub_6ED77250
		mov	ecx, [ebp+arg_0]
		mov	esi, [ebp+var_3F0]
		mov	edi, [ebp+arg_0]
		mov	eax, [ecx+188h]
		lea	edx, [eax+1]
		shl	edx, 4
		add	edx, [ecx+190h]
		mov	ebx, [edx+8]
		mov	ecx, [edx+4]
		sub	ecx, ebx
		add	ebx, [edx]
		mov	edx, ebx
		mov	ebx, [ebp+arg_0]
		mov	[ebx+154h], edx
		lea	edx, [eax+3]
		shl	edx, 4
		add	edx, [ebx+190h]
		mov	[ebx+150h], esi
		mov	[ebx+158h], ecx
		mov	ebx, [edx+8]
		mov	ecx, [edx+4]
		sub	ecx, ebx
		add	ebx, [edx]
		mov	[edi+15Ch], esi
		mov	[edi+164h], ecx
		mov	[edi+160h], ebx
		or	byte ptr [edi+181h], 4
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED863E0:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	eax, [ebp+arg_0] ; jumptable 6ED83D3C case 16
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED82E00
		test	al, al
		jnz	loc_6ED87A39
		mov	edx, [ebp+arg_0]
		cmp	byte ptr [edx+78h], 0
		jz	loc_6ED87A39
		mov	dword ptr [esp+4], 10h
		mov	[esp], edx
		call	sub_6ED78320
		mov	[ebp+var_2F5], 0
		jmp	loc_6ED83B55
; ---------------------------------------------------------------------------

loc_6ED86426:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	ebx, [ebp+arg_0] ; jumptable 6ED83D3C case 37
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 28h
		mov	dword ptr [esp+4], offset aEmpty_0 ; "EMPTY"
		mov	[esp], ebx
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	sub_6ED82180
		test	al, al
		jz	loc_6ED882B8

loc_6ED8645B:				; CODE XREF: sub_6ED83560+4D7Aj
					; sub_6ED83560+4D84j
		mov	edi, [ebp+arg_0]
		jmp	loc_6ED8454C
; ---------------------------------------------------------------------------

loc_6ED86463:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	esi, [ebp+arg_0] ; jumptable 6ED83D3C case 43
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 2Ah
		mov	dword ptr [esp+4], offset aPcdata_0 ; "PCDATA"
		mov	[esp], esi
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	sub_6ED82180
		test	al, al
		jnz	loc_6ED837F6
		mov	edi, [ebp+arg_0]
		cmp	byte ptr [edi+78h], 0
		jz	loc_6ED8454C
		mov	dword ptr [esp+4], 2Bh
		jmp	loc_6ED84FD7
; ---------------------------------------------------------------------------

loc_6ED864B2:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	esi, [ebp+arg_0] ; jumptable 6ED83D3C case 139
		mov	eax, [esi+198h]
		cmp	dword ptr [eax+8], 0
		jz	loc_6ED837F6
		mov	edi, [ebp+arg_0]
		cmp	dword ptr [edi+7Ch], 1
		jz	short loc_6ED864D5
		mov	dword ptr [edi+7Ch], 6

loc_6ED864D5:				; CODE XREF: sub_6ED83560+2F6Cj
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		add	eax, 198h
		mov	[edx+0F0h], eax
		mov	eax, [edx+198h]
		mov	dword ptr [edx+0F4h], 0
		mov	eax, [eax+8]
		mov	[edx+0F8h], eax
		mov	eax, [edx+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED8650A:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	eax, [ebp+arg_0] ; jumptable 6ED83D3C case 0
		cmp	dword ptr [eax+7Ch], 1
		jz	loc_6ED84E1C
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [ecx+7Ch], 3
		mov	eax, [ecx+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED8652C:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	ebx, [ebp+arg_0] ; jumptable 6ED83D3C case 1
		cmp	dword ptr [ebx+7Ch], 1
		jz	loc_6ED849F1
		mov	esi, [ebp+arg_0]
		test	byte ptr [esi+180h], 0C0h
		jz	loc_6ED888DF
		mov	dword ptr [esi+7Ch], 3
		mov	eax, [esi+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED8655B:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	ecx, [ebp+arg_0] ; jumptable 6ED83D3C case 238
		cmp	dword ptr [ecx+7Ch], 1
		jz	short loc_6ED8656B
		mov	dword ptr [ecx+7Ch], 5

loc_6ED8656B:				; CODE XREF: sub_6ED83560+3002j
		mov	ebx, [ebp+arg_0]
		mov	edx, [ebx+1Ch]
		imul	eax, edx, 38h
		sub	edx, 1
		add	eax, [ebx+18h]
		mov	[ebx+1Ch], edx
		shr	edx, 1Fh
		mov	ecx, [eax+30h]
		mov	[ebx+10h], ecx
		mov	ecx, [eax+34h]
		mov	[ebx+14h], dl
		sub	ecx, 1
		mov	[ebx+4], ecx
		mov	edx, [eax+24h]
		mov	ecx, ebx
		add	ecx, 198h
		mov	[ebx+108h], edx
		mov	edx, [eax+28h]
		mov	[ebx+10Ch], edx
		mov	edx, [eax+2Ch]
		mov	[ebx+110h], edx
		mov	edx, [eax]
		mov	[ebx+120h], edx
		mov	edx, [eax+4]
		mov	[ebx+124h], edx
		mov	edx, [eax+8]
		mov	[ebx+128h], edx
		mov	edx, [eax+0Ch]
		mov	[ebx+114h], edx
		mov	edx, [eax+10h]
		mov	eax, [eax+14h]
		mov	[ebx+118h], edx
		mov	[ebx+11Ch], eax
		mov	eax, [ebx+188h]
		add	eax, 2
		shl	eax, 4
		add	eax, [ebx+190h]
		mov	edx, [eax+4]
		mov	eax, [eax]
		mov	[ebp+var_244], ecx
		mov	[ebp+var_240], eax
		lea	eax, [ebp+var_244]
		mov	[ebp+var_23C], edx
		mov	[esp+4], eax
		mov	eax, ebx
		add	eax, 114h
		mov	[esp], eax
		mov	[ebp+var_2C8], 20h
		call	ds:_ZeqRK10QStringRefS1_
		test	al, al
		jnz	loc_6ED849F1
		lea	eax, [ebp+var_AC]
		mov	edx, offset aOpeningAndEndi ; "Opening and ending tag mismatch."
		mov	[ebp+var_2C8], 0FFFFFFFFh
		lea	edi, [ebp+var_AC]
		call	sub_6ED71920
		mov	eax, [ebp+arg_0]
		mov	[esp+4], edi
		mov	[ebp+var_2C8], 1Fh
		mov	[esp], eax
		call	sub_6ED71AE0
		lea	eax, [ebp+var_AC]
		jmp	loc_6ED859BF
; ---------------------------------------------------------------------------

loc_6ED86683:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	ebx, [ebp+arg_0] ; jumptable 6ED83D3C case 104
		imul	eax, [ebx+0D0h], 24h
		add	eax, [ebx+0CCh]
		mov	dword ptr [eax+18h], 0
		mov	dword ptr [eax+20h], 0
		mov	dword ptr [eax+1Ch], 0
		mov	ecx, [ebx+188h]
		add	ecx, 2
		shl	ecx, 4
		add	ecx, [ebx+190h]
		mov	ebx, [ecx+8]
		mov	edx, [ecx+4]
		sub	edx, ebx
		add	ebx, [ecx]
		mov	ecx, [ebp+arg_0]
		mov	[eax+14h], edx
		mov	[eax+10h], ebx
		add	ecx, 198h
		mov	[eax+0Ch], ecx
		mov	esi, [ebp+arg_0]
		add	eax, 0Ch
		mov	[esp+4], eax
		mov	[ebp+var_2C8], 34h
		mov	[esp], esi
		call	sub_6ED77250
		jmp	loc_6ED837F6
; ---------------------------------------------------------------------------

loc_6ED866F7:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	eax, [ebp+arg_0] ; jumptable 6ED83D3C case 235
		or	byte ptr [eax+180h], 20h
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+arg_0]
		mov	eax, [edx+1Ch]
		mov	ecx, [ebx+20h]
		lea	edx, [eax+1]
		cmp	edx, ecx
		jl	loc_6ED8857D
		add	eax, 2
		lea	edx, [ecx+ecx]
		cmp	eax, edx
		jge	short loc_6ED86724
		mov	eax, edx

loc_6ED86724:				; CODE XREF: sub_6ED83560+31C0j
		mov	esi, [ebp+arg_0]
		mov	[esi+20h], eax
		imul	eax, 38h
		mov	[esp+4], eax
		mov	eax, [esi+18h]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_Z8qReallocPvj
		test	eax, eax
		mov	[esi+18h], eax
		jz	loc_6ED88E35
		mov	edx, [esi+1Ch]
		add	edx, 1

loc_6ED86758:				; CODE XREF: sub_6ED83560+5020j
					; sub_6ED83560+58F1j
		mov	ecx, [ebp+arg_0]
		mov	[ecx+1Ch], edx
		imul	edx, 38h
		lea	edx, [eax+edx]
		mov	eax, [ecx+10h]
		mov	[ebp+var_374], edx
		mov	[edx+30h], eax
		mov	eax, [ecx+4]
		add	eax, 1
		mov	[edx+34h], eax
		mov	edx, [ecx+188h]
		add	edx, 1
		shl	edx, 4
		add	edx, [ecx+190h]
		mov	eax, [edx+8]
		test	eax, eax
		jz	loc_6ED87F26
		mov	ecx, [edx]
		sub	eax, 1
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_1F4], eax
		mov	[ebp+var_1F8], ecx
		add	edx, 198h
		mov	[ebp+var_1FC], edx

loc_6ED867B6:				; CODE XREF: sub_6ED83560+49E4j
		mov	ebx, [ebp+arg_0]
		lea	eax, [ebp+var_208]
		lea	edx, [ebp+var_1FC]
		mov	[esp+8], edx
		mov	[esp], eax
		mov	[esp+4], ebx
		mov	[ebp+var_2C8], 25h
		call	sub_6ED91C50
		mov	esi, [ebp+var_374]
		mov	eax, [ebp+var_204]
		push	edx
		mov	ecx, [ebp+var_200]
		mov	edx, [ebp+var_208]
		mov	[esi+1Ch], eax
		mov	[esi+20h], ecx
		mov	[esi+18h], edx
		mov	edi, [ebp+arg_0]
		mov	[ebx+100h], eax
		mov	eax, [ebx+188h]
		mov	[ebx+0FCh], edx
		mov	[ebx+104h], ecx
		add	eax, 1
		shl	eax, 4
		add	eax, [ebx+190h]
		add	ebx, 198h
		mov	ecx, [eax+8]
		mov	edx, [eax+4]
		sub	edx, ecx
		add	ecx, [eax]
		mov	[ebp+var_20C], edx
		lea	eax, [ebp+var_220]
		lea	edx, [ebp+var_214]
		mov	[ebp+var_408], ebx
		mov	[ebp+var_214], ebx
		mov	[ebp+var_210], ecx
		mov	[esp+8], edx
		mov	[esp+4], edi
		mov	[esp], eax
		mov	[ebp+var_2C8], 24h
		call	sub_6ED91C50
		mov	edx, [ebp+var_220]
		mov	ecx, [ebp+var_218]
		push	eax
		mov	eax, [ebp+var_21C]
		mov	[esi], edx
		mov	[esi+8], ecx
		mov	[esi+4], eax
		mov	[edi+124h], eax
		mov	eax, [edi+188h]
		mov	[edi+120h], edx
		mov	[edi+128h], ecx
		add	eax, 1
		shl	eax, 4
		add	eax, [edi+190h]
		mov	edx, [eax+4]
		mov	eax, [eax]
		mov	[ebp+var_22C], ebx
		mov	[esp+4], edi
		mov	[ebp+var_224], edx
		lea	edx, [ebp+var_22C]
		mov	[ebp+var_228], eax
		lea	eax, [ebp+var_238]
		mov	[esp+8], edx
		mov	[esp], eax
		mov	[ebp+var_2C8], 23h
		call	sub_6ED91C50
		mov	edx, [ebp+var_238]
		push	ecx
		mov	eax, [ebp+var_234]
		mov	ecx, [ebp+var_374]
		mov	[ecx+0Ch], edx
		mov	[ecx+10h], eax
		mov	ecx, [ebp+var_230]
		mov	ebx, [ebp+var_374]
		mov	[ebx+14h], ecx
		mov	esi, [ebp+arg_0]
		cmp	dword ptr [esi+104h], 0
		mov	[esi+114h], edx
		mov	[esi+118h], eax
		mov	[esi+11Ch], ecx
		jz	loc_6ED87AC4
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		add	eax, 0FCh
		mov	[esp], eax
		call	ds:_ZN9QXmlUtils8isNCNameERK10QStringRef
		test	al, al
		jnz	loc_6ED87AC4

loc_6ED8695F:				; CODE XREF: sub_6ED83560+4581j
		mov	edx, offset aInvalidXmlName ; "Invalid XML name."
		lea	eax, [ebp+var_A4]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	sub_6ED71920
		mov	ebx, [ebp+arg_0]
		lea	ecx, [ebp+var_A4]
		mov	[esp+4], ecx
		mov	[ebp+var_2C8], 22h
		mov	[esp], ebx
		call	sub_6ED71AE0
		lea	eax, [ebp+var_A4]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	sub_6ED94560
		mov	edi, [ebp+arg_0]
		mov	eax, [edi+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED869BE:				; CODE XREF: sub_6ED83560+7DCj
					; DATA XREF: .rdata:off_6EDA2490o
		mov	ebx, [ebp+arg_0] ; jumptable 6ED83D3C case 239
		movzx	eax, byte ptr [ebx+180h]
		test	al, al
		js	loc_6ED87A7C
		test	al, 8
		jnz	short loc_6ED869E1
		test	byte ptr [ebx+181h], 7
		jnz	loc_6ED87A7C

loc_6ED869E1:				; CODE XREF: sub_6ED83560+3472j
		mov	edx, offset aEntity1NotDecl ; "Entity '%1' not declared."
		lea	eax, [ebp+var_B0]
		mov	[ebp+var_1E], 20h
		lea	esi, [ebp+var_B0]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	sub_6ED71920
		lea	edx, [ebp+var_1E]
		mov	[esp+10h], edx
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_B4]
		mov	dword ptr [esp+0Ch], 0
		mov	[esp+4], esi
		mov	[esp], eax
		add	edx, 88h
		mov	[esp+8], edx
		mov	[ebp+var_2C8], 1Eh
		call	ds:_ZNK7QString3argERKS_iRK5QChar
		mov	edi, [ebp+arg_0]
		push	eax
		lea	eax, [ebp+var_B4]
		mov	[esp+4], eax
		mov	[esp], edi
		mov	[ebp+var_2C8], 1Dh
		call	sub_6ED71AE0
		lea	eax, [ebp+var_B4]
		mov	[esp], eax
		mov	[ebp+var_2C8], 1Eh
		call	sub_6ED94560
		lea	eax, [ebp+var_B0]
		jmp	loc_6ED846D1
; ---------------------------------------------------------------------------

loc_6ED86A83:				; CODE XREF: sub_6ED83560+1C9Cj
		mov	eax, ecx
		add	eax, 24h
		mov	[esp+4], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_3C], offset aXmlns_4 ;	"xmlns"
		mov	[esp], eax
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	[ebp+var_2D8]
		test	al, al
		jz	loc_6ED85202

loc_6ED86AB1:				; CODE XREF: sub_6ED83560+1C8Cj
		mov	eax, 1
		jmp	loc_6ED85204
; ---------------------------------------------------------------------------
		align 10h

loc_6ED86AC0:				; CODE XREF: sub_6ED83560+2DFj
		movsx	ecx, ds:word_6EDA3980[ecx+ecx]
		mov	[ebp+var_2DC], ecx
		jmp	loc_6ED83853
; ---------------------------------------------------------------------------

loc_6ED86AD3:				; CODE XREF: sub_6ED83560+860j
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_0]
		mov	eax, [edx+44h]
		add	dword ptr [edx+90h], 1
		adc	dword ptr [edx+94h], 0
		mov	edx, eax
		sar	edx, 1Fh
		add	eax, [ecx+0A0h]
		adc	edx, [ecx+0A4h]
		mov	[ecx+98h], eax
		mov	[ecx+9Ch], edx

loc_6ED86B07:				; CODE XREF: sub_6ED83560+850j
					; sub_6ED83560+3CC6j
		mov	ebx, [ebp+arg_0]
		mov	eax, 2
		movsx	edx, [ebp+var_2E4]
		mov	word ptr [ebx+1A8h], 2
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------

loc_6ED86B24:				; CODE XREF: sub_6ED83560+A56j
		mov	eax, [ebp+arg_0]
		mov	dword ptr [esp+4], 0
		mov	[ebp+var_2C8], 0FFFFFFFFh
		add	eax, 198h
		mov	[ebp+var_390], eax
		mov	[esp], eax
		call	ds:_ZN7QString6resizeEi
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+198h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED87315

loc_6ED86B61:				; CODE XREF: sub_6ED83560+3DC6j
		mov	ecx, [ebp+var_390]
		mov	dword ptr [esp+4], 100h
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], ecx
		call	ds:_ZN7QString7reallocEi
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx+198h]

loc_6ED86B8B:				; CODE XREF: sub_6ED83560+3DC0j
		or	byte ptr [eax+10h], 10h
		mov	esi, [ebp+arg_0]
		mov	eax, [esi+7Ch]
		jmp	loc_6ED835C9	; jumptable 6ED837B8 cases 0,1
; ---------------------------------------------------------------------------

loc_6ED86B9A:				; CODE XREF: sub_6ED83560+9C6j
		mov	esi, [ebp+arg_0]
		mov	dword ptr [esp+4], 0
		mov	[ebp+var_2C8], 0FFFFFFFFh
		add	esi, 198h
		mov	[ebp+var_388], esi
		mov	[esp], esi
		call	ds:_ZN7QString6resizeEi
		mov	edi, [ebp+arg_0]
		mov	eax, [edi+198h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED872FE

loc_6ED86BD8:				; CODE XREF: sub_6ED83560+3DB0j
		mov	dword ptr [esp+4], 100h
		mov	eax, [ebp+var_388]
		jmp	loc_6ED84317
; ---------------------------------------------------------------------------

loc_6ED86BEB:				; CODE XREF: sub_6ED83560+C7Cj
		mov	esi, [ebp+arg_0]
		cmp	byte ptr [esi+0ACh], 0
		jnz	loc_6ED835C6
		mov	edi, [ebp+arg_0]
		mov	dword ptr [esp+4], 0
		mov	[ebp+var_2C8], 0FFFFFFFFh
		add	edi, 198h
		mov	[ebp+var_404], edi
		mov	[esp], edi
		call	ds:_ZN7QString6resizeEi
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+198h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED87D9B

loc_6ED86C39:				; CODE XREF: sub_6ED83560+4848j
		mov	dword ptr [esp+4], 100h
		mov	ecx, [ebp+var_404]
		jmp	loc_6ED83EB8
; ---------------------------------------------------------------------------

loc_6ED86C4C:				; CODE XREF: sub_6ED83560+35Ej
		mov	eax, [ebx+0D8h]
		mov	[esp], edi
		mov	[ebp+var_2C8], 5
		mov	[esp+4], eax
		call	sub_6ED95090
		jmp	loc_6ED838C4
; ---------------------------------------------------------------------------

loc_6ED86C6D:				; CODE XREF: sub_6ED83560+C6Cj
		mov	eax, esi
		add	eax, 0A8h
		mov	dword ptr [esp+4], 0
		mov	[esp], eax
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	sub_6ED94890
		jmp	loc_6ED841D2
; ---------------------------------------------------------------------------

loc_6ED86C93:				; CODE XREF: sub_6ED83560+419j
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_354]
		mov	eax, [edx+0ECh]
		mov	[esp], ecx
		mov	[ebp+var_2C8], 4
		mov	[esp+4], eax
		call	sub_6ED94C90
		jmp	loc_6ED8397F
; ---------------------------------------------------------------------------

loc_6ED86CBD:				; CODE XREF: sub_6ED83560+1266j
		cmp	ax, 0Ah
		jz	short loc_6ED86CEA
		cmp	ax, 0Dh
		jnz	loc_6ED86F56
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED91A30
		test	eax, eax
		jz	loc_6ED847EF

loc_6ED86CEA:				; CODE XREF: sub_6ED83560+3761j
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+arg_0]
		add	dword ptr [edx+90h], 1
		adc	dword ptr [edx+94h], 0
		mov	edx, [edx+44h]
		mov	ecx, edx
		sar	ecx, 1Fh
		add	edx, [ebx+0A0h]
		adc	ecx, [ebx+0A4h]
		mov	[ebx+98h], edx
		mov	edx, eax
		mov	[ebx+9Ch], ecx

loc_6ED86D20:				; CODE XREF: sub_6ED83560+1250j
					; sub_6ED83560+1260j
		mov	esi, [ebp+var_36C]
		mov	[esp+4], dx
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], esi
		call	sub_6ED94660
		add	[ebp+var_320], 1
		jmp	loc_6ED84791
; ---------------------------------------------------------------------------

loc_6ED86D49:				; CODE XREF: sub_6ED83560+748j
		mov	ecx, [ebp+arg_0]
		mov	eax, 13h
		movsx	edx, [ebp+var_2E4]
		mov	word ptr [ecx+1A8h], 13h
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------

loc_6ED86D66:				; CODE XREF: sub_6ED83560+786j
		mov	ebx, [ebp+arg_0]
		mov	eax, 0Eh
		movsx	edx, [ebp+var_2E4]
		mov	word ptr [ebx+1A8h], 0Eh
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------

loc_6ED86D83:				; CODE XREF: sub_6ED83560+780j
		mov	ebx, [ebp+arg_0]
		mov	eax, 4
		movsx	edx, [ebp+var_2E4]
		mov	word ptr [ebx+1A8h], 4
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------

loc_6ED86DA0:				; CODE XREF: sub_6ED83560+770j
		mov	esi, [ebp+arg_0]
		mov	eax, 9
		movsx	edx, [ebp+var_2E4]
		mov	word ptr [esi+1A8h], 9
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------

loc_6ED86DBD:				; CODE XREF: sub_6ED83560+758j
		mov	ecx, [ebp+arg_0]
		mov	eax, 3
		movsx	edx, [ebp+var_2E4]
		mov	word ptr [ecx+1A8h], 3
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------

loc_6ED86DDA:				; CODE XREF: sub_6ED83560+82Bj
		mov	edi, [ebp+arg_0]
		mov	eax, 6
		movsx	edx, [ebp+var_2E4]
		mov	word ptr [edi+1A8h], 6
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------

loc_6ED86DF7:				; CODE XREF: sub_6ED83560+840j
		mov	ebx, [ebp+arg_0]
		cmp	ecx, 0Dh
		mov	eax, 2
		movsx	edx, [ebp+var_2E4]
		mov	word ptr [ebx+1A8h], 2
		jnz	loc_6ED8364F
		mov	[esp], ebx
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	sub_6ED91A30
		test	ax, ax
		mov	[ebx+1AAh], ax
		jz	loc_6ED83C1A
		mov	eax, [ebx+44h]
		mov	edi, [ebp+arg_0]
		add	dword ptr [ebx+90h], 1
		adc	dword ptr [ebx+94h], 0
		mov	edx, eax
		sar	edx, 1Fh
		add	eax, [edi+0A0h]
		adc	edx, [edi+0A4h]
		mov	[edi+98h], eax
		movsx	eax, word ptr [edi+1A8h]
		mov	[edi+9Ch], edx
		movsx	edx, [ebp+var_2E4]
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------
		align 10h

loc_6ED86E80:				; CODE XREF: sub_6ED83560+E90j
		mov	eax, [ebp+arg_0]
		movsx	edx, [ebp+var_2E4]
		mov	word ptr [eax+1A8h], 7
		mov	eax, 7
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------

loc_6ED86E9D:				; CODE XREF: sub_6ED83560+E87j
		mov	esi, [ebp+arg_0]
		mov	eax, 5
		movsx	edx, [ebp+var_2E4]
		mov	word ptr [esi+1A8h], 5
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------

loc_6ED86EBA:				; CODE XREF: sub_6ED83560+E77j
		mov	eax, [ebp+arg_0]
		movsx	edx, [ebp+var_2E4]
		mov	word ptr [eax+1A8h], 0Bh
		mov	eax, 0Bh
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------

loc_6ED86ED7:				; CODE XREF: sub_6ED83560+E50j
		mov	ebx, [ebp+arg_0]
		mov	eax, 14h
		movsx	edx, [ebp+var_2E4]
		mov	word ptr [ebx+1A8h], 14h
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------

loc_6ED86EF4:				; CODE XREF: sub_6ED83560+E4Aj
		mov	eax, [ebp+arg_0]
		movsx	edx, [ebp+var_2E4]
		mov	word ptr [eax+1A8h], 17h
		mov	eax, 17h
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------

loc_6ED86F11:				; CODE XREF: sub_6ED83560+E40j
		mov	ebx, [ebp+arg_0]
		mov	eax, 1Bh
		movsx	edx, [ebp+var_2E4]
		mov	word ptr [ebx+1A8h], 1Bh
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------

loc_6ED86F2E:				; CODE XREF: sub_6ED83560+1256j
		cmp	ax, 5Dh
		jz	loc_6ED87345
		ja	loc_6ED874AA
		cmp	ax, 26h
		jz	loc_6ED87481
		cmp	ax, 3Ch
		lea	esi, [esi+0]
		jz	loc_6ED87481

loc_6ED86F56:				; CODE XREF: sub_6ED83560+1270j
					; sub_6ED83560+3767j ...
		cmp	eax, 1Fh
		jbe	loc_6ED88E56
		mov	ecx, [ebp+arg_0]
		and	byte ptr [ecx+180h], 0FDh
		mov	ebx, [ebp+var_36C]
		mov	[esp+4], dx
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], ebx
		call	sub_6ED94660
		add	[ebp+var_320], 1
		jmp	loc_6ED84791
; ---------------------------------------------------------------------------

loc_6ED86F92:				; CODE XREF: sub_6ED83560+8CDj
		cmp	dword ptr [eax+4], 0FFh
		jg	loc_6ED83E5D
		nop
		jmp	loc_6ED83E33
; ---------------------------------------------------------------------------

loc_6ED86FA5:				; CODE XREF: sub_6ED83560+E33j
		cmp	cx, 3Ah
		lea	esi, [esi+0]
		jz	short loc_6ED86FD9
		cmp	cx, 3Bh
		jnz	loc_6ED83DCF
		mov	edx, [ebp+arg_0]
		mov	eax, 12h
		mov	word ptr [edx+1A8h], 12h
		movsx	edx, [ebp+var_2E4]
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------

loc_6ED86FD9:				; CODE XREF: sub_6ED83560+3A50j
		mov	eax, [ebp+arg_0]
		movsx	edx, [ebp+var_2E4]
		mov	word ptr [eax+1A8h], 11h
		mov	eax, 11h
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------

loc_6ED86FF6:				; CODE XREF: sub_6ED83560+944j
		cmp	dword ptr [eax+4], 0FFh
		jg	loc_6ED83ED4
		jmp	loc_6ED83EAA
; ---------------------------------------------------------------------------

loc_6ED87008:				; CODE XREF: sub_6ED83560+413Dj
		mov	edi, [ebp+arg_0]
		mov	eax, [edi+4Ch]
		cmp	eax, 0FFFFFFFFh
		jz	loc_6ED89B1A
		sub	eax, 1
		mov	[edi+4Ch], eax

loc_6ED8701D:				; CODE XREF: sub_6ED83560+29F6j
					; sub_6ED83560+4145j ...
		mov	ebx, [ebp+arg_0]
		mov	[ebp+var_37A], 0Ah
		mov	eax, [ebx+44h]
		add	dword ptr [ebx+90h], 1
		adc	dword ptr [ebx+94h], 0
		mov	edx, eax
		sar	edx, 1Fh
		add	eax, [ebx+0A0h]
		adc	edx, [ebx+0A4h]
		mov	[ebx+98h], eax
		mov	[ebx+9Ch], edx

loc_6ED87057:				; CODE XREF: sub_6ED83560+2A0Aj
					; sub_6ED83560+3FCEj
		mov	edi, [ebp+arg_0]
		mov	eax, [edi+198h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED87AEC
		mov	edx, [eax+8]

loc_6ED8706E:				; CODE XREF: sub_6ED83560+4598j
		add	edx, 1
		mov	[esp], edx
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	ds:_ZN7QString4growEi
		mov	[esp+4], eax
		mov	eax, [ebp+var_43C]
		mov	[esp], eax
		call	ds:_ZN7QString7reallocEi
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+198h]
		mov	edx, [eax+8]

loc_6ED870A3:				; CODE XREF: sub_6ED83560+4592j
		mov	ecx, [eax+0Ch]
		movzx	ebx, [ebp+var_37A]
		mov	[ecx+edx*2], bx
		add	edx, 1
		mov	[eax+8], edx
		mov	esi, [ebp+arg_0]
		mov	eax, [esi+198h]
		mov	edx, [eax+8]
		mov	eax, [eax+0Ch]
		add	[ebp+var_3DC], 1
		mov	word ptr [eax+edx*2], 0
		jmp	loc_6ED85F13
; ---------------------------------------------------------------------------

loc_6ED870D8:				; CODE XREF: sub_6ED83560+426Cj
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED91A30
		test	eax, eax
		jz	loc_6ED872CF

loc_6ED870F5:				; CODE XREF: sub_6ED83560+2500j
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+44h]
		add	dword ptr [ecx+90h], 1
		adc	dword ptr [ecx+94h], 0
		mov	edx, eax
		sar	edx, 1Fh
		add	eax, [ecx+0A0h]
		adc	edx, [ecx+0A4h]
		mov	[ecx+98h], eax
		mov	[ecx+9Ch], edx

loc_6ED87126:				; CODE XREF: sub_6ED83560+2520j
					; sub_6ED83560+4280j
		mov	esi, [ebp+arg_0]
		test	byte ptr [esi+180h], 20h
		jz	loc_6ED874E9
		mov	edi, [ebp+var_3EC]
		mov	word ptr [esp+4], 20h
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], edi
		call	sub_6ED94660
		jmp	loc_6ED85AAA
; ---------------------------------------------------------------------------

loc_6ED8715A:				; CODE XREF: sub_6ED83560+E7Dj
		cmp	cx, 2Ah
		jz	short loc_6ED8717F
		jbe	short loc_6ED8719C
		mov	esi, [ebp+arg_0]
		mov	eax, 15h
		movsx	edx, [ebp+var_2E4]
		mov	word ptr [esi+1A8h], 15h
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------

loc_6ED8717F:				; CODE XREF: sub_6ED83560+3BFEj
		mov	edi, [ebp+arg_0]
		mov	eax, 16h
		movsx	edx, [ebp+var_2E4]
		mov	word ptr [edi+1A8h], 16h
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------

loc_6ED8719C:				; CODE XREF: sub_6ED83560+3C00j
		mov	edx, [ebp+arg_0]
		mov	eax, 0Ch
		mov	word ptr [edx+1A8h], 0Ch
		movsx	edx, [ebp+var_2E4]
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------

loc_6ED871B9:				; CODE XREF: sub_6ED83560+776j
		cmp	cx, 7Ch
		jz	short loc_6ED871F3
		ja	loc_6ED8765E
		cmp	cx, 5Dh
		lea	esi, [esi+0]
		jnz	loc_6ED83DCF
		mov	edi, [ebp+arg_0]
		mov	eax, 0Ah
		movsx	edx, [ebp+var_2E4]
		mov	word ptr [edi+1A8h], 0Ah
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------

loc_6ED871F3:				; CODE XREF: sub_6ED83560+3C5Dj
		mov	ecx, [ebp+arg_0]
		mov	eax, 0Dh
		movsx	edx, [ebp+var_2E4]
		mov	word ptr [ecx+1A8h], 0Dh
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------

loc_6ED87210:				; CODE XREF: sub_6ED83560+846j
		cmp	cx, 21h
		jz	short loc_6ED87230
		ja	short loc_6ED8724D
		cmp	cx, 20h
		lea	esi, [esi+0]
		jnz	loc_6ED83DCF
		jmp	loc_6ED86B07
; ---------------------------------------------------------------------------
		align 10h

loc_6ED87230:				; CODE XREF: sub_6ED83560+3CB4j
		mov	ecx, [ebp+arg_0]
		mov	eax, 19h
		movsx	edx, [ebp+var_2E4]
		mov	word ptr [ecx+1A8h], 19h
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------

loc_6ED8724D:				; CODE XREF: sub_6ED83560+3CB6j
		mov	edx, [ebp+arg_0]
		mov	eax, 8
		mov	word ptr [edx+1A8h], 8
		movsx	edx, [ebp+var_2E4]
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------

loc_6ED8726A:				; CODE XREF: sub_6ED83560+872j
		mov	edi, [ebp+arg_0]
		mov	eax, 1Ah
		movsx	edx, [ebp+var_2E4]
		mov	word ptr [edi+1A8h], 1Ah
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------

loc_6ED87287:				; CODE XREF: sub_6ED83560+24F5j
		cmp	[ebp+var_35A], 3Ch
		jz	short loc_6ED872AB
		ja	loc_6ED876E6
		movzx	edx, [ebp+var_35A]
		sub	edx, 26h
		cmp	dx, 1
		ja	loc_6ED85A86

loc_6ED872AB:				; CODE XREF: sub_6ED83560+24EFj
					; sub_6ED83560+3D2Fj
		test	eax, 0FF0000h
		jnz	loc_6ED85A86
		mov	ecx, [ebp+arg_0]
		mov	[esp+4], eax
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED91B80

loc_6ED872CF:				; CODE XREF: sub_6ED83560+24DEj
					; sub_6ED83560+3B8Fj ...
		mov	eax, [ebp+var_460]
		mov	edx, [ebp+var_3B4]
		add	eax, [ebp+var_414]
		mov	[edx+4], eax
		mov	ecx, [ebp+arg_0]
		cmp	byte ptr [ecx+78h], 0
		jz	loc_6ED84821
		mov	dword ptr [esp+4], 0AEh
		jmp	loc_6ED84F0A
; ---------------------------------------------------------------------------

loc_6ED872FE:				; CODE XREF: sub_6ED83560+3672j
		cmp	dword ptr [eax+4], 0FFh
		jg	loc_6ED84333
		nop
		lea	esi, [esi+0]
		jmp	loc_6ED86BD8
; ---------------------------------------------------------------------------

loc_6ED87315:				; CODE XREF: sub_6ED83560+35FBj
		cmp	dword ptr [eax+4], 0FFh
		lea	esi, [esi+0]
		jg	loc_6ED86B8B
		jmp	loc_6ED86B61
; ---------------------------------------------------------------------------

loc_6ED8732B:				; CODE XREF: sub_6ED83560+DA3j
		cmp	dword ptr [eax+4], 0FFh
		jg	loc_6ED84333
		nop
		lea	esi, [esi+0]
		jmp	loc_6ED84309
; ---------------------------------------------------------------------------

loc_6ED87345:				; CODE XREF: sub_6ED83560+39D2j
		mov	edi, [ebp+arg_0]
		mov	eax, [edi+198h]
		and	byte ptr [edi+180h], 0FDh
		mov	eax, [eax+8]
		mov	word ptr [esp+4], 5Dh
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[ebp+var_418], eax
		mov	eax, [ebp+var_36C]
		mov	[esp], eax
		call	sub_6ED94660
		add	[ebp+var_320], 1
		jmp	loc_6ED87425
; ---------------------------------------------------------------------------

loc_6ED87389:				; CODE XREF: sub_6ED83560+3ECEj
		cmp	byte ptr [edi+78h], 0
		jnz	loc_6ED89AD9
		lea	edx, ds:0[eax*4]
		sub	eax, 1
		add	edx, [edi+48h]
		mov	[edi+4Ch], eax
		mov	eax, [edx]

loc_6ED873A5:				; CODE XREF: sub_6ED83560+3EF2j
					; sub_6ED83560+3F1Cj
		cmp	eax, 5Dh
		jnz	loc_6ED89A44
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+198h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED87457
		mov	edx, [eax+8]

loc_6ED873C5:				; CODE XREF: sub_6ED83560+3EFFj
		add	edx, 1
		mov	[esp], edx
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	ds:_ZN7QString4growEi
		mov	ecx, [ebp+var_36C]
		mov	[esp], ecx
		mov	[esp+4], eax
		call	ds:_ZN7QString7reallocEi
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx+198h]
		mov	edx, [eax+8]

loc_6ED873FA:				; CODE XREF: sub_6ED83560+3EFDj
		mov	ecx, [eax+0Ch]
		mov	word ptr [ecx+edx*2], 5Dh
		add	edx, 1
		mov	[eax+8], edx
		mov	esi, [ebp+arg_0]
		mov	eax, [esi+198h]
		mov	edx, [eax+8]
		mov	eax, [eax+0Ch]
		add	[ebp+var_320], 1
		mov	word ptr [eax+edx*2], 0

loc_6ED87425:				; CODE XREF: sub_6ED83560+3E24j
		mov	edi, [ebp+arg_0]
		mov	eax, [edi+4Ch]
		cmp	eax, 0FFFFFFFFh
		jnz	loc_6ED87389
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+44h]
		mov	edx, [edx+40h]
		cmp	eax, [edx+8]
		jge	short loc_6ED87464
		mov	ebx, [ebp+arg_0]
		lea	ecx, [eax+1]
		mov	edx, [edx+0Ch]
		mov	[ebx+44h], ecx
		movzx	eax, word ptr [edx+eax*2]
		jmp	loc_6ED873A5
; ---------------------------------------------------------------------------

loc_6ED87457:				; CODE XREF: sub_6ED83560+3E5Cj
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jl	short loc_6ED873FA
		jmp	loc_6ED873C5
; ---------------------------------------------------------------------------

loc_6ED87464:				; CODE XREF: sub_6ED83560+3EE0j
		mov	esi, [ebp+arg_0]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], esi
		call	sub_6ED81C20
		movzx	eax, ax
		jmp	loc_6ED873A5
; ---------------------------------------------------------------------------

loc_6ED87481:				; CODE XREF: sub_6ED83560+39E2j
					; sub_6ED83560+39F0j
		test	eax, 0FF0000h
		jnz	loc_6ED86F56
		mov	edi, [ebp+arg_0]
		mov	[esp+4], eax
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], edi
		call	sub_6ED91B80
		jmp	loc_6ED847EF
; ---------------------------------------------------------------------------

loc_6ED874AA:				; CODE XREF: sub_6ED83560+39D8j
		cmp	ax, 0FFFEh
		jb	loc_6ED86F56
		jmp	loc_6ED847D6
; ---------------------------------------------------------------------------

loc_6ED874B9:				; CODE XREF: sub_6ED83560+B4Dj
		mov	eax, [ebp+var_100]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_2F5], 0
		jmp	loc_6ED83B55
; ---------------------------------------------------------------------------

loc_6ED874DE:				; CODE XREF: sub_6ED83560+12ABj
					; sub_6ED83560+14C0j
		mov	eax, [eax+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED874E9:				; CODE XREF: sub_6ED83560+3BD0j
		movzx	eax, [ebp+var_35A]
		mov	edx, [ebp+var_3EC]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp+4], ax
		mov	[esp], edx
		call	sub_6ED94660
		jmp	loc_6ED85AAA
; ---------------------------------------------------------------------------

loc_6ED87512:				; CODE XREF: sub_6ED83560+29FCj
		cmp	[ebp+var_37A], 0Dh
		jz	loc_6ED87685
		cmp	[ebp+var_37A], 20h
		jnz	loc_6ED85F70
		jmp	loc_6ED87057
; ---------------------------------------------------------------------------

loc_6ED87533:				; CODE XREF: sub_6ED83560+29BCj
		mov	edi, [ebp+arg_0]
		mov	edx, [edi+40h]
		mov	eax, [edi+44h]
		cmp	eax, [edx+8]
		jge	loc_6ED88098
		mov	edx, [edx+0Ch]
		lea	ecx, [eax+1]
		mov	[edi+44h], ecx
		movzx	eax, word ptr [edx+eax*2]
		jmp	loc_6ED85F3E
; ---------------------------------------------------------------------------

loc_6ED87557:				; CODE XREF: sub_6ED83560+4CC9j
		lea	eax, [ebp+var_DC]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0Eh
		call	sub_6ED94560

loc_6ED8756F:				; CODE XREF: sub_6ED83560+4C8Ej
		mov	edi, [ebp+arg_0]
		movzx	eax, byte ptr [edi+180h]
		test	al, al
		js	loc_6ED8763E
		test	al, 8
		jnz	short loc_6ED87592
		test	byte ptr [edi+181h], 7
		jnz	loc_6ED8763E

loc_6ED87592:				; CODE XREF: sub_6ED83560+4023j
		lea	eax, [ebp+var_E0]
		mov	edx, offset aEntity1NotDecl ; "Entity '%1' not declared."
		mov	[ebp+var_26], 20h
		mov	[ebp+var_2C8], 0Eh
		call	sub_6ED71920
		lea	edx, [ebp+var_26]
		mov	[esp+10h], edx
		lea	edx, [ebp+var_D0]
		lea	eax, [ebp+var_E4]
		mov	[esp+8], edx
		lea	edx, [ebp+var_E0]
		mov	dword ptr [esp+0Ch], 0
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_2C8], 0Ah
		call	ds:_ZNK7QString3argERKS_iRK5QChar
		lea	eax, [ebp+var_E4]
		push	edx
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_2C8], 9
		mov	[esp], eax
		call	sub_6ED71AE0
		lea	eax, [ebp+var_E4]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0Ah
		call	sub_6ED94560
		lea	eax, [ebp+var_E0]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0Eh
		call	sub_6ED94560

loc_6ED8763E:				; CODE XREF: sub_6ED83560+401Bj
					; sub_6ED83560+402Cj
		lea	eax, [ebp+var_D0]

loc_6ED87644:				; CODE XREF: sub_6ED83560+587Dj
		mov	[esp], eax
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	sub_6ED94560

loc_6ED87656:				; CODE XREF: sub_6ED83560+18EFj
					; sub_6ED83560+5471j
		mov	ebx, [ebp+arg_0]
		jmp	loc_6ED849F1
; ---------------------------------------------------------------------------

loc_6ED8765E:				; CODE XREF: sub_6ED83560+3C5Fj
		cmp	cx, 0FFFEh
		jb	loc_6ED83DCF
		mov	ecx, [ebp+arg_0]
		mov	eax, 2Bh
		movsx	edx, [ebp+var_2E4]
		mov	word ptr [ecx+1A8h], 2Bh
		jmp	loc_6ED8364F
; ---------------------------------------------------------------------------

loc_6ED87685:				; CODE XREF: sub_6ED83560+3FBAj
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+4Ch]
		cmp	eax, 0FFFFFFFFh
		jz	loc_6ED88468
		mov	edx, [ecx+48h]
		mov	eax, [edx+eax*4]

loc_6ED8769A:				; CODE XREF: sub_6ED83560+4F21j
					; sub_6ED83560+526Dj
		cmp	eax, 0Ah
		jz	loc_6ED87008
		test	eax, eax
		jnz	loc_6ED8701D

loc_6ED876AB:				; CODE XREF: sub_6ED83560+5263j
		mov	eax, [ebp+arg_0]
		mov	dword ptr [esp+4], 1
		mov	[ebp+var_2C8], 0FFFFFFFFh
		add	eax, 48h
		mov	[esp], eax
		call	sub_6ED91240
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+4Ch]
		mov	edx, [ecx+48h]
		add	eax, 1
		mov	[ecx+4Ch], eax
		mov	dword ptr [edx+eax*4], 0Dh
		jmp	loc_6ED85FE2
; ---------------------------------------------------------------------------

loc_6ED876E6:				; CODE XREF: sub_6ED83560+3D31j
		cmp	[ebp+var_35A], 0FFFEh
		jb	loc_6ED85A86

loc_6ED876F4:				; CODE XREF: sub_6ED83560+2510j
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED91B80
		jmp	loc_6ED872CF
; ---------------------------------------------------------------------------

loc_6ED87712:				; CODE XREF: sub_6ED83560+17D0j
					; sub_6ED83560+17DDj
		mov	edi, [ebp+arg_0]
		mov	ebx, [ebp+arg_0]
		mov	esi, [ebp+arg_0]
		mov	eax, [edi+188h]
		mov	ebx, [ebx+0E4h]
		mov	esi, [esi+0E0h]
		add	eax, 2
		shl	eax, 4
		add	eax, [edi+190h]
		add	edi, 198h
		shl	ebx, 6
		add	ebx, esi
		mov	[ebp+var_370], ebx
		mov	ecx, [eax+8]
		mov	edx, [eax+4]
		sub	edx, ecx
		add	ecx, [eax]
		mov	eax, ebx
		add	eax, 18h
		mov	[ebp+var_424], edi
		mov	[ebx+18h], edi
		mov	[ebx+1Ch], ecx
		mov	[ebx+20h], edx
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_2C8], 3Eh
		mov	[esp], eax
		call	sub_6ED77250
		mov	ebx, [ebp+arg_0]
		mov	edi, [ebp+var_424]
		mov	esi, [ebp+var_370]
		mov	eax, [ebx+188h]
		add	eax, 4
		shl	eax, 4
		add	eax, [ebx+190h]
		mov	ecx, [eax+8]
		mov	edx, [eax+4]
		sub	edx, ecx
		add	ecx, [eax]
		mov	[esi+24h], edi
		mov	[esi+2Ch], edx
		mov	[esi+28h], ecx
		mov	byte ptr [esi+3Dh], 1
		mov	eax, [ebx+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED877C4:				; CODE XREF: sub_6ED83560+2506j
		cmp	[ebp+var_35A], 0Dh
		jz	loc_6ED870D8
		cmp	[ebp+var_35A], 20h
		jnz	loc_6ED85A86
		jmp	loc_6ED87126
; ---------------------------------------------------------------------------

loc_6ED877E5:				; CODE XREF: sub_6ED83560+111Fj
		mov	eax, [ebp+arg_0]
		add	eax, 54h
		mov	[ebp+var_378], eax
		jmp	loc_6ED84691
; ---------------------------------------------------------------------------

loc_6ED877F6:				; CODE XREF: sub_6ED83560+178Dj
					; sub_6ED83560+1797j
		mov	edx, [ebp+arg_0]
		mov	ecx, [edx+188h]
		mov	eax, [edx+0E4h]
		add	ecx, 2
		shl	ecx, 4
		add	ecx, [edx+190h]
		shl	eax, 6
		add	eax, [edx+0E0h]
		mov	ebx, [ecx+8]
		mov	edx, [ecx+4]
		sub	edx, ebx
		add	ebx, [ecx]
		mov	ecx, [ebp+arg_0]
		mov	[eax+2Ch], edx
		mov	[eax+28h], ebx
		mov	byte ptr [eax+3Dh], 1
		add	ecx, 198h
		mov	[eax+24h], ecx
		mov	ecx, [ebp+arg_0]
		jmp	loc_6ED84821
; ---------------------------------------------------------------------------

loc_6ED87842:				; CODE XREF: sub_6ED83560+1391j
					; sub_6ED83560+139Ej
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+0D0h]
		mov	ebx, ecx
		mov	ecx, [ecx+0D4h]
		lea	edx, [eax+1]
		cmp	edx, ecx
		jge	loc_6ED880F5
		mov	eax, [ebx+0CCh]

loc_6ED87864:				; CODE XREF: sub_6ED83560+4BE3j
					; sub_6ED83560+5936j
		mov	edi, [ebp+arg_0]
		mov	ecx, [edi+188h]
		mov	[edi+0D0h], edx
		imul	edx, 24h
		add	ecx, 2
		shl	ecx, 4
		add	eax, edx
		add	ecx, [edi+190h]
		mov	ebx, [ecx+8]
		mov	edx, [ecx+4]
		sub	edx, ebx
		add	ebx, [ecx]
		mov	ecx, edi
		add	ecx, 198h
		mov	[eax], ecx
		mov	[eax+4], ebx
		mov	[eax+8], edx
		mov	eax, [edi+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED878A9:				; CODE XREF: sub_6ED83560+1707j
					; sub_6ED83560+1711j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		add	eax, 0E0h
		mov	[esp], eax
		call	sub_6ED91160
		mov	dword ptr [eax], 0
		mov	dword ptr [eax+8], 0
		mov	dword ptr [eax+4], 0
		mov	byte ptr [eax+3Ch], 0
		mov	dword ptr [eax+0Ch], 0
		mov	dword ptr [eax+14h], 0
		mov	dword ptr [eax+10h], 0
		mov	dword ptr [eax+18h], 0
		mov	dword ptr [eax+20h], 0
		mov	dword ptr [eax+1Ch], 0
		mov	dword ptr [eax+24h], 0
		mov	dword ptr [eax+2Ch], 0
		mov	dword ptr [eax+28h], 0
		mov	dword ptr [eax+30h], 0
		mov	dword ptr [eax+38h], 0
		mov	dword ptr [eax+34h], 0
		mov	byte ptr [eax+3Dh], 0
		mov	edi, [ebp+arg_0]
		mov	ecx, [edi+188h]
		add	ecx, 4
		shl	ecx, 4
		add	ecx, [edi+190h]
		mov	ebx, [ecx+8]
		mov	edx, [ecx+4]
		sub	edx, ebx
		add	ebx, [ecx]
		mov	ecx, edi
		add	ecx, 198h
		mov	[eax], ecx
		mov	[eax+4], ebx
		mov	[eax+8], edx
		mov	byte ptr [eax+3Ch], 1
		mov	eax, [edi+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED87971:				; CODE XREF: sub_6ED83560+174Aj
					; sub_6ED83560+1754j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		add	eax, 0E0h
		mov	[esp], eax
		call	sub_6ED91160
		mov	dword ptr [eax], 0
		mov	dword ptr [eax+8], 0
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax+0Ch], 0
		mov	dword ptr [eax+14h], 0
		mov	dword ptr [eax+10h], 0
		mov	dword ptr [eax+18h], 0
		mov	dword ptr [eax+20h], 0
		mov	dword ptr [eax+1Ch], 0
		mov	dword ptr [eax+24h], 0
		mov	dword ptr [eax+2Ch], 0
		mov	dword ptr [eax+28h], 0
		mov	dword ptr [eax+30h], 0
		mov	dword ptr [eax+38h], 0
		mov	dword ptr [eax+34h], 0
		mov	byte ptr [eax+3Dh], 0
		mov	byte ptr [eax+3Ch], 0
		mov	ebx, [ebp+arg_0]
		mov	ecx, [ebx+188h]
		add	ecx, 2
		shl	ecx, 4
		add	ecx, [ebx+190h]
		mov	ebx, [ecx+8]
		mov	edx, [ecx+4]
		sub	edx, ebx
		add	ebx, [ecx]
		mov	ecx, [ebp+arg_0]
		mov	[eax+8], edx
		mov	[eax+4], ebx
		add	ecx, 198h
		mov	[eax], ecx
		mov	esi, [ebp+arg_0]
		mov	eax, [esi+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED87A39:				; CODE XREF: sub_6ED83560+2E97j
					; sub_6ED83560+2EA4j
		mov	ecx, [ebp+arg_0]
		mov	esi, [ebp+arg_0]
		mov	ebx, [ecx+188h]
		lea	eax, [ebx+2]
		shl	eax, 4
		add	eax, [ecx+190h]
		mov	ecx, [eax+8]
		mov	edx, [eax+4]
		sub	edx, ecx
		add	ecx, [eax]
		mov	eax, [ebp+arg_0]
		mov	[esi+14Ch], edx
		mov	[esi+148h], ecx
		add	eax, 198h
		mov	[esi+144h], eax
		mov	eax, ebx
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED87A7C:				; CODE XREF: sub_6ED83560+346Aj
					; sub_6ED83560+347Bj
		mov	edi, [ebp+arg_0]
		cmp	dword ptr [edi+7Ch], 1
		jz	short loc_6ED87A8F
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [ecx+7Ch], 9

loc_6ED87A8F:				; CODE XREF: sub_6ED83560+4523j
		mov	eax, [ebp+arg_0]
		mov	ebx, [ebp+arg_0]
		add	eax, 88h
		mov	[ebx+120h], eax
		mov	eax, [ebx+88h]
		mov	dword ptr [ebx+124h], 0
		mov	eax, [eax+8]
		mov	[ebx+128h], eax
		mov	eax, [ebx+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED87AC4:				; CODE XREF: sub_6ED83560+33D6j
					; sub_6ED83560+33F9j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		add	eax, 120h
		mov	[esp], eax
		call	ds:_ZN9QXmlUtils8isNCNameERK10QStringRef
		test	al, al
		jz	loc_6ED8695F
		jmp	loc_6ED846E3
; ---------------------------------------------------------------------------

loc_6ED87AEC:				; CODE XREF: sub_6ED83560+3B05j
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jl	loc_6ED870A3
		jmp	loc_6ED8706E
; ---------------------------------------------------------------------------

loc_6ED87AFD:				; CODE XREF: sub_6ED83560+1F11j
		mov	eax, [ebx+198h]
		mov	esi, [ebp+var_364]
		mov	edi, [ebp+var_394]
		mov	eax, [eax+8]
		mov	[esp], ebx
		mov	[esp+4], edi
		sub	eax, esi
		mov	[ebp+var_3D8], eax
		mov	[esp+8], eax
		call	sub_6ED72C90
		mov	eax, [ebp+var_3D8]
		mov	[esp], edi
		mov	[esp+4], eax
		call	ds:_ZN7QString6resizeEi
		jmp	loc_6ED854E9
; ---------------------------------------------------------------------------

loc_6ED87B42:				; CODE XREF: sub_6ED83560+2873j
		cmp	[ebp+var_3BD], 0
		jz	short loc_6ED87B7C
		mov	edx, [ebp+var_350]
		test	edx, edx
		jz	short loc_6ED87B82
		mov	ecx, [ebp+arg_0]
		mov	esi, [ebp+var_350]
		mov	ebx, [ebp+var_3F8]
		mov	eax, [ecx+198h]
		mov	edx, [eax+0Ch]
		lea	eax, [esi+ebx-1]
		cmp	word ptr [edx+eax*2], 20h
		jz	loc_6ED88E0F

loc_6ED87B7C:				; CODE XREF: sub_6ED83560+45E9j
					; sub_6ED83560+58BDj ...
		mov	edx, [ebp+var_350]

loc_6ED87B82:				; CODE XREF: sub_6ED83560+280Fj
					; sub_6ED83560+45F3j
		mov	eax, [ebp+var_3F8]
		mov	edi, [ebp+var_338]
		mov	[edi+10h], eax
		mov	[edi+14h], edx

loc_6ED87B94:				; CODE XREF: sub_6ED83560+274Bj
					; sub_6ED83560+278Ej
		lea	eax, [ebp+var_19C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_8C]
		mov	[ebp+var_8C], offset aXmlns_4 ;	"xmlns"
		mov	[esp], eax
		mov	[ebp+var_2C8], 28h
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_6ED846E3
		mov	ecx, [ebp+arg_0]
		test	byte ptr [ecx+181h], 10h
		jz	loc_6ED84821
		mov	ebx, [ebp+arg_0]
		mov	[ebp+var_2C8], 28h
		mov	[esp], ebx
		call	sub_6ED911D0
		mov	esi, [ebp+var_338]
		mov	[ebp+var_3BC], eax
		mov	edi, [ebp+var_3B0]
		mov	edx, [esi+8]
		mov	eax, [esi+4]
		sub	eax, edx
		add	edx, [esi]
		mov	[ebp+var_1C4], eax
		mov	[ebp+var_1CC], edi
		mov	[ebp+var_1C8], edx
		mov	edx, [esi+18h]
		mov	eax, [esi+14h]
		sub	eax, edx
		add	edx, [esi+10h]
		mov	[ebp+var_1D0], eax
		lea	eax, [ebp+var_1CC]
		mov	[ebp+var_1D8], edi
		mov	[ebp+var_1D4], edx
		sub	dword ptr [ebx+1A0h], 1
		mov	[esp+4], eax
		lea	eax, [ebp+var_90]
		mov	[ebp+var_90], offset aXml_2 ; "xml"
		mov	[esp], eax
		mov	[ebp+var_2C8], 27h
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		mov	[ebp+var_445], al
		lea	eax, [ebp+var_1D8]
		mov	[esp+4], eax
		lea	eax, [ebp+var_94]
		mov	[ebp+var_94], offset aHttpWww_w3_o_1 ; "http://www.w3.org/XML/1998/namespace"
		mov	[esp], eax
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		cmp	[ebp+var_445], al
		jz	loc_6ED899B5

loc_6ED87CA2:				; CODE XREF: sub_6ED83560+647Aj
					; sub_6ED83560+6487j ...
		lea	eax, [ebp+var_A0]
		mov	edx, offset aIllegalNamespa ; "Illegal namespace declaration."
		mov	[ebp+var_2C8], 27h
		call	sub_6ED71920
		lea	eax, [ebp+var_A0]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_2C8], 26h
		mov	[esp], eax
		call	sub_6ED71AE0
		lea	eax, [ebp+var_A0]
		mov	[esp], eax
		mov	[ebp+var_2C8], 27h
		call	sub_6ED94560

loc_6ED87CF3:				; CODE XREF: sub_6ED83560+64B2j
		lea	edx, [ebp+var_1CC]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_1E4]
		mov	[esp], eax
		mov	[ebp+var_2C8], 27h
		mov	[esp+4], edx
		call	sub_6ED91C50
		mov	ecx, [ebp+var_3BC]
		lea	edx, [ebp+var_1D8]
		mov	eax, [ebp+var_1E4]
		push	ebx
		mov	[ecx], eax
		mov	eax, [ebp+var_1E0]
		mov	[ecx+4], eax
		mov	eax, [ebp+var_1DC]
		mov	[ecx+8], eax
		mov	ebx, [ebp+arg_0]
		lea	eax, [ebp+var_1F0]
		mov	[esp+8], edx
		mov	[esp], eax
		mov	[esp+4], ebx
		call	sub_6ED91C50
		mov	esi, [ebp+var_3BC]
		mov	eax, [ebp+var_1F0]
		push	ecx
		mov	[esi+0Ch], eax
		mov	eax, [ebp+var_1EC]
		mov	[esi+10h], eax
		mov	eax, [ebp+var_1E8]
		mov	[esi+14h], eax
		mov	eax, [ebx+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED87D89:				; CODE XREF: sub_6ED83560+1097j
		sub	dword ptr [edi+0E4h], 1
		mov	eax, [edi+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED87D9B:				; CODE XREF: sub_6ED83560+36D3j
		cmp	dword ptr [eax+4], 0FFh
		jg	loc_6ED83ED4
		jmp	loc_6ED86C39
; ---------------------------------------------------------------------------

loc_6ED87DAD:				; CODE XREF: sub_6ED83560+2614j
		mov	[ebp+var_19C], 0
		mov	[ebp+var_198], 0
		mov	[ebp+var_194], 0

loc_6ED87DCB:				; CODE XREF: sub_6ED83560+263Cj
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_7C], offset aXmlns_4 ;	"xmlns"
		mov	ebx, [ebp+arg_0]
		mov	eax, [ecx+188h]
		add	ebx, 198h
		shl	eax, 4
		add	eax, [ecx+190h]
		mov	ecx, [eax+8]
		mov	edx, [eax+4]
		sub	edx, ecx
		add	ecx, [eax]
		lea	eax, [ebp+var_1A8]
		mov	[esp+4], eax
		lea	eax, [ebp+var_7C]
		mov	[ebp+var_40C], ebx
		mov	[ebp+var_1A8], ebx
		mov	[ebp+var_1A4], ecx
		mov	[ebp+var_1A0], edx
		mov	[esp], eax
		mov	[ebp+var_2C8], 2Bh
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_6ED85BA2
		mov	esi, [ebp+arg_0]
		test	byte ptr [esi+181h], 10h
		jz	loc_6ED85BA2
		mov	[esp], esi
		mov	[ebp+var_2C8], 2Ch
		call	sub_6ED911D0
		mov	[ebp+var_3C4], eax
		mov	dword ptr [eax], 0
		mov	dword ptr [eax+8], 0
		mov	dword ptr [eax+4], 0
		mov	eax, [esi+188h]
		add	eax, 4
		shl	eax, 4
		add	eax, [esi+190h]
		mov	ecx, [eax+8]
		mov	edx, [eax+4]
		sub	edx, ecx
		add	ecx, [eax]
		lea	eax, [ebp+var_1C0]
		mov	[esp+4], eax
		lea	eax, [ebp+var_80]
		mov	[ebp+var_1C0], ebx
		mov	[ebp+var_1BC], ecx
		mov	[ebp+var_1B8], edx
		mov	[ebp+var_80], offset aHttpWww_w3_o_2 ; "http://www.w3.org/2000/xmlns/"
		mov	[esp], eax
		mov	[ebp+var_2C8], 2Ah
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_6ED8895B

loc_6ED87ED0:				; CODE XREF: sub_6ED83560+5420j
		lea	eax, [ebp+var_88]
		mov	edx, offset aIllegalNamespa ; "Illegal namespace declaration."
		mov	[ebp+var_2C8], 2Ah
		call	sub_6ED71920
		mov	edi, [ebp+arg_0]
		lea	eax, [ebp+var_88]
		mov	[esp+4], eax
		mov	[ebp+var_2C8], 29h
		mov	[esp], edi
		call	sub_6ED71AE0
		lea	eax, [ebp+var_88]
		mov	[esp], eax
		mov	[ebp+var_2C8], 2Ah
		call	sub_6ED94560
		jmp	loc_6ED846E3
; ---------------------------------------------------------------------------

loc_6ED87F26:				; CODE XREF: sub_6ED83560+3230j
		mov	[ebp+var_1FC], 0
		mov	[ebp+var_1F8], 0
		mov	[ebp+var_1F4], 0
		jmp	loc_6ED867B6
; ---------------------------------------------------------------------------

loc_6ED87F49:				; CODE XREF: sub_6ED83560+1AFFj
		mov	[ebp+var_124], 0
		mov	[ebp+var_120], 0
		mov	[ebp+var_11C], 0
		jmp	loc_6ED85084
; ---------------------------------------------------------------------------

loc_6ED87F6C:				; CODE XREF: sub_6ED83560+1AACj
		add	eax, 2
		lea	edx, [ecx+ecx]
		cmp	eax, edx
		jge	short loc_6ED87F78
		mov	eax, edx

loc_6ED87F78:				; CODE XREF: sub_6ED83560+4A14j
		mov	edi, [ebp+arg_0]
		mov	[edi+0C8h], eax
		shl	eax, 6
		mov	[esp+4], eax
		mov	eax, [edi+0C0h]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_Z8qReallocPvj
		test	eax, eax
		mov	[edi+0C0h], eax
		jz	loc_6ED8982D
		mov	edx, [edi+0C4h]
		add	edx, 1
		jmp	loc_6ED85018
; ---------------------------------------------------------------------------

loc_6ED87FBD:				; CODE XREF: sub_6ED83560+1A5Cj
		mov	eax, [edi+198h]
		mov	edx, [ebp+var_46C]
		mov	[edi+138h], ebx
		mov	eax, [eax+8]
		add	edx, esi
		mov	[edi+13Ch], edx
		sub	eax, 2
		sub	eax, edx
		mov	[edi+140h], eax
		mov	eax, edi
		add	eax, 12Ch
		mov	[esp+4], eax
		lea	eax, [ebp+var_DC]
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		lea	eax, [ebp+var_50]
		lea	edx, [ebp+var_DC]
		mov	[ebp+var_50], offset aXml_2 ; "xml"
		mov	[ebp+var_2C8], 3Ah
		push	ebx
		mov	dword ptr [esp+8], 0
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZNK7QString7compareERK13QLatin1StringN2Qt15CaseSensitivityE
		test	eax, eax
		jnz	loc_6ED88C05
		lea	eax, [ebp+var_54]
		mov	edx, offset aXmlDeclaration ; "XML declaration not at start of documen"...
		call	sub_6ED71920
		lea	eax, [ebp+var_54]
		mov	[esp+4], eax
		mov	[esp], edi
		mov	[ebp+var_2C8], 39h
		call	sub_6ED71AE0
		lea	eax, [ebp+var_54]
		mov	[esp], eax
		mov	[ebp+var_2C8], 3Ah
		call	sub_6ED94560

loc_6ED88072:				; CODE XREF: sub_6ED83560+56E5j
					; sub_6ED83560+5785j
		lea	eax, [ebp+var_DC]

loc_6ED88078:				; CODE XREF: sub_6ED83560+4B93j
		mov	[esp], eax
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	sub_6ED94560
		mov	esi, [ebp+arg_0]
		mov	eax, [esi+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED88098:				; CODE XREF: sub_6ED83560+3FDFj
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED81C20
		movzx	eax, ax
		jmp	loc_6ED85F3E
; ---------------------------------------------------------------------------

loc_6ED880B5:				; CODE XREF: sub_6ED83560+2A2Ej
		mov	eax, [ebx+48h]
		jmp	loc_6ED85FD3
; ---------------------------------------------------------------------------

loc_6ED880BD:				; CODE XREF: sub_6ED83560+148Bj
		mov	edx, offset aInvalidProcess ; "Invalid processing instruction name."
		lea	eax, [ebp+var_68]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	sub_6ED71920
		mov	ecx, [ebp+arg_0]
		lea	edx, [ebp+var_68]
		mov	[esp+4], edx
		mov	[ebp+var_2C8], 35h
		mov	[esp], ecx
		call	sub_6ED71AE0
		lea	eax, [ebp+var_68]
		jmp	short loc_6ED88078
; ---------------------------------------------------------------------------

loc_6ED880F5:				; CODE XREF: sub_6ED83560+42F8j
		add	eax, 2
		add	ecx, ecx
		cmp	eax, ecx
		jge	short loc_6ED88100
		mov	eax, ecx

loc_6ED88100:				; CODE XREF: sub_6ED83560+4B9Cj
		mov	ecx, [ebp+arg_0]
		mov	[ecx+0D4h], eax
		imul	eax, 24h
		mov	[esp+4], eax
		mov	eax, [ecx+0CCh]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_Z8qReallocPvj
		mov	ebx, [ebp+arg_0]
		test	eax, eax
		mov	[ebx+0CCh], eax
		jz	loc_6ED88E74
		mov	edx, [ebx+0D0h]
		add	edx, 1
		jmp	loc_6ED87864
; ---------------------------------------------------------------------------

loc_6ED88148:				; CODE XREF: sub_6ED83560+23A7j
		mov	edx, ds:_ZN7QString11shared_nullE
		cmp	[ebx], edx
		jz	loc_6ED8590D
		test	al, 8
		jz	loc_6ED88BC4

loc_6ED8815E:				; CODE XREF: sub_6ED83560+568Dj
		test	al, 4
		jz	loc_6ED88B7F
		mov	edx, [ebp+var_384]
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_2C8], 0Eh
		mov	[esp+4], edx
		mov	[esp], ecx
		call	sub_6ED72BF0

loc_6ED88185:				; CODE XREF: sub_6ED83560+5640j
					; sub_6ED83560+5652j
		mov	edi, [ebp+arg_0]
		mov	eax, [edi+188h]
		mov	edx, [edi+190h]
		add	eax, 1
		shl	eax, 4
		mov	eax, [eax+edx+4]
		mov	[ebp+var_2C8], 0Eh
		add	eax, 2
		mov	[esp+4], eax
		mov	eax, [ebp+var_3E4]
		mov	[esp], eax
		call	ds:_ZN7QString4chopEi
		mov	edx, [edi+198h]
		mov	eax, [edi+188h]
		mov	edx, [edx+8]
		shl	eax, 4
		add	eax, [edi+190h]
		mov	[eax], edx
		mov	dword ptr [eax+4], 0
		jmp	loc_6ED859B9
; ---------------------------------------------------------------------------

loc_6ED881E4:				; CODE XREF: sub_6ED83560+237Bj
		mov	edx, [ebp+arg_0]
		cmp	dword ptr [edx+1B0h], 0
		jz	loc_6ED8756F
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_DC]
		lea	edx, [ebp+var_D0]
		mov	[esp+8], edx
		mov	[esp], eax
		mov	[esp+4], ecx
		mov	[ebp+var_2C8], 0Eh
		call	sub_6ED70910
		mov	eax, ds:_ZN7QString11shared_nullE
		cmp	[ebp+var_DC], eax
		push	ecx
		jz	loc_6ED87557
		mov	ebx, [ebp+arg_0]
		lea	eax, [ebp+var_DC]
		mov	[esp+4], eax
		mov	[ebp+var_2C8], 0Bh
		mov	[esp], ebx
		call	sub_6ED72E30
		mov	eax, [ebx+188h]
		mov	edx, [ebx+190h]
		mov	esi, [ebp+var_3E4]
		add	eax, 1
		shl	eax, 4
		mov	eax, [eax+edx+4]
		mov	[esp], esi
		add	eax, 2
		mov	[esp+4], eax
		call	ds:_ZN7QString4chopEi
		mov	edx, [ebx+198h]
		mov	eax, [ebx+188h]
		mov	edx, [edx+8]
		shl	eax, 4
		add	eax, [ebx+190h]
		mov	[eax], edx
		mov	dword ptr [eax+4], 0
		lea	eax, [ebp+var_DC]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0Eh
		call	sub_6ED94560
		jmp	loc_6ED859B9
; ---------------------------------------------------------------------------

loc_6ED882B8:				; CODE XREF: sub_6ED83560+2EF5j
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 29h
		mov	dword ptr [esp+4], offset aAny_0 ; "ANY"
		mov	[esp], ebx
		call	sub_6ED82180
		test	al, al
		jnz	loc_6ED8645B
		cmp	byte ptr [ebx+78h], 0
		jz	loc_6ED8645B
		mov	dword ptr [esp+4], 25h
		mov	[esp], ebx
		call	sub_6ED78320
		mov	[ebp+var_2F5], 0
		jmp	loc_6ED83B55
; ---------------------------------------------------------------------------

loc_6ED88306:				; CODE XREF: sub_6ED83560+11D6j
		mov	edx, offset aExtraContentAt ; "Extra content at	end of document."
		lea	eax, [ebp+var_A8]
		lea	esi, [ebp+var_A8]
		call	sub_6ED71920
		mov	[esp+4], esi
		mov	[esp], ebx
		mov	[ebp+var_2C8], 21h
		call	sub_6ED71AE0
		lea	eax, [ebp+var_A8]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	sub_6ED94560
		jmp	loc_6ED8473C
; ---------------------------------------------------------------------------

loc_6ED8834F:				; CODE XREF: sub_6ED83560+2656j
		mov	eax, [edi+19Ch]
		jmp	loc_6ED85C0A
; ---------------------------------------------------------------------------

loc_6ED8835A:				; CODE XREF: sub_6ED83560+25E9j
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_1C], 20h
		mov	ebx, [ebp+var_410]
		mov	eax, [ecx+188h]
		shl	eax, 4
		add	eax, [ecx+190h]
		mov	ecx, [eax+8]
		mov	edx, [eax+4]
		sub	edx, ecx
		add	ecx, [eax]
		mov	[ebp+var_188], edx
		lea	eax, [ebp+var_74]
		lea	edx, [ebp+var_190]
		mov	[ebp+var_190], ebx
		mov	[ebp+var_18C], ecx
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_2C8], 30h
		call	ds:_ZNK10QStringRef8toStringEv
		lea	eax, [ebp+var_70]
		mov	edx, offset a1IsAnInvalidPu ; "%1 is an	invalid	PUBLIC identifier."
		push	edi
		mov	[ebp+var_2C8], 2Fh
		call	sub_6ED71920
		lea	edx, [ebp+var_1C]
		mov	[esp+10h], edx
		lea	edx, [ebp+var_74]
		lea	eax, [ebp+var_78]
		mov	[esp+8], edx
		lea	edx, [ebp+var_70]
		mov	dword ptr [esp+0Ch], 0
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_2C8], 2Eh
		call	ds:_ZNK7QString3argERKS_iRK5QChar
		push	esi
		mov	esi, [ebp+arg_0]
		lea	eax, [ebp+var_78]
		mov	[esp+4], eax
		mov	[ebp+var_2C8], 2Dh
		mov	[esp], esi
		call	sub_6ED71AE0
		lea	eax, [ebp+var_78]
		mov	[esp], eax
		mov	[ebp+var_2C8], 2Eh
		call	sub_6ED94560
		lea	eax, [ebp+var_70]
		mov	[esp], eax
		mov	[ebp+var_2C8], 2Fh
		call	sub_6ED94560
		lea	eax, [ebp+var_74]
		mov	[esp], eax
		mov	[ebp+var_2C8], 30h
		call	sub_6ED94560
		mov	dword ptr [esp+4], 0AFh
		jmp	loc_6ED84FD7
; ---------------------------------------------------------------------------

loc_6ED88468:				; CODE XREF: sub_6ED83560+412Ej
		mov	ebx, [ebp+arg_0]
		mov	edx, [ebx+40h]
		mov	eax, [ebx+44h]
		cmp	eax, [edx+8]
		jge	loc_6ED887A9
		mov	edx, [edx+0Ch]
		movzx	eax, word ptr [edx+eax*2]
		jmp	loc_6ED8769A
; ---------------------------------------------------------------------------

loc_6ED88486:				; CODE XREF: sub_6ED83560+2BD6j
		mov	ecx, [ebp+arg_0]
		or	eax, 1A0000h
		mov	[esp+4], eax
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED91B80
		jmp	loc_6ED8618C
; ---------------------------------------------------------------------------

loc_6ED884A9:				; CODE XREF: sub_6ED83560+20BEj
		mov	edx, [ebp+arg_0]
		cmp	dword ptr [edx+1B0h], 0
		jz	loc_6ED89884
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_D0]
		lea	edx, [ebp+var_DC]
		mov	[esp+8], edx
		mov	[esp], eax
		mov	[esp+4], ecx
		mov	[ebp+var_2C8], 1Bh
		call	sub_6ED70910
		mov	eax, ds:_ZN7QString11shared_nullE
		cmp	[ebp+var_D0], eax
		push	ebx
		jz	loc_6ED8986C
		mov	ebx, [ebp+arg_0]
		lea	eax, [ebp+var_D0]
		mov	[esp+4], eax
		mov	[ebp+var_2C8], 18h
		mov	[esp], ebx
		call	sub_6ED72E30
		mov	eax, [ebx+188h]
		mov	edx, [ebx+190h]
		mov	esi, [ebp+var_3CC]
		add	eax, 1
		shl	eax, 4
		mov	eax, [eax+edx+4]
		mov	[esp], esi
		add	eax, 2
		mov	[esp+4], eax
		call	ds:_ZN7QString4chopEi
		mov	edx, [ebx+198h]
		mov	eax, [ebx+188h]
		mov	edx, [edx+8]
		shl	eax, 4
		add	eax, [ebx+190h]
		mov	[eax], edx
		mov	dword ptr [eax+4], 0
		lea	eax, [ebp+var_D0]
		mov	[esp], eax
		mov	[ebp+var_2C8], 1Bh
		call	sub_6ED94560
		jmp	loc_6ED846CB
; ---------------------------------------------------------------------------

loc_6ED8857D:				; CODE XREF: sub_6ED83560+31B2j
		mov	eax, [ebx+18h]
		jmp	loc_6ED86758
; ---------------------------------------------------------------------------

loc_6ED88585:				; CODE XREF: sub_6ED83560+223Dj
		mov	edi, [ebp+arg_0]
		movzx	eax, byte ptr [edi+180h]
		test	al, al
		js	loc_6ED857DC
		test	al, 8
		jnz	short loc_6ED885A8
		test	byte ptr [edi+181h], 7
		jnz	loc_6ED857DC

loc_6ED885A8:				; CODE XREF: sub_6ED83560+5039j
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_22], 20h
		mov	ebx, [ebp+var_3E8]
		mov	eax, [edx+188h]
		add	eax, 1
		shl	eax, 4
		add	eax, [edx+190h]
		mov	ecx, [eax+8]
		mov	edx, [eax+4]
		sub	edx, ecx
		add	ecx, [eax]
		mov	[ebp+var_26C], edx
		lea	eax, [ebp+var_C8]
		lea	edx, [ebp+var_274]
		mov	[ebp+var_274], ebx
		mov	[ebp+var_270], ecx
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_2C8], 13h
		call	ds:_ZNK10QStringRef8toStringEv
		mov	edx, offset aEntity1NotDecl ; "Entity '%1' not declared."
		push	eax
		lea	eax, [ebp+var_C4]
		mov	[ebp+var_2C8], 12h
		call	sub_6ED71920
		lea	edx, [ebp+var_22]
		mov	[esp+10h], edx
		lea	edx, [ebp+var_C8]
		lea	eax, [ebp+var_CC]
		mov	[esp+8], edx
		lea	edx, [ebp+var_C4]
		mov	dword ptr [esp+0Ch], 0
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_2C8], 11h
		call	ds:_ZNK7QString3argERKS_iRK5QChar
		mov	esi, [ebp+arg_0]
		lea	eax, [ebp+var_CC]
		push	edi
		mov	[esp+4], eax
		mov	[esp], esi
		mov	[ebp+var_2C8], 10h
		call	sub_6ED71AE0
		lea	eax, [ebp+var_CC]
		mov	[esp], eax
		mov	[ebp+var_2C8], 11h
		call	sub_6ED94560
		lea	eax, [ebp+var_C4]
		mov	[esp], eax
		mov	[ebp+var_2C8], 12h
		call	sub_6ED94560
		lea	eax, [ebp+var_C8]
		mov	[esp], eax
		mov	[ebp+var_2C8], 13h
		call	sub_6ED94560
		jmp	loc_6ED857DC
; ---------------------------------------------------------------------------

loc_6ED886CC:				; CODE XREF: sub_6ED83560+2BCBj
		mov	edx, offset aInvalidCharact ; "Invalid character reference."
		lea	eax, [ebp+var_EC]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		lea	esi, [ebp+var_EC]
		call	sub_6ED71920
		mov	edi, [ebp+arg_0]
		mov	[esp+4], esi
		mov	[ebp+var_2C8], 7
		mov	[esp], edi
		call	sub_6ED71AE0
		lea	eax, [ebp+var_EC]
		jmp	loc_6ED846D1
; ---------------------------------------------------------------------------

loc_6ED88710:				; CODE XREF: sub_6ED83560+226Cj
		mov	esi, [ebp+var_3F4]
		mov	edi, [ebp+arg_0]
		mov	[ebp+var_2C8], 14h
		mov	[esp+4], esi
		mov	[esp], edi
		call	sub_6ED91800
		test	al, al
		jz	short loc_6ED88747
		mov	dword ptr [esp+8], 0
		mov	[esp+4], esi
		mov	[esp], edi
		call	sub_6ED72C90

loc_6ED88747:				; CODE XREF: sub_6ED83560+51D1j
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+var_3E8]
		mov	eax, [edx+188h]
		mov	edx, [edx+190h]
		add	eax, 1
		shl	eax, 4
		mov	eax, [eax+edx+4]
		mov	[esp], ebx
		mov	[ebp+var_2C8], 14h
		add	eax, 2
		mov	[esp+4], eax
		call	ds:_ZN7QString4chopEi
		mov	esi, [ebp+arg_0]
		mov	edx, [esi+198h]
		mov	eax, [esi+188h]
		mov	edx, [edx+8]
		shl	eax, 4
		add	eax, [esi+190h]
		mov	[eax], edx
		mov	dword ptr [eax+4], 0
		jmp	loc_6ED857DC
; ---------------------------------------------------------------------------

loc_6ED887A9:				; CODE XREF: sub_6ED83560+4F14j
		mov	esi, [ebp+arg_0]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], esi
		call	sub_6ED81C20
		movzx	eax, ax
		test	eax, eax
		jz	loc_6ED876AB
		sub	dword ptr [esi+44h], 1
		jmp	loc_6ED8769A
; ---------------------------------------------------------------------------

loc_6ED887D2:				; CODE XREF: sub_6ED83560+20F8j
		mov	ebx, [ebp+var_39C]
		mov	esi, [ebp+arg_0]
		mov	[ebp+var_2C8], 1Bh
		mov	[esp+4], ebx
		mov	[esp], esi
		call	sub_6ED91800
		test	al, al
		jz	loc_6ED8567D
		mov	[esp+4], ebx
		mov	[esp], esi
		call	sub_6ED72E30
		jmp	loc_6ED8567D
; ---------------------------------------------------------------------------

loc_6ED8880A:				; CODE XREF: sub_6ED83560+20F0j
		mov	edi, [ebp+var_39C]
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_2C8], 1Bh
		mov	[esp+4], edi
		mov	[esp], eax
		call	sub_6ED89B30
		movzx	eax, byte ptr [edi+4]
		or	eax, 8
		mov	[edi+4], al
		jmp	loc_6ED85656
; ---------------------------------------------------------------------------

loc_6ED88838:				; CODE XREF: sub_6ED83560+20E8j
		lea	eax, [ebp+var_B8]
		mov	edx, offset aReferenceToUnp ; "Reference to unparsed entity '%1'."
		mov	[ebp+var_20], 20h
		call	sub_6ED71920
		lea	edx, [ebp+var_20]
		mov	[esp+10h], edx
		lea	edx, [ebp+var_DC]
		lea	eax, [ebp+var_BC]
		mov	[esp+8], edx
		lea	edx, [ebp+var_B8]
		mov	dword ptr [esp+0Ch], 0
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_2C8], 1Ah
		call	ds:_ZNK7QString3argERKS_iRK5QChar
		push	esi
		mov	esi, [ebp+arg_0]
		lea	eax, [ebp+var_BC]
		mov	[esp+4], eax
		mov	[ebp+var_2C8], 19h
		mov	[esp], esi
		call	sub_6ED71AE0
		lea	eax, [ebp+var_BC]
		mov	[esp], eax
		mov	[ebp+var_2C8], 1Ah
		call	sub_6ED94560
		lea	eax, [ebp+var_B8]
		mov	[esp], eax
		mov	[ebp+var_2C8], 1Bh
		call	sub_6ED94560
		jmp	loc_6ED846CB
; ---------------------------------------------------------------------------

loc_6ED888DF:				; CODE XREF: sub_6ED83560+2FE3j
		lea	eax, [ebp+var_34]
		mov	edx, offset aStartTagExpect ; "Start tag expected."
		mov	[ebp+var_2C8], 0FFFFFFFFh
		lea	edi, [ebp+var_34]
		call	sub_6ED71920
		mov	eax, [ebp+arg_0]
		mov	[esp+8], edi
		mov	dword ptr [esp+4], 3
		mov	[ebp+var_2C8], 47h
		mov	[esp], eax
		call	sub_6ED71960
		lea	eax, [ebp+var_34]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	sub_6ED94560
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_2F5], 0
		mov	eax, [ecx+194h]
		mov	dword ptr [eax], 0
		mov	dword ptr [ecx+188h], 1
		mov	dword ptr [eax+4], 0
		jmp	loc_6ED83B55
; ---------------------------------------------------------------------------

loc_6ED8895B:				; CODE XREF: sub_6ED83560+496Aj
		lea	eax, [ebp+var_1C0]
		mov	[esp+4], eax
		lea	eax, [ebp+var_84]
		mov	[ebp+var_84], offset aHttpWww_w3_o_1 ; "http://www.w3.org/XML/1998/namespace"
		mov	[esp], eax
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jnz	loc_6ED87ED0
		lea	edx, [ebp+var_1C0]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_1B4]
		mov	[esp], eax
		mov	[ebp+var_2C8], 2Ah
		mov	[esp+4], edx
		call	sub_6ED91C50
		mov	eax, [ebp+var_1B4]
		push	ecx
		mov	ecx, [ebp+var_3C4]
		mov	[ecx+0Ch], eax
		mov	eax, [ebp+var_1B0]
		mov	[ecx+10h], eax
		mov	eax, [ebp+var_1AC]
		mov	[ecx+14h], eax
		jmp	loc_6ED87656
; ---------------------------------------------------------------------------

loc_6ED889D6:				; CODE XREF: sub_6ED83560+1334j
		mov	dword ptr [esp+4], 65h
		jmp	loc_6ED84E6A
; ---------------------------------------------------------------------------

loc_6ED889E3:				; CODE XREF: sub_6ED83560+1165j
		mov	eax, [ebp+var_360]
		lea	edx, [ebp+var_4C]
		mov	[esp], edx
		add	eax, 30h
		mov	[esp+4], eax
		call	ds:_ZNK10QStringRef8toStringEv
		mov	eax, [ebp+var_4C]
		push	esi
		mov	[ebp+var_10C], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_4C]
		and	[ebp+var_108], 0E0h
		mov	[esp], eax
		mov	[ebp+var_2C8], 3Bh
		call	sub_6ED94560
		mov	ebx, [ebp+var_360]
		xor	edx, edx
		mov	eax, [ebx+0Ch]
		test	eax, eax
		jz	short loc_6ED88A42
		mov	edx, ds:_ZN7QString11shared_nullE
		cmp	[eax], edx
		setnz	dl

loc_6ED88A42:				; CODE XREF: sub_6ED83560+54D5j
		movzx	eax, [ebp+var_108]
		add	edx, edx
		mov	esi, [ebp+var_360]
		mov	edi, [ebp+var_378]
		and	eax, 0FFFFFFFDh
		or	eax, edx
		mov	[ebp+var_108], al
		movzx	edx, byte ptr [esi+3Dh]
		and	eax, 0FFFFFFFEh
		and	edx, 1
		or	eax, edx
		mov	[ebp+var_108], al
		mov	eax, [edi]
		mov	eax, [eax+8]
		cmp	eax, 1
		jz	short loc_6ED88A90
		mov	[esp], edi
		mov	[ebp+var_2C8], 3Bh
		call	sub_6ED929C0

loc_6ED88A90:				; CODE XREF: sub_6ED83560+551Cj
		lea	eax, [ebp+var_104]
		mov	[esp+8], eax
		lea	eax, [ebp+var_DC]
		mov	[esp+4], eax
		mov	eax, [ebp+var_378]
		mov	[ebp+var_2C8], 3Bh
		mov	[esp], eax
		call	sub_6ED98330
		mov	[ebp+var_3D0], eax
		mov	ecx, [ebp+var_378]
		mov	edx, [eax]
		mov	[ebp+var_368], edx
		cmp	edx, [ecx]
		jz	loc_6ED88EEE
		lea	eax, [ebp+var_10C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_368]
		mov	[ebp+var_2C8], 3Bh
		add	eax, 0Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	esi, [ebp+var_368]
		movzx	edx, [ebp+var_108]
		movzx	eax, byte ptr [esi+10h]
		and	edx, 1
		and	eax, 0FFFFFFFEh
		or	eax, edx
		mov	[esi+10h], al
		movzx	edx, [ebp+var_108]
		and	eax, 0FFFFFFFDh
		and	edx, 2
		or	eax, edx
		mov	[esi+10h], al
		movzx	edx, [ebp+var_108]
		and	eax, 0FFFFFFFBh
		and	edx, 4
		or	eax, edx
		mov	[esi+10h], al
		movzx	edx, [ebp+var_108]
		and	eax, 0FFFFFFF7h
		and	edx, 8
		or	eax, edx
		mov	[esi+10h], al
		movzx	edx, [ebp+var_108]
		and	eax, 0FFFFFFEFh
		and	edx, 10h
		or	eax, edx
		mov	[esi+10h], al

loc_6ED88B62:				; CODE XREF: sub_6ED83560+5A6Aj
		lea	eax, [ebp+var_10C]
		mov	[esp], eax
		mov	[ebp+var_2C8], 3Ch
		call	sub_6ED94560
		jmp	loc_6ED846CB
; ---------------------------------------------------------------------------

loc_6ED88B7F:				; CODE XREF: sub_6ED83560+4C00j
		mov	ebx, [ebp+var_384]
		mov	esi, [ebp+arg_0]
		mov	[ebp+var_2C8], 0Eh
		mov	[esp+4], ebx
		mov	[esp], esi
		call	sub_6ED91800
		test	al, al
		jz	loc_6ED88185
		mov	[esp+4], ebx
		mov	[esp], esi
		call	sub_6ED72D30
		jmp	loc_6ED88185
; ---------------------------------------------------------------------------

loc_6ED88BB7:				; CODE XREF: sub_6ED83560+12BBj
		mov	dword ptr [esp+4], 82h
		jmp	loc_6ED84F0A
; ---------------------------------------------------------------------------

loc_6ED88BC4:				; CODE XREF: sub_6ED83560+4BF8j
		mov	edi, [ebp+var_384]
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_2C8], 0Eh
		mov	[esp+4], edi
		mov	[esp], eax
		call	sub_6ED89B30
		movzx	eax, byte ptr [edi+4]
		or	eax, 8
		mov	[edi+4], al
		jmp	loc_6ED8815E
; ---------------------------------------------------------------------------

loc_6ED88BF2:				; CODE XREF: sub_6ED83560+28CEj
		mov	edx, [eax+0Ch]
		lea	ecx, [eax+12h]
		cmp	edx, ecx
		jnz	loc_6ED85E34
		jmp	loc_6ED85E5B
; ---------------------------------------------------------------------------

loc_6ED88C05:				; CODE XREF: sub_6ED83560+4AD1j
		lea	eax, [ebp+var_DC]
		mov	[ebp+var_28C], eax
		mov	eax, [ebp+var_DC]
		mov	[ebp+var_288], 0
		mov	eax, [eax+8]
		mov	[ebp+var_2C8], 3
		mov	[ebp+var_284], eax
		lea	eax, [ebp+var_28C]
		mov	[esp], eax
		call	ds:_ZN9QXmlUtils8isNCNameERK10QStringRef
		test	al, al
		jnz	loc_6ED88072
		lea	eax, [ebp+var_58]
		mov	edx, offset a1IsAnInvalidPr ; "%1 is an	invalid	processing instruction"...
		mov	[ebp+var_1A], 20h
		mov	[ebp+var_2C8], 3Ah
		call	sub_6ED71920
		lea	edx, [ebp+var_1A]
		mov	[esp+10h], edx
		lea	edx, [ebp+var_DC]
		lea	eax, [ebp+var_5C]
		mov	[esp+8], edx
		lea	edx, [ebp+var_58]
		mov	dword ptr [esp+0Ch], 0
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_2C8], 38h
		call	ds:_ZNK7QString3argERKS_iRK5QChar
		push	ecx
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_5C]
		mov	[esp+4], eax
		mov	[ebp+var_2C8], 37h
		mov	[esp], ecx
		call	sub_6ED71AE0
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_2C8], 38h
		call	sub_6ED94560
		lea	eax, [ebp+var_58]
		mov	[esp], eax
		mov	[ebp+var_2C8], 3Ah
		call	sub_6ED94560
		jmp	loc_6ED88072
; ---------------------------------------------------------------------------

loc_6ED88CEA:				; CODE XREF: sub_6ED83560+1CD6j
		mov	eax, [ebp+arg_0]
		lea	edi, [ebp+var_40]
		mov	[esp], edi
		mov	[ebp+var_2C8], 0FFFFFFFFh
		add	eax, 0B0h
		mov	[esp+4], eax
		call	ds:_ZNK10QStringRef8toStringEv
		lea	eax, [ebp+var_44]
		mov	[ebp+var_2C8], 42h
		push	esi
		mov	[esp+4], edi
		mov	[esp], eax
		call	ds:_ZNK7QString10simplifiedEv
		mov	ecx, [ebp+arg_0]
		mov	esi, [ebp+arg_0]
		push	ebx
		mov	eax, [ebp+var_44]
		mov	ecx, [ecx+10h]
		mov	edx, [esi+0Ch]
		mov	[ebp+var_3D4], ecx
		mov	ebx, [eax+8]
		cmp	ecx, [edx+8]
		mov	[ebp+var_3E0], ebx
		jz	short loc_6ED88D6A
		mov	eax, esi
		add	eax, 0Ch
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	[ebp+var_2C8], 41h
		call	ds:_ZN7QString6resizeEi
		mov	eax, [ebp+var_44]

loc_6ED88D6A:				; CODE XREF: sub_6ED83560+57E9j
		mov	edi, [ebp+arg_0]
		mov	edx, [ebp+var_3E0]
		mov	ecx, [ebp+var_3D4]
		add	edi, 0Ch
		mov	[ebp+var_3FC], edi
		mov	[esp+0Ch], edx
		mov	eax, [eax+0Ch]
		mov	[esp+4], ecx
		mov	[esp], edi
		mov	[ebp+var_2C8], 41h
		mov	[esp+8], eax
		call	ds:_ZN7QString6insertEiPK5QChari
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebp+var_328]
		mov	esi, [ebp+var_3E0]
		add	[ebx+10h], esi
		mov	[eax+30h], edi
		mov	edx, [ebp+var_3D4]
		mov	[eax+38h], esi
		mov	[eax+34h], edx
		lea	eax, [ebp+var_44]
		mov	[esp], eax
		mov	[ebp+var_2C8], 42h
		call	sub_6ED94560
		lea	eax, [ebp+var_40]
		jmp	loc_6ED87644
; ---------------------------------------------------------------------------

loc_6ED88DE2:				; CODE XREF: sub_6ED83560+1CB8j
					; sub_6ED83560+1CC6j
		mov	edi, [ebp+var_328]
		mov	dword ptr [edi+30h], 0
		mov	dword ptr [edi+38h], 0
		mov	dword ptr [edi+34h], 0
		jmp	loc_6ED846E3
; ---------------------------------------------------------------------------

loc_6ED88E02:				; CODE XREF: sub_6ED83560+6F6j
		movsx	eax, ds:word_6EDA3980[edx+edx]
		jmp	loc_6ED83C6C
; ---------------------------------------------------------------------------

loc_6ED88E0F:				; CODE XREF: sub_6ED83560+4616j
		lea	eax, [esi+ebx-2]
		lea	eax, [edx+eax*2]

loc_6ED88E16:				; CODE XREF: sub_6ED83560+58D3j
		sub	[ebp+var_350], 1
		jz	loc_6ED87B7C
		movzx	edx, word ptr [eax]
		sub	eax, 2
		cmp	dx, 20h
		jnz	loc_6ED87B7C
		jmp	short loc_6ED88E16
; ---------------------------------------------------------------------------

loc_6ED88E35:				; CODE XREF: sub_6ED83560+31ECj
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	ds:_Z9qBadAllocv
		mov	edi, [ebp+arg_0]
		mov	edx, [edi+1Ch]
		mov	eax, [edi+18h]
		add	edx, 1
		jmp	loc_6ED86758
; ---------------------------------------------------------------------------

loc_6ED88E56:				; CODE XREF: sub_6ED83560+39F9j
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED91B80
		jmp	loc_6ED847EF
; ---------------------------------------------------------------------------

loc_6ED88E74:				; CODE XREF: sub_6ED83560+4BD4j
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	ds:_Z9qBadAllocv
		mov	esi, [ebp+arg_0]
		mov	edx, [esi+0D0h]
		mov	eax, [esi+0CCh]
		add	edx, 1
		jmp	loc_6ED87864
; ---------------------------------------------------------------------------

loc_6ED88E9B:				; CODE XREF: sub_6ED83560+70Ej
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_30], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edi, [ebp+arg_0]
		lea	eax, [ebp+var_30]
		mov	[esp+8], eax
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_2C8], 48h
		mov	[esp], edi
		call	sub_6ED71960
		lea	eax, [ebp+var_30]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	sub_6ED94560
		mov	[ebp+var_2F5], 0
		jmp	loc_6ED83B55
; ---------------------------------------------------------------------------

loc_6ED88EEE:				; CODE XREF: sub_6ED83560+5572j
		mov	eax, [edx+0Ch]
		cmp	eax, [edx+18h]
		jge	loc_6ED88FCF

loc_6ED88EFA:				; CODE XREF: sub_6ED83560+5AB5j
		mov	ebx, [ebp+var_104]
		mov	esi, [ebp+var_378]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_444], ebx
		mov	eax, [esi]
		mov	[ebp+var_2C8], 3Bh
		mov	[esp], eax
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		jz	short loc_6ED88FA9
		mov	edx, [ebp+var_DC]
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+var_10C]
		mov	[eax+0Ch], edx
		lock inc dword ptr [edx]
		setnz	cl
		movzx	ecx, [ebp+var_108]
		movzx	edx, byte ptr [eax+10h]
		and	ecx, 1
		and	edx, 0FFFFFFFEh
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, [ebp+var_108]
		and	edx, 0FFFFFFFDh
		and	ecx, 2
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, [ebp+var_108]
		and	edx, 0FFFFFFFBh
		and	ecx, 4
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, [ebp+var_108]
		and	edx, 0FFFFFFF7h
		and	ecx, 8
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, [ebp+var_108]
		and	edx, 0FFFFFFEFh
		and	ecx, 10h
		or	edx, ecx
		mov	[eax+10h], dl

loc_6ED88FA9:				; CODE XREF: sub_6ED83560+59CBj
		mov	edi, [ebp+var_444]
		mov	[eax+4], edi
		mov	ecx, [ebp+var_3D0]
		mov	edx, [ecx]
		mov	[eax], edx
		mov	[ecx], eax
		mov	ebx, [ebp+var_378]
		mov	eax, [ebx]
		add	dword ptr [eax+0Ch], 1
		jmp	loc_6ED88B62
; ---------------------------------------------------------------------------

loc_6ED88FCF:				; CODE XREF: sub_6ED83560+5994j
		movsx	eax, word ptr [edx+16h]
		mov	[esp], edx
		add	eax, 1
		mov	[esp+4], eax
		call	ds:_ZN9QHashData6rehashEi
		mov	edx, [ebp+var_378]
		lea	eax, [ebp+var_104]
		mov	[esp+8], eax
		lea	eax, [ebp+var_DC]
		mov	[esp+4], eax
		mov	[ebp+var_2C8], 3Bh
		mov	[esp], edx
		call	sub_6ED98330
		mov	[ebp+var_3D0], eax
		jmp	loc_6ED88EFA
; ---------------------------------------------------------------------------

loc_6ED8901A:				; CODE XREF: sub_6ED83560+2A67j
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	ds:_Z9qBadAllocv
		mov	edi, [ebp+arg_0]
		mov	edx, [edi+4Ch]
		mov	eax, [edi+48h]
		add	edx, 1
		jmp	loc_6ED85FD3
; ---------------------------------------------------------------------------

loc_6ED8903B:				; DATA XREF: sub_6ED83560+32o
		add	ebp, 18h
		mov	eax, [ebp+var_2C8]
		mov	ecx, [ebp+var_2C4]
		cmp	eax, 1
		mov	[ebp+var_31C], ecx
		jz	loc_6ED894EF
		cmp	eax, 2
		jz	loc_6ED894B7
		cmp	eax, 3
		jz	loc_6ED897FD
		cmp	eax, 4
		xchg	ax, ax
		jz	loc_6ED897CD
		cmp	eax, 5
		jz	loc_6ED8979D
		cmp	eax, 6
		jz	loc_6ED89792
		cmp	eax, 7
		nop
		lea	esi, [esi+0]
		jz	loc_6ED89787
		cmp	eax, 8
		jz	loc_6ED89752
		cmp	eax, 9
		jz	loc_6ED8976A
		cmp	eax, 0Ah
		nop
		lea	esi, [esi+0]
		jz	loc_6ED89735
		cmp	eax, 0Bh
		jz	loc_6ED89376
		cmp	eax, 0Ch
		jz	loc_6ED8938E
		cmp	eax, 0Dh
		nop
		lea	esi, [esi+0]
		jz	loc_6ED893A6
		cmp	eax, 0Eh
		jz	loc_6ED894D7
		cmp	eax, 0Fh
		jz	loc_6ED896E2
		cmp	eax, 10h
		nop
		lea	esi, [esi+0]
		jz	loc_6ED896FA
		cmp	eax, 11h
		jz	loc_6ED89712
		cmp	eax, 12h
		jz	loc_6ED8972A
		cmp	eax, 13h
		nop
		lea	esi, [esi+0]
		jz	loc_6ED8972A
		cmp	eax, 14h
		jz	loc_6ED89561
		cmp	eax, 15h
		jz	loc_6ED896C5
		cmp	eax, 16h
		nop
		lea	esi, [esi+0]
		jz	loc_6ED89631
		cmp	eax, 17h
		jz	loc_6ED896A8
		cmp	eax, 18h
		jz	loc_6ED89676
		cmp	eax, 19h
		nop
		lea	esi, [esi+0]
		jz	loc_6ED8968E
		cmp	eax, 1Ah
		jz	loc_6ED89631
		cmp	eax, 1Bh
		jz	loc_6ED894D7
		cmp	eax, 1Ch
		nop
		lea	esi, [esi+0]
		jz	loc_6ED89653
		cmp	eax, 1Dh
		jz	loc_6ED8966B
		cmp	eax, 1Eh
		jz	loc_6ED8945D
		cmp	eax, 1Fh
		nop
		lea	esi, [esi+0]
		jz	loc_6ED89445
		cmp	eax, 20h
		jz	loc_6ED895FC
		cmp	eax, 21h
		jz	loc_6ED895F1
		cmp	eax, 22h
		nop
		lea	esi, [esi+0]
		jz	loc_6ED894D7
		cmp	eax, 23h
		jz	loc_6ED89561
		cmp	eax, 24h
		jz	loc_6ED894D7
		cmp	eax, 25h
		nop
		lea	esi, [esi+0]
		jz	loc_6ED895D4
		cmp	eax, 26h
		jz	loc_6ED89561
		cmp	eax, 27h
		jz	loc_6ED89561
		cmp	eax, 28h
		nop
		lea	esi, [esi+0]
		jz	loc_6ED895BA
		cmp	eax, 29h
		jz	loc_6ED89561
		cmp	eax, 2Ah
		jz	loc_6ED89561
		cmp	eax, 2Bh
		nop
		lea	esi, [esi+0]
		jz	loc_6ED89561
		cmp	eax, 2Ch
		jz	loc_6ED89579
		cmp	eax, 2Dh
		jz	loc_6ED8958E
		cmp	eax, 2Eh
		nop
		lea	esi, [esi+0]
		jz	loc_6ED895A3
		cmp	eax, 2Fh
		jz	loc_6ED89561
		cmp	eax, 30h
		jz	loc_6ED8954C
		cmp	eax, 31h
		nop
		lea	esi, [esi+0]
		jz	loc_6ED89561
		cmp	eax, 32h
		jz	loc_6ED894D7
		cmp	eax, 33h
		jz	loc_6ED89561
		cmp	eax, 34h
		nop
		lea	esi, [esi+0]
		jz	loc_6ED8951F
		cmp	eax, 35h
		jz	loc_6ED894C2
		cmp	eax, 36h
		jz	loc_6ED8948D
		cmp	eax, 37h
		nop
		lea	esi, [esi+0]
		jz	loc_6ED894A2
		cmp	eax, 38h
		jz	loc_6ED89639
		cmp	eax, 39h
		jz	loc_6ED894B7
		cmp	eax, 3Ah
		nop
		lea	esi, [esi+0]
		jz	loc_6ED89619
		cmp	eax, 3Bh
		jz	loc_6ED89631
		cmp	eax, 3Ch
		jz	loc_6ED89430
		cmp	eax, 3Dh
		nop
		lea	esi, [esi+0]
		jz	loc_6ED89418
		cmp	eax, 3Eh
		jz	loc_6ED89418
		cmp	eax, 3Fh
		jz	loc_6ED894D7
		cmp	eax, 40h
		nop
		lea	esi, [esi+0]
		jz	loc_6ED893D6
		cmp	eax, 41h
		jz	loc_6ED893EB
		cmp	eax, 42h
		jz	loc_6ED893BE
		cmp	eax, 43h
		nop
		lea	esi, [esi+0]
		jz	loc_6ED894D7
		cmp	eax, 44h
		jz	short loc_6ED8935E
		cmp	eax, 45h
		xchg	ax, ax
		jz	loc_6ED893BE
		cmp	eax, 46h
		jz	loc_6ED89864
		cmp	eax, 47h
		jz	loc_6ED8985C
		cmp	eax, 48h
		nop
		lea	esi, [esi+0]
		jz	loc_6ED89854
		lea	eax, [ebp+var_100]

loc_6ED8934C:				; CODE XREF: sub_6ED83560+5F5Dj
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560

loc_6ED8935E:				; CODE XREF: sub_6ED83560+5DB9j
		mov	ebx, [ebp+var_31C]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], ebx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED89376:				; CODE XREF: sub_6ED83560+5B59j
		lea	eax, [ebp+var_D8]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560

loc_6ED8938E:				; CODE XREF: sub_6ED83560+5B62j
		lea	eax, [ebp+var_D4]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560

loc_6ED893A6:				; CODE XREF: sub_6ED83560+5B70j
					; sub_6ED83560+61EDj ...
		lea	eax, [ebp+var_D0]

loc_6ED893AC:				; CODE XREF: sub_6ED83560+622Dj
					; sub_6ED83560+6307j
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560

loc_6ED893BE:				; CODE XREF: sub_6ED83560+5DA2j
					; sub_6ED83560+5DC0j
		mov	edx, [ebp+var_31C]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED893D6:				; CODE XREF: sub_6ED83560+5D90j
		lea	eax, [ebp+var_44]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560

loc_6ED893EB:				; CODE XREF: sub_6ED83560+5D99j
		lea	eax, [ebp+var_40]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560
		mov	ecx, [ebp+var_31C]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED89418:				; CODE XREF: sub_6ED83560+5D70j
					; sub_6ED83560+5D79j
		mov	ecx, [ebp+var_31C]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED89430:				; CODE XREF: sub_6ED83560+5D62j
		lea	eax, [ebp+var_48]

loc_6ED89433:				; CODE XREF: sub_6ED83560+6097j
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560

loc_6ED89445:				; CODE XREF: sub_6ED83560+5C30j
		mov	esi, [ebp+var_31C]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], esi
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED8945D:				; CODE XREF: sub_6ED83560+5C22j
		lea	eax, [ebp+var_AC]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560
		mov	edx, [ebp+var_31C]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED8948D:				; CODE XREF: sub_6ED83560+5D22j
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560

loc_6ED894A2:				; CODE XREF: sub_6ED83560+5D30j
		lea	eax, [ebp+var_58]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560

loc_6ED894B7:				; CODE XREF: sub_6ED83560+5AFCj
					; sub_6ED83560+5D42j ...
		lea	eax, [ebp+var_DC]
		jmp	loc_6ED8934C
; ---------------------------------------------------------------------------

loc_6ED894C2:				; CODE XREF: sub_6ED83560+5D19j
		lea	eax, [ebp+var_60]

loc_6ED894C5:				; CODE XREF: sub_6ED83560+6111j
					; sub_6ED83560+6238j ...
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560

loc_6ED894D7:				; CODE XREF: sub_6ED83560+5B79j
					; sub_6ED83560+5C02j ...
		mov	eax, [ebp+var_31C]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED894EF:				; CODE XREF: sub_6ED83560+5AF3j
		lea	eax, [ebp+var_FC]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560
		mov	edi, [ebp+var_31C]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], edi
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED8951F:				; CODE XREF: sub_6ED83560+5D10j
		lea	eax, [ebp+var_68]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560
		mov	ebx, [ebp+var_31C]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], ebx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED8954C:				; CODE XREF: sub_6ED83560+5CE2j
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560

loc_6ED89561:				; CODE XREF: sub_6ED83560+5BB9j
					; sub_6ED83560+5C59j ...
		mov	edi, [ebp+var_31C]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], edi
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED89579:				; CODE XREF: sub_6ED83560+5CB9j
		lea	eax, [ebp+var_78]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560

loc_6ED8958E:				; CODE XREF: sub_6ED83560+5CC2j
		lea	eax, [ebp+var_70]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560

loc_6ED895A3:				; CODE XREF: sub_6ED83560+5CD0j
		lea	eax, [ebp+var_74]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560
		jmp	short loc_6ED89561
; ---------------------------------------------------------------------------

loc_6ED895BA:				; CODE XREF: sub_6ED83560+5C90j
		lea	eax, [ebp+var_88]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560
		jmp	short loc_6ED89561
; ---------------------------------------------------------------------------

loc_6ED895D4:				; CODE XREF: sub_6ED83560+5C70j
		lea	eax, [ebp+var_A0]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560
		jmp	loc_6ED89561
; ---------------------------------------------------------------------------

loc_6ED895F1:				; CODE XREF: sub_6ED83560+5C42j
		lea	eax, [ebp+var_A4]
		jmp	loc_6ED89433
; ---------------------------------------------------------------------------

loc_6ED895FC:				; CODE XREF: sub_6ED83560+5C39j
		lea	eax, [ebp+var_A8]

loc_6ED89602:				; CODE XREF: sub_6ED83560+60D7j
					; sub_6ED83560+61D0j ...
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560
		jmp	loc_6ED89561
; ---------------------------------------------------------------------------

loc_6ED89619:				; CODE XREF: sub_6ED83560+5D50j
		lea	eax, [ebp+var_10C]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560

loc_6ED89631:				; CODE XREF: sub_6ED83560+5BD0j
					; sub_6ED83560+5BF9j ...
		lea	eax, [ebp+var_DC]
		jmp	short loc_6ED89602
; ---------------------------------------------------------------------------

loc_6ED89639:				; CODE XREF: sub_6ED83560+5D39j
		lea	eax, [ebp+var_54]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560
		jmp	loc_6ED894B7
; ---------------------------------------------------------------------------

loc_6ED89653:				; CODE XREF: sub_6ED83560+5C10j
		lea	eax, [ebp+var_B4]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560

loc_6ED8966B:				; CODE XREF: sub_6ED83560+5C19j
		lea	eax, [ebp+var_B0]
		jmp	loc_6ED894C5
; ---------------------------------------------------------------------------

loc_6ED89676:				; CODE XREF: sub_6ED83560+5BE2j
		lea	eax, [ebp+var_BC]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560

loc_6ED8968E:				; CODE XREF: sub_6ED83560+5BF0j
		lea	eax, [ebp+var_B8]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560
		jmp	short loc_6ED89631
; ---------------------------------------------------------------------------

loc_6ED896A8:				; CODE XREF: sub_6ED83560+5BD9j
		lea	eax, [ebp+var_D0]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560
		jmp	loc_6ED89631
; ---------------------------------------------------------------------------

loc_6ED896C5:				; CODE XREF: sub_6ED83560+5BC2j
		lea	eax, [ebp+var_C0]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560
		jmp	loc_6ED89631
; ---------------------------------------------------------------------------

loc_6ED896E2:				; CODE XREF: sub_6ED83560+5B82j
		lea	eax, [ebp+var_CC]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560

loc_6ED896FA:				; CODE XREF: sub_6ED83560+5B90j
		lea	eax, [ebp+var_C4]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560

loc_6ED89712:				; CODE XREF: sub_6ED83560+5B99j
		lea	eax, [ebp+var_C8]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560

loc_6ED8972A:				; CODE XREF: sub_6ED83560+5BA2j
					; sub_6ED83560+5BB0j
		lea	eax, [ebp+var_D0]
		jmp	loc_6ED89602
; ---------------------------------------------------------------------------

loc_6ED89735:				; CODE XREF: sub_6ED83560+5B50j
		lea	eax, [ebp+var_DC]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560
		jmp	loc_6ED893A6
; ---------------------------------------------------------------------------

loc_6ED89752:				; CODE XREF: sub_6ED83560+5B39j
		lea	eax, [ebp+var_E4]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560

loc_6ED8976A:				; CODE XREF: sub_6ED83560+5B42j
		lea	eax, [ebp+var_E0]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED94560
		jmp	loc_6ED893A6
; ---------------------------------------------------------------------------

loc_6ED89787:				; CODE XREF: sub_6ED83560+5B30j
		lea	eax, [ebp+var_E8]
		jmp	loc_6ED893AC
; ---------------------------------------------------------------------------

loc_6ED89792:				; CODE XREF: sub_6ED83560+5B22j
		lea	eax, [ebp+var_EC]
		jmp	loc_6ED894C5
; ---------------------------------------------------------------------------

loc_6ED8979D:				; CODE XREF: sub_6ED83560+5B19j
		lea	eax, [ebp+var_F0]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED958D0
		mov	ebx, [ebp+var_31C]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], ebx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED897CD:				; CODE XREF: sub_6ED83560+5B10j
		lea	eax, [ebp+var_F4]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED954B0
		mov	edi, [ebp+var_31C]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], edi
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED897FD:				; CODE XREF: sub_6ED83560+5B05j
		lea	eax, [ebp+var_F8]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0
		call	sub_6ED95060
		mov	edx, [ebp+var_31C]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED8982D:				; CODE XREF: sub_6ED83560+4A49j
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	ds:_Z9qBadAllocv
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0C0h]
		mov	edx, [edx+0C4h]
		add	edx, 1
		jmp	loc_6ED85018
; ---------------------------------------------------------------------------

loc_6ED89854:				; CODE XREF: sub_6ED83560+5DE0j
		lea	eax, [ebp+var_2C]
		jmp	loc_6ED89602
; ---------------------------------------------------------------------------

loc_6ED8985C:				; CODE XREF: sub_6ED83560+5DD2j
		lea	eax, [ebp+var_30]
		jmp	loc_6ED894C5
; ---------------------------------------------------------------------------

loc_6ED89864:				; CODE XREF: sub_6ED83560+5DC9j
		lea	eax, [ebp+var_34]
		jmp	loc_6ED893AC
; ---------------------------------------------------------------------------

loc_6ED8986C:				; CODE XREF: sub_6ED83560+4F8Ej
		lea	eax, [ebp+var_D0]
		mov	[esp], eax
		mov	[ebp+var_2C8], 1Bh
		call	sub_6ED94560

loc_6ED89884:				; CODE XREF: sub_6ED83560+4F53j
		mov	edi, [ebp+arg_0]
		mov	dword ptr [esp+4], 2E0000h
		mov	[ebp+var_2C8], 1Bh
		mov	[esp], edi
		call	sub_6ED91B80
		mov	eax, [edi+188h]
		add	eax, 1
		shl	eax, 4
		add	eax, [edi+190h]
		mov	ecx, [eax+8]
		mov	edx, [eax+4]
		sub	edx, ecx
		add	ecx, [eax]
		mov	eax, [ebp+var_3CC]
		mov	[ebp+var_254], edx
		lea	edx, [ebp+var_25C]
		mov	[ebp+var_258], ecx
		mov	[esp+4], edx
		mov	[ebp+var_25C], eax
		lea	eax, [ebp+var_C0]
		mov	[esp], eax
		mov	[ebp+var_2C8], 17h
		call	ds:_ZNK10QStringRef8toStringEv
		lea	eax, [ebp+var_C0]
		push	ecx
		mov	[esp+4], eax
		mov	eax, edi
		add	eax, 88h
		mov	[esp], eax
		mov	[ebp+var_2C8], 16h
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp+var_C0]
		mov	[esp], eax
		mov	[ebp+var_2C8], 17h
		call	sub_6ED94560
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+var_3CC]
		mov	eax, [edx+188h]
		mov	edx, [edx+190h]
		add	eax, 1
		shl	eax, 4
		mov	eax, [eax+edx+4]
		mov	[esp], ebx
		mov	[ebp+var_2C8], 1Bh
		add	eax, 2
		mov	[esp+4], eax
		call	ds:_ZN7QString4chopEi
		mov	esi, [ebp+arg_0]
		mov	edx, [esi+198h]
		mov	eax, [esi+188h]
		mov	edx, [edx+8]
		shl	eax, 4
		add	eax, [esi+190h]
		mov	[eax], edx
		mov	dword ptr [eax+4], 0
		lea	eax, [ebp+var_DC]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	sub_6ED94560
		mov	eax, [esi+188h]
		jmp	loc_6ED83800
; ---------------------------------------------------------------------------

loc_6ED899B5:				; CODE XREF: sub_6ED83560+473Cj
		lea	eax, [ebp+var_1D8]
		mov	[esp+4], eax
		lea	eax, [ebp+var_98]
		mov	[ebp+var_98], offset aHttpWww_w3_o_2 ; "http://www.w3.org/2000/xmlns/"
		mov	[esp], eax
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jnz	loc_6ED87CA2
		cmp	[ebp+var_1D0], 0
		jz	loc_6ED87CA2
		lea	eax, [ebp+var_1CC]
		mov	[esp+4], eax
		lea	eax, [ebp+var_9C]
		mov	[ebp+var_9C], offset aXmlns_4 ;	"xmlns"
		mov	[esp], eax
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_6ED87CF3
		jmp	loc_6ED87CA2
; ---------------------------------------------------------------------------

loc_6ED89A1D:				; CODE XREF: sub_6ED83560+269Bj
		mov	[ebp+var_2C8], 2Ch
		call	ds:_Z9qBadAllocv
		mov	esi, [ebp+arg_0]
		mov	edx, [esi+1A0h]
		mov	eax, [esi+19Ch]
		add	edx, 1
		jmp	loc_6ED85C0A
; ---------------------------------------------------------------------------

loc_6ED89A44:				; CODE XREF: sub_6ED83560+3E48j
		test	eax, eax
		jz	loc_6ED89AD9
		cmp	eax, 3Eh
		jz	short loc_6ED89A6F

loc_6ED89A51:				; CODE XREF: sub_6ED83560+6524j
		mov	esi, [ebp+arg_0]
		mov	[esp+4], eax
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], esi
		call	sub_6ED91B80
		jmp	loc_6ED84791
; ---------------------------------------------------------------------------

loc_6ED89A6F:				; CODE XREF: sub_6ED83560+64EFj
		mov	ebx, [ebp+arg_0]
		mov	edx, [ebx+198h]
		mov	ecx, [edx+8]
		mov	edx, [edx+0Ch]
		cmp	word ptr [edx+ecx*2-4],	5Dh
		jnz	short loc_6ED89A51
		mov	edx, offset aSequenceNotAll ; "Sequence	']]>' not allowed in content."
		lea	eax, [ebp+var_FC]
		lea	esi, [ebp+var_FC]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	sub_6ED71920
		mov	[esp+4], esi
		mov	[esp], ebx
		mov	[ebp+var_2C8], 2
		call	sub_6ED71AE0
		lea	eax, [ebp+var_FC]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	sub_6ED94560
		jmp	loc_6ED847EF
; ---------------------------------------------------------------------------

loc_6ED89AD9:				; CODE XREF: sub_6ED83560+3E2Dj
					; sub_6ED83560+64E6j
		mov	edi, [ebp+var_418]
		mov	eax, [ebp+var_36C]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp+8], edi
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_6ED72C90
		mov	ecx, [ebp+var_36C]
		mov	[esp+4], edi
		mov	[esp], ecx
		call	ds:_ZN7QString6resizeEi
		jmp	loc_6ED847EF
; ---------------------------------------------------------------------------

loc_6ED89B1A:				; CODE XREF: sub_6ED83560+3AB1j
		mov	eax, [ebp+arg_0]
		add	dword ptr [eax+44h], 1
		jmp	loc_6ED8701D
sub_6ED83560	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED89B30	proc near		; CODE XREF: sub_6ED83560+52C4p
					; sub_6ED83560+567Ep

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 84h
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset byte_6ED9AE31
		mov	[ebp+var_28], offset sub_6ED89D7E
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	ecx, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		mov	eax, [ecx]
		mov	edx, [edx+24h]
		mov	eax, [eax+8]
		mov	[ebp+var_58], edx
		test	eax, eax
		jz	loc_6ED89CD1
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx+1ACh]
		test	eax, eax
		jz	loc_6ED89D17
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED78400
		mov	ecx, [ebp+arg_0]
		mov	ecx, [ecx+1ACh]
		mov	[ebp+var_54], ecx

loc_6ED89BA8:				; CODE XREF: sub_6ED89B30+225j
		mov	ebx, [ebp+var_54]
		or	byte ptr [ebx+180h], 80h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		mov	[esp+4], eax
		mov	eax, [edx+1ACh]
		mov	[ebp+var_48], 0FFFFFFFFh
		add	eax, 40h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	ecx, [ebp+arg_0]
		mov	ecx, [ecx+1ACh]
		mov	eax, [ecx+4Ch]
		mov	ebx, ecx
		mov	[ebp+var_50], ecx
		mov	ecx, [ecx+50h]
		lea	edx, [eax+1]
		cmp	edx, ecx
		jl	short loc_6ED89C33
		add	eax, 2
		add	ecx, ecx
		cmp	eax, ecx
		jl	loc_6ED89D10

loc_6ED89BFD:				; CODE XREF: sub_6ED89B30+1E2j
		mov	edx, [ebp+var_50]
		mov	[edx+50h], eax
		shl	eax, 2
		mov	[esp+4], eax
		mov	eax, [edx+48h]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_Z8qReallocPvj
		mov	ecx, [ebp+var_50]
		test	eax, eax
		mov	[ecx+48h], eax
		jz	loc_6ED89D60
		mov	edx, [ecx+4Ch]
		add	edx, 1
		jmp	short loc_6ED89C36
; ---------------------------------------------------------------------------

loc_6ED89C33:				; CODE XREF: sub_6ED89B30+BEj
		mov	eax, [ebx+48h]

loc_6ED89C36:				; CODE XREF: sub_6ED89B30+101j
					; sub_6ED89B30+249j
		mov	ecx, [ebp+var_50]
		mov	ebx, [ebp+arg_0]
		mov	[ecx+4Ch], edx
		mov	dword ptr [eax+edx*4], 2C0000h
		mov	eax, [ebx+1ACh]
		cmp	byte ptr [eax+78h], 0
		jz	loc_6ED89CE1

loc_6ED89C56:				; CODE XREF: sub_6ED89B30+1D9j
		cmp	dword ptr [eax+7Ch], 1
		jz	short loc_6ED89C62
		cmp	dword ptr [eax+1Ch], 0FFFFFFFFh
		jz	short loc_6ED89CD1

loc_6ED89C62:				; CODE XREF: sub_6ED89B30+12Aj
					; sub_6ED89B30+1B5j
		lea	ecx, [ebp+var_C]
		mov	dword ptr [esp+10h], 0
		lea	ebx, [ebp+var_C]
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], offset aInvalidEntityV ; "Invalid entity value."
		mov	dword ptr [esp+4], offset aQxmlstream ;	"QXmlStream"
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN16QCoreApplication9translateEPKcS1_S1_NS_8EncodingE
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 1
		sub	esp, 4
		mov	[esp+4], ebx
		mov	[esp], eax
		call	sub_6ED71AE0
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED89CD1
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED89CD1:				; CODE XREF: sub_6ED89B30+46j
					; sub_6ED89B30+130j ...
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	ebx, [ebp+var_4]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED89CE1:				; CODE XREF: sub_6ED89B30+120j
					; sub_6ED89B30+1D7j
		cmp	dword ptr [eax+7Ch], 1
		jz	loc_6ED89C62
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED83560
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+1ACh]
		cmp	byte ptr [eax+78h], 0
		jz	short loc_6ED89CE1
		jmp	loc_6ED89C56
; ---------------------------------------------------------------------------
		align 10h

loc_6ED89D10:				; CODE XREF: sub_6ED89B30+C7j
		mov	eax, ecx
		jmp	loc_6ED89BFD
; ---------------------------------------------------------------------------

loc_6ED89D17:				; CODE XREF: sub_6ED89B30+57j
		mov	dword ptr [esp], 1B8h ;	size_t
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED988D0
		mov	[ebp+var_48], 2
		mov	[ebp+var_5C], eax
		mov	edx, [ebp+var_5C]
		mov	[ebp+var_54], eax
		mov	eax, [ebp+var_58]
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_6ED78A10
		mov	edx, [ebp+var_5C]
		mov	eax, [ebp+arg_0]
		mov	[eax+1ACh], edx
		jmp	loc_6ED89BA8
; ---------------------------------------------------------------------------
		align 10h

loc_6ED89D60:				; CODE XREF: sub_6ED89B30+F5j
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_Z9qBadAllocv
		mov	ebx, [ebp+var_50]
		mov	edx, [ebx+4Ch]
		mov	eax, [ebx+48h]
		add	edx, 1
		jmp	loc_6ED89C36
sub_6ED89B30	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED89D7E	proc near		; DATA XREF: sub_6ED89B30+24o
		add	ebp, 8
		mov	edx, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-60h], edx
		jz	short loc_6ED89DB1
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-60h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED89DB1:				; CODE XREF: sub_6ED89D7E+Dj
		mov	ecx, [ebp-5Ch]
		mov	[esp+0], ecx
		call	sub_6ED988B0
		mov	ebx, [ebp-60h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ebx
		call	_Unwind_SjLj_Resume
sub_6ED89D7E	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 231. _ZN16QXmlStreamWriterD2Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamWriterD2Ev
_ZN16QXmlStreamWriterD2Ev proc near

var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset byte_6ED9AE39
		mov	[ebp+var_18], offset sub_6ED89F1B
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		mov	[ebp+var_40], edx
		jz	loc_6ED89EA6
		test	byte ptr [edx+30h], 1
		jnz	loc_6ED89EC0

loc_6ED89E19:				; CODE XREF: _ZN16QXmlStreamWriterD2Ev+F5j
					; _ZN16QXmlStreamWriterD2Ev+10Cj
		mov	eax, [ebp+var_40]
		mov	eax, [eax+58h]
		test	eax, eax
		mov	[ebp+var_44], eax
		jz	short loc_6ED89E41
		mov	[esp], eax
		mov	[ebp+var_38], 3
		call	ds:_ZN12QTextEncoderD1Ev
		mov	edx, [ebp+var_44]
		mov	[esp], edx
		call	sub_6ED988B0

loc_6ED89E41:				; CODE XREF: _ZN16QXmlStreamWriterD2Ev+54j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+34h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED89F00

loc_6ED89E55:				; CODE XREF: _ZN16QXmlStreamWriterD2Ev+146j
		mov	eax, [ebp+var_40]
		mov	[ebp+var_48], eax
		mov	eax, [eax+18h]
		test	eax, eax
		jz	short loc_6ED89E72
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_Z5qFreePv

loc_6ED89E72:				; CODE XREF: _ZN16QXmlStreamWriterD2Ev+90j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED89EE1

loc_6ED89E82:				; CODE XREF: _ZN16QXmlStreamWriterD2Ev+127j
		mov	edx, [ebp+var_40]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED89E9B
		mov	[esp], eax
		mov	[ebp+var_38], 0FFFFFFFFh
		call	ds:_Z5qFreePv

loc_6ED89E9B:				; CODE XREF: _ZN16QXmlStreamWriterD2Ev+B9j
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED988B0

loc_6ED89EA6:				; CODE XREF: _ZN16QXmlStreamWriterD2Ev+39j
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_3C]
		mov	dword ptr [edx], 0
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED89EC0:				; CODE XREF: _ZN16QXmlStreamWriterD2Ev+43j
		mov	eax, [edx+28h]
		test	eax, eax
		jz	loc_6ED89E19
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+10h]
		mov	[ebp+var_38], 3
		call	eax
		jmp	loc_6ED89E19
; ---------------------------------------------------------------------------

loc_6ED89EE1:				; CODE XREF: _ZN16QXmlStreamWriterD2Ev+B0j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+0Ch]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED89E82
; ---------------------------------------------------------------------------
		align 10h

loc_6ED89F00:				; CODE XREF: _ZN16QXmlStreamWriterD2Ev+7Fj
		mov	edx, [ebp+var_40]
		mov	eax, [edx+34h]
		mov	[ebp+var_38], 4
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	loc_6ED89E55
_ZN16QXmlStreamWriterD2Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED89F1B	proc near		; DATA XREF: _ZN16QXmlStreamWriterD2Ev+1Do
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-50h], edx
		jz	short loc_6ED89F4B
		cmp	eax, 2
		jz	short loc_6ED89F7C
		cmp	eax, 3
		jz	short loc_6ED89F91
		mov	eax, [ebp-48h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED89F4B:				; CODE XREF: sub_6ED89F1B+Fj
		mov	eax, [ebp-50h]
		mov	edx, [ebp-48h]
		mov	[ebp-4Ch], eax
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED89F6A
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0
		call	ds:_Z5qFreePv

loc_6ED89F6A:				; CODE XREF: sub_6ED89F1B+3Dj
		mov	eax, [ebp-4Ch]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED89F7C:				; CODE XREF: sub_6ED89F1B+14j
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 34h
		mov	[esp+0], eax
		call	sub_6ED90150

loc_6ED89F91:				; CODE XREF: sub_6ED89F1B+19j
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED91D00
		mov	edx, [ebp-50h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED89F1B	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 179. _ZN16QXmlStreamReader8readNextEv

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamReader8readNextEv
_ZN16QXmlStreamReader8readNextEv proc near
					; CODE XREF: _ZN16QXmlStreamReader8readNextEv+171p
					; _ZN16QXmlStreamReader18skipCurrentElementEv+11p ...

var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= byte ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset byte_6ED9AE45
		mov	[ebp+var_28], offset sub_6ED8A18D
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		cmp	dword ptr [edx+7Ch], 1
		mov	[ebp+var_50], edx
		jz	loc_6ED8A0C4
		test	byte ptr [edx+180h], 10h
		jnz	short loc_6ED8A01D
		mov	[esp], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED826E0
		test	al, al
		jz	short loc_6ED8A089

loc_6ED8A01D:				; CODE XREF: _ZN16QXmlStreamReader8readNextEv+48j
		mov	edx, [ebp+var_50]
		mov	[esp], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED83560
		mov	eax, [ebp+var_50]
		cmp	byte ptr [eax+78h], 0
		jz	short loc_6ED8A0A2
		mov	eax, [eax+7Ch]
		cmp	eax, 3
		jz	loc_6ED8A0E7
		cmp	eax, 1
		jz	loc_6ED8A0D0
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_C]
		mov	[esp+8], eax
		mov	dword ptr [esp+4], 4
		mov	eax, [ebp+var_50]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	sub_6ED71960
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED8A0F0

loc_6ED8A089:				; CODE XREF: _ZN16QXmlStreamReader8readNextEv+5Bj
		mov	eax, [ebp+var_50]
		mov	eax, [eax+7Ch]
		mov	[ebp+var_54], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_54]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED8A0A2:				; CODE XREF: _ZN16QXmlStreamReader8readNextEv+76j
		mov	eax, [ebp+var_50]
		mov	eax, [eax+7Ch]
		cmp	eax, 3
		mov	[ebp+var_54], eax
		jz	loc_6ED8A140

loc_6ED8A0B4:				; CODE XREF: _ZN16QXmlStreamReader8readNextEv+12Ej
					; _ZN16QXmlStreamReader8readNextEv+14Cj ...
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_54]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED8A0C4:				; CODE XREF: _ZN16QXmlStreamReader8readNextEv+3Bj
		mov	eax, [ebp+var_50]
		cmp	dword ptr [eax+80h], 4
		jz	short loc_6ED8A110

loc_6ED8A0D0:				; CODE XREF: _ZN16QXmlStreamReader8readNextEv+87j
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_54], 1
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_54]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED8A0E7:				; CODE XREF: _ZN16QXmlStreamReader8readNextEv+7Ej
		mov	[ebp+var_54], 3
		jmp	short loc_6ED8A0B4
; ---------------------------------------------------------------------------

loc_6ED8A0F0:				; CODE XREF: _ZN16QXmlStreamReader8readNextEv+C7j
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	edx, [ebp+var_50]
		mov	edx, [edx+7Ch]
		mov	[ebp+var_54], edx
		jmp	short loc_6ED8A0B4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8A110:				; CODE XREF: _ZN16QXmlStreamReader8readNextEv+10Ej
		mov	edx, [ebp+arg_0]
		mov	dword ptr [eax+7Ch], 0
		mov	byte ptr [eax+78h], 0
		mov	word ptr [eax+1A8h], 0FFFFh
		mov	[esp], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	_ZN16QXmlStreamReader8readNextEv
		mov	[ebp+var_54], eax
		jmp	loc_6ED8A0B4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8A140:				; CODE XREF: _ZN16QXmlStreamReader8readNextEv+EEj
		mov	edx, offset aExtraContentAt ; "Extra content at	end of document."
		lea	eax, [ebp+var_10]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED71920
		lea	edx, [ebp+var_10]
		mov	[esp+4], edx
		mov	eax, [ebp+var_50]
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	sub_6ED71AE0
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED94560
		mov	edx, [ebp+var_50]
		mov	edx, [edx+7Ch]
		mov	[ebp+var_54], edx
		jmp	loc_6ED8A0B4
_ZN16QXmlStreamReader8readNextEv endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED8A18D	proc near		; DATA XREF: _ZN16QXmlStreamReader8readNextEv+1Do
		add	ebp, 8
		mov	edx, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-58h], edx
		jz	short loc_6ED8A1C0
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-58h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED8A1C0:				; CODE XREF: sub_6ED8A18D+Dj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	edx, [ebp-58h]
		mov	[esp+0], edx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED8A18D	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 170. _ZN16QXmlStreamReader18skipCurrentElementEv

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlStreamReader18skipCurrentElementEv
_ZN16QXmlStreamReader18skipCurrentElementEv proc near
					; CODE XREF: _ZN16QXmlStreamReader15readElementTextENS_24ReadElementTextBehaviourE+1BDp

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		mov	ebx, 1
		sub	esp, 14h
		mov	esi, [esp+1Ch+arg_0]

loc_6ED8A1FE:				; CODE XREF: _ZN16QXmlStreamReader18skipCurrentElementEv+32j
		mov	[esp+1Ch+var_1C], esi
		call	_ZN16QXmlStreamReader8readNextEv
		cmp	eax, 1
		jz	short loc_6ED8A224
		mov	eax, [esi]
		mov	eax, [eax+7Ch]
		cmp	eax, 5
		jz	short loc_6ED8A230
		cmp	eax, 4
		setz	al
		movzx	eax, al
		add	ebx, eax

loc_6ED8A220:				; CODE XREF: _ZN16QXmlStreamReader18skipCurrentElementEv+43j
		test	ebx, ebx
		jnz	short loc_6ED8A1FE

loc_6ED8A224:				; CODE XREF: _ZN16QXmlStreamReader18skipCurrentElementEv+19j
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8A230:				; CODE XREF: _ZN16QXmlStreamReader18skipCurrentElementEv+23j
		sub	ebx, 1
		jmp	short loc_6ED8A220
_ZN16QXmlStreamReader18skipCurrentElementEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 167. _ZN16QXmlStreamReader15readElementTextENS_24ReadElementTextBehaviourE

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QXmlStreamReader15readElementTextENS_24ReadElementTextBehaviourE
_ZN16QXmlStreamReader15readElementTextENS_24ReadElementTextBehaviourE proc near
					; CODE XREF: _ZN16QXmlStreamReader15readElementTextENS_24ReadElementTextBehaviourE+164p
					; _ZN16QXmlStreamReader15readElementTextEv+1Bp

var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= byte ptr -14h
var_10		= byte ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 64h
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset byte_6ED9AE4D
		mov	[ebp+var_28], offset sub_6ED8A45B
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	edx, [edx]
		cmp	dword ptr [edx+7Ch], 4
		mov	[ebp+var_50], edx
		jz	short loc_6ED8A2A3
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	ebx, [ebp+arg_0]
		mov	[ebx], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED8A28E:				; CODE XREF: _ZN16QXmlStreamReader15readElementTextENS_24ReadElementTextBehaviourE+BFj
					; _ZN16QXmlStreamReader15readElementTextENS_24ReadElementTextBehaviourE+D4j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		mov	ebx, [ebp+var_4]
		leave
		retn	4
; ---------------------------------------------------------------------------

loc_6ED8A2A3:				; CODE XREF: _ZN16QXmlStreamReader15readElementTextENS_24ReadElementTextBehaviourE+3Cj
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ebp+var_54], eax

loc_6ED8A2B4:				; CODE XREF: _ZN16QXmlStreamReader15readElementTextENS_24ReadElementTextBehaviourE+A4j
					; _ZN16QXmlStreamReader15readElementTextENS_24ReadElementTextBehaviourE:loc_6ED8A320j ...
		mov	ecx, [ebp+arg_4] ; jumptable 6ED8A320 cases 3,6
		mov	[ebp+var_48], 3
		mov	[esp], ecx
		call	_ZN16QXmlStreamReader8readNextEv
		sub	eax, 4
		cmp	eax, 6		; switch 7 cases
		jbe	short loc_6ED8A320

loc_6ED8A2CE:				; CODE XREF: _ZN16QXmlStreamReader15readElementTextENS_24ReadElementTextBehaviourE:loc_6ED8A320j
					; _ZN16QXmlStreamReader15readElementTextENS_24ReadElementTextBehaviourE+142j
					; DATA XREF: ...
		mov	edx, [ebp+var_50] ; jumptable 6ED8A320 default case
		mov	eax, [edx+80h]
		mov	edx, [ebp+arg_8]
		test	edx, edx
		jz	loc_6ED8A407
		test	eax, eax
		jz	short loc_6ED8A2B4 ; jumptable 6ED8A320	cases 3,6

loc_6ED8A2E6:				; CODE XREF: _ZN16QXmlStreamReader15readElementTextENS_24ReadElementTextBehaviourE:loc_6ED8A320j
					; _ZN16QXmlStreamReader15readElementTextENS_24ReadElementTextBehaviourE+1C9j ...
		mov	eax, [ebp+var_C] ; jumptable 6ED8A320 case 1
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED8A28E
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED8A28E
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8A320:				; CODE XREF: _ZN16QXmlStreamReader15readElementTextENS_24ReadElementTextBehaviourE+8Cj
		jmp	ds:off_6EDA28F4[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_6ED8A327:				; CODE XREF: _ZN16QXmlStreamReader15readElementTextENS_24ReadElementTextBehaviourE:loc_6ED8A320j
					; DATA XREF: .rdata:off_6EDA28F4o
		mov	ebx, [ebp+var_50] ; jumptable 6ED8A320 cases 2,5
		mov	eax, [ebx+0F0h]
		mov	edx, [ebx+0F8h]
		test	eax, eax
		jz	loc_6ED8A3E0
		mov	ebx, [ebp+var_50]
		mov	ecx, [eax]
		mov	eax, [ebx+0F4h]
		add	eax, eax
		add	eax, [ecx+0Ch]

loc_6ED8A34E:				; CODE XREF: _ZN16QXmlStreamReader15readElementTextENS_24ReadElementTextBehaviourE+1A6j
		mov	[esp+8], eax
		mov	eax, [ebp+var_C]
		mov	[esp+0Ch], edx
		mov	eax, [eax+8]
		mov	[ebp+var_48], 3
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZN7QString6insertEiPK5QChari
		jmp	loc_6ED8A2B4	; jumptable 6ED8A320 cases 3,6
; ---------------------------------------------------------------------------

loc_6ED8A378:				; CODE XREF: _ZN16QXmlStreamReader15readElementTextENS_24ReadElementTextBehaviourE:loc_6ED8A320j
					; DATA XREF: .rdata:off_6EDA28F4o
		cmp	[ebp+arg_8], 2	; jumptable 6ED8A320 case 0
		jz	short loc_6ED8A3F0
		cmp	[ebp+arg_8], 1
		jnz	loc_6ED8A2CE	; jumptable 6ED8A320 default case
		mov	ebx, [ebp+arg_4]
		lea	eax, [ebp+var_10]
		mov	dword ptr [esp+8], 1
		mov	[esp], eax
		mov	[ebp+var_48], 3
		mov	[esp+4], ebx
		call	_ZN16QXmlStreamReader15readElementTextENS_24ReadElementTextBehaviourE
		sub	esp, 4
		lea	edx, [ebp+var_10]
		lea	ecx, [ebp+var_C]
		mov	[esp+4], edx
		mov	[esp], ecx
		mov	[ebp+var_48], 2
		call	ds:_ZN7QString6appendERKS_
		lea	ebx, [ebp+var_10]
		mov	[esp], ebx
		mov	[ebp+var_48], 3
		call	sub_6ED94560
		jmp	loc_6ED8A2B4	; jumptable 6ED8A320 cases 3,6
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8A3E0:				; CODE XREF: _ZN16QXmlStreamReader15readElementTextENS_24ReadElementTextBehaviourE+F8j
		mov	ecx, [ebp+var_54]
		mov	eax, [ecx+0Ch]
		jmp	loc_6ED8A34E
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8A3F0:				; CODE XREF: _ZN16QXmlStreamReader15readElementTextENS_24ReadElementTextBehaviourE+13Cj
		mov	ecx, [ebp+arg_4]
		mov	[ebp+var_48], 3
		mov	[esp], ecx
		call	_ZN16QXmlStreamReader18skipCurrentElementEv
		jmp	loc_6ED8A2B4	; jumptable 6ED8A320 cases 3,6
; ---------------------------------------------------------------------------

loc_6ED8A407:				; CODE XREF: _ZN16QXmlStreamReader15readElementTextENS_24ReadElementTextBehaviourE+9Cj
		test	eax, eax
		jnz	loc_6ED8A2E6	; jumptable 6ED8A320 case 1
		lea	eax, [ebp+var_14]
		mov	edx, offset aExpectedCharac ; "Expected	character data."
		mov	[ebp+var_48], 3
		call	sub_6ED71920
		mov	ecx, [ebp+var_50]
		lea	eax, [ebp+var_14]
		mov	[esp+8], eax
		mov	dword ptr [esp+4], 1
		mov	[ebp+var_48], 1
		mov	[esp], ecx
		call	sub_6ED71960
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	sub_6ED94560
		jmp	loc_6ED8A2E6	; jumptable 6ED8A320 case 1
_ZN16QXmlStreamReader15readElementTextENS_24ReadElementTextBehaviourE endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED8A45B	proc near		; DATA XREF: _ZN16QXmlStreamReader15readElementTextENS_24ReadElementTextBehaviourE+1Eo
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	ebx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-58h], ebx
		jz	short loc_6ED8A4A7
		cmp	eax, 2
		jz	short loc_6ED8A483
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED8A483:				; CODE XREF: sub_6ED8A45B+14j
					; sub_6ED8A45B+5Ej
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED8A4A7:				; CODE XREF: sub_6ED8A45B+Fj
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		jmp	short loc_6ED8A483
sub_6ED8A45B	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 168. _ZN16QXmlStreamReader15readElementTextEv

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlStreamReader15readElementTextEv
_ZN16QXmlStreamReader15readElementTextEv proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_14], 0
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	_ZN16QXmlStreamReader15readElementTextENS_24ReadElementTextBehaviourE
		mov	eax, ebx
		sub	esp, 4
		add	esp, 18h
		pop	ebx
		retn	4
_ZN16QXmlStreamReader15readElementTextEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 171. _ZN16QXmlStreamReader20readNextStartElementEv

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlStreamReader20readNextStartElementEv
_ZN16QXmlStreamReader20readNextStartElementEv proc near

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]

loc_6ED8A4F8:				; CODE XREF: _ZN16QXmlStreamReader20readNextStartElementEv+22j
		mov	[esp+1Ch+var_1C], ebx
		call	_ZN16QXmlStreamReader8readNextEv
		cmp	eax, 1
		jz	short loc_6ED8A520
		mov	eax, [ebx]
		mov	eax, [eax+7Ch]
		cmp	eax, 5
		jz	short loc_6ED8A520
		cmp	eax, 4
		jnz	short loc_6ED8A4F8
		mov	eax, 1
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8A520:				; CODE XREF: _ZN16QXmlStreamReader20readNextStartElementEv+13j
					; _ZN16QXmlStreamReader20readNextStartElementEv+1Dj
		xor	eax, eax
		add	esp, 18h
		pop	ebx
		retn
_ZN16QXmlStreamReader20readNextStartElementEv endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8A530	proc near		; CODE XREF: sub_6ED8A6D0+3Ap
					; sub_6ED8AB80+1AAp ...

var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 0Ch
		cmp	edx, 3Ch	; switch 61 cases
		mov	[esp+0Ch+var_4], edi
		mov	edi, [esp+0Ch+arg_0]
		mov	[esp+0Ch+var_C], ebx
		mov	[esp+0Ch+var_8], esi
		jbe	short loc_6ED8A560

loc_6ED8A547:				; CODE XREF: sub_6ED8A530:loc_6ED8A560j
					; sub_6ED8A530+39j ...
		xor	ebx, ebx	; jumptable 6ED8A560 default case

loc_6ED8A549:				; CODE XREF: sub_6ED8A530+54j
					; sub_6ED8A530+5Ej
		mov	eax, ebx
		mov	esi, [esp+0Ch+var_8]
		mov	ebx, [esp+0Ch+var_C]
		mov	edi, [esp+0Ch+var_4]
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8A560:				; CODE XREF: sub_6ED8A530+15j
		jmp	ds:off_6EDA5080[edx*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_6ED8A567:				; CODE XREF: sub_6ED8A530:loc_6ED8A560j
					; DATA XREF: .rdata:off_6EDA5080o
		test	edi, edi	; jumptable 6ED8A560 case 38
		jz	short loc_6ED8A547 ; jumptable 6ED8A560	default	case

loc_6ED8A56B:				; CODE XREF: sub_6ED8A530:loc_6ED8A560j
					; DATA XREF: .rdata:off_6EDA5080o
		mov	esi, [eax+14h]	; jumptable 6ED8A560 cases 23-28,37,41,42
		cmp	esi, [eax+18h]
		jge	short loc_6ED8A547 ; jumptable 6ED8A560	default	case

loc_6ED8A573:				; CODE XREF: sub_6ED8A530+72j
		lea	ebx, [esi+esi*2]
		add	esi, 1
		shl	ebx, 2
		add	ebx, [eax+10h]
		mov	[eax+14h], esi
		test	ebx, ebx
		jz	short loc_6ED8A549
		mov	[ebx], edx
		mov	[ebx+4], ecx
		mov	[ebx+8], edi
		jmp	short loc_6ED8A549
; ---------------------------------------------------------------------------

loc_6ED8A590:				; CODE XREF: sub_6ED8A530:loc_6ED8A560j
					; DATA XREF: .rdata:off_6EDA5080o
		test	edi, edi	; jumptable 6ED8A560 cases 1-4,11,29,39,46-53,55
		jz	short loc_6ED8A547 ; jumptable 6ED8A560	default	case

loc_6ED8A594:				; CODE XREF: sub_6ED8A530:loc_6ED8A560j
					; DATA XREF: .rdata:off_6EDA5080o
		test	ecx, ecx	; jumptable 6ED8A560 cases 9,10,12-21,30-34,36,45,54,57-60
		jz	short loc_6ED8A547 ; jumptable 6ED8A560	default	case
		mov	esi, [eax+14h]
		cmp	esi, [eax+18h]
		xchg	ax, ax
		jge	short loc_6ED8A547 ; jumptable 6ED8A560	default	case
		jmp	short loc_6ED8A573
sub_6ED8A530	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8A5B0	proc near		; CODE XREF: sub_6ED8AAB0+6Fp
					; sub_6ED8AAB0+B9p ...

var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 8
		mov	[esp+8+var_8], ebx
		mov	[esp+8+var_4], esi
		mov	esi, [eax+14h]
		cmp	esi, [eax+18h]
		jge	short loc_6ED8A5D5
		lea	ebx, [esi+esi*2]
		add	esi, 1
		shl	ebx, 2
		add	ebx, [eax+10h]
		mov	[eax+14h], esi
		test	ebx, ebx
		jnz	short loc_6ED8A5E4

loc_6ED8A5D5:				; CODE XREF: sub_6ED8A5B0+10j
					; sub_6ED8A5B0+36j ...
		xor	ebx, ebx
		mov	esi, [esp+8+var_4]
		mov	eax, ebx
		mov	ebx, [esp+8+var_8]
		add	esp, 8
		retn
; ---------------------------------------------------------------------------

loc_6ED8A5E4:				; CODE XREF: sub_6ED8A5B0+23j
		test	edx, edx
		jz	short loc_6ED8A5D5
		test	ecx, ecx
		jz	short loc_6ED8A5D5
		mov	dword ptr [ebx], 0
		mov	eax, ebx
		mov	[ebx+4], edx
		mov	[ebx+8], ecx
		mov	ebx, [esp+8+var_8]
		mov	esi, [esp+8+var_4]
		add	esp, 8
		retn
sub_6ED8A5B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8A610	proc near		; CODE XREF: sub_6ED8A670+2Ap
					; sub_6ED8A670+3Fp ...
		push	edi
		xor	edi, edi
		push	esi
		mov	esi, eax
		push	ebx
		mov	eax, [eax+0Ch]
		movzx	ecx, byte ptr [eax]
		cmp	cl, 6Eh
		jz	short loc_6ED8A655

loc_6ED8A622:				; CODE XREF: sub_6ED8A610+53j
		lea	eax, [ecx-30h]
		cmp	al, 9
		ja	short loc_6ED8A665
		mov	edx, [esi+0Ch]
		xor	eax, eax
		xchg	ax, ax

loc_6ED8A630:				; CODE XREF: sub_6ED8A610+39j
		add	edx, 1
		movsx	ecx, cl
		lea	eax, [eax+eax*4]
		lea	eax, [ecx+eax*2-30h]
		mov	[esi+0Ch], edx
		movzx	ecx, byte ptr [edx]
		lea	ebx, [ecx-30h]
		cmp	bl, 9
		jbe	short loc_6ED8A630

loc_6ED8A64B:				; CODE XREF: sub_6ED8A610+57j
		test	edi, edi
		jz	short loc_6ED8A651
		neg	eax

loc_6ED8A651:				; CODE XREF: sub_6ED8A610+3Dj
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_6ED8A655:				; CODE XREF: sub_6ED8A610+10j
		lea	edx, [eax+1]
		mov	di, 1
		mov	[esi+0Ch], edx
		movzx	ecx, byte ptr [eax+1]
		jmp	short loc_6ED8A622
; ---------------------------------------------------------------------------

loc_6ED8A665:				; CODE XREF: sub_6ED8A610+17j
		xor	eax, eax
		jmp	short loc_6ED8A64B
sub_6ED8A610	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8A670	proc near		; CODE XREF: sub_6ED8BF60+1D7p
					; sub_6ED8BF60+212p ...
		test	edx, edx
		push	ebx
		mov	ebx, eax
		jnz	short loc_6ED8A68A
		mov	eax, [eax+0Ch]
		movzx	edx, byte ptr [eax]
		test	dl, dl
		jz	short loc_6ED8A694
		add	eax, 1
		movsx	edx, dl
		mov	[ebx+0Ch], eax

loc_6ED8A68A:				; CODE XREF: sub_6ED8A670+5j
		cmp	edx, 68h
		jz	short loc_6ED8A6AD
		cmp	edx, 76h
		jz	short loc_6ED8A698

loc_6ED8A694:				; CODE XREF: sub_6ED8A670+Fj
					; sub_6ED8A670+35j ...
		xor	eax, eax
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_6ED8A698:				; CODE XREF: sub_6ED8A670+22j
		mov	eax, ebx
		call	sub_6ED8A610
		mov	eax, [ebx+0Ch]
		cmp	byte ptr [eax],	5Fh
		jnz	short loc_6ED8A694
		add	eax, 1
		mov	[ebx+0Ch], eax

loc_6ED8A6AD:				; CODE XREF: sub_6ED8A670+1Dj
		mov	eax, ebx
		call	sub_6ED8A610
		mov	eax, [ebx+0Ch]
		cmp	byte ptr [eax],	5Fh
		jnz	short loc_6ED8A694
		add	eax, 1
		mov	[ebx+0Ch], eax
		mov	eax, 1
		pop	ebx
		retn
sub_6ED8A670	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8A6D0	proc near		; CODE XREF: sub_6ED8AEC0+5Ap
					; sub_6ED8AEC0+31Fp ...

var_10		= dword	ptr -10h

		push	edi
		mov	edi, ecx
		push	esi
		mov	esi, edx
		push	ebx
		mov	ebx, eax
		sub	esp, 4
		mov	eax, [eax+0Ch]
		movzx	eax, byte ptr [eax]
		jmp	short loc_6ED8A71E
; ---------------------------------------------------------------------------

loc_6ED8A6E4:				; CODE XREF: sub_6ED8A6D0+58j
		test	dl, dl
		jnz	short loc_6ED8A72A
		cmp	al, 4Bh
		jnz	short loc_6ED8A745
		add	dword ptr [ebx+0Ch], 1

loc_6ED8A6F0:				; CODE XREF: sub_6ED8A6D0+80j
		cmp	edi, 1
		sbb	edx, edx
		add	dword ptr [ebx+30h], 6
		and	edx, 0FFFFFFFDh
		add	edx, 1Ch

loc_6ED8A6FF:				; CODE XREF: sub_6ED8A6D0+71j
					; sub_6ED8A6D0+91j
		xor	ecx, ecx
		mov	eax, ebx
		mov	[esp+10h+var_10], 0
		call	sub_6ED8A530
		test	eax, eax
		mov	[esi], eax
		jz	short loc_6ED8A743
		lea	esi, [eax+4]
		mov	eax, [ebx+0Ch]
		movzx	eax, byte ptr [eax]

loc_6ED8A71E:				; CODE XREF: sub_6ED8A6D0+12j
		cmp	al, 72h
		setz	dl
		cmp	al, 56h
		setz	cl
		jnz	short loc_6ED8A6E4

loc_6ED8A72A:				; CODE XREF: sub_6ED8A6D0+16j
		add	dword ptr [ebx+0Ch], 1
		test	dl, dl
		jz	short loc_6ED8A74E
		cmp	edi, 1
		sbb	edx, edx
		and	edx, 0FFFFFFFDh
		add	edx, 1Ah
		add	dword ptr [ebx+30h], 9
		jmp	short loc_6ED8A6FF
; ---------------------------------------------------------------------------

loc_6ED8A743:				; CODE XREF: sub_6ED8A6D0+43j
		xor	esi, esi

loc_6ED8A745:				; CODE XREF: sub_6ED8A6D0+1Aj
		add	esp, 4
		mov	eax, esi
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_6ED8A74E:				; CODE XREF: sub_6ED8A6D0+60j
		test	cl, cl
		jz	short loc_6ED8A6F0
		cmp	edi, 1
		sbb	edx, edx
		and	edx, 0FFFFFFFDh
		add	edx, 1Bh
		add	dword ptr [ebx+30h], 9
		jmp	short loc_6ED8A6FF
sub_6ED8A6D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8A770	proc near		; CODE XREF: sub_6ED8AB80+1CBj
					; sub_6ED8AEC0+219p ...
		push	ebx
		mov	ebx, eax
		mov	eax, [eax+0Ch]
		cmp	byte ptr [eax],	54h
		jz	short loc_6ED8A780

loc_6ED8A77B:				; CODE XREF: sub_6ED8A770+27j
					; sub_6ED8A770+2Fj ...
		xor	eax, eax

loc_6ED8A77D:				; CODE XREF: sub_6ED8A770+57j
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8A780:				; CODE XREF: sub_6ED8A770+9j
		lea	edx, [eax+1]
		xor	ecx, ecx
		mov	[ebx+0Ch], edx
		cmp	byte ptr [eax+1], 5Fh
		jz	short loc_6ED8A7A4
		mov	eax, ebx
		call	sub_6ED8A610
		test	eax, eax
		js	short loc_6ED8A77B
		mov	edx, [ebx+0Ch]
		cmp	byte ptr [edx],	5Fh
		jnz	short loc_6ED8A77B
		lea	ecx, [eax+1]

loc_6ED8A7A4:				; CODE XREF: sub_6ED8A770+1Cj
		add	edx, 1
		mov	[ebx+0Ch], edx
		mov	edx, [ebx+14h]
		add	dword ptr [ebx+28h], 1
		cmp	edx, [ebx+18h]
		jge	short loc_6ED8A77B
		lea	eax, [edx+edx*2]
		add	edx, 1
		shl	eax, 2
		add	eax, [ebx+10h]
		mov	[ebx+14h], edx
		test	eax, eax
		jz	short loc_6ED8A77D
		mov	dword ptr [eax], 5
		mov	[eax+4], ecx
		pop	ebx
		retn
sub_6ED8A770	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8A7E0	proc near		; CODE XREF: sub_6ED8AEC0+1DFp
					; sub_6ED8BC50+9Dp ...
		push	ebp
		push	edi
		push	esi
		push	ebx
		mov	ebx, [eax+0Ch]
		cmp	byte ptr [ebx],	53h
		jz	short loc_6ED8A7F5

loc_6ED8A7EC:				; CODE XREF: sub_6ED8A7E0+50j
					; sub_6ED8A7E0+74j ...
		xor	edx, edx

loc_6ED8A7EE:				; CODE XREF: sub_6ED8A7E0+161j
					; sub_6ED8A7E0+173j
		mov	eax, edx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED8A7F5:				; CODE XREF: sub_6ED8A7E0+Aj
		lea	ecx, [ebx+1]
		mov	[eax+0Ch], ecx
		movzx	ecx, byte ptr [ebx+1]
		test	cl, cl
		jnz	short loc_6ED8A856

loc_6ED8A803:				; CODE XREF: sub_6ED8A7E0+19Aj
		mov	ebx, [eax+8]
		shr	ebx, 3
		and	ebx, 1
		test	edx, edx
		jz	short loc_6ED8A825
		test	ebx, ebx
		jnz	short loc_6ED8A825
		mov	edx, [eax+0Ch]
		xor	ebx, ebx
		movzx	edx, byte ptr [edx]
		sub	edx, 43h
		cmp	dl, 1
		setbe	bl

loc_6ED8A825:				; CODE XREF: sub_6ED8A7E0+2Ej
					; sub_6ED8A7E0+32j
		mov	edx, offset dword_6EDA5F84
		cmp	edx, offset aT	; "t"
		jbe	short loc_6ED8A7EC
		cmp	cl, 74h
		mov	edx, offset aT	; "t"
		jnz	short loc_6ED8A849
		jmp	loc_6ED8A8E1
; ---------------------------------------------------------------------------

loc_6ED8A841:				; CODE XREF: sub_6ED8A7E0+72j
		cmp	cl, [edx]
		jz	loc_6ED8A8E1

loc_6ED8A849:				; CODE XREF: sub_6ED8A7E0+5Aj
		add	edx, 1Ch
		cmp	edx, offset dword_6EDA5F84
		jnz	short loc_6ED8A841
		jmp	short loc_6ED8A7EC
; ---------------------------------------------------------------------------

loc_6ED8A856:				; CODE XREF: sub_6ED8A7E0+21j
		add	ebx, 2
		mov	[eax+0Ch], ebx
		lea	ebx, [ecx-30h]
		cmp	bl, 9
		ja	loc_6ED8A965
		cmp	cl, 5Fh
		jz	short loc_6ED8A8DD

loc_6ED8A86D:				; CODE XREF: sub_6ED8A7E0+194j
		lea	ebx, [ecx-30h]
		xor	edx, edx
		cmp	bl, 9
		ja	short loc_6ED8A8A8

loc_6ED8A877:				; CODE XREF: sub_6ED8A7E0+C6j
		lea	ebx, [edx+edx*8]
		movsx	ecx, cl
		lea	ebx, [ecx+ebx*4-30h]

loc_6ED8A881:				; CODE XREF: sub_6ED8A7E0+DEj
		cmp	edx, ebx
		ja	loc_6ED8A7EC
		mov	edx, [eax+0Ch]
		movzx	ecx, byte ptr [edx]
		test	cl, cl
		jz	short loc_6ED8A89E
		add	edx, 1
		cmp	cl, 5Fh
		mov	[eax+0Ch], edx
		jz	short loc_6ED8A8C0

loc_6ED8A89E:				; CODE XREF: sub_6ED8A7E0+B1j
		mov	edx, ebx
		lea	ebx, [ecx-30h]
		cmp	bl, 9
		jbe	short loc_6ED8A877

loc_6ED8A8A8:				; CODE XREF: sub_6ED8A7E0+95j
		lea	ebx, [ecx-41h]
		cmp	bl, 19h
		ja	loc_6ED8A7EC
		lea	ebx, [edx+edx*8]
		movsx	ecx, cl
		lea	ebx, [ecx+ebx*4-37h]
		jmp	short loc_6ED8A881
; ---------------------------------------------------------------------------

loc_6ED8A8C0:				; CODE XREF: sub_6ED8A7E0+BCj
		add	ebx, 1

loc_6ED8A8C3:				; CODE XREF: sub_6ED8A7E0+FFj
		cmp	ebx, [eax+20h]
		jnb	loc_6ED8A7EC
		add	dword ptr [eax+28h], 1
		mov	eax, [eax+1Ch]
		mov	edx, [eax+ebx*4]
		pop	ebx
		pop	esi
		pop	edi
		mov	eax, edx
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED8A8DD:				; CODE XREF: sub_6ED8A7E0+8Bj
					; sub_6ED8A7E0+188j
		xor	ebx, ebx
		jmp	short loc_6ED8A8C3
; ---------------------------------------------------------------------------

loc_6ED8A8E1:				; CODE XREF: sub_6ED8A7E0+5Cj
					; sub_6ED8A7E0+63j
		mov	edi, [edx+14h]
		test	edi, edi
		jz	short loc_6ED8A960
		mov	ecx, [eax+14h]
		xor	esi, esi
		cmp	ecx, [eax+18h]
		mov	ebp, [edx+18h]
		jge	short loc_6ED8A917
		lea	esi, [ecx+ecx*2]
		add	ecx, 1
		shl	esi, 2
		add	esi, [eax+10h]
		mov	[eax+14h], ecx
		test	esi, esi
		jz	short loc_6ED8A917
		mov	[esi+4], edi
		mov	[esi+8], ebp
		mov	ecx, [eax+14h]
		mov	dword ptr [esi], 16h

loc_6ED8A917:				; CODE XREF: sub_6ED8A7E0+113j
					; sub_6ED8A7E0+126j
		mov	[eax+2Ch], esi

loc_6ED8A91A:				; CODE XREF: sub_6ED8A7E0+183j
		test	ebx, ebx
		jz	short loc_6ED8A958
		mov	esi, [edx+0Ch]
		mov	ebx, [edx+10h]

loc_6ED8A924:				; CODE XREF: sub_6ED8A7E0+17Ej
		add	[eax+30h], ebx
		cmp	ecx, [eax+18h]
		jge	loc_6ED8A7EC
		lea	edx, [ecx+ecx*2]
		add	ecx, 1
		shl	edx, 2
		add	edx, [eax+10h]
		mov	[eax+14h], ecx
		test	edx, edx
		jz	loc_6ED8A7EE
		mov	dword ptr [edx], 16h
		mov	[edx+4], esi
		mov	[edx+8], ebx
		jmp	loc_6ED8A7EE
; ---------------------------------------------------------------------------

loc_6ED8A958:				; CODE XREF: sub_6ED8A7E0+13Cj
		mov	esi, [edx+4]
		mov	ebx, [edx+8]
		jmp	short loc_6ED8A924
; ---------------------------------------------------------------------------

loc_6ED8A960:				; CODE XREF: sub_6ED8A7E0+106j
		mov	ecx, [eax+14h]
		jmp	short loc_6ED8A91A
; ---------------------------------------------------------------------------

loc_6ED8A965:				; CODE XREF: sub_6ED8A7E0+82j
		cmp	cl, 5Fh
		jz	loc_6ED8A8DD
		lea	ebx, [ecx-41h]
		cmp	bl, 19h
		jbe	loc_6ED8A86D
		jmp	loc_6ED8A803
sub_6ED8A7E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8A980	proc near		; CODE XREF: sub_6ED8CAB0+120p
					; sub_6ED8CF10+CBp ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h

		push	ebx
		mov	ebx, edx
		sub	esp, 28h
		mov	ecx, [eax+104h]
		cmp	ecx, 0FFh
		lea	edx, [ecx+1]
		jz	short loc_6ED8A9B0

loc_6ED8A997:				; CODE XREF: sub_6ED8A980+75j
		mov	[eax+ecx+4], bl
		mov	[eax+104h], edx
		mov	[eax+108h], bl
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8A9B0:				; CODE XREF: sub_6ED8A980+15j
		mov	edx, [eax+110h]
		mov	byte ptr [eax+103h], 0
		mov	[esp+2Ch+var_10], eax
		mov	[esp+2Ch+var_28], 0FFh
		mov	[esp+2Ch+var_24], edx
		lea	edx, [eax+4]
		mov	[esp+2Ch+var_2C], edx
		call	dword ptr [eax+10Ch]
		mov	eax, [esp+2Ch+var_10]
		mov	edx, 1
		xor	ecx, ecx
		mov	dword ptr [eax+104h], 0
		add	dword ptr [eax+124h], 1
		jmp	short loc_6ED8A997
sub_6ED8A980	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8AA00	proc near		; CODE XREF: sub_6ED8AA00+17p
					; sub_6ED8CF10+FDp
		push	esi
		mov	esi, eax
		push	ebx
		mov	ebx, edx
		sub	esp, 4
		test	edx, edx
		jz	short loc_6ED8AA27 ; jumptable 6ED8AA32	cases 0,6,22,35,43,56,60

loc_6ED8AA0D:				; CODE XREF: sub_6ED8AA00+25j
		cmp	dword ptr [ebx], 3Ch ; switch 61 cases
		jbe	short loc_6ED8AA30

loc_6ED8AA12:				; CODE XREF: sub_6ED8AA00+32j
					; DATA XREF: .rdata:off_6EDA5174o
		mov	edx, [ebx+4]	; jumptable 6ED8AA32 default case
		mov	eax, esi
		call	sub_6ED8AA00
		test	eax, eax
		jnz	short loc_6ED8AA29

loc_6ED8AA20:				; CODE XREF: sub_6ED8AA00+32j
					; DATA XREF: .rdata:off_6EDA5174o
		mov	ebx, [ebx+8]	; jumptable 6ED8AA32 cases 7,8,44
		test	ebx, ebx
		jnz	short loc_6ED8AA0D

loc_6ED8AA27:				; CODE XREF: sub_6ED8AA00+Bj
					; sub_6ED8AA00+32j ...
		xor	eax, eax	; jumptable 6ED8AA32 cases 0,6,22,35,43,56,60

loc_6ED8AA29:				; CODE XREF: sub_6ED8AA00+1Ej
					; sub_6ED8AA00+87j ...
		add	esp, 4
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8AA30:				; CODE XREF: sub_6ED8AA00+10j
		mov	eax, [ebx]
		jmp	ds:off_6EDA5174[eax*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8AA40:				; CODE XREF: sub_6ED8AA00+32j
					; DATA XREF: .rdata:off_6EDA5174o
		mov	eax, [esi+114h]	; jumptable 6ED8AA32 case 5
		test	eax, eax
		jz	short loc_6ED8AA92
		mov	eax, [eax+4]
		mov	edx, [ebx+4]
		mov	eax, [eax+8]
		test	eax, eax
		jnz	short loc_6ED8AA6E
		jmp	short loc_6ED8AA27 ; jumptable 6ED8AA32	cases 0,6,22,35,43,56,60
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8AA60:				; CODE XREF: sub_6ED8AA00+71j
		test	edx, edx
		jle	short loc_6ED8AA75
		mov	eax, [eax+8]
		sub	edx, 1
		test	eax, eax
		jz	short loc_6ED8AA27 ; jumptable 6ED8AA32	cases 0,6,22,35,43,56,60

loc_6ED8AA6E:				; CODE XREF: sub_6ED8AA00+55j
		cmp	dword ptr [eax], 2Ah
		jz	short loc_6ED8AA60
		jmp	short loc_6ED8AA27 ; jumptable 6ED8AA32	cases 0,6,22,35,43,56,60
; ---------------------------------------------------------------------------

loc_6ED8AA75:				; CODE XREF: sub_6ED8AA00+62j
		test	eax, eax
		jz	short loc_6ED8AA27 ; jumptable 6ED8AA32	cases 0,6,22,35,43,56,60
		test	edx, edx
		nop
		lea	esi, [esi+0]
		jnz	short loc_6ED8AA27 ; jumptable 6ED8AA32	cases 0,6,22,35,43,56,60
		mov	eax, [eax+4]
		test	eax, eax
		jz	short loc_6ED8AA29
		cmp	dword ptr [eax], 2Ah
		jnz	short loc_6ED8AA27 ; jumptable 6ED8AA32	cases 0,6,22,35,43,56,60
		xchg	ax, ax
		jmp	short loc_6ED8AA29
; ---------------------------------------------------------------------------

loc_6ED8AA92:				; CODE XREF: sub_6ED8AA00+48j
		mov	dword ptr [esi+11Ch], 1
		lea	esi, [esi+0]
		jmp	short loc_6ED8AA29
sub_6ED8AA00	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8AAB0	proc near		; CODE XREF: sub_6ED8AEC0+278p
					; sub_6ED8AEC0+2E0p ...

var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 10h
		mov	[esp+10h+var_10], ebx
		mov	ebx, eax
		mov	[esp+10h+var_C], esi
		mov	[esp+10h+var_8], edi
		mov	[esp+10h+var_4], ebp
		call	sub_6ED8A610
		xor	ecx, ecx
		test	eax, eax
		jle	short loc_6ED8AB29
		mov	ebp, [ebx+0Ch]
		mov	esi, [ebx+4]
		sub	esi, ebp
		cmp	eax, esi
		jg	short loc_6ED8AB26
		test	byte ptr [ebx+8], 4
		lea	ecx, [ebp+eax+0]
		mov	[ebx+0Ch], ecx
		jz	short loc_6ED8AAED
		cmp	byte ptr [ecx],	24h
		jz	short loc_6ED8AB40

loc_6ED8AAED:				; CODE XREF: sub_6ED8AAB0+36j
					; sub_6ED8AAB0+96j
		cmp	eax, 9
		jle	short loc_6ED8AB19
		mov	edi, offset a_global_ ;	"_GLOBAL_"
		mov	ecx, 8
		mov	esi, ebp
		repe cmpsb
		jnz	short loc_6ED8AB19
		movzx	ecx, byte ptr [ebp+8]
		lea	esi, [ebp+8]
		cmp	cl, 5Fh
		jz	short loc_6ED8AB13
		cmp	cl, 2Eh
		jnz	short loc_6ED8AB48

loc_6ED8AB13:				; CODE XREF: sub_6ED8AAB0+5Cj
					; sub_6ED8AAB0+A0j
		cmp	byte ptr [esi+1], 4Eh
		jz	short loc_6ED8AB52

loc_6ED8AB19:				; CODE XREF: sub_6ED8AAB0+40j
					; sub_6ED8AAB0+50j ...
		mov	ecx, eax
		mov	edx, ebp
		mov	eax, ebx
		call	sub_6ED8A5B0
		mov	ecx, eax

loc_6ED8AB26:				; CODE XREF: sub_6ED8AAB0+29j
					; sub_6ED8AAB0+C0j
		mov	[ebx+2Ch], ecx

loc_6ED8AB29:				; CODE XREF: sub_6ED8AAB0+1Dj
		mov	eax, ecx
		mov	ebx, [esp+10h+var_10]
		mov	esi, [esp+10h+var_C]
		mov	edi, [esp+10h+var_8]
		mov	ebp, [esp+10h+var_4]
		add	esp, 10h
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8AB40:				; CODE XREF: sub_6ED8AAB0+3Bj
		add	ecx, 1
		mov	[ebx+0Ch], ecx
		jmp	short loc_6ED8AAED
; ---------------------------------------------------------------------------

loc_6ED8AB48:				; CODE XREF: sub_6ED8AAB0+61j
		cmp	cl, 24h
		jnz	short loc_6ED8AB19
		lea	esi, [esi+0]
		jmp	short loc_6ED8AB13
; ---------------------------------------------------------------------------

loc_6ED8AB52:				; CODE XREF: sub_6ED8AAB0+67j
		mov	edx, [ebx+30h]
		mov	ecx, 15h
		add	edx, 16h
		sub	edx, eax
		mov	eax, ebx
		mov	[ebx+30h], edx
		mov	edx, offset aAnonymousNames ; "(anonymous namespace)"
		call	sub_6ED8A5B0
		mov	ecx, eax
		jmp	short loc_6ED8AB26
sub_6ED8AAB0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8AB80	proc near		; CODE XREF: sub_6ED8AB80+148p
					; sub_6ED8AB80+220p ...

var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 3Ch
		mov	[esp+3Ch+var_10], ebx
		mov	ebx, eax
		mov	[esp+3Ch+var_C], esi
		mov	[esp+3Ch+var_8], edi
		mov	[esp+3Ch+var_4], ebp
		mov	edx, [eax+0Ch]
		movzx	eax, byte ptr [edx]
		cmp	al, 4Ch
		jz	loc_6ED8ACD7
		cmp	al, 54h
		jz	loc_6ED8AD36
		cmp	al, 73h
		jz	loc_6ED8AC56
		cmp	al, 66h
		jz	short loc_6ED8ABF1

loc_6ED8ABB7:				; CODE XREF: sub_6ED8AB80+75j
		sub	eax, 30h
		cmp	al, 9
		ja	loc_6ED8AC6A
		mov	eax, ebx
		call	sub_6ED8B860
		test	eax, eax
		mov	esi, eax
		jz	short loc_6ED8ABDB
		mov	eax, [ebx+0Ch]
		cmp	byte ptr [eax],	49h
		jz	loc_6ED8ADC1

loc_6ED8ABDB:				; CODE XREF: sub_6ED8AB80+4Dj
					; sub_6ED8AB80+C9j ...
		mov	eax, esi
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED8ABF1:				; CODE XREF: sub_6ED8AB80+35j
		cmp	byte ptr [edx+1], 70h
		jnz	short loc_6ED8ABB7
		lea	ecx, [edx+2]
		mov	eax, 1
		mov	[ebx+0Ch], ecx
		cmp	byte ptr [edx+2], 5Fh
		jz	short loc_6ED8AC26
		mov	eax, ebx
		call	sub_6ED8A610
		test	eax, eax
		js	loc_6ED8ACD0
		mov	ecx, [ebx+0Ch]
		cmp	byte ptr [ecx],	5Fh
		jnz	loc_6ED8ACD0
		add	eax, 2

loc_6ED8AC26:				; CODE XREF: sub_6ED8AB80+86j
		mov	edx, [ebx+14h]
		add	ecx, 1
		cmp	edx, [ebx+18h]
		mov	[ebx+0Ch], ecx
		jge	loc_6ED8ACD0
		lea	esi, [edx+edx*2]
		add	edx, 1
		shl	esi, 2
		add	esi, [ebx+10h]
		mov	[ebx+14h], edx
		test	esi, esi
		jz	short loc_6ED8ABDB
		mov	dword ptr [esi], 6
		mov	[esi+4], eax
		jmp	short loc_6ED8ABDB
; ---------------------------------------------------------------------------

loc_6ED8AC56:				; CODE XREF: sub_6ED8AB80+2Dj
		movzx	eax, byte ptr [edx+1]
		cmp	al, 72h
		jz	loc_6ED8AD50
		cmp	al, 70h
		jz	loc_6ED8AD98

loc_6ED8AC6A:				; CODE XREF: sub_6ED8AB80+3Cj
		mov	eax, ebx
		call	sub_6ED8B6E0
		test	eax, eax
		mov	ebp, eax
		jz	short loc_6ED8ACD0
		mov	eax, [eax]
		cmp	eax, 2Bh
		jz	short loc_6ED8ACF1
		cmp	eax, 2Ch
		jz	loc_6ED8AD90
		cmp	eax, 2Dh
		jz	short loc_6ED8ACB9
		cmp	eax, 2Bh
		nop
		jnz	short loc_6ED8ACD0
		mov	eax, [ebp+4]

loc_6ED8AC95:				; CODE XREF: sub_6ED8AB80+191j
		mov	edx, [eax+0Ch]
		mov	eax, 2Bh

loc_6ED8AC9D:				; CODE XREF: sub_6ED8AB80+213j
		cmp	edx, 2
		jz	loc_6ED8AE33
		cmp	edx, 3
		jz	loc_6ED8ADE0
		cmp	edx, 1
		jnz	short loc_6ED8ACD0
		cmp	eax, 2Dh
		jnz	short loc_6ED8ACC6

loc_6ED8ACB9:				; CODE XREF: sub_6ED8AB80+10Aj
		mov	eax, [ebx+0Ch]
		cmp	byte ptr [eax],	5Fh
		nop
		jz	loc_6ED8AEAC

loc_6ED8ACC6:				; CODE XREF: sub_6ED8AB80+137j
		mov	eax, ebx
		call	sub_6ED8AB80
		jmp	short loc_6ED8AD1E
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8ACD0:				; CODE XREF: sub_6ED8AB80+91j
					; sub_6ED8AB80+9Dj ...
		xor	esi, esi
		jmp	loc_6ED8ABDB
; ---------------------------------------------------------------------------

loc_6ED8ACD7:				; CODE XREF: sub_6ED8AB80+1Dj
		mov	eax, ebx
		mov	esi, [esp+3Ch+var_C]
		mov	ebx, [esp+3Ch+var_10]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		jmp	sub_6ED8BA20
; ---------------------------------------------------------------------------

loc_6ED8ACF1:				; CODE XREF: sub_6ED8AB80+FCj
		mov	edx, [ebp+4]
		mov	edi, offset aSt	; "st"
		mov	ecx, 3
		mov	eax, [ebx+30h]
		add	eax, [edx+8]
		sub	eax, 2
		mov	[ebx+30h], eax
		mov	eax, [ebp+4]
		mov	esi, [eax]
		repe cmpsb
		jnz	loc_6ED8AC95
		mov	eax, ebx
		call	sub_6ED8AEC0

loc_6ED8AD1E:				; CODE XREF: sub_6ED8AB80+14Dj
					; sub_6ED8AB80+339j
		mov	[esp+3Ch+var_3C], eax
		mov	ecx, ebp
		mov	edx, 2Eh
		mov	eax, ebx
		call	sub_6ED8A530
		mov	esi, eax
		jmp	loc_6ED8ABDB
; ---------------------------------------------------------------------------

loc_6ED8AD36:				; CODE XREF: sub_6ED8AB80+25j
		mov	eax, ebx
		mov	esi, [esp+3Ch+var_C]
		mov	ebx, [esp+3Ch+var_10]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		jmp	sub_6ED8A770
; ---------------------------------------------------------------------------

loc_6ED8AD50:				; CODE XREF: sub_6ED8AB80+DCj
		add	edx, 2
		mov	eax, ebx
		mov	[ebx+0Ch], edx
		call	sub_6ED8AEC0
		mov	esi, eax
		mov	eax, ebx
		call	sub_6ED8B860
		mov	edi, eax
		mov	eax, [ebx+0Ch]
		cmp	byte ptr [eax],	49h
		jz	loc_6ED8AE8C
		mov	[esp+3Ch+var_3C], edi

loc_6ED8AD77:				; CODE XREF: sub_6ED8AB80+327j
		mov	ecx, esi
		mov	edx, 1
		mov	eax, ebx
		call	sub_6ED8A530
		mov	esi, eax
		jmp	loc_6ED8ABDB
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8AD90:				; CODE XREF: sub_6ED8AB80+101j
		mov	edx, [ebp+4]
		jmp	loc_6ED8AC9D
; ---------------------------------------------------------------------------

loc_6ED8AD98:				; CODE XREF: sub_6ED8AB80+E4j
		add	edx, 2
		mov	eax, ebx
		mov	[ebx+0Ch], edx
		call	sub_6ED8AB80
		mov	edx, 3Ch
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	esi, eax
		jmp	loc_6ED8ABDB
; ---------------------------------------------------------------------------

loc_6ED8ADC1:				; CODE XREF: sub_6ED8AB80+55j
		mov	eax, ebx
		call	sub_6ED8BB50
		mov	ecx, esi
		mov	edx, 4
		mov	[esp+3Ch+var_3C], eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	esi, eax
		jmp	loc_6ED8ABDB
; ---------------------------------------------------------------------------

loc_6ED8ADE0:				; CODE XREF: sub_6ED8AB80+129j
		mov	eax, ebx
		call	sub_6ED8AB80
		mov	esi, eax
		mov	eax, ebx
		call	sub_6ED8AB80
		mov	edi, eax
		mov	eax, ebx
		call	sub_6ED8AB80
		mov	ecx, edi
		mov	edx, 33h
		mov	[esp+3Ch+var_3C], eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	ecx, esi
		mov	edx, 32h
		mov	[esp+3Ch+var_3C], eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	ecx, ebp
		mov	edx, 31h
		mov	[esp+3Ch+var_3C], eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	esi, eax
		jmp	loc_6ED8ABDB
; ---------------------------------------------------------------------------

loc_6ED8AE33:				; CODE XREF: sub_6ED8AB80+120j
		mov	eax, ebx
		mov	edi, offset aCl	; "cl"
		call	sub_6ED8AB80
		mov	ecx, 3
		mov	[esp+3Ch+var_20], eax
		mov	eax, [ebp+4]
		mov	esi, [eax]
		repe cmpsb
		jnz	short loc_6ED8AE83
		mov	eax, ebx
		call	sub_6ED8C4C0

loc_6ED8AE58:				; CODE XREF: sub_6ED8AB80+30Aj
		mov	ecx, [esp+3Ch+var_20]
		mov	edx, 30h
		mov	[esp+3Ch+var_3C], eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	ecx, ebp
		mov	edx, 2Fh
		mov	[esp+3Ch+var_3C], eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	esi, eax
		jmp	loc_6ED8ABDB
; ---------------------------------------------------------------------------

loc_6ED8AE83:				; CODE XREF: sub_6ED8AB80+2CFj
		mov	eax, ebx
		call	sub_6ED8AB80
		jmp	short loc_6ED8AE58
; ---------------------------------------------------------------------------

loc_6ED8AE8C:				; CODE XREF: sub_6ED8AB80+1EEj
		mov	eax, ebx
		call	sub_6ED8BB50
		mov	ecx, edi
		mov	edx, 4
		mov	[esp+3Ch+var_3C], eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	[esp+3Ch+var_3C], eax
		jmp	loc_6ED8AD77
; ---------------------------------------------------------------------------

loc_6ED8AEAC:				; CODE XREF: sub_6ED8AB80+140j
		add	eax, 1
		mov	[ebx+0Ch], eax
		mov	eax, ebx
		call	sub_6ED8C4C0
		jmp	loc_6ED8AD1E
sub_6ED8AB80	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8AEC0	proc near		; CODE XREF: sub_6ED8AB80+199p
					; sub_6ED8AB80+1D8p ...

var_3C		= dword	ptr -3Ch
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 3Ch
		mov	[esp+3Ch+var_10], ebx
		mov	ebx, eax
		mov	[esp+3Ch+var_C], esi
		mov	[esp+3Ch+var_8], edi
		mov	[esp+3Ch+var_4], ebp
		mov	ecx, [eax+0Ch]
		movzx	eax, byte ptr [ecx]
		cmp	al, 56h
		jz	short loc_6ED8AF12
		cmp	al, 72h
		jz	short loc_6ED8AF12
		cmp	al, 4Bh
		jz	short loc_6ED8AF12
		lea	edx, [eax-30h]
		cmp	dl, 4Ah		; switch 75 cases
		lea	esi, [esi+0]
		jbe	short loc_6ED8AF08

loc_6ED8AEF2:				; CODE XREF: sub_6ED8AEC0+4Bj
					; sub_6ED8AEC0+63j ...
		xor	eax, eax	; jumptable 6ED8AF0B default case

loc_6ED8AEF4:				; CODE XREF: sub_6ED8AEC0+96j
					; sub_6ED8AEC0+A7j ...
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED8AF08:				; CODE XREF: sub_6ED8AEC0+30j
		movzx	edx, dl
		jmp	ds:off_6EDA5290[edx*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_6ED8AF12:				; CODE XREF: sub_6ED8AEC0+1Dj
					; sub_6ED8AEC0+21j ...
		xor	ecx, ecx
		mov	eax, ebx
		lea	edx, [esp+3Ch+var_20]
		call	sub_6ED8A6D0
		test	eax, eax
		mov	esi, eax
		jz	short loc_6ED8AEF2 ; jumptable 6ED8AF0B	default	case
		mov	eax, ebx
		call	sub_6ED8AEC0
		test	eax, eax
		mov	[esi], eax
		jz	short loc_6ED8AEF2 ; jumptable 6ED8AF0B	default	case
		mov	eax, [esp+3Ch+var_20]
		test	eax, eax
		jz	short loc_6ED8AEF2 ; jumptable 6ED8AF0B	default	case
		lea	esi, [esi+0]

loc_6ED8AF40:				; CODE XREF: sub_6ED8AEC0+A5j
					; sub_6ED8AEC0+6A8j
		mov	edx, [ebx+20h]
		cmp	edx, [ebx+24h]
		jge	short loc_6ED8AEF2 ; jumptable 6ED8AF0B	default	case
		mov	ecx, [ebx+1Ch]
		add	dword ptr [ebx+20h], 1
		mov	[ecx+edx*4], eax
		mov	eax, [esp+3Ch+var_20]
		jmp	short loc_6ED8AEF4
; ---------------------------------------------------------------------------

loc_6ED8AF58:				; CODE XREF: sub_6ED8AEC0+4Bj
					; DATA XREF: .rdata:off_6EDA5290o
		mov	eax, ebx	; jumptable 6ED8AF0B cases 0-9,30,42
		call	sub_6ED8BC50
		mov	[esp+3Ch+var_20], eax

loc_6ED8AF63:				; CODE XREF: sub_6ED8AEC0+D6j
					; sub_6ED8AEC0+12Bj ...
		test	eax, eax
		jnz	short loc_6ED8AF40
		jmp	short loc_6ED8AEF4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8AF70:				; CODE XREF: sub_6ED8AEC0+4Bj
					; DATA XREF: .rdata:off_6EDA5290o
		add	ecx, 1		; jumptable 6ED8AF0B case 19
		mov	eax, ebx
		mov	[ebx+0Ch], ecx
		call	sub_6ED8AEC0
		mov	edx, 21h
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	[esp+3Ch+var_20], eax
		jmp	short loc_6ED8AF63
; ---------------------------------------------------------------------------

loc_6ED8AF98:				; CODE XREF: sub_6ED8AEC0+4Bj
					; DATA XREF: .rdata:off_6EDA5290o
		lea	eax, [ecx+1]	; jumptable 6ED8AF0B case 20
		mov	[ebx+0Ch], eax
		movzx	eax, byte ptr [ecx+1]
		test	al, al
		jz	loc_6ED8AEF2	; jumptable 6ED8AF0B default case
		sub	eax, 46h
		add	ecx, 2
		cmp	al, 2Eh		; switch 47 cases
		mov	[ebx+0Ch], ecx
		ja	loc_6ED8AEF2	; jumptable 6ED8AF0B default case
		movzx	eax, al
		jmp	ds:off_6EDA53BC[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_6ED8AFC5:				; CODE XREF: sub_6ED8AEC0+4Bj
					; DATA XREF: .rdata:off_6EDA5290o
		add	ecx, 1		; jumptable 6ED8AF0B case 23
		mov	eax, ebx
		mov	[ebx+0Ch], ecx
		call	sub_6ED8AEC0
		mov	edx, 22h
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	[esp+3Ch+var_20], eax
		jmp	loc_6ED8AF63
; ---------------------------------------------------------------------------

loc_6ED8AFF0:				; CODE XREF: sub_6ED8AEC0+4Bj
					; DATA XREF: .rdata:off_6EDA5290o
		add	ecx, 1		; jumptable 6ED8AF0B case 31
		mov	eax, ebx
		mov	[ebx+0Ch], ecx
		call	sub_6ED8AEC0
		mov	edx, 20h
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	[esp+3Ch+var_20], eax
		jmp	loc_6ED8AF63
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8B020:				; CODE XREF: sub_6ED8AEC0+4Bj
					; DATA XREF: .rdata:off_6EDA5290o
		add	ecx, 1		; jumptable 6ED8AF0B case 32
		mov	eax, ebx
		mov	[ebx+0Ch], ecx
		call	sub_6ED8AEC0
		mov	edx, 1Eh
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	[esp+3Ch+var_20], eax
		jmp	loc_6ED8AF63
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8B050:				; CODE XREF: sub_6ED8AEC0+4Bj
					; DATA XREF: .rdata:off_6EDA5290o
		add	ecx, 1		; jumptable 6ED8AF0B case 34
		mov	eax, ebx
		mov	[ebx+0Ch], ecx
		call	sub_6ED8AEC0
		mov	edx, 1Fh
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	[esp+3Ch+var_20], eax
		jmp	loc_6ED8AF63
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8B080:				; CODE XREF: sub_6ED8AEC0+4Bj
					; DATA XREF: .rdata:off_6EDA5290o
		movzx	eax, byte ptr [ecx+1] ;	jumptable 6ED8AF0B case	35
		lea	edx, [eax-30h]
		cmp	dl, 9
		jbe	short loc_6ED8B09B
		cmp	al, 5Fh
		jz	short loc_6ED8B09B
		sub	eax, 41h
		cmp	al, 19h
		ja	loc_6ED8B552

loc_6ED8B09B:				; CODE XREF: sub_6ED8AEC0+1CAj
					; sub_6ED8AEC0+1CEj
		xor	edx, edx
		mov	eax, ebx
		call	sub_6ED8A7E0
		mov	edx, [ebx+0Ch]
		mov	[esp+3Ch+var_20], eax
		cmp	byte ptr [edx],	49h
		jnz	loc_6ED8AEF4
		mov	eax, ebx
		call	sub_6ED8BB50
		mov	ecx, [esp+3Ch+var_20]
		mov	edx, 4
		mov	[esp+3Ch+var_3C], eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	[esp+3Ch+var_20], eax
		jmp	loc_6ED8AF63
; ---------------------------------------------------------------------------

loc_6ED8B0D7:				; CODE XREF: sub_6ED8AEC0+4Bj
					; DATA XREF: .rdata:off_6EDA5290o
		mov	eax, ebx	; jumptable 6ED8AF0B case 36
		call	sub_6ED8A770
		mov	edx, [ebx+0Ch]
		mov	[esp+3Ch+var_20], eax
		cmp	byte ptr [edx],	49h
		jnz	loc_6ED8AF63
		test	eax, eax
		jz	loc_6ED8AEF4
		mov	edx, [ebx+20h]
		cmp	edx, [ebx+24h]
		jge	loc_6ED8AEF2	; jumptable 6ED8AF0B default case
		mov	ecx, [ebx+1Ch]
		add	dword ptr [ebx+20h], 1
		mov	[ecx+edx*4], eax
		mov	eax, ebx
		call	sub_6ED8BB50
		mov	ecx, [esp+3Ch+var_20]
		mov	edx, 4
		mov	[esp+3Ch+var_3C], eax
		mov	eax, ebx
		call	sub_6ED8A530

loc_6ED8B126:				; CODE XREF: sub_6ED8AEC0+29Bj
					; sub_6ED8AEC0+330j ...
		mov	[esp+3Ch+var_20], eax
		jmp	loc_6ED8AF63
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8B130:				; CODE XREF: sub_6ED8AEC0+4Bj
					; DATA XREF: .rdata:off_6EDA5290o
		add	ecx, 1		; jumptable 6ED8AF0B case 37
		mov	eax, ebx
		mov	[ebx+0Ch], ecx
		call	sub_6ED8AAB0
		mov	esi, eax
		mov	[esp+3Ch+var_20], eax
		mov	eax, ebx
		call	sub_6ED8AEC0
		mov	edx, 1Dh
		mov	[esp+3Ch+var_3C], esi
		mov	ecx, eax
		mov	eax, ebx
		call	sub_6ED8A530
		jmp	short loc_6ED8B126
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8B160:				; CODE XREF: sub_6ED8AEC0+4Bj
					; DATA XREF: .rdata:off_6EDA5290o
		movsx	eax, al		; jumptable 6ED8AF0B cases 49-58,60-63,67,68,70-74
		lea	eax, [eax+eax*4]
		lea	edx, (off_6EDA5290+9Ch)[eax*4]
		test	edx, edx
		jz	loc_6ED8B58D
		mov	ecx, [ebx+14h]
		cmp	ecx, [ebx+18h]
		jl	loc_6ED8B520
		mov	edx, large ds:4
		xor	eax, eax

loc_6ED8B189:				; CODE XREF: sub_6ED8AEC0+680j
					; sub_6ED8AEC0+6D2j ...
		mov	edx, [edx+4]
		add	[ebx+30h], edx
		add	dword ptr [ebx+0Ch], 1
		jmp	loc_6ED8AEF4
; ---------------------------------------------------------------------------

loc_6ED8B198:				; CODE XREF: sub_6ED8AEC0+4Bj
					; DATA XREF: .rdata:off_6EDA5290o
		add	ecx, 1		; jumptable 6ED8AF0B case 69
		mov	eax, ebx
		mov	[ebx+0Ch], ecx
		call	sub_6ED8AAB0
		mov	edx, 24h
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	[esp+3Ch+var_20], eax
		jmp	loc_6ED8AF63
; ---------------------------------------------------------------------------

loc_6ED8B1C3:				; CODE XREF: sub_6ED8AEC0+4Bj
					; DATA XREF: .rdata:off_6EDA5290o
		add	ecx, 1		; jumptable 6ED8AF0B case 29
		mov	eax, ebx
		mov	[ebx+0Ch], ecx
		lea	esi, [esp+3Ch+var_24]
		call	sub_6ED8AEC0
		mov	ecx, 1
		mov	edx, esi
		mov	edi, eax
		mov	eax, ebx
		call	sub_6ED8A6D0
		test	eax, eax
		mov	ebp, eax
		jnz	loc_6ED8B293

loc_6ED8B1EE:				; CODE XREF: sub_6ED8AEC0+36Fj
					; sub_6ED8AEC0+377j ...
		xor	eax, eax
		jmp	loc_6ED8B126
; ---------------------------------------------------------------------------

loc_6ED8B1F5:				; CODE XREF: sub_6ED8AEC0+4Bj
					; DATA XREF: .rdata:off_6EDA5290o
		lea	edx, [ecx+1]	; jumptable 6ED8AF0B case 17
		xor	esi, esi
		mov	[ebx+0Ch], edx
		movzx	eax, byte ptr [ecx+1]
		cmp	al, 5Fh
		jz	short loc_6ED8B239
		sub	eax, 30h
		cmp	al, 9
		ja	loc_6ED8B575
		mov	ecx, edx

loc_6ED8B212:				; CODE XREF: sub_6ED8AEC0+360j
		add	ecx, 1
		mov	[ebx+0Ch], ecx
		movzx	eax, byte ptr [ecx]
		sub	eax, 30h
		cmp	al, 9
		jbe	short loc_6ED8B212
		sub	ecx, edx
		mov	eax, ebx
		call	sub_6ED8A5B0
		test	eax, eax
		mov	esi, eax
		jz	short loc_6ED8B1EE

loc_6ED8B231:				; CODE XREF: sub_6ED8AEC0+6C0j
		mov	edx, [ebx+0Ch]
		cmp	byte ptr [edx],	5Fh
		jnz	short loc_6ED8B1EE

loc_6ED8B239:				; CODE XREF: sub_6ED8AEC0+343j
		add	edx, 1
		mov	eax, ebx
		mov	[ebx+0Ch], edx
		call	sub_6ED8AEC0
		mov	ecx, esi
		mov	edx, 26h
		mov	[esp+3Ch+var_3C], eax
		mov	eax, ebx
		call	sub_6ED8A530
		jmp	loc_6ED8B126
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8B260:				; CODE XREF: sub_6ED8AEC0+4Bj
					; DATA XREF: .rdata:off_6EDA5290o
		lea	eax, [ecx+1]	; jumptable 6ED8AF0B case 22
		mov	[ebx+0Ch], eax
		cmp	byte ptr [ecx+1], 59h
		jz	loc_6ED8B5A7

loc_6ED8B270:				; CODE XREF: sub_6ED8AEC0+6EDj
		mov	edx, 1
		mov	eax, ebx
		call	sub_6ED8B5F0
		mov	edx, [ebx+0Ch]
		cmp	byte ptr [edx],	45h
		jnz	loc_6ED8B1EE
		add	edx, 1
		mov	[ebx+0Ch], edx
		jmp	loc_6ED8B126
; ---------------------------------------------------------------------------

loc_6ED8B293:				; CODE XREF: sub_6ED8AEC0+328j
		mov	eax, ebx
		call	sub_6ED8AEC0
		test	eax, eax
		mov	[ebp+0], eax
		jz	loc_6ED8B1EE
		cmp	ebp, esi
		jz	short loc_6ED8B2B2
		cmp	dword ptr [eax], 25h
		jnz	loc_6ED8B5B2

loc_6ED8B2B2:				; CODE XREF: sub_6ED8AEC0+3E7j
					; sub_6ED8AEC0+714j
		mov	eax, [esp+3Ch+var_24]
		mov	ecx, edi
		mov	edx, 27h
		mov	[esp+3Ch+var_3C], eax
		mov	eax, ebx
		call	sub_6ED8A530
		jmp	loc_6ED8B126
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8B2D0:				; CODE XREF: sub_6ED8AEC0+FEj
					; DATA XREF: .rdata:off_6EDA53BCo
		mov	edx, [ebx+14h]	; jumptable 6ED8AFBE case 45
		cmp	edx, [ebx+18h]
		jge	loc_6ED8B545
		lea	eax, [edx+edx*2]
		add	edx, 1
		shl	eax, 2
		add	eax, [ebx+10h]
		mov	[ebx+14h], edx
		test	eax, eax
		jz	loc_6ED8B5D9
		mov	dword ptr [eax], 23h
		mov	edx, offset off_6EDA5D18
		mov	dword ptr [eax+4], offset off_6EDA5D18

loc_6ED8B305:				; CODE XREF: sub_6ED8AEC0+4A6j
					; sub_6ED8AEC0+4DDj ...
		mov	edx, [edx+4]
		add	[ebx+30h], edx
		jmp	loc_6ED8AEF4
; ---------------------------------------------------------------------------

loc_6ED8B310:				; CODE XREF: sub_6ED8AEC0+FEj
					; DATA XREF: .rdata:off_6EDA53BCo
		mov	eax, ebx	; jumptable 6ED8AFBE case 42
		call	sub_6ED8AEC0
		mov	edx, 3Ch
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_6ED8A530
		jmp	loc_6ED8AEF4
; ---------------------------------------------------------------------------

loc_6ED8B331:				; CODE XREF: sub_6ED8AEC0+FEj
					; DATA XREF: .rdata:off_6EDA53BCo
		mov	edx, [ebx+14h]	; jumptable 6ED8AFBE case 35
		cmp	edx, [ebx+18h]
		jge	loc_6ED8B545
		lea	eax, [edx+edx*2]
		add	edx, 1
		shl	eax, 2
		add	eax, [ebx+10h]
		mov	[ebx+14h], edx
		test	eax, eax
		jz	loc_6ED8B5D9
		mov	dword ptr [eax], 23h
		mov	edx, offset off_6EDA5D2C
		mov	dword ptr [eax+4], offset off_6EDA5D2C
		jmp	short loc_6ED8B305
; ---------------------------------------------------------------------------

loc_6ED8B368:				; CODE XREF: sub_6ED8AEC0+FEj
					; DATA XREF: .rdata:off_6EDA53BCo
		mov	edx, [ebx+14h]	; jumptable 6ED8AFBE case 31
		cmp	edx, [ebx+18h]
		jge	loc_6ED8B545
		lea	eax, [edx+edx*2]
		add	edx, 1
		shl	eax, 2
		add	eax, [ebx+10h]
		mov	[ebx+14h], edx
		test	eax, eax
		jz	loc_6ED8B5D9
		mov	dword ptr [eax], 23h
		mov	edx, offset off_6EDA5CF0
		mov	dword ptr [eax+4], offset off_6EDA5CF0
		jmp	loc_6ED8B305
; ---------------------------------------------------------------------------

loc_6ED8B3A2:				; CODE XREF: sub_6ED8AEC0+FEj
					; DATA XREF: .rdata:off_6EDA53BCo
		mov	edx, [ebx+14h]	; jumptable 6ED8AFBE case 30
		cmp	edx, [ebx+18h]
		jge	loc_6ED8B545
		lea	eax, [edx+edx*2]
		add	edx, 1
		shl	eax, 2
		add	eax, [ebx+10h]
		mov	[ebx+14h], edx
		test	eax, eax
		jz	loc_6ED8B5D9
		mov	dword ptr [eax], 23h
		mov	edx, offset off_6EDA5CDC
		mov	dword ptr [eax+4], offset off_6EDA5CDC
		jmp	loc_6ED8B305
; ---------------------------------------------------------------------------

loc_6ED8B3DC:				; CODE XREF: sub_6ED8AEC0+FEj
					; DATA XREF: .rdata:off_6EDA53BCo
		mov	eax, ebx	; jumptable 6ED8AFBE cases 14,46
		call	sub_6ED8AB80
		mov	edx, 39h
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_6ED8A530
		test	eax, eax
		mov	[esp+3Ch+var_20], eax
		jz	loc_6ED8AEF4
		mov	ecx, [ebx+0Ch]
		movzx	edx, byte ptr [ecx]
		test	dl, dl
		jz	loc_6ED8AEF2	; jumptable 6ED8AF0B default case
		add	ecx, 1
		cmp	dl, 45h
		mov	[ebx+0Ch], ecx
		jnz	loc_6ED8AEF2	; jumptable 6ED8AF0B default case
		jmp	loc_6ED8AEF4
; ---------------------------------------------------------------------------

loc_6ED8B426:				; CODE XREF: sub_6ED8AEC0+FEj
					; DATA XREF: .rdata:off_6EDA53BCo
		mov	eax, [ebx+14h]	; jumptable 6ED8AFBE case 0
		xor	esi, esi
		cmp	eax, [ebx+18h]
		jge	short loc_6ED8B43F
		lea	esi, [eax+eax*2]
		add	eax, 1
		shl	esi, 2
		add	esi, [ebx+10h]
		mov	[ebx+14h], eax

loc_6ED8B43F:				; CODE XREF: sub_6ED8AEC0+56Ej
		mov	eax, [ebx+0Ch]
		mov	[esp+3Ch+var_20], esi
		mov	dword ptr [esi], 28h
		movzx	eax, byte ptr [eax]
		sub	eax, 30h
		cmp	al, 9
		setbe	al
		movzx	eax, al
		test	ax, ax
		mov	[esi+8], ax
		jnz	loc_6ED8B597

loc_6ED8B467:				; CODE XREF: sub_6ED8AEC0+6E2j
		mov	eax, ebx
		call	sub_6ED8AEC0
		mov	[esi+4], eax
		mov	eax, [esp+3Ch+var_20]
		mov	eax, [eax+4]
		test	eax, eax
		jz	loc_6ED8AEF2	; jumptable 6ED8AF0B default case
		mov	eax, ebx
		call	sub_6ED8A610
		mov	ecx, [ebx+0Ch]
		xor	edx, edx
		movzx	eax, byte ptr [ecx]
		test	al, al
		jz	short loc_6ED8B4A0
		add	ecx, 1
		xor	edx, edx
		cmp	al, 73h
		mov	[ebx+0Ch], ecx
		setz	dl

loc_6ED8B4A0:				; CODE XREF: sub_6ED8AEC0+5D1j
		mov	eax, [esp+3Ch+var_20]
		mov	[eax+0Ah], dx
		jmp	loc_6ED8AEF4
; ---------------------------------------------------------------------------

loc_6ED8B4AD:				; CODE XREF: sub_6ED8AEC0+FEj
					; DATA XREF: .rdata:off_6EDA53BCo
		mov	edx, [ebx+14h]	; jumptable 6ED8AFBE case 34
		cmp	edx, [ebx+18h]
		jge	loc_6ED8B545
		lea	eax, [edx+edx*2]
		add	edx, 1
		shl	eax, 2
		add	eax, [ebx+10h]
		mov	[ebx+14h], edx
		test	eax, eax
		jz	loc_6ED8B5D9
		mov	dword ptr [eax], 23h
		mov	edx, offset off_6EDA5D04
		mov	dword ptr [eax+4], offset off_6EDA5D04
		jmp	loc_6ED8B305
; ---------------------------------------------------------------------------

loc_6ED8B4E7:				; CODE XREF: sub_6ED8AEC0+FEj
					; DATA XREF: .rdata:off_6EDA53BCo
		mov	edx, [ebx+14h]	; jumptable 6ED8AFBE case 32
		cmp	edx, [ebx+18h]
		jge	short loc_6ED8B545
		lea	eax, [edx+edx*2]
		add	edx, 1
		shl	eax, 2
		add	eax, [ebx+10h]
		mov	[ebx+14h], edx
		test	eax, eax
		jz	loc_6ED8B5D9
		mov	dword ptr [eax], 23h
		mov	edx, offset off_6EDA5CC8
		mov	dword ptr [eax+4], offset off_6EDA5CC8
		jmp	loc_6ED8B305
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8B520:				; CODE XREF: sub_6ED8AEC0+2BBj
		lea	eax, [ecx+ecx*2]
		add	ecx, 1
		shl	eax, 2
		add	eax, [ebx+10h]
		mov	[ebx+14h], ecx
		test	eax, eax
		jz	loc_6ED8B5E1
		mov	dword ptr [eax], 23h
		mov	[eax+4], edx
		jmp	loc_6ED8B189
; ---------------------------------------------------------------------------

loc_6ED8B545:				; CODE XREF: sub_6ED8AEC0+416j
					; sub_6ED8AEC0+477j ...
		mov	edx, large ds:4
		xor	eax, eax
		jmp	loc_6ED8B305
; ---------------------------------------------------------------------------

loc_6ED8B552:				; CODE XREF: sub_6ED8AEC0+1D5j
		mov	eax, ebx
		call	sub_6ED8BC50
		test	eax, eax
		jz	loc_6ED8AEF4
		cmp	dword ptr [eax], 16h
		mov	[esp+3Ch+var_20], eax
		jnz	loc_6ED8AF40
		xchg	ax, ax
		jmp	loc_6ED8AEF4
; ---------------------------------------------------------------------------

loc_6ED8B575:				; CODE XREF: sub_6ED8AEC0+34Aj
		mov	eax, ebx
		call	sub_6ED8AB80
		test	eax, eax
		mov	esi, eax
		jnz	loc_6ED8B231
		xor	eax, eax
		jmp	loc_6ED8B126
; ---------------------------------------------------------------------------

loc_6ED8B58D:				; CODE XREF: sub_6ED8AEC0+2AFj
		mov	edx, [edx+4]
		xor	eax, eax
		jmp	loc_6ED8B189
; ---------------------------------------------------------------------------

loc_6ED8B597:				; CODE XREF: sub_6ED8AEC0+5A1j
		mov	eax, ebx
		call	sub_6ED8A610
		mov	esi, [esp+3Ch+var_20]
		jmp	loc_6ED8B467
; ---------------------------------------------------------------------------

loc_6ED8B5A7:				; CODE XREF: sub_6ED8AEC0+3AAj
		add	ecx, 2
		mov	[ebx+0Ch], ecx
		jmp	loc_6ED8B270
; ---------------------------------------------------------------------------

loc_6ED8B5B2:				; CODE XREF: sub_6ED8AEC0+3ECj
		mov	edx, [esp+3Ch+var_24]
		test	edx, edx
		jz	loc_6ED8B1EE
		mov	eax, [ebx+20h]
		cmp	eax, [ebx+24h]
		jge	loc_6ED8B1EE
		mov	ecx, [ebx+1Ch]
		add	dword ptr [ebx+20h], 1
		mov	[ecx+eax*4], edx
		jmp	loc_6ED8B2B2
; ---------------------------------------------------------------------------

loc_6ED8B5D9:				; CODE XREF: sub_6ED8AEC0+42Dj
					; sub_6ED8AEC0+48Ej ...
		mov	edx, [eax+4]
		jmp	loc_6ED8B305
; ---------------------------------------------------------------------------

loc_6ED8B5E1:				; CODE XREF: sub_6ED8AEC0+671j
		mov	edx, [eax+4]
		jmp	loc_6ED8B189
sub_6ED8AEC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8B5F0	proc near		; CODE XREF: sub_6ED8AEC0+3B7p
					; sub_6ED8BF60+71p

var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h

		push	ebp
		push	edi
		push	esi
		mov	esi, edx
		push	ebx
		mov	ebx, eax
		sub	esp, 2Ch
		mov	edx, [eax+0Ch]
		cmp	byte ptr [edx],	4Ah
		jz	loc_6ED8B6A0

loc_6ED8B607:				; CODE XREF: sub_6ED8B5F0+BBj
		mov	[esp+3Ch+var_20], 0
		lea	ebp, [esp+3Ch+var_20]
		xor	edi, edi
		jmp	short loc_6ED8B61E
; ---------------------------------------------------------------------------

loc_6ED8B617:				; CODE XREF: sub_6ED8B5F0+46j
		mov	edx, [ebx+0Ch]
		xor	esi, esi
		mov	edi, eax

loc_6ED8B61E:				; CODE XREF: sub_6ED8B5F0+25j
		movzx	eax, byte ptr [edx]
		cmp	al, 45h
		jz	short loc_6ED8B661

loc_6ED8B625:				; CODE XREF: sub_6ED8B5F0+6Fj
		test	al, al
		jz	short loc_6ED8B661
		mov	eax, ebx
		call	sub_6ED8AEC0
		test	eax, eax
		jz	short loc_6ED8B690
		test	esi, esi
		jnz	short loc_6ED8B617
		mov	ecx, eax
		mov	edx, 29h
		mov	eax, ebx
		mov	[esp+3Ch+var_3C], 0
		call	sub_6ED8A530
		test	eax, eax
		mov	[ebp+0], eax
		jz	short loc_6ED8B690
		mov	edx, [ebx+0Ch]
		lea	ebp, [eax+8]
		movzx	eax, byte ptr [edx]
		cmp	al, 45h
		jnz	short loc_6ED8B625

loc_6ED8B661:				; CODE XREF: sub_6ED8B5F0+33j
					; sub_6ED8B5F0+37j
		mov	eax, [esp+3Ch+var_20]
		test	eax, eax
		jz	short loc_6ED8B690
		mov	edx, [eax+8]
		test	edx, edx
		jz	short loc_6ED8B6B0

loc_6ED8B670:				; CODE XREF: sub_6ED8B5F0+C6j
					; sub_6ED8B5F0+CFj ...
		mov	[esp+3Ch+var_3C], eax
		mov	ecx, edi
		mov	eax, ebx
		mov	edx, 25h
		call	sub_6ED8A530
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8B690:				; CODE XREF: sub_6ED8B5F0+42j
					; sub_6ED8B5F0+62j ...
		add	esp, 2Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8B6A0:				; CODE XREF: sub_6ED8B5F0+11j
		add	edx, 1
		mov	esi, 1
		mov	[eax+0Ch], edx
		jmp	loc_6ED8B607
; ---------------------------------------------------------------------------

loc_6ED8B6B0:				; CODE XREF: sub_6ED8B5F0+7Ej
		mov	edx, [eax+4]
		cmp	dword ptr [edx], 23h
		jnz	short loc_6ED8B670
		mov	edx, [edx+4]
		cmp	dword ptr [edx+10h], 9
		jnz	short loc_6ED8B670
		mov	eax, [edx+4]
		sub	[ebx+30h], eax
		xor	eax, eax
		mov	[esp+3Ch+var_20], 0
		jmp	short loc_6ED8B670
sub_6ED8B5F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8B6E0	proc near		; CODE XREF: sub_6ED8AB80+ECp
					; sub_6ED8B860+55p

var_4C		= dword	ptr -4Ch
var_2D		= byte ptr -2Dh
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h

		push	ebp
		push	edi
		push	esi
		push	ebx
		xor	ebx, ebx
		sub	esp, 3Ch
		mov	[esp+4Ch+var_20], eax
		mov	eax, [eax+0Ch]
		movzx	ebp, byte ptr [eax]
		mov	ecx, ebp
		test	cl, cl
		jz	short loc_6ED8B726
		mov	ebx, [esp+4Ch+var_20]
		lea	edx, [eax+1]
		mov	[ebx+0Ch], edx
		movzx	ebx, byte ptr [eax+1]
		test	bl, bl
		jz	short loc_6ED8B715
		mov	esi, [esp+4Ch+var_20]
		add	eax, 2
		mov	[esi+0Ch], eax

loc_6ED8B715:				; CODE XREF: sub_6ED8B6E0+29j
		mov	eax, ebp
		cmp	al, 76h
		jnz	short loc_6ED8B795
		lea	eax, [ebx-30h]
		cmp	al, 9
		jbe	loc_6ED8B7D0

loc_6ED8B726:				; CODE XREF: sub_6ED8B6E0+17j
					; sub_6ED8B6E0+B8j ...
		mov	esi, 34h
		xor	eax, eax
		mov	edi, ebx
		nop

loc_6ED8B730:				; CODE XREF: sub_6ED8B6E0+9Cj
		mov	edx, esi
		sub	edx, eax
		mov	ecx, edx
		shr	ecx, 1Fh
		lea	edx, [ecx+edx]
		sar	edx, 1
		add	edx, eax
		mov	ecx, edx
		shl	ecx, 4
		lea	ebx, off_6EDA60C0[ecx]
		mov	ecx, ds:off_6EDA60C0[ecx]
		mov	[esp+4Ch+var_24], ebx
		movzx	ebx, byte ptr [ecx]
		mov	[esp+4Ch+var_2D], bl
		mov	ebx, ebp
		cmp	bl, [esp+4Ch+var_2D]
		jnz	short loc_6ED8B788
		movzx	ecx, byte ptr [ecx+1]
		mov	ebx, edi
		cmp	bl, cl
		jz	loc_6ED8B820
		mov	ebx, edi
		cmp	cl, bl
		jle	short loc_6ED8B790

loc_6ED8B778:				; CODE XREF: sub_6ED8B6E0+AEj
		mov	esi, edx

loc_6ED8B77A:				; CODE XREF: sub_6ED8B6E0+B3j
		cmp	eax, esi
		jnz	short loc_6ED8B730

loc_6ED8B77E:				; CODE XREF: sub_6ED8B6E0+105j
					; sub_6ED8B6E0+11Cj ...
		xor	eax, eax

loc_6ED8B780:				; CODE XREF: sub_6ED8B6E0+118j
					; sub_6ED8B6E0+134j ...
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED8B788:				; CODE XREF: sub_6ED8B6E0+82j
		mov	ecx, ebp
		cmp	[esp+4Ch+var_2D], cl
		jg	short loc_6ED8B778

loc_6ED8B790:				; CODE XREF: sub_6ED8B6E0+96j
		lea	eax, [edx+1]
		jmp	short loc_6ED8B77A
; ---------------------------------------------------------------------------

loc_6ED8B795:				; CODE XREF: sub_6ED8B6E0+39j
		cmp	bl, 76h
		jnz	short loc_6ED8B726
		mov	eax, ebp
		cmp	al, 63h
		xchg	ax, ax
		jnz	short loc_6ED8B726
		mov	eax, [esp+4Ch+var_20]
		call	sub_6ED8AEC0
		mov	edx, 2Dh
		mov	[esp+4Ch+var_4C], 0
		mov	ecx, eax
		mov	eax, [esp+4Ch+var_20]
		call	sub_6ED8A530
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8B7D0:				; CODE XREF: sub_6ED8B6E0+40j
		mov	eax, [esp+4Ch+var_20]
		call	sub_6ED8AAB0
		mov	esi, [esp+4Ch+var_20]
		mov	edx, [esi+14h]
		cmp	edx, [esi+18h]
		mov	ecx, eax
		jge	short loc_6ED8B77E
		lea	eax, [edx+edx*2]
		add	edx, 1
		shl	eax, 2
		add	eax, [esi+10h]
		mov	[esi+14h], edx
		test	eax, eax
		jz	short loc_6ED8B780
		test	ecx, ecx
		jz	loc_6ED8B77E
		movsx	edx, bl
		sub	edx, 30h
		mov	dword ptr [eax], 2Ch
		mov	[eax+4], edx
		mov	[eax+8], ecx
		jmp	loc_6ED8B780
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8B820:				; CODE XREF: sub_6ED8B6E0+8Cj
		mov	esi, [esp+4Ch+var_20]
		mov	edx, [esi+14h]
		cmp	edx, [esi+18h]
		jge	loc_6ED8B77E
		lea	eax, [edx+edx*2]
		add	edx, 1
		shl	eax, 2
		add	eax, [esi+10h]
		mov	[esi+14h], edx
		test	eax, eax
		jz	loc_6ED8B780
		mov	edx, [esp+4Ch+var_24]
		mov	dword ptr [eax], 2Bh
		mov	[eax+4], edx
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_6ED8B6E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8B860	proc near		; CODE XREF: sub_6ED8AB80+44p
					; sub_6ED8AB80+1E1p ...
		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 4
		mov	edx, [eax+0Ch]
		movzx	eax, byte ptr [edx]
		lea	ecx, [eax-30h]
		cmp	cl, 9
		jbe	short loc_6ED8B8D4
		lea	ecx, [eax-61h]
		cmp	cl, 19h
		jbe	short loc_6ED8B8B3
		lea	ecx, [eax-43h]
		cmp	cl, 1
		ja	loc_6ED8B941
		mov	ecx, [ebx+2Ch]
		test	ecx, ecx
		jz	short loc_6ED8B89F
		mov	esi, [ecx]
		test	esi, esi
		jnz	short loc_6ED8B8E0

loc_6ED8B896:				; CODE XREF: sub_6ED8B860+83j
		mov	eax, [ecx+8]
		add	[ebx+30h], eax
		movzx	eax, byte ptr [edx]

loc_6ED8B89F:				; CODE XREF: sub_6ED8B860+2Ej
		cmp	al, 43h
		jz	short loc_6ED8B8E9

loc_6ED8B8A3:				; CODE XREF: sub_6ED8B860+87j
		cmp	al, 44h
		jz	loc_6ED8B970

loc_6ED8B8AB:				; CODE XREF: sub_6ED8B860+A0j
					; sub_6ED8B860+B3j ...
		xor	eax, eax

loc_6ED8B8AD:				; CODE XREF: sub_6ED8B860+5Cj
					; sub_6ED8B860+61j ...
		add	esp, 4
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_6ED8B8B3:				; CODE XREF: sub_6ED8B860+1Bj
		mov	eax, ebx
		call	sub_6ED8B6E0
		test	eax, eax
		jz	short loc_6ED8B8AD
		cmp	dword ptr [eax], 2Bh
		jnz	short loc_6ED8B8AD
		mov	ecx, [eax+4]
		mov	edx, [ebx+30h]
		add	edx, [ecx+8]
		add	edx, 7
		mov	[ebx+30h], edx
		jmp	short loc_6ED8B8AD
; ---------------------------------------------------------------------------

loc_6ED8B8D4:				; CODE XREF: sub_6ED8B860+13j
		add	esp, 4
		mov	eax, ebx
		pop	ebx
		pop	esi
		jmp	sub_6ED8AAB0
; ---------------------------------------------------------------------------

loc_6ED8B8E0:				; CODE XREF: sub_6ED8B860+34j
		cmp	esi, 16h
		jz	short loc_6ED8B896
		cmp	al, 43h
		jnz	short loc_6ED8B8A3

loc_6ED8B8E9:				; CODE XREF: sub_6ED8B860+41j
		movzx	eax, byte ptr [edx+1]
		cmp	al, 32h
		nop
		jz	loc_6ED8BA10
		cmp	al, 33h
		jz	loc_6ED8BA02
		cmp	al, 31h
		jnz	short loc_6ED8B8AB
		mov	esi, 1

loc_6ED8B907:				; CODE XREF: sub_6ED8B860+1A7j
					; sub_6ED8B860+1B5j
		add	edx, 2
		mov	[ebx+0Ch], edx
		mov	edx, [ebx+14h]
		cmp	edx, [ebx+18h]
		jge	short loc_6ED8B8AB
		lea	eax, [edx+edx*2]
		add	edx, 1
		shl	eax, 2
		add	eax, [ebx+10h]
		mov	[ebx+14h], edx
		test	eax, eax
		jz	short loc_6ED8B8AB
		test	ecx, ecx
		jz	loc_6ED8B8AB
		mov	dword ptr [eax], 7
		mov	[eax+4], esi
		mov	[eax+8], ecx
		jmp	loc_6ED8B8AD
; ---------------------------------------------------------------------------

loc_6ED8B941:				; CODE XREF: sub_6ED8B860+23j
		cmp	al, 4Ch
		jnz	loc_6ED8B8AB
		add	edx, 1
		mov	eax, ebx
		mov	[ebx+0Ch], edx
		call	sub_6ED8AAB0
		test	eax, eax
		mov	esi, eax
		jz	loc_6ED8B8AB
		mov	eax, [ebx+0Ch]
		cmp	byte ptr [eax],	5Fh
		jz	short loc_6ED8B9CD
		mov	eax, esi
		jmp	loc_6ED8B8AD
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8B970:				; CODE XREF: sub_6ED8B860+45j
		movzx	eax, byte ptr [edx+1]
		cmp	al, 31h
		jz	short loc_6ED8B9F7
		cmp	al, 32h
		jz	short loc_6ED8B9F0
		cmp	al, 30h
		xchg	ax, ax
		jnz	loc_6ED8B8AB
		mov	esi, 1

loc_6ED8B98B:				; CODE XREF: sub_6ED8B860+195j
					; sub_6ED8B860+1A0j
		add	edx, 2
		mov	[ebx+0Ch], edx
		mov	edx, [ebx+14h]
		cmp	edx, [ebx+18h]
		jge	loc_6ED8B8AB
		lea	eax, [edx+edx*2]
		add	edx, 1
		shl	eax, 2
		add	eax, [ebx+10h]
		mov	[ebx+14h], edx
		test	eax, eax
		jz	loc_6ED8B8AB
		test	ecx, ecx
		jz	loc_6ED8B8AB
		mov	dword ptr [eax], 8
		mov	[eax+4], esi
		mov	[eax+8], ecx
		jmp	loc_6ED8B8AD
; ---------------------------------------------------------------------------

loc_6ED8B9CD:				; CODE XREF: sub_6ED8B860+106j
		add	eax, 1
		mov	[ebx+0Ch], eax
		mov	eax, ebx
		call	sub_6ED8A610
		test	eax, eax
		js	loc_6ED8B8AB
		mov	eax, esi
		jmp	loc_6ED8B8AD
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8B9F0:				; CODE XREF: sub_6ED8B860+11Aj
		mov	esi, 3
		jmp	short loc_6ED8B98B
; ---------------------------------------------------------------------------

loc_6ED8B9F7:				; CODE XREF: sub_6ED8B860+116j
		mov	esi, 2
		lea	esi, [esi+0]
		jmp	short loc_6ED8B98B
; ---------------------------------------------------------------------------

loc_6ED8BA02:				; CODE XREF: sub_6ED8B860+98j
		mov	esi, 3
		jmp	loc_6ED8B907
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8BA10:				; CODE XREF: sub_6ED8B860+90j
		mov	esi, 2
		jmp	loc_6ED8B907
sub_6ED8B860	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8BA20	proc near		; CODE XREF: sub_6ED8AB80+16Cj
					; sub_6ED8BB50+ADp

var_1C		= dword	ptr -1Ch
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 1Ch
		mov	[esp+1Ch+var_C], ebx
		mov	ebx, eax
		mov	[esp+1Ch+var_8], esi
		mov	[esp+1Ch+var_4], edi
		mov	eax, [eax+0Ch]
		cmp	byte ptr [eax],	4Ch
		jz	short loc_6ED8BA50

loc_6ED8BA39:				; CODE XREF: sub_6ED8BA20+5Dj
					; sub_6ED8BA20+9Bj ...
		xor	eax, eax
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8BA50:				; CODE XREF: sub_6ED8BA20+17j
		lea	edi, [eax+1]
		mov	[ebx+0Ch], edi
		movzx	edx, byte ptr [eax+1]
		cmp	dl, 5Fh
		setz	cl
		cmp	dl, 5Ah
		jnz	short loc_6ED8BA95

loc_6ED8BA65:				; CODE XREF: sub_6ED8BA20+8Aj
		lea	ecx, [edi+1]
		xor	edx, edx
		mov	[ebx+0Ch], ecx
		mov	eax, ebx
		call	sub_6ED8BF60
		mov	edi, [ebx+0Ch]
		movzx	edx, byte ptr [edi]

loc_6ED8BA7A:				; CODE XREF: sub_6ED8BA20+88j
					; sub_6ED8BA20+F8j
		cmp	dl, 45h
		jnz	short loc_6ED8BA39
		lea	ecx, [edi+1]
		mov	[ebx+0Ch], ecx
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED8BA95:				; CODE XREF: sub_6ED8BA20+43j
		test	cl, cl
		jz	short loc_6ED8BAB0
		lea	edi, [eax+2]
		mov	[ebx+0Ch], edi
		movzx	edx, byte ptr [eax+2]
		xor	eax, eax
		cmp	dl, 5Ah
		jnz	short loc_6ED8BA7A
		jmp	short loc_6ED8BA65
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8BAB0:				; CODE XREF: sub_6ED8BA20+77j
		mov	eax, ebx
		call	sub_6ED8AEC0
		test	eax, eax
		mov	esi, eax
		jz	loc_6ED8BA39
		cmp	dword ptr [eax], 23h
		jz	short loc_6ED8BB20

loc_6ED8BAC6:				; CODE XREF: sub_6ED8BA20+108j
					; sub_6ED8BA20+110j
		mov	edx, [ebx+0Ch]
		mov	edi, 34h
		movzx	eax, byte ptr [edx]
		cmp	al, 6Eh
		jz	short loc_6ED8BB32

loc_6ED8BAD5:				; CODE XREF: sub_6ED8BA20+11Fj
		xor	ecx, ecx
		cmp	al, 45h
		jz	short loc_6ED8BAFD
		test	al, al
		mov	ecx, edx
		jnz	short loc_6ED8BAEE
		jmp	loc_6ED8BA39
; ---------------------------------------------------------------------------

loc_6ED8BAE6:				; CODE XREF: sub_6ED8BA20+D9j
		test	al, al
		jz	loc_6ED8BA39

loc_6ED8BAEE:				; CODE XREF: sub_6ED8BA20+BFj
		add	ecx, 1
		mov	[ebx+0Ch], ecx
		movzx	eax, byte ptr [ecx]
		cmp	al, 45h
		jnz	short loc_6ED8BAE6
		sub	ecx, edx

loc_6ED8BAFD:				; CODE XREF: sub_6ED8BA20+B9j
		mov	eax, ebx
		call	sub_6ED8A5B0
		mov	edx, edi
		mov	ecx, esi
		mov	[esp+1Ch+var_1C], eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	edi, [ebx+0Ch]
		movzx	edx, byte ptr [edi]
		jmp	loc_6ED8BA7A
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8BB20:				; CODE XREF: sub_6ED8BA20+A4j
		mov	eax, [eax+4]
		mov	ecx, [eax+10h]
		test	ecx, ecx
		jz	short loc_6ED8BAC6
		mov	eax, [eax+4]
		sub	[ebx+30h], eax
		jmp	short loc_6ED8BAC6
; ---------------------------------------------------------------------------

loc_6ED8BB32:				; CODE XREF: sub_6ED8BA20+B3j
		add	edx, 1
		mov	di, 35h
		mov	[ebx+0Ch], edx
		movzx	eax, byte ptr [edx]
		jmp	short loc_6ED8BAD5
sub_6ED8BA20	endp

; ---------------------------------------------------------------------------
		jmp	short sub_6ED8BB50
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8BB50	proc near		; CODE XREF: sub_6ED8AB80+243p
					; sub_6ED8AB80+30Ep ...

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h

		push	edi
		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 20h
		mov	edi, [eax+2Ch]
		mov	eax, [eax+0Ch]
		cmp	byte ptr [eax],	49h
		jz	short loc_6ED8BB70

loc_6ED8BB63:				; CODE XREF: sub_6ED8BB50+77j
					; sub_6ED8BB50+92j ...
		add	esp, 20h
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8BB70:				; CODE XREF: sub_6ED8BB50+11j
		lea	ecx, [eax+1]
		mov	[ebx+0Ch], ecx
		cmp	byte ptr [eax+1], 45h
		jnz	short loc_6ED8BBA0
		add	eax, 2
		xor	ecx, ecx
		mov	[ebx+0Ch], eax
		mov	edx, 2Ah
		mov	eax, ebx
		mov	[esp+2Ch+var_2C], 0
		call	sub_6ED8A530
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8BBA0:				; CODE XREF: sub_6ED8BB50+2Aj
		mov	[esp+2Ch+var_10], 0
		lea	esi, [esp+2Ch+var_10]
		movzx	edx, byte ptr [eax+1]
		jmp	short loc_6ED8BBF6
; ---------------------------------------------------------------------------

loc_6ED8BBB2:				; CODE XREF: sub_6ED8BB50+A9j
		cmp	dl, 58h
		jz	short loc_6ED8BC12
		cmp	dl, 49h
		jz	short loc_6ED8BC04
		mov	eax, ebx
		xchg	ax, ax
		call	sub_6ED8AEC0

loc_6ED8BBC5:				; CODE XREF: sub_6ED8BB50+B2j
					; sub_6ED8BB50+C0j ...
		test	eax, eax
		jz	short loc_6ED8BB63
		mov	ecx, eax
		mov	edx, 2Ah
		mov	eax, ebx
		mov	[esp+2Ch+var_2C], 0
		call	sub_6ED8A530
		test	eax, eax
		mov	[esi], eax
		jz	loc_6ED8BB63
		mov	ecx, [ebx+0Ch]
		movzx	edx, byte ptr [ecx]
		cmp	dl, 45h
		jz	short loc_6ED8BC33
		lea	esi, [eax+8]

loc_6ED8BBF6:				; CODE XREF: sub_6ED8BB50+60j
		cmp	dl, 4Ch
		jnz	short loc_6ED8BBB2
		mov	eax, ebx
		call	sub_6ED8BA20
		jmp	short loc_6ED8BBC5
; ---------------------------------------------------------------------------

loc_6ED8BC04:				; CODE XREF: sub_6ED8BB50+6Aj
		mov	eax, ebx
		call	sub_6ED8BB50
		nop
		lea	esi, [esi+0]
		jmp	short loc_6ED8BBC5
; ---------------------------------------------------------------------------

loc_6ED8BC12:				; CODE XREF: sub_6ED8BB50+65j
		add	ecx, 1
		mov	eax, ebx
		mov	[ebx+0Ch], ecx
		call	sub_6ED8AB80
		mov	edx, [ebx+0Ch]
		cmp	byte ptr [edx],	45h
		jnz	loc_6ED8BB63
		add	edx, 1
		mov	[ebx+0Ch], edx
		jmp	short loc_6ED8BBC5
; ---------------------------------------------------------------------------

loc_6ED8BC33:				; CODE XREF: sub_6ED8BB50+A1j
		add	ecx, 1
		mov	[ebx+2Ch], edi
		mov	eax, [esp+2Ch+var_10]
		mov	[ebx+0Ch], ecx
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
sub_6ED8BB50	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8BC50	proc near		; CODE XREF: sub_6ED8AEC0+9Ap
					; sub_6ED8AEC0+694p ...

var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h

		push	ebp
		push	edi
		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 2Ch
		mov	edx, [eax+0Ch]
		movzx	eax, byte ptr [edx]
		cmp	al, 4Eh
		jz	loc_6ED8BD60
		jle	short loc_6ED8BCA0
		cmp	al, 53h
		jz	short loc_6ED8BCE3
		cmp	al, 5Ah
		nop
		jnz	short loc_6ED8BCA4
		add	edx, 1
		mov	eax, ebx
		mov	[ebx+0Ch], edx
		xor	edx, edx
		call	sub_6ED8BF60
		mov	esi, eax
		mov	eax, [ebx+0Ch]
		cmp	byte ptr [eax],	45h
		jz	loc_6ED8BE33

loc_6ED8BC8F:				; CODE XREF: sub_6ED8BC50+6Fj
					; sub_6ED8BC50+12Aj ...
		xor	esi, esi

loc_6ED8BC91:				; CODE XREF: sub_6ED8BC50+63j
					; sub_6ED8BC50+67j ...
		add	esp, 2Ch
		mov	eax, esi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8BCA0:				; CODE XREF: sub_6ED8BC50+17j
		cmp	al, 4Ch
		jz	short loc_6ED8BCD0

loc_6ED8BCA4:				; CODE XREF: sub_6ED8BC50+20j
		mov	eax, ebx
		call	sub_6ED8B860
		mov	esi, eax
		mov	eax, [ebx+0Ch]
		cmp	byte ptr [eax],	49h
		jnz	short loc_6ED8BC91

loc_6ED8BCB5:				; CODE XREF: sub_6ED8BC50+B3j
		test	esi, esi
		jz	short loc_6ED8BC91
		mov	eax, [ebx+20h]
		cmp	eax, [ebx+24h]
		jge	short loc_6ED8BC8F
		mov	edx, [ebx+1Ch]
		add	dword ptr [ebx+20h], 1
		mov	[edx+eax*4], esi
		jmp	short loc_6ED8BD05
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8BCD0:				; CODE XREF: sub_6ED8BC50+52j
		mov	eax, ebx
		call	sub_6ED8B860
		add	esp, 2Ch
		pop	ebx
		mov	esi, eax
		mov	eax, esi
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED8BCE3:				; CODE XREF: sub_6ED8BC50+1Bj
		cmp	byte ptr [edx+1], 74h
		jz	short loc_6ED8BD24
		xor	edx, edx
		mov	eax, ebx
		call	sub_6ED8A7E0
		mov	edx, 1
		mov	esi, eax

loc_6ED8BCF9:				; CODE XREF: sub_6ED8BC50+10Dj
		mov	eax, [ebx+0Ch]
		cmp	byte ptr [eax],	49h
		jnz	short loc_6ED8BC91
		test	edx, edx
		jz	short loc_6ED8BCB5

loc_6ED8BD05:				; CODE XREF: sub_6ED8BC50+7Bj
		mov	eax, ebx
		call	sub_6ED8BB50
		mov	ecx, esi
		mov	edx, 4
		mov	[esp+3Ch+var_3C], eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	esi, eax
		jmp	loc_6ED8BC91
; ---------------------------------------------------------------------------

loc_6ED8BD24:				; CODE XREF: sub_6ED8BC50+97j
		add	edx, 2
		mov	eax, ebx
		mov	[ebx+0Ch], edx
		call	sub_6ED8B860
		mov	ecx, 3
		mov	edx, offset aStd ; "std"
		mov	esi, eax
		mov	eax, ebx
		call	sub_6ED8A5B0
		mov	edx, 1
		mov	[esp+3Ch+var_3C], esi
		mov	ecx, eax
		mov	eax, ebx
		call	sub_6ED8A530
		xor	edx, edx
		add	dword ptr [ebx+30h], 3
		mov	esi, eax
		jmp	short loc_6ED8BCF9
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8BD60:				; CODE XREF: sub_6ED8BC50+11j
		add	edx, 1
		mov	ecx, 1
		mov	[ebx+0Ch], edx
		mov	eax, ebx
		lea	edx, [esp+3Ch+var_20]
		call	sub_6ED8A6D0
		test	eax, eax
		mov	ebp, eax
		jz	loc_6ED8BC8F
		mov	edx, [ebx+0Ch]
		xor	edi, edi
		movzx	esi, byte ptr [edx]

loc_6ED8BD88:				; CODE XREF: sub_6ED8BC50+238j
					; sub_6ED8BC50+25Fj
		mov	eax, esi
		test	al, al
		jz	loc_6ED8BE20
		lea	eax, [esi-61h]
		cmp	al, 19h
		jbe	loc_6ED8BE90
		lea	eax, [esi-30h]
		cmp	al, 9
		jbe	loc_6ED8BE90
		mov	eax, esi
		cmp	al, 44h
		jz	loc_6ED8BE90
		cmp	al, 43h
		jz	loc_6ED8BE90
		cmp	al, 4Ch
		jz	loc_6ED8BE90
		mov	eax, esi
		cmp	al, 53h
		jz	loc_6ED8BEB4
		mov	eax, esi
		cmp	al, 49h
		jz	loc_6ED8BEC5
		mov	eax, esi
		cmp	al, 54h
		jnz	loc_6ED8BEDF
		mov	eax, ebx
		call	sub_6ED8A770

loc_6ED8BDE7:				; CODE XREF: sub_6ED8BC50+247j
					; sub_6ED8BC50+270j
		test	edi, edi
		jz	short loc_6ED8BDFC
		mov	edx, 1

loc_6ED8BDF0:				; CODE XREF: sub_6ED8BC50+28Aj
		mov	[esp+3Ch+var_3C], eax
		mov	ecx, edi
		mov	eax, ebx
		call	sub_6ED8A530

loc_6ED8BDFC:				; CODE XREF: sub_6ED8BC50+199j
		mov	edx, esi
		cmp	dl, 53h
		jz	short loc_6ED8BE80
		mov	edx, [ebx+0Ch]
		mov	esi, 45h
		cmp	byte ptr [edx],	45h
		jz	short loc_6ED8BE86
		test	eax, eax
		jz	short loc_6ED8BE20
		mov	ecx, [ebx+20h]
		cmp	ecx, [ebx+24h]
		jl	loc_6ED8BEA0

loc_6ED8BE20:				; CODE XREF: sub_6ED8BC50+13Cj
					; sub_6ED8BC50+1C2j ...
		xor	esi, esi
		mov	dword ptr [ebp+0], 0
		mov	eax, esi
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED8BE33:				; CODE XREF: sub_6ED8BC50+39j
		lea	edx, [eax+1]
		mov	[ebx+0Ch], edx
		cmp	byte ptr [eax+1], 73h
		jnz	loc_6ED8BF0C
		lea	edx, [eax+2]
		mov	[ebx+0Ch], edx
		cmp	byte ptr [eax+2], 5Fh
		jz	loc_6ED8BF3D

loc_6ED8BE53:				; CODE XREF: sub_6ED8BC50+2FCj
		mov	ecx, 0Eh
		mov	edx, offset aStringLiteral ; "string literal"
		mov	eax, ebx
		call	sub_6ED8A5B0
		mov	[esp+3Ch+var_3C], eax

loc_6ED8BE67:				; CODE XREF: sub_6ED8BC50+2D0j
		mov	ecx, esi
		mov	edx, 2
		mov	eax, ebx
		call	sub_6ED8A530
		mov	esi, eax
		jmp	loc_6ED8BC91
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8BE80:				; CODE XREF: sub_6ED8BC50+1B1j
		mov	edx, [ebx+0Ch]
		movzx	esi, byte ptr [edx]

loc_6ED8BE86:				; CODE XREF: sub_6ED8BC50+1BEj
		mov	edi, eax
		jmp	loc_6ED8BD88
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8BE90:				; CODE XREF: sub_6ED8BC50+147j
					; sub_6ED8BC50+152j ...
		mov	eax, ebx
		call	sub_6ED8B860
		jmp	loc_6ED8BDE7
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8BEA0:				; CODE XREF: sub_6ED8BC50+1CAj
		mov	esi, [ebx+1Ch]
		mov	edi, eax
		add	dword ptr [ebx+20h], 1
		mov	[esi+ecx*4], eax
		movzx	esi, byte ptr [edx]
		jmp	loc_6ED8BD88
; ---------------------------------------------------------------------------

loc_6ED8BEB4:				; CODE XREF: sub_6ED8BC50+176j
		mov	edx, 1
		mov	eax, ebx
		call	sub_6ED8A7E0
		jmp	loc_6ED8BDE7
; ---------------------------------------------------------------------------

loc_6ED8BEC5:				; CODE XREF: sub_6ED8BC50+180j
		test	edi, edi
		jz	loc_6ED8BE20
		mov	eax, ebx
		nop
		call	sub_6ED8BB50
		mov	edx, 4
		jmp	loc_6ED8BDF0
; ---------------------------------------------------------------------------

loc_6ED8BEDF:				; CODE XREF: sub_6ED8BC50+18Aj
		mov	eax, esi
		cmp	al, 45h
		jnz	loc_6ED8BE20
		test	edi, edi
		mov	[ebp+0], edi
		jz	loc_6ED8BC8F
		cmp	byte ptr [edx],	45h
		jnz	loc_6ED8BC8F
		add	edx, 1
		mov	esi, [esp+3Ch+var_20]
		mov	[ebx+0Ch], edx
		jmp	loc_6ED8BC91
; ---------------------------------------------------------------------------

loc_6ED8BF0C:				; CODE XREF: sub_6ED8BC50+1EDj
		mov	eax, ebx
		call	sub_6ED8BC50
		mov	edi, eax
		mov	eax, [ebx+0Ch]
		cmp	byte ptr [eax],	5Fh
		jz	short loc_6ED8BF25

loc_6ED8BF1D:				; CODE XREF: sub_6ED8BC50+2E4j
		mov	[esp+3Ch+var_3C], edi
		jmp	loc_6ED8BE67
; ---------------------------------------------------------------------------

loc_6ED8BF25:				; CODE XREF: sub_6ED8BC50+2CBj
		add	eax, 1
		mov	[ebx+0Ch], eax
		mov	eax, ebx
		call	sub_6ED8A610
		test	eax, eax
		jns	short loc_6ED8BF1D
		xor	esi, esi
		jmp	loc_6ED8BC91
; ---------------------------------------------------------------------------

loc_6ED8BF3D:				; CODE XREF: sub_6ED8BC50+1FDj
		add	eax, 3
		mov	[ebx+0Ch], eax
		mov	eax, ebx
		call	sub_6ED8A610
		test	eax, eax
		jns	loc_6ED8BE53
		xor	esi, esi
		jmp	loc_6ED8BC91
sub_6ED8BC50	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8BF60	proc near		; CODE XREF: sub_6ED8BA20+4Fp
					; sub_6ED8BC50+2Cp ...

var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 3Ch
		mov	[esp+3Ch+var_10], ebx
		mov	ebx, eax
		mov	[esp+3Ch+var_8], edi
		mov	edi, edx
		mov	[esp+3Ch+var_C], esi
		mov	[esp+3Ch+var_4], ebp
		mov	eax, [eax+0Ch]
		movzx	edx, byte ptr [eax]
		cmp	dl, 54h
		jz	loc_6ED8C035
		cmp	dl, 47h
		jz	loc_6ED8C035
		mov	eax, ebx
		call	sub_6ED8BC50
		test	eax, eax
		mov	esi, eax
		jnz	short loc_6ED8BFF0

loc_6ED8BF9C:				; CODE XREF: sub_6ED8BF60+92j
					; sub_6ED8BF60+98j
		mov	eax, [ebx+0Ch]
		test	esi, esi
		movzx	eax, byte ptr [eax]
		jz	loc_6ED8C051
		test	al, al
		jz	loc_6ED8C051
		cmp	al, 45h
		jz	loc_6ED8C051
		mov	eax, esi

loc_6ED8BFBC:				; CODE XREF: sub_6ED8BF60+118j
		mov	edx, [eax]
		cmp	edx, 4
		jz	loc_6ED8C100
		jnb	loc_6ED8C067

loc_6ED8BFCD:				; CODE XREF: sub_6ED8BF60+10Dj
					; sub_6ED8BF60+120j ...
		xor	edx, edx	; jumptable 6ED8C118 cases 7,8,45

loc_6ED8BFCF:				; CODE XREF: sub_6ED8BF60+1B1j
		mov	eax, ebx
		call	sub_6ED8B5F0
		mov	ecx, esi
		mov	edx, 3
		mov	[esp+3Ch+var_3C], eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	esi, eax
		jmp	short loc_6ED8C051
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8BFF0:				; CODE XREF: sub_6ED8BF60+3Aj
		test	edi, edi
		jz	short loc_6ED8BF9C
		test	byte ptr [ebx+8], 1
		jnz	short loc_6ED8BF9C
		mov	eax, [esi]
		lea	edx, [eax-1Ah]
		cmp	edx, 2
		ja	short loc_6ED8C011

loc_6ED8C004:				; CODE XREF: sub_6ED8BF60+AFj
		mov	esi, [esi+4]
		mov	eax, [esi]
		lea	edx, [eax-1Ah]
		cmp	edx, 2
		jbe	short loc_6ED8C004

loc_6ED8C011:				; CODE XREF: sub_6ED8BF60+A2j
		cmp	eax, 2
		jnz	short loc_6ED8C051
		mov	eax, [esi+8]
		mov	edx, [eax]
		sub	edx, 1Ah
		cmp	edx, 2
		ja	short loc_6ED8C030

loc_6ED8C023:				; CODE XREF: sub_6ED8BF60+CEj
		mov	eax, [eax+4]
		mov	edx, [eax]
		sub	edx, 1Ah
		cmp	edx, 2
		jbe	short loc_6ED8C023

loc_6ED8C030:				; CODE XREF: sub_6ED8BF60+C1j
		mov	[esi+8], eax
		jmp	short loc_6ED8C051
; ---------------------------------------------------------------------------

loc_6ED8C035:				; CODE XREF: sub_6ED8BF60+20j
					; sub_6ED8BF60+29j
		mov	ecx, [ebx+30h]
		add	ecx, 14h
		mov	[ebx+30h], ecx
		movzx	edx, byte ptr [eax]
		cmp	dl, 54h
		jz	loc_6ED8C0D2
		cmp	dl, 47h
		jz	short loc_6ED8C085

loc_6ED8C04F:				; CODE XREF: sub_6ED8BF60+131j
					; sub_6ED8BF60+14Bj ...
		xor	esi, esi	; jumptable 6ED8C0F9 default case

loc_6ED8C051:				; CODE XREF: sub_6ED8BF60+44j
					; sub_6ED8BF60+4Cj ...
		mov	eax, esi
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED8C067:				; CODE XREF: sub_6ED8BF60+67j
		sub	edx, 1Ah
		cmp	edx, 2
		ja	loc_6ED8BFCD	; jumptable 6ED8C118 cases 7,8,45
		mov	eax, [eax+4]
		test	eax, eax
		jnz	loc_6ED8BFBC
		xchg	ax, ax
		jmp	loc_6ED8BFCD	; jumptable 6ED8C118 cases 7,8,45
; ---------------------------------------------------------------------------

loc_6ED8C085:				; CODE XREF: sub_6ED8BF60+EDj
		lea	edx, [eax+1]
		mov	[ebx+0Ch], edx
		movzx	edx, byte ptr [eax+1]
		test	dl, dl
		jz	short loc_6ED8C04F ; jumptable 6ED8C0F9	default	case
		add	eax, 2
		cmp	dl, 52h
		mov	[ebx+0Ch], eax
		jz	loc_6ED8C31B
		jg	loc_6ED8C33E
		cmp	dl, 41h
		jnz	short loc_6ED8C04F ; jumptable 6ED8C0F9	default	case
		xor	edx, edx
		mov	eax, ebx
		call	sub_6ED8BF60
		mov	edx, 15h
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	esi, eax
		jmp	loc_6ED8C051
; ---------------------------------------------------------------------------

loc_6ED8C0D2:				; CODE XREF: sub_6ED8BF60+E4j
		lea	edx, [eax+1]
		mov	[ebx+0Ch], edx
		movzx	edx, byte ptr [eax+1]
		test	dl, dl
		jz	loc_6ED8C04F	; jumptable 6ED8C0F9 default case
		sub	edx, 43h
		add	eax, 2
		cmp	dl, 33h		; switch 52 cases
		mov	[ebx+0Ch], eax
		ja	loc_6ED8C04F	; jumptable 6ED8C0F9 default case
		movzx	edx, dl
		jmp	ds:off_6EDA548C[edx*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_6ED8C100:				; CODE XREF: sub_6ED8BF60+61j
		mov	eax, [eax+4]
		test	eax, eax
		jz	short loc_6ED8C10C ; jumptable 6ED8C118	default	case

loc_6ED8C107:				; CODE XREF: sub_6ED8BF60+1C5j
		cmp	dword ptr [eax], 2Dh ; switch 46 cases
		jbe	short loc_6ED8C116

loc_6ED8C10C:				; CODE XREF: sub_6ED8BF60+1A5j
					; sub_6ED8BF60+1B8j ...
		mov	edx, 1		; jumptable 6ED8C118 default case
		jmp	loc_6ED8BFCF
; ---------------------------------------------------------------------------

loc_6ED8C116:				; CODE XREF: sub_6ED8BF60+1AAj
		mov	edx, [eax]
		jmp	ds:off_6EDA555C[edx*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8C120:				; CODE XREF: sub_6ED8BF60+1B8j
					; DATA XREF: .rdata:off_6EDA555Co
		mov	eax, [eax+8]	; jumptable 6ED8C118 cases 1,2
		test	eax, eax
		jnz	short loc_6ED8C107
		jmp	short loc_6ED8C10C ; jumptable 6ED8C118	default	case
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8C130:				; CODE XREF: sub_6ED8BF60+199j
					; DATA XREF: .rdata:off_6EDA548Co
		mov	edx, 76h	; jumptable 6ED8C0F9 case 51
		mov	eax, ebx
		call	sub_6ED8A670
		test	eax, eax
		xchg	ax, ax
		jz	loc_6ED8C04F	; jumptable 6ED8C0F9 default case
		xor	edx, edx
		mov	eax, ebx
		call	sub_6ED8BF60
		mov	edx, 10h
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	esi, eax
		jmp	loc_6ED8C051
; ---------------------------------------------------------------------------

loc_6ED8C16B:				; CODE XREF: sub_6ED8BF60+199j
					; DATA XREF: .rdata:off_6EDA548Co
		mov	edx, 68h	; jumptable 6ED8C0F9 case 37
		mov	eax, ebx
		call	sub_6ED8A670
		test	eax, eax
		jz	loc_6ED8C04F	; jumptable 6ED8C0F9 default case
		xor	edx, edx
		mov	eax, ebx
		call	sub_6ED8BF60
		mov	edx, 0Fh
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	esi, eax
		jmp	loc_6ED8C051
; ---------------------------------------------------------------------------

loc_6ED8C1A4:				; CODE XREF: sub_6ED8BF60+199j
					; DATA XREF: .rdata:off_6EDA548Co
		xor	edx, edx	; jumptable 6ED8C0F9 case 32
		mov	eax, ebx
		call	sub_6ED8A670
		test	eax, eax
		jz	loc_6ED8C04F	; jumptable 6ED8C0F9 default case
		xor	edx, edx
		mov	eax, ebx
		call	sub_6ED8A670
		test	eax, eax
		jz	loc_6ED8C04F	; jumptable 6ED8C0F9 default case
		xor	edx, edx
		mov	eax, ebx
		call	sub_6ED8BF60
		mov	edx, 11h
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	esi, eax
		jmp	loc_6ED8C051
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8C1F0:				; CODE XREF: sub_6ED8BF60+199j
					; DATA XREF: .rdata:off_6EDA548Co
		sub	ecx, 5		; jumptable 6ED8C0F9 case 19
		mov	eax, ebx
		mov	[ebx+30h], ecx
		call	sub_6ED8AEC0
		mov	edx, 9
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	esi, eax
		jmp	loc_6ED8C051
; ---------------------------------------------------------------------------

loc_6ED8C219:				; CODE XREF: sub_6ED8BF60+199j
					; DATA XREF: .rdata:off_6EDA548Co
		sub	ecx, 0Ah	; jumptable 6ED8C0F9 case 17
		mov	eax, ebx
		mov	[ebx+30h], ecx
		call	sub_6ED8AEC0
		mov	edx, 0Ah
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	esi, eax
		jmp	loc_6ED8C051
; ---------------------------------------------------------------------------

loc_6ED8C242:				; CODE XREF: sub_6ED8BF60+199j
					; DATA XREF: .rdata:off_6EDA548Co
		mov	eax, ebx	; jumptable 6ED8C0F9 case 16
		call	sub_6ED8AEC0
		mov	edx, 0Dh
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	esi, eax
		jmp	loc_6ED8C051
; ---------------------------------------------------------------------------

loc_6ED8C265:				; CODE XREF: sub_6ED8BF60+199j
					; DATA XREF: .rdata:off_6EDA548Co
		mov	eax, ebx	; jumptable 6ED8C0F9 case 7
		call	sub_6ED8AEC0
		mov	edx, 12h
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	esi, eax
		jmp	loc_6ED8C051
; ---------------------------------------------------------------------------

loc_6ED8C288:				; CODE XREF: sub_6ED8BF60+199j
					; DATA XREF: .rdata:off_6EDA548Co
		mov	eax, ebx	; jumptable 6ED8C0F9 case 6
		call	sub_6ED8AEC0
		mov	edx, 0Ch
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	esi, eax
		jmp	loc_6ED8C051
; ---------------------------------------------------------------------------

loc_6ED8C2AB:				; CODE XREF: sub_6ED8BF60+199j
					; DATA XREF: .rdata:off_6EDA548Co
		mov	eax, ebx	; jumptable 6ED8C0F9 case 3
		call	sub_6ED8AEC0
		mov	edx, 0Eh
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	esi, eax
		jmp	loc_6ED8C051
; ---------------------------------------------------------------------------

loc_6ED8C2CE:				; CODE XREF: sub_6ED8BF60+199j
					; DATA XREF: .rdata:off_6EDA548Co
		mov	eax, ebx	; jumptable 6ED8C0F9 case 0
		call	sub_6ED8AEC0
		mov	esi, eax
		mov	eax, ebx
		call	sub_6ED8A610
		test	eax, eax
		js	loc_6ED8C04F	; jumptable 6ED8C0F9 default case
		mov	eax, [ebx+0Ch]
		cmp	byte ptr [eax],	5Fh
		jnz	loc_6ED8C04F	; jumptable 6ED8C0F9 default case
		add	eax, 1
		mov	[ebx+0Ch], eax
		mov	eax, ebx
		call	sub_6ED8AEC0
		mov	edx, 0Bh
		add	dword ptr [ebx+30h], 5
		mov	[esp+3Ch+var_3C], esi
		mov	ecx, eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	esi, eax
		jmp	loc_6ED8C051
; ---------------------------------------------------------------------------

loc_6ED8C31B:				; CODE XREF: sub_6ED8BF60+13Cj
		mov	eax, ebx
		call	sub_6ED8BC50
		mov	edx, 14h
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	esi, eax
		jmp	loc_6ED8C051
; ---------------------------------------------------------------------------

loc_6ED8C33E:				; CODE XREF: sub_6ED8BF60+142j
		cmp	dl, 56h
		jz	loc_6ED8C3E5
		cmp	dl, 72h
		jnz	loc_6ED8C04F	; jumptable 6ED8C0F9 default case
		mov	eax, ebx
		call	sub_6ED8A610
		cmp	eax, 1
		jle	loc_6ED8C04F	; jumptable 6ED8C0F9 default case
		mov	esi, [ebx+0Ch]
		movzx	edx, byte ptr [esi]
		test	dl, dl
		jz	loc_6ED8C04F	; jumptable 6ED8C0F9 default case
		add	esi, 1
		cmp	dl, 5Fh
		mov	[ebx+0Ch], esi
		jnz	loc_6ED8C04F	; jumptable 6ED8C0F9 default case
		lea	ebp, [eax-1]
		mov	[esp+3Ch+var_20], 0

loc_6ED8C388:				; CODE XREF: sub_6ED8BF60+483j
		movzx	eax, byte ptr [esi]
		test	al, al
		jz	loc_6ED8C04F	; jumptable 6ED8C0F9 default case
		xor	edi, edi
		cmp	al, 24h
		jnz	short loc_6ED8C3AC
		jmp	short loc_6ED8C408
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8C3A0:				; CODE XREF: sub_6ED8BF60+451j
		movzx	eax, byte ptr [esi+edi]
		test	al, al
		jz	short loc_6ED8C3B3
		cmp	al, 24h
		jz	short loc_6ED8C3B3

loc_6ED8C3AC:				; CODE XREF: sub_6ED8BF60+437j
		add	edi, 1
		cmp	edi, ebp
		jl	short loc_6ED8C3A0

loc_6ED8C3B3:				; CODE XREF: sub_6ED8BF60+446j
					; sub_6ED8BF60+44Aj
		mov	edx, esi
		mov	ecx, edi
		mov	eax, ebx
		call	sub_6ED8A5B0
		mov	esi, [ebx+0Ch]
		add	esi, edi
		mov	[ebx+0Ch], esi
		test	eax, eax
		jz	loc_6ED8C04F	; jumptable 6ED8C0F9 default case
		sub	ebp, edi

loc_6ED8C3D0:				; CODE XREF: sub_6ED8BF60+4F8j
		cmp	[esp+3Ch+var_20], 0
		jnz	loc_6ED8C479

loc_6ED8C3DB:				; CODE XREF: sub_6ED8BF60+52Ej
		test	ebp, ebp
		jle	short loc_6ED8C45D
		mov	[esp+3Ch+var_20], eax
		jmp	short loc_6ED8C388
; ---------------------------------------------------------------------------

loc_6ED8C3E5:				; CODE XREF: sub_6ED8BF60+3E1j
		mov	eax, ebx
		call	sub_6ED8BC50
		mov	edx, 13h
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_6ED8A530
		mov	esi, eax
		jmp	loc_6ED8C051
; ---------------------------------------------------------------------------

loc_6ED8C408:				; CODE XREF: sub_6ED8BF60+439j
		movzx	eax, byte ptr [esi+1]
		cmp	al, 53h
		jz	loc_6ED8C4AF
		cmp	al, 5Fh
		jz	loc_6ED8C4A5
		cmp	al, 24h
		xchg	ax, ax
		jnz	loc_6ED8C04F	; jumptable 6ED8C0F9 default case
		mov	edx, 24h

loc_6ED8C42B:				; CODE XREF: sub_6ED8BF60+54Aj
					; sub_6ED8BF60+554j
		mov	ecx, [ebx+14h]
		cmp	ecx, [ebx+18h]
		jge	short loc_6ED8C499
		imul	eax, ecx, 0Ch
		add	ecx, 1
		add	eax, [ebx+10h]
		mov	[ebx+14h], ecx
		test	eax, eax
		jz	short loc_6ED8C499
		mov	[eax+4], edx
		mov	esi, [ebx+0Ch]
		sub	ebp, 2
		mov	dword ptr [eax], 38h
		add	esi, 2
		mov	[ebx+0Ch], esi
		jmp	loc_6ED8C3D0
; ---------------------------------------------------------------------------

loc_6ED8C45D:				; CODE XREF: sub_6ED8BF60+47Dj
		mov	ecx, eax
		mov	edx, 36h
		mov	eax, ebx
		mov	[esp+3Ch+var_3C], 0
		call	sub_6ED8A530
		mov	esi, eax
		jmp	loc_6ED8C051
; ---------------------------------------------------------------------------

loc_6ED8C479:				; CODE XREF: sub_6ED8BF60+475j
		mov	ecx, [esp+3Ch+var_20]
		mov	edx, 37h
		mov	[esp+3Ch+var_3C], eax
		mov	eax, ebx
		call	sub_6ED8A530
		test	eax, eax
		jnz	loc_6ED8C3DB
		jmp	loc_6ED8C04F	; jumptable 6ED8C0F9 default case
; ---------------------------------------------------------------------------

loc_6ED8C499:				; CODE XREF: sub_6ED8BF60+4D1j
					; sub_6ED8BF60+4E1j
		add	dword ptr [ebx+0Ch], 2
		xor	esi, esi
		nop
		jmp	loc_6ED8C051
; ---------------------------------------------------------------------------

loc_6ED8C4A5:				; CODE XREF: sub_6ED8BF60+4B6j
		mov	edx, 2Eh
		jmp	loc_6ED8C42B
; ---------------------------------------------------------------------------

loc_6ED8C4AF:				; CODE XREF: sub_6ED8BF60+4AEj
		mov	edx, 2Fh
		jmp	loc_6ED8C42B
sub_6ED8BF60	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8C4C0	proc near		; CODE XREF: sub_6ED8AB80+2D3p
					; sub_6ED8AB80+334p

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h

		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 24h
		mov	eax, [eax+0Ch]
		mov	[esp+2Ch+var_10], 0
		cmp	byte ptr [eax],	45h
		jnz	short loc_6ED8C4F8
		add	eax, 1
		xor	ecx, ecx
		mov	[ebx+0Ch], eax
		mov	edx, 29h
		mov	eax, ebx
		mov	[esp+2Ch+var_2C], 0
		call	sub_6ED8A530
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_6ED8C4F8:				; CODE XREF: sub_6ED8C4C0+15j
		lea	esi, [esp+2Ch+var_10]
		jmp	short loc_6ED8C503
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8C500:				; CODE XREF: sub_6ED8C4C0+6Fj
		lea	esi, [eax+8]

loc_6ED8C503:				; CODE XREF: sub_6ED8C4C0+3Cj
		mov	eax, ebx
		call	sub_6ED8AB80
		test	eax, eax
		jz	short loc_6ED8C541
		mov	ecx, eax
		mov	edx, 29h
		mov	eax, ebx
		mov	[esp+2Ch+var_2C], 0
		call	sub_6ED8A530
		test	eax, eax
		mov	[esi], eax
		jz	short loc_6ED8C541
		mov	edx, [ebx+0Ch]
		cmp	byte ptr [edx],	45h
		jnz	short loc_6ED8C500
		add	edx, 1
		mov	eax, [esp+2Ch+var_10]
		mov	[ebx+0Ch], edx
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_6ED8C541:				; CODE XREF: sub_6ED8C4C0+4Cj
					; sub_6ED8C4C0+67j
		add	esp, 24h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
sub_6ED8C4C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_6ED8C550(void	*, size_t, int)
sub_6ED8C550	proc near		; DATA XREF: sub_6ED8E0F0+37o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], esi
		mov	esi, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_4], edi
		mov	edi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_C], ebx
		mov	eax, [esi+4]
		mov	ebx, [esi+8]
		lea	eax, [edi+eax+1]
		cmp	eax, ebx
		ja	short loc_6ED8C5C7

loc_6ED8C575:				; CODE XREF: sub_6ED8C550+ADj
		mov	ebx, [esi+0Ch]
		test	ebx, ebx
		jz	short loc_6ED8C590

loc_6ED8C57C:				; CODE XREF: sub_6ED8C550+7Cj
					; sub_6ED8C550+D7j
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8C590:				; CODE XREF: sub_6ED8C550+2Aj
		mov	eax, [esi]
		mov	edx, [esp+1Ch+arg_0]
		add	eax, [esi+4]
		mov	[esp+1Ch+var_14], edi ;	size_t
		mov	[esp+1Ch+var_18], edx ;	void *
		mov	[esp+1Ch+var_1C], eax ;	void *
		call	memcpy
		mov	edx, [esi]
		mov	eax, [esi+4]
		add	edx, edi
		mov	byte ptr [edx+eax], 0
		add	[esi+4], edi
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED8C5C7:				; CODE XREF: sub_6ED8C550+23j
		mov	edx, [esi+0Ch]
		test	edx, edx
		jnz	short loc_6ED8C57C
		test	ebx, ebx
		jnz	short loc_6ED8C5E0
		cmp	eax, 2
		mov	bl, 2
		jbe	short loc_6ED8C5E6
		lea	esi, [esi+0]

loc_6ED8C5E0:				; CODE XREF: sub_6ED8C550+80j
					; sub_6ED8C550+94j
		add	ebx, ebx
		cmp	eax, ebx
		ja	short loc_6ED8C5E0

loc_6ED8C5E6:				; CODE XREF: sub_6ED8C550+87j
		mov	[esp+1Ch+var_18], ebx ;	size_t
		mov	eax, [esi]
		mov	[esp+1Ch+var_1C], eax ;	void *
		call	realloc
		test	eax, eax
		jz	short loc_6ED8C602
		mov	[esi], eax
		mov	[esi+8], ebx
		jmp	loc_6ED8C575
; ---------------------------------------------------------------------------

loc_6ED8C602:				; CODE XREF: sub_6ED8C550+A6j
		mov	eax, [esi]
		mov	[esp+1Ch+var_1C], eax ;	void *
		call	free
		mov	dword ptr [esi], 0
		mov	dword ptr [esi+4], 0
		mov	dword ptr [esi+8], 0
		mov	dword ptr [esi+0Ch], 1
		jmp	loc_6ED8C57C
sub_6ED8C550	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8C630	proc near		; CODE XREF: sub_6ED8CF10+BDp
					; sub_6ED8CF10+7F4p ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_28		= dword	ptr -28h
var_24		= byte ptr -24h
var_20		= dword	ptr -20h

		push	ebp
		push	edi
		push	esi
		mov	esi, edx
		push	ebx
		mov	ebx, eax
		sub	esp, 2Ch
		test	ecx, ecx
		jz	loc_6ED8C6D0
		lea	edx, [ebx+4]
		mov	eax, [eax+104h]
		xor	edi, edi
		mov	[esp+3Ch+var_20], edx
		jmp	short loc_6ED8C66D
; ---------------------------------------------------------------------------

loc_6ED8C654:				; CODE XREF: sub_6ED8C630+49j
					; sub_6ED8C630+9Cj
		add	edi, 1
		cmp	ecx, edi
		mov	[ebx+eax+4], dl
		mov	[ebx+104h], ebp
		mov	[ebx+108h], dl
		jbe	short loc_6ED8C6D0
		mov	eax, ebp

loc_6ED8C66D:				; CODE XREF: sub_6ED8C630+22j
		cmp	eax, 0FFh
		movzx	edx, byte ptr [esi+edi]
		lea	ebp, [eax+1]
		jnz	short loc_6ED8C654
		mov	eax, [ebx+110h]
		mov	ebp, 1
		mov	[esp+3Ch+var_24], dl
		mov	[esp+3Ch+var_28], ecx
		mov	byte ptr [ebx+103h], 0
		mov	[esp+3Ch+var_34], eax
		mov	eax, [ebx+104h]
		mov	[esp+3Ch+var_38], eax
		mov	eax, [esp+3Ch+var_20]
		mov	[esp+3Ch+var_3C], eax
		call	dword ptr [ebx+10Ch]
		xor	eax, eax
		mov	ecx, [esp+3Ch+var_28]
		mov	dword ptr [ebx+104h], 0
		movzx	edx, [esp+3Ch+var_24]
		add	dword ptr [ebx+124h], 1
		jmp	short loc_6ED8C654
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8C6D0:				; CODE XREF: sub_6ED8C630+Dj
					; sub_6ED8C630+39j
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_6ED8C630	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8C6E0	proc near		; CODE XREF: sub_6ED8CAB0+E2p
					; sub_6ED8CF10+76p ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_28		= dword	ptr -28h
var_24		= byte ptr -24h
var_20		= dword	ptr -20h

		push	ebp
		push	edi
		push	esi
		mov	esi, edx
		push	ebx
		mov	ebx, eax
		sub	esp, 2Ch
		mov	[esp+3Ch+var_3C], edx ;	char *
		call	strlen
		test	eax, eax
		jz	loc_6ED8C790
		lea	ecx, [ebx+4]
		mov	edx, [ebx+104h]
		xor	edi, edi
		mov	[esp+3Ch+var_20], ecx
		jmp	short loc_6ED8C729
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8C710:				; CODE XREF: sub_6ED8C6E0+56j
					; sub_6ED8C6E0+A9j
		add	edi, 1
		cmp	eax, edi
		mov	[ebx+edx+4], cl
		mov	[ebx+104h], ebp
		mov	[ebx+108h], cl
		jbe	short loc_6ED8C790
		mov	edx, ebp

loc_6ED8C729:				; CODE XREF: sub_6ED8C6E0+2Aj
		cmp	edx, 0FFh
		movzx	ecx, byte ptr [esi+edi]
		lea	ebp, [edx+1]
		jnz	short loc_6ED8C710
		mov	edx, [ebx+110h]
		mov	ebp, 1
		mov	[esp+3Ch+var_28], eax
		mov	[esp+3Ch+var_24], cl
		mov	byte ptr [ebx+103h], 0
		mov	[esp+3Ch+var_34], edx
		mov	edx, [ebx+104h]
		mov	[esp+3Ch+var_38], edx
		mov	edx, [esp+3Ch+var_20]
		mov	[esp+3Ch+var_3C], edx
		call	dword ptr [ebx+10Ch]
		xor	edx, edx
		movzx	ecx, [esp+3Ch+var_24]
		mov	dword ptr [ebx+104h], 0
		mov	eax, [esp+3Ch+var_28]
		add	dword ptr [ebx+124h], 1
		jmp	short loc_6ED8C710
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8C790:				; CODE XREF: sub_6ED8C6E0+15j
					; sub_6ED8C6E0+45j
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_6ED8C6E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8C7A0	proc near		; CODE XREF: sub_6ED8CAB0+A3p
					; sub_6ED8CF10+6DBp

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h

		push	edi
		push	esi
		mov	esi, edx
		push	ebx
		mov	edx, ecx
		sub	esp, 20h
		test	ecx, ecx
		mov	ebx, eax
		jz	short loc_6ED8C7DB
		mov	edi, [ecx+8]
		mov	eax, ecx
		test	edi, edi
		jnz	short loc_6ED8C7CB
		jmp	loc_6ED8C860
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8C7C0:				; CODE XREF: sub_6ED8C7A0+30j
		mov	ecx, [eax+8]
		test	ecx, ecx
		jz	loc_6ED8C860

loc_6ED8C7CB:				; CODE XREF: sub_6ED8C7A0+17j
		mov	eax, [eax]
		test	eax, eax
		nop
		jnz	short loc_6ED8C7C0
		xor	ecx, ecx
		mov	eax, ebx
		call	sub_6ED8CAB0

loc_6ED8C7DB:				; CODE XREF: sub_6ED8C7A0+Ej
		mov	eax, [ebx+104h]

loc_6ED8C7E1:				; CODE XREF: sub_6ED8C7A0+142j
		cmp	eax, 0FFh
		lea	edx, [eax+1]
		jz	loc_6ED8C92E

loc_6ED8C7EF:				; CODE XREF: sub_6ED8C7A0+1CDj
		mov	byte ptr [ebx+eax+4], 20h
		mov	[ebx+104h], edx
		mov	byte ptr [ebx+108h], 20h

loc_6ED8C801:				; CODE XREF: sub_6ED8C7A0+26Fj
		cmp	edx, 0FFh
		lea	eax, [edx+1]
		jz	loc_6ED8C9B6

loc_6ED8C810:				; CODE XREF: sub_6ED8C7A0+255j
		mov	byte ptr [ebx+edx+4], 5Bh
		mov	[ebx+104h], eax
		mov	byte ptr [ebx+108h], 5Bh
		mov	edx, [esi+4]
		test	edx, edx
		jz	short loc_6ED8C836
		mov	eax, ebx
		call	sub_6ED8CF10
		mov	eax, [ebx+104h]

loc_6ED8C836:				; CODE XREF: sub_6ED8C7A0+87j
		cmp	eax, 0FFh
		lea	edx, [eax+1]
		jz	loc_6ED8C972

loc_6ED8C844:				; CODE XREF: sub_6ED8C7A0+211j
		mov	byte ptr [ebx+eax+4], 5Dh
		mov	[ebx+104h], edx
		mov	byte ptr [ebx+108h], 5Dh
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8C860:				; CODE XREF: sub_6ED8C7A0+19j
					; sub_6ED8C7A0+25j
		mov	eax, [eax+4]
		cmp	dword ptr [eax], 26h
		jz	loc_6ED8CA00
		mov	ecx, [ebx+104h]
		lea	edi, [ebx+4]
		cmp	ecx, 0FFh
		jz	loc_6ED8CA14
		lea	eax, [ecx+1]
		cmp	eax, 0FFh
		mov	byte ptr [ebx+ecx+4], 20h
		mov	[ebx+104h], eax
		mov	byte ptr [ebx+108h], 20h
		jz	short loc_6ED8C8E7

loc_6ED8C89D:				; CODE XREF: sub_6ED8C7A0+2BFj
		lea	ecx, [eax+1]

loc_6ED8C8A0:				; CODE XREF: sub_6ED8C7A0+189j
		mov	byte ptr [ebx+eax+4], 28h
		mov	eax, ebx
		mov	[ebx+104h], ecx
		xor	ecx, ecx
		mov	byte ptr [ebx+108h], 28h
		call	sub_6ED8CAB0
		mov	edx, [ebx+104h]
		cmp	edx, 0FFh
		lea	eax, [edx+1]
		jz	loc_6ED8CA64

loc_6ED8C8D0:				; CODE XREF: sub_6ED8C7A0+2FEj
		mov	byte ptr [ebx+edx+4], 29h
		mov	[ebx+104h], eax
		mov	byte ptr [ebx+108h], 29h
		jmp	loc_6ED8C7E1
; ---------------------------------------------------------------------------

loc_6ED8C8E7:				; CODE XREF: sub_6ED8C7A0+FBj
		mov	eax, [ebx+110h]
		mov	[esp+2Ch+var_10], edx
		mov	byte ptr [ebx+103h], 0
		mov	[esp+2Ch+var_28], 0FFh
		mov	[esp+2Ch+var_24], eax
		mov	[esp+2Ch+var_2C], edi
		call	dword ptr [ebx+10Ch]
		mov	ecx, 1
		xor	eax, eax
		mov	dword ptr [ebx+104h], 0
		mov	edx, [esp+2Ch+var_10]
		add	dword ptr [ebx+124h], 1
		jmp	loc_6ED8C8A0
; ---------------------------------------------------------------------------

loc_6ED8C92E:				; CODE XREF: sub_6ED8C7A0+49j
		mov	eax, [ebx+110h]
		mov	byte ptr [ebx+103h], 0
		mov	[esp+2Ch+var_24], eax
		mov	eax, [ebx+104h]
		mov	[esp+2Ch+var_28], eax
		lea	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [ebx+10Ch]
		mov	edx, 1
		xor	eax, eax
		mov	dword ptr [ebx+104h], 0
		add	dword ptr [ebx+124h], 1
		jmp	loc_6ED8C7EF
; ---------------------------------------------------------------------------

loc_6ED8C972:				; CODE XREF: sub_6ED8C7A0+9Ej
		mov	eax, [ebx+110h]
		mov	byte ptr [ebx+103h], 0
		mov	[esp+2Ch+var_24], eax
		mov	eax, [ebx+104h]
		mov	[esp+2Ch+var_28], eax
		lea	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [ebx+10Ch]
		mov	edx, 1
		xor	eax, eax
		mov	dword ptr [ebx+104h], 0
		add	dword ptr [ebx+124h], 1
		jmp	loc_6ED8C844
; ---------------------------------------------------------------------------

loc_6ED8C9B6:				; CODE XREF: sub_6ED8C7A0+6Aj
		mov	eax, [ebx+110h]
		mov	byte ptr [ebx+103h], 0
		mov	[esp+2Ch+var_24], eax
		mov	eax, [ebx+104h]
		mov	[esp+2Ch+var_28], eax
		lea	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [ebx+10Ch]
		mov	eax, 1
		xor	edx, edx
		mov	dword ptr [ebx+104h], 0
		add	dword ptr [ebx+124h], 1
		jmp	loc_6ED8C810
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8CA00:				; CODE XREF: sub_6ED8C7A0+C6j
		xor	ecx, ecx
		mov	eax, ebx
		call	sub_6ED8CAB0
		mov	edx, [ebx+104h]
		jmp	loc_6ED8C801
; ---------------------------------------------------------------------------

loc_6ED8CA14:				; CODE XREF: sub_6ED8C7A0+DBj
		mov	eax, [ebx+110h]
		mov	[esp+2Ch+var_10], edx
		mov	byte ptr [ebx+103h], 0
		mov	[esp+2Ch+var_28], 0FFh
		mov	[esp+2Ch+var_24], eax
		mov	[esp+2Ch+var_2C], edi
		call	dword ptr [ebx+10Ch]
		mov	eax, 1
		mov	edx, [esp+2Ch+var_10]
		add	dword ptr [ebx+124h], 1
		mov	byte ptr [ebx+4], 20h
		mov	dword ptr [ebx+104h], 1
		mov	byte ptr [ebx+108h], 20h
		jmp	loc_6ED8C89D
; ---------------------------------------------------------------------------

loc_6ED8CA64:				; CODE XREF: sub_6ED8C7A0+12Aj
		mov	eax, [ebx+110h]
		mov	byte ptr [ebx+103h], 0
		mov	[esp+2Ch+var_28], 0FFh
		mov	[esp+2Ch+var_2C], edi
		mov	[esp+2Ch+var_24], eax
		call	dword ptr [ebx+10Ch]
		mov	eax, 1
		xor	edx, edx
		mov	dword ptr [ebx+104h], 0
		add	dword ptr [ebx+124h], 1
		jmp	loc_6ED8C8D0
sub_6ED8C7A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8CAB0	proc near		; CODE XREF: sub_6ED8C7A0+36p
					; sub_6ED8C7A0+116p ...
		push	ebp
		mov	ebp, ecx
		push	edi
		push	esi
		mov	esi, eax
		push	ebx
		mov	ebx, edx
		sub	esp, 0Ch
		test	edx, edx
		jnz	short loc_6ED8CB01
		jmp	short loc_6ED8CB30
; ---------------------------------------------------------------------------

loc_6ED8CAC3:				; CODE XREF: sub_6ED8CAB0+64j
		mov	edx, [ebx+4]

loc_6ED8CAC6:				; CODE XREF: sub_6ED8CAB0+71j
		mov	eax, [ebx+0Ch]
		mov	edi, [esi+114h]
		mov	dword ptr [ebx+8], 1
		mov	[esi+114h], eax
		mov	eax, [edx]
		cmp	eax, 25h
		jz	short loc_6ED8CB38
		cmp	eax, 26h
		jz	short loc_6ED8CB4F
		cmp	eax, 2
		jz	short loc_6ED8CB66
		mov	eax, esi
		nop
		call	sub_6ED8E250
		mov	[esi+114h], edi

loc_6ED8CAFB:				; CODE XREF: sub_6ED8CAB0+60j
		mov	ebx, [ebx]
		test	ebx, ebx
		jz	short loc_6ED8CB30

loc_6ED8CB01:				; CODE XREF: sub_6ED8CAB0+Fj
					; sub_6ED8CAB0+77j
		mov	edx, [esi+11Ch]
		test	edx, edx
		jnz	short loc_6ED8CB30
		mov	eax, [ebx+8]
		test	eax, eax
		jnz	short loc_6ED8CAFB
		test	ebp, ebp
		jnz	short loc_6ED8CAC3
		mov	edx, [ebx+4]
		mov	eax, [edx]
		sub	eax, 1Ah
		cmp	eax, 2
		ja	short loc_6ED8CAC6
		mov	ebx, [ebx]
		test	ebx, ebx
		jnz	short loc_6ED8CB01
		lea	esi, [esi+0]

loc_6ED8CB30:				; CODE XREF: sub_6ED8CAB0+11j
					; sub_6ED8CAB0+4Fj ...
		add	esp, 0Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED8CB38:				; CODE XREF: sub_6ED8CAB0+31j
		mov	ecx, [ebx]
		mov	eax, esi
		call	sub_6ED8CBE0
		mov	[esi+114h], edi
		add	esp, 0Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED8CB4F:				; CODE XREF: sub_6ED8CAB0+36j
		mov	ecx, [ebx]
		mov	eax, esi
		call	sub_6ED8C7A0
		mov	[esi+114h], edi
		add	esp, 0Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED8CB66:				; CODE XREF: sub_6ED8CAB0+3Bj
		mov	ebp, [esi+118h]
		mov	eax, esi
		mov	dword ptr [esi+118h], 0
		mov	edx, [edx+4]
		call	sub_6ED8CF10
		test	byte ptr [esi],	4
		mov	[esi+118h], ebp
		jnz	short loc_6ED8CBC9
		mov	edx, offset byte_6EDA5614
		mov	eax, esi
		call	sub_6ED8C6E0

loc_6ED8CB97:				; CODE XREF: sub_6ED8CAB0+125j
		mov	eax, [ebx+4]
		mov	edx, [eax+8]
		mov	eax, [edx]
		sub	eax, 1Ah
		cmp	eax, 2
		ja	short loc_6ED8CBB4

loc_6ED8CBA7:				; CODE XREF: sub_6ED8CAB0+102j
		mov	edx, [edx+4]
		mov	eax, [edx]
		sub	eax, 1Ah
		cmp	eax, 2
		jbe	short loc_6ED8CBA7

loc_6ED8CBB4:				; CODE XREF: sub_6ED8CAB0+F5j
		mov	eax, esi
		call	sub_6ED8CF10
		mov	[esi+114h], edi
		add	esp, 0Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED8CBC9:				; CODE XREF: sub_6ED8CAB0+D9j
		mov	edx, 2Eh
		mov	eax, esi
		call	sub_6ED8A980
		jmp	short loc_6ED8CB97
sub_6ED8CAB0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8CBE0	proc near		; CODE XREF: sub_6ED8CAB0+8Cp
					; sub_6ED8CF10+A49p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h

		push	ebp
		push	edi
		mov	edi, edx
		push	esi
		mov	esi, ecx
		push	ebx
		mov	ebx, eax
		sub	esp, 1Ch
		test	ecx, ecx
		jz	loc_6ED8CE74
		mov	eax, ecx
		mov	ecx, [ecx+8]
		mov	edx, 1
		test	ecx, ecx
		jnz	loc_6ED8CE74

loc_6ED8CC07:				; CODE XREF: sub_6ED8CBE0+DDj
		mov	ecx, [eax+4]
		mov	ecx, [ecx]
		sub	ecx, 17h
		cmp	ecx, 10h
		ja	loc_6ED8CCB2
		mov	ebp, edx
		shl	ebp, cl
		test	ebp, 10C47h
		mov	ecx, ebp
		jz	loc_6ED8CD55
		movzx	eax, byte ptr [ebx+108h]

loc_6ED8CC31:				; CODE XREF: sub_6ED8CBE0+18Ej
		cmp	al, 20h
		jz	loc_6ED8CD74
		mov	edx, [ebx+104h]
		cmp	edx, 0FFh
		lea	eax, [edx+1]
		jz	loc_6ED8CEC6

loc_6ED8CC4E:				; CODE XREF: sub_6ED8CBE0+323j
		cmp	eax, 0FFh
		mov	byte ptr [ebx+edx+4], 20h
		lea	edx, [eax+1]
		mov	[ebx+104h], eax
		mov	byte ptr [ebx+108h], 20h
		jnz	loc_6ED8CD88

loc_6ED8CC6E:				; CODE XREF: sub_6ED8CBE0+1A2j
		mov	eax, [ebx+110h]
		mov	byte ptr [ebx+103h], 0
		mov	[esp+2Ch+var_24], eax
		mov	eax, [ebx+104h]
		mov	[esp+2Ch+var_28], eax
		lea	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [ebx+10Ch]
		mov	edx, 1
		xor	eax, eax
		mov	dword ptr [ebx+104h], 0
		add	dword ptr [ebx+124h], 1
		jmp	loc_6ED8CD88
; ---------------------------------------------------------------------------

loc_6ED8CCB2:				; CODE XREF: sub_6ED8CBE0+32j
					; sub_6ED8CBE0+17Bj
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED8CCC3
		mov	ebp, [eax+8]
		test	ebp, ebp
		jz	loc_6ED8CC07

loc_6ED8CCC3:				; CODE XREF: sub_6ED8CBE0+D6j
					; sub_6ED8CBE0+29Fj
		mov	ebp, [ebx+118h]
		xor	ecx, ecx
		mov	edx, esi
		mov	eax, ebx
		mov	dword ptr [ebx+118h], 0
		call	sub_6ED8CAB0
		mov	edx, [ebx+104h]
		cmp	edx, 0FFh
		lea	eax, [edx+1]
		jz	loc_6ED8CDEA

loc_6ED8CCF3:				; CODE XREF: sub_6ED8CBE0+204j
					; sub_6ED8CBE0+249j
		mov	byte ptr [ebx+edx+4], 28h
		mov	[ebx+104h], eax
		mov	byte ptr [ebx+108h], 28h
		mov	edx, [edi+8]
		test	edx, edx
		jz	short loc_6ED8CD19
		mov	eax, ebx
		call	sub_6ED8CF10
		mov	eax, [ebx+104h]

loc_6ED8CD19:				; CODE XREF: sub_6ED8CBE0+12Aj
		cmp	eax, 0FFh
		lea	edx, [eax+1]
		jz	loc_6ED8CE30

loc_6ED8CD27:				; CODE XREF: sub_6ED8CBE0+28Fj
		mov	byte ptr [ebx+eax+4], 29h
		mov	ecx, 1
		mov	eax, ebx
		mov	[ebx+104h], edx
		mov	edx, esi
		mov	byte ptr [ebx+108h], 29h
		call	sub_6ED8CAB0
		mov	[ebx+118h], ebp
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED8CD55:				; CODE XREF: sub_6ED8CBE0+44j
		and	ecx, 380h
		jz	loc_6ED8CCB2

loc_6ED8CD61:				; CODE XREF: sub_6ED8CBE0+299j
		movzx	eax, byte ptr [ebx+108h]
		cmp	al, 28h
		jz	short loc_6ED8CD74
		cmp	al, 2Ah
		jnz	loc_6ED8CC31

loc_6ED8CD74:				; CODE XREF: sub_6ED8CBE0+53j
					; sub_6ED8CBE0+18Aj
		mov	eax, [ebx+104h]
		cmp	eax, 0FFh
		lea	edx, [eax+1]
		jz	loc_6ED8CC6E

loc_6ED8CD88:				; CODE XREF: sub_6ED8CBE0+88j
					; sub_6ED8CBE0+CDj
		mov	byte ptr [ebx+eax+4], 28h
		mov	ebp, [ebx+118h]
		xor	ecx, ecx
		mov	[ebx+104h], edx
		mov	eax, ebx
		mov	edx, esi
		mov	byte ptr [ebx+108h], 28h
		mov	dword ptr [ebx+118h], 0
		call	sub_6ED8CAB0
		mov	eax, [ebx+104h]
		cmp	eax, 0FFh
		lea	edx, [eax+1]
		jz	loc_6ED8CE84

loc_6ED8CDC9:				; CODE XREF: sub_6ED8CBE0+2E1j
		cmp	edx, 0FFh
		mov	byte ptr [ebx+eax+4], 29h
		lea	eax, [edx+1]
		mov	[ebx+104h], edx
		mov	byte ptr [ebx+108h], 29h
		jnz	loc_6ED8CCF3

loc_6ED8CDEA:				; CODE XREF: sub_6ED8CBE0+10Dj
		mov	eax, [ebx+110h]
		mov	byte ptr [ebx+103h], 0
		mov	[esp+2Ch+var_24], eax
		mov	eax, [ebx+104h]
		mov	[esp+2Ch+var_28], eax
		lea	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [ebx+10Ch]
		mov	eax, 1
		xor	edx, edx
		mov	dword ptr [ebx+104h], 0
		add	dword ptr [ebx+124h], 1
		jmp	loc_6ED8CCF3
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8CE30:				; CODE XREF: sub_6ED8CBE0+141j
		mov	eax, [ebx+110h]
		mov	byte ptr [ebx+103h], 0
		mov	[esp+2Ch+var_24], eax
		mov	eax, [ebx+104h]
		mov	[esp+2Ch+var_28], eax
		lea	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [ebx+10Ch]
		mov	edx, 1
		xor	eax, eax
		mov	dword ptr [ebx+104h], 0
		add	dword ptr [ebx+124h], 1
		jmp	loc_6ED8CD27
; ---------------------------------------------------------------------------

loc_6ED8CE74:				; CODE XREF: sub_6ED8CBE0+Fj
					; sub_6ED8CBE0+21j
		mov	ecx, [edi+4]
		test	ecx, ecx
		jnz	loc_6ED8CD61
		jmp	loc_6ED8CCC3
; ---------------------------------------------------------------------------

loc_6ED8CE84:				; CODE XREF: sub_6ED8CBE0+1E3j
		mov	eax, [ebx+110h]
		mov	byte ptr [ebx+103h], 0
		mov	[esp+2Ch+var_28], 0FFh
		mov	[esp+2Ch+var_24], eax
		lea	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [ebx+10Ch]
		mov	edx, 1
		xor	eax, eax
		mov	dword ptr [ebx+104h], 0
		add	dword ptr [ebx+124h], 1
		jmp	loc_6ED8CDC9
; ---------------------------------------------------------------------------

loc_6ED8CEC6:				; CODE XREF: sub_6ED8CBE0+68j
		mov	eax, [ebx+110h]
		mov	byte ptr [ebx+103h], 0
		mov	[esp+2Ch+var_28], 0FFh
		mov	[esp+2Ch+var_24], eax
		lea	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [ebx+10Ch]
		mov	eax, 1
		xor	edx, edx
		mov	dword ptr [ebx+104h], 0
		add	dword ptr [ebx+124h], 1
		jmp	loc_6ED8CC4E
sub_6ED8CBE0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8CF10	proc near		; CODE XREF: sub_6ED8C7A0+8Bp
					; sub_6ED8CAB0+CBp ...

var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_64		= byte ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= byte ptr -54h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 9Ch
		test	edx, edx
		mov	[esp+9Ch+var_10], ebx
		mov	ebx, eax
		mov	[esp+9Ch+var_4], ebp
		mov	ebp, edx
		mov	[esp+9Ch+var_C], esi
		mov	[esp+9Ch+var_8], edi
		jz	short loc_6ED8CF4B ; jumptable 6ED8CF78	default	case
		mov	eax, [eax+11Ch]
		test	eax, eax
		jnz	short loc_6ED8CF55 ; jumptable 6ED8DBE9	default	case
		mov	eax, [edx]
		cmp	eax, 3Ch	; switch 61 cases
		jbe	short loc_6ED8CF78

loc_6ED8CF4B:				; CODE XREF: sub_6ED8CF10+28j
					; sub_6ED8CF10:loc_6ED8CF78j ...
		mov	dword ptr [ebx+11Ch], 1	; jumptable 6ED8CF78 default case

loc_6ED8CF55:				; CODE XREF: sub_6ED8CF10+32j
					; sub_6ED8CF10+85j ...
		mov	ebx, [esp+9Ch+var_10] ;	jumptable 6ED8DBE9 default case
		mov	esi, [esp+9Ch+var_C]
		mov	edi, [esp+9Ch+var_8]
		mov	ebp, [esp+9Ch+var_4]
		add	esp, 9Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED8CF78:				; CODE XREF: sub_6ED8CF10+39j
		jmp	ds:off_6EDA57C8[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_6ED8CF7F:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	edx, offset aVtableFor ; jumptable 6ED8CF78 case 9

loc_6ED8CF84:				; CODE XREF: sub_6ED8CF10+D7j
					; sub_6ED8CF10+DEj ...
		mov	eax, ebx
		call	sub_6ED8C6E0

loc_6ED8CF8B:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; sub_6ED8CF10+786j
					; DATA XREF: ...
		mov	edx, [ebp+4]	; jumptable 6ED8CF78 case 36
		mov	eax, ebx
		call	sub_6ED8CF10
		jmp	short loc_6ED8CF55 ; jumptable 6ED8DBE9	default	case
; ---------------------------------------------------------------------------

loc_6ED8CF97:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	edx, offset aConstructionVt ; jumptable	6ED8CF78 case 11
		mov	eax, ebx
		call	sub_6ED8C6E0
		mov	edx, [ebp+4]
		mov	eax, ebx
		call	sub_6ED8CF10
		mov	edx, offset aIn	; "-in-"

loc_6ED8CFB2:				; CODE XREF: sub_6ED8CF10+803j
		mov	eax, ebx
		call	sub_6ED8C6E0

loc_6ED8CFB9:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; sub_6ED8CF10+D0j ...
		mov	edx, [ebp+8]	; jumptable 6ED8CF78 case 7
		mov	eax, ebx
		call	sub_6ED8CF10
		jmp	short loc_6ED8CF55 ; jumptable 6ED8DBE9	default	case
; ---------------------------------------------------------------------------

loc_6ED8CFC5:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; sub_6ED8CF10+181j
					; DATA XREF: ...
		mov	ecx, [ebp+8]	; jumptable 6ED8CF78 case 22
		mov	eax, ebx
		mov	edx, [ebp+4]
		call	sub_6ED8C630
		jmp	short loc_6ED8CF55 ; jumptable 6ED8DBE9	default	case
; ---------------------------------------------------------------------------

loc_6ED8CFD4:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	edx, 7Eh	; jumptable 6ED8CF78 case 8
		mov	eax, ebx
		call	sub_6ED8A980
		jmp	short loc_6ED8CFB9 ; jumptable 6ED8CF78	case 7
; ---------------------------------------------------------------------------

loc_6ED8CFE2:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	edx, offset aVttFor ; jumptable	6ED8CF78 case 10
		jmp	short loc_6ED8CF84
; ---------------------------------------------------------------------------

loc_6ED8CFE9:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	edx, offset aTypeinfoFor ; jumptable 6ED8CF78 case 12
		jmp	short loc_6ED8CF84
; ---------------------------------------------------------------------------

loc_6ED8CFF0:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	edx, offset aTypeinfoNameFo ; jumptable	6ED8CF78 case 13
		jmp	short loc_6ED8CF84
; ---------------------------------------------------------------------------

loc_6ED8CFF7:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	edx, offset aTypeinfoFnFor ; jumptable 6ED8CF78	case 14
		jmp	short loc_6ED8CF84
; ---------------------------------------------------------------------------

loc_6ED8CFFE:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	edx, offset aNonVirtualThun ; jumptable	6ED8CF78 case 15
		jmp	loc_6ED8CF84
; ---------------------------------------------------------------------------

loc_6ED8D008:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	edx, [edx+4]	; jumptable 6ED8CF78 case 60
		mov	eax, ebx
		call	sub_6ED8AA00
		test	eax, eax
		jz	loc_6ED8DD8F
		cmp	dword ptr [eax], 2Ah
		jnz	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
		mov	edx, [eax+4]
		xor	esi, esi
		test	edx, edx
		jnz	short loc_6ED8D044
		jmp	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
; ---------------------------------------------------------------------------

loc_6ED8D031:				; CODE XREF: sub_6ED8CF10+13Cj
		cmp	dword ptr [eax], 2Ah
		jnz	short loc_6ED8D04E
		mov	edi, [eax+4]
		test	edi, edi
		nop
		lea	esi, [esi+0]
		jz	short loc_6ED8D04E
		mov	esi, edx

loc_6ED8D044:				; CODE XREF: sub_6ED8CF10+11Aj
		mov	eax, [eax+8]
		lea	edx, [esi+1]
		test	eax, eax
		jnz	short loc_6ED8D031

loc_6ED8D04E:				; CODE XREF: sub_6ED8CF10+124j
					; sub_6ED8CF10+130j
		mov	[esp+9Ch+var_7C], edx
		xor	edi, edi
		mov	ebp, [ebp+4]
		jmp	short loc_6ED8D06D
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8D060:				; CODE XREF: sub_6ED8CF10+16Ej
					; sub_6ED8CF10+17Cj
		add	edi, 1
		cmp	[esp+9Ch+var_7C], edi
		jle	loc_6ED8CF55	; jumptable 6ED8DBE9 default case

loc_6ED8D06D:				; CODE XREF: sub_6ED8CF10+147j
		mov	[ebx+120h], edi
		mov	edx, ebp
		mov	eax, ebx
		call	sub_6ED8CF10
		cmp	esi, edi
		jle	short loc_6ED8D060
		mov	edx, offset asc_6EDA5730 ; ", "
		mov	eax, ebx
		call	sub_6ED8C6E0
		jmp	short loc_6ED8D060
; ---------------------------------------------------------------------------

loc_6ED8D08E:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		test	byte ptr [ebx],	4 ; jumptable 6ED8CF78 case 0
		jz	loc_6ED8CFC5	; jumptable 6ED8CF78 case 22
		mov	eax, [edx+4]
		mov	edi, [edx+8]
		add	edi, eax
		cmp	eax, edi
		jb	short loc_6ED8D0CB
		jmp	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
; ---------------------------------------------------------------------------

loc_6ED8D0A8:				; CODE XREF: sub_6ED8CF10+1C2j
		movzx	edx, byte ptr [eax]
		lea	esi, [eax+1]
		cmp	dl, 5Fh
		jz	loc_6ED8D9DC

loc_6ED8D0B7:				; CODE XREF: sub_6ED8CF10+1CAj
					; sub_6ED8CF10+AD3j ...
		movsx	edx, dl
		mov	eax, ebx
		call	sub_6ED8A980

loc_6ED8D0C1:				; CODE XREF: sub_6ED8CF10+ECBj
		cmp	esi, edi
		jnb	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
		mov	eax, esi

loc_6ED8D0CB:				; CODE XREF: sub_6ED8CF10+191j
		mov	edx, edi
		sub	edx, eax
		cmp	edx, 3
		jg	short loc_6ED8D0A8
		lea	esi, [eax+1]
		movzx	edx, byte ptr [eax]
		jmp	short loc_6ED8D0B7
; ---------------------------------------------------------------------------

loc_6ED8D0DC:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	edx, [edx+4]	; jumptable 6ED8CF78 cases 1,2
		mov	eax, ebx
		call	sub_6ED8CF10
		test	byte ptr [ebx],	4
		jnz	loc_6ED8DA52
		mov	edx, offset byte_6EDA5614
		mov	eax, ebx
		call	sub_6ED8C6E0
		jmp	loc_6ED8CFB9	; jumptable 6ED8CF78 case 7
; ---------------------------------------------------------------------------

loc_6ED8D100:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	eax, [ebx+118h]	; jumptable 6ED8CF78 case 3
		mov	dword ptr [ebx+118h], 0
		mov	[esp+9Ch+var_74], eax
		mov	esi, [edx+4]
		test	esi, esi
		jz	loc_6ED8CF4B	; jumptable 6ED8CF78 default case
		lea	edx, [esp+9Ch+var_64]
		mov	ecx, [ebx+114h]
		mov	[esp+9Ch+var_7C], edx
		mov	[ebx+118h], edx
		mov	edx, [esi]
		mov	dword ptr [esp+9Ch+var_64], 0
		mov	[esp+9Ch+var_60], esi
		mov	[esp+9Ch+var_5C], 0
		lea	eax, [edx-1Ah]
		cmp	eax, 2
		mov	[esp+9Ch+var_78], ecx
		mov	[esp+9Ch+var_58], ecx
		ja	loc_6ED8DDE0
		lea	eax, [esp+9Ch+var_54]
		mov	edi, 1

loc_6ED8D166:				; CODE XREF: sub_6ED8CF10+297j
		mov	esi, [esi+4]
		test	esi, esi
		jz	loc_6ED8CF4B	; jumptable 6ED8CF78 default case
		cmp	edi, 4
		jz	loc_6ED8CF4B	; jumptable 6ED8CF78 default case
		mov	edx, [ebx+118h]
		add	edi, 1
		mov	[eax+4], esi
		mov	dword ptr [eax+8], 0
		mov	[eax], edx
		mov	edx, [esp+9Ch+var_78]
		mov	[ebx+118h], eax
		mov	[eax+0Ch], edx
		mov	edx, [esi]
		add	eax, 10h
		lea	ecx, [edx-1Ah]
		cmp	ecx, 2
		jbe	short loc_6ED8D166

loc_6ED8D1A9:				; CODE XREF: sub_6ED8CF10+ED5j
		cmp	edx, 4
		jz	loc_6ED8DD65
		cmp	edx, 2
		jnz	loc_6ED8D26E
		mov	edx, [esi+8]
		mov	eax, [edx]
		sub	eax, 1Ah
		cmp	eax, 2
		ja	loc_6ED8D26E
		cmp	edi, 3
		ja	loc_6ED8CF4B	; jumptable 6ED8CF78 default case
		mov	ecx, [esp+9Ch+var_7C]
		mov	eax, edi
		shl	eax, 4
		lea	eax, [eax+ecx-10h]
		mov	[esp+9Ch+var_80], eax
		mov	eax, edi
		shl	eax, 4
		lea	ecx, [eax+ecx-10h]
		mov	eax, edi
		mov	[esp+9Ch+var_70], ecx
		mov	ecx, [esp+9Ch+var_7C]
		shl	eax, 4
		add	ecx, eax
		mov	[esp+9Ch+var_78], ecx
		mov	ecx, [esp+9Ch+var_70]
		mov	[esp+9Ch+var_70], esi
		mov	esi, [esp+9Ch+var_78]
		mov	[esp+9Ch+var_78], ebp
		mov	eax, ecx
		jmp	short loc_6ED8D228
; ---------------------------------------------------------------------------

loc_6ED8D216:				; CODE XREF: sub_6ED8CF10+354j
		add	eax, 10h
		add	ecx, 10h
		add	esi, 10h
		cmp	edi, 3
		ja	loc_6ED8CF4B	; jumptable 6ED8CF78 default case

loc_6ED8D228:				; CODE XREF: sub_6ED8CF10+304j
		mov	ebp, [eax+4]
		add	edi, 1
		mov	[eax+10h], ecx
		mov	[eax+4], edx
		mov	[eax+14h], ebp
		mov	ebp, [eax+8]
		mov	dword ptr [eax+8], 0
		mov	[eax+18h], ebp
		mov	ebp, [eax+0Ch]
		mov	[eax+1Ch], ebp
		mov	ebp, [ebx+114h]
		mov	[ebx+118h], esi
		mov	[eax+0Ch], ebp
		mov	edx, [edx+4]
		mov	ebp, [edx]
		sub	ebp, 1Ah
		cmp	ebp, 2
		jbe	short loc_6ED8D216
		mov	esi, [esp+9Ch+var_70]
		mov	ebp, [esp+9Ch+var_78]

loc_6ED8D26E:				; CODE XREF: sub_6ED8CF10+2A5j
					; sub_6ED8CF10+2B6j ...
		mov	edx, [ebp+8]
		mov	eax, ebx
		call	sub_6ED8CF10
		cmp	dword ptr [esi], 4
		jz	loc_6ED8DD80

loc_6ED8D281:				; CODE XREF: sub_6ED8CF10+E7Aj
		test	edi, edi
		jz	loc_6ED8DC56
		mov	edx, [esp+9Ch+var_7C]
		mov	eax, edi
		shl	eax, 4
		lea	esi, [edx+eax-8]
		jmp	short loc_6ED8D2A3
; ---------------------------------------------------------------------------

loc_6ED8D298:				; CODE XREF: sub_6ED8CF10+39Aj
					; sub_6ED8CF10+3B2j
		sub	esi, 10h
		test	edi, edi
		jz	loc_6ED8DC56

loc_6ED8D2A3:				; CODE XREF: sub_6ED8CF10+386j
		mov	ebp, [esi]
		sub	edi, 1
		test	ebp, ebp
		jnz	short loc_6ED8D298
		mov	eax, ebx
		mov	edx, 20h
		call	sub_6ED8A980
		mov	edx, [esi-4]
		mov	eax, ebx
		call	sub_6ED8E250
		jmp	short loc_6ED8D298
; ---------------------------------------------------------------------------

loc_6ED8D2C4:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	edx, offset aJavaClassFor ; jumptable 6ED8CF78 case 18
		jmp	loc_6ED8CF84
; ---------------------------------------------------------------------------

loc_6ED8D2CE:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	edx, offset aGuardVariableF ; jumptable	6ED8CF78 case 19
		jmp	loc_6ED8CF84
; ---------------------------------------------------------------------------

loc_6ED8D2D8:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		cmp	word ptr [edx+0Ah], 0 ;	jumptable 6ED8CF78 case	40
		jnz	loc_6ED8DA89

loc_6ED8D2E3:				; CODE XREF: sub_6ED8CF10+B85j
		mov	edx, [ebp+4]
		cmp	dword ptr [edx+4], offset off_6EDA5B60
		jz	short loc_6ED8D302
		mov	eax, ebx
		call	sub_6ED8CF10
		mov	edx, 20h
		mov	eax, ebx
		call	sub_6ED8A980

loc_6ED8D302:				; CODE XREF: sub_6ED8CF10+3DDj
		cmp	word ptr [ebp+8], 0
		jz	loc_6ED8DA78
		mov	edx, offset a_accum ; "_Accum"
		mov	eax, ebx
		call	sub_6ED8C6E0
		jmp	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
; ---------------------------------------------------------------------------

loc_6ED8D31E:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	edx, [edx+4]	; jumptable 6ED8CF78 cases 41,42
		test	edx, edx
		jz	short loc_6ED8D32C
		mov	eax, ebx
		call	sub_6ED8CF10

loc_6ED8D32C:				; CODE XREF: sub_6ED8CF10+413j
		mov	eax, [ebp+8]
		test	eax, eax
		jz	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
		mov	eax, [ebx+104h]
		cmp	eax, 0FDh
		ja	loc_6ED8DB10

loc_6ED8D348:				; CODE XREF: sub_6ED8CF10+C30j
		mov	edx, offset asc_6EDA5730 ; ", "
		mov	eax, ebx
		call	sub_6ED8C6E0
		mov	edx, [ebp+8]
		mov	eax, ebx
		mov	esi, [ebx+124h]
		mov	edi, [ebx+104h]
		call	sub_6ED8CF10
		cmp	[ebx+124h], esi
		jnz	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
		mov	eax, [ebx+104h]
		cmp	eax, edi
		jnz	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
		sub	eax, 2
		mov	[ebx+104h], eax
		jmp	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
; ---------------------------------------------------------------------------

loc_6ED8D392:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	edi, [ebx+118h]	; jumptable 6ED8CF78 cases 26-34

loc_6ED8D398:				; CODE XREF: sub_6ED8CF10+754j
					; sub_6ED8CF10+764j ...
		lea	eax, [esp+9Ch+var_64]
		mov	[ebx+118h], eax
		mov	eax, [ebx+114h]
		mov	dword ptr [esp+9Ch+var_64], edi
		mov	[esp+9Ch+var_60], ebp
		mov	[esp+9Ch+var_5C], 0
		mov	[esp+9Ch+var_58], eax
		mov	edx, [ebp+4]
		mov	eax, ebx
		call	sub_6ED8CF10
		mov	esi, [esp+9Ch+var_5C]
		test	esi, esi
		jnz	short loc_6ED8D3D7
		mov	edx, ebp
		mov	eax, ebx
		call	sub_6ED8E250

loc_6ED8D3D7:				; CODE XREF: sub_6ED8CF10+4BCj
					; sub_6ED8CF10+71Fj ...
		mov	eax, dword ptr [esp+9Ch+var_64]
		mov	[ebx+118h], eax
		jmp	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
; ---------------------------------------------------------------------------

loc_6ED8D3E6:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	eax, ebx	; jumptable 6ED8CF78 case 45
		mov	edx, offset aOperator ;	"operator "
		call	sub_6ED8C6E0
		mov	edx, ebp
		mov	eax, ebx
		call	sub_6ED8E340
		jmp	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
; ---------------------------------------------------------------------------

loc_6ED8D400:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	edx, [edx+4]	; jumptable 6ED8CF78 case 46
		cmp	dword ptr [edx], 2Dh
		jz	loc_6ED8DAAC
		mov	eax, ebx
		xchg	ax, ax
		call	sub_6ED8E4E0

loc_6ED8D415:				; CODE XREF: sub_6ED8CF10+BBEj
		mov	edx, [ebp+8]
		mov	eax, ebx
		call	sub_6ED8E5C0
		jmp	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
; ---------------------------------------------------------------------------

loc_6ED8D424:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	eax, [edx+8]	; jumptable 6ED8CF78 case 47
		cmp	dword ptr [eax], 30h
		jnz	loc_6ED8CF4B	; jumptable 6ED8CF78 default case
		mov	edx, [edx+4]
		cmp	dword ptr [edx], 2Bh
		jz	loc_6ED8DCC2

loc_6ED8D43C:				; CODE XREF: sub_6ED8CF10+DB9j
					; sub_6ED8CF10+DC5j ...
		mov	edx, [eax+4]
		mov	eax, ebx
		mov	edi, offset aIx	; "ix"
		call	sub_6ED8E5C0
		mov	edx, [ebp+4]
		mov	ecx, 3
		mov	eax, [edx+4]
		mov	eax, [eax]
		mov	[esp+9Ch+var_7C], eax
		mov	esi, eax
		repe cmpsb
		jz	loc_6ED8DC98
		mov	esi, [esp+9Ch+var_7C]
		mov	edi, offset aCl	; "cl"
		mov	ecx, 3
		repe cmpsb
		jnz	loc_6ED8DD4B

loc_6ED8D47C:				; CODE XREF: sub_6ED8CF10+E45j
		mov	eax, [ebp+8]
		mov	edx, [eax+8]
		mov	eax, ebx
		call	sub_6ED8E5C0

loc_6ED8D489:				; CODE XREF: sub_6ED8CF10+DADj
		mov	eax, [ebp+4]
		cmp	dword ptr [eax], 2Bh
		jnz	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
		mov	eax, [eax+4]
		cmp	dword ptr [eax+8], 1
		jnz	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
		mov	eax, [eax+4]
		cmp	byte ptr [eax],	3Eh
		jnz	loc_6ED8CF55	; jumptable 6ED8DBE9 default case

loc_6ED8D4AE:				; CODE XREF: sub_6ED8CF10+AAEj
		mov	edx, 29h
		mov	eax, ebx
		call	sub_6ED8A980
		jmp	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
; ---------------------------------------------------------------------------

loc_6ED8D4BF:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		movsx	edx, byte ptr [edx+4] ;	jumptable 6ED8CF78 case	56
		mov	eax, ebx
		call	sub_6ED8A980
		jmp	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
; ---------------------------------------------------------------------------

loc_6ED8D4CF:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	esi, [ebx+118h]	; jumptable 6ED8CF78 case 38
		lea	ecx, [esp+9Ch+var_64]
		mov	eax, [ebx+114h]
		mov	[esp+9Ch+var_7C], ecx
		mov	[ebx+118h], ecx
		mov	[esp+9Ch+var_78], esi
		mov	[esp+9Ch+var_58], eax
		mov	eax, [esp+9Ch+var_78]
		mov	dword ptr [esp+9Ch+var_64], esi
		mov	esi, ecx
		mov	[esp+9Ch+var_60], edx
		mov	[esp+9Ch+var_5C], 0
		test	eax, eax
		jz	loc_6ED8DD5A
		mov	edx, [esp+9Ch+var_78]
		mov	eax, [edx+4]
		mov	eax, [eax]
		sub	eax, 17h
		cmp	eax, 2
		ja	loc_6ED8DD5A
		mov	eax, edx
		mov	edi, 1
		mov	[esp+9Ch+var_74], ebp
		jmp	short loc_6ED8D53E
; ---------------------------------------------------------------------------

loc_6ED8D531:				; CODE XREF: sub_6ED8CF10+67Dj
		mov	edx, [eax+4]
		mov	edx, [edx]
		sub	edx, 17h
		cmp	edx, 2
		ja	short loc_6ED8D58F

loc_6ED8D53E:				; CODE XREF: sub_6ED8CF10+61Fj
		mov	ebp, [eax+8]
		test	ebp, ebp
		jnz	short loc_6ED8D589
		cmp	edi, 3
		ja	loc_6ED8CF4B	; jumptable 6ED8CF78 default case
		mov	ebp, [eax]
		mov	edx, edi
		add	edi, 1
		shl	edx, 4
		lea	ecx, [esp+edx+9Ch+var_64]
		mov	dword ptr [esp+edx+9Ch+var_64],	ebp
		mov	ebp, [eax+4]
		mov	[ecx+4], ebp
		mov	ebp, [eax+8]
		mov	[ecx+8], ebp
		mov	ebp, [eax+0Ch]
		mov	[ecx+0Ch], ebp
		mov	dword ptr [esp+edx+9Ch+var_64],	esi
		mov	esi, [esp+9Ch+var_7C]
		mov	dword ptr [eax+8], 1
		add	esi, edx
		mov	[ebx+118h], esi

loc_6ED8D589:				; CODE XREF: sub_6ED8CF10+633j
		mov	eax, [eax]
		test	eax, eax
		jnz	short loc_6ED8D531

loc_6ED8D58F:				; CODE XREF: sub_6ED8CF10+62Cj
		mov	ebp, [esp+9Ch+var_74]

loc_6ED8D593:				; CODE XREF: sub_6ED8CF10+E50j
		mov	edx, [ebp+8]
		mov	eax, ebx
		call	sub_6ED8CF10
		mov	ecx, [esp+9Ch+var_78]
		mov	[ebx+118h], ecx
		mov	ecx, [esp+9Ch+var_5C]
		test	ecx, ecx
		jnz	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
		cmp	edi, 1
		jz	short loc_6ED8D5E3
		mov	edx, [esp+9Ch+var_7C]
		mov	eax, edi
		shl	eax, 4
		lea	esi, [edx+eax-0Ch]

loc_6ED8D5C5:				; CODE XREF: sub_6ED8CF10+6C7j
		mov	edx, [esi]
		sub	edi, 1
		mov	eax, ebx
		sub	esi, 10h
		call	sub_6ED8E250
		cmp	edi, 1
		ja	short loc_6ED8D5C5
		mov	ecx, [ebx+118h]
		mov	[esp+9Ch+var_78], ecx

loc_6ED8D5E3:				; CODE XREF: sub_6ED8CF10+6A6j
		mov	ecx, [esp+9Ch+var_78]
		mov	edx, ebp
		mov	eax, ebx
		call	sub_6ED8C7A0
		jmp	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
; ---------------------------------------------------------------------------

loc_6ED8D5F5:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	eax, [ebx+118h]	; jumptable 6ED8CF78 case 39
		mov	[esp+9Ch+var_60], edx
		mov	[esp+9Ch+var_5C], 0
		mov	dword ptr [esp+9Ch+var_64], eax
		lea	eax, [esp+9Ch+var_64]
		mov	[ebx+118h], eax
		mov	eax, [ebx+114h]
		mov	[esp+9Ch+var_58], eax
		mov	edx, [edx+8]
		mov	eax, ebx
		call	sub_6ED8CF10
		mov	edx, [esp+9Ch+var_5C]
		test	edx, edx
		jnz	loc_6ED8D3D7
		mov	eax, ebx
		mov	edx, 20h
		call	sub_6ED8A980
		mov	edx, [ebp+4]
		mov	eax, ebx
		call	sub_6ED8CF10
		mov	edx, offset asc_6EDA5718 ; "::*"
		mov	eax, ebx
		call	sub_6ED8C6E0
		jmp	loc_6ED8D3D7
; ---------------------------------------------------------------------------

loc_6ED8D65C:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	edi, [ebx+118h]	; jumptable 6ED8CF78 cases 23-25
		test	edi, edi
		jz	loc_6ED8D398
		mov	edx, edi
		jmp	short loc_6ED8D67A
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8D670:				; CODE XREF: sub_6ED8CF10+76Fj
					; sub_6ED8CF10+784j
		mov	edx, [edx]
		test	edx, edx
		jz	loc_6ED8D398

loc_6ED8D67A:				; CODE XREF: sub_6ED8CF10+75Cj
		mov	ecx, [edx+8]
		test	ecx, ecx
		jnz	short loc_6ED8D670
		mov	ecx, [edx+4]
		mov	ecx, [ecx]
		lea	esi, [ecx-17h]
		cmp	esi, 2
		ja	loc_6ED8D398
		cmp	eax, ecx
		jnz	short loc_6ED8D670
		jmp	loc_6ED8CF8B	; jumptable 6ED8CF78 case 36
; ---------------------------------------------------------------------------

loc_6ED8D69B:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	edx, offset aParm ; jumptable 6ED8CF78 case 6
		mov	eax, ebx
		call	sub_6ED8C6E0
		mov	eax, [ebp+4]
		lea	esi, [esp+9Ch+var_64]
		mov	[esp+9Ch+var_98], offset aLd ; "%ld"
		mov	[esp+9Ch+var_9C], esi ;	char *
		mov	[esp+9Ch+var_94], eax
		call	sprintf
		mov	edx, esi
		mov	eax, ebx
		call	sub_6ED8C6E0
		jmp	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
; ---------------------------------------------------------------------------

loc_6ED8D6D0:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	edx, offset aOperator_0	; jumptable 6ED8CF78 case 43
		mov	eax, ebx
		call	sub_6ED8C6E0
		mov	eax, [ebp+4]
		mov	edx, [eax+4]
		movzx	ecx, byte ptr [edx]
		sub	ecx, 61h
		cmp	cl, 19h
		ja	short loc_6ED8D6FF
		mov	edx, 20h
		mov	eax, ebx
		call	sub_6ED8A980
		mov	eax, [ebp+4]
		mov	edx, [eax+4]

loc_6ED8D6FF:				; CODE XREF: sub_6ED8CF10+7DBj
		mov	ecx, [eax+8]
		mov	eax, ebx
		call	sub_6ED8C630
		jmp	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
; ---------------------------------------------------------------------------

loc_6ED8D70E:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	edx, offset aOperator ;	jumptable 6ED8CF78 case	44
		jmp	loc_6ED8CFB2
; ---------------------------------------------------------------------------

loc_6ED8D718:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	edx, offset aReferenceTempo ; jumptable	6ED8CF78 case 20
		jmp	loc_6ED8CF84
; ---------------------------------------------------------------------------

loc_6ED8D722:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	edx, offset aHiddenAliasFor ; jumptable	6ED8CF78 case 21
		jmp	loc_6ED8CF84
; ---------------------------------------------------------------------------

loc_6ED8D72C:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	edx, offset aGlobalDestruct ; jumptable	6ED8CF78 case 59
		jmp	loc_6ED8CF84
; ---------------------------------------------------------------------------

loc_6ED8D736:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	edx, [edx+4]	; jumptable 6ED8CF78 cases 52,53
		xor	esi, esi
		cmp	dword ptr [edx], 23h
		jnz	short loc_6ED8D75D
		mov	edx, [edx+4]
		mov	esi, [edx+10h]
		cmp	esi, 1
		jb	short loc_6ED8D75D
		cmp	esi, 6
		jbe	loc_6ED8DBC0
		cmp	esi, 7
		jz	loc_6ED8DB75

loc_6ED8D75D:				; CODE XREF: sub_6ED8CF10+82Ej
					; sub_6ED8CF10+839j ...
		mov	edx, 28h
		mov	eax, ebx
		call	sub_6ED8A980
		mov	edx, [ebp+4]
		mov	eax, ebx
		call	sub_6ED8CF10
		mov	edx, 29h
		mov	eax, ebx
		call	sub_6ED8A980
		cmp	dword ptr [ebp+0], 35h
		jz	loc_6ED8DC87

loc_6ED8D789:				; CODE XREF: sub_6ED8CF10+D83j
		cmp	esi, 8
		jnz	loc_6ED8CFB9	; jumptable 6ED8CF78 case 7
		mov	eax, ebx
		mov	edx, 5Bh
		call	sub_6ED8A980
		mov	edx, [ebp+8]
		mov	eax, ebx
		call	sub_6ED8CF10
		mov	edx, 5Dh
		mov	eax, ebx
		call	sub_6ED8A980
		jmp	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
; ---------------------------------------------------------------------------

loc_6ED8D7B9:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	eax, [ebx+118h]	; jumptable 6ED8CF78 case 4
		test	byte ptr [ebx],	4
		mov	dword ptr [ebx+118h], 0
		mov	[esp+9Ch+var_7C], eax
		mov	edx, [edx+4]
		jz	short loc_6ED8D7E5
		mov	esi, [edx]
		test	esi, esi
		jnz	short loc_6ED8D7E5
		cmp	dword ptr [edx+8], 6
		jz	loc_6ED8DCF9

loc_6ED8D7E5:				; CODE XREF: sub_6ED8CF10+8C3j
					; sub_6ED8CF10+8C9j ...
		mov	eax, ebx
		call	sub_6ED8CF10
		cmp	byte ptr [ebx+108h], 3Ch
		jz	loc_6ED8DC76

loc_6ED8D7F9:				; CODE XREF: sub_6ED8CF10+D72j
		mov	edx, 3Ch
		mov	eax, ebx
		call	sub_6ED8A980
		mov	edx, [ebp+8]
		mov	eax, ebx
		call	sub_6ED8CF10
		cmp	byte ptr [ebx+108h], 3Eh
		jz	loc_6ED8DC65

loc_6ED8D81C:				; CODE XREF: sub_6ED8CF10+D61j
		mov	edx, 3Eh
		mov	eax, ebx
		call	sub_6ED8A980

loc_6ED8D828:				; CODE XREF: sub_6ED8CF10+E14j
		mov	edx, [esp+9Ch+var_7C]
		mov	[ebx+118h], edx
		jmp	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
; ---------------------------------------------------------------------------

loc_6ED8D837:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	esi, [ebx+114h]	; jumptable 6ED8CF78 case 5
		test	esi, esi
		jz	loc_6ED8DC47
		mov	eax, [esi+4]
		mov	edx, [edx+4]
		mov	eax, [eax+8]
		test	eax, eax
		jnz	short loc_6ED8D86D
		jmp	loc_6ED8CF4B	; jumptable 6ED8CF78 default case
; ---------------------------------------------------------------------------

loc_6ED8D857:				; CODE XREF: sub_6ED8CF10+960j
		test	edx, edx
		jle	loc_6ED8DAD3
		mov	eax, [eax+8]
		sub	edx, 1
		test	eax, eax
		jz	loc_6ED8CF4B	; jumptable 6ED8CF78 default case

loc_6ED8D86D:				; CODE XREF: sub_6ED8CF10+940j
		cmp	dword ptr [eax], 2Ah
		jz	short loc_6ED8D857
		jmp	loc_6ED8CF4B	; jumptable 6ED8CF78 default case
; ---------------------------------------------------------------------------

loc_6ED8D877:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	eax, [edx+8]	; jumptable 6ED8CF78 case 49
		cmp	dword ptr [eax], 32h
		lea	esi, [esi+0]
		jnz	loc_6ED8CF4B	; jumptable 6ED8CF78 default case
		mov	edx, [eax+8]
		cmp	dword ptr [edx], 33h
		jnz	loc_6ED8CF4B	; jumptable 6ED8CF78 default case
		mov	edx, [eax+4]
		mov	eax, ebx
		call	sub_6ED8E5C0
		mov	edx, [ebp+4]
		mov	eax, ebx
		call	sub_6ED8E4E0
		mov	eax, [ebp+8]
		mov	eax, [eax+8]
		mov	edx, [eax+4]
		mov	eax, ebx
		call	sub_6ED8E5C0
		mov	eax, ebx
		mov	edx, offset asc_6EDA5749 ; " : "
		call	sub_6ED8C6E0
		mov	eax, [ebp+8]
		mov	eax, [eax+8]
		mov	edx, [eax+8]
		mov	eax, ebx
		call	sub_6ED8E5C0
		jmp	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
; ---------------------------------------------------------------------------

loc_6ED8D8D7:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		test	byte ptr [ebx],	20h ; jumptable	6ED8CF78 case 37
		jnz	loc_6ED8DA9A

loc_6ED8D8E0:				; CODE XREF: sub_6ED8CF10+B97j
		mov	ecx, [ebp+4]
		test	ecx, ecx
		jz	short loc_6ED8D946
		mov	eax, [ebx+118h]
		mov	[esp+9Ch+var_60], ebp
		mov	[esp+9Ch+var_5C], 0
		mov	dword ptr [esp+9Ch+var_64], eax
		lea	eax, [esp+9Ch+var_64]
		mov	[ebx+118h], eax
		mov	eax, [ebx+114h]
		mov	[esp+9Ch+var_58], eax
		mov	edx, [ebp+4]
		mov	eax, ebx
		call	sub_6ED8CF10
		mov	edx, [esp+9Ch+var_5C]
		mov	eax, dword ptr [esp+9Ch+var_64]
		test	edx, edx
		mov	[ebx+118h], eax
		jnz	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
		test	byte ptr [ebx],	20h
		jnz	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
		mov	edx, 20h
		mov	eax, ebx
		call	sub_6ED8A980

loc_6ED8D946:				; CODE XREF: sub_6ED8CF10+9D5j
		test	byte ptr [ebx],	20h
		jnz	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
		mov	ecx, [ebx+118h]
		mov	edx, ebp
		mov	eax, ebx
		call	sub_6ED8CBE0
		jmp	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
; ---------------------------------------------------------------------------

loc_6ED8D963:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	edx, offset aGlobalConstruc ; jumptable	6ED8CF78 case 58
		jmp	loc_6ED8CF84
; ---------------------------------------------------------------------------

loc_6ED8D96D:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	edx, offset aVirtualThunkTo ; jumptable	6ED8CF78 case 16
		jmp	loc_6ED8CF84
; ---------------------------------------------------------------------------

loc_6ED8D977:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	edx, offset aCovariantRetur ; jumptable	6ED8CF78 case 17
		jmp	loc_6ED8CF84
; ---------------------------------------------------------------------------

loc_6ED8D981:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		test	byte ptr [ebx],	4 ; jumptable 6ED8CF78 case 35
		jnz	loc_6ED8DA63
		mov	eax, [edx+4]
		mov	ecx, [eax+4]
		mov	edx, [eax]
		mov	eax, ebx
		call	sub_6ED8C630
		jmp	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
; ---------------------------------------------------------------------------

loc_6ED8D99E:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	edx, offset aJavaResource ; jumptable 6ED8CF78 case 54
		jmp	loc_6ED8CF84
; ---------------------------------------------------------------------------

loc_6ED8D9A8:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	eax, ebx	; jumptable 6ED8CF78 case 57
		mov	edx, offset aDecltype ;	"decltype ("
		call	sub_6ED8C6E0
		mov	edx, [ebp+4]
		mov	eax, ebx
		call	sub_6ED8CF10
		jmp	loc_6ED8D4AE
; ---------------------------------------------------------------------------

loc_6ED8D9C3:				; CODE XREF: sub_6ED8CF10:loc_6ED8CF78j
					; DATA XREF: .rdata:off_6EDA57C8o
		mov	edx, [edx+4]	; jumptable 6ED8CF78 case 55
		mov	eax, ebx
		call	sub_6ED8CF10
		mov	edx, [ebp+8]
		mov	eax, ebx
		call	sub_6ED8CF10
		jmp	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
; ---------------------------------------------------------------------------

loc_6ED8D9DC:				; CODE XREF: sub_6ED8CF10+1A1j
		cmp	byte ptr [eax+1], 5Fh
		lea	esi, [eax+1]
		jnz	loc_6ED8D0B7
		cmp	byte ptr [eax+2], 55h
		lea	esi, [esi+0]
		jnz	loc_6ED8D0B7
		lea	ebp, [eax+3]
		cmp	edi, ebp
		jbe	loc_6ED8D0B7
		xor	ecx, ecx
		mov	[esp+9Ch+var_7C], esi
		mov	esi, ecx
		jmp	short loc_6ED8DA22
; ---------------------------------------------------------------------------

loc_6ED8DA0B:				; CODE XREF: sub_6ED8CF10+B1Cj
		movsx	eax, al
		sub	eax, 30h

loc_6ED8DA11:				; CODE XREF: sub_6ED8CF10+B2Cj
					; sub_6ED8CF10+B40j
		add	ebp, 1
		cmp	edi, ebp
		jbe	loc_6ED8DCF0
		shl	esi, 4
		lea	esi, [eax+esi]

loc_6ED8DA22:				; CODE XREF: sub_6ED8CF10+AF9j
		movzx	eax, byte ptr [ebp+0]
		lea	ecx, [eax-30h]
		cmp	cl, 9
		jbe	short loc_6ED8DA0B
		lea	ecx, [eax-41h]
		cmp	cl, 5
		ja	short loc_6ED8DA3E
		movsx	eax, al
		sub	eax, 37h
		jmp	short loc_6ED8DA11
; ---------------------------------------------------------------------------

loc_6ED8DA3E:				; CODE XREF: sub_6ED8CF10+B24j
		lea	ecx, [eax-61h]
		cmp	cl, 5
		ja	loc_6ED8DDAA
		movsx	eax, al
		sub	eax, 57h
		jmp	short loc_6ED8DA11
; ---------------------------------------------------------------------------

loc_6ED8DA52:				; CODE XREF: sub_6ED8CF10+1D9j
		mov	edx, 2Eh
		mov	eax, ebx
		call	sub_6ED8A980
		jmp	loc_6ED8CFB9	; jumptable 6ED8CF78 case 7
; ---------------------------------------------------------------------------

loc_6ED8DA63:				; CODE XREF: sub_6ED8CF10+A74j
		mov	eax, [edx+4]
		mov	ecx, [eax+0Ch]
		mov	edx, [eax+8]
		mov	eax, ebx
		call	sub_6ED8C630
		jmp	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
; ---------------------------------------------------------------------------

loc_6ED8DA78:				; CODE XREF: sub_6ED8CF10+3F7j
		mov	edx, offset a_fract ; "_Fract"
		mov	eax, ebx
		call	sub_6ED8C6E0
		jmp	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
; ---------------------------------------------------------------------------

loc_6ED8DA89:				; CODE XREF: sub_6ED8CF10+3CDj
		mov	edx, offset a_sat ; "_Sat "
		mov	eax, ebx
		call	sub_6ED8C6E0
		jmp	loc_6ED8D2E3
; ---------------------------------------------------------------------------

loc_6ED8DA9A:				; CODE XREF: sub_6ED8CF10+9CAj
		mov	ecx, [ebx+118h]
		mov	eax, ebx
		call	sub_6ED8CBE0
		jmp	loc_6ED8D8E0
; ---------------------------------------------------------------------------

loc_6ED8DAAC:				; CODE XREF: sub_6ED8CF10+4F6j
		mov	eax, ebx
		mov	edx, 28h
		call	sub_6ED8A980
		mov	edx, [ebp+4]
		mov	eax, ebx
		call	sub_6ED8E340
		mov	edx, 29h
		mov	eax, ebx
		call	sub_6ED8A980
		jmp	loc_6ED8D415
; ---------------------------------------------------------------------------

loc_6ED8DAD3:				; CODE XREF: sub_6ED8CF10+949j
		test	eax, eax
		jz	loc_6ED8CF4B	; jumptable 6ED8CF78 default case
		test	edx, edx
		lea	esi, [esi+0]
		jnz	loc_6ED8CF4B	; jumptable 6ED8CF78 default case
		mov	edx, [eax+4]
		test	edx, edx
		jz	loc_6ED8CF4B	; jumptable 6ED8CF78 default case
		cmp	dword ptr [edx], 2Ah
		jz	short loc_6ED8DB45

loc_6ED8DAF6:				; CODE XREF: sub_6ED8CF10+E30j
		mov	eax, [esi]
		mov	[ebx+114h], eax
		mov	eax, ebx
		call	sub_6ED8CF10
		mov	[ebx+114h], esi
		jmp	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
; ---------------------------------------------------------------------------

loc_6ED8DB10:				; CODE XREF: sub_6ED8CF10+432j
		mov	edx, [ebx+110h]
		mov	byte ptr [ebx+eax+4], 0
		mov	[esp+9Ch+var_98], eax
		lea	eax, [ebx+4]
		mov	[esp+9Ch+var_9C], eax
		mov	[esp+9Ch+var_94], edx
		call	dword ptr [ebx+10Ch]
		mov	dword ptr [ebx+104h], 0
		add	dword ptr [ebx+124h], 1
		jmp	loc_6ED8D348
; ---------------------------------------------------------------------------

loc_6ED8DB45:				; CODE XREF: sub_6ED8CF10+BE4j
		mov	eax, [ebx+120h]
		test	eax, eax
		jg	short loc_6ED8DB66
		jmp	loc_6ED8DD29
; ---------------------------------------------------------------------------

loc_6ED8DB54:				; CODE XREF: sub_6ED8CF10+C5Ej
		cmp	dword ptr [edx], 2Ah
		jnz	loc_6ED8CF4B	; jumptable 6ED8CF78 default case
		test	eax, eax
		nop
		jle	loc_6ED8DD29

loc_6ED8DB66:				; CODE XREF: sub_6ED8CF10+C3Dj
		mov	edx, [edx+8]
		sub	eax, 1
		test	edx, edx
		jnz	short loc_6ED8DB54
		jmp	loc_6ED8CF4B	; jumptable 6ED8CF78 default case
; ---------------------------------------------------------------------------

loc_6ED8DB75:				; CODE XREF: sub_6ED8CF10+847j
		mov	edx, [ebp+8]
		mov	ecx, [edx]
		test	ecx, ecx
		jnz	loc_6ED8D75D
		cmp	dword ptr [edx+8], 1
		jnz	loc_6ED8D75D
		cmp	eax, 34h
		jnz	loc_6ED8D75D
		mov	eax, [edx+4]
		movzx	eax, byte ptr [eax]
		cmp	al, 30h
		jz	loc_6ED8DDFE
		cmp	al, 31h
		jnz	loc_6ED8D75D
		mov	edx, offset aTrue ; "true"
		mov	eax, ebx
		call	sub_6ED8C6E0
		jmp	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8DBC0:				; CODE XREF: sub_6ED8CF10+83Ej
		mov	edx, [ebp+8]
		mov	edi, [edx]
		test	edi, edi
		jnz	loc_6ED8D75D
		cmp	eax, 35h
		jz	loc_6ED8DDEA

loc_6ED8DBD6:				; CODE XREF: sub_6ED8CF10+EE9j
		mov	eax, ebx
		sub	esi, 2
		call	sub_6ED8CF10
		cmp	esi, 4		; switch 5 cases
		ja	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
		jmp	ds:off_6EDA58BC[esi*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_6ED8DBF0:				; CODE XREF: sub_6ED8CF10+CD9j
					; DATA XREF: .rdata:off_6EDA58BCo
		mov	edx, offset aLl	; jumptable 6ED8DBE9 case 3
		mov	eax, ebx
		call	sub_6ED8C6E0
		jmp	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
; ---------------------------------------------------------------------------

loc_6ED8DC01:				; CODE XREF: sub_6ED8CF10+CD9j
					; DATA XREF: .rdata:off_6EDA58BCo
		mov	edx, offset aUl	; jumptable 6ED8DBE9 case 2
		mov	eax, ebx
		call	sub_6ED8C6E0
		jmp	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
; ---------------------------------------------------------------------------

loc_6ED8DC12:				; CODE XREF: sub_6ED8CF10+CD9j
					; DATA XREF: .rdata:off_6EDA58BCo
		mov	edx, 6Ch	; jumptable 6ED8DBE9 case 1
		mov	eax, ebx
		call	sub_6ED8A980
		xchg	ax, ax
		jmp	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
; ---------------------------------------------------------------------------

loc_6ED8DC25:				; CODE XREF: sub_6ED8CF10+CD9j
					; DATA XREF: .rdata:off_6EDA58BCo
		mov	edx, 75h	; jumptable 6ED8DBE9 case 0
		mov	eax, ebx
		call	sub_6ED8A980
		jmp	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
; ---------------------------------------------------------------------------

loc_6ED8DC36:				; CODE XREF: sub_6ED8CF10+CD9j
					; DATA XREF: .rdata:off_6EDA58BCo
		mov	edx, offset aUll ; jumptable 6ED8DBE9 case 4
		mov	eax, ebx
		call	sub_6ED8C6E0
		jmp	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
; ---------------------------------------------------------------------------

loc_6ED8DC47:				; CODE XREF: sub_6ED8CF10+92Fj
		mov	dword ptr [ebx+11Ch], 1
		jmp	loc_6ED8CF4B	; jumptable 6ED8CF78 default case
; ---------------------------------------------------------------------------

loc_6ED8DC56:				; CODE XREF: sub_6ED8CF10+373j
					; sub_6ED8CF10+38Dj
		mov	ecx, [esp+9Ch+var_74]
		mov	[ebx+118h], ecx
		jmp	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
; ---------------------------------------------------------------------------

loc_6ED8DC65:				; CODE XREF: sub_6ED8CF10+906j
		mov	edx, 20h
		mov	eax, ebx
		call	sub_6ED8A980
		jmp	loc_6ED8D81C
; ---------------------------------------------------------------------------

loc_6ED8DC76:				; CODE XREF: sub_6ED8CF10+8E3j
		mov	edx, 20h
		mov	eax, ebx
		call	sub_6ED8A980
		jmp	loc_6ED8D7F9
; ---------------------------------------------------------------------------

loc_6ED8DC87:				; CODE XREF: sub_6ED8CF10+873j
		mov	edx, 2Dh
		mov	eax, ebx
		call	sub_6ED8A980
		jmp	loc_6ED8D789
; ---------------------------------------------------------------------------

loc_6ED8DC98:				; CODE XREF: sub_6ED8CF10+550j
		mov	eax, ebx
		mov	edx, 5Bh
		call	sub_6ED8A980
		mov	eax, [ebp+8]
		mov	edx, [eax+8]
		mov	eax, ebx
		call	sub_6ED8CF10
		mov	edx, 5Dh
		mov	eax, ebx
		call	sub_6ED8A980
		jmp	loc_6ED8D489
; ---------------------------------------------------------------------------

loc_6ED8DCC2:				; CODE XREF: sub_6ED8CF10+526j
		mov	edx, [edx+4]
		cmp	dword ptr [edx+8], 1
		jnz	loc_6ED8D43C
		mov	edx, [edx+4]
		cmp	byte ptr [edx],	3Eh
		jnz	loc_6ED8D43C
		mov	eax, ebx
		mov	edx, 28h
		call	sub_6ED8A980
		mov	eax, [ebp+8]
		jmp	loc_6ED8D43C
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8DCF0:				; CODE XREF: sub_6ED8CF10+B06j
		mov	esi, [esp+9Ch+var_7C]
		jmp	loc_6ED8D0B7
; ---------------------------------------------------------------------------

loc_6ED8DCF9:				; CODE XREF: sub_6ED8CF10+8CFj
		mov	esi, [edx+4]
		mov	edi, offset aJarray ; "JArray"
		mov	ecx, 6
		repe cmpsb
		jnz	loc_6ED8D7E5
		mov	edx, [ebp+8]
		mov	eax, ebx
		call	sub_6ED8CF10
		mov	edx, offset asc_6EDA561E ; "[]"
		mov	eax, ebx
		call	sub_6ED8C6E0
		jmp	loc_6ED8D828
; ---------------------------------------------------------------------------

loc_6ED8DD29:				; CODE XREF: sub_6ED8CF10+C3Fj
					; sub_6ED8CF10+C50j
		test	edx, edx
		jz	loc_6ED8CF4B	; jumptable 6ED8CF78 default case
		test	eax, eax
		jnz	loc_6ED8CF4B	; jumptable 6ED8CF78 default case
		mov	edx, [edx+4]
		test	edx, edx
		xchg	ax, ax
		jnz	loc_6ED8DAF6
		jmp	loc_6ED8CF4B	; jumptable 6ED8CF78 default case
; ---------------------------------------------------------------------------

loc_6ED8DD4B:				; CODE XREF: sub_6ED8CF10+566j
		mov	eax, ebx
		lea	esi, [esi+0]
		call	sub_6ED8E4E0
		jmp	loc_6ED8D47C
; ---------------------------------------------------------------------------

loc_6ED8DD5A:				; CODE XREF: sub_6ED8CF10+5F9j
					; sub_6ED8CF10+60Ej
		mov	edi, 1
		nop
		jmp	loc_6ED8D593
; ---------------------------------------------------------------------------

loc_6ED8DD65:				; CODE XREF: sub_6ED8CF10+29Cj
		mov	ecx, [esp+9Ch+var_78]
		lea	eax, [esp+9Ch+var_24]
		mov	[ebx+114h], eax
		mov	[esp+9Ch+var_20], esi
		mov	[esp+9Ch+var_24], ecx
		jmp	loc_6ED8D26E
; ---------------------------------------------------------------------------

loc_6ED8DD80:				; CODE XREF: sub_6ED8CF10+36Bj
		mov	eax, [esp+9Ch+var_24]
		mov	[ebx+114h], eax
		jmp	loc_6ED8D281
; ---------------------------------------------------------------------------

loc_6ED8DD8F:				; CODE XREF: sub_6ED8CF10+104j
		mov	edx, [ebp+4]
		mov	eax, ebx
		call	sub_6ED8E5C0
		mov	edx, offset a___ ; "..."
		mov	eax, ebx
		call	sub_6ED8C6E0
		jmp	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
; ---------------------------------------------------------------------------

loc_6ED8DDAA:				; CODE XREF: sub_6ED8CF10+B34j
		cmp	ebp, edi
		mov	ecx, esi
		mov	esi, [esp+9Ch+var_7C]
		jnb	loc_6ED8D0B7
		cmp	ecx, 0FFh
		xchg	ax, ax
		ja	loc_6ED8D0B7
		cmp	al, 5Fh
		jnz	loc_6ED8D0B7
		movsx	edx, cl
		mov	eax, ebx
		call	sub_6ED8A980
		lea	esi, [ebp+1]
		jmp	loc_6ED8D0C1
; ---------------------------------------------------------------------------

loc_6ED8DDE0:				; CODE XREF: sub_6ED8CF10+247j
		mov	edi, 1
		jmp	loc_6ED8D1A9
; ---------------------------------------------------------------------------

loc_6ED8DDEA:				; CODE XREF: sub_6ED8CF10+CC0j
		mov	edx, 2Dh
		mov	eax, ebx
		call	sub_6ED8A980
		mov	edx, [ebp+8]
		jmp	loc_6ED8DBD6
; ---------------------------------------------------------------------------

loc_6ED8DDFE:				; CODE XREF: sub_6ED8CF10+C8Dj
		mov	edx, offset aFalse ; "false"
		mov	eax, ebx
		call	sub_6ED8C6E0
		jmp	loc_6ED8CF55	; jumptable 6ED8DBE9 default case
sub_6ED8CF10	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED8DE10	proc near		; CODE XREF: .text:6ED8E0D8p
					; sub_6ED8E0F0+64p

var_184		= dword	ptr -184h
var_180		= dword	ptr -180h
var_17C		= dword	ptr -17Ch
var_174		= dword	ptr -174h
var_170		= byte ptr -170h
var_70		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 18Ch
		mov	[ebp+var_17C], edx
		mov	[ebp+var_180], ecx
		cmp	byte ptr [eax],	5Fh
		jz	loc_6ED8DFE0

loc_6ED8DE33:				; CODE XREF: sub_6ED8DE10+1D9j
		mov	edi, offset a_global_ ;	"_GLOBAL_"
		mov	ecx, 8
		mov	esi, ebx
		repe cmpsb
		jnz	short loc_6ED8DE70
		movzx	eax, byte ptr [ebx+8]
		cmp	al, 5Fh
		jz	short loc_6ED8DE53
		cmp	al, 2Eh
		jnz	loc_6ED8DFD0

loc_6ED8DE53:				; CODE XREF: sub_6ED8DE10+39j
					; sub_6ED8DE10+1C8j
		movzx	eax, byte ptr [ebx+9]
		cmp	al, 49h
		setz	dl
		jz	short loc_6ED8DE62
		cmp	al, 44h
		jnz	short loc_6ED8DE70

loc_6ED8DE62:				; CODE XREF: sub_6ED8DE10+4Cj
		cmp	byte ptr [ebx+0Ah], 5Fh
		jz	loc_6ED8E096
		lea	esi, [esi+0]

loc_6ED8DE70:				; CODE XREF: sub_6ED8DE10+31j
					; sub_6ED8DE10+50j ...
		xor	esi, esi
		xor	eax, eax
		test	byte ptr [ebp+var_17C],	10h
		jz	loc_6ED8DFC2

loc_6ED8DE81:				; CODE XREF: sub_6ED8DE10+1E0j
					; sub_6ED8DE10+291j
		mov	[esp], ebx	; char *
		mov	edi, esp
		call	strlen
		mov	[ebp+var_4C], ebx
		mov	[ebp+var_40], ebx
		mov	[ebp+var_38], 0
		mov	[ebp+var_2C], 0
		mov	[ebp+var_24], 0
		lea	edx, [ebx+eax]
		mov	[ebp+var_48], edx
		mov	edx, [ebp+var_17C]
		lea	ecx, ds:0[eax*4]
		mov	[ebp+var_28], eax
		mov	[ebp+var_20], 0
		mov	[ebp+var_1C], 0
		mov	[ebp+var_44], edx
		lea	edx, [eax+eax]
		mov	[ebp+var_34], edx
		lea	edx, [ecx+edx]
		lea	eax, ds:1Eh[edx*4]
		and	eax, 0FFFFFFF0h
		call	sub_6ED8FA60
		lea	edx, [esp+1Bh]
		lea	eax, [ecx+1Eh]
		and	edx, 0FFFFFFF0h
		and	eax, 0FFFFFFF0h
		call	sub_6ED8FA60
		lea	eax, [esp+1Bh]
		and	eax, 0FFFFFFF0h
		cmp	esi, 1
		mov	[ebp+var_3C], edx
		mov	[ebp+var_30], eax
		jz	loc_6ED8E055
		jnb	loc_6ED8DFF5

loc_6ED8DF13:				; CODE XREF: sub_6ED8DE10+1E8j
		lea	eax, [ebp+var_4C]
		call	sub_6ED8AEC0
		mov	edx, eax

loc_6ED8DF1D:				; CODE XREF: sub_6ED8DE10+240j
					; sub_6ED8DE10+24Cj ...
		test	byte ptr [ebp+var_17C],	1
		jz	short loc_6ED8DF32
		mov	eax, [ebp+var_40]
		cmp	byte ptr [eax],	0
		jnz	loc_6ED8E061

loc_6ED8DF32:				; CODE XREF: sub_6ED8DE10+114j
		test	edx, edx
		jz	loc_6ED8E061
		mov	eax, [ebp+var_17C]
		mov	[ebp+var_70], 0
		mov	[ebp+var_6C], 0
		mov	[ebp+var_60], 0
		mov	[ebp+var_174], eax
		mov	eax, [ebp+var_180]
		mov	[ebp+var_5C], 0
		mov	[ebp+var_50], 0
		mov	[ebp+var_58], 0
		mov	[ebp+var_68], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_64], eax
		lea	eax, [ebp+var_174]
		call	sub_6ED8CF10
		mov	eax, [ebp+var_70]
		mov	[ebp+eax+var_170], 0
		mov	eax, [ebp+var_64]
		mov	[esp+8], eax
		mov	eax, [ebp+var_70]
		mov	[esp+4], eax
		lea	eax, [ebp+var_170]
		mov	[esp], eax
		call	[ebp+var_68]
		xor	eax, eax
		add	[ebp+var_50], 1
		cmp	[ebp+var_58], 0
		mov	[ebp+var_70], 0
		mov	esp, edi
		setz	al

loc_6ED8DFC2:				; CODE XREF: sub_6ED8DE10+6Bj
					; sub_6ED8DE10+255j
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8DFD0:				; CODE XREF: sub_6ED8DE10+3Dj
		cmp	al, 24h
		jnz	loc_6ED8DE70
		jmp	loc_6ED8DE53
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8DFE0:				; CODE XREF: sub_6ED8DE10+1Dj
		cmp	byte ptr [eax+1], 5Ah
		mov	esi, 1
		jnz	loc_6ED8DE33
		nop
		jmp	loc_6ED8DE81
; ---------------------------------------------------------------------------

loc_6ED8DFF5:				; CODE XREF: sub_6ED8DE10+FDj
		cmp	esi, 3
		ja	loc_6ED8DF13
		add	ebx, 0Bh
		mov	[ebp+var_40], ebx
		mov	[esp], ebx	; char *
		call	strlen
		mov	edx, ebx
		mov	ecx, eax
		lea	eax, [ebp+var_4C]
		call	sub_6ED8A5B0
		xor	edx, edx
		cmp	esi, 2
		setnz	dl
		add	edx, 3Ah
		mov	dword ptr [esp], 0
		mov	ecx, eax
		lea	eax, [ebp+var_4C]
		call	sub_6ED8A530
		mov	ebx, [ebp+var_40]
		mov	[esp], ebx	; char *
		mov	[ebp+var_184], eax
		call	strlen
		mov	edx, [ebp+var_184]
		add	ebx, eax
		mov	[ebp+var_40], ebx
		jmp	loc_6ED8DF1D
; ---------------------------------------------------------------------------

loc_6ED8E055:				; CODE XREF: sub_6ED8DE10+F7j
		cmp	byte ptr [ebx],	5Fh
		jz	short loc_6ED8E070

loc_6ED8E05A:				; CODE XREF: sub_6ED8DE10+26Aj
		xor	edx, edx
		jmp	loc_6ED8DF1D
; ---------------------------------------------------------------------------

loc_6ED8E061:				; CODE XREF: sub_6ED8DE10+11Cj
					; sub_6ED8DE10+124j
		xor	eax, eax
		mov	esp, edi
		jmp	loc_6ED8DFC2
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8E070:				; CODE XREF: sub_6ED8DE10+248j
		lea	eax, [ebx+1]
		mov	[ebp+var_40], eax
		cmp	byte ptr [ebx+1], 5Ah
		jnz	short loc_6ED8E05A
		mov	edx, 1
		add	ebx, 2
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_40], ebx
		call	sub_6ED8BF60
		mov	edx, eax
		jmp	loc_6ED8DF1D
; ---------------------------------------------------------------------------

loc_6ED8E096:				; CODE XREF: sub_6ED8DE10+56j
		mov	esi, edx
		shl	esi, 1Fh
		sar	esi, 1Fh
		add	esi, 3
		jmp	loc_6ED8DE81
sub_6ED8DE10	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 1Ch
		mov	ecx, [esp+24h]
		mov	eax, [esp+20h]
		test	ecx, ecx
		jnz	short loc_6ED8E0C8

loc_6ED8E0BF:				; CODE XREF: .text:6ED8E0CAj
		mov	eax, 0FFFFFFFDh

loc_6ED8E0C4:				; CODE XREF: .text:6ED8E0E5j
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED8E0C8:				; CODE XREF: .text:6ED8E0BDj
		test	eax, eax
		jz	short loc_6ED8E0BF
		mov	edx, [esp+28h]
		mov	[esp], edx
		mov	edx, 11h
		call	sub_6ED8DE10
		cmp	eax, 1
		sbb	eax, eax
		and	eax, 0FFFFFFFEh
		jmp	short loc_6ED8E0C4
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_6ED8E0F0(int,	char *,	int, int)
sub_6ED8E0F0	proc near		; CODE XREF: sub_6ED96E80+B5p

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 4Ch
		mov	eax, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_10], ebx
		mov	ebx, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_C], esi
		mov	esi, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_8], edi
		mov	edi, [esp+4Ch+arg_C]
		test	eax, eax
		mov	[esp+4Ch+var_4], ebp
		jz	loc_6ED8E1EA
		test	ebx, ebx
		jz	loc_6ED8E1E2

loc_6ED8E123:				; CODE XREF: sub_6ED8E0F0+F4j
		lea	edx, [esp+4Ch+var_2C]
		mov	ecx, offset sub_6ED8C550
		mov	[esp+4Ch+var_4C], edx
		mov	edx, 11h
		mov	[esp+4Ch+var_2C], 0
		mov	[esp+4Ch+var_28], 0
		mov	[esp+4Ch+var_24], 0
		mov	[esp+4Ch+var_20], 0
		call	sub_6ED8DE10
		test	eax, eax
		jz	loc_6ED8E1F2
		mov	edx, [esp+4Ch+var_20]
		mov	[esp+4Ch+var_30], 1
		test	edx, edx
		jz	short loc_6ED8E1D8

loc_6ED8E171:				; CODE XREF: sub_6ED8E0F0+F0j
		mov	ebp, [esp+4Ch+var_2C]
		test	ebp, ebp
		jz	loc_6ED8E206
		test	esi, esi
		jz	loc_6ED8E230
		mov	[esp+4Ch+var_4C], ebp ;	char *
		call	strlen
		cmp	eax, [ebx]
		nop
		jb	short loc_6ED8E1C0
		mov	[esp+4Ch+var_4C], esi ;	void *
		call	free

loc_6ED8E19A:				; CODE XREF: sub_6ED8E0F0+142j
		mov	eax, [esp+4Ch+var_30]
		mov	[ebx], eax

loc_6ED8E1A0:				; CODE XREF: sub_6ED8E0F0+E6j
					; sub_6ED8E0F0+148j
		test	edi, edi
		jz	short loc_6ED8E1AA
		mov	dword ptr [edi], 0

loc_6ED8E1AA:				; CODE XREF: sub_6ED8E0F0+B2j
					; sub_6ED8E0F0+100j ...
		mov	eax, ebp
		mov	ebx, [esp+4Ch+var_10]
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED8E1C0:				; CODE XREF: sub_6ED8E0F0+A0j
		mov	[esp+4Ch+var_48], ebp ;	char *
		mov	[esp+4Ch+var_4C], esi ;	char *
		call	strcpy
		mov	[esp+4Ch+var_4C], ebp ;	void *
		mov	ebp, esi
		call	free
		jmp	short loc_6ED8E1A0
; ---------------------------------------------------------------------------

loc_6ED8E1D8:				; CODE XREF: sub_6ED8E0F0+7Fj
		mov	eax, [esp+4Ch+var_24]
		mov	[esp+4Ch+var_30], eax
		jmp	short loc_6ED8E171
; ---------------------------------------------------------------------------

loc_6ED8E1E2:				; CODE XREF: sub_6ED8E0F0+2Dj
		test	esi, esi
		jz	loc_6ED8E123

loc_6ED8E1EA:				; CODE XREF: sub_6ED8E0F0+25j
		test	edi, edi
		jnz	short loc_6ED8E220

loc_6ED8E1EE:				; CODE XREF: sub_6ED8E0F0+118j
		xor	ebp, ebp
		jmp	short loc_6ED8E1AA
; ---------------------------------------------------------------------------

loc_6ED8E1F2:				; CODE XREF: sub_6ED8E0F0+6Bj
		mov	eax, [esp+4Ch+var_2C]
		mov	[esp+4Ch+var_4C], eax ;	void *
		call	free
		mov	[esp+4Ch+var_30], 0

loc_6ED8E206:				; CODE XREF: sub_6ED8E0F0+87j
		test	edi, edi
		jz	short loc_6ED8E1EE
		cmp	[esp+4Ch+var_30], 1
		jz	short loc_6ED8E23D
		mov	dword ptr [edi], 0FFFFFFFEh
		xor	ebp, ebp
		jmp	short loc_6ED8E1AA
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8E220:				; CODE XREF: sub_6ED8E0F0+FCj
		mov	dword ptr [edi], 0FFFFFFFDh
		xor	ebp, ebp
		jmp	loc_6ED8E1AA
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8E230:				; CODE XREF: sub_6ED8E0F0+8Fj
		test	ebx, ebx
		jnz	loc_6ED8E19A
		jmp	loc_6ED8E1A0
; ---------------------------------------------------------------------------

loc_6ED8E23D:				; CODE XREF: sub_6ED8E0F0+11Fj
		mov	dword ptr [edi], 0FFFFFFFFh
		xor	ebp, ebp
		jmp	loc_6ED8E1AA
sub_6ED8E0F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8E250	proc near		; CODE XREF: sub_6ED8CAB0+40p
					; sub_6ED8CF10+3ADp ...

var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 0Ch
		mov	[esp+0Ch+var_8], ebx
		mov	ebx, edx
		mov	[esp+0Ch+var_4], esi
		mov	esi, eax
		mov	eax, [edx]
		sub	eax, 3
		cmp	eax, 24h	; switch 37 cases
		jbe	short loc_6ED8E280

loc_6ED8E269:				; CODE XREF: sub_6ED8E250:loc_6ED8E280j
					; DATA XREF: .rdata:off_6EDA5904o
		mov	edx, ebx	; jumptable 6ED8E280 default case

loc_6ED8E26B:				; CODE XREF: sub_6ED8E250+3Aj
					; sub_6ED8E250+76j
		mov	eax, esi
		mov	ebx, [esp+0Ch+var_8]
		mov	esi, [esp+0Ch+var_4]
		add	esp, 0Ch
		jmp	sub_6ED8CF10
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8E280:				; CODE XREF: sub_6ED8E250+17j
		jmp	ds:off_6EDA5904[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_6ED8E287:				; CODE XREF: sub_6ED8E250:loc_6ED8E280j
					; DATA XREF: .rdata:off_6EDA5904o
		mov	edx, [edx+4]	; jumptable 6ED8E280 case 0
		jmp	short loc_6ED8E26B
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8E290:				; CODE XREF: sub_6ED8E250:loc_6ED8E280j
					; DATA XREF: .rdata:off_6EDA5904o
		mov	edx, offset aRestrict ;	jumptable 6ED8E280 cases 20,23

loc_6ED8E295:				; CODE XREF: sub_6ED8E250+5Cj
					; sub_6ED8E250+65j ...
		mov	eax, esi
		mov	ebx, [esp+0Ch+var_8]
		mov	esi, [esp+0Ch+var_4]
		add	esp, 0Ch
		jmp	sub_6ED8C6E0
; ---------------------------------------------------------------------------

loc_6ED8E2A7:				; CODE XREF: sub_6ED8E250:loc_6ED8E280j
					; DATA XREF: .rdata:off_6EDA5904o
		mov	edx, offset aVolatile ;	jumptable 6ED8E280 cases 21,24
		jmp	short loc_6ED8E295
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8E2B0:				; CODE XREF: sub_6ED8E250:loc_6ED8E280j
					; DATA XREF: .rdata:off_6EDA5904o
		mov	edx, offset aConst ; jumptable 6ED8E280	cases 22,25
		jmp	short loc_6ED8E295
; ---------------------------------------------------------------------------

loc_6ED8E2B7:				; CODE XREF: sub_6ED8E250:loc_6ED8E280j
					; DATA XREF: .rdata:off_6EDA5904o
		mov	edx, 20h	; jumptable 6ED8E280 case 26
		mov	eax, esi
		call	sub_6ED8A980
		mov	edx, [ebx+8]
		jmp	short loc_6ED8E26B
; ---------------------------------------------------------------------------

loc_6ED8E2C8:				; CODE XREF: sub_6ED8E250:loc_6ED8E280j
					; DATA XREF: .rdata:off_6EDA5904o
		test	byte ptr [esi],	4 ; jumptable 6ED8E280 case 27
		mov	edx, 2Ah
		jz	short loc_6ED8E2E5
		mov	ebx, [esp+0Ch+var_8]
		mov	esi, [esp+0Ch+var_4]
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8E2E0:				; CODE XREF: sub_6ED8E250:loc_6ED8E280j
					; DATA XREF: .rdata:off_6EDA5904o
		mov	edx, 26h	; jumptable 6ED8E280 case 28

loc_6ED8E2E5:				; CODE XREF: sub_6ED8E250+80j
		mov	eax, esi
		mov	ebx, [esp+0Ch+var_8]
		mov	esi, [esp+0Ch+var_4]
		add	esp, 0Ch
		jmp	sub_6ED8A980
; ---------------------------------------------------------------------------

loc_6ED8E2F7:				; CODE XREF: sub_6ED8E250:loc_6ED8E280j
					; DATA XREF: .rdata:off_6EDA5904o
		mov	edx, offset asc_6EDA58EB ; jumptable 6ED8E280 case 29
		jmp	short loc_6ED8E295
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8E300:				; CODE XREF: sub_6ED8E250:loc_6ED8E280j
					; DATA XREF: .rdata:off_6EDA5904o
		mov	edx, offset aComplex ; jumptable 6ED8E280 case 30
		jmp	short loc_6ED8E295
; ---------------------------------------------------------------------------

loc_6ED8E307:				; CODE XREF: sub_6ED8E250:loc_6ED8E280j
					; DATA XREF: .rdata:off_6EDA5904o
		mov	edx, offset aImaginary ; jumptable 6ED8E280 case 31
		jmp	short loc_6ED8E295
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8E310:				; CODE XREF: sub_6ED8E250:loc_6ED8E280j
					; DATA XREF: .rdata:off_6EDA5904o
		cmp	byte ptr [esi+108h], 28h ; jumptable 6ED8E280 case 36
		jz	short loc_6ED8E325
		mov	edx, 20h
		mov	eax, esi
		call	sub_6ED8A980

loc_6ED8E325:				; CODE XREF: sub_6ED8E250+C7j
		mov	edx, [ebx+4]
		mov	eax, esi
		call	sub_6ED8CF10
		mov	edx, offset asc_6EDA5718 ; "::*"
		jmp	loc_6ED8E295
sub_6ED8E250	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8E340	proc near		; CODE XREF: sub_6ED8CF10+4E6p
					; sub_6ED8CF10+BADp

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 2Ch
		mov	[esp+2Ch+var_C], ebx
		mov	ebx, eax
		mov	[esp+2Ch+var_8], esi
		mov	esi, edx
		mov	[esp+2Ch+var_4], edi
		mov	edx, [edx+4]
		cmp	dword ptr [edx], 4
		jz	short loc_6ED8E370
		call	sub_6ED8CF10
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED8E370:				; CODE XREF: sub_6ED8E340+19j
		mov	edi, [eax+118h]
		mov	dword ptr [eax+118h], 0
		mov	eax, [eax+114h]
		mov	[esp+2Ch+var_14], eax
		lea	eax, [esp+2Ch+var_14]
		mov	[ebx+114h], eax
		mov	eax, [esi+4]
		mov	[esp+2Ch+var_10], eax
		mov	edx, [eax+4]
		mov	eax, ebx
		call	sub_6ED8CF10
		mov	eax, [esp+2Ch+var_14]
		cmp	byte ptr [ebx+108h], 3Ch
		mov	[ebx+114h], eax
		jz	loc_6ED8E4B4

loc_6ED8E3BC:				; CODE XREF: sub_6ED8E340+180j
		mov	eax, [ebx+104h]
		cmp	eax, 0FFh
		lea	edx, [eax+1]
		jz	short loc_6ED8E430

loc_6ED8E3CC:				; CODE XREF: sub_6ED8E340+12Dj
		mov	byte ptr [ebx+eax+4], 3Ch
		mov	[ebx+104h], edx
		mov	byte ptr [ebx+108h], 3Ch
		mov	eax, [esi+4]
		mov	edx, [eax+8]
		mov	eax, ebx
		call	sub_6ED8CF10
		cmp	byte ptr [ebx+108h], 3Eh
		jz	loc_6ED8E4C5

loc_6ED8E3F8:				; CODE XREF: sub_6ED8E340+191j
		mov	eax, [ebx+104h]
		cmp	eax, 0FFh
		lea	edx, [eax+1]
		jz	short loc_6ED8E472

loc_6ED8E408:				; CODE XREF: sub_6ED8E340+16Fj
		mov	byte ptr [ebx+eax+4], 3Eh
		mov	[ebx+104h], edx
		mov	byte ptr [ebx+108h], 3Eh
		mov	[ebx+118h], edi
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED8E430:				; CODE XREF: sub_6ED8E340+8Aj
		mov	eax, [ebx+110h]
		mov	byte ptr [ebx+103h], 0
		mov	[esp+2Ch+var_28], 0FFh
		mov	[esp+2Ch+var_24], eax
		lea	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [ebx+10Ch]
		mov	edx, 1
		xor	eax, eax
		mov	dword ptr [ebx+104h], 0
		add	dword ptr [ebx+124h], 1
		jmp	loc_6ED8E3CC
; ---------------------------------------------------------------------------

loc_6ED8E472:				; CODE XREF: sub_6ED8E340+C6j
		mov	eax, [ebx+110h]
		mov	byte ptr [ebx+103h], 0
		mov	[esp+2Ch+var_28], 0FFh
		mov	[esp+2Ch+var_24], eax
		lea	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [ebx+10Ch]
		mov	edx, 1
		xor	eax, eax
		mov	dword ptr [ebx+104h], 0
		add	dword ptr [ebx+124h], 1
		jmp	loc_6ED8E408
; ---------------------------------------------------------------------------

loc_6ED8E4B4:				; CODE XREF: sub_6ED8E340+76j
		mov	edx, 20h
		mov	eax, ebx
		call	sub_6ED8A980
		jmp	loc_6ED8E3BC
; ---------------------------------------------------------------------------

loc_6ED8E4C5:				; CODE XREF: sub_6ED8E340+B2j
		mov	edx, 20h
		mov	eax, ebx
		call	sub_6ED8A980
		jmp	loc_6ED8E3F8
sub_6ED8E340	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8E4E0	proc near		; CODE XREF: sub_6ED8CF10+500p
					; sub_6ED8CF10+991p ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_24		= byte ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 3Ch
		mov	[esp+3Ch+var_10], ebx
		mov	[esp+3Ch+var_C], esi
		mov	[esp+3Ch+var_8], edi
		mov	[esp+3Ch+var_4], ebp
		cmp	dword ptr [edx], 2Bh
		jz	short loc_6ED8E510
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		jmp	sub_6ED8CF10
; ---------------------------------------------------------------------------

loc_6ED8E510:				; CODE XREF: sub_6ED8E4E0+16j
		mov	edx, [edx+4]
		mov	edi, [edx+8]
		mov	ebp, [edx+4]
		test	edi, edi
		jz	loc_6ED8E5A8
		lea	ecx, [eax+4]
		mov	edx, [eax+104h]
		xor	ebx, ebx
		mov	[esp+3Ch+var_20], ecx
		mov	esi, eax
		jmp	short loc_6ED8E54D
; ---------------------------------------------------------------------------

loc_6ED8E534:				; CODE XREF: sub_6ED8E4E0+7Bj
					; sub_6ED8E4E0+C6j
		add	ebx, 1
		cmp	edi, ebx
		mov	[esi+edx+4], al
		mov	[esi+104h], ecx
		mov	[esi+108h], al
		jbe	short loc_6ED8E5A8
		mov	edx, ecx

loc_6ED8E54D:				; CODE XREF: sub_6ED8E4E0+52j
		cmp	edx, 0FFh
		movzx	eax, byte ptr [ebp+ebx+0]
		lea	ecx, [edx+1]
		jnz	short loc_6ED8E534
		mov	edx, [esi+110h]
		mov	byte ptr [esi+103h], 0
		mov	[esp+3Ch+var_24], al
		mov	[esp+3Ch+var_34], edx
		mov	edx, [esi+104h]
		mov	[esp+3Ch+var_38], edx
		mov	edx, [esp+3Ch+var_20]
		mov	[esp+3Ch+var_3C], edx
		call	dword ptr [esi+10Ch]
		mov	ecx, 1
		xor	edx, edx
		mov	dword ptr [esi+104h], 0
		movzx	eax, [esp+3Ch+var_24]
		add	dword ptr [esi+124h], 1
		jmp	short loc_6ED8E534
; ---------------------------------------------------------------------------

loc_6ED8E5A8:				; CODE XREF: sub_6ED8E4E0+3Bj
					; sub_6ED8E4E0+69j
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
sub_6ED8E4E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8E5C0	proc near		; CODE XREF: sub_6ED8CF10+50Ap
					; sub_6ED8CF10+536p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h

		push	ebx
		mov	ebx, eax
		sub	esp, 28h
		mov	eax, [edx]
		cmp	eax, 6
		jz	short loc_6ED8E5D1
		test	eax, eax
		jnz	short loc_6ED8E5E0

loc_6ED8E5D1:				; CODE XREF: sub_6ED8E5C0+Bj
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		jmp	sub_6ED8CF10
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8E5E0:				; CODE XREF: sub_6ED8E5C0+Fj
		mov	eax, [ebx+104h]
		cmp	eax, 0FFh
		lea	ecx, [eax+1]
		jz	short loc_6ED8E630

loc_6ED8E5F0:				; CODE XREF: sub_6ED8E5C0+B5j
		mov	byte ptr [ebx+eax+4], 28h
		mov	eax, ebx
		mov	[ebx+104h], ecx
		mov	byte ptr [ebx+108h], 28h
		call	sub_6ED8CF10
		mov	eax, [ebx+104h]
		cmp	eax, 0FFh
		lea	edx, [eax+1]
		jz	short loc_6ED8E680

loc_6ED8E619:				; CODE XREF: sub_6ED8E5C0+FDj
		mov	byte ptr [ebx+eax+4], 29h
		mov	[ebx+104h], edx
		mov	byte ptr [ebx+108h], 29h
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_6ED8E630:				; CODE XREF: sub_6ED8E5C0+2Ej
		mov	eax, [ebx+110h]
		mov	byte ptr [ebx+103h], 0
		mov	[esp+2Ch+var_10], edx
		mov	[esp+2Ch+var_28], 0FFh
		mov	[esp+2Ch+var_24], eax
		lea	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [ebx+10Ch]
		mov	ecx, 1
		xor	eax, eax
		mov	dword ptr [ebx+104h], 0
		mov	edx, [esp+2Ch+var_10]
		add	dword ptr [ebx+124h], 1
		jmp	loc_6ED8E5F0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8E680:				; CODE XREF: sub_6ED8E5C0+57j
		mov	eax, [ebx+110h]
		mov	byte ptr [ebx+103h], 0
		mov	[esp+2Ch+var_28], 0FFh
		mov	[esp+2Ch+var_24], eax
		lea	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [ebx+10Ch]
		mov	edx, 1
		xor	eax, eax
		mov	dword ptr [ebx+104h], 0
		add	dword ptr [ebx+124h], 1
		jmp	loc_6ED8E619
sub_6ED8E5C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_6ED8E6D0(_onexit_t)
sub_6ED8E6D0	proc near		; CODE XREF: sub_6ED8E790+Ap

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	eax, ds:dword_6EDA83AC
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], eax
		call	sub_6ED8E890
		cmp	eax, 0FFFFFFFFh
		mov	[esp+2Ch+var_10], eax
		jz	loc_6ED8E770
		mov	[esp+2Ch+var_2C], 8
		call	_lock
		mov	eax, ds:dword_6EDA83AC
		mov	[esp+2Ch+var_2C], eax
		call	sub_6ED8E890
		mov	[esp+2Ch+var_10], eax
		mov	eax, ds:dword_6EDA83A8
		mov	[esp+2Ch+var_2C], eax
		call	sub_6ED8E890
		mov	[esp+2Ch+var_2C], ebx
		mov	[esp+2Ch+var_14], eax
		lea	eax, [esp+2Ch+var_14]
		mov	[esp+2Ch+var_24], eax
		lea	eax, [esp+2Ch+var_10]
		mov	[esp+2Ch+var_28], eax
		call	__dllonexit
		mov	ebx, eax
		mov	eax, [esp+2Ch+var_10]
		mov	[esp+2Ch+var_2C], eax
		call	sub_6ED8E8A0
		mov	ds:dword_6EDA83AC, eax
		mov	eax, [esp+2Ch+var_14]
		mov	[esp+2Ch+var_2C], eax
		call	sub_6ED8E8A0
		mov	[esp+2Ch+var_2C], 8
		mov	ds:dword_6EDA83A8, eax
		call	_unlock
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8E770:				; CODE XREF: sub_6ED8E6D0+1Cj
		mov	[esp+2Ch+var_2C], ebx ;	_onexit_t
		call	ds:_onexit
		add	esp, 28h
		mov	ebx, eax
		mov	eax, ebx
		pop	ebx
		retn
sub_6ED8E6D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_6ED8E790(_onexit_t)
sub_6ED8E790	proc near		; CODE XREF: sub_6ED8ED70-2Fp
					; sub_6ED8FC60+12p ...

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], eax ;	_onexit_t
		call	sub_6ED8E6D0
		cmp	eax, 1
		sbb	eax, eax
		add	esp, 1Ch
		retn
sub_6ED8E790	endp

; ---------------------------------------------------------------------------
		align 10h
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


		public TlsCallback_1
TlsCallback_1	proc near		; DATA XREF: .CRT:6EDB401Co

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_4]
		test	eax, eax
		jz	short loc_6ED8E7E0
		cmp	eax, 3
		jz	short loc_6ED8E7E0
		mov	eax, 1
		add	esp, 1Ch
		retn	0Ch
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8E7E0:				; CODE XREF: TlsCallback_1+9j
					; TlsCallback_1+Ej
		mov	edx, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_14], edx
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED8EF90
		mov	eax, 1
		add	esp, 1Ch
		retn	0Ch
TlsCallback_1	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


		public TlsCallback_0
TlsCallback_0	proc near		; CODE XREF: sub_6ED41040+117p
					; DATA XREF: .rdata:off_6EDA6420o ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 18h
		cmp	dword_6ED9B00C,	2
		mov	eax, [esp+1Ch+arg_4]
		jz	short loc_6ED8E82B
		mov	dword_6ED9B00C,	2

loc_6ED8E82B:				; CODE XREF: TlsCallback_0+Fj
		cmp	eax, 2
		jz	short loc_6ED8E841
		cmp	eax, 1
		jz	short loc_6ED8E870

loc_6ED8E835:				; CODE XREF: TlsCallback_0+3Cj
					; TlsCallback_0+7Cj
		mov	eax, 1
		add	esp, 18h
		pop	ebx
		retn	0Ch
; ---------------------------------------------------------------------------

loc_6ED8E841:				; CODE XREF: TlsCallback_0+1Ej
		mov	ebx, offset dword_6EDB4028
		cmp	ebx, offset dword_6EDB4028
		jz	short loc_6ED8E835
		xchg	ax, ax

loc_6ED8E850:				; CODE XREF: TlsCallback_0+51j
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_6ED8E858
		call	eax

loc_6ED8E858:				; CODE XREF: TlsCallback_0+44j
		add	ebx, 4
		cmp	ebx, offset dword_6EDB4028
		jnz	short loc_6ED8E850
		mov	eax, 1
		add	esp, 18h
		pop	ebx
		retn	0Ch
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8E870:				; CODE XREF: TlsCallback_0+23j
		mov	eax, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_18], 1
		mov	[esp+1Ch+var_14], eax
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED8EF90
		jmp	short loc_6ED8E835
TlsCallback_0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8E890	proc near		; CODE XREF: sub_6ED41040+138p
					; sub_6ED41040+14Bp ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		retn
sub_6ED8E890	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8E8A0	proc near		; CODE XREF: sub_6ED41000+15p
					; sub_6ED8E6D0+71p ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		retn
sub_6ED8E8A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

; int __cdecl sub_6ED8E8B0(char	*, char)
sub_6ED8E8B0	proc near		; CODE XREF: sub_6ED8E910+131p
					; sub_6ED8E910+141p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= byte ptr  8

		push	ebx
		sub	esp, 18h
		mov	eax, ds:_iob
		mov	[esp+1Ch+var_14], 1Bh ;	size_t
		lea	ebx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_18], 1 ; size_t
		mov	[esp+1Ch+var_1C], offset aMingwW64Runtim ; "Mingw-w64 runtime failure:\n"
		add	eax, 40h
		mov	[esp+1Ch+var_10], eax ;	FILE *
		call	fwrite
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_14], ebx ;	va_list
		mov	[esp+1Ch+var_18], eax ;	char *
		mov	eax, ds:_iob
		add	eax, 40h
		mov	[esp+1Ch+var_1C], eax ;	FILE *
		call	vfprintf
		call	abort
sub_6ED8E8B0	endp

; ---------------------------------------------------------------------------
		jmp	short sub_6ED8E910
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __fastcall sub_6ED8E910(size_t)
sub_6ED8E910	proc near		; CODE XREF: .text:6ED8E901j
					; sub_6ED8EA60+12Ap ...

lpAddress	= dword	ptr -5Ch
lpBuffer	= dword	ptr -58h
dwLength	= dword	ptr -54h
lpflOldProtect	= dword	ptr -50h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
Buffer		= _MEMORY_BASIC_INFORMATION ptr	-38h

		push	ebp
		push	edi
		mov	edi, ecx
		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 4Ch
		test	ecx, ecx
		mov	[esp+5Ch+var_40], edx
		jnz	short loc_6ED8E930
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8E930:				; CODE XREF: sub_6ED8E910+11j
		mov	ecx, ds:dword_6EDA8024
		xor	esi, esi
		test	ecx, ecx
		jle	short loc_6ED8E960
		mov	eax, ds:dword_6EDA8020

loc_6ED8E941:				; CODE XREF: sub_6ED8E910+4Ej
		mov	edx, [eax+4]
		cmp	edx, ebx
		ja	short loc_6ED8E956
		mov	ebp, [eax+8]
		add	edx, [ebp+8]
		cmp	ebx, edx
		jb	loc_6ED8E9D9

loc_6ED8E956:				; CODE XREF: sub_6ED8E910+36j
		add	esi, 1
		add	eax, 0Ch
		cmp	esi, ecx
		jl	short loc_6ED8E941

loc_6ED8E960:				; CODE XREF: sub_6ED8E910+2Aj
		mov	[esp+5Ch+lpAddress], ebx
		call	sub_6ED8F1B0
		test	eax, eax
		mov	ebp, eax
		jz	loc_6ED8EA46
		lea	edx, [esi+esi*2]
		mov	esi, ds:dword_6EDA8020
		shl	edx, 2
		mov	[esp+5Ch+var_44], edx
		add	esi, edx
		mov	[esi+8], eax
		mov	dword ptr [esi], 0
		call	sub_6ED8F2D0
		mov	edx, [esp+5Ch+var_44]
		add	eax, [ebp+0Ch]
		mov	[esi+4], eax
		lea	eax, [esp+5Ch+Buffer]
		mov	[esp+5Ch+lpBuffer], eax	; lpBuffer
		mov	eax, ds:dword_6EDA8020
		mov	[esp+5Ch+dwLength], 1Ch	; dwLength
		mov	eax, [eax+edx+4]
		mov	[esp+5Ch+lpAddress], eax ; lpAddress
		call	ds:VirtualQuery
		sub	esp, 0Ch
		test	eax, eax
		mov	edx, [esp+5Ch+var_44]
		jz	short loc_6ED8EA26
		mov	eax, [esp+5Ch+Buffer.Protect]
		cmp	eax, 4
		jnz	short loc_6ED8E9F5

loc_6ED8E9D2:				; CODE XREF: sub_6ED8E910+E8j
					; sub_6ED8E910+114j
		add	ds:dword_6EDA8024, 1

loc_6ED8E9D9:				; CODE XREF: sub_6ED8E910+40j
		mov	eax, [esp+5Ch+var_40]
		mov	[esp+5Ch+dwLength], edi	; size_t
		mov	[esp+5Ch+lpAddress], ebx ; void	*
		mov	[esp+5Ch+lpBuffer], eax	; void *
		call	memcpy
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED8E9F5:				; CODE XREF: sub_6ED8E910+C0j
		cmp	eax, 40h
		jz	short loc_6ED8E9D2
		mov	eax, [esp+5Ch+Buffer.RegionSize]
		add	edx, ds:dword_6EDA8020
		mov	[esp+5Ch+dwLength], 40h	; flNewProtect
		mov	[esp+5Ch+lpBuffer], eax	; dwSize
		mov	eax, [esp+5Ch+Buffer.BaseAddress]
		mov	[esp+5Ch+lpflOldProtect], edx ;	lpflOldProtect
		mov	[esp+5Ch+lpAddress], eax ; lpAddress
		call	ds:VirtualProtect
		sub	esp, 10h
		jmp	short loc_6ED8E9D2
; ---------------------------------------------------------------------------

loc_6ED8EA26:				; CODE XREF: sub_6ED8E910+B7j
		mov	eax, ds:dword_6EDA8020
		mov	eax, [eax+edx+4]
		mov	[esp+5Ch+dwLength], eax
		mov	eax, [ebp+8]
		mov	[esp+5Ch+lpAddress], offset aVirtualqueryFa ; "	 VirtualQuery failed for %d bytes at a"...
		mov	[esp+5Ch+lpBuffer], eax	; char
		call	sub_6ED8E8B0
; ---------------------------------------------------------------------------

loc_6ED8EA46:				; CODE XREF: sub_6ED8E910+5Cj
		mov	[esp+5Ch+lpBuffer], ebx	; char
		mov	[esp+5Ch+lpAddress], offset aAddressPHasNoI ; "Address %p has no image-section"
		call	sub_6ED8E8B0
sub_6ED8E910	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED8EA60	proc near		; CODE XREF: sub_6ED41260+30p
					; sub_6ED41260:loc_6ED412E8p

Buffer		= _MEMORY_BASIC_INFORMATION ptr	-3Ch
flOldProtect	= dword	ptr -20h
var_1C		= dword	ptr -1Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	ebx, ds:dword_6EDA8028
		test	ebx, ebx
		jz	short loc_6ED8EA80

loc_6ED8EA73:				; CODE XREF: sub_6ED8EA60+64j
					; sub_6ED8EA60+B4j ...
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8EA80:				; CODE XREF: sub_6ED8EA60+11j
		mov	ds:dword_6EDA8028, 1
		call	sub_6ED8F220
		lea	eax, [eax+eax*2]
		lea	eax, ds:1Eh[eax*4]
		and	eax, 0FFFFFFF0h
		call	sub_6ED8FA60
		mov	ds:dword_6EDA8024, 0
		lea	eax, [esp+1Fh]
		and	eax, 0FFFFFFF0h
		mov	ds:dword_6EDA8020, eax
		mov	eax, offset dword_6EDA7980
		sub	eax, offset dword_6EDA7980
		cmp	eax, 7
		jle	short loc_6ED8EA73
		cmp	eax, 0Bh
		mov	ebx, offset dword_6EDA7980
		jle	short loc_6ED8EAF2
		mov	ecx, ds:dword_6EDA7980
		test	ecx, ecx
		jnz	short loc_6ED8EAF2
		mov	edx, ds:dword_6EDA7984
		test	edx, edx
		jnz	short loc_6ED8EAF2
		mov	eax, ds:dword_6EDA7988
		test	eax, eax
		jnz	short loc_6ED8EAF2
		mov	ebx, offset dword_6EDA798C

loc_6ED8EAF2:				; CODE XREF: sub_6ED8EA60+6Ej
					; sub_6ED8EA60+78j ...
		mov	edi, [ebx]
		test	edi, edi
		jnz	short loc_6ED8EB60
		mov	esi, [ebx+4]
		test	esi, esi
		jnz	short loc_6ED8EB60
		mov	eax, [ebx+8]
		cmp	eax, 1
		jnz	loc_6ED8ECC3
		add	ebx, 0Ch
		cmp	ebx, offset dword_6EDA7980
		jnb	loc_6ED8EA73
		mov	esi, 6ED40000h

loc_6ED8EB1F:				; CODE XREF: sub_6ED8EA60+217j
		mov	eax, [ebx+4]
		mov	ecx, [ebx]
		movzx	edx, byte ptr [ebx+8]
		add	eax, esi
		add	ecx, esi
		cmp	edx, 10h
		mov	edi, [ecx]
		jz	loc_6ED8EC1D
		cmp	edx, 20h
		jz	loc_6ED8EC5A
		cmp	edx, 8
		jz	loc_6ED8EC3C
		mov	[ebp+var_1C], 0
		mov	[esp+4], edx	; char
		mov	dword ptr [esp], offset	aUnknownPseudoR	; "  Unknown pseudo relocation bit size	%d"...
		call	sub_6ED8E8B0
; ---------------------------------------------------------------------------

loc_6ED8EB60:				; CODE XREF: sub_6ED8EA60+96j
					; sub_6ED8EA60+9Dj
		cmp	ebx, offset dword_6EDA7980
		jnb	loc_6ED8EA73
		mov	esi, 6ED40000h
		lea	edi, [ebp+flOldProtect]

loc_6ED8EB74:				; CODE XREF: sub_6ED8EA60+135j
		mov	eax, [ebx+4]
		mov	ecx, 4		; size_t
		add	eax, esi
		mov	edx, [eax]
		add	edx, [ebx]
		add	ebx, 8
		mov	[ebp+flOldProtect], edx
		mov	edx, edi
		call	sub_6ED8E910
		cmp	ebx, offset dword_6EDA7980
		jb	short loc_6ED8EB74

loc_6ED8EB97:				; CODE XREF: sub_6ED8EA60+21Dj
		mov	ecx, ds:dword_6EDA8024
		test	ecx, ecx
		jle	loc_6ED8EA73
		xor	ebx, ebx
		xor	esi, esi
		lea	edi, [ebp+flOldProtect]
		jmp	short loc_6ED8EBC2
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8EBB0:				; CODE XREF: sub_6ED8EA60+16Dj
					; sub_6ED8EA60+1BBj
		add	esi, 1
		add	ebx, 0Ch
		cmp	esi, ds:dword_6EDA8024
		jge	loc_6ED8EA73

loc_6ED8EBC2:				; CODE XREF: sub_6ED8EA60+14Cj
		mov	eax, ds:dword_6EDA8020
		add	eax, ebx
		mov	edx, [eax]
		test	edx, edx
		jz	short loc_6ED8EBB0
		lea	edx, [ebp+Buffer]
		mov	dword ptr [esp+8], 1Ch ; dwLength
		mov	[esp+4], edx	; lpBuffer
		mov	eax, [eax+4]
		mov	[esp], eax	; lpAddress
		call	ds:VirtualQuery
		sub	esp, 0Ch
		test	eax, eax
		jz	loc_6ED8ECA0
		mov	eax, ds:dword_6EDA8020
		mov	[esp+0Ch], edi	; lpflOldProtect
		mov	eax, [eax+ebx]
		mov	[esp+8], eax	; flNewProtect
		mov	eax, [ebp+Buffer.RegionSize]
		mov	[esp+4], eax	; dwSize
		mov	eax, [ebp+Buffer.BaseAddress]
		mov	[esp], eax	; lpAddress
		call	ds:VirtualProtect
		sub	esp, 10h
		jmp	short loc_6ED8EBB0
; ---------------------------------------------------------------------------

loc_6ED8EC1D:				; CODE XREF: sub_6ED8EA60+D1j
		movzx	edx, word ptr [eax]
		test	dx, dx
		js	short loc_6ED8EC91
		sub	edx, ecx
		lea	edi, [edx+edi]
		mov	[ebp+var_1C], edi

loc_6ED8EC2D:				; CODE XREF: sub_6ED8EA60+23Ej
		mov	ecx, 2		; size_t
		lea	edx, [ebp+var_1C]
		call	sub_6ED8E910
		jmp	short loc_6ED8EC6E
; ---------------------------------------------------------------------------

loc_6ED8EC3C:				; CODE XREF: sub_6ED8EA60+E3j
		movzx	edx, byte ptr [eax]
		test	dl, dl
		js	short loc_6ED8EC82
		sub	edx, ecx
		lea	edi, [edx+edi]
		mov	[ebp+var_1C], edi

loc_6ED8EC4B:				; CODE XREF: sub_6ED8EA60+22Fj
		mov	ecx, 1		; size_t
		lea	edx, [ebp+var_1C]
		call	sub_6ED8E910
		jmp	short loc_6ED8EC6E
; ---------------------------------------------------------------------------

loc_6ED8EC5A:				; CODE XREF: sub_6ED8EA60+DAj
		add	edi, [eax]
		lea	edx, [ebp+var_1C]
		sub	edi, ecx
		mov	ecx, 4		; size_t
		mov	[ebp+var_1C], edi
		call	sub_6ED8E910

loc_6ED8EC6E:				; CODE XREF: sub_6ED8EA60+1DAj
					; sub_6ED8EA60+1F8j
		add	ebx, 0Ch
		cmp	ebx, offset dword_6EDA7980
		jb	loc_6ED8EB1F
		jmp	loc_6ED8EB97
; ---------------------------------------------------------------------------

loc_6ED8EC82:				; CODE XREF: sub_6ED8EA60+1E1j
		or	edx, 0FFFFFF00h
		sub	edx, ecx
		add	edx, edi
		mov	[ebp+var_1C], edx
		jmp	short loc_6ED8EC4B
; ---------------------------------------------------------------------------

loc_6ED8EC91:				; CODE XREF: sub_6ED8EA60+1C3j
		or	edx, 0FFFF0000h
		sub	edx, ecx
		add	edx, edi
		mov	[ebp+var_1C], edx
		jmp	short loc_6ED8EC2D
; ---------------------------------------------------------------------------

loc_6ED8ECA0:				; CODE XREF: sub_6ED8EA60+18Fj
		add	ebx, ds:dword_6EDA8020
		mov	eax, [ebx+4]
		mov	[esp+8], eax
		mov	eax, [ebx+8]
		mov	eax, [eax+8]
		mov	dword ptr [esp], offset	aVirtualqueryFa	; "  VirtualQuery failed for %d	bytes at a"...
		mov	[esp+4], eax	; char
		call	sub_6ED8E8B0
; ---------------------------------------------------------------------------

loc_6ED8ECC3:				; CODE XREF: sub_6ED8EA60+A5j
		mov	[esp+4], eax	; char
		mov	dword ptr [esp], offset	aUnknownPseud_0	; "  Unknown pseudo relocation protocol	ve"...
		call	sub_6ED8E8B0
sub_6ED8EA60	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_6ED8ECE0()
sub_6ED8ECE0	proc near		; DATA XREF: sub_6ED8ED70:loc_6ED8ED3Ao
		sub	esp, 0Ch
		mov	eax, off_6ED9B008
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_6ED8ED07
		xchg	ax, ax

loc_6ED8ECF0:				; CODE XREF: sub_6ED8ECE0+25j
		call	eax
		mov	eax, off_6ED9B008
		lea	edx, [eax+4]
		mov	eax, [eax+4]
		mov	off_6ED9B008, edx
		test	eax, eax
		jnz	short loc_6ED8ECF0

loc_6ED8ED07:				; CODE XREF: sub_6ED8ECE0+Cj
		add	esp, 0Ch
		retn
sub_6ED8ECE0	endp

; ---------------------------------------------------------------------------
		align 10h
; START	OF FUNCTION CHUNK FOR sub_6ED8ED70

loc_6ED8ED10:				; CODE XREF: sub_6ED8ED70+1Ej
		push	esi
		push	ebx
		sub	esp, 14h
		mov	ebx, ds:dword_6ED99DD0
		cmp	ebx, 0FFFFFFFFh
		jz	short loc_6ED8ED50

loc_6ED8ED20:				; CODE XREF: sub_6ED8ED70-Cj
		test	ebx, ebx
		jz	short loc_6ED8ED3A
		lea	esi, dword_6ED99DD0[ebx*4]
		nop
		lea	esi, [esi+0]

loc_6ED8ED30:				; CODE XREF: sub_6ED8ED70-38j
		call	dword ptr [esi]
		sub	esi, 4
		sub	ebx, 1
		jnz	short loc_6ED8ED30

loc_6ED8ED3A:				; CODE XREF: sub_6ED8ED70-4Ej
		mov	[esp+1Ch+var_1C], offset sub_6ED8ECE0 ;	_onexit_t
		call	sub_6ED8E790
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; END OF FUNCTION CHUNK	FOR sub_6ED8ED70
; ---------------------------------------------------------------------------
		align 10h
; START	OF FUNCTION CHUNK FOR sub_6ED8ED70

loc_6ED8ED50:				; CODE XREF: sub_6ED8ED70-52j
		xor	ebx, ebx
		jmp	short loc_6ED8ED56
; ---------------------------------------------------------------------------

loc_6ED8ED54:				; CODE XREF: sub_6ED8ED70-Ej
		mov	ebx, eax

loc_6ED8ED56:				; CODE XREF: sub_6ED8ED70-1Ej
		lea	eax, [ebx+1]
		mov	edx, ds:dword_6ED99DD0[eax*4]
		test	edx, edx
		jnz	short loc_6ED8ED54
		jmp	short loc_6ED8ED20
; END OF FUNCTION CHUNK	FOR sub_6ED8ED70
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8ED70	proc near		; CODE XREF: sub_6ED41260+92p

var_1C		= dword	ptr -1Ch

; FUNCTION CHUNK AT 6ED8ED10 SIZE 0000003C BYTES
; FUNCTION CHUNK AT 6ED8ED50 SIZE 00000016 BYTES

		sub	esp, 0Ch
		mov	ecx, ds:dword_6EDA802C
		test	ecx, ecx
		jz	short loc_6ED8ED81
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED8ED81:				; CODE XREF: sub_6ED8ED70+Bj
		mov	ds:dword_6EDA802C, 1
		add	esp, 0Ch
		jmp	short loc_6ED8ED10
sub_6ED8ED70	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_6ED8ED90	proc near		; CODE XREF: sub_6ED41260+40p
					; sub_6ED41260+A6p ...
		mov	eax, 1
		retn	0Ch
sub_6ED8ED90	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8EDA0	proc near		; CODE XREF: sub_6ED41260+F1p
					; sub_6ED41260+10Bp ...
		mov	eax, 1
		retn	0Ch
sub_6ED8EDA0	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	eax, [ebp+4]
		lea	edx, [ebp+4]
		mov	ds:dword_6EDA8164, edx
		mov	ds:dword_6EDA8040, 0C0000409h
		mov	ds:dword_6EDA8044, 1
		mov	ds:dword_6EDA8158, eax
		mov	ds:dword_6EDA804C, eax
		mov	eax, [ebp+8]
		mov	dword ptr [esp], 0
		mov	ds:dword_6EDA814C, eax
		mov	eax, dword_6ED9FA40
		mov	[ebp-10h], eax
		mov	eax, dword_6ED9FA44
		mov	[ebp-0Ch], eax
		call	ds:SetUnhandledExceptionFilter
		sub	esp, 4
		mov	dword ptr [esp], offset	off_6EDA64F4
		call	ds:UnhandledExceptionFilter
		sub	esp, 4
		call	ds:GetCurrentProcess
		mov	dword ptr [esp+4], 0C0000409h
		mov	[esp], eax
		call	ds:TerminateProcess
		sub	esp, 8
		call	abort
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8EE40	proc near		; CODE XREF: DllEntryPoint+34p

lpSystemTimeAsFileTime=	dword ptr -4Ch
var_30		= dword	ptr -30h
PerformanceCount= LARGE_INTEGER	ptr -2Ch
SystemTimeAsFileTime= _FILETIME	ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 4Ch
		mov	eax, dword_6ED9FA40
		mov	[esp+4Ch+var_10], ebx
		mov	[esp+4Ch+var_C], esi
		mov	[esp+4Ch+var_8], edi
		cmp	eax, 0BB40E64Eh
		mov	[esp+4Ch+var_4], ebp
		jz	short loc_6ED8EE80
		not	eax
		mov	dword_6ED9FA44,	eax

loc_6ED8EE66:				; CODE XREF: sub_6ED8EE40+BDj
		mov	ebx, [esp+4Ch+var_10]
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8EE80:				; CODE XREF: sub_6ED8EE40+1Dj
		lea	eax, [esp+4Ch+SystemTimeAsFileTime]
		mov	[esp+4Ch+lpSystemTimeAsFileTime], eax ;	lpSystemTimeAsFileTime
		mov	[esp+4Ch+SystemTimeAsFileTime.dwLowDateTime], 0
		mov	[esp+4Ch+SystemTimeAsFileTime.dwHighDateTime], 0
		call	ds:GetSystemTimeAsFileTime
		sub	esp, 4
		mov	eax, [esp+4Ch+SystemTimeAsFileTime.dwHighDateTime]
		mov	ebp, [esp+4Ch+SystemTimeAsFileTime.dwLowDateTime]
		mov	[esp+4Ch+var_30], eax
		call	ds:GetCurrentProcessId
		mov	edi, eax
		call	ds:GetCurrentThreadId
		mov	esi, eax
		call	ds:GetTickCount
		mov	ebx, eax
		lea	eax, [esp+4Ch+PerformanceCount]
		mov	[esp+4Ch+lpSystemTimeAsFileTime], eax ;	lpPerformanceCount
		call	ds:QueryPerformanceCounter
		sub	esp, 4
		xor	ebp, [esp+4Ch+var_30]
		xor	ebp, dword ptr [esp+4Ch+PerformanceCount]
		xor	ebp, dword ptr [esp+4Ch+PerformanceCount+4]
		xor	ebp, edi
		xor	ebp, esi
		xor	ebp, ebx
		mov	eax, ebp
		cmp	ebp, 0BB40E64Eh
		not	eax
		jz	short loc_6ED8EF02

loc_6ED8EEF2:				; CODE XREF: sub_6ED8EE40+CBj
		mov	dword_6ED9FA40,	ebp
		mov	dword_6ED9FA44,	eax
		jmp	loc_6ED8EE66
; ---------------------------------------------------------------------------

loc_6ED8EF02:				; CODE XREF: sub_6ED8EE40+B0j
		mov	eax, 44BF19B0h
		mov	bp, 0E64Fh
		jmp	short loc_6ED8EEF2
sub_6ED8EE40	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8EF10	proc near		; CODE XREF: sub_6ED8EF90+13p
					; sub_6ED8EF90:loc_6ED8EFB1p

lpCriticalSection= dword ptr -2Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	eax, ds:dword_6EDA8380
		test	eax, eax
		jnz	short loc_6ED8EF28
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED8EF28:				; CODE XREF: sub_6ED8EF10+Ej
		mov	[esp+2Ch+lpCriticalSection], offset CriticalSection ; lpCriticalSection
		call	ds:EnterCriticalSection
		mov	ebx, ds:dword_6EDA839C
		sub	esp, 4
		test	ebx, ebx
		jz	short loc_6ED8EF75
		mov	ebp, ds:TlsGetValue
		mov	edi, ds:GetLastError
		xchg	ax, ax

loc_6ED8EF50:				; CODE XREF: sub_6ED8EF10+63j
		mov	eax, [ebx]
		mov	[esp+2Ch+lpCriticalSection], eax ; dwTlsIndex
		call	ebp ; TlsGetValue
		sub	esp, 4
		mov	esi, eax
		call	edi ; GetLastError
		test	eax, eax
		jnz	short loc_6ED8EF6E
		test	esi, esi
		jz	short loc_6ED8EF6E
		mov	eax, [ebx+4]
		mov	[esp+2Ch+lpCriticalSection], esi
		call	eax

loc_6ED8EF6E:				; CODE XREF: sub_6ED8EF10+50j
					; sub_6ED8EF10+54j
		mov	ebx, [ebx+8]
		test	ebx, ebx
		jnz	short loc_6ED8EF50

loc_6ED8EF75:				; CODE XREF: sub_6ED8EF10+30j
		mov	[esp+2Ch+lpCriticalSection], offset CriticalSection ; lpCriticalSection
		call	ds:LeaveCriticalSection
		sub	esp, 4
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_6ED8EF10	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8EF90	proc near		; CODE XREF: TlsCallback_1+33p
					; TlsCallback_0+77p

lpCriticalSection= dword ptr -1Ch
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_4]
		cmp	eax, 1
		jz	short loc_6ED8EFE0
		jb	short loc_6ED8EFB1
		cmp	eax, 3
		jnz	short loc_6ED8EFA8
		call	sub_6ED8EF10

loc_6ED8EFA8:				; CODE XREF: sub_6ED8EF90+11j
					; sub_6ED8EF90+2Ej ...
		mov	eax, 1
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED8EFB1:				; CODE XREF: sub_6ED8EF90+Cj
		call	sub_6ED8EF10
		mov	eax, ds:dword_6EDA8380
		cmp	eax, 1
		jnz	short loc_6ED8EFA8
		mov	ds:dword_6EDA8380, 0
		mov	[esp+1Ch+lpCriticalSection], offset CriticalSection ; lpCriticalSection
		call	ds:DeleteCriticalSection
		sub	esp, 4
		jmp	short loc_6ED8EFA8
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8EFE0:				; CODE XREF: sub_6ED8EF90+Aj
		mov	eax, ds:dword_6EDA8380
		test	eax, eax
		jz	short loc_6ED8F000

loc_6ED8EFE9:				; CODE XREF: sub_6ED8EF90+80j
		mov	ds:dword_6EDA8380, 1
		mov	eax, 1
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8F000:				; CODE XREF: sub_6ED8EF90+57j
		mov	[esp+1Ch+lpCriticalSection], offset CriticalSection ; lpCriticalSection
		call	ds:InitializeCriticalSection
		sub	esp, 4
		jmp	short loc_6ED8EFE9
sub_6ED8EF90	endp

; ---------------------------------------------------------------------------
		align 10h

loc_6ED8F020:				; CODE XREF: .text:6ED8FB36j
		push	ebx
		sub	esp, 18h
		mov	eax, ds:dword_6EDA8380
		mov	ebx, [esp+20h]
		test	eax, eax
		jnz	short loc_6ED8F038
		xor	eax, eax
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_6ED8F038:				; CODE XREF: .text:6ED8F02Fj
		mov	dword ptr [esp], offset	CriticalSection
		call	ds:EnterCriticalSection
		mov	eax, ds:dword_6EDA839C
		sub	esp, 4
		test	eax, eax
		jz	short loc_6ED8F06F
		mov	edx, [eax]
		cmp	edx, ebx
		jnz	short loc_6ED8F066
		jmp	short loc_6ED8F0A6
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8F060:				; CODE XREF: .text:6ED8F06Dj
		mov	edx, [eax]
		cmp	edx, ebx
		jz	short loc_6ED8F086

loc_6ED8F066:				; CODE XREF: .text:6ED8F055j
		mov	ecx, eax
		mov	eax, [eax+8]
		test	eax, eax
		jnz	short loc_6ED8F060

loc_6ED8F06F:				; CODE XREF: .text:6ED8F04Fj
		mov	dword ptr [esp], offset	CriticalSection
		call	ds:LeaveCriticalSection
		sub	esp, 4

loc_6ED8F07F:				; CODE XREF: .text:6ED8F0A4j
		xor	eax, eax
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_6ED8F086:				; CODE XREF: .text:6ED8F064j
		mov	edx, [eax+8]
		mov	[ecx+8], edx

loc_6ED8F08C:				; CODE XREF: .text:6ED8F0AFj
		mov	[esp], eax
		call	free
		mov	dword ptr [esp], offset	CriticalSection
		call	ds:LeaveCriticalSection
		sub	esp, 4
		jmp	short loc_6ED8F07F
; ---------------------------------------------------------------------------

loc_6ED8F0A6:				; CODE XREF: .text:6ED8F057j
		mov	edx, [eax+8]
		mov	ds:dword_6EDA839C, edx
		jmp	short loc_6ED8F08C
; ---------------------------------------------------------------------------
		jmp	short loc_6ED8F0C0
; ---------------------------------------------------------------------------
		align 10h
; START	OF FUNCTION CHUNK FOR sub_6ED8FB00

loc_6ED8F0C0:				; CODE XREF: .text:6ED8F0B1j
					; sub_6ED8FB00+1Aj
		push	ebx
		sub	esp, 18h
		mov	eax, ds:dword_6EDA8380
		test	eax, eax
		jnz	short loc_6ED8F0D2

loc_6ED8F0CD:				; CODE XREF: sub_6ED8FB00-A11j
					; sub_6ED8FB00-9D2j
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_6ED8F0D2:				; CODE XREF: sub_6ED8FB00-A35j
		mov	[esp+1Ch+var_18], 0Ch ;	size_t
		mov	[esp+1Ch+var_1C], 1 ; size_t
		call	calloc
		mov	ebx, eax
		mov	eax, 0FFFFFFFFh
		test	ebx, ebx
		jz	short loc_6ED8F0CD
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], offset CriticalSection ; lpCriticalSection
		mov	[ebx], eax
		mov	eax, [esp+1Ch+arg_4]
		mov	[ebx+4], eax
		call	ds:EnterCriticalSection
		mov	eax, ds:dword_6EDA839C
		mov	ds:dword_6EDA839C, ebx
		mov	[ebx+8], eax
		sub	esp, 4
		mov	[esp+1Ch+var_1C], offset CriticalSection ; lpCriticalSection
		call	ds:LeaveCriticalSection
		xor	eax, eax
		sub	esp, 4
		jmp	short loc_6ED8F0CD
; END OF FUNCTION CHUNK	FOR sub_6ED8FB00
; ---------------------------------------------------------------------------
		mov	eax, [esp+4]
		cmp	word ptr [eax],	5A4Dh
		jz	short loc_6ED8F140

loc_6ED8F13B:				; CODE XREF: .text:6ED8F149j
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8F140:				; CODE XREF: .text:6ED8F139j
		add	eax, [eax+3Ch]
		cmp	dword ptr [eax], 4550h
		jnz	short loc_6ED8F13B
		cmp	word ptr [eax+18h], 10Bh
		setz	al
		movzx	eax, al
		retn
; ---------------------------------------------------------------------------
		align 10h
		push	esi
		push	ebx
		mov	eax, [esp+0Ch]
		mov	ebx, [esp+10h]
		add	eax, [eax+3Ch]
		movzx	esi, word ptr [eax+6]
		movzx	edx, word ptr [eax+14h]
		test	esi, esi
		jz	short loc_6ED8F19C
		movzx	edx, dx
		lea	eax, [eax+edx+18h]
		xor	edx, edx
		jmp	short loc_6ED8F187
; ---------------------------------------------------------------------------

loc_6ED8F184:				; CODE XREF: .text:6ED8F19Aj
		add	eax, 28h

loc_6ED8F187:				; CODE XREF: .text:6ED8F182j
		mov	ecx, [eax+0Ch]
		cmp	ecx, ebx
		ja	short loc_6ED8F195
		add	ecx, [eax+8]
		cmp	ebx, ecx
		jb	short loc_6ED8F19E

loc_6ED8F195:				; CODE XREF: .text:6ED8F18Cj
		add	edx, 1
		cmp	edx, esi
		jb	short loc_6ED8F184

loc_6ED8F19C:				; CODE XREF: .text:6ED8F177j
		xor	eax, eax

loc_6ED8F19E:				; CODE XREF: .text:6ED8F193j
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		jmp	short sub_6ED8F1B0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8F1B0	proc near		; CODE XREF: sub_6ED8E910+53p
					; .text:6ED8F1A1j

arg_0		= dword	ptr  4

		cmp	word ptr ds:6ED40000h, 5A4Dh
		push	esi
		push	ebx
		jz	short loc_6ED8F1C2

loc_6ED8F1BD:				; CODE XREF: sub_6ED8F1B0+27j
					; sub_6ED8F1B0+2Fj ...
		xor	eax, eax

loc_6ED8F1BF:				; CODE XREF: sub_6ED8F1B0+61j
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_6ED8F1C2:				; CODE XREF: sub_6ED8F1B0+Bj
		mov	eax, ds:6ED4003Ch
		cmp	dword ptr [eax+6ED40000h], 4550h
		lea	edx, [eax+6ED40000h]
		jnz	short loc_6ED8F1BD
		cmp	word ptr [edx+18h], 10Bh
		jnz	short loc_6ED8F1BD
		mov	ebx, [esp+8+arg_0]
		movzx	esi, word ptr [edx+6]
		movzx	eax, word ptr [edx+14h]
		sub	ebx, 6ED40000h
		test	esi, esi
		jz	short loc_6ED8F1BD
		movzx	eax, ax
		lea	eax, [edx+eax+18h]
		xor	edx, edx
		jmp	short loc_6ED8F205
; ---------------------------------------------------------------------------

loc_6ED8F202:				; CODE XREF: sub_6ED8F1B0+68j
		add	eax, 28h

loc_6ED8F205:				; CODE XREF: sub_6ED8F1B0+50j
		mov	ecx, [eax+0Ch]
		cmp	ebx, ecx
		jb	short loc_6ED8F213
		add	ecx, [eax+8]
		cmp	ebx, ecx
		jb	short loc_6ED8F1BF

loc_6ED8F213:				; CODE XREF: sub_6ED8F1B0+5Aj
		add	edx, 1
		cmp	edx, esi
		jb	short loc_6ED8F202
		jmp	short loc_6ED8F1BD
sub_6ED8F1B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8F220	proc near		; CODE XREF: sub_6ED8EA60+2Ap
		cmp	word ptr ds:6ED40000h, 5A4Dh
		jz	short loc_6ED8F230

loc_6ED8F22B:				; CODE XREF: sub_6ED8F220+25j
					; sub_6ED8F220+2Dj
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8F230:				; CODE XREF: sub_6ED8F220+9j
		mov	eax, ds:6ED4003Ch
		cmp	dword ptr [eax+6ED40000h], 4550h
		lea	edx, [eax+6ED40000h]
		jnz	short loc_6ED8F22B
		cmp	word ptr [edx+18h], 10Bh
		jnz	short loc_6ED8F22B
		movzx	eax, word ptr [edx+6]
		retn
sub_6ED8F220	endp

; ---------------------------------------------------------------------------
		align 10h
		cmp	word ptr ds:6ED40000h, 5A4Dh
		push	ebx
		mov	edx, [esp+8]
		jz	short loc_6ED8F274

loc_6ED8F270:				; CODE XREF: .text:6ED8F289j
					; .text:6ED8F291j ...
		xor	eax, eax

loc_6ED8F272:				; CODE XREF: .text:6ED8F2BBj
					; .text:6ED8F2C9j
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_6ED8F274:				; CODE XREF: .text:6ED8F26Ej
		mov	eax, ds:6ED4003Ch
		cmp	dword ptr [eax+6ED40000h], 4550h
		lea	ecx, [eax+6ED40000h]
		jnz	short loc_6ED8F270
		cmp	word ptr [ecx+18h], 10Bh
		jnz	short loc_6ED8F270
		movzx	ebx, word ptr [ecx+6]
		movzx	eax, word ptr [ecx+14h]
		test	ebx, ebx
		jz	short loc_6ED8F270
		movzx	eax, ax
		lea	eax, [ecx+eax+18h]
		xor	ecx, ecx
		jmp	short loc_6ED8F2B3
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8F2B0:				; CODE XREF: .text:6ED8F2C5j
		add	eax, 28h

loc_6ED8F2B3:				; CODE XREF: .text:6ED8F2A8j
		test	byte ptr [eax+27h], 20h
		jz	short loc_6ED8F2C0
		test	edx, edx
		jz	short loc_6ED8F272
		sub	edx, 1

loc_6ED8F2C0:				; CODE XREF: .text:6ED8F2B7j
		add	ecx, 1
		cmp	ecx, ebx
		jb	short loc_6ED8F2B0
		xor	eax, eax
		jmp	short loc_6ED8F272
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8F2D0	proc near		; CODE XREF: sub_6ED8E910+7Dp
		cmp	word ptr ds:6ED40000h, 5A4Dh
		jz	short loc_6ED8F2E0

loc_6ED8F2DB:				; CODE XREF: sub_6ED8F2D0+25j
		xor	eax, eax

locret_6ED8F2DD:			; CODE XREF: sub_6ED8F2D0+32j
					; sub_6ED8F2D0+36j
		rep retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8F2E0:				; CODE XREF: sub_6ED8F2D0+9j
		mov	eax, ds:6ED4003Ch
		cmp	dword ptr [eax+6ED40000h], 4550h
		lea	edx, [eax+6ED40000h]
		jnz	short loc_6ED8F2DB
		cmp	word ptr [edx+18h], 10Bh
		mov	eax, 6ED40000h
		jz	short locret_6ED8F2DD
		xor	eax, eax
		jmp	short locret_6ED8F2DD
sub_6ED8F2D0	endp

; ---------------------------------------------------------------------------
		align 10h
		cmp	word ptr ds:6ED40000h, 5A4Dh
		push	esi
		push	ebx
		jz	short loc_6ED8F322

loc_6ED8F31D:				; CODE XREF: .text:6ED8F337j
					; .text:6ED8F33Fj ...
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_6ED8F322:				; CODE XREF: .text:6ED8F31Bj
		mov	eax, ds:6ED4003Ch
		cmp	dword ptr [eax+6ED40000h], 4550h
		lea	edx, [eax+6ED40000h]
		jnz	short loc_6ED8F31D
		cmp	word ptr [edx+18h], 10Bh
		jnz	short loc_6ED8F31D
		mov	ebx, [esp+0Ch]
		movzx	esi, word ptr [edx+6]
		movzx	eax, word ptr [edx+14h]
		sub	ebx, 6ED40000h
		test	esi, esi
		jz	short loc_6ED8F31D
		movzx	eax, ax
		lea	eax, [edx+eax+18h]
		xor	edx, edx
		jmp	short loc_6ED8F365
; ---------------------------------------------------------------------------

loc_6ED8F362:				; CODE XREF: .text:6ED8F378j
		add	eax, 28h

loc_6ED8F365:				; CODE XREF: .text:6ED8F360j
		mov	ecx, [eax+0Ch]
		cmp	ebx, ecx
		jb	short loc_6ED8F373
		add	ecx, [eax+8]
		cmp	ebx, ecx
		jb	short loc_6ED8F380

loc_6ED8F373:				; CODE XREF: .text:6ED8F36Aj
		add	edx, 1
		cmp	esi, edx
		ja	short loc_6ED8F362
		jmp	short loc_6ED8F31D
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8F380:				; CODE XREF: .text:6ED8F371j
		test	eax, eax
		jz	short loc_6ED8F31D
		mov	eax, [eax+24h]
		pop	ebx
		pop	esi
		not	eax
		shr	eax, 1Fh
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8F390	proc near		; CODE XREF: .text:6ED8F4B8p

var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 0Ch
		cmp	word ptr ds:6ED40000h, 5A4Dh
		mov	[esp+0Ch+var_C], ebx
		mov	eax, [esp+0Ch+arg_0]
		mov	[esp+0Ch+var_8], esi
		mov	[esp+0Ch+var_4], edi
		jz	short loc_6ED8F3C0

loc_6ED8F3AD:				; CODE XREF: sub_6ED8F390+46j
					; sub_6ED8F390+4Ej ...
		xor	eax, eax

loc_6ED8F3AF:				; CODE XREF: sub_6ED8F390+C8j
		mov	ebx, [esp+0Ch+var_C]
		mov	esi, [esp+0Ch+var_8]
		mov	edi, [esp+0Ch+var_4]
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8F3C0:				; CODE XREF: sub_6ED8F390+1Bj
		mov	edx, ds:6ED4003Ch
		cmp	dword ptr [edx+6ED40000h], 4550h
		lea	ecx, [edx+6ED40000h]
		jnz	short loc_6ED8F3AD
		cmp	word ptr [ecx+18h], 10Bh
		jnz	short loc_6ED8F3AD
		mov	esi, [ecx+80h]
		test	esi, esi
		jz	short loc_6ED8F3AD
		movzx	edi, word ptr [ecx+6]
		movzx	edx, word ptr [ecx+14h]
		test	edi, edi
		jz	short loc_6ED8F3AD
		movzx	edx, dx
		lea	edx, [ecx+edx+18h]
		xor	ecx, ecx
		jmp	short loc_6ED8F404
; ---------------------------------------------------------------------------

loc_6ED8F401:				; CODE XREF: sub_6ED8F390+87j
		add	edx, 28h

loc_6ED8F404:				; CODE XREF: sub_6ED8F390+6Fj
		mov	ebx, [edx+0Ch]
		cmp	esi, ebx
		jb	short loc_6ED8F412
		add	ebx, [edx+8]
		cmp	esi, ebx
		jb	short loc_6ED8F41B

loc_6ED8F412:				; CODE XREF: sub_6ED8F390+79j
		add	ecx, 1
		cmp	edi, ecx
		ja	short loc_6ED8F401
		jmp	short loc_6ED8F3AD
; ---------------------------------------------------------------------------

loc_6ED8F41B:				; CODE XREF: sub_6ED8F390+80j
		test	edx, edx
		lea	esi, [esi+0]
		jz	short loc_6ED8F3AD
		add	esi, 6ED40000h
		jmp	short loc_6ED8F43A
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8F430:				; CODE XREF: sub_6ED8F390+AFj
					; sub_6ED8F390+B6j
		test	eax, eax
		jle	short loc_6ED8F450
		sub	eax, 1
		add	esi, 14h

loc_6ED8F43A:				; CODE XREF: sub_6ED8F390+98j
		mov	ecx, [esi+4]
		test	ecx, ecx
		jnz	short loc_6ED8F430
		mov	edx, [esi+0Ch]
		test	edx, edx
		jnz	short loc_6ED8F430
		jmp	loc_6ED8F3AD
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8F450:				; CODE XREF: sub_6ED8F390+A2j
		mov	eax, 6ED40000h
		add	eax, [esi+0Ch]
		jmp	loc_6ED8F3AF
sub_6ED8F390	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		xor	edx, edx
		sub	esp, 18h
		mov	eax, ds:dword_6EDA83A4
		test	eax, eax
		jz	short loc_6ED8F4B2

loc_6ED8F46F:				; CODE XREF: .text:6ED8F4FFj
					; .text:6ED8F51Aj
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_6ED8F474:				; CODE XREF: .text:6ED8F4E3j
					; .text:6ED8F4E8j
		movzx	edx, byte ptr [eax+3]
		cmp	dl, 43h
		jz	short loc_6ED8F482
		cmp	dl, 63h
		jnz	short loc_6ED8F4B0

loc_6ED8F482:				; CODE XREF: .text:6ED8F47Bj
		movzx	edx, byte ptr [eax+4]
		cmp	dl, 52h
		jz	short loc_6ED8F492
		cmp	dl, 72h
		xchg	ax, ax
		jnz	short loc_6ED8F4B0

loc_6ED8F492:				; CODE XREF: .text:6ED8F489j
		movzx	edx, byte ptr [eax+5]
		cmp	dl, 54h
		jz	short loc_6ED8F4EE
		cmp	dl, 74h
		xchg	ax, ax
		jz	short loc_6ED8F4EE
		sub	edx, 30h
		cmp	dl, 9
		jbe	short loc_6ED8F4EE
		lea	esi, [esi+0]

loc_6ED8F4B0:				; CODE XREF: .text:6ED8F480j
					; .text:6ED8F490j ...
		mov	edx, ebx

loc_6ED8F4B2:				; CODE XREF: .text:6ED8F46Dj
					; .text:6ED8F4ECj
		lea	ebx, [edx+1]
		mov	[esp], edx
		call	sub_6ED8F390
		test	eax, eax
		jz	short loc_6ED8F505
		movzx	edx, byte ptr [eax]
		cmp	dl, 4Dh
		jz	short loc_6ED8F4CE
		cmp	dl, 6Dh
		jnz	short loc_6ED8F4B0

loc_6ED8F4CE:				; CODE XREF: .text:6ED8F4C7j
		movzx	edx, byte ptr [eax+1]
		cmp	dl, 53h
		jz	short loc_6ED8F4DC
		cmp	dl, 73h
		jnz	short loc_6ED8F4B0

loc_6ED8F4DC:				; CODE XREF: .text:6ED8F4D5j
		movzx	edx, byte ptr [eax+2]
		cmp	dl, 56h
		jz	short loc_6ED8F474
		cmp	dl, 76h
		jz	short loc_6ED8F474
		mov	edx, ebx
		jmp	short loc_6ED8F4B2
; ---------------------------------------------------------------------------

loc_6ED8F4EE:				; CODE XREF: .text:6ED8F499j
					; .text:6ED8F4A0j ...
		mov	[esp], eax
		call	ds:GetModuleHandleA
		test	eax, eax
		push	ebx
		mov	ds:dword_6EDA83A4, eax
		jnz	loc_6ED8F46F

loc_6ED8F505:				; CODE XREF: .text:6ED8F4BFj
		mov	dword ptr [esp], offset	aMsvcrt_dll ; "msvcrt.dll"
		call	ds:LoadLibraryW
		sub	esp, 4
		mov	ds:dword_6EDA83A4, eax
		jmp	loc_6ED8F46F
; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 2Ch
		mov	[esp+20h], esi
		mov	esi, [esp+30h]
		mov	[esp+1Ch], ebx
		mov	[esp+24h], edi
		mov	[esp+28h], ebp
		mov	[esp], esi
		call	strlen
		cmp	eax, 8
		jbe	short loc_6ED8F560

loc_6ED8F544:				; CODE XREF: .text:6ED8F569j
					; .text:6ED8F580j ...
		xor	ebx, ebx

loc_6ED8F546:				; CODE XREF: .text:6ED8F5BAj
		mov	eax, ebx
		mov	esi, [esp+20h]
		mov	ebx, [esp+1Ch]
		mov	edi, [esp+24h]
		mov	ebp, [esp+28h]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8F560:				; CODE XREF: .text:6ED8F542j
		cmp	word ptr ds:6ED40000h, 5A4Dh
		jnz	short loc_6ED8F544
		mov	eax, ds:6ED4003Ch
		cmp	dword ptr [eax+6ED40000h], 4550h
		lea	edx, [eax+6ED40000h]
		jnz	short loc_6ED8F544
		cmp	word ptr [edx+18h], 10Bh
		jnz	short loc_6ED8F544
		movzx	ebp, word ptr [edx+6]
		movzx	eax, word ptr [edx+14h]
		test	ebp, ebp
		jz	short loc_6ED8F544
		movzx	eax, ax
		xor	edi, edi
		lea	ebx, [edx+eax+18h]
		jmp	short loc_6ED8F5A4
; ---------------------------------------------------------------------------

loc_6ED8F5A1:				; CODE XREF: .text:6ED8F5C1j
		add	ebx, 28h

loc_6ED8F5A4:				; CODE XREF: .text:6ED8F59Fj
		mov	dword ptr [esp+8], 8
		mov	[esp+4], esi
		mov	[esp], ebx
		call	strncmp
		test	eax, eax
		jz	short loc_6ED8F546
		add	edi, 1
		cmp	edi, ebp
		jb	short loc_6ED8F5A1
		jmp	loc_6ED8F544
; ---------------------------------------------------------------------------
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _Unwind_SjLj_Resume]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _Unwind_SjLj_Register]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _Unwind_SjLj_Unregister]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _Unwind_GetTextRelBase]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _Unwind_GetDataRelBase]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _Unwind_GetRegionStart]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _Unwind_GetLanguageSpecificData]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _Unwind_GetIPInfo]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _Unwind_SetGR]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _Unwind_SetIP]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _Unwind_DeleteException]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _Unwind_SjLj_Resume_or_Rethrow]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _Unwind_SjLj_RaiseException]
		align 10h
		mov	edx, [esp+4]
		mov	eax, 0FFFFFFFFh
		xor	ecx, ecx
		lock cmpxchg [edx], ecx
		not	eax
		shr	eax, 1Fh
		retn
; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+20h]
		mov	eax, [ebx+4]
		sub	eax, 1
		test	eax, eax
		mov	[ebx+4], eax
		jz	short loc_6ED8F680

loc_6ED8F675:				; CODE XREF: .text:6ED8F694j
		xor	eax, eax
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8F680:				; CODE XREF: .text:6ED8F673j
		mov	dword ptr [ebx+8], 0
		mov	[esp], ebx
		call	sub_6ED8FB60
		sub	esp, 4
		test	eax, eax
		js	short loc_6ED8F675
		mov	dword ptr [esp+8], 0
		mov	dword ptr [esp+4], 1
		mov	eax, [ebx+0Ch]
		mov	[esp], eax
		call	ds:ReleaseSemaphore
		sub	esp, 0Ch
		test	eax, eax
		setz	al
		add	esp, 18h
		movzx	eax, al
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8F6D0	proc near		; CODE XREF: sub_6ED96D20+48p
					; .text:6ED98BC1p ...

hSemaphore	= dword	ptr -1Ch
lReleaseCount	= dword	ptr -18h
lpPreviousCount	= dword	ptr -14h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+hSemaphore], ebx
		call	sub_6ED8FB60
		mov	edx, eax
		sub	esp, 4
		xor	eax, eax
		test	edx, edx
		js	short loc_6ED8F712
		mov	[esp+1Ch+lpPreviousCount], 0 ; lpPreviousCount
		mov	[esp+1Ch+lReleaseCount], 1 ; lReleaseCount
		mov	eax, [ebx+4]
		mov	[esp+1Ch+hSemaphore], eax ; hSemaphore
		call	ds:ReleaseSemaphore
		sub	esp, 0Ch
		test	eax, eax
		setz	al
		movzx	eax, al

loc_6ED8F712:				; CODE XREF: sub_6ED8F6D0+19j
		add	esp, 18h
		pop	ebx
		retn
sub_6ED8F6D0	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		sub	esp, 8
		mov	ebx, [esp+10h]
		call	ds:GetCurrentThreadId
		xor	edx, edx
		mov	ecx, eax
		mov	eax, 0FFFFFFFFh
		lock cmpxchg [ebx], edx
		test	eax, eax
		js	short loc_6ED8F754
		cmp	ecx, [ebx+8]
		mov	eax, 1
		jnz	short loc_6ED8F74F
		add	dword ptr [ebx+4], 1
		xor	al, al

loc_6ED8F74F:				; CODE XREF: .text:6ED8F747j
		add	esp, 8
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_6ED8F754:				; CODE XREF: .text:6ED8F73Dj
		mov	dword ptr [ebx+4], 1
		xor	eax, eax
		mov	[ebx+8], ecx
		add	esp, 8
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h
		push	esi
		push	ebx
		sub	esp, 14h
		mov	ebx, [esp+20h]
		call	ds:GetCurrentThreadId
		mov	[esp], ebx
		mov	esi, eax
		call	sub_6ED8FBA0
		sub	esp, 4
		test	eax, eax
		jz	short loc_6ED8F7B0
		cmp	esi, [ebx+8]
		jz	short loc_6ED8F7D6
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	eax, [ebx+0Ch]
		mov	[esp], eax
		call	ds:WaitForSingleObject
		sub	esp, 8
		test	eax, eax
		jnz	short loc_6ED8F7C0

loc_6ED8F7B0:				; CODE XREF: .text:6ED8F78Ej
		mov	dword ptr [ebx+4], 1
		mov	[ebx+8], esi
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_6ED8F7C0:				; CODE XREF: .text:6ED8F7AEj
		mov	[esp], ebx
		call	sub_6ED8FB60
		mov	eax, 1
		sub	esp, 4
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_6ED8F7D6:				; CODE XREF: .text:6ED8F793j
		mov	[esp], ebx
		call	sub_6ED8FB60
		xor	eax, eax
		add	dword ptr [ebx+4], 1
		sub	esp, 4
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8F7F0	proc near		; CODE XREF: .text:6ED98B5Fp
					; sub_6ED98C90+CEp ...

hHandle		= dword	ptr -1Ch
dwMilliseconds	= dword	ptr -18h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+hHandle], ebx
		call	sub_6ED8FBA0
		sub	esp, 4
		test	eax, eax
		jnz	short loc_6ED8F810

loc_6ED8F807:				; CODE XREF: sub_6ED8F7F0+39j
		xor	eax, eax
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8F810:				; CODE XREF: sub_6ED8F7F0+15j
		mov	[esp+1Ch+dwMilliseconds], 0FFFFFFFFh ; dwMilliseconds
		mov	eax, [ebx+4]
		mov	[esp+1Ch+hHandle], eax ; hHandle
		call	ds:WaitForSingleObject
		sub	esp, 8
		test	eax, eax
		jz	short loc_6ED8F807
		mov	[esp+1Ch+hHandle], ebx
		call	sub_6ED8FB60
		mov	eax, 1
		sub	esp, 4
		add	esp, 18h
		pop	ebx
		retn
sub_6ED8F7F0	endp

; ---------------------------------------------------------------------------
		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+20h]
		mov	dword ptr [ebx], 0FFFFFFFFh
		mov	dword ptr [ebx+4], 0
		mov	dword ptr [ebx+8], 0
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 0FFFFh
		mov	dword ptr [esp+4], 0
		mov	dword ptr [esp], 0
		call	ds:CreateSemaphoreA
		sub	esp, 10h
		mov	[ebx+0Ch], eax
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8F890	proc near		; CODE XREF: sub_6ED8FC80+13p

lpSemaphoreAttributes= dword ptr -1Ch
lInitialCount	= dword	ptr -18h
lMaximumCount	= dword	ptr -14h
lpName		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], 0FFFFFFFFh
		mov	[esp+1Ch+lpName], 0 ; lpName
		mov	[esp+1Ch+lMaximumCount], 0FFFFh	; lMaximumCount
		mov	[esp+1Ch+lInitialCount], 0 ; lInitialCount
		mov	[esp+1Ch+lpSemaphoreAttributes], 0 ; lpSemaphoreAttributes
		call	ds:CreateSemaphoreA
		sub	esp, 10h
		mov	[ebx+4], eax
		add	esp, 18h
		pop	ebx
		retn
sub_6ED8F890	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 1Ch
		mov	eax, [esp+20h]
		mov	eax, [eax+4]
		mov	[esp], eax
		call	ds:CloseHandle
		sub	esp, 4
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_6ED8F8F0(DWORD, LPVOID)
sub_6ED8F8F0	proc near		; CODE XREF: sub_6ED99540+8Ap

dwTlsIndex	= dword	ptr -1Ch
lpTlsValue	= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+lpTlsValue], eax ; lpTlsValue
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+dwTlsIndex], eax ; dwTlsIndex
		call	ds:TlsSetValue
		sub	esp, 8
		test	eax, eax
		jz	short loc_6ED8F915
		xor	eax, eax
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED8F915:				; CODE XREF: sub_6ED8F8F0+1Dj
		mov	eax, ds:GetLastError
		add	esp, 1Ch
		jmp	eax
sub_6ED8F8F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_6ED8F920(DWORD)
sub_6ED8F920	proc near		; CODE XREF: sub_6ED99540+5Fp
					; sub_6ED99620+5Fp

dwTlsIndex	= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], ebx
		mov	[esp+1Ch+var_4], esi
		call	ds:GetLastError
		mov	ebx, eax
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+dwTlsIndex], eax ; dwTlsIndex
		call	ds:TlsGetValue
		sub	esp, 4
		mov	esi, eax
		mov	[esp+1Ch+dwTlsIndex], ebx ; dwErrCode
		call	ds:SetLastError
		mov	eax, esi
		sub	esp, 4
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_6ED8F920	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_6ED8F960(DWORD)
sub_6ED8F960	proc near		; CODE XREF: sub_6ED99DA0+14p

dwTlsIndex	= dword	ptr -1Ch
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+dwTlsIndex], eax ; dwTlsIndex
		call	ds:TlsFree
		sub	esp, 4
		test	eax, eax
		jz	short loc_6ED8F980
		xor	eax, eax
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8F980:				; CODE XREF: sub_6ED8F960+15j
		mov	eax, ds:GetLastError
		add	esp, 1Ch
		jmp	eax
sub_6ED8F960	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8F990	proc near		; CODE XREF: sub_6ED8FCA0+22p

var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 0Ch
		mov	[esp+0Ch+var_8], ebx
		mov	ebx, [esp+0Ch+arg_4]
		mov	[esp+0Ch+var_4], esi
		mov	esi, [esp+0Ch+arg_0]
		call	ds:TlsAlloc
		cmp	eax, 0FFFFFFFFh
		jz	short loc_6ED8F9C8
		mov	[esi], eax
		mov	esi, [esp+0Ch+var_4]
		mov	[esp+0Ch+arg_4], ebx
		mov	ebx, [esp+0Ch+var_8]
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	sub_6ED8FB00
; ---------------------------------------------------------------------------

loc_6ED8F9C8:				; CODE XREF: sub_6ED8F990+1Cj
		mov	eax, ds:GetLastError
		mov	ebx, [esp+0Ch+var_8]
		mov	esi, [esp+0Ch+var_4]
		add	esp, 0Ch
		jmp	eax
sub_6ED8F990	endp

; ---------------------------------------------------------------------------
		align 10h
		push	esi
		push	ebx
		sub	esp, 14h
		mov	esi, [esp+24h]
		mov	ebx, [esp+20h]
		test	esi, esi
		jz	short loc_6ED8FA03
		test	ebx, ebx
		jz	short loc_6ED8FA03
		mov	ecx, [ebx]
		test	ecx, ecx
		jz	short loc_6ED8FA10

loc_6ED8F9FB:				; CODE XREF: .text:6ED8FA26j
					; .text:6ED8FA42j
		xor	eax, eax

loc_6ED8F9FD:				; CODE XREF: .text:6ED8FA50j
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_6ED8FA03:				; CODE XREF: .text:6ED8F9EFj
					; .text:6ED8F9F3j
		add	esp, 14h
		mov	eax, 16h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8FA10:				; CODE XREF: .text:6ED8F9F9j
		lea	eax, [ebx+4]
		mov	[esp], eax
		call	sub_6ED8FBA0
		sub	esp, 4
		test	eax, eax
		jz	short loc_6ED8FA44
		mov	edx, [ebx]
		test	edx, edx
		jnz	short loc_6ED8F9FB
		mov	esi, ds:Sleep
		xchg	ax, ax

loc_6ED8FA30:				; CODE XREF: .text:6ED8FA40j
		mov	dword ptr [esp], 0
		call	esi ; Sleep
		mov	eax, [ebx]
		sub	esp, 4
		test	eax, eax
		jz	short loc_6ED8FA30
		jmp	short loc_6ED8F9FB
; ---------------------------------------------------------------------------

loc_6ED8FA44:				; CODE XREF: .text:6ED8FA20j
		call	esi
		xor	eax, eax
		mov	dword ptr [ebx], 1
		xchg	ax, ax
		jmp	short loc_6ED8F9FD
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8FA60	proc near		; CODE XREF: sub_6ED8DE10+D0p
					; sub_6ED8DE10+E2p ...

arg_0		= byte ptr  4

		push	ecx
		lea	ecx, [esp+4+arg_0]
		cmp	eax, 1000h
		jb	short loc_6ED8FA81

loc_6ED8FA6C:				; CODE XREF: sub_6ED8FA60+1Fj
		sub	ecx, 1000h
		or	dword ptr [ecx], 0
		sub	eax, 1000h
		cmp	eax, 1000h
		ja	short loc_6ED8FA6C

loc_6ED8FA81:				; CODE XREF: sub_6ED8FA60+Aj
		sub	ecx, eax
		or	dword ptr [ecx], 0
		mov	eax, esp
		mov	esp, ecx
		mov	ecx, [eax]
		mov	eax, [eax+4]
		push	eax
		retn
sub_6ED8FA60	endp

; ---------------------------------------------------------------------------
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _write]
		align 10h
		mov	eax, [esp+0Ch]
		mov	edx, [esp+8]
		mov	ecx, [esp+4]
		lock cmpxchg [ecx], edx
		retn
; ---------------------------------------------------------------------------
		jmp	short sub_6ED8FAC0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8FAC0	proc near		; CODE XREF: sub_6ED41040+53p
					; sub_6ED41040+C8p ...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, [esp+arg_8]
		mov	edx, [esp+arg_4]
		mov	ecx, [esp+arg_0]
		lock cmpxchg [ecx], edx
		retn	0Ch
sub_6ED8FAC0	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+8]
		mov	edx, [esp+4]
		lock xchg eax, [edx]
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8FAF0	proc near		; CODE XREF: sub_6ED41040+1A2p
					; sub_6ED41040+211p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		lock xchg eax, [edx]
		retn	8
sub_6ED8FAF0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8FB00	proc near		; CODE XREF: sub_6ED8F990+33j

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

; FUNCTION CHUNK AT 6ED8F0C0 SIZE 00000070 BYTES

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_4]
		mov	edx, [esp+0Ch+arg_0]
		test	eax, eax
		jz	short loc_6ED8FB20
		mov	[esp+0Ch+arg_4], eax
		mov	[esp+0Ch+arg_0], edx
		add	esp, 0Ch
		jmp	loc_6ED8F0C0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8FB20:				; CODE XREF: sub_6ED8FB00+Dj
		add	esp, 0Ch
		retn
sub_6ED8FB00	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		add	esp, 0Ch
		jmp	loc_6ED8F020
; ---------------------------------------------------------------------------
		align 10h
		mov	edx, [esp+4]
		mov	eax, 0FFFFFFFFh
		lock xadd [edx], eax
		sub	eax, 1
		retn
; ---------------------------------------------------------------------------
		jmp	short sub_6ED8FB60
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8FB60	proc near		; CODE XREF: .text:6ED8F68Ap
					; sub_6ED8F6D0+Bp ...

arg_0		= dword	ptr  4

		mov	edx, [esp+arg_0]
		mov	eax, 0FFFFFFFFh
		lock xadd [edx], eax
		sub	eax, 1
		retn	4
sub_6ED8FB60	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	edx, [esp+4]
		mov	eax, 1
		lock xadd [edx], eax
		add	eax, 1
		retn
; ---------------------------------------------------------------------------
		jmp	short sub_6ED8FBA0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8FBA0	proc near		; CODE XREF: .text:6ED8F784p
					; sub_6ED8F7F0+Bp ...

arg_0		= dword	ptr  4

		mov	edx, [esp+arg_0]
		mov	eax, 1
		lock xadd [edx], eax
		add	eax, 1
		retn	4
sub_6ED8FBA0	endp

; ---------------------------------------------------------------------------
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION malloc]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _amsg_exit]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION free]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _initterm]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION strlen]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION memcpy]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION abort]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION strcmp]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION fwrite]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION fputs]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION fputc]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION realloc]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION sprintf]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION strcpy]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _lock]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION __dllonexit]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _unlock]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION vfprintf]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION calloc]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION strncmp]
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED8FC60	proc near		; DATA XREF: .text:6ED99DDCo
		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		call	sub_6ED41430
		mov	dword ptr [esp], offset	sub_6ED41480 ; _onexit_t
		call	sub_6ED8E790
		leave
		retn
sub_6ED8FC60	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8FC80	proc near		; DATA XREF: .text:6ED99DD8o

var_1C		= dword	ptr -1Ch

		sub	esp, 1Ch
		mov	eax, dword_6ED9B00C
		test	eax, eax
		jz	short loc_6ED8FC98
		mov	[esp+1Ch+var_1C], offset dword_6ED9FA30
		call	sub_6ED8F890

loc_6ED8FC98:				; CODE XREF: sub_6ED8FC80+Aj
		add	esp, 1Ch
		retn
sub_6ED8FC80	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8FCA0	proc near		; DATA XREF: .text:6ED99DD4o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h

		sub	esp, 1Ch
		mov	eax, dword_6ED9B00C
		mov	byte_6ED9FA24, 0
		test	eax, eax
		jz	short loc_6ED8FCD0
		mov	[esp+1Ch+var_18], offset sub_6ED8FCE0
		mov	[esp+1Ch+var_1C], offset dword_6ED9FA20
		call	sub_6ED8F990
		test	eax, eax
		setz	byte_6ED9FA24

loc_6ED8FCD0:				; CODE XREF: sub_6ED8FCA0+11j
		mov	[esp+1Ch+var_1C], offset sub_6ED99DA0 ;	_onexit_t
		call	sub_6ED8E790
		add	esp, 1Ch
		retn
sub_6ED8FCA0	endp


; =============== S U B	R O U T	I N E =======================================


sub_6ED8FCE0	proc near		; DATA XREF: sub_6ED8FCA0+13o

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 14h
		mov	esi, [esp+1Ch+arg_0]
		test	esi, esi
		jz	short loc_6ED8FD15
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_6ED8FD07

loc_6ED8FCF3:				; CODE XREF: sub_6ED8FCE0+25j
		mov	ebx, [eax+10h]
		add	eax, 30h
		mov	[esp+1Ch+var_1C], eax
		call	_Unwind_DeleteException
		test	ebx, ebx
		mov	eax, ebx
		jnz	short loc_6ED8FCF3

loc_6ED8FD07:				; CODE XREF: sub_6ED8FCE0+11j
		mov	[esp+1Ch+arg_0], esi
		add	esp, 14h
		pop	ebx
		pop	esi
		jmp	free
; ---------------------------------------------------------------------------

loc_6ED8FD15:				; CODE XREF: sub_6ED8FCE0+Bj
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
sub_6ED8FCE0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8FD20	proc near		; CODE XREF: sub_6ED8FEC0+3Bp
					; sub_6ED997C0+423p

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h

		push	ebx
		mov	ebx, eax
		sub	esp, 28h
		movzx	ecx, byte ptr [eax+14h]
		cmp	cl, 0FFh
		movzx	eax, cl
		jz	short loc_6ED8FD86
		mov	ecx, eax
		and	ecx, 7
		cmp	ecx, 2
		jz	short loc_6ED8FD80
		jle	short loc_6ED8FD50
		cmp	ecx, 3
		jz	short loc_6ED8FD54
		cmp	ecx, 4
		jz	short loc_6ED8FD76

loc_6ED8FD48:				; CODE XREF: sub_6ED8FD20+32j
		call	abort
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8FD50:				; CODE XREF: sub_6ED8FD20+1Cj
		test	ecx, ecx
		jnz	short loc_6ED8FD48

loc_6ED8FD54:				; CODE XREF: sub_6ED8FD20+21j
		shl	edx, 2
		neg	edx

loc_6ED8FD59:				; CODE XREF: sub_6ED8FD20+5Bj
					; sub_6ED8FD20+64j ...
		mov	ecx, [ebx+0Ch]
		add	ecx, edx
		mov	edx, [ebx+8]
		lea	ebx, [esp+2Ch+var_10]
		mov	[esp+2Ch+var_2C], ebx
		call	sub_6ED90000
		mov	eax, [esp+2Ch+var_10]
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_6ED8FD76:				; CODE XREF: sub_6ED8FD20+26j
		shl	edx, 3
		neg	edx
		jmp	short loc_6ED8FD59
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8FD80:				; CODE XREF: sub_6ED8FD20+1Aj
		add	edx, edx
		neg	edx
		jmp	short loc_6ED8FD59
; ---------------------------------------------------------------------------

loc_6ED8FD86:				; CODE XREF: sub_6ED8FD20+10j
		xor	edx, edx
		jmp	short loc_6ED8FD59
sub_6ED8FD20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8FD90	proc near		; CODE XREF: sub_6ED8FEC0+46p
					; sub_6ED997C0+43Fp

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 2Ch
		mov	[esp+2Ch+var_C], ebx
		mov	ebx, eax
		mov	eax, [ecx]
		mov	[esp+2Ch+var_8], esi
		mov	esi, edx
		mov	[esp+2Ch+var_4], edi
		mov	edi, ecx
		mov	[esp+2Ch+var_10], eax
		mov	eax, [edx]
		mov	[esp+2Ch+var_2C], edx
		call	dword ptr [eax+8]
		test	al, al
		jz	short loc_6ED8FDC1
		mov	eax, [esp+2Ch+var_10]
		mov	eax, [eax]
		mov	[esp+2Ch+var_10], eax

loc_6ED8FDC1:				; CODE XREF: sub_6ED8FD90+25j
		mov	eax, [ebx]
		lea	edx, [esp+2Ch+var_10]
		mov	[esp+2Ch+var_24], edx
		mov	[esp+2Ch+var_20], 1
		mov	[esp+2Ch+var_28], esi
		mov	[esp+2Ch+var_2C], ebx
		call	dword ptr [eax+10h]
		mov	edx, eax
		xor	eax, eax
		test	dl, dl
		jz	short loc_6ED8FDF0
		mov	eax, [esp+2Ch+var_10]
		mov	[edi], eax
		mov	eax, 1

loc_6ED8FDF0:				; CODE XREF: sub_6ED8FD90+53j
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
sub_6ED8FD90	endp


; =============== S U B	R O U T	I N E =======================================


sub_6ED8FE00	proc near		; CODE XREF: sub_6ED9909D+69p
					; sub_6ED997C0+E3p ...

var_2C		= dword	ptr -2Ch

		push	ebp
		push	edi
		mov	edi, edx
		push	esi
		mov	esi, eax
		push	ebx
		xor	eax, eax
		sub	esp, 1Ch
		test	esi, esi
		mov	ebx, ecx
		jz	short loc_6ED8FE1B
		mov	[esp+2Ch+var_2C], esi
		call	_Unwind_GetRegionStart

loc_6ED8FE1B:				; CODE XREF: sub_6ED8FE00+11j
		mov	[ebx], eax
		movzx	edx, byte ptr [edi]
		add	edi, 1
		cmp	dl, 0FFh
		jz	short loc_6ED8FEA7
		movzx	ebp, dl
		mov	edx, esi
		mov	eax, ebp
		call	sub_6ED8FF40
		lea	edx, [ebx+4]
		mov	ecx, edi
		mov	[esp+2Ch+var_2C], edx
		mov	edx, eax
		mov	eax, ebp
		call	sub_6ED90000
		mov	edi, eax
		movzx	eax, byte ptr [edi]
		add	edi, 1
		cmp	al, 0FFh
		mov	[ebx+14h], al
		jz	short loc_6ED8FEB7

loc_6ED8FE54:				; CODE XREF: sub_6ED8FE00+B5j
		xor	esi, esi
		xor	ecx, ecx

loc_6ED8FE58:				; CODE XREF: sub_6ED8FE00+6Cj
		movzx	eax, byte ptr [edi]
		add	edi, 1
		mov	edx, eax
		and	edx, 7Fh
		shl	edx, cl
		add	ecx, 7
		or	esi, edx
		test	al, al
		js	short loc_6ED8FE58
		lea	esi, [edi+esi]
		mov	[ebx+0Ch], esi

loc_6ED8FE74:				; CODE XREF: sub_6ED8FE00+BEj
		movzx	eax, byte ptr [edi]
		xor	ecx, ecx
		mov	[ebx+15h], al
		lea	eax, [edi+1]
		xor	edi, edi

loc_6ED8FE81:				; CODE XREF: sub_6ED8FE00+97j
		movzx	esi, byte ptr [eax]
		add	eax, 1
		mov	edx, esi
		and	edx, 7Fh
		shl	edx, cl
		add	ecx, 7
		or	edi, edx
		mov	edx, esi
		test	dl, dl
		js	short loc_6ED8FE81
		lea	edi, [eax+edi]
		mov	[ebx+10h], edi
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED8FEA7:				; CODE XREF: sub_6ED8FE00+26j
		mov	[ebx+4], eax
		movzx	eax, byte ptr [edi]
		add	edi, 1
		cmp	al, 0FFh
		mov	[ebx+14h], al
		jnz	short loc_6ED8FE54

loc_6ED8FEB7:				; CODE XREF: sub_6ED8FE00+52j
		mov	dword ptr [ebx+0Ch], 0
		jmp	short loc_6ED8FE74
sub_6ED8FE00	endp


; =============== S U B	R O U T	I N E =======================================


sub_6ED8FEC0	proc near		; CODE XREF: sub_6ED9909D+80p
					; sub_6ED9909D+ADp ...

var_20		= dword	ptr -20h
arg_0		= dword	ptr  4

		push	ebp
		mov	ebp, edx
		push	edi
		xor	edx, edx
		push	esi
		mov	edi, eax
		push	ebx
		sub	esp, 1Ch
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_20], ecx
		xor	ecx, ecx
		not	ebx
		add	ebx, [eax+0Ch]
		lea	esi, [esi+0]

loc_6ED8FEE0:				; CODE XREF: sub_6ED8FEC0+53j
					; sub_6ED8FEC0+58j
		movzx	esi, byte ptr [ebx]
		add	ebx, 1
		mov	eax, esi
		and	eax, 7Fh
		shl	eax, cl
		or	edx, eax
		mov	eax, esi
		test	al, al
		js	short loc_6ED8FF15
		test	edx, edx
		jz	short loc_6ED8FF20
		mov	eax, edi
		call	sub_6ED8FD20
		lea	ecx, [esp+2Ch+var_20]
		mov	edx, ebp
		call	sub_6ED8FD90
		test	al, al
		jnz	short loc_6ED8FF30
		xor	edx, edx
		xor	ecx, ecx
		jmp	short loc_6ED8FEE0
; ---------------------------------------------------------------------------

loc_6ED8FF15:				; CODE XREF: sub_6ED8FEC0+33j
		add	ecx, 7
		jmp	short loc_6ED8FEE0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8FF20:				; CODE XREF: sub_6ED8FEC0+37j
		add	esp, 1Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8FF30:				; CODE XREF: sub_6ED8FEC0+4Dj
		add	esp, 1Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_6ED8FEC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8FF40	proc near		; CODE XREF: sub_6ED8FE00+2Fp
					; sub_6ED997C0+F5p ...

var_1C		= dword	ptr -1Ch

		sub	esp, 1Ch
		cmp	al, 0FFh
		jz	short loc_6ED8FF74
		and	eax, 70h
		cmp	eax, 20h
		jz	short loc_6ED8FFA0
		jle	short loc_6ED8FF70
		cmp	eax, 40h
		jz	short loc_6ED8FF87
		cmp	eax, 50h
		lea	esi, [esi+0]
		jz	short loc_6ED8FF74
		cmp	eax, 30h
		jz	short loc_6ED8FFB0

loc_6ED8FF67:				; CODE XREF: sub_6ED8FF40+43j
		call	abort
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8FF70:				; CODE XREF: sub_6ED8FF40+Fj
		test	eax, eax
		jnz	short loc_6ED8FF80

loc_6ED8FF74:				; CODE XREF: sub_6ED8FF40+5j
					; sub_6ED8FF40+20j ...
		xor	eax, eax
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8FF80:				; CODE XREF: sub_6ED8FF40+32j
		cmp	eax, 10h
		jnz	short loc_6ED8FF67
		jmp	short loc_6ED8FF74
; ---------------------------------------------------------------------------

loc_6ED8FF87:				; CODE XREF: sub_6ED8FF40+14j
		mov	[esp+1Ch+var_1C], edx
		lea	esi, [esi+0]
		call	_Unwind_GetRegionStart
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8FFA0:				; CODE XREF: sub_6ED8FF40+Dj
		mov	[esp+1Ch+var_1C], edx
		call	_Unwind_GetTextRelBase
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED8FFB0:				; CODE XREF: sub_6ED8FF40+25j
		mov	[esp+1Ch+var_1C], edx
		call	_Unwind_GetDataRelBase
		add	esp, 1Ch
		retn
sub_6ED8FF40	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED8FFC0	proc near		; DATA XREF: sub_6ED99760+37o

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		cmp	[esp+1Ch+arg_0], 1
		lea	edx, [eax-40h]
		ja	short loc_6ED8FFF1
		mov	edx, [edx+14h]
		lea	ebx, [eax+20h]
		test	edx, edx
		jz	short loc_6ED8FFE4
		lea	ebx, [eax+20h]
		mov	[esp+1Ch+var_1C], ebx
		call	edx

loc_6ED8FFE4:				; CODE XREF: sub_6ED8FFC0+1Aj
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	loc_6ED993C0
; ---------------------------------------------------------------------------

loc_6ED8FFF1:				; CODE XREF: sub_6ED8FFC0+10j
		mov	eax, [edx+1Ch]
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED90270
sub_6ED8FFC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED90000	proc near		; CODE XREF: sub_6ED8FD20+48p
					; sub_6ED8FE00+40p

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 2Ch
		mov	[esp+2Ch+var_10], ebx
		mov	ebx, eax
		mov	eax, ecx
		cmp	bl, 50h
		mov	[esp+2Ch+var_8], edi
		mov	edi, edx
		mov	edx, ebx
		mov	[esp+2Ch+var_C], esi
		mov	[esp+2Ch+var_4], ebp
		jz	loc_6ED90130
		mov	[esp+2Ch+var_24], ecx
		movzx	ecx, bl
		mov	[esp+2Ch+var_28], ecx
		and	ecx, 0Fh
		cmp	ecx, 0Ch	; switch 13 cases
		jbe	short loc_6ED90040

loc_6ED90037:				; CODE XREF: sub_6ED90000:loc_6ED90040j
					; DATA XREF: .rdata:off_6EDA4F20o
		call	abort		; jumptable 6ED90040 default case
; ---------------------------------------------------------------------------
		align 10h

loc_6ED90040:				; CODE XREF: sub_6ED90000+35j
		jmp	ds:off_6EDA4F20[ecx*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_6ED90047:				; CODE XREF: sub_6ED90000:loc_6ED90040j
					; DATA XREF: .rdata:off_6EDA4F20o
		mov	ebx, [eax]	; jumptable 6ED90040 cases 0,3,11
		add	eax, 4

loc_6ED9004C:				; CODE XREF: sub_6ED90000+95j
					; sub_6ED90000+C9j ...
		test	ebx, ebx
		xchg	ax, ax
		jz	short loc_6ED90070
		mov	ecx, [esp+2Ch+var_28]
		and	ecx, 70h
		cmp	ecx, 10h
		jz	loc_6ED90140

loc_6ED90062:				; CODE XREF: sub_6ED90000+144j
		add	ebx, edi
		test	dl, dl
		jns	short loc_6ED90070
		mov	ebx, [ebx]
		lea	esi, [esi+0]

loc_6ED90070:				; CODE XREF: sub_6ED90000+50j
					; sub_6ED90000+66j ...
		mov	edx, [esp+2Ch+arg_0]
		mov	[edx], ebx
		mov	ebx, [esp+2Ch+var_10]
		mov	esi, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_8]
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED90090:				; CODE XREF: sub_6ED90000:loc_6ED90040j
					; DATA XREF: .rdata:off_6EDA4F20o
		mov	ebx, [eax]	; jumptable 6ED90040 cases 4,12
		add	eax, 8
		jmp	short loc_6ED9004C
; ---------------------------------------------------------------------------

loc_6ED90097:				; CODE XREF: sub_6ED90000:loc_6ED90040j
					; DATA XREF: .rdata:off_6EDA4F20o
		xor	ebx, ebx	; jumptable 6ED90040 case 9
		xor	ecx, ecx
		mov	esi, ebx
		mov	ebp, edx
		mov	[esp+2Ch+var_20], edi

loc_6ED900A3:				; CODE XREF: sub_6ED90000+BAj
		movzx	ebx, byte ptr [eax]
		add	eax, 1
		movzx	edi, bl
		mov	edx, edi
		and	edx, 7Fh
		shl	edx, cl
		add	ecx, 7
		or	esi, edx
		test	bl, bl
		js	short loc_6ED900A3
		cmp	ecx, 1Fh
		mov	ebx, esi
		mov	edx, ebp
		mov	esi, edi
		mov	edi, [esp+2Ch+var_20]
		ja	short loc_6ED9004C
		and	esi, 40h
		jz	loc_6ED9004C
		mov	esi, 0FFFFFFFFh
		shl	esi, cl
		or	ebx, esi
		jmp	loc_6ED9004C
; ---------------------------------------------------------------------------

loc_6ED900E2:				; CODE XREF: sub_6ED90000:loc_6ED90040j
					; DATA XREF: .rdata:off_6EDA4F20o
		mov	ebp, edi	; jumptable 6ED90040 case 1
		xor	ebx, ebx
		xor	ecx, ecx
		mov	edi, edx
		lea	esi, [esi+0]

loc_6ED900F0:				; CODE XREF: sub_6ED90000+106j
		movzx	edx, byte ptr [eax]
		mov	esi, 7Fh
		add	eax, 1
		and	esi, edx
		shl	esi, cl
		add	ecx, 7
		or	ebx, esi
		test	dl, dl
		js	short loc_6ED900F0
		mov	edx, edi
		mov	edi, ebp
		jmp	loc_6ED9004C
; ---------------------------------------------------------------------------

loc_6ED90111:				; CODE XREF: sub_6ED90000:loc_6ED90040j
					; DATA XREF: .rdata:off_6EDA4F20o
		movsx	ebx, word ptr [eax] ; jumptable	6ED90040 case 10
		add	eax, 2
		jmp	loc_6ED9004C
; ---------------------------------------------------------------------------
		align 10h

loc_6ED90120:				; CODE XREF: sub_6ED90000:loc_6ED90040j
					; DATA XREF: .rdata:off_6EDA4F20o
		movzx	ebx, word ptr [eax] ; jumptable	6ED90040 case 2
		add	eax, 2
		jmp	loc_6ED9004C
; ---------------------------------------------------------------------------
		align 10h

loc_6ED90130:				; CODE XREF: sub_6ED90000+1Ej
		add	eax, 3
		and	eax, 0FFFFFFFCh
		mov	ebx, [eax]
		add	eax, 4
		jmp	loc_6ED90070
; ---------------------------------------------------------------------------

loc_6ED90140:				; CODE XREF: sub_6ED90000+5Cj
		mov	edi, [esp+2Ch+var_24]
		jmp	loc_6ED90062
sub_6ED90000	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED90150	proc near		; CODE XREF: sub_6ED52F6B+59p
					; sub_6ED52F6B+6Bp ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	edx, [esp+0Ch+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jz	short loc_6ED90167
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED90167:				; CODE XREF: sub_6ED90150+11j
		mov	eax, [edx]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_Z5qFreePv
		add	esp, 0Ch
		jmp	eax
sub_6ED90150	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED90180	proc near		; CODE XREF: sub_6ED561D0+222p
					; sub_6ED561D0+545p

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED99E72
		mov	[ebp+var_28], offset sub_6ED9020F
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZN10QByteArrayC1EPKc
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN10QTextCodec12codecForNameERK10QByteArray
		mov	[ebp+var_50], eax
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED901FF
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_Z5qFreePv

loc_6ED901FF:				; CODE XREF: sub_6ED90180+6Aj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_50]
		leave
		retn
sub_6ED90180	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED9020F	proc near		; DATA XREF: sub_6ED90180+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-54h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_6ED90150
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED9020F	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry   8. _ZN10QXmlReaderD0Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN10QXmlReaderD0Ev
_ZN10QXmlReaderD0Ev proc near		; DATA XREF: .rdata:6EDA6BCCo

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA6BC8
		add	esp, 0Ch
		jmp	sub_6ED988B0
_ZN10QXmlReaderD0Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry   9. _ZN10QXmlReaderD1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN10QXmlReaderD1Ev
_ZN10QXmlReaderD1Ev proc near		; DATA XREF: .rdata:off_6EDA6BC8o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA6BC8
		retn
_ZN10QXmlReaderD1Ev endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn bp-based	frame

sub_6ED90270	proc near		; CODE XREF: sub_6ED8FFC0+37p
					; sub_6ED98800+Bp ...

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9AE9C
		mov	[ebp+var_18], offset sub_6ED902AE
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	[ebp+var_38], 2
		call	[ebp+arg_0]
		call	abort
sub_6ED90270	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED902AE	proc near		; DATA XREF: sub_6ED90270+1Do
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-40h], eax
		jz	short loc_6ED902DB
		mov	dword ptr [ebp-38h], 0
		call	sub_6ED991C0
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED902DB:				; CODE XREF: sub_6ED902AE+Dj
		mov	eax, [ebp-40h]
		mov	[esp+0], eax
		call	sub_6ED98EF0
		mov	dword ptr [ebp-38h], 1
		call	abort
sub_6ED902AE	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED90300	proc near		; CODE XREF: sub_6ED987A0+Bp
					; sub_6ED99030+68p

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		call	[esp+0Ch+arg_0]
		call	sub_6ED98800
sub_6ED90300	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED90310	proc near		; DATA XREF: .rdata:6EDA77ECo

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA77E8
		add	esp, 0Ch
		jmp	sub_6ED988B0
sub_6ED90310	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED90330	proc near		; DATA XREF: .rdata:off_6EDA77E8o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA77E8
		retn
sub_6ED90330	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		mov	dword ptr [eax], offset	off_6EDA77E8
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED90350	proc near		; DATA XREF: .rdata:6EDA780Co

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_6EDA7808
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED98790
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_6ED988B0
sub_6ED90350	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED90380	proc near		; DATA XREF: .rdata:off_6EDA7808o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7808
		add	esp, 0Ch
		jmp	sub_6ED98790
sub_6ED90380	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED903A0	proc near		; CODE XREF: sub_6ED90400+11p
					; sub_6ED90430+10j ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7808
		add	esp, 0Ch
		jmp	sub_6ED98790
sub_6ED903A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED903C0	proc near		; DATA XREF: .rdata:6EDA784Co

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7848
		add	esp, 0Ch
		jmp	sub_6ED988B0
sub_6ED903C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED903E0	proc near		; DATA XREF: .rdata:off_6EDA7848o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7848
		retn
sub_6ED903E0	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		mov	dword ptr [eax], offset	off_6EDA7848
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED90400	proc near		; DATA XREF: .rdata:6EDA786Co

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_6EDA7868
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED903A0
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_6ED988B0
sub_6ED90400	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED90430	proc near		; DATA XREF: .rdata:off_6EDA7868o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7868
		add	esp, 0Ch
		jmp	sub_6ED903A0
sub_6ED90430	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		mov	eax, [esp+10h]
		mov	dword ptr [eax], offset	off_6EDA7868
		add	esp, 0Ch
		jmp	sub_6ED903A0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED90470	proc near		; DATA XREF: .rdata:6EDA78ACo

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_6EDA78A8
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED903A0
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_6ED988B0
sub_6ED90470	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED904A0	proc near		; DATA XREF: .rdata:off_6EDA78A8o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA78A8
		add	esp, 0Ch
		jmp	sub_6ED903A0
sub_6ED904A0	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		mov	eax, [esp+10h]
		mov	dword ptr [eax], offset	off_6EDA78A8
		add	esp, 0Ch
		jmp	sub_6ED903A0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED904E0	proc near		; CODE XREF: sub_6ED59838+16p
					; sub_6ED59912+16p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_6ED90501
		mov	eax, [edx]
		mov	[esp+1Ch+var_1C], edx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED93460

loc_6ED90501:				; CODE XREF: sub_6ED904E0+11j
		add	esp, 1Ch
		retn
sub_6ED904E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED90510	proc near		; CODE XREF: sub_6ED7CE44+35p
					; sub_6ED7CF84+35p ...

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esi]
		test	ebx, ebx
		jz	short loc_6ED90535
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED7C5C0
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED988B0

loc_6ED90535:				; CODE XREF: sub_6ED90510+13j
		mov	dword ptr [esi], 0
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_6ED90510	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED90550	proc near		; CODE XREF: sub_6ED7E76A+2Ep
					; sub_6ED7E8AA+2Ep

var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9ACC4
		mov	[ebp+var_18], offset sub_6ED9069B
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		mov	[ebp+var_40], edx
		jz	loc_6ED90626
		test	byte ptr [edx+30h], 1
		jnz	loc_6ED90640

loc_6ED90599:				; CODE XREF: sub_6ED90550+F5j
					; sub_6ED90550+10Cj
		mov	eax, [ebp+var_40]
		mov	eax, [eax+58h]
		test	eax, eax
		mov	[ebp+var_44], eax
		jz	short loc_6ED905C1
		mov	[esp], eax
		mov	[ebp+var_38], 3
		call	ds:_ZN12QTextEncoderD1Ev
		mov	edx, [ebp+var_44]
		mov	[esp], edx
		call	sub_6ED988B0

loc_6ED905C1:				; CODE XREF: sub_6ED90550+54j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+34h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED90680

loc_6ED905D5:				; CODE XREF: sub_6ED90550+146j
		mov	eax, [ebp+var_40]
		mov	[ebp+var_48], eax
		mov	eax, [eax+18h]
		test	eax, eax
		jz	short loc_6ED905F2
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_Z5qFreePv

loc_6ED905F2:				; CODE XREF: sub_6ED90550+90j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED90661

loc_6ED90602:				; CODE XREF: sub_6ED90550+127j
		mov	edx, [ebp+var_40]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED9061B
		mov	[esp], eax
		mov	[ebp+var_38], 0FFFFFFFFh
		call	ds:_Z5qFreePv

loc_6ED9061B:				; CODE XREF: sub_6ED90550+B9j
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED988B0

loc_6ED90626:				; CODE XREF: sub_6ED90550+39j
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_3C]
		mov	dword ptr [edx], 0
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED90640:				; CODE XREF: sub_6ED90550+43j
		mov	eax, [edx+28h]
		test	eax, eax
		jz	loc_6ED90599
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+10h]
		mov	[ebp+var_38], 3
		call	eax
		jmp	loc_6ED90599
; ---------------------------------------------------------------------------

loc_6ED90661:				; CODE XREF: sub_6ED90550+B0j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+0Ch]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED90602
; ---------------------------------------------------------------------------
		align 10h

loc_6ED90680:				; CODE XREF: sub_6ED90550+7Fj
		mov	edx, [ebp+var_40]
		mov	eax, [edx+34h]
		mov	[ebp+var_38], 4
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	loc_6ED905D5
sub_6ED90550	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED9069B	proc near		; DATA XREF: sub_6ED90550+1Do
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-50h], edx
		jz	short loc_6ED906CB
		cmp	eax, 2
		jz	short loc_6ED906FC
		cmp	eax, 3
		jz	short loc_6ED90711
		mov	eax, [ebp-48h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED906CB:				; CODE XREF: sub_6ED9069B+Fj
		mov	eax, [ebp-50h]
		mov	edx, [ebp-48h]
		mov	[ebp-4Ch], eax
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED906EA
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0
		call	ds:_Z5qFreePv

loc_6ED906EA:				; CODE XREF: sub_6ED9069B+3Dj
		mov	eax, [ebp-4Ch]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED906FC:				; CODE XREF: sub_6ED9069B+14j
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 34h
		mov	[esp+0], eax
		call	sub_6ED90150

loc_6ED90711:				; CODE XREF: sub_6ED9069B+19j
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED91D00
		mov	edx, [ebp-50h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED9069B	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED90740	proc near		; CODE XREF: sub_6ED5B7C5+16p
					; sub_6ED5B8D5+16p ...

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A50A
		mov	[ebp+var_18], offset sub_6ED90813
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		test	edx, edx
		mov	[ebp+var_40], edx
		jz	short loc_6ED907B2
		mov	eax, [edx+10h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED907F8

loc_6ED90788:				; CODE XREF: sub_6ED90740+CEj
		mov	edx, [ebp+var_40]
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED907E0

loc_6ED90798:				; CODE XREF: sub_6ED90740+B6j
		mov	edx, [ebp+var_40]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED907C8

loc_6ED907A7:				; CODE XREF: sub_6ED90740+9Dj
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED988B0

loc_6ED907B2:				; CODE XREF: sub_6ED90740+39j
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_3C]
		mov	dword ptr [edx], 0
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED907C8:				; CODE XREF: sub_6ED90740+65j
		mov	edx, [ebp+var_40]
		mov	eax, [edx]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED907A7
; ---------------------------------------------------------------------------
		align 10h

loc_6ED907E0:				; CODE XREF: sub_6ED90740+56j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+0Ch]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED90798
; ---------------------------------------------------------------------------

loc_6ED907F8:				; CODE XREF: sub_6ED90740+46j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+10h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED90788
sub_6ED90740	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED90813	proc near		; DATA XREF: sub_6ED90740+1Do
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], eax
		jz	short loc_6ED90837
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED90837:				; CODE XREF: sub_6ED90813+Dj
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED90813	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED90860	proc near		; CODE XREF: sub_6ED5F30D+70p
					; sub_6ED937AB+7Cp ...

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A4E6
		mov	[ebp+var_18], offset sub_6ED90943
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED90928

loc_6ED908A3:				; CODE XREF: sub_6ED90860+DEj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED90910

loc_6ED908B3:				; CODE XREF: sub_6ED90860+C6j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED908F4

loc_6ED908C3:				; CODE XREF: sub_6ED90860+AAj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED908E7
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED908E7:				; CODE XREF: sub_6ED90860+70j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED908F4:				; CODE XREF: sub_6ED90860+61j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	[ebp+var_38], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED908C3
; ---------------------------------------------------------------------------
		align 10h

loc_6ED90910:				; CODE XREF: sub_6ED90860+51j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED908B3
; ---------------------------------------------------------------------------

loc_6ED90928:				; CODE XREF: sub_6ED90860+3Dj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED908A3
sub_6ED90860	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED90943	proc near		; DATA XREF: sub_6ED90860+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-40h], edx
		jz	short loc_6ED9096E
		cmp	eax, 2
		jz	short loc_6ED90983
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED9096E:				; CODE XREF: sub_6ED90943+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 4
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED90983:				; CODE XREF: sub_6ED90943+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED90943	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  98. _ZN14QXmlAttributesD0Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN14QXmlAttributesD0Ev
_ZN14QXmlAttributesD0Ev	proc near	; DATA XREF: .rdata:6EDA6D84o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_6EDA6D80
		mov	eax, [ebx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED909DD
		mov	eax, [ebx+4]
		mov	[esp+1Ch+var_18], eax
		lea	eax, [ebx+4]
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED93870

loc_6ED909DD:				; CODE XREF: _ZN14QXmlAttributesD0Ev+19j
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_6ED988B0
_ZN14QXmlAttributesD0Ev	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  99. _ZN14QXmlAttributesD1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN14QXmlAttributesD1Ev
_ZN14QXmlAttributesD1Ev	proc near	; CODE XREF: sub_6ED5D773+23Dp
					; .text:6ED5E550p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+arg_0]
		mov	dword ptr [edx], offset	off_6EDA6D80
		mov	eax, [edx+4]
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_6ED90A1C
		mov	eax, [edx+4]
		add	edx, 4
		mov	[esp+1Ch+var_1C], edx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED93870

loc_6ED90A1C:				; CODE XREF: _ZN14QXmlAttributesD1Ev+18j
		add	esp, 1Ch
		retn
_ZN14QXmlAttributesD1Ev	endp

; Exported entry 100. _ZN14QXmlDTDHandlerD0Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN14QXmlDTDHandlerD0Ev
_ZN14QXmlDTDHandlerD0Ev	proc near	; DATA XREF: .rdata:6EDA6D94o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA6D90
		add	esp, 0Ch
		jmp	sub_6ED988B0
_ZN14QXmlDTDHandlerD0Ev	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 101. _ZN14QXmlDTDHandlerD1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN14QXmlDTDHandlerD1Ev
_ZN14QXmlDTDHandlerD1Ev	proc near	; DATA XREF: .rdata:off_6EDA6D90o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA6D90
		retn
_ZN14QXmlDTDHandlerD1Ev	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED90A50	proc near		; DATA XREF: .rdata:6EDA6DCCo

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_6EDA6DC8
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED48EB0
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_6ED988B0
sub_6ED90A50	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED90A80	proc near		; DATA XREF: .rdata:off_6EDA6DC8o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA6DC8
		add	esp, 0Ch
		jmp	sub_6ED48EB0
sub_6ED90A80	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED90AA0	proc near		; DATA XREF: .rdata:6EDA6E50o
					; .rdata:6EDA6ED0o ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		add	eax, 20h
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_ZN7QStringaSERKS_
		add	esp, 0Ch
		jmp	eax
sub_6ED90AA0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED90AC0	proc near		; DATA XREF: .rdata:6EDA6ECCo

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_6EDA75C8
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED48EB0
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_6ED988B0
sub_6ED90AC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED90AF0	proc near		; DATA XREF: .rdata:off_6EDA6EC8o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA75C8
		add	esp, 0Ch
		jmp	sub_6ED48EB0
sub_6ED90AF0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 102. _ZN15QXmlDeclHandlerD0Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN15QXmlDeclHandlerD0Ev
_ZN15QXmlDeclHandlerD0Ev proc near	; DATA XREF: .rdata:6EDA6F4Co

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA6F48
		add	esp, 0Ch
		jmp	sub_6ED988B0
_ZN15QXmlDeclHandlerD0Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 103. _ZN15QXmlDeclHandlerD1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN15QXmlDeclHandlerD1Ev
_ZN15QXmlDeclHandlerD1Ev proc near	; DATA XREF: .rdata:off_6EDA6F48o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA6F48
		retn
_ZN15QXmlDeclHandlerD1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 147. _ZN16QXmlErrorHandlerD0Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlErrorHandlerD0Ev
_ZN16QXmlErrorHandlerD0Ev proc near	; DATA XREF: .rdata:6EDA6FACo

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA6FA8
		add	esp, 0Ch
		jmp	sub_6ED988B0
_ZN16QXmlErrorHandlerD0Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 148. _ZN16QXmlErrorHandlerD1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QXmlErrorHandlerD1Ev
_ZN16QXmlErrorHandlerD1Ev proc near	; DATA XREF: .rdata:off_6EDA6FA8o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA6FA8
		retn
_ZN16QXmlErrorHandlerD1Ev endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED90B70	proc near		; DATA XREF: .rdata:6EDA704Co

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A056
		mov	[ebp+var_18], offset sub_6ED90C4B
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_6EDA7048
		mov	eax, [edx+40h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED90C00

loc_6ED90BB5:				; CODE XREF: sub_6ED90B70+A6j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+3Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED90C30

loc_6ED90BC5:				; CODE XREF: sub_6ED90B70+D6j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+38h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED90C18

loc_6ED90BD5:				; CODE XREF: sub_6ED90B70+BEj
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED48EB0
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		call	sub_6ED988B0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED90C00:				; CODE XREF: sub_6ED90B70+43j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+40h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED90BB5
; ---------------------------------------------------------------------------

loc_6ED90C18:				; CODE XREF: sub_6ED90B70+63j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+38h]
		mov	[ebp+var_38], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED90BD5
; ---------------------------------------------------------------------------

loc_6ED90C30:				; CODE XREF: sub_6ED90B70+53j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+3Ch]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED90BC5
sub_6ED90B70	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED90C4B	proc near		; DATA XREF: sub_6ED90B70+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-40h], edx
		jz	short loc_6ED90C76
		cmp	eax, 2
		jz	short loc_6ED90C8B
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 3Ch
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED90C76:				; CODE XREF: sub_6ED90C4B+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 38h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED90C8B:				; CODE XREF: sub_6ED90C4B+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED48EB0
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED90C4B	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED90CB0	proc near		; DATA XREF: .rdata:off_6EDA7048o

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A060
		mov	[ebp+var_18], offset sub_6ED90D80
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_6EDA7048
		mov	eax, [edx+40h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED90D34

loc_6ED90CF5:				; CODE XREF: sub_6ED90CB0+9Aj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+3Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED90D68

loc_6ED90D05:				; CODE XREF: sub_6ED90CB0+CEj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+38h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED90D50

loc_6ED90D15:				; CODE XREF: sub_6ED90CB0+B6j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED48EB0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED90D34:				; CODE XREF: sub_6ED90CB0+43j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+40h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED90CF5
; ---------------------------------------------------------------------------
		align 10h

loc_6ED90D50:				; CODE XREF: sub_6ED90CB0+63j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+38h]
		mov	[ebp+var_38], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED90D15
; ---------------------------------------------------------------------------

loc_6ED90D68:				; CODE XREF: sub_6ED90CB0+53j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+3Ch]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED90D05
sub_6ED90CB0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED90D80	proc near		; DATA XREF: sub_6ED90CB0+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-40h], edx
		jz	short loc_6ED90DAB
		cmp	eax, 2
		jz	short loc_6ED90DC0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 3Ch
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED90DAB:				; CODE XREF: sub_6ED90D80+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 38h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED90DC0:				; CODE XREF: sub_6ED90D80+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED48EB0
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED90D80	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED90DF0	proc near		; DATA XREF: .rdata:6EDA70CCo

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_6EDA75C8
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED48EB0
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_6ED988B0
sub_6ED90DF0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED90E20	proc near		; DATA XREF: .rdata:off_6EDA70C8o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA75C8
		add	esp, 0Ch
		jmp	sub_6ED48EB0
sub_6ED90E20	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 259. _ZN18QXmlContentHandlerD0Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlContentHandlerD0Ev
_ZN18QXmlContentHandlerD0Ev proc near	; DATA XREF: .rdata:6EDA71CCo

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA71C8
		add	esp, 0Ch
		jmp	sub_6ED988B0
_ZN18QXmlContentHandlerD0Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 260. _ZN18QXmlContentHandlerD1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlContentHandlerD1Ev
_ZN18QXmlContentHandlerD1Ev proc near	; DATA XREF: .rdata:off_6EDA71C8o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA71C8
		retn
_ZN18QXmlContentHandlerD1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 288. _ZN18QXmlDefaultHandlerD0Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlDefaultHandlerD0Ev
_ZN18QXmlDefaultHandlerD0Ev proc near	; CODE XREF: _ZThn12_N18QXmlDefaultHandlerD0Ev+5j
					; _ZThn16_N18QXmlDefaultHandlerD0Ev+5j	...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax+14h], offset off_6EDA6F48
		mov	dword ptr [eax+10h], offset off_6EDA7368
		mov	dword ptr [eax+0Ch], offset off_6EDA7348
		mov	dword ptr [eax+8], offset off_6EDA6D90
		mov	dword ptr [eax+4], offset off_6EDA6FA8
		mov	dword ptr [eax], offset	off_6EDA71C8
		add	esp, 0Ch
		jmp	sub_6ED988B0
_ZN18QXmlDefaultHandlerD0Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 289. _ZN18QXmlDefaultHandlerD1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlDefaultHandlerD1Ev
_ZN18QXmlDefaultHandlerD1Ev proc near	; CODE XREF: _ZThn12_N18QXmlDefaultHandlerD1Ev+5j
					; _ZThn16_N18QXmlDefaultHandlerD1Ev+5j	...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax+14h], offset off_6EDA6F48
		mov	dword ptr [eax+10h], offset off_6EDA7368
		mov	dword ptr [eax+0Ch], offset off_6EDA7348
		mov	dword ptr [eax+8], offset off_6EDA6D90
		mov	dword ptr [eax+4], offset off_6EDA6FA8
		mov	dword ptr [eax], offset	off_6EDA71C8
		retn
_ZN18QXmlDefaultHandlerD1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 290. _ZN18QXmlEntityResolverD0Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlEntityResolverD0Ev
_ZN18QXmlEntityResolverD0Ev proc near	; DATA XREF: .rdata:6EDA734Co

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7348
		add	esp, 0Ch
		jmp	sub_6ED988B0
_ZN18QXmlEntityResolverD0Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 291. _ZN18QXmlEntityResolverD1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlEntityResolverD1Ev
_ZN18QXmlEntityResolverD1Ev proc near	; DATA XREF: .rdata:off_6EDA7348o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7348
		retn
_ZN18QXmlEntityResolverD1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 292. _ZN18QXmlLexicalHandlerD0Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlLexicalHandlerD0Ev
_ZN18QXmlLexicalHandlerD0Ev proc near	; DATA XREF: .rdata:6EDA736Co

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7368
		add	esp, 0Ch
		jmp	sub_6ED988B0
_ZN18QXmlLexicalHandlerD0Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 293. _ZN18QXmlLexicalHandlerD1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN18QXmlLexicalHandlerD1Ev
_ZN18QXmlLexicalHandlerD1Ev proc near	; DATA XREF: .rdata:off_6EDA7368o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7368
		retn
_ZN18QXmlLexicalHandlerD1Ev endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED90F40	proc near		; DATA XREF: .rdata:6EDA742Co

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A046
		mov	[ebp+var_18], offset sub_6ED90FF0
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_6EDA7428
		mov	eax, [edx+3Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED90FC0

loc_6ED90F85:				; CODE XREF: sub_6ED90F40+96j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+38h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED90FD8

loc_6ED90F95:				; CODE XREF: sub_6ED90F40+AEj
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED48EB0
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		call	sub_6ED988B0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED90FC0:				; CODE XREF: sub_6ED90F40+43j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+3Ch]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED90F85
; ---------------------------------------------------------------------------

loc_6ED90FD8:				; CODE XREF: sub_6ED90F40+53j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+38h]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED90F95
sub_6ED90F40	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED90FF0	proc near		; DATA XREF: sub_6ED90F40+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-40h], eax
		jz	short loc_6ED91014
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 38h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED91014:				; CODE XREF: sub_6ED90FF0+Dj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED48EB0
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED90FF0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED91040	proc near		; DATA XREF: .rdata:off_6EDA7428o

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A04E
		mov	[ebp+var_18], offset sub_6ED910E8
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_6EDA7428
		mov	eax, [edx+3Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED910B4

loc_6ED91085:				; CODE XREF: sub_6ED91040+8Aj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+38h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED910D0

loc_6ED91095:				; CODE XREF: sub_6ED91040+A6j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED48EB0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED910B4:				; CODE XREF: sub_6ED91040+43j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+3Ch]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED91085
; ---------------------------------------------------------------------------
		align 10h

loc_6ED910D0:				; CODE XREF: sub_6ED91040+53j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+38h]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED91095
sub_6ED91040	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED910E8	proc near		; DATA XREF: sub_6ED91040+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-40h], eax
		jz	short loc_6ED9110C
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 38h
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED9110C:				; CODE XREF: sub_6ED910E8+Dj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED48EB0
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED910E8	endp


; =============== S U B	R O U T	I N E =======================================


sub_6ED91130	proc near		; CODE XREF: sub_6ED79C60+1F3p
					; .text:6ED7B603p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED91155
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_6ED91155
		mov	eax, [edx]
		mov	[esp+1Ch+var_1C], edx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED946D0

loc_6ED91155:				; CODE XREF: sub_6ED91130+Bj
					; sub_6ED91130+15j
		add	esp, 1Ch
		retn
sub_6ED91130	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED91160	proc near		; CODE XREF: sub_6ED83560+435Ep
					; sub_6ED83560+4426p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [ebx+4]
		mov	ecx, [ebx+8]
		lea	edx, [eax+1]
		cmp	edx, ecx
		jl	short loc_6ED911B4
		add	eax, 2
		add	ecx, ecx
		cmp	eax, ecx
		jl	short loc_6ED911B0

loc_6ED9117E:				; CODE XREF: sub_6ED91160+52j
		mov	[ebx+8], eax
		shl	eax, 6
		mov	[esp+1Ch+var_18], eax
		mov	eax, [ebx]
		mov	[esp+1Ch+var_1C], eax
		call	ds:_Z8qReallocPvj
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED911C3

loc_6ED91199:				; CODE XREF: sub_6ED91160+6Bj
		mov	edx, [ebx+4]
		add	edx, 1
		mov	[ebx+4], edx
		shl	edx, 6
		add	esp, 18h
		add	eax, edx
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED911B0:				; CODE XREF: sub_6ED91160+1Cj
		mov	eax, ecx
		jmp	short loc_6ED9117E
; ---------------------------------------------------------------------------

loc_6ED911B4:				; CODE XREF: sub_6ED91160+13j
		mov	eax, [ebx]
		mov	[ebx+4], edx
		shl	edx, 6
		add	esp, 18h
		pop	ebx
		add	eax, edx
		retn
; ---------------------------------------------------------------------------

loc_6ED911C3:				; CODE XREF: sub_6ED91160+37j
		call	ds:_Z9qBadAllocv
		mov	eax, [ebx]
		jmp	short loc_6ED91199
sub_6ED91160	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED911D0	proc near		; CODE XREF: sub_6ED83560+4689p
					; sub_6ED83560+48F4p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [ebx+4]
		mov	ecx, [ebx+8]
		lea	edx, [eax+1]
		cmp	edx, ecx
		jl	short loc_6ED91224
		add	eax, 2
		add	ecx, ecx
		cmp	eax, ecx
		jl	short loc_6ED91220

loc_6ED911EE:				; CODE XREF: sub_6ED911D0+52j
		mov	[ebx+8], eax
		lea	eax, [eax+eax*2]
		shl	eax, 3
		mov	[esp+1Ch+var_18], eax
		mov	eax, [ebx]
		mov	[esp+1Ch+var_1C], eax
		call	ds:_Z8qReallocPvj
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED91234

loc_6ED9120C:				; CODE XREF: sub_6ED911D0+6Cj
		mov	edx, [ebx+4]
		add	edx, 1
		mov	[ebx+4], edx
		lea	edx, [edx+edx*2]
		add	esp, 18h
		lea	eax, [eax+edx*8]
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_6ED91220:				; CODE XREF: sub_6ED911D0+1Cj
		mov	eax, ecx
		jmp	short loc_6ED911EE
; ---------------------------------------------------------------------------

loc_6ED91224:				; CODE XREF: sub_6ED911D0+13j
		mov	eax, [ebx]
		mov	[ebx+4], edx
		lea	edx, [edx+edx*2]
		add	esp, 18h
		pop	ebx
		lea	eax, [eax+edx*8]
		retn
; ---------------------------------------------------------------------------

loc_6ED91234:				; CODE XREF: sub_6ED911D0+3Aj
		call	ds:_Z9qBadAllocv
		mov	eax, [ebx]
		jmp	short loc_6ED9120C
sub_6ED911D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED91240	proc near		; CODE XREF: sub_6ED82180+494p
					; sub_6ED82AD0+1D1p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [esp+1Ch+arg_4]
		mov	edx, [ebx+8]
		add	eax, [ebx+4]
		cmp	eax, edx
		jl	short loc_6ED9127A
		add	eax, 1
		add	edx, edx
		cmp	eax, edx
		jl	short loc_6ED91280

loc_6ED9125F:				; CODE XREF: sub_6ED91240+42j
		mov	[ebx+8], eax
		shl	eax, 2
		mov	[esp+1Ch+var_18], eax
		mov	eax, [ebx]
		mov	[esp+1Ch+var_1C], eax
		call	ds:_Z8qReallocPvj
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_6ED91284

loc_6ED9127A:				; CODE XREF: sub_6ED91240+14j
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED91280:				; CODE XREF: sub_6ED91240+1Dj
		mov	eax, edx
		jmp	short loc_6ED9125F
; ---------------------------------------------------------------------------

loc_6ED91284:				; CODE XREF: sub_6ED91240+38j
		mov	eax, ds:_Z9qBadAllocv
		add	esp, 18h
		pop	ebx
		jmp	eax
sub_6ED91240	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED91290	proc near		; DATA XREF: .rdata:6EDA74ACo

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_6EDA75C8
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED48EB0
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_6ED988B0
sub_6ED91290	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED912C0	proc near		; DATA XREF: .rdata:off_6EDA74A8o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA75C8
		add	esp, 0Ch
		jmp	sub_6ED48EB0
sub_6ED912C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED912E0	proc near		; DATA XREF: .rdata:6EDA75ACo

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA6D68
		add	esp, 0Ch
		jmp	sub_6ED988B0
sub_6ED912E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED91300	proc near		; DATA XREF: .rdata:off_6EDA75A8o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA6D68
		retn
sub_6ED91300	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED91310	proc near		; CODE XREF: sub_6ED6CA30+C47p
					; sub_6ED6DF85+1E6p ...

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A4FC
		mov	[ebp+var_18], offset sub_6ED913C0
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED913A8

loc_6ED9134F:				; CODE XREF: sub_6ED91310+AEj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED91390

loc_6ED9135F:				; CODE XREF: sub_6ED91310+96j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED91383
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED91383:				; CODE XREF: sub_6ED91310+5Cj
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED91390:				; CODE XREF: sub_6ED91310+4Dj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED9135F
; ---------------------------------------------------------------------------

loc_6ED913A8:				; CODE XREF: sub_6ED91310+3Dj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED9134F
sub_6ED91310	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED913C0	proc near		; DATA XREF: sub_6ED91310+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-40h], eax
		jz	short loc_6ED913E4
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 4
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED913E4:				; CODE XREF: sub_6ED913C0+Dj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED913C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED91410	proc near		; CODE XREF: sub_6ED6CA30+F08p
					; sub_6ED6DF85+135p

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A4F6
		mov	[ebp+var_18], offset sub_6ED91498
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED91480

loc_6ED9144F:				; CODE XREF: sub_6ED91410+86j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED91473
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED91473:				; CODE XREF: sub_6ED91410+4Cj
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED91480:				; CODE XREF: sub_6ED91410+3Dj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED9144F
sub_6ED91410	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED91498	proc near		; DATA XREF: sub_6ED91410+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	[esp+0], edx
		call	sub_6ED94560
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED91498	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED914D0	proc near		; CODE XREF: sub_6ED6138C+9Dp
					; sub_6ED6138C+B1p ...

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A4F0
		mov	[ebp+var_18], offset sub_6ED91558
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED91540

loc_6ED9150F:				; CODE XREF: sub_6ED914D0+86j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED91533
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED91533:				; CODE XREF: sub_6ED914D0+4Cj
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED91540:				; CODE XREF: sub_6ED914D0+3Dj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED9150F
sub_6ED914D0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED91558	proc near		; DATA XREF: sub_6ED914D0+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	[esp+0], edx
		call	sub_6ED94560
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED91558	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED91590	proc near		; CODE XREF: sub_6ED83560+1D70p
					; sub_6ED83560+2AEAp

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		xor	edi, edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	ebx, [esp+3Ch+arg_0]
		mov	ebp, [esp+3Ch+arg_4]
		lea	eax, [ebx+198h]
		mov	[esp+3Ch+var_20], eax
		mov	eax, [ebx+4Ch]
		cmp	eax, 0FFFFFFFFh
		jz	loc_6ED91668

loc_6ED915B7:				; CODE XREF: sub_6ED91590+D2j
		cmp	byte ptr [ebx+78h], 0
		jnz	loc_6ED91785
		lea	edx, ds:0[eax*4]
		sub	eax, 1
		add	edx, [ebx+48h]
		mov	[ebx+4Ch], eax
		mov	esi, [edx]

loc_6ED915D3:				; CODE XREF: sub_6ED91590+F0j
					; sub_6ED91590+15Bj
		test	si, si
		jz	loc_6ED91785
		lea	eax, [esi-9]
		cmp	ax, 73h		; switch 116 cases
		ja	short loc_6ED9160C ; jumptable 6ED915E8	default	case
		movzx	eax, ax
		jmp	ds:off_6EDA1F6C[eax*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_6ED915F0:				; CODE XREF: sub_6ED91590+58j
					; DATA XREF: .rdata:off_6EDA1F6Co
		test	ebp, ebp	; jumptable 6ED915E8 case 49
		jz	loc_6ED917D0
		mov	eax, [ebp+0]
		test	eax, eax
		lea	esi, [esi+0]
		jnz	loc_6ED917D0
		lea	eax, [edi+2]
		mov	[ebp+0], eax

loc_6ED9160C:				; CODE XREF: sub_6ED91590+53j
					; sub_6ED91590+58j
					; DATA XREF: ...
		mov	eax, [ebx+198h]	; jumptable 6ED915E8 default case
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED916F4
		mov	edx, [eax+8]

loc_6ED91620:				; CODE XREF: sub_6ED91590+170j
		add	edx, 1
		mov	[esp+3Ch+var_3C], edx
		call	ds:_ZN7QString4growEi
		mov	[esp+3Ch+var_38], eax
		mov	eax, [esp+3Ch+var_20]
		mov	[esp+3Ch+var_3C], eax
		call	ds:_ZN7QString7reallocEi
		mov	eax, [ebx+198h]
		mov	edx, [eax+8]

loc_6ED91646:				; CODE XREF: sub_6ED91590+16Aj
		mov	ecx, [eax+0Ch]
		add	edi, 1
		mov	[ecx+edx*2], si
		add	edx, 1
		mov	[eax+8], edx
		mov	eax, [ebx+4Ch]
		mov	word ptr [ecx+edx*2], 0
		cmp	eax, 0FFFFFFFFh
		jnz	loc_6ED915B7

loc_6ED91668:				; CODE XREF: sub_6ED91590+21j
		mov	edx, [ebx+40h]
		mov	eax, [ebx+44h]
		cmp	eax, [edx+8]
		jge	short loc_6ED916E0
		mov	edx, [edx+0Ch]
		lea	ecx, [eax+1]
		mov	[ebx+44h], ecx
		movzx	esi, word ptr [edx+eax*2]
		jmp	loc_6ED915D3
; ---------------------------------------------------------------------------

loc_6ED91685:				; CODE XREF: sub_6ED91590+58j
					; DATA XREF: .rdata:off_6EDA1F6Co
		mov	eax, [ebx+4Ch]	; jumptable 6ED915E8 cases 0,1,4,23-26,28-35,38,50-54,82,84,85,115
		movzx	esi, si
		mov	ecx, [ebx+50h]
		lea	edx, [eax+1]
		cmp	edx, ecx
		jl	short loc_6ED91705
		add	eax, 2
		add	ecx, ecx
		cmp	eax, ecx
		jl	short loc_6ED916F0

loc_6ED9169E:				; CODE XREF: sub_6ED91590+162j
		mov	[ebx+50h], eax
		shl	eax, 2
		mov	[esp+3Ch+var_38], eax
		mov	eax, [ebx+48h]
		mov	[esp+3Ch+var_3C], eax
		call	ds:_Z8qReallocPvj
		test	eax, eax
		mov	[ebx+48h], eax
		jz	short loc_6ED91710

loc_6ED916BB:				; CODE XREF: sub_6ED91590+189j
		mov	edx, [ebx+4Ch]
		add	edx, 1

loc_6ED916C1:				; CODE XREF: sub_6ED91590+178j
		test	ebp, ebp
		mov	[ebx+4Ch], edx
		mov	[eax+edx*4], esi
		jz	short loc_6ED916D3
		lea	eax, [edi+1]
		cmp	[ebp+0], eax
		jz	short loc_6ED91720

loc_6ED916D3:				; CODE XREF: sub_6ED91590+139j
					; sub_6ED91590+232j ...
		add	esp, 2Ch
		mov	eax, edi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED916E0:				; CODE XREF: sub_6ED91590+E1j
		mov	[esp+3Ch+var_3C], ebx
		call	sub_6ED81C20
		movzx	esi, ax
		jmp	loc_6ED915D3
; ---------------------------------------------------------------------------

loc_6ED916F0:				; CODE XREF: sub_6ED91590+10Cj
		mov	eax, ecx
		jmp	short loc_6ED9169E
; ---------------------------------------------------------------------------

loc_6ED916F4:				; CODE XREF: sub_6ED91590+87j
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jl	loc_6ED91646
		jmp	loc_6ED91620
; ---------------------------------------------------------------------------

loc_6ED91705:				; CODE XREF: sub_6ED91590+103j
		mov	eax, [ebx+48h]
		jmp	short loc_6ED916C1
; ---------------------------------------------------------------------------
		align 10h

loc_6ED91710:				; CODE XREF: sub_6ED91590+129j
		call	ds:_Z9qBadAllocv
		mov	eax, [ebx+48h]
		jmp	short loc_6ED916BB
; ---------------------------------------------------------------------------
		align 10h

loc_6ED91720:				; CODE XREF: sub_6ED91590+141j
		mov	dword ptr [ebp+0], 0
		mov	eax, [ebx+4Ch]
		mov	ecx, [ebx+50h]
		lea	edx, [eax+1]
		cmp	edx, ecx
		jl	short loc_6ED91780
		add	eax, 2
		add	ecx, ecx
		cmp	eax, ecx
		jl	loc_6ED917C7

loc_6ED91741:				; CODE XREF: sub_6ED91590+239j
		mov	[ebx+50h], eax
		shl	eax, 2
		mov	[esp+3Ch+var_38], eax
		mov	eax, [ebx+48h]
		mov	[esp+3Ch+var_3C], eax
		call	ds:_Z8qReallocPvj
		test	eax, eax
		mov	[ebx+48h], eax
		jz	loc_6ED917E5

loc_6ED91762:				; CODE XREF: sub_6ED91590+260j
		mov	edx, [ebx+4Ch]
		add	edx, 1

loc_6ED91768:				; CODE XREF: sub_6ED91590+1F3j
		sub	edi, 1
		mov	[ebx+4Ch], edx
		mov	dword ptr [eax+edx*4], 3Ah
		add	esp, 2Ch
		mov	eax, edi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED91780:				; CODE XREF: sub_6ED91590+1A2j
		mov	eax, [ebx+48h]
		jmp	short loc_6ED91768
; ---------------------------------------------------------------------------

loc_6ED91785:				; CODE XREF: sub_6ED91590+2Bj
					; sub_6ED91590+46j
		test	ebp, ebp
		jz	short loc_6ED91790
		mov	dword ptr [ebp+0], 0

loc_6ED91790:				; CODE XREF: sub_6ED91590+1F7j
		mov	eax, [ebx+198h]
		mov	esi, [eax+8]
		mov	eax, [esp+3Ch+var_20]
		mov	[esp+3Ch+var_3C], ebx
		sub	esi, edi
		xor	edi, edi
		mov	[esp+3Ch+var_38], eax
		mov	[esp+3Ch+var_34], esi
		call	sub_6ED72C90
		mov	eax, [esp+3Ch+var_20]
		mov	[esp+3Ch+var_38], esi
		mov	[esp+3Ch+var_3C], eax
		call	ds:_ZN7QString6resizeEi
		jmp	loc_6ED916D3
; ---------------------------------------------------------------------------

loc_6ED917C7:				; CODE XREF: sub_6ED91590+1ABj
		mov	eax, ecx
		jmp	loc_6ED91741
; ---------------------------------------------------------------------------
		align 10h

loc_6ED917D0:				; CODE XREF: sub_6ED91590+62j
					; sub_6ED91590+70j
		mov	[esp+3Ch+var_38], 3Ah
		mov	[esp+3Ch+var_3C], ebx
		call	sub_6ED91B80
		jmp	loc_6ED916D3
; ---------------------------------------------------------------------------

loc_6ED917E5:				; CODE XREF: sub_6ED91590+1CCj
		call	ds:_Z9qBadAllocv
		mov	eax, [ebx+48h]
		xchg	ax, ax
		jmp	loc_6ED91762
sub_6ED91590	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED91800	proc near		; CODE XREF: sub_6ED83560+51CAp
					; sub_6ED83560+528Cp ...

var_4D		= byte ptr -4Dh
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 74h
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9ABD2
		mov	[ebp+var_28], offset sub_6ED919FE
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		movzx	eax, byte ptr [edx+4]
		test	al, 10h
		jnz	loc_6ED91930
		mov	ebx, [ebp+arg_4]
		or	eax, 10h
		mov	[ebx+4], al
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+60h]
		mov	ebx, eax
		mov	eax, [eax+64h]
		lea	edx, [ecx+1]
		cmp	edx, eax
		jge	loc_6ED918E4
		mov	eax, [ebx+5Ch]

loc_6ED91861:				; CODE XREF: sub_6ED91800+125j
					; sub_6ED91800+1F9j
		mov	ecx, [ebp+arg_0]
		mov	ebx, [ebp+arg_4]
		mov	[ecx+60h], edx
		mov	[eax+edx*4], ebx
		mov	eax, [ecx+4Ch]
		mov	ebx, ecx
		mov	ecx, [ecx+50h]
		lea	edx, [eax+1]
		cmp	edx, ecx
		jl	loc_6ED919B0
		add	eax, 2
		add	ecx, ecx
		cmp	eax, ecx
		jge	short loc_6ED9188B
		mov	eax, ecx

loc_6ED9188B:				; CODE XREF: sub_6ED91800+87j
		mov	edx, [ebp+arg_0]
		mov	[edx+50h], eax
		shl	eax, 2
		mov	[esp+4], eax
		mov	eax, [edx+48h]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_Z8qReallocPvj
		mov	ecx, [ebp+arg_0]
		test	eax, eax
		mov	[ecx+48h], eax
		jz	loc_6ED919C0
		mov	edx, [ecx+4Ch]
		add	edx, 1

loc_6ED918BF:				; CODE XREF: sub_6ED91800+1B3j
					; sub_6ED91800+1D9j
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_4D], 1
		mov	[ecx+4Ch], edx
		mov	dword ptr [eax+edx*4], 2D0000h

loc_6ED918D0:				; CODE XREF: sub_6ED91800+18Ej
					; sub_6ED91800+1ABj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_4D]
		mov	ebx, [ebp+var_4]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED918E4:				; CODE XREF: sub_6ED91800+58j
		add	ecx, 2
		add	eax, eax
		cmp	ecx, eax
		jl	loc_6ED919B8

loc_6ED918F1:				; CODE XREF: sub_6ED91800+1BAj
		mov	eax, [ebp+arg_0]
		mov	[eax+64h], ecx
		shl	ecx, 2
		mov	[esp+4], ecx
		mov	eax, [eax+5Ch]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_Z8qReallocPvj
		mov	ecx, [ebp+arg_0]
		test	eax, eax
		mov	[ecx+5Ch], eax
		jz	loc_6ED919E0
		mov	edx, [ecx+60h]
		add	edx, 1
		jmp	loc_6ED91861
; ---------------------------------------------------------------------------
		align 10h

loc_6ED91930:				; CODE XREF: sub_6ED91800+39j
		lea	ecx, [ebp+var_C]
		mov	dword ptr [esp+10h], 0
		lea	ebx, [ebp+var_C]
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], offset aRecursiveEnt_0 ; "Recursive entity detected."
		mov	dword ptr [esp+4], offset aQxmlstream ;	"QXmlStream"
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN16QCoreApplication9translateEPKcS1_S1_NS_8EncodingE
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 1
		sub	esp, 4
		mov	[esp+4], ebx
		mov	[esp], eax
		call	sub_6ED71AE0
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		mov	[ebp+var_4D], 0
		jnz	loc_6ED918D0
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_4D], 0
		jmp	loc_6ED918D0
; ---------------------------------------------------------------------------

loc_6ED919B0:				; CODE XREF: sub_6ED91800+7Aj
		mov	eax, [ebx+48h]
		jmp	loc_6ED918BF
; ---------------------------------------------------------------------------

loc_6ED919B8:				; CODE XREF: sub_6ED91800+EBj
		mov	ecx, eax
		jmp	loc_6ED918F1
; ---------------------------------------------------------------------------
		align 10h

loc_6ED919C0:				; CODE XREF: sub_6ED91800+B3j
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_Z9qBadAllocv
		mov	ebx, [ebp+arg_0]
		mov	edx, [ebx+4Ch]
		mov	eax, [ebx+48h]
		add	edx, 1
		jmp	loc_6ED918BF
; ---------------------------------------------------------------------------
		align 10h

loc_6ED919E0:				; CODE XREF: sub_6ED91800+119j
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_Z9qBadAllocv
		mov	ebx, [ebp+arg_0]
		mov	edx, [ebx+60h]
		mov	eax, [ebx+5Ch]
		add	edx, 1
		jmp	loc_6ED91861
sub_6ED91800	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED919FE	proc near		; DATA XREF: sub_6ED91800+21o
		add	ebp, 8
		mov	edx, [ebp-44h]
		lea	eax, [ebp-0Ch]
		mov	[ebp-54h], edx
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
sub_6ED919FE	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED91A30	proc near		; CODE XREF: sub_6ED83560+377Dp
					; sub_6ED83560+38C5p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [ebx+4Ch]
		cmp	eax, 0FFFFFFFFh
		jz	short loc_6ED91A60
		mov	edx, [ebx+48h]
		mov	eax, [edx+eax*4]

loc_6ED91A46:				; CODE XREF: sub_6ED91A30+C8j
		cmp	eax, 0Ah
		jz	short loc_6ED91A77

loc_6ED91A4B:				; CODE XREF: sub_6ED91A30+45j
		test	eax, eax
		jz	short loc_6ED91A90
		mov	eax, 0Ah

loc_6ED91A54:				; CODE XREF: sub_6ED91A30+D4j
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED91A60:				; CODE XREF: sub_6ED91A30+Ej
		mov	edx, [ebx+40h]
		mov	eax, [ebx+44h]
		cmp	eax, [edx+8]
		jge	short loc_6ED91AE5
		mov	edx, [edx+0Ch]
		movzx	eax, word ptr [edx+eax*2]
		cmp	eax, 0Ah
		jnz	short loc_6ED91A4B

loc_6ED91A77:				; CODE XREF: sub_6ED91A30+19j
		mov	edx, [ebx+4Ch]
		cmp	edx, 0FFFFFFFFh
		jz	loc_6ED91B00
		sub	edx, 1
		mov	[ebx+4Ch], edx
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED91A90:				; CODE XREF: sub_6ED91A30+1Dj
					; sub_6ED91A30+C2j
		mov	eax, [ebx+4Ch]
		mov	ecx, [ebx+50h]
		lea	edx, [eax+1]
		cmp	edx, ecx
		jl	short loc_6ED91AE0
		add	eax, 2
		add	ecx, ecx
		cmp	eax, ecx
		jge	short loc_6ED91AA8
		mov	eax, ecx

loc_6ED91AA8:				; CODE XREF: sub_6ED91A30+74j
		mov	[ebx+50h], eax
		shl	eax, 2
		mov	[esp+1Ch+var_18], eax
		mov	eax, [ebx+48h]
		mov	[esp+1Ch+var_1C], eax
		call	ds:_Z8qReallocPvj
		test	eax, eax
		mov	[ebx+48h], eax
		jz	short loc_6ED91B10

loc_6ED91AC5:				; CODE XREF: sub_6ED91A30+E9j
		mov	edx, [ebx+4Ch]
		add	edx, 1

loc_6ED91ACB:				; CODE XREF: sub_6ED91A30+B3j
		mov	[ebx+4Ch], edx
		mov	dword ptr [eax+edx*4], 0Dh
		xor	eax, eax
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED91AE0:				; CODE XREF: sub_6ED91A30+6Bj
		mov	eax, [ebx+48h]
		jmp	short loc_6ED91ACB
; ---------------------------------------------------------------------------

loc_6ED91AE5:				; CODE XREF: sub_6ED91A30+39j
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED81C20
		movzx	eax, ax
		test	eax, eax
		jz	short loc_6ED91A90
		sub	dword ptr [ebx+44h], 1
		jmp	loc_6ED91A46
; ---------------------------------------------------------------------------
		align 10h

loc_6ED91B00:				; CODE XREF: sub_6ED91A30+4Dj
		add	dword ptr [ebx+44h], 1
		jmp	loc_6ED91A54
; ---------------------------------------------------------------------------
		align 10h

loc_6ED91B10:				; CODE XREF: sub_6ED91A30+93j
		call	ds:_Z9qBadAllocv
		mov	eax, [ebx+48h]
		jmp	short loc_6ED91AC5
sub_6ED91A30	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED91B20	proc near		; CODE XREF: sub_6ED83560+1241p
					; sub_6ED83560+1F04p ...

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	edx, [esp+1Ch+arg_0]
		mov	ecx, [edx+4Ch]
		cmp	ecx, 0FFFFFFFFh
		jz	short loc_6ED91B50
		xor	eax, eax
		cmp	byte ptr [edx+78h], 0
		jnz	short loc_6ED91B4A
		lea	eax, ds:0[ecx*4]
		sub	ecx, 1
		add	eax, [edx+48h]
		mov	[edx+4Ch], ecx
		mov	eax, [eax]

loc_6ED91B4A:				; CODE XREF: sub_6ED91B20+16j
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED91B50:				; CODE XREF: sub_6ED91B20+Ej
		mov	ecx, [edx+40h]
		mov	eax, [edx+44h]
		cmp	eax, [ecx+8]
		jge	short loc_6ED91B70
		lea	ebx, [eax+1]
		mov	[edx+44h], ebx
		mov	edx, [ecx+0Ch]
		movzx	eax, word ptr [edx+eax*2]
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED91B70:				; CODE XREF: sub_6ED91B20+39j
		mov	[esp+1Ch+var_1C], edx
		call	sub_6ED81C20
		add	esp, 18h
		pop	ebx
		movzx	eax, ax
		retn
sub_6ED91B20	endp


; =============== S U B	R O U T	I N E =======================================


sub_6ED91B80	proc near		; CODE XREF: sub_6ED83010+509p
					; sub_6ED83560+128Ap ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [ebx+4Ch]
		mov	ecx, [ebx+50h]
		lea	edx, [eax+1]
		cmp	edx, ecx
		jl	short loc_6ED91BD4
		add	eax, 2
		add	ecx, ecx
		cmp	eax, ecx
		jl	short loc_6ED91BD0

loc_6ED91B9E:				; CODE XREF: sub_6ED91B80+52j
		mov	[ebx+50h], eax
		shl	eax, 2
		mov	[esp+1Ch+var_18], eax
		mov	eax, [ebx+48h]
		mov	[esp+1Ch+var_1C], eax
		call	ds:_Z8qReallocPvj
		test	eax, eax
		mov	[ebx+48h], eax
		jz	short loc_6ED91BE6

loc_6ED91BBB:				; CODE XREF: sub_6ED91B80+6Fj
		mov	edx, [ebx+4Ch]
		add	edx, 1
		mov	[ebx+4Ch], edx
		mov	ecx, [esp+1Ch+arg_4]
		mov	[eax+edx*4], ecx
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_6ED91BD0:				; CODE XREF: sub_6ED91B80+1Cj
		mov	eax, ecx
		jmp	short loc_6ED91B9E
; ---------------------------------------------------------------------------

loc_6ED91BD4:				; CODE XREF: sub_6ED91B80+13j
		mov	[ebx+4Ch], edx
		mov	eax, [ebx+48h]
		mov	ecx, [esp+1Ch+arg_4]
		mov	[eax+edx*4], ecx
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_6ED91BE6:				; CODE XREF: sub_6ED91B80+39j
		call	ds:_Z9qBadAllocv
		mov	eax, [ebx+48h]
		jmp	short loc_6ED91BBB
sub_6ED91B80	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED91C00	proc near		; DATA XREF: .rdata:6EDA75CCo

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_6EDA75C8
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED48EB0
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_6ED988B0
sub_6ED91C00	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED91C30	proc near		; DATA XREF: .rdata:off_6EDA75C8o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA75C8
		add	esp, 0Ch
		jmp	sub_6ED48EB0
sub_6ED91C30	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED91C50	proc near		; CODE XREF: sub_6ED83560+1577p
					; sub_6ED83560+1B48p ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 3Ch
		mov	[esp+3Ch+var_10], ebx
		mov	ebx, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_C], esi
		mov	eax, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_8], edi
		mov	esi, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_4], ebp
		mov	ecx, [ebx+0Ch]
		lea	edx, [ebx+0Ch]
		mov	edi, [ebx+10h]
		mov	ebp, [eax+8]
		cmp	edi, [ecx+8]
		jz	short loc_6ED91C9D
		mov	[esp+3Ch+var_3C], edx
		mov	[esp+3Ch+var_20], eax
		mov	[esp+3Ch+var_24], edx
		mov	[esp+3Ch+var_38], edi
		call	ds:_ZN7QString6resizeEi
		mov	edx, [esp+3Ch+var_24]
		mov	eax, [esp+3Ch+var_20]

loc_6ED91C9D:				; CODE XREF: sub_6ED91C50+2Ej
		mov	ecx, [eax]
		test	ecx, ecx
		jz	short loc_6ED91CF0
		mov	ecx, [ecx]
		mov	eax, [eax+4]
		add	eax, eax
		add	eax, [ecx+0Ch]

loc_6ED91CAD:				; CODE XREF: sub_6ED91C50+A8j
		mov	[esp+3Ch+var_30], ebp
		mov	[esp+3Ch+var_38], edi
		mov	[esp+3Ch+var_3C], edx
		mov	[esp+3Ch+var_24], edx
		mov	[esp+3Ch+var_34], eax
		call	ds:_ZN7QString6insertEiPK5QChari
		mov	edx, [esp+3Ch+var_24]
		mov	eax, esi
		add	[ebx+10h], ebp
		mov	[esi+4], edi
		mov	[esi], edx
		mov	[esi+8], ebp
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED91CF0:				; CODE XREF: sub_6ED91C50+51j
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	eax, [eax+0Ch]
		jmp	short loc_6ED91CAD
sub_6ED91C50	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED91D00	proc near		; CODE XREF: sub_6ED75C36+2Ep
					; .text:6ED76184p ...

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9AABC
		mov	[ebp+var_18], offset sub_6ED91D98
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+18h]
		test	eax, eax
		jz	short loc_6ED91D49
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_Z5qFreePv

loc_6ED91D49:				; CODE XREF: sub_6ED91D00+37j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED91D80

loc_6ED91D59:				; CODE XREF: sub_6ED91D00+96j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED91D72
		mov	[esp], eax
		mov	[ebp+var_38], 0FFFFFFFFh
		call	ds:_Z5qFreePv

loc_6ED91D72:				; CODE XREF: sub_6ED91D00+60j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED91D80:				; CODE XREF: sub_6ED91D00+57j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED91D59
sub_6ED91D00	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED91D98	proc near		; DATA XREF: sub_6ED91D00+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], eax
		jz	short loc_6ED91DBC
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED91DBC:				; CODE XREF: sub_6ED91D98+Dj
		mov	eax, [ebp-44h]
		mov	edx, [ebp+8]
		mov	[ebp-40h], eax
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED91DDB
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0
		call	ds:_Z5qFreePv

loc_6ED91DDB:				; CODE XREF: sub_6ED91D98+31j
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED91D98	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED91DF0	proc near		; DATA XREF: .rdata:6EDA766Co

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_6EDA7668
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED48EB0
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_6ED988B0
sub_6ED91DF0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED91E20	proc near		; DATA XREF: .rdata:off_6EDA7668o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7668
		add	esp, 0Ch
		jmp	sub_6ED48EB0
sub_6ED91E20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED91E40	proc near		; DATA XREF: .rdata:6EDA76ECo

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_6EDA76E8
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED48EB0
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_6ED988B0
sub_6ED91E40	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED91E70	proc near		; DATA XREF: .rdata:off_6EDA76E8o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA76E8
		add	esp, 0Ch
		jmp	sub_6ED48EB0
sub_6ED91E70	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED91E90	proc near		; CODE XREF: sub_6ED4A973+1Fp
					; .text:6ED4ABB2p ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	edx, [esp+0Ch+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED91EC0
		lock dec dword ptr [eax+4]
		setnz	cl
		test	cl, cl
		jnz	short loc_6ED91EC0
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED91EC0
		mov	edx, [eax]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, [edx+4]
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_6ED91EC0:				; CODE XREF: sub_6ED91E90+Bj
					; sub_6ED91E90+16j ...
		add	esp, 0Ch
		retn
sub_6ED91E90	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED91ED0	proc near		; CODE XREF: sub_6ED49161+12p
					; sub_6ED49246+12p ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	edx, [esp+0Ch+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED91EF5
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_6ED91EF5
		mov	eax, [edx]
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	sub_6ED988B0
; ---------------------------------------------------------------------------

loc_6ED91EF5:				; CODE XREF: sub_6ED91ED0+Bj
					; sub_6ED91ED0+15j
		add	esp, 0Ch
		retn
sub_6ED91ED0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED91F00	proc near		; DATA XREF: .rdata:6EDA776Co

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_6EDA7768
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED48EB0
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_6ED988B0
sub_6ED91F00	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED91F30	proc near		; DATA XREF: .rdata:off_6EDA7768o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7768
		add	esp, 0Ch
		jmp	sub_6ED48EB0
sub_6ED91F30	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED91F50	proc near		; CODE XREF: sub_6ED5E6A0+490p
					; sub_6ED61480+7FAp ...

var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_38		= dword	ptr -38h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 94h
		mov	[ebp+var_4C], eax
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		mov	[ebp+var_54], offset sub_6ED997C0
		mov	[ebp+var_50], offset dword_6ED9A570
		mov	[ebp+var_48], offset sub_6ED920A3
		mov	[ebp+var_44], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 4
		mov	[ebp+var_68], 0FFFFFFFFh
		call	ds:_ZN8QMapData10createDataEi
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_7C], eax
		mov	eax, [edx]
		mov	ecx, [eax+3Ch]
		test	ecx, ecx
		jz	loc_6ED92064
		mov	ecx, [ebp+var_7C]
		or	byte ptr [ecx+44h], 1
		mov	eax, [edx]
		mov	ebx, [eax+4]
		mov	[ebp+var_38], ecx
		cmp	eax, ebx
		mov	[ebp+var_78], ebx
		jz	loc_6ED92058
		mov	eax, ds:_ZN8QMapData11node_createEPPNS_4NodeEii
		mov	[ebp+var_70], eax
		lea	esi, [esi+0]

loc_6ED91FD0:				; CODE XREF: sub_6ED91F50+102j
		mov	edx, [ebp+var_78]
		lea	ecx, [ebp+var_38]
		mov	ebx, [ebp+var_7C]
		mov	dword ptr [esp+0Ch], 4
		mov	dword ptr [esp+8], 10h
		sub	edx, 10h
		mov	[ebp+var_74], edx
		mov	[esp+4], ecx
		mov	[esp], ebx
		mov	[ebp+var_68], 2
		call	[ebp+var_70]
		mov	edx, eax
		sub	edx, 10h
		jz	short loc_6ED92015
		mov	ebx, [ebp+var_74]
		mov	ecx, [ebx]
		mov	[eax-10h], ecx
		lock inc dword ptr [ecx]
		setnz	al

loc_6ED92015:				; CODE XREF: sub_6ED91F50+B5j
		cmp	edx, 0FFFFFFFCh
		jz	short loc_6ED92044
		mov	ecx, [ebp+var_74]
		mov	eax, [ecx+4]
		mov	[edx+4], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	ebx, [ebp+var_74]
		mov	eax, [ebx+8]
		mov	[edx+8], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	eax, [ebx+0Ch]
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED92044:				; CODE XREF: sub_6ED91F50+C8j
		mov	eax, [ebp+var_78]
		mov	edx, [ebp+arg_0]
		mov	eax, [eax+4]
		mov	[ebp+var_78], eax
		cmp	[edx], eax
		jnz	loc_6ED91FD0

loc_6ED92058:				; CODE XREF: sub_6ED91F50+6Ej
		mov	ebx, [ebp+var_7C]
		and	byte ptr [ebx+44h], 0FEh
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]

loc_6ED92064:				; CODE XREF: sub_6ED91F50+54j
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED92087
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx]
		mov	[esp], ecx
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_6ED92100

loc_6ED92087:				; CODE XREF: sub_6ED91F50+11Dj
		mov	eax, [ebp+var_7C]
		mov	ebx, [ebp+arg_0]
		mov	[ebx], eax
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 94h
		pop	ebx
		pop	ebp
		retn
sub_6ED91F50	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED920A3	proc near		; DATA XREF: sub_6ED91F50+24o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	edx, [ebp-64h]
		cmp	dword ptr [ebp-68h], 1
		mov	[ebp-80h], edx
		jz	short loc_6ED920D0
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED991C0
		mov	ecx, [ebp-80h]
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED920D0:				; CODE XREF: sub_6ED920A3+Dj
		mov	ecx, [ebp-80h]
		mov	[esp+0], ecx
		call	sub_6ED98EF0
		mov	ebx, [ebp-7Ch]
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-68h], 1
		mov	[esp+arg_0], ebx
		mov	[esp+0], eax
		call	sub_6ED92100
		call	sub_6ED99700
sub_6ED920A3	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED92100	proc near		; CODE XREF: sub_6ED5D140+5B9p
					; .text:6ED5E299p ...

var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A566
		mov	[ebp+var_18], offset sub_6ED92228
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+4]
		cmp	edx, eax
		jz	loc_6ED92203
		mov	edx, ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_48], edx
		mov	[ebp+var_4C], edx
		mov	[ebp+var_50], edx
		jmp	short loc_6ED9218F
; ---------------------------------------------------------------------------
		align 10h

loc_6ED92150:				; CODE XREF: sub_6ED92100+C9j
					; sub_6ED92100+DEj
		mov	edx, [ebp+var_40]
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED921E3

loc_6ED92164:				; CODE XREF: sub_6ED92100+F6j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED92187
		mov	edx, [ebp+var_40]
		mov	eax, [edx+4]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	[ebp+var_50]

loc_6ED92187:				; CODE XREF: sub_6ED92100+72j
		mov	eax, [ebp+var_44]
		cmp	[ebp+arg_4], eax
		jz	short loc_6ED92200

loc_6ED9218F:				; CODE XREF: sub_6ED92100+4Cj
		mov	edx, [eax+4]
		mov	[ebp+var_44], edx
		lea	edx, [eax-10h]
		mov	[ebp+var_40], edx
		mov	edx, [eax-10h]
		lock dec dword ptr [edx]
		setnz	cl
		test	cl, cl
		jnz	short loc_6ED921BB
		mov	eax, [eax-10h]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED921BB:				; CODE XREF: sub_6ED92100+A6j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED92150
		mov	edx, [ebp+var_40]
		mov	eax, [edx+0Ch]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	[ebp+var_48]
		jmp	loc_6ED92150
; ---------------------------------------------------------------------------

loc_6ED921E3:				; CODE XREF: sub_6ED92100+5Ej
		mov	edx, [ebp+var_40]
		mov	eax, [edx+8]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	[ebp+var_4C]
		jmp	loc_6ED92164
; ---------------------------------------------------------------------------
		align 10h

loc_6ED92200:				; CODE XREF: sub_6ED92100+8Dj
		mov	eax, [ebp+arg_4]

loc_6ED92203:				; CODE XREF: sub_6ED92100+37j
		mov	[esp], eax
		mov	dword ptr [esp+4], 10h
		mov	[ebp+var_38], 0FFFFFFFFh
		call	ds:_ZN8QMapData16continueFreeDataEi
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED92100	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED92228	proc near		; DATA XREF: sub_6ED92100+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-54h], eax
		jz	short loc_6ED9224C
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED9224C:				; CODE XREF: sub_6ED92228+Dj
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 4
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED92228	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED92280	proc near		; CODE XREF: sub_6ED5D773+339p
					; .text:6ED5E64Cp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED922A6
		lock dec dword ptr [eax+34h]
		setnz	cl
		test	cl, cl
		jnz	short loc_6ED922A6
		mov	eax, [edx]
		mov	[esp+1Ch+var_1C], edx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED92100

loc_6ED922A6:				; CODE XREF: sub_6ED92280+Bj
					; sub_6ED92280+16j
		add	esp, 1Ch
		retn
sub_6ED92280	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED922B0	proc near		; CODE XREF: sub_6ED5E6A0+556p
					; sub_6ED66E40+580p ...

var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_38		= dword	ptr -38h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 94h
		mov	[ebp+var_4C], eax
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		mov	[ebp+var_54], offset sub_6ED997C0
		mov	[ebp+var_50], offset dword_6ED9A524
		mov	[ebp+var_48], offset sub_6ED923F3
		mov	[ebp+var_44], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 4
		mov	[ebp+var_68], 0FFFFFFFFh
		call	ds:_ZN8QMapData10createDataEi
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_7C], eax
		mov	eax, [edx]
		mov	ecx, [eax+3Ch]
		test	ecx, ecx
		jz	loc_6ED923B4
		mov	ebx, [ebp+var_7C]
		or	byte ptr [ebx+44h], 1
		mov	eax, [edx]
		mov	edx, [eax+4]
		mov	[ebp+var_38], ebx
		cmp	eax, edx
		mov	[ebp+var_74], edx
		jz	loc_6ED923A8
		mov	ebx, ds:_ZN8QMapData11node_createEPPNS_4NodeEii
		mov	[ebp+var_70], ebx
		lea	esi, [esi+0]

loc_6ED92330:				; CODE XREF: sub_6ED922B0+F6j
		mov	eax, [ebp+var_74]
		lea	edx, [ebp+var_38]
		mov	ebx, [ebp+var_7C]
		mov	dword ptr [esp+0Ch], 4
		mov	dword ptr [esp+8], 0Ch
		sub	eax, 0Ch
		mov	[ebp+var_78], eax
		mov	[esp+4], edx
		mov	[esp], ebx
		mov	[ebp+var_68], 2
		call	[ebp+var_70]
		mov	ecx, eax
		sub	ecx, 0Ch
		jz	short loc_6ED92375
		mov	ebx, [ebp+var_78]
		mov	edx, [ebx]
		mov	[eax-0Ch], edx
		lock inc dword ptr [edx]
		setnz	al

loc_6ED92375:				; CODE XREF: sub_6ED922B0+B5j
		cmp	ecx, 0FFFFFFFCh
		jz	short loc_6ED92398
		mov	edx, [ebp+var_78]
		mov	eax, [edx+4]
		mov	[ecx+4], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ebx, [ebp+var_78]
		mov	eax, [ebx+8]
		mov	[ecx+8], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED92398:				; CODE XREF: sub_6ED922B0+C8j
		mov	eax, [ebp+var_74]
		mov	edx, [ebp+arg_0]
		mov	eax, [eax+4]
		mov	[ebp+var_74], eax
		cmp	[edx], eax
		jnz	short loc_6ED92330

loc_6ED923A8:				; CODE XREF: sub_6ED922B0+6Ej
		mov	eax, [ebp+var_7C]
		and	byte ptr [eax+44h], 0FEh
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]

loc_6ED923B4:				; CODE XREF: sub_6ED922B0+54j
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED923D7
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx]
		mov	[esp], ebx
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_6ED92450

loc_6ED923D7:				; CODE XREF: sub_6ED922B0+10Dj
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_7C]
		mov	[eax], edx
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 94h
		pop	ebx
		pop	ebp
		retn
sub_6ED922B0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED923F3	proc near		; DATA XREF: sub_6ED922B0+24o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	ebx, [ebp-64h]
		cmp	dword ptr [ebp-68h], 1
		mov	[ebp-80h], ebx
		jz	short loc_6ED9241D
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED991C0
		mov	[esp+0], ebx
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED9241D:				; CODE XREF: sub_6ED923F3+Dj
		mov	ebx, [ebp-80h]
		mov	[esp+0], ebx
		call	sub_6ED98EF0
		mov	eax, [ebp-7Ch]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-68h], 1
		mov	[esp+arg_0], eax
		mov	[esp+0], edx
		call	sub_6ED92450
		call	sub_6ED99700
sub_6ED923F3	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED92450	proc near		; CODE XREF: sub_6ED5D140+5FFp
					; .text:6ED5E2DFp ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A51E
		mov	[ebp+var_18], offset sub_6ED92548
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+4]
		cmp	edx, eax
		jz	loc_6ED92523
		mov	edx, ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_48], edx
		mov	[ebp+var_4C], edx
		jmp	short loc_6ED924CB
; ---------------------------------------------------------------------------
		align 10h

loc_6ED924A0:				; CODE XREF: sub_6ED92450+B5j
					; sub_6ED92450+CAj
		mov	edx, [ebp+var_40]
		mov	eax, [edx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED924C3
		mov	edx, [ebp+var_40]
		mov	eax, [edx+4]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	[ebp+var_4C]

loc_6ED924C3:				; CODE XREF: sub_6ED92450+5Ej
		mov	eax, [ebp+var_44]
		cmp	[ebp+arg_4], eax
		jz	short loc_6ED92520

loc_6ED924CB:				; CODE XREF: sub_6ED92450+49j
		mov	edx, [eax+4]
		mov	[ebp+var_44], edx
		lea	edx, [eax-0Ch]
		mov	[ebp+var_40], edx
		mov	edx, [eax-0Ch]
		lock dec dword ptr [edx]
		setnz	cl
		test	cl, cl
		jnz	short loc_6ED924F7
		mov	eax, [eax-0Ch]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED924F7:				; CODE XREF: sub_6ED92450+92j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED924A0
		mov	edx, [ebp+var_40]
		mov	eax, [edx+8]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	[ebp+var_48]
		jmp	short loc_6ED924A0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED92520:				; CODE XREF: sub_6ED92450+79j
		mov	eax, [ebp+arg_4]

loc_6ED92523:				; CODE XREF: sub_6ED92450+37j
		mov	[esp], eax
		mov	dword ptr [esp+4], 0Ch
		mov	[ebp+var_38], 0FFFFFFFFh
		call	ds:_ZN8QMapData16continueFreeDataEi
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED92450	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED92548	proc near		; DATA XREF: sub_6ED92450+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-50h], eax
		mov	eax, [ebp-40h]
		add	eax, 4
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-50h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED92548	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED92580	proc near		; CODE XREF: sub_6ED5D773+363p
					; .text:6ED5E676p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED925A6
		lock dec dword ptr [eax+34h]
		setnz	cl
		test	cl, cl
		jnz	short loc_6ED925A6
		mov	eax, [edx]
		mov	[esp+1Ch+var_1C], edx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED92450

loc_6ED925A6:				; CODE XREF: sub_6ED92580+Bj
					; sub_6ED92580+16j
		add	esp, 1Ch
		retn
sub_6ED92580	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED925B0	proc near		; CODE XREF: _ZN20QXmlNamespaceSupport10popContextEv+129p
					; _ZN20QXmlNamespaceSupport10popContextEv+22Dp	...

var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_38		= dword	ptr -38h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 94h
		mov	[ebp+var_4C], eax
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		mov	[ebp+var_54], offset sub_6ED997C0
		mov	[ebp+var_50], offset dword_6ED9A448
		mov	[ebp+var_48], offset sub_6ED926E4
		mov	[ebp+var_44], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 4
		mov	[ebp+var_68], 0FFFFFFFFh
		call	ds:_ZN8QMapData10createDataEi
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_7C], eax
		mov	eax, [edx]
		mov	ebx, [eax+3Ch]
		test	ebx, ebx
		jz	loc_6ED926A5
		mov	ebx, [ebp+var_7C]
		or	byte ptr [ebx+44h], 1
		mov	eax, [edx]
		mov	edx, [eax+4]
		mov	[ebp+var_38], ebx
		cmp	eax, edx
		mov	[ebp+var_74], edx
		jz	short loc_6ED92699
		mov	ebx, ds:_ZN8QMapData11node_createEPPNS_4NodeEii
		mov	[ebp+var_70], ebx
		lea	esi, [esi+0]

loc_6ED92630:				; CODE XREF: sub_6ED925B0+E7j
		mov	eax, [ebp+var_74]
		lea	edx, [ebp+var_38]
		mov	ebx, [ebp+var_7C]
		mov	dword ptr [esp+0Ch], 4
		mov	dword ptr [esp+8], 8
		sub	eax, 8
		mov	[ebp+var_78], eax
		mov	[esp+4], edx
		mov	[esp], ebx
		mov	[ebp+var_68], 2
		call	[ebp+var_70]
		mov	ecx, eax
		sub	ecx, 8
		jz	short loc_6ED92675
		mov	ebx, [ebp+var_78]
		mov	edx, [ebx]
		mov	[eax-8], edx
		lock inc dword ptr [edx]
		setnz	al

loc_6ED92675:				; CODE XREF: sub_6ED925B0+B5j
		cmp	ecx, 0FFFFFFFCh
		jz	short loc_6ED92689
		mov	edx, [ebp+var_78]
		mov	eax, [edx+4]
		mov	[ecx+4], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED92689:				; CODE XREF: sub_6ED925B0+C8j
		mov	ebx, [ebp+var_74]
		mov	eax, [ebp+arg_0]
		mov	ebx, [ebx+4]
		mov	[ebp+var_74], ebx
		cmp	[eax], ebx
		jnz	short loc_6ED92630

loc_6ED92699:				; CODE XREF: sub_6ED925B0+6Ej
		mov	eax, [ebp+var_7C]
		and	byte ptr [eax+44h], 0FEh
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]

loc_6ED926A5:				; CODE XREF: sub_6ED925B0+54j
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED926C8
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx]
		mov	[esp], ebx
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_6ED92800

loc_6ED926C8:				; CODE XREF: sub_6ED925B0+FEj
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_7C]
		mov	[eax], edx
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 94h
		pop	ebx
		pop	ebp
		retn
sub_6ED925B0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED926E4	proc near		; DATA XREF: sub_6ED925B0+24o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	edx, [ebp-64h]
		cmp	dword ptr [ebp-68h], 1
		mov	[ebp-80h], edx
		jz	short loc_6ED92711
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED991C0
		mov	ebx, [ebp-80h]
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		mov	[esp+0], ebx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED92711:				; CODE XREF: sub_6ED926E4+Dj
		mov	edx, [ebp-80h]
		mov	[esp+0], edx
		call	sub_6ED98EF0
		mov	ebx, [ebp-7Ch]
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-68h], 1
		mov	[esp+arg_0], ebx
		mov	[esp+0], eax
		call	sub_6ED92800
		call	sub_6ED99700
sub_6ED926E4	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED92740	proc near		; CODE XREF: sub_6ED6CA30+46Dp
					; sub_6ED6CA30+D44p

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 5Ch
		mov	[esp+5Ch+var_10], ebx
		mov	ebx, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_4], ebp
		mov	ebp, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_C], esi
		mov	[esp+5Ch+var_8], edi
		mov	eax, [ebx]
		mov	eax, [eax+34h]
		cmp	eax, 1
		jz	short loc_6ED9276D
		mov	[esp+5Ch+var_5C], ebx
		call	sub_6ED925B0

loc_6ED9276D:				; CODE XREF: sub_6ED92740+23j
		lea	edi, [esp+5Ch+var_4C]
		mov	[esp+5Ch+var_54], ebp
		mov	[esp+5Ch+var_58], edi
		mov	[esp+5Ch+var_5C], ebx
		call	sub_6ED981F0
		cmp	eax, [ebx]
		mov	esi, eax
		jz	short loc_6ED927B1
		mov	eax, [esp+5Ch+arg_8]
		mov	[esp+5Ch+var_58], eax
		lea	eax, [esi-4]
		mov	[esp+5Ch+var_5C], eax
		call	ds:_ZN7QStringaSERKS_

loc_6ED9279B:				; CODE XREF: sub_6ED92740+A6j
					; sub_6ED92740+B7j
		mov	eax, esi
		mov	ebx, [esp+5Ch+var_10]
		mov	esi, [esp+5Ch+var_C]
		mov	edi, [esp+5Ch+var_8]
		mov	ebp, [esp+5Ch+var_4]
		add	esp, 5Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED927B1:				; CODE XREF: sub_6ED92740+45j
		mov	[esp+5Ch+var_50], 4
		mov	[esp+5Ch+var_54], 8
		mov	[esp+5Ch+var_58], edi
		mov	[esp+5Ch+var_5C], eax
		call	ds:_ZN8QMapData11node_createEPPNS_4NodeEii
		mov	edx, eax
		mov	esi, eax
		sub	edx, 8
		jz	short loc_6ED927E3
		mov	eax, [ebp+0]
		mov	[esi-8], eax
		lock inc dword ptr [eax]
		setnz	cl

loc_6ED927E3:				; CODE XREF: sub_6ED92740+95j
		cmp	edx, 0FFFFFFFCh
		jz	short loc_6ED9279B
		mov	ecx, [esp+5Ch+arg_8]
		mov	eax, [ecx]
		mov	[edx+4], eax
		lock inc dword ptr [eax]
		setnz	dl
		jmp	short loc_6ED9279B
sub_6ED92740	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED92800	proc near		; CODE XREF: _ZN20QXmlNamespaceSupport10popContextEv+B7p
					; _ZN20QXmlNamespaceSupport10popContextEv+20Ap	...

var_2C		= dword	ptr -2Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	edi, [esp+2Ch+arg_4]
		mov	eax, [edi+4]
		cmp	edi, eax
		jz	short loc_6ED9285C
		mov	ebp, ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED92822
; ---------------------------------------------------------------------------
		align 10h

loc_6ED92820:				; CODE XREF: sub_6ED92800+58j
		mov	eax, ebx

loc_6ED92822:				; CODE XREF: sub_6ED92800+18j
		mov	ebx, [eax+4]
		lea	esi, [eax-8]
		mov	edx, [eax-8]
		lock dec dword ptr [edx]
		setnz	cl
		test	cl, cl
		jnz	short loc_6ED92841
		mov	eax, [eax-8]
		mov	[esp+2Ch+var_2C], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED92841:				; CODE XREF: sub_6ED92800+33j
		mov	eax, [esi+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED92856
		mov	eax, [esi+4]
		mov	[esp+2Ch+var_2C], eax
		call	ebp ; _ZN7QString4freeEPNS_4DataE

loc_6ED92856:				; CODE XREF: sub_6ED92800+4Cj
		cmp	edi, ebx
		jnz	short loc_6ED92820
		mov	eax, edi

loc_6ED9285C:				; CODE XREF: sub_6ED92800+10j
		mov	[esp+2Ch+arg_0], eax
		mov	eax, ds:_ZN8QMapData16continueFreeDataEi
		mov	[esp+2Ch+arg_4], 8
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	eax
sub_6ED92800	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED92880	proc near		; CODE XREF: sub_6ED59BD1+23p
					; sub_6ED5B560+4Dp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED928A6
		lock dec dword ptr [eax+34h]
		setnz	cl
		test	cl, cl
		jnz	short loc_6ED928A6
		mov	eax, [edx]
		mov	[esp+1Ch+var_1C], edx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED92800

loc_6ED928A6:				; CODE XREF: sub_6ED92880+Bj
					; sub_6ED92880+16j
		add	esp, 1Ch
		retn
sub_6ED92880	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED928B0	proc near		; DATA XREF: sub_6ED51550+7E9o
					; sub_6ED51550+9FEo ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	edx, [esp+0Ch+arg_0]
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jz	short loc_6ED928C8
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED928C8:				; CODE XREF: sub_6ED928B0+12j
		mov	eax, [edx+8]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_ZN7QString4freeEPNS_4DataE
		add	esp, 0Ch
		jmp	eax
sub_6ED928B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED928E0	proc near		; DATA XREF: sub_6ED51550+A06o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		test	edx, edx
		jz	short locret_6ED928F8
		mov	eax, [esp+arg_0]
		mov	eax, [eax+8]
		mov	[edx+8], eax
		lock inc dword ptr [eax]
		setnz	dl

locret_6ED928F8:			; CODE XREF: sub_6ED928E0+6j
		rep retn
sub_6ED928E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED92900	proc near		; DATA XREF: sub_6ED74AB0+8FCo
					; sub_6ED74AB0:loc_6ED75496o ...

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9AAB6
		mov	[ebp+var_18], offset sub_6ED9298A
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED92972

loc_6ED9293F:				; CODE XREF: sub_6ED92900+88j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED92965
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED92965:				; CODE XREF: sub_6ED92900+4Dj
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED92972:				; CODE XREF: sub_6ED92900+3Dj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED9293F
sub_6ED92900	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED9298A	proc near		; DATA XREF: sub_6ED92900+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		add	eax, 8
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED9298A	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED929C0	proc near		; CODE XREF: sub_6ED74AB0+9DCp
					; sub_6ED78A10+46Bp ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 2Ch
		mov	[esp+2Ch+var_8], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_4], esi
		mov	[esp+2Ch+var_1C], 4
		mov	[esp+2Ch+var_20], 14h
		mov	[esp+2Ch+var_24], offset sub_6ED92900
		mov	[esp+2Ch+var_28], offset sub_6ED92A30
		mov	eax, [ebx]
		mov	[esp+2Ch+var_2C], eax
		call	ds:_ZN9QHashData14detach_helper2EPFvPNS_4NodeEPvEPFvS1_Eii
		mov	edx, [ebx]
		mov	esi, eax
		lock dec dword ptr [edx+8]
		setnz	al
		test	al, al
		jnz	short loc_6ED92A1C
		mov	[esp+2Ch+var_28], offset sub_6ED92900
		mov	eax, [ebx]
		mov	[esp+2Ch+var_2C], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_6ED92A1C:				; CODE XREF: sub_6ED929C0+47j
		mov	[ebx], esi
		mov	ebx, [esp+2Ch+var_8]
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
sub_6ED929C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED92A30	proc near		; DATA XREF: sub_6ED929C0+27o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		mov	eax, [esp+4+arg_4]
		mov	edx, [esp+4+arg_0]
		test	eax, eax
		jz	short loc_6ED92AA4
		mov	ecx, [edx+8]
		mov	[eax+8], ecx
		lock inc dword ptr [ecx]
		setnz	bl
		mov	ecx, [edx+0Ch]
		mov	[eax+0Ch], ecx
		lock inc dword ptr [ecx]
		setnz	bl
		movzx	ebx, byte ptr [edx+10h]
		movzx	ecx, byte ptr [eax+10h]
		and	ebx, 1
		and	ecx, 0FFFFFFFEh
		or	ecx, ebx
		mov	[eax+10h], cl
		movzx	ebx, byte ptr [edx+10h]
		and	ecx, 0FFFFFFFDh
		and	ebx, 2
		or	ecx, ebx
		mov	[eax+10h], cl
		movzx	ebx, byte ptr [edx+10h]
		and	ecx, 0FFFFFFFBh
		and	ebx, 4
		or	ecx, ebx
		mov	[eax+10h], cl
		movzx	ebx, byte ptr [edx+10h]
		and	ecx, 0FFFFFFF7h
		and	ebx, 8
		or	ecx, ebx
		mov	[eax+10h], cl
		movzx	edx, byte ptr [edx+10h]
		and	ecx, 0FFFFFFEFh
		and	edx, 10h
		or	ecx, edx
		mov	[eax+10h], cl

loc_6ED92AA4:				; CODE XREF: sub_6ED92A30+Bj
		pop	ebx
		retn
sub_6ED92A30	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED92AB0	proc near		; CODE XREF: sub_6ED754B9+5Ep
					; sub_6ED79C60+25Cp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax+8]
		setnz	cl
		test	cl, cl
		jnz	short loc_6ED92AD7
		mov	[esp+1Ch+var_18], offset sub_6ED92900
		mov	eax, [edx]
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_6ED92AD7:				; CODE XREF: sub_6ED92AB0+12j
		add	esp, 1Ch
		retn
sub_6ED92AB0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED92AE0	proc near		; CODE XREF: sub_6ED83560+20D7p
					; sub_6ED83560+225Dp ...

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= dword	ptr -18h
var_14		= byte ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9ACE4
		mov	[ebp+var_28], offset sub_6ED92CCA
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	eax, [eax+8]
		cmp	eax, 1
		jz	short loc_6ED92B2B
		mov	[esp], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED929C0

loc_6ED92B2B:				; CODE XREF: sub_6ED92AE0+3Aj
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_C]
		mov	eax, [ebp+arg_4]
		mov	[esp+8], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_6ED98330
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_50], eax
		mov	eax, [eax]
		cmp	eax, [edx]
		jz	short loc_6ED92B70
		add	eax, 0Ch
		mov	[ebp+var_54], eax

loc_6ED92B5D:				; CODE XREF: sub_6ED92AE0+180j
					; sub_6ED92AE0+199j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_54]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED92B70:				; CODE XREF: sub_6ED92AE0+75j
		mov	edx, [eax+0Ch]
		cmp	edx, [eax+18h]
		jge	loc_6ED92C95

loc_6ED92B7C:				; CODE XREF: sub_6ED92AE0+1E5j
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_10]
		mov	[ebp+var_18], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+var_C]
		mov	edx, [ebp+arg_0]
		and	[ebp+var_14], 0E0h
		mov	[ebp+var_58], ecx
		mov	dword ptr [esp+4], 4
		mov	eax, [edx]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		jz	short loc_6ED92C2A
		mov	ecx, [ebp+arg_4]
		mov	edx, [ecx]
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+var_18]
		mov	[eax+0Ch], edx
		lock inc dword ptr [edx]
		setnz	cl
		movzx	ecx, [ebp+var_14]
		movzx	edx, byte ptr [eax+10h]
		and	ecx, 1
		and	edx, 0FFFFFFFEh
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, [ebp+var_14]
		and	edx, 0FFFFFFFDh
		and	ecx, 2
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, [ebp+var_14]
		and	edx, 0FFFFFFFBh
		and	ecx, 4
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, [ebp+var_14]
		and	edx, 0FFFFFFF7h
		and	ecx, 8
		or	edx, ecx
		mov	[eax+10h], dl
		movzx	ecx, [ebp+var_14]
		and	edx, 0FFFFFFEFh
		and	ecx, 10h
		or	edx, ecx
		mov	[eax+10h], dl

loc_6ED92C2A:				; CODE XREF: sub_6ED92AE0+DFj
		mov	edx, [ebp+var_58]
		mov	[eax+4], edx
		mov	ecx, [ebp+var_50]
		mov	edx, [ecx]
		mov	[eax], edx
		mov	[ecx], eax
		mov	ecx, [ebp+arg_0]
		add	eax, 0Ch
		mov	edx, [ecx]
		mov	[ebp+var_54], eax
		mov	eax, [ebp+var_18]
		add	dword ptr [edx+0Ch], 1
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED92C80

loc_6ED92C55:				; CODE XREF: sub_6ED92AE0+1B3j
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_6ED92B5D
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_6ED92B5D
; ---------------------------------------------------------------------------
		align 10h

loc_6ED92C80:				; CODE XREF: sub_6ED92AE0+173j
		mov	eax, [ebp+var_18]
		mov	[ebp+var_48], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED92C55
; ---------------------------------------------------------------------------

loc_6ED92C95:				; CODE XREF: sub_6ED92AE0+96j
		movsx	edx, word ptr [eax+16h]
		mov	[esp], eax
		add	edx, 1
		mov	[esp+4], edx
		call	ds:_ZN9QHashData6rehashEi
		mov	eax, [ebp+arg_4]
		lea	ecx, [ebp+var_C]
		mov	edx, [ebp+arg_0]
		mov	[esp+8], ecx
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_6ED98330
		mov	[ebp+var_50], eax
		jmp	loc_6ED92B7C
sub_6ED92AE0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED92CCA	proc near		; DATA XREF: sub_6ED92AE0+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-5Ch], eax
		jz	short loc_6ED92CEB
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560

loc_6ED92CEB:				; CODE XREF: sub_6ED92CCA+Dj
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	edx, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED92CCA	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED92D10	proc near		; DATA XREF: sub_6ED46A30+11Bo
					; sub_6ED46A30+163o ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	edx, [esp+0Ch+arg_0]
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jz	short loc_6ED92D28
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED92D28:				; CODE XREF: sub_6ED92D10+12j
		mov	eax, [edx+8]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_ZN7QString4freeEPNS_4DataE
		add	esp, 0Ch
		jmp	eax
sub_6ED92D10	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED92D40	proc near		; CODE XREF: sub_6ED45D90+D0p
					; sub_6ED46310+CAp

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 3Ch
		mov	[esp+3Ch+var_10], ebx
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_8], edi
		mov	edi, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_C], esi
		mov	[esp+3Ch+var_4], ebp
		mov	eax, [ebx]
		mov	edx, [eax+8]
		cmp	edx, 1
		jz	short loc_6ED92D6F
		mov	[esp+3Ch+var_3C], ebx
		call	sub_6ED92E00
		mov	eax, [ebx]

loc_6ED92D6F:				; CODE XREF: sub_6ED92D40+23j
		mov	edx, [eax+0Ch]
		cmp	edx, [eax+18h]
		jge	short loc_6ED92DE0

loc_6ED92D77:				; CODE XREF: sub_6ED92D40+B4j
		lea	eax, [esp+3Ch+var_20]
		mov	[esp+3Ch+var_34], eax
		mov	[esp+3Ch+var_38], edi
		mov	[esp+3Ch+var_3C], ebx
		call	sub_6ED983D0
		mov	ebp, [esp+3Ch+var_20]
		mov	[esp+3Ch+var_38], 4
		mov	esi, eax
		mov	eax, [ebx]
		mov	[esp+3Ch+var_3C], eax
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		jz	short loc_6ED92DBC
		mov	edx, [edi]
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [esp+3Ch+arg_8]
		mov	edx, [edx]
		mov	[eax+0Ch], edx

loc_6ED92DBC:				; CODE XREF: sub_6ED92D40+66j
		mov	[eax+4], ebp
		mov	edx, [esi]
		mov	[eax], edx
		mov	[esi], eax
		mov	edx, [ebx]
		add	dword ptr [edx+0Ch], 1
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED92DE0:				; CODE XREF: sub_6ED92D40+35j
		movsx	edx, word ptr [eax+16h]
		mov	[esp+3Ch+var_3C], eax
		add	edx, 1
		mov	[esp+3Ch+var_38], edx
		call	ds:_ZN9QHashData6rehashEi
		jmp	short loc_6ED92D77
sub_6ED92D40	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED92E00	proc near		; CODE XREF: sub_6ED46A30+154p
					; sub_6ED4E060+116p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 2Ch
		mov	[esp+2Ch+var_8], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_4], esi
		mov	[esp+2Ch+var_1C], 4
		mov	[esp+2Ch+var_20], 10h
		mov	[esp+2Ch+var_24], offset sub_6ED92D10
		mov	[esp+2Ch+var_28], offset sub_6ED92E70
		mov	eax, [ebx]
		mov	[esp+2Ch+var_2C], eax
		call	ds:_ZN9QHashData14detach_helper2EPFvPNS_4NodeEPvEPFvS1_Eii
		mov	edx, [ebx]
		mov	esi, eax
		lock dec dword ptr [edx+8]
		setnz	al
		test	al, al
		jnz	short loc_6ED92E5C
		mov	[esp+2Ch+var_28], offset sub_6ED92D10
		mov	eax, [ebx]
		mov	[esp+2Ch+var_2C], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_6ED92E5C:				; CODE XREF: sub_6ED92E00+47j
		mov	[ebx], esi
		mov	ebx, [esp+2Ch+var_8]
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
sub_6ED92E00	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED92E70	proc near		; DATA XREF: sub_6ED92E00+27o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		mov	edx, [esp+4+arg_4]
		mov	ecx, [esp+4+arg_0]
		test	edx, edx
		jz	short loc_6ED92E8F
		mov	eax, [ecx+8]
		mov	[edx+8], eax
		lock inc dword ptr [eax]
		setnz	bl
		mov	eax, [ecx+0Ch]
		mov	[edx+0Ch], eax

loc_6ED92E8F:				; CODE XREF: sub_6ED92E70+Bj
		pop	ebx
		retn
sub_6ED92E70	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED92EA0	proc near		; CODE XREF: sub_6ED47150+9Cp
					; sub_6ED53070+86p ...

var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_59		= byte ptr -59h
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 6Ch
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED99EB0
		mov	[ebp+var_28], offset sub_6ED93078
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[ebp+var_68], 0
		mov	edx, [eax+0Ch]
		test	edx, edx
		mov	[ebp+var_64], edx
		jz	loc_6ED9305A
		mov	eax, [eax+8]
		cmp	eax, 1
		jz	short loc_6ED92F11
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED92E00
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	eax, [eax+0Ch]
		mov	[ebp+var_64], eax

loc_6ED92F11:				; CODE XREF: sub_6ED92EA0+52j
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED983D0
		mov	edx, [eax]
		mov	[ebp+var_60], eax
		mov	[ebp+var_54], edx
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		cmp	[ebp+var_54], eax
		jz	loc_6ED93070
		mov	edx, ds:_ZN9QHashData8freeNodeEPv
		mov	[ebp+var_50], edx
		jmp	short loc_6ED92FC5
; ---------------------------------------------------------------------------

loc_6ED92F53:				; CODE XREF: sub_6ED92EA0+156j
		mov	eax, [ebp+var_60]
		mov	[ebp+var_59], 1
		mov	eax, [eax]
		mov	[ebp+var_54], eax

loc_6ED92F5F:				; CODE XREF: sub_6ED92EA0+133j
					; sub_6ED92EA0+168j
		mov	edx, [ebp+var_54]
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED92F85
		mov	edx, [ebp+var_54]
		mov	eax, [edx+8]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED92F85:				; CODE XREF: sub_6ED92EA0+CDj
		mov	eax, [ebp+var_54]
		mov	edx, [ebp+arg_0]
		mov	[esp+4], eax
		mov	eax, [edx]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	[ebp+var_50]
		mov	edx, [ebp+var_58]
		mov	eax, [ebp+var_60]
		mov	[eax], edx
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	edx, [eax+0Ch]
		sub	edx, 1
		cmp	[ebp+var_59], 0
		mov	[eax+0Ch], edx
		jz	short loc_6ED93010
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	edx, [ebp+var_58]
		mov	[ebp+var_54], edx

loc_6ED92FC5:				; CODE XREF: sub_6ED92EA0+B1j
		mov	edx, [ebp+var_54]
		mov	[ebp+var_59], 0
		mov	edx, [edx]
		cmp	edx, eax
		mov	[ebp+var_58], edx
		jz	short loc_6ED92F5F
		mov	eax, [ebp+var_54]
		mov	[ebp+var_48], 0FFFFFFFFh
		add	eax, 8
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 8
		mov	[esp], eax
		call	ds:_ZNK7QStringeqERKS_
		test	al, al
		jnz	loc_6ED92F53
		mov	edx, [ebp+var_60]
		mov	[ebp+var_59], 0
		mov	edx, [edx]
		mov	[ebp+var_54], edx
		jmp	loc_6ED92F5F
; ---------------------------------------------------------------------------
		align 10h

loc_6ED93010:				; CODE XREF: sub_6ED92EA0+118j
		mov	ecx, [eax+18h]
		sar	ecx, 3
		cmp	ecx, edx
		jl	short loc_6ED93052
		movzx	ebx, word ptr [eax+16h]
		movzx	ecx, word ptr [eax+14h]
		cmp	bx, cx
		jle	short loc_6ED93052
		movsx	ebx, bx
		movsx	ecx, cx
		sub	ebx, 2
		cmp	ebx, ecx
		jge	short loc_6ED93036
		mov	ebx, ecx

loc_6ED93036:				; CODE XREF: sub_6ED92EA0+192j
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN9QHashData6rehashEi

loc_6ED9304A:				; CODE XREF: sub_6ED93078+2Fj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	edx, [eax+0Ch]

loc_6ED93052:				; CODE XREF: sub_6ED92EA0+178j
					; sub_6ED92EA0+185j ...
		mov	eax, [ebp+var_64]
		sub	eax, edx
		mov	[ebp+var_68], eax

loc_6ED9305A:				; CODE XREF: sub_6ED92EA0+46j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_68]
		add	esp, 6Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED93070:				; CODE XREF: sub_6ED92EA0+A2j
		mov	eax, [ebp+var_54]
		mov	edx, [eax+0Ch]
		jmp	short loc_6ED93052
sub_6ED92EA0	endp


; =============== S U B	R O U T	I N E =======================================


sub_6ED93078	proc near		; DATA XREF: sub_6ED92EA0+23o
		add	ebp, 18h
		cmp	dword ptr [ebp-40h], 1
		mov	eax, [ebp-44h]
		jz	short loc_6ED93093
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED93093:				; CODE XREF: sub_6ED93078+Aj
		mov	[esp+0], eax
		call	sub_6ED98EF0
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED991C0
		jmp	short loc_6ED9304A
sub_6ED93078	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED930B0	proc near		; DATA XREF: sub_6ED5D140+3F9o
					; .text:6ED5E0D9o ...

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A4E0
		mov	[ebp+var_18], offset sub_6ED93143
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED93123

loc_6ED930F0:				; CODE XREF: sub_6ED930B0+91j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED93116
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED93116:				; CODE XREF: sub_6ED930B0+4Ej
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED93123:				; CODE XREF: sub_6ED930B0+3Ej
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_6ED932E0
		mov	eax, [edx+0Ch]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	short loc_6ED930F0
sub_6ED930B0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED93143	proc near		; DATA XREF: sub_6ED930B0+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		add	eax, 8
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED93143	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED93180	proc near		; CODE XREF: sub_6ED59E30+2C1p
					; _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+348p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 2Ch
		mov	[esp+2Ch+var_8], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_4], esi
		mov	[esp+2Ch+var_1C], 4
		mov	[esp+2Ch+var_20], 10h
		mov	[esp+2Ch+var_24], offset sub_6ED930B0
		mov	[esp+2Ch+var_28], offset sub_6ED931F0
		mov	eax, [ebx]
		mov	[esp+2Ch+var_2C], eax
		call	ds:_ZN9QHashData14detach_helper2EPFvPNS_4NodeEPvEPFvS1_Eii
		mov	edx, [ebx]
		mov	esi, eax
		lock dec dword ptr [edx+8]
		setnz	al
		test	al, al
		jnz	short loc_6ED931DC
		mov	[esp+2Ch+var_28], offset sub_6ED930B0
		mov	eax, [ebx]
		mov	[esp+2Ch+var_2C], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_6ED931DC:				; CODE XREF: sub_6ED93180+47j
		mov	[ebx], esi
		mov	ebx, [esp+2Ch+var_8]
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
sub_6ED93180	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED931F0	proc near		; DATA XREF: sub_6ED93180+27o

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A412
		mov	[ebp+var_18], offset sub_6ED93280
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	ecx, [ebp+arg_4]
		test	ecx, ecx
		jz	short loc_6ED93273
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		mov	edx, [ebp+arg_4]
		mov	[edx+8], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		mov	edx, [ebp+arg_4]
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax+8]
		setnz	dl
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+0Ch]
		test	byte ptr [eax+1Ch], 1
		jnz	short loc_6ED93273
		mov	eax, [eax+8]
		cmp	eax, 1
		jz	short loc_6ED93273
		mov	eax, edx
		add	eax, 0Ch
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	sub_6ED93310

loc_6ED93273:				; CODE XREF: sub_6ED931F0+34j
					; sub_6ED931F0+65j ...
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED931F0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED93280	proc near		; DATA XREF: sub_6ED931F0+1Do
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+0Ch]
		add	eax, 8
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED93280	endp


; =============== S U B	R O U T	I N E =======================================


sub_6ED932B0	proc near		; CODE XREF: sub_6ED5D773+145p
					; .text:6ED5E458p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax+8]
		setnz	cl
		test	cl, cl
		jnz	short loc_6ED932D7
		mov	[esp+1Ch+var_18], offset sub_6ED930B0
		mov	eax, [edx]
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_6ED932D7:				; CODE XREF: sub_6ED932B0+12j
		add	esp, 1Ch
		retn
sub_6ED932B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED932E0	proc near		; DATA XREF: sub_6ED59E30+5D5o
					; sub_6ED59E30+C6Co ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	edx, [esp+0Ch+arg_0]
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jz	short loc_6ED932F8
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED932F8:				; CODE XREF: sub_6ED932E0+12j
		mov	eax, [edx+8]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_ZN7QString4freeEPNS_4DataE
		add	esp, 0Ch
		jmp	eax
sub_6ED932E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED93310	proc near		; CODE XREF: sub_6ED59E30+326p
					; sub_6ED59E30+3BBp ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 2Ch
		mov	[esp+2Ch+var_8], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_4], esi
		mov	[esp+2Ch+var_1C], 4
		mov	[esp+2Ch+var_20], 10h
		mov	[esp+2Ch+var_24], offset sub_6ED932E0
		mov	[esp+2Ch+var_28], offset sub_6ED93380
		mov	eax, [ebx]
		mov	[esp+2Ch+var_2C], eax
		call	ds:_ZN9QHashData14detach_helper2EPFvPNS_4NodeEPvEPFvS1_Eii
		mov	edx, [ebx]
		mov	esi, eax
		lock dec dword ptr [edx+8]
		setnz	al
		test	al, al
		jnz	short loc_6ED9336C
		mov	[esp+2Ch+var_28], offset sub_6ED932E0
		mov	eax, [ebx]
		mov	[esp+2Ch+var_2C], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_6ED9336C:				; CODE XREF: sub_6ED93310+47j
		mov	[ebx], esi
		mov	ebx, [esp+2Ch+var_8]
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
sub_6ED93310	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED93380	proc near		; DATA XREF: sub_6ED93310+27o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		mov	edx, [esp+4+arg_4]
		mov	ecx, [esp+4+arg_0]
		test	edx, edx
		jz	short loc_6ED9339F
		mov	eax, [ecx+8]
		mov	[edx+8], eax
		lock inc dword ptr [eax]
		setnz	bl
		mov	eax, [ecx+0Ch]
		mov	[edx+0Ch], eax

loc_6ED9339F:				; CODE XREF: sub_6ED93380+Bj
		pop	ebx
		retn
sub_6ED93380	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED933B0	proc near		; CODE XREF: sub_6ED59E30+8C7p
					; sub_6ED59E30+912p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax+8]
		setnz	cl
		test	cl, cl
		jnz	short loc_6ED933D7
		mov	[esp+1Ch+var_18], offset sub_6ED932E0
		mov	eax, [edx]
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_6ED933D7:				; CODE XREF: sub_6ED933B0+12j
		add	esp, 1Ch
		retn
sub_6ED933B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED933E0	proc near		; CODE XREF: sub_6ED630C0+7B7p
					; sub_6ED630C0+844p ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	ebx, [esp+3Ch+arg_0]
		mov	esi, [ebx]
		mov	eax, [esi+4]
		mov	edi, [esi+8]
		mov	[esp+3Ch+var_3C], ebx
		mov	[esp+3Ch+var_38], eax
		call	ds:_ZN9QListData6detachEi
		mov	[esp+3Ch+var_20], eax
		mov	edx, [ebx]
		mov	ecx, [edx+0Ch]
		lea	ebp, [edx+ecx*4+14h]
		mov	ecx, [edx+8]
		lea	edx, [edx+ecx*4+14h]
		cmp	ebp, edx
		jz	short loc_6ED93438
		lea	esi, [esi+edi*4+14h]
		jmp	short loc_6ED93423
; ---------------------------------------------------------------------------
		align 10h

loc_6ED93420:				; CODE XREF: sub_6ED933E0+56j
		add	esi, 4

loc_6ED93423:				; CODE XREF: sub_6ED933E0+3Cj
		test	edx, edx
		jz	short loc_6ED93431
		mov	ecx, [esi]
		mov	[edx], ecx
		lock inc dword ptr [ecx]
		setnz	al

loc_6ED93431:				; CODE XREF: sub_6ED933E0+45j
		add	edx, 4
		cmp	ebp, edx
		jnz	short loc_6ED93420

loc_6ED93438:				; CODE XREF: sub_6ED933E0+36j
		mov	eax, [esp+3Ch+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED93452
		mov	[esp+3Ch+var_38], eax
		mov	[esp+3Ch+var_3C], ebx
		call	sub_6ED93460

loc_6ED93452:				; CODE XREF: sub_6ED933E0+64j
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_6ED933E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED93460	proc near		; CODE XREF: sub_6ED630C0+B9Cp
					; sub_6ED630C0+BBDp ...

var_2C		= dword	ptr -2Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	edi, [esp+2Ch+arg_4]
		mov	edx, [edi+0Ch]
		lea	eax, [edi+14h]
		lea	ebx, [eax+edx*4]
		mov	edx, [edi+8]
		lea	esi, [eax+edx*4]
		cmp	ebx, esi
		jz	short loc_6ED9349E
		mov	ebp, ds:_ZN7QString4freeEPNS_4DataE

loc_6ED93484:				; CODE XREF: sub_6ED93460+3Cj
		sub	ebx, 4
		mov	eax, [ebx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED9349A
		mov	eax, [ebx]
		mov	[esp+2Ch+var_2C], eax
		call	ebp ; _ZN7QString4freeEPNS_4DataE

loc_6ED9349A:				; CODE XREF: sub_6ED93460+31j
		cmp	esi, ebx
		jnz	short loc_6ED93484

loc_6ED9349E:				; CODE XREF: sub_6ED93460+1Cj
		mov	eax, ds:_Z5qFreePv
		mov	[esp+2Ch+arg_0], edi
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	eax
sub_6ED93460	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED934B0	proc near		; CODE XREF: _ZNK20QXmlNamespaceSupport8prefixesERK7QString+92p
					; _ZNK20QXmlNamespaceSupport8prefixesEv+85p

var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 6Ch
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset dword_6ED9A42C
		mov	[ebp+var_38], offset sub_6ED93630
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	eax, [eax]
		cmp	eax, 1
		jz	loc_6ED935F0
		mov	[ebp+var_20], 7FFFFFFFh
		mov	eax, [edx]
		mov	ecx, [ebp+arg_0]
		mov	edx, [eax+8]
		mov	[esp], ecx
		mov	dword ptr [esp+8], 1
		mov	[ebp+var_58], 0FFFFFFFFh
		lea	edx, [eax+edx*4+14h]
		lea	eax, [ebp+var_20]
		mov	[ebp+var_64], edx
		mov	[esp+4], eax
		call	ds:_ZN9QListData11detach_growEPii
		mov	ebx, [ebp+var_20]
		lea	edi, ds:0[ebx*4]
		mov	[ebp+var_60], eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		mov	esi, [ecx+8]
		lea	eax, [ecx+esi*4+14h]
		lea	edx, [eax+edi]
		cmp	eax, edx
		jz	short loc_6ED9357A
		mov	ebx, [ebp+var_64]
		mov	edi, edx
		jmp	short loc_6ED93553
; ---------------------------------------------------------------------------
		align 10h

loc_6ED93550:				; CODE XREF: sub_6ED934B0+B6j
		add	ebx, 4

loc_6ED93553:				; CODE XREF: sub_6ED934B0+9Cj
		test	eax, eax
		jz	short loc_6ED93561
		mov	ecx, [ebx]
		mov	[eax], ecx
		lock inc dword ptr [ecx]
		setnz	dl

loc_6ED93561:				; CODE XREF: sub_6ED934B0+A5j
		add	eax, 4
		cmp	edi, eax
		jnz	short loc_6ED93550
		mov	eax, [ebp+arg_0]
		mov	ebx, [ebp+var_20]
		mov	ecx, [eax]
		lea	edi, ds:0[ebx*4]
		mov	esi, [ecx+8]

loc_6ED9357A:				; CODE XREF: sub_6ED934B0+95j
		mov	eax, [ecx+0Ch]
		lea	edx, [ecx+esi*4+14h]
		lea	edx, [edx+ebx*4+4]
		lea	eax, [ecx+eax*4+14h]
		cmp	eax, edx
		jz	short loc_6ED935AA
		add	edi, [ebp+var_64]
		jmp	short loc_6ED93595
; ---------------------------------------------------------------------------

loc_6ED93592:				; CODE XREF: sub_6ED934B0+F8j
		add	edi, 4

loc_6ED93595:				; CODE XREF: sub_6ED934B0+E0j
		test	edx, edx
		jz	short loc_6ED935A3
		mov	ecx, [edi]
		mov	[edx], ecx
		lock inc dword ptr [ecx]
		setnz	bl

loc_6ED935A3:				; CODE XREF: sub_6ED934B0+E7j
		add	edx, 4
		cmp	eax, edx
		jnz	short loc_6ED93592

loc_6ED935AA:				; CODE XREF: sub_6ED934B0+DBj
		mov	edx, [ebp+var_60]
		lock dec dword ptr [edx]
		setnz	al
		test	al, al
		jz	short loc_6ED93618

loc_6ED935B7:				; CODE XREF: sub_6ED934B0+17Ej
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	edx, [eax+8]
		lea	eax, [eax+edx*4+14h]
		mov	edx, [ebp+var_20]
		lea	edx, [eax+edx*4]
		test	edx, edx
		jz	short loc_6ED935DA
		mov	ecx, [ebp+arg_4]
		mov	eax, [ecx]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_6ED935DA:				; CODE XREF: sub_6ED934B0+11Bj
					; sub_6ED934B0+166j
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 6Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED935F0:				; CODE XREF: sub_6ED934B0+3Cj
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	[ebp+var_1C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_58], 2
		mov	[esp], ecx
		call	ds:_ZN9QListData6appendEv
		mov	edx, [ebp+var_1C]
		mov	[eax], edx
		jmp	short loc_6ED935DA
; ---------------------------------------------------------------------------

loc_6ED93618:				; CODE XREF: sub_6ED934B0+105j
		mov	ecx, [ebp+arg_0]
		mov	[esp+4], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED93460
		jmp	short loc_6ED935B7
sub_6ED934B0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED93630	proc near		; DATA XREF: sub_6ED934B0+23o
		add	ebp, 18h
		mov	ecx, [ebp-54h]
		cmp	dword ptr [ebp-58h], 1
		mov	[ebp-68h], ecx
		jz	short loc_6ED9365D
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED991C0
		mov	eax, [ebp-68h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED9365D:				; CODE XREF: sub_6ED93630+Dj
		mov	eax, [ebp-68h]
		mov	[esp+0], eax
		call	sub_6ED98EF0
		lea	edx, [ebp-1Ch]
		mov	[esp+0], edx
		mov	dword ptr [ebp-58h], 1
		call	sub_6ED94560
		call	sub_6ED99700
sub_6ED93630	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED93680	proc near		; CODE XREF: _ZN14QXmlAttributes5clearEv+C7p

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 74h
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A5BC
		mov	[ebp+var_18], offset sub_6ED937AB
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		mov	edx, [edx]
		mov	ecx, [edx+8]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_58], edx
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[ebp+var_5C], ecx
		mov	[esp], eax
		call	ds:_ZN9QListData6detachEi
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_50], eax
		mov	eax, [edx]
		mov	edx, [eax+0Ch]
		lea	edx, [eax+edx*4+14h]
		mov	[ebp+var_4C], edx
		mov	edx, [eax+8]
		lea	eax, [eax+edx*4+10h]
		lea	ecx, [eax+4]
		cmp	[ebp+var_4C], ecx
		mov	[ebp+var_54], ecx
		jz	short loc_6ED93777
		mov	ecx, [ebp+var_58]
		add	eax, 8
		mov	edx, [ebp+var_5C]
		mov	[ebp+var_40], eax
		lea	edx, [ecx+edx*4+14h]
		mov	ecx, [ebp+var_54]
		mov	[ebp+var_44], edx
		mov	[ebp+var_48], ecx
		jmp	short loc_6ED93721
; ---------------------------------------------------------------------------

loc_6ED93717:				; CODE XREF: sub_6ED93680+F5j
		add	[ebp+var_44], 4
		add	ecx, 4
		mov	[ebp+var_40], ecx

loc_6ED93721:				; CODE XREF: sub_6ED93680+95j
		mov	dword ptr [esp], 10h ; size_t
		mov	[ebp+var_38], 2
		call	sub_6ED988D0
		mov	ecx, [ebp+var_44]
		mov	edx, [ecx]
		mov	ecx, [edx]
		mov	[eax], ecx
		lock inc dword ptr [ecx]
		setnz	bl
		mov	ecx, [edx+4]
		mov	[eax+4], ecx
		lock inc dword ptr [ecx]
		setnz	bl
		mov	ecx, [edx+8]
		mov	[eax+8], ecx
		lock inc dword ptr [ecx]
		setnz	bl
		mov	edx, [edx+0Ch]
		mov	[eax+0Ch], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+var_48]
		mov	ecx, [ebp+var_40]
		cmp	[ebp+var_4C], ecx
		mov	[edx], eax
		mov	[ebp+var_48], ecx
		jnz	short loc_6ED93717

loc_6ED93777:				; CODE XREF: sub_6ED93680+7Aj
		mov	ecx, [ebp+var_50]
		lock dec dword ptr [ecx]
		setnz	al
		test	al, al
		jnz	short loc_6ED9379A
		mov	eax, [ebp+arg_0]
		mov	[esp+4], ecx
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED93870

loc_6ED9379A:				; CODE XREF: sub_6ED93680+102j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 74h
		pop	ebx
		pop	ebp
		retn
sub_6ED93680	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED937AB	proc near		; DATA XREF: sub_6ED93680+21o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-64h], edx
		jz	short loc_6ED937FA
		cmp	eax, 2
		jz	short loc_6ED93839
		mov	dword ptr [ebp-38h], 0
		call	sub_6ED991C0
		mov	ecx, [ebp-64h]
		mov	[esp+0], ecx
		call	sub_6ED98EF0
		mov	edx, [ebp+8]
		mov	eax, [edx]
		mov	dword ptr [ebp-38h], 3
		mov	[esp+0], eax
		call	ds:_Z5qFreePv
		mov	eax, [ebp-50h]
		mov	ecx, [ebp+8]
		mov	[ecx], eax
		call	sub_6ED99700
; ---------------------------------------------------------------------------

loc_6ED937FA:				; CODE XREF: sub_6ED937AB+Fj
		mov	eax, [ebp-64h]
		mov	[esp+0], eax
		call	sub_6ED98EF0

loc_6ED93805:				; CODE XREF: sub_6ED937AB+70j
					; sub_6ED937AB+8Cj
		mov	eax, [ebp-48h]
		cmp	[ebp-54h], eax
		jz	short loc_6ED93857
		sub	dword ptr [ebp-48h], 4
		mov	edx, [ebp-48h]
		mov	edx, [edx]
		test	edx, edx
		mov	[ebp-60h], edx
		jz	short loc_6ED93805
		mov	[esp+0], edx
		mov	dword ptr [ebp-38h], 1
		call	sub_6ED90860
		mov	ecx, [ebp-60h]
		mov	[esp+0], ecx
		call	sub_6ED988B0
		jmp	short loc_6ED93805
; ---------------------------------------------------------------------------

loc_6ED93839:				; CODE XREF: sub_6ED937AB+14j
		mov	dword ptr [ebp-38h], 0
		call	sub_6ED991C0
		mov	edx, [ebp-64h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED93857:				; CODE XREF: sub_6ED937AB+60j
		mov	dword ptr [ebp-38h], 1
		call	sub_6ED99700
sub_6ED937AB	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED93870	proc near		; CODE XREF: _ZN14QXmlAttributes5clearEv+9Cp
					; _ZN14QXmlAttributes5clearEv+E7p ...

var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED99EC6
		mov	[ebp+var_18], offset sub_6ED939B0
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	ecx, [ebp+arg_4]
		mov	eax, [ebp+arg_4]
		mov	edx, [ecx+0Ch]
		add	eax, 14h
		lea	edx, [eax+edx*4]
		mov	[ebp+var_44], edx
		mov	edx, [ecx+8]
		lea	edx, [eax+edx*4]
		cmp	[ebp+var_44], edx
		mov	[ebp+var_48], edx
		jz	loc_6ED93990
		mov	eax, ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_4C], eax
		mov	[ebp+var_50], eax
		mov	[ebp+var_54], eax
		jmp	short loc_6ED9392B
; ---------------------------------------------------------------------------

loc_6ED938D3:				; CODE XREF: sub_6ED93870+D6j
					; sub_6ED93870+EBj
		mov	ecx, [ebp+var_40]
		mov	eax, [ecx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED93975

loc_6ED938E7:				; CODE XREF: sub_6ED93870+115j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED93960

loc_6ED938F7:				; CODE XREF: sub_6ED93870+103j
		mov	ecx, [ebp+var_40]
		mov	eax, [ecx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED93918
		mov	eax, [ecx]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED93918:				; CODE XREF: sub_6ED93870+94j
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_6ED988B0

loc_6ED93923:				; CODE XREF: sub_6ED93870+C9j
		mov	edx, [ebp+var_44]
		cmp	[ebp+var_48], edx
		jz	short loc_6ED93990

loc_6ED9392B:				; CODE XREF: sub_6ED93870+61j
		sub	[ebp+var_44], 4
		mov	edx, [ebp+var_44]
		mov	edx, [edx]
		test	edx, edx
		mov	[ebp+var_40], edx
		jz	short loc_6ED93923
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED938D3
		mov	ecx, [ebp+var_40]
		mov	eax, [ecx+0Ch]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	[ebp+var_54]
		jmp	loc_6ED938D3
; ---------------------------------------------------------------------------

loc_6ED93960:				; CODE XREF: sub_6ED93870+85j
		mov	ecx, [ebp+var_40]
		mov	eax, [ecx+4]
		mov	[ebp+var_38], 3
		mov	[esp], eax
		call	[ebp+var_4C]
		jmp	short loc_6ED938F7
; ---------------------------------------------------------------------------

loc_6ED93975:				; CODE XREF: sub_6ED93870+71j
		mov	eax, [ecx+8]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	[ebp+var_50]
		jmp	loc_6ED938E7
; ---------------------------------------------------------------------------
		align 10h

loc_6ED93990:				; CODE XREF: sub_6ED93870+4Dj
					; sub_6ED93870+B9j
		mov	ecx, [ebp+arg_4]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], ecx
		call	ds:_Z5qFreePv
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED93870	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED939B0	proc near		; DATA XREF: sub_6ED93870+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-58h], edx
		jz	short loc_6ED939DB
		cmp	eax, 2
		jz	short loc_6ED939F0
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED939DB:				; CODE XREF: sub_6ED939B0+Fj
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 4
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED939F0:				; CODE XREF: sub_6ED939B0+14j
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-58h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED939B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED93A20	proc near		; CODE XREF: _ZN14QXmlAttributes6appendERK7QStringS2_S2_S2_+BBp

var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_1C		= dword	ptr -1Ch
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 0BCh
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset dword_6ED9A5D8
		mov	[ebp+var_38], offset sub_6ED93D0D
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	eax, [eax]
		cmp	eax, 1
		jz	loc_6ED93CA0
		mov	[ebp+var_1C], 7FFFFFFFh
		mov	eax, [edx]
		mov	ecx, [ebp+arg_0]
		mov	edx, [eax+8]
		mov	[esp], ecx
		mov	dword ptr [esp+8], 1
		mov	[ebp+var_58], 0FFFFFFFFh
		lea	edx, [eax+edx*4+14h]
		lea	eax, [ebp+var_1C]
		mov	[ebp+var_8C], edx
		mov	[esp+4], eax
		call	ds:_ZN9QListData11detach_growEPii
		mov	edi, [ebp+arg_0]
		mov	[ebp+var_80], eax
		mov	eax, [edi]
		mov	ecx, [eax+8]
		lea	ebx, [eax+ecx*4+10h]
		lea	edx, [ebx+4]
		mov	[ebp+var_84], edx
		mov	edx, [ebp+var_1C]
		mov	edi, [ebp+var_84]
		lea	esi, ds:0[edx*4]
		add	edi, esi
		cmp	[ebp+var_84], edi
		mov	[ebp+var_7C], edi
		jz	loc_6ED93B60
		mov	eax, [ebp+var_84]
		add	ebx, 8
		mov	edx, [ebp+var_8C]
		mov	[ebp+var_6C], ebx
		mov	[ebp+var_64], eax
		mov	[ebp+var_68], edx
		jmp	short loc_6ED93AF8
; ---------------------------------------------------------------------------

loc_6ED93AF0:				; CODE XREF: sub_6ED93A20+12Cj
		add	[ebp+var_68], 4
		add	[ebp+var_6C], 4

loc_6ED93AF8:				; CODE XREF: sub_6ED93A20+CEj
		mov	dword ptr [esp], 10h ; size_t
		mov	[ebp+var_58], 7
		call	sub_6ED988D0
		mov	ecx, [ebp+var_68]
		mov	edx, [ecx]
		mov	ecx, [edx]
		mov	[eax], ecx
		lock inc dword ptr [ecx]
		setnz	bl
		mov	ecx, [edx+4]
		mov	[eax+4], ecx
		lock inc dword ptr [ecx]
		setnz	bl
		mov	ecx, [edx+8]
		mov	[eax+8], ecx
		lock inc dword ptr [ecx]
		setnz	bl
		mov	edx, [edx+0Ch]
		mov	[eax+0Ch], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edi, [ebp+var_64]
		mov	[edi], eax
		mov	eax, [ebp+var_6C]
		cmp	[ebp+var_7C], eax
		mov	[ebp+var_64], eax
		jnz	short loc_6ED93AF0
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+var_1C]
		mov	eax, [ecx]
		lea	esi, ds:0[edx*4]
		mov	ecx, [eax+8]

loc_6ED93B60:				; CODE XREF: sub_6ED93A20+B0j
		mov	ebx, [eax+0Ch]
		lea	ebx, [eax+ebx*4+14h]
		lea	eax, [eax+ecx*4+14h]
		lea	eax, [eax+edx*4+4]
		cmp	ebx, eax
		mov	[ebp+var_78], ebx
		mov	[ebp+var_88], eax
		jz	short loc_6ED93BF8
		mov	edx, [ebp+var_88]
		add	eax, 4
		add	esi, [ebp+var_8C]
		mov	[ebp+var_60], eax
		mov	[ebp+var_70], esi
		mov	[ebp+var_74], edx
		jmp	short loc_6ED93BA0
; ---------------------------------------------------------------------------

loc_6ED93B96:				; CODE XREF: sub_6ED93A20+1D6j
		add	[ebp+var_70], 4
		add	eax, 4
		mov	[ebp+var_60], eax

loc_6ED93BA0:				; CODE XREF: sub_6ED93A20+174j
		mov	dword ptr [esp], 10h ; size_t
		mov	[ebp+var_58], 5
		call	sub_6ED988D0
		mov	ecx, [ebp+var_70]
		mov	edx, [ecx]
		mov	ecx, [edx]
		mov	[eax], ecx
		lock inc dword ptr [ecx]
		setnz	bl
		mov	ecx, [edx+4]
		mov	[eax+4], ecx
		lock inc dword ptr [ecx]
		setnz	bl
		mov	ecx, [edx+8]
		mov	[eax+8], ecx
		lock inc dword ptr [ecx]
		setnz	bl
		mov	edx, [edx+0Ch]
		mov	[eax+0Ch], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edi, [ebp+var_74]
		mov	edx, [ebp+var_78]
		mov	[edi], eax
		mov	eax, [ebp+var_60]
		cmp	eax, edx
		mov	[ebp+var_74], eax
		jnz	short loc_6ED93B96

loc_6ED93BF8:				; CODE XREF: sub_6ED93A20+15Aj
		mov	edx, [ebp+var_80]
		lock dec dword ptr [edx]
		setnz	al
		test	al, al
		jz	short loc_6ED93C82

loc_6ED93C05:				; CODE XREF: sub_6ED93A20+278j
		mov	edi, [ebp+arg_0]
		mov	eax, [edi]
		mov	edx, [eax+8]
		mov	dword ptr [esp], 10h ; size_t
		mov	[ebp+var_58], 0Dh
		lea	eax, [eax+edx*4+14h]
		mov	edx, [ebp+var_1C]
		lea	edx, [eax+edx*4]
		mov	[ebp+var_90], edx
		call	sub_6ED988D0
		mov	ecx, [ebp+arg_4]
		mov	edx, [ecx]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edi, [ebp+arg_4]
		mov	edx, [edi+4]
		mov	[eax+4], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [edi+8]
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [edi+0Ch]
		mov	[eax+0Ch], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+var_90]
		mov	[edx], eax

loc_6ED93C6C:				; CODE XREF: sub_6ED93A20+2E8j
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 0BCh
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED93C82:				; CODE XREF: sub_6ED93A20+1E3j
		mov	ecx, [ebp+arg_0]
		mov	[esp+4], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_6ED93870
		jmp	loc_6ED93C05
; ---------------------------------------------------------------------------
		align 10h

loc_6ED93CA0:				; CODE XREF: sub_6ED93A20+3Fj
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], edx
		call	ds:_ZN9QListData6appendEv
		mov	dword ptr [esp], 10h ; size_t
		mov	[ebp+var_58], 0Bh
		mov	[ebp+var_94], eax
		call	sub_6ED988D0
		mov	ecx, [ebp+arg_4]
		mov	edx, [ecx]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edi, [ebp+arg_4]
		mov	edx, [edi+4]
		mov	[eax+4], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [edi+8]
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [edi+0Ch]
		mov	[eax+0Ch], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+var_94]
		mov	[edx], eax
		jmp	loc_6ED93C6C
sub_6ED93A20	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED93D0D	proc near		; DATA XREF: sub_6ED93A20+26o
		add	ebp, 18h
		mov	eax, [ebp-58h]
		mov	edi, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-9Ch], edi
		jz	short loc_6ED93D93
		cmp	eax, 2
		jz	loc_6ED93DAB
		cmp	eax, 3
		jz	loc_6ED93EBA
		cmp	eax, 4
		jz	loc_6ED93F9E
		cmp	eax, 5
		nop
		jz	loc_6ED93E7E
		cmp	eax, 6
		jz	loc_6ED93DE1
		cmp	eax, 7
		jz	short loc_6ED93DC0
		cmp	eax, 8
		jz	short loc_6ED93DC0
		cmp	eax, 9
		lea	esi, [esi+0]
		jz	short loc_6ED93DC0
		cmp	eax, 0Ah
		jz	loc_6ED93E4F
		cmp	eax, 0Bh
		xchg	ax, ax
		jz	short loc_6ED93DC0
		cmp	eax, 0Ch
		jz	loc_6ED93E2C
		mov	eax, [ebp-98h]
		mov	dword ptr [ebp-58h], 0
		add	eax, 8
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED93D93:				; CODE XREF: sub_6ED93D0D+12j
		mov	eax, [ebp-98h]
		mov	dword ptr [ebp-58h], 0
		add	eax, 4
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED93DAB:				; CODE XREF: sub_6ED93D0D+17j
		mov	eax, [ebp-98h]
		mov	dword ptr [ebp-58h], 0
		mov	[esp+0], eax
		call	sub_6ED94560

loc_6ED93DC0:				; CODE XREF: sub_6ED93D0D+45j
					; sub_6ED93D0D+4Aj ...
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED991C0
		mov	eax, [ebp-9Ch]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED93DE1:				; CODE XREF: sub_6ED93D0D+3Cj
		mov	edi, [ebp-9Ch]
		mov	[esp+0], edi
		call	sub_6ED98EF0

loc_6ED93DEF:				; CODE XREF: sub_6ED93D0D+FEj
					; sub_6ED93D0D+11Dj
		mov	ecx, [ebp-64h]
		cmp	[ebp-84h], ecx
		jz	short loc_6ED93E72
		sub	dword ptr [ebp-64h], 4
		mov	eax, [ebp-64h]
		mov	eax, [eax]
		test	eax, eax
		mov	[ebp-0A8h], eax
		jz	short loc_6ED93DEF
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 6
		call	sub_6ED90860
		mov	edx, [ebp-0A8h]
		mov	[esp+0], edx
		call	sub_6ED988B0
		jmp	short loc_6ED93DEF
; ---------------------------------------------------------------------------

loc_6ED93E2C:				; CODE XREF: sub_6ED93D0D+68j
		mov	ecx, [ebp-9Ch]
		mov	[esp+0], ecx
		call	sub_6ED98EF0
		mov	edi, [ebp+8]
		mov	eax, [edi]
		sub	dword ptr [eax+0Ch], 1
		mov	dword ptr [ebp-58h], 0Ch
		call	sub_6ED99700
; ---------------------------------------------------------------------------

loc_6ED93E4F:				; CODE XREF: sub_6ED93D0D+58j
		mov	ecx, [ebp-9Ch]
		mov	[esp+0], ecx
		call	sub_6ED98EF0
		mov	edi, [ebp+8]
		mov	eax, [edi]
		sub	dword ptr [eax+0Ch], 1
		mov	dword ptr [ebp-58h], 0Ah
		call	sub_6ED99700
; ---------------------------------------------------------------------------

loc_6ED93E72:				; CODE XREF: sub_6ED93D0D+EBj
		mov	dword ptr [ebp-58h], 6
		call	sub_6ED99700
; ---------------------------------------------------------------------------

loc_6ED93E7E:				; CODE XREF: sub_6ED93D0D+33j
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED991C0
		mov	edi, [ebp-9Ch]
		mov	[esp+0], edi
		call	sub_6ED98EF0
		mov	edx, [ebp+8]
		mov	eax, [edx]
		mov	dword ptr [ebp-58h], 9
		mov	[esp+0], eax
		call	ds:_Z5qFreePv
		mov	edi, [ebp-80h]
		mov	ecx, [ebp+8]
		mov	[ecx], edi
		call	sub_6ED99700
; ---------------------------------------------------------------------------

loc_6ED93EBA:				; CODE XREF: sub_6ED93D0D+20j
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED991C0
		mov	edx, [ebp-9Ch]
		mov	[esp+0], edx
		call	sub_6ED98EF0
		mov	ecx, [ebp+8]
		mov	edx, [ecx]
		mov	eax, [edx+8]
		lea	eax, [edx+eax*4+14h]
		mov	[ebp-0ACh], eax
		mov	eax, [ebp-1Ch]
		mov	edi, [ebp-0ACh]
		lea	eax, [edi+eax*4]
		mov	[ebp-0A0h], eax
		mov	eax, ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp-0B0h], eax
		mov	[ebp-0B4h], eax
		mov	[ebp-0B8h], eax

loc_6ED93F0F:				; CODE XREF: sub_6ED93D0D+22Bj
					; sub_6ED93D0D+28Cj
		mov	eax, [ebp-0A0h]
		cmp	[ebp-0ACh], eax
		jz	loc_6ED9405D
		sub	dword ptr [ebp-0A0h], 4
		mov	edx, [ebp-0A0h]
		mov	edx, [edx]
		test	edx, edx
		mov	[ebp-98h], edx
		jz	short loc_6ED93F0F
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED9403F

loc_6ED93F4B:				; CODE XREF: sub_6ED93D0D+34Bj
		mov	edx, [ebp-98h]
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED94021

loc_6ED93F62:				; CODE XREF: sub_6ED93D0D+32Dj
		mov	edi, [ebp-98h]
		mov	eax, [edi+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_6ED94009

loc_6ED93F79:				; CODE XREF: sub_6ED93D0D+30Fj
		mov	edx, [ebp-98h]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED93FE3

loc_6ED93F8B:				; CODE XREF: sub_6ED93D0D+2EEj
		mov	edi, [ebp-98h]
		mov	[esp+0], edi
		call	sub_6ED988B0
		jmp	loc_6ED93F0F
; ---------------------------------------------------------------------------

loc_6ED93F9E:				; CODE XREF: sub_6ED93D0D+29j
		mov	ecx, [ebp-9Ch]
		mov	[esp+0], ecx
		call	sub_6ED98EF0

loc_6ED93FAC:				; CODE XREF: sub_6ED93D0D+2BBj
					; sub_6ED93D0D+2D4j
		mov	eax, [ebp-74h]
		cmp	[ebp-88h], eax
		jz	short loc_6ED93FFD
		sub	dword ptr [ebp-74h], 4
		mov	edi, [ebp-74h]
		mov	edi, [edi]
		test	edi, edi
		mov	[ebp-0A4h], edi
		jz	short loc_6ED93FAC
		mov	[esp+0], edi
		mov	dword ptr [ebp-58h], 4
		call	sub_6ED90860
		mov	[esp+0], edi
		call	sub_6ED988B0
		jmp	short loc_6ED93FAC
; ---------------------------------------------------------------------------

loc_6ED93FE3:				; CODE XREF: sub_6ED93D0D+27Cj
		mov	ecx, [ebp-98h]
		mov	eax, [ecx]
		mov	dword ptr [ebp-58h], 8
		mov	[esp+0], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED93F8B
; ---------------------------------------------------------------------------

loc_6ED93FFD:				; CODE XREF: sub_6ED93D0D+2A8j
		mov	dword ptr [ebp-58h], 4
		call	sub_6ED99700
; ---------------------------------------------------------------------------

loc_6ED94009:				; CODE XREF: sub_6ED93D0D+266j
		mov	eax, [edi+4]
		mov	dword ptr [ebp-58h], 3
		mov	[esp+0], eax
		call	dword ptr [ebp-0B0h]
		jmp	loc_6ED93F79
; ---------------------------------------------------------------------------

loc_6ED94021:				; CODE XREF: sub_6ED93D0D+24Fj
		mov	ecx, [ebp-98h]
		mov	eax, [ecx+8]
		mov	dword ptr [ebp-58h], 2
		mov	[esp+0], eax
		call	dword ptr [ebp-0B4h]
		jmp	loc_6ED93F62
; ---------------------------------------------------------------------------

loc_6ED9403F:				; CODE XREF: sub_6ED93D0D+238j
		mov	ecx, [ebp-98h]
		mov	eax, [ecx+0Ch]
		mov	dword ptr [ebp-58h], 1
		mov	[esp+0], eax
		call	dword ptr [ebp-0B8h]
		jmp	loc_6ED93F4B
; ---------------------------------------------------------------------------

loc_6ED9405D:				; CODE XREF: sub_6ED93D0D+20Ej
		mov	edx, [ebp+8]
		mov	eax, [edx]
		mov	dword ptr [ebp-58h], 8
		mov	[esp+0], eax
		call	ds:_Z5qFreePv
		mov	edi, [ebp-80h]
		mov	ecx, [ebp+8]
		mov	[ecx], edi
		call	sub_6ED99700
sub_6ED93D0D	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED94080	proc near		; CODE XREF: sub_6ED4D770+234p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], esi
		mov	esi, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_C], ebx
		mov	[esp+1Ch+var_4], edi
		mov	eax, [esi]
		mov	edx, [eax+8]
		mov	[esp+1Ch+var_1C], esi
		lea	edi, [eax+edx*4+14h]
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_18], eax
		call	ds:_ZN9QListData6detachEi
		mov	ebx, eax
		mov	eax, [esi]
		mov	edx, [eax+8]
		mov	ecx, [eax+0Ch]
		lea	edx, [eax+edx*4+14h]
		cmp	edi, edx
		jz	short loc_6ED940DD
		lea	eax, [eax+ecx*4+14h]
		sub	eax, edx
		cmp	eax, 3
		jle	short loc_6ED940DD
		and	eax, 0FFFFFFFCh
		mov	[esp+1Ch+var_14], eax ;	size_t
		mov	[esp+1Ch+var_18], edi ;	void *
		mov	[esp+1Ch+var_1C], edx ;	void *
		call	memcpy

loc_6ED940DD:				; CODE XREF: sub_6ED94080+3Dj
					; sub_6ED94080+48j
		lock dec dword ptr [ebx]
		setnz	al
		test	al, al
		jnz	short loc_6ED940F0
		mov	[esp+1Ch+var_1C], ebx
		call	ds:_Z5qFreePv

loc_6ED940F0:				; CODE XREF: sub_6ED94080+65j
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_6ED94080	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED94100	proc near		; CODE XREF: sub_6ED4D770+182p
					; sub_6ED4D770+1FCp ...

var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_1C		= dword	ptr -1Ch
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 7Ch
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset dword_6ED99E80
		mov	[ebp+var_38], offset sub_6ED94266
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	eax, [eax]
		cmp	eax, 1
		jz	loc_6ED94241
		mov	[ebp+var_1C], 7FFFFFFFh
		mov	eax, [edx]
		mov	ecx, [ebp+arg_0]
		mov	edx, [eax+8]
		mov	[esp], ecx
		mov	dword ptr [esp+8], 1
		mov	[ebp+var_58], 0FFFFFFFFh
		lea	edx, [eax+edx*4+14h]
		lea	eax, [ebp+var_1C]
		mov	[ebp+var_64], edx
		mov	[esp+4], eax
		call	ds:_ZN9QListData11detach_growEPii
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_60], eax
		mov	eax, [edx]
		mov	edx, [ebp+var_1C]
		mov	ecx, [eax+8]
		lea	ebx, ds:0[edx*4]
		lea	esi, [eax+ecx*4+14h]
		cmp	[ebp+var_64], esi
		jz	short loc_6ED9419A
		cmp	ebx, 3
		jg	short loc_6ED94217

loc_6ED9419A:				; CODE XREF: sub_6ED94100+93j
					; sub_6ED94100+13Cj
		add	ebx, [ebp+var_64]
		lea	ecx, [eax+ecx*4+14h]
		mov	esi, [eax+0Ch]
		lea	edx, [ecx+edx*4+4]
		cmp	ebx, edx
		jz	short loc_6ED941B7
		lea	eax, [eax+esi*4+14h]
		sub	eax, edx
		cmp	eax, 3
		jg	short loc_6ED94202

loc_6ED941B7:				; CODE XREF: sub_6ED94100+AAj
					; sub_6ED94100+115j
		mov	edx, [ebp+var_60]
		lock dec dword ptr [edx]
		setnz	al
		test	al, al
		jz	short loc_6ED941F0

loc_6ED941C4:				; CODE XREF: sub_6ED94100+100j
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx]
		mov	edx, [eax+8]
		lea	eax, [eax+edx*4+14h]
		mov	edx, [ebp+arg_4]
		mov	ecx, [edx]
		mov	edx, [ebp+var_1C]
		mov	[eax+edx*4], ecx

loc_6ED941DB:				; CODE XREF: sub_6ED94100+161j
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 7Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED941F0:				; CODE XREF: sub_6ED94100+C2j
		mov	[esp], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_Z5qFreePv
		jmp	short loc_6ED941C4
; ---------------------------------------------------------------------------

loc_6ED94202:				; CODE XREF: sub_6ED94100+B5j
		and	eax, 0FFFFFFFCh
		mov	[esp+8], eax	; size_t
		mov	[esp+4], ebx	; void *
		mov	[esp], edx	; void *
		call	memcpy
		jmp	short loc_6ED941B7
; ---------------------------------------------------------------------------

loc_6ED94217:				; CODE XREF: sub_6ED94100+98j
		mov	ecx, [ebp+var_64]
		mov	[esp+8], ebx	; size_t
		mov	[esp], esi	; void *
		mov	[esp+4], ecx	; void *
		call	memcpy
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+var_1C]
		mov	eax, [ecx]
		lea	ebx, ds:0[edx*4]
		mov	ecx, [eax+8]
		jmp	loc_6ED9419A
; ---------------------------------------------------------------------------

loc_6ED94241:				; CODE XREF: sub_6ED94100+3Cj
		mov	ecx, [ebp+arg_4]
		mov	eax, [ebp+arg_0]
		mov	ecx, [ecx]
		mov	[esp], eax
		mov	[ebp+var_58], 2
		mov	[ebp+var_68], ecx
		call	ds:_ZN9QListData6appendEv
		mov	edx, [ebp+var_68]
		mov	[eax], edx
		jmp	loc_6ED941DB
sub_6ED94100	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED94266	proc near		; DATA XREF: sub_6ED94100+23o
		add	ebp, 18h
		mov	eax, [ebp-54h]
		cmp	dword ptr [ebp-58h], 1
		mov	[ebp-6Ch], eax
		jz	short loc_6ED94293
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED991C0
		mov	edx, [ebp-6Ch]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED94293:				; CODE XREF: sub_6ED94266+Dj
		mov	ecx, [ebp-6Ch]
		mov	[esp+0], ecx
		call	sub_6ED98EF0
		mov	dword ptr [ebp-58h], 1
		call	sub_6ED99700
sub_6ED94266	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED942B0	proc near		; CODE XREF: sub_6ED4488D+19p
					; .text:6ED449D6p ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	edx, [esp+0Ch+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jz	short loc_6ED942C7
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED942C7:				; CODE XREF: sub_6ED942B0+11j
		mov	eax, [edx]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_Z5qFreePv
		add	esp, 0Ch
		jmp	eax
sub_6ED942B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED942E0	proc near		; CODE XREF: sub_6ED5D773+375p
					; .text:6ED5E688p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED94305
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_6ED94305
		mov	eax, [edx]
		mov	[esp+1Ch+var_1C], edx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED95E00

loc_6ED94305:				; CODE XREF: sub_6ED942E0+Bj
					; sub_6ED942E0+15j
		add	esp, 1Ch
		retn
sub_6ED942E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED94310	proc near		; CODE XREF: sub_6ED64390+342p
					; sub_6ED64710+73Fp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_4], edi
		mov	edi, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_C], ebx
		mov	edx, [esi]
		mov	eax, [edx]
		cmp	eax, 1
		jz	short loc_6ED94348
		mov	eax, [edx+4]
		mov	[esp+1Ch+var_14], eax
		mov	eax, [edx+8]
		mov	[esp+1Ch+var_1C], esi
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED96400
		mov	edx, [esi]

loc_6ED94348:				; CODE XREF: sub_6ED94310+1Ej
		mov	ebx, [edx+8]
		sub	ebx, 1
		lea	eax, [ebx+ebx*2]
		shl	eax, 2
		add	eax, [esi]
		lea	ecx, [eax+10h]
		mov	eax, [eax+10h]
		mov	[edi], eax
		mov	eax, [ecx+4]
		mov	[edi+4], eax
		mov	eax, [ecx+8]
		mov	[edi+8], eax
		mov	eax, [edx+4]
		cmp	ebx, eax
		jg	short loc_6ED943A4
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_6ED94380
		mov	edx, eax
		sar	edx, 1
		cmp	ebx, edx
		jl	short loc_6ED943A4
		nop

loc_6ED94380:				; CODE XREF: sub_6ED94310+65j
					; sub_6ED94310+B5j
		mov	[esp+1Ch+var_14], eax
		mov	[esp+1Ch+var_18], ebx
		mov	[esp+1Ch+var_1C], esi
		call	sub_6ED96400
		mov	eax, edi
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn	4
; ---------------------------------------------------------------------------

loc_6ED943A4:				; CODE XREF: sub_6ED94310+5Fj
					; sub_6ED94310+6Dj
		mov	[esp+1Ch+var_10], 1
		mov	[esp+1Ch+var_14], 0Ch
		mov	[esp+1Ch+var_18], ebx
		mov	[esp+1Ch+var_1C], 1Ch
		call	ds:_ZN11QVectorData4growEiiib
		jmp	short loc_6ED94380
sub_6ED94310	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED943D0	proc near		; CODE XREF: sub_6ED64390+297p
					; sub_6ED64F30+1AAp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [ebx]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED943F9
		mov	edx, [eax+4]
		mov	[esp+1Ch+var_14], edx
		mov	eax, [eax+8]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED96400
		mov	eax, [ebx]

loc_6ED943F9:				; CODE XREF: sub_6ED943D0+Fj
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED94418
		mov	edx, [eax+4]
		mov	[esp+1Ch+var_14], edx
		mov	eax, [eax+8]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED96400
		mov	eax, [ebx]

loc_6ED94418:				; CODE XREF: sub_6ED943D0+2Ej
		mov	eax, [eax+8]
		lea	eax, [eax+eax*2-3]
		lea	eax, ds:10h[eax*4]
		add	eax, [ebx]
		add	esp, 18h
		pop	ebx
		retn
sub_6ED943D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED94430	proc near		; CODE XREF: sub_6ED5D773+30Fp
					; .text:6ED5E622p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED94455
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_6ED94455
		mov	eax, [edx]
		mov	[esp+1Ch+var_1C], edx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED96590

loc_6ED94455:				; CODE XREF: sub_6ED94430+Bj
					; sub_6ED94430+15j
		add	esp, 1Ch
		retn
sub_6ED94430	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED94460	proc near		; CODE XREF: _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+40Dp
					; _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+41Bp ...

var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A204
		mov	[ebp+var_28], offset sub_6ED944F8
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, ds:_ZN7QString11shared_nullE
		cmp	[edx], eax
		jz	short loc_6ED944CB
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED944D8

loc_6ED944CB:				; CODE XREF: sub_6ED94460+39j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED944D8:				; CODE XREF: sub_6ED94460+69j
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED94460	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED944F8	proc near		; DATA XREF: sub_6ED94460+1Do
		add	ebp, 8
		mov	edx, [ebp-44h]
		lea	eax, [ebp-0Ch]
		mov	[ebp-50h], edx
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	eax, [ebp-50h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED944F8	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED94530	proc near		; CODE XREF: sub_6ED60E40+100p
					; sub_6ED61480+706p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_18], 0FFFFFFFFh
		mov	eax, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [esp+1Ch+arg_0]
		mov	[edx], eax
		add	esp, 1Ch
		retn
sub_6ED94530	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED94560	proc near		; CODE XREF: sub_6ED441F5+19p
					; sub_6ED441F5+2Ep ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	edx, [esp+0Ch+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jz	short loc_6ED94577
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED94577:				; CODE XREF: sub_6ED94560+11j
		mov	eax, [edx]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_ZN7QString4freeEPNS_4DataE
		add	esp, 0Ch
		jmp	eax
sub_6ED94560	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED94590	proc near		; CODE XREF: sub_6ED64710+62Ep
					; sub_6ED64710+6F5p ...

var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_24], esp
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset word_6ED9A4DA
		mov	[ebp+var_28], offset sub_6ED94630
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	eax, [eax]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZN7QString10fromLatin1EPKci
		lea	eax, [ebp+var_C]
		mov	[ebp+var_48], 1
		sub	esp, 4
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED94620
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED94620:				; CODE XREF: sub_6ED94590+7Bj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn
sub_6ED94590	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED94630	proc near		; DATA XREF: sub_6ED94590+23o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-50h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	eax, [ebp-50h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED94630	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED94660	proc near		; CODE XREF: sub_6ED83560+1EEFp
					; sub_6ED83560+2545p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= word ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_4], esi
		mov	eax, [ebx]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED946C0
		mov	edx, [eax+8]

loc_6ED9467B:				; CODE XREF: sub_6ED94660+68j
		add	edx, 1
		mov	[esp+1Ch+var_1C], edx
		call	ds:_ZN7QString4growEi
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	ds:_ZN7QString7reallocEi
		mov	eax, [ebx]
		mov	edx, [eax+8]

loc_6ED94699:				; CODE XREF: sub_6ED94660+66j
		mov	ecx, [eax+0Ch]
		movzx	esi, [esp+1Ch+arg_4]
		mov	[ecx+edx*2], si
		add	edx, 1
		mov	[eax+8], edx
		mov	eax, ebx
		mov	word ptr [ecx+edx*2], 0
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED946C0:				; CODE XREF: sub_6ED94660+16j
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jl	short loc_6ED94699
		jmp	short loc_6ED9467B
sub_6ED94660	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED946D0	proc near		; CODE XREF: sub_6ED78400+472p
					; sub_6ED78400+4A9p ...

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		push	esi
		push	ebx
		sub	esp, 10h
		mov	edi, [esp+1Ch+arg_4]
		imul	eax, [edi+8], 38h
		lea	esi, [edi+10h]
		lea	ebx, [edi+eax+10h]
		cmp	esi, ebx
		jz	short loc_6ED94702
		sub	ebx, 38h
		lea	esi, [esi+0]

loc_6ED946F0:				; CODE XREF: sub_6ED946D0+30j
		mov	[esp+1Ch+var_1C], ebx
		sub	ebx, 38h
		call	_ZN19QXmlStreamAttributeD1Ev
		lea	eax, [ebx+38h]
		cmp	esi, eax
		jnz	short loc_6ED946F0

loc_6ED94702:				; CODE XREF: sub_6ED946D0+17j
		mov	eax, ds:_ZN11QVectorData4freeEPS_i
		mov	[esp+1Ch+arg_0], edi
		mov	[esp+1Ch+arg_4], 4
		add	esp, 10h
		pop	ebx
		pop	esi
		pop	edi
		jmp	eax
sub_6ED946D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED94720	proc near		; CODE XREF: _ZN20QXmlStreamAttributes6appendERK7QStringS2_+66p
					; _ZN20QXmlStreamAttributes6appendERK7QStringS2_S2_+6Dp ...

var_7C		= byte ptr -7Ch
var_78		= dword	ptr -78h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_40		= byte ptr -40h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 98h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_5C], eax
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		mov	[ebp+var_64], offset sub_6ED997C0
		mov	[ebp+var_60], offset dword_6ED9AA9C
		mov	[ebp+var_58], offset sub_6ED9483C
		mov	[ebp+var_54], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED94811

loc_6ED94762:				; CODE XREF: sub_6ED94720+F7j
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_40]
		mov	[esp], eax
		call	_ZN19QXmlStreamAttributeC1ERKS_
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 38h
		mov	eax, [edx]
		mov	eax, [eax+8]
		mov	dword ptr [esp], 48h
		mov	[ebp+var_78], 3
		add	eax, 1
		mov	[esp+4], eax
		call	ds:_ZN11QVectorData4growEiiib
		mov	edx, [ebp+arg_0]
		mov	[esp+8], eax
		mov	eax, [edx]
		mov	eax, [eax+8]
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_6ED94910
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		imul	edx, [eax+8], 38h
		mov	[ebp+var_78], 2
		lea	eax, [eax+edx+10h]
		lea	edx, [ebp+var_40]
		mov	[esp+4], edx
		mov	[esp], eax
		call	_ZN19QXmlStreamAttributeC1ERKS_
		lea	eax, [ebp+var_40]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	_ZN19QXmlStreamAttributeD1Ev

loc_6ED947FB:				; CODE XREF: sub_6ED94720+11Aj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		add	dword ptr [eax+8], 1
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED94811:				; CODE XREF: sub_6ED94720+3Cj
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jge	loc_6ED94762
		imul	edx, 38h
		mov	[ebp+var_78], 1
		lea	eax, [eax+edx+10h]
		mov	edx, [ebp+arg_4]
		mov	[esp], eax
		mov	[esp+4], edx
		call	_ZN19QXmlStreamAttributeC1ERKS_
		jmp	short loc_6ED947FB
sub_6ED94720	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED9483C	proc near		; DATA XREF: sub_6ED94720+23o
		add	ebp, 8
		mov	eax, [ebp-78h]
		mov	edx, [ebp-74h]
		cmp	eax, 1
		mov	[ebp-80h], edx
		jz	short loc_6ED94861
		cmp	eax, 2
		jz	short loc_6ED94861
		mov	[esp+0], edx
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED94861:				; CODE XREF: sub_6ED9483C+Fj
					; sub_6ED9483C+14j
		lea	eax, [ebp-40h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	_ZN19QXmlStreamAttributeD1Ev
		mov	eax, [ebp-80h]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED9483C	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED94890	proc near		; CODE XREF: sub_6ED7EB70+52Ap
					; sub_6ED83560+3729p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_4]
		mov	edx, [esi]
		mov	eax, [edx+4]
		cmp	eax, ebx
		jl	short loc_6ED948E0
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_6ED948C0
		cmp	ebx, [edx+8]
		jge	short loc_6ED948C0
		mov	edx, eax
		sar	edx, 1
		cmp	ebx, edx
		jl	short loc_6ED948E0
		nop

loc_6ED948C0:				; CODE XREF: sub_6ED94890+20j
					; sub_6ED94890+25j ...
		mov	[esp+1Ch+var_18], ebx
		mov	[esp+1Ch+var_1C], esi
		mov	[esp+1Ch+var_14], eax
		call	sub_6ED94910
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED948E0:				; CODE XREF: sub_6ED94890+1Aj
					; sub_6ED94890+2Dj
		mov	[esp+1Ch+var_10], 0
		mov	[esp+1Ch+var_14], 38h
		mov	[esp+1Ch+var_18], ebx
		mov	[esp+1Ch+var_1C], 48h
		call	ds:_ZN11QVectorData4growEiiib
		jmp	short loc_6ED948C0
sub_6ED94890	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED94910	proc near		; CODE XREF: _ZNK16QXmlStreamReader10attributesEv+35p
					; sub_6ED78400+40Cp ...

var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 8Ch
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9AA80
		mov	[ebp+var_28], offset sub_6ED94BB2
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	eax, [edx+8]
		cmp	eax, [ebp+arg_4]
		mov	[ebp+var_5C], edx
		jle	short loc_6ED94960
		mov	edx, [edx]
		cmp	edx, 1
		jz	loc_6ED94B01

loc_6ED94960:				; CODE XREF: sub_6ED94910+43j
		mov	eax, [ebp+var_5C]

loc_6ED94963:				; CODE XREF: sub_6ED94910+22Aj
		mov	edx, [eax+4]
		cmp	edx, [ebp+arg_8]
		jz	loc_6ED94AD1

loc_6ED9496F:				; CODE XREF: sub_6ED94910+1CCj
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	loc_6ED94B3F
		mov	eax, [ebp+arg_8]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_48], 0FFFFFFFFh
		sub	eax, 1
		imul	eax, 38h
		add	eax, 48h
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	[ebp+var_74], eax
		mov	[ebp+var_60], eax
		mov	[ebp+var_70], eax
		jz	loc_6ED94B8E

loc_6ED949AF:				; CODE XREF: sub_6ED94910+294j
		mov	ecx, [ebp+var_74]
		mov	ebx, [ebp+var_60]
		mov	dword ptr [ecx+8], 0
		mov	[ebp+var_5C], ebx

loc_6ED949BF:				; CODE XREF: sub_6ED94910+279j
					; sub_6ED94BB2+C4j
		mov	ecx, [ebp+var_5C]
		movzx	eax, byte ptr [ecx+0Ch]
		mov	dword ptr [ecx], 1
		mov	ebx, [ebp+arg_8]
		or	eax, 1
		mov	[ecx+0Ch], al
		mov	esi, [ebp+arg_0]
		and	eax, 0FFFFFFFDh
		mov	[ecx+4], ebx
		mov	edx, [esi]
		movzx	edx, byte ptr [edx+0Ch]
		and	edx, 2
		or	eax, edx
		mov	[ecx+0Ch], al
		and	dword ptr [ecx+0Ch], 3

loc_6ED949F0:				; CODE XREF: sub_6ED94910+1D2j
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_5C]
		mov	esi, [ebp+var_70]
		mov	edx, [eax]
		mov	eax, [ecx+8]
		imul	ecx, eax, 38h
		mov	ebx, eax
		lea	ecx, [esi+ecx+10h]
		mov	esi, [ebp+arg_4]
		mov	[ebp+var_58], ecx
		mov	ecx, [edx+8]
		mov	[ebp+var_68], esi
		cmp	esi, ecx
		jle	short loc_6ED94A1A
		mov	[ebp+var_68], ecx

loc_6ED94A1A:				; CODE XREF: sub_6ED94910+105j
		cmp	eax, [ebp+var_68]
		jge	short loc_6ED94A63
		imul	eax, ebx, 38h
		lea	eax, [edx+eax+10h]
		jmp	short loc_6ED94A2B
; ---------------------------------------------------------------------------

loc_6ED94A28:				; CODE XREF: sub_6ED94910+151j
		mov	eax, [ebp+var_64]

loc_6ED94A2B:				; CODE XREF: sub_6ED94910+116j
		mov	ecx, [ebp+var_58]
		lea	edx, [eax+38h]
		mov	[ebp+var_64], edx
		test	ecx, ecx
		jz	short loc_6ED94A4E
		mov	ecx, [ebp+var_58]
		mov	[esp+4], eax
		mov	[ebp+var_48], 2
		mov	[esp], ecx
		call	_ZN19QXmlStreamAttributeC1ERKS_

loc_6ED94A4E:				; CODE XREF: sub_6ED94910+126j
		mov	ebx, [ebp+var_5C]
		add	[ebp+var_58], 38h
		mov	eax, [ebx+8]
		add	eax, 1
		cmp	eax, [ebp+var_68]
		mov	[ebx+8], eax
		jl	short loc_6ED94A28

loc_6ED94A63:				; CODE XREF: sub_6ED94910+10Dj
		cmp	[ebp+arg_4], eax
		jle	short loc_6ED94A97
		mov	esi, [ebp+var_58]
		mov	[ebp+var_54], esi
		xchg	ax, ax

loc_6ED94A70:				; CODE XREF: sub_6ED94910+185j
		mov	edx, [ebp+var_54]
		test	edx, edx
		jz	short loc_6ED94A82
		mov	eax, [ebp+var_54]
		mov	[esp], eax
		call	_ZN19QXmlStreamAttributeC1Ev

loc_6ED94A82:				; CODE XREF: sub_6ED94910+165j
		mov	edx, [ebp+var_5C]
		add	[ebp+var_54], 38h
		mov	eax, [edx+8]
		add	eax, 1
		cmp	eax, [ebp+arg_4]
		mov	[edx+8], eax
		jl	short loc_6ED94A70

loc_6ED94A97:				; CODE XREF: sub_6ED94910+156j
		mov	ebx, [ebp+var_5C]
		mov	esi, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		mov	[ebx+8], esi
		mov	eax, [edx]
		cmp	eax, ebx
		jz	short loc_6ED94ABB
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED94AE7

loc_6ED94AB3:				; CODE XREF: sub_6ED94910+1EFj
		mov	esi, [ebp+var_5C]
		mov	ebx, [ebp+arg_0]
		mov	[ebx], esi

loc_6ED94ABB:				; CODE XREF: sub_6ED94910+197j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 8Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED94AD1:				; CODE XREF: sub_6ED94910+59j
		mov	ecx, [eax]
		mov	ebx, [ebp+var_5C]
		cmp	ecx, 1
		mov	[ebp+var_70], ebx
		jnz	loc_6ED9496F
		jmp	loc_6ED949F0
; ---------------------------------------------------------------------------

loc_6ED94AE7:				; CODE XREF: sub_6ED94910+1A1j
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_6ED946D0
		jmp	short loc_6ED94AB3
; ---------------------------------------------------------------------------

loc_6ED94B01:				; CODE XREF: sub_6ED94910+4Aj
		mov	ebx, [ebp+arg_0]
		imul	eax, 38h
		mov	ebx, [ebx]
		add	eax, 10h
		add	eax, ebx
		mov	[ebp+var_6C], eax

loc_6ED94B11:				; CODE XREF: sub_6ED94910+228j
		sub	[ebp+var_6C], 38h
		mov	esi, [ebp+var_6C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], esi
		call	_ZN19QXmlStreamAttributeD1Ev
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_4]
		mov	eax, [edx]
		sub	dword ptr [eax+8], 1
		mov	eax, [edx]
		cmp	[eax+8], ecx
		jg	short loc_6ED94B11
		jmp	loc_6ED94963
; ---------------------------------------------------------------------------

loc_6ED94B3F:				; CODE XREF: sub_6ED94910+64j
		sub	edx, 1
		imul	edx, 38h
		mov	dword ptr [esp+0Ch], 4
		mov	[esp], eax
		mov	[ebp+var_48], 4
		add	edx, 48h
		mov	[esp+8], edx
		mov	edx, [ebp+arg_8]
		sub	edx, 1
		imul	edx, 38h
		add	edx, 48h
		mov	[esp+4], edx
		call	ds:_ZN11QVectorData10reallocateEPS_iii
		test	eax, eax
		mov	[ebp+var_78], eax
		jz	short loc_6ED94BA9

loc_6ED94B7B:				; CODE XREF: sub_6ED94910+2A0j
		mov	eax, [ebp+var_78]
		mov	esi, [ebp+arg_0]
		mov	[esi], eax
		mov	[ebp+var_70], eax
		mov	[ebp+var_5C], eax
		jmp	loc_6ED949BF
; ---------------------------------------------------------------------------

loc_6ED94B8E:				; CODE XREF: sub_6ED94910+99j
		mov	esi, ds:_Z9qBadAllocv
		call	esi ; _Z9qBadAllocv
		mov	eax, [ebp+var_74]
		mov	[ebp+var_60], eax
		call	esi ; _Z9qBadAllocv
		mov	edx, [ebp+var_74]
		mov	[ebp+var_70], edx
		jmp	loc_6ED949AF
; ---------------------------------------------------------------------------

loc_6ED94BA9:				; CODE XREF: sub_6ED94910+269j
		call	ds:_Z9qBadAllocv
		nop
		jmp	short loc_6ED94B7B
sub_6ED94910	endp


; =============== S U B	R O U T	I N E =======================================


sub_6ED94BB2	proc near		; DATA XREF: sub_6ED94910+26o

arg_0		= dword	ptr  4

		add	ebp, 18h
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-7Ch], edx
		mov	edx, [ebp-40h]
		jz	short loc_6ED94BEE
		cmp	eax, 2
		jz	short loc_6ED94C2E
		cmp	eax, 3
		jz	short loc_6ED94C17
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED991C0
		mov	ecx, [ebp-7Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED94BEE:				; CODE XREF: sub_6ED94BB2+12j
		mov	ecx, [ebp-7Ch]
		mov	[esp+0], ecx
		call	sub_6ED98EF0
		mov	ebx, [ebp-70h]
		mov	esi, [ebp+8]
		mov	dword ptr [ebp-48h], 1
		mov	[esp+arg_0], ebx
		mov	[esp+0], esi
		call	sub_6ED946D0
		call	sub_6ED99700
; ---------------------------------------------------------------------------

loc_6ED94C17:				; CODE XREF: sub_6ED94BB2+1Cj
		cmp	edx, 2
		jz	short loc_6ED94C4C
		mov	edx, [ebp-7Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED94C2E:				; CODE XREF: sub_6ED94BB2+17j
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED991C0
		mov	eax, [ebp-7Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED94C4C:				; CODE XREF: sub_6ED94BB2+68j
		mov	ecx, [ebp-7Ch]
		mov	[esp+0], ecx
		call	sub_6ED98EF0
		mov	ebx, [ebp+8]
		mov	esi, [ebp+10h]
		mov	eax, [ebx]
		cmp	[eax+4], esi
		jl	short loc_6ED94C7B
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED991C0
		mov	edx, [ebp-5Ch]
		mov	[ebp-70h], edx
		jmp	loc_6ED949BF
; ---------------------------------------------------------------------------

loc_6ED94C7B:				; CODE XREF: sub_6ED94BB2+B0j
		mov	dword ptr [ebp-48h], 3
		call	sub_6ED99700
sub_6ED94BB2	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED94C90	proc near		; CODE XREF: sub_6ED7C5C0+466p
					; .text:6ED7E346p ...

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		push	esi
		push	ebx
		sub	esp, 10h
		mov	edi, [esp+1Ch+arg_4]
		mov	eax, [edi+8]
		lea	esi, [edi+10h]
		shl	eax, 6
		lea	ebx, [eax+edi+10h]
		cmp	esi, ebx
		jz	short loc_6ED94CC2
		sub	ebx, 40h
		xchg	ax, ax

loc_6ED94CB0:				; CODE XREF: sub_6ED94C90+30j
		mov	[esp+1Ch+var_1C], ebx
		sub	ebx, 40h
		call	_ZN27QXmlStreamEntityDeclarationD1Ev
		lea	eax, [ebx+40h]
		cmp	esi, eax
		jnz	short loc_6ED94CB0

loc_6ED94CC2:				; CODE XREF: sub_6ED94C90+19j
		mov	eax, ds:_ZN11QVectorData4freeEPS_i
		mov	[esp+1Ch+arg_0], edi
		mov	[esp+1Ch+arg_4], 4
		add	esp, 10h
		pop	ebx
		pop	esi
		pop	edi
		jmp	eax
sub_6ED94C90	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED94CE0	proc near		; CODE XREF: sub_6ED74AB0+41Bp
					; sub_6ED74AB0+7D6p ...

var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 8Ch
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A9D8
		mov	[ebp+var_28], offset sub_6ED94F8A
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	eax, [edx+8]
		cmp	eax, [ebp+arg_4]
		mov	[ebp+var_5C], edx
		jle	short loc_6ED94D30
		mov	edx, [edx]
		cmp	edx, 1
		jz	loc_6ED94ED7

loc_6ED94D30:				; CODE XREF: sub_6ED94CE0+43j
		mov	eax, [ebp+var_5C]

loc_6ED94D33:				; CODE XREF: sub_6ED94CE0+239j
		mov	edx, [eax+4]
		cmp	edx, [ebp+arg_8]
		jz	loc_6ED94EA7

loc_6ED94D3F:				; CODE XREF: sub_6ED94CE0+1D2j
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	loc_6ED94F1E
		mov	eax, [ebp+arg_8]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_48], 0FFFFFFFFh
		shl	eax, 6
		add	eax, 10h
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	[ebp+var_74], eax
		mov	[ebp+var_60], eax
		mov	[ebp+var_70], eax
		jz	loc_6ED94F67

loc_6ED94D7C:				; CODE XREF: sub_6ED94CE0+29Dj
		mov	ecx, [ebp+var_74]
		mov	ebx, [ebp+var_60]
		mov	dword ptr [ecx+8], 0
		mov	[ebp+var_5C], ebx

loc_6ED94D8C:				; CODE XREF: sub_6ED94CE0+282j
					; sub_6ED94F8A+C5j
		mov	ecx, [ebp+var_5C]
		movzx	eax, byte ptr [ecx+0Ch]
		mov	dword ptr [ecx], 1
		mov	ebx, [ebp+arg_8]
		or	eax, 1
		mov	[ecx+0Ch], al
		mov	esi, [ebp+arg_0]
		and	eax, 0FFFFFFFDh
		mov	[ecx+4], ebx
		mov	edx, [esi]
		movzx	edx, byte ptr [edx+0Ch]
		and	edx, 2
		or	eax, edx
		mov	[ecx+0Ch], al
		and	dword ptr [ecx+0Ch], 3

loc_6ED94DBD:				; CODE XREF: sub_6ED94CE0+1D8j
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_5C]
		mov	esi, [ebp+var_70]
		mov	edx, [eax]
		mov	eax, [ecx+8]
		mov	ecx, eax
		mov	ebx, eax
		shl	ecx, 6
		lea	ecx, [ecx+esi+10h]
		mov	esi, [ebp+arg_4]
		mov	[ebp+var_58], ecx
		mov	ecx, [edx+8]
		mov	[ebp+var_68], esi
		cmp	esi, ecx
		jle	short loc_6ED94DE9
		mov	[ebp+var_68], ecx

loc_6ED94DE9:				; CODE XREF: sub_6ED94CE0+104j
		cmp	eax, [ebp+var_68]
		jge	short loc_6ED94E3B
		mov	eax, ebx
		shl	eax, 6
		lea	eax, [eax+edx+10h]
		jmp	short loc_6ED94E03
; ---------------------------------------------------------------------------
		align 10h

loc_6ED94E00:				; CODE XREF: sub_6ED94CE0+159j
		mov	eax, [ebp+var_64]

loc_6ED94E03:				; CODE XREF: sub_6ED94CE0+117j
		mov	edi, [ebp+var_58]
		lea	edx, [eax+40h]
		mov	[ebp+var_64], edx
		test	edi, edi
		jz	short loc_6ED94E26
		mov	ecx, [ebp+var_58]
		mov	[esp+4], eax
		mov	[ebp+var_48], 2
		mov	[esp], ecx
		call	_ZN27QXmlStreamEntityDeclarationC1ERKS_

loc_6ED94E26:				; CODE XREF: sub_6ED94CE0+12Ej
		mov	ebx, [ebp+var_5C]
		add	[ebp+var_58], 40h
		mov	eax, [ebx+8]
		add	eax, 1
		cmp	eax, [ebp+var_68]
		mov	[ebx+8], eax
		jl	short loc_6ED94E00

loc_6ED94E3B:				; CODE XREF: sub_6ED94CE0+10Cj
		cmp	[ebp+arg_4], eax
		jle	short loc_6ED94E6D
		mov	esi, [ebp+var_58]
		mov	[ebp+var_54], esi

loc_6ED94E46:				; CODE XREF: sub_6ED94CE0+18Bj
		mov	esi, [ebp+var_54]
		test	esi, esi
		jz	short loc_6ED94E58
		mov	eax, [ebp+var_54]
		mov	[esp], eax
		call	_ZN27QXmlStreamEntityDeclarationC1Ev

loc_6ED94E58:				; CODE XREF: sub_6ED94CE0+16Bj
		mov	edx, [ebp+var_5C]
		add	[ebp+var_54], 40h
		mov	eax, [edx+8]
		add	eax, 1
		cmp	eax, [ebp+arg_4]
		mov	[edx+8], eax
		jl	short loc_6ED94E46

loc_6ED94E6D:				; CODE XREF: sub_6ED94CE0+15Ej
		mov	ebx, [ebp+var_5C]
		mov	esi, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		mov	[ebx+8], esi
		mov	eax, [edx]
		cmp	eax, ebx
		jz	short loc_6ED94E91
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED94EBD

loc_6ED94E89:				; CODE XREF: sub_6ED94CE0+1F5j
		mov	esi, [ebp+var_5C]
		mov	ebx, [ebp+arg_0]
		mov	[ebx], esi

loc_6ED94E91:				; CODE XREF: sub_6ED94CE0+19Dj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 8Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED94EA7:				; CODE XREF: sub_6ED94CE0+59j
		mov	ecx, [eax]
		mov	ebx, [ebp+var_5C]
		cmp	ecx, 1
		mov	[ebp+var_70], ebx
		jnz	loc_6ED94D3F
		jmp	loc_6ED94DBD
; ---------------------------------------------------------------------------

loc_6ED94EBD:				; CODE XREF: sub_6ED94CE0+1A7j
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_6ED94C90
		jmp	short loc_6ED94E89
; ---------------------------------------------------------------------------

loc_6ED94ED7:				; CODE XREF: sub_6ED94CE0+4Aj
		mov	ebx, [ebp+arg_0]
		lea	eax, ds:1[eax*4]
		shl	eax, 4
		mov	ebx, [ebx]
		add	eax, ebx
		mov	[ebp+var_6C], eax
		nop
		lea	esi, [esi+0]

loc_6ED94EF0:				; CODE XREF: sub_6ED94CE0+237j
		sub	[ebp+var_6C], 40h
		mov	esi, [ebp+var_6C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], esi
		call	_ZN27QXmlStreamEntityDeclarationD1Ev
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_4]
		mov	eax, [edx]
		sub	dword ptr [eax+8], 1
		mov	eax, [edx]
		cmp	[eax+8], ecx
		jg	short loc_6ED94EF0
		jmp	loc_6ED94D33
; ---------------------------------------------------------------------------

loc_6ED94F1E:				; CODE XREF: sub_6ED94CE0+64j
		shl	edx, 6
		add	edx, 10h
		mov	[esp+8], edx
		mov	edx, [ebp+arg_8]
		mov	dword ptr [esp+0Ch], 4
		mov	[esp], eax
		mov	[ebp+var_48], 4
		shl	edx, 6
		add	edx, 10h
		mov	[esp+4], edx
		call	ds:_ZN11QVectorData10reallocateEPS_iii
		test	eax, eax
		mov	[ebp+var_78], eax
		jz	short loc_6ED94F82

loc_6ED94F54:				; CODE XREF: sub_6ED94CE0+2A8j
		mov	eax, [ebp+var_78]
		mov	esi, [ebp+arg_0]
		mov	[esi], eax
		mov	[ebp+var_70], eax
		mov	[ebp+var_5C], eax
		jmp	loc_6ED94D8C
; ---------------------------------------------------------------------------

loc_6ED94F67:				; CODE XREF: sub_6ED94CE0+96j
		mov	esi, ds:_Z9qBadAllocv
		call	esi ; _Z9qBadAllocv
		mov	eax, [ebp+var_74]
		mov	[ebp+var_60], eax
		call	esi ; _Z9qBadAllocv
		mov	edx, [ebp+var_74]
		mov	[ebp+var_70], edx
		jmp	loc_6ED94D7C
; ---------------------------------------------------------------------------

loc_6ED94F82:				; CODE XREF: sub_6ED94CE0+272j
		call	ds:_Z9qBadAllocv
		jmp	short loc_6ED94F54
sub_6ED94CE0	endp


; =============== S U B	R O U T	I N E =======================================


sub_6ED94F8A	proc near		; DATA XREF: sub_6ED94CE0+26o

arg_0		= dword	ptr  4

		add	ebp, 18h
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-7Ch], edx
		mov	edx, [ebp-40h]
		jz	short loc_6ED94FC7
		cmp	eax, 2
		jz	short loc_6ED95007
		cmp	eax, 3
		jz	short loc_6ED94FF0
		mov	dword ptr [ebp-48h], 0
		nop
		call	sub_6ED991C0
		mov	ecx, [ebp-7Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED94FC7:				; CODE XREF: sub_6ED94F8A+12j
		mov	ecx, [ebp-7Ch]
		mov	[esp+0], ecx
		call	sub_6ED98EF0
		mov	ebx, [ebp-70h]
		mov	esi, [ebp+8]
		mov	dword ptr [ebp-48h], 1
		mov	[esp+arg_0], ebx
		mov	[esp+0], esi
		call	sub_6ED94C90
		call	sub_6ED99700
; ---------------------------------------------------------------------------

loc_6ED94FF0:				; CODE XREF: sub_6ED94F8A+1Cj
		cmp	edx, 2
		jz	short loc_6ED95025
		mov	edx, [ebp-7Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED95007:				; CODE XREF: sub_6ED94F8A+17j
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED991C0
		mov	eax, [ebp-7Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED95025:				; CODE XREF: sub_6ED94F8A+69j
		mov	ecx, [ebp-7Ch]
		mov	[esp+0], ecx
		call	sub_6ED98EF0
		mov	ebx, [ebp+8]
		mov	esi, [ebp+10h]
		mov	eax, [ebx]
		cmp	[eax+4], esi
		jl	short loc_6ED95054
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED991C0
		mov	edx, [ebp-5Ch]
		mov	[ebp-70h], edx
		jmp	loc_6ED94D8C
; ---------------------------------------------------------------------------

loc_6ED95054:				; CODE XREF: sub_6ED94F8A+B1j
		mov	dword ptr [ebp-48h], 3
		call	sub_6ED99700
sub_6ED94F8A	endp


; =============== S U B	R O U T	I N E =======================================


sub_6ED95060	proc near		; CODE XREF: sub_6ED79C60+145p
					; .text:6ED7B555p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED95085
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_6ED95085
		mov	eax, [edx]
		mov	[esp+1Ch+var_1C], edx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED94C90

loc_6ED95085:				; CODE XREF: sub_6ED95060+Bj
					; sub_6ED95060+15j
		add	esp, 1Ch
		retn
sub_6ED95060	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED95090	proc near		; CODE XREF: sub_6ED7C5C0+411p
					; .text:6ED7E2F1p ...

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		push	esi
		push	ebx
		sub	esp, 10h
		mov	edi, [esp+1Ch+arg_4]
		mov	eax, [edi+8]
		lea	esi, [edi+10h]
		lea	eax, [eax+eax*4]
		lea	ebx, [edi+eax*8+10h]
		cmp	esi, ebx
		jz	short loc_6ED950C2
		sub	ebx, 28h
		xchg	ax, ax

loc_6ED950B0:				; CODE XREF: sub_6ED95090+30j
		mov	[esp+1Ch+var_1C], ebx
		sub	ebx, 28h
		call	_ZN29QXmlStreamNotationDeclarationD1Ev
		lea	eax, [ebx+28h]
		cmp	esi, eax
		jnz	short loc_6ED950B0

loc_6ED950C2:				; CODE XREF: sub_6ED95090+19j
		mov	eax, ds:_ZN11QVectorData4freeEPS_i
		mov	[esp+1Ch+arg_0], edi
		mov	[esp+1Ch+arg_4], 4
		add	esp, 10h
		pop	ebx
		pop	esi
		pop	edi
		jmp	eax
sub_6ED95090	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED950E0	proc near		; CODE XREF: sub_6ED74AB0+A5p
					; sub_6ED74AB0+330p ...

var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 7Ch
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9AA3C
		mov	[ebp+var_28], offset sub_6ED953D2
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	eax, [edx+8]
		cmp	eax, [ebp+arg_4]
		mov	[ebp+var_58], edx
		jle	short loc_6ED9512D
		mov	edx, [edx]
		cmp	edx, 1
		jz	loc_6ED9530E

loc_6ED9512D:				; CODE XREF: sub_6ED950E0+40j
		mov	eax, [ebp+var_58]

loc_6ED95130:				; CODE XREF: sub_6ED950E0+26Bj
		mov	esi, [ebp+arg_8]
		cmp	[eax+4], esi
		jz	loc_6ED952E1

loc_6ED9513C:				; CODE XREF: sub_6ED950E0+20Cj
		mov	eax, [eax]
		cmp	eax, 1
		jz	loc_6ED95350
		mov	esi, [ebp+arg_8]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_48], 0FFFFFFFFh
		lea	eax, [esi+esi*4-5]
		lea	eax, ds:38h[eax*8]
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	[ebp+var_70], eax
		mov	[ebp+var_5C], eax
		mov	[ebp+var_6C], eax
		jz	loc_6ED953AB

loc_6ED9517E:				; CODE XREF: sub_6ED950E0+2E4j
		mov	esi, [ebp+var_70]
		mov	eax, [ebp+var_5C]
		mov	dword ptr [esi+8], 0
		mov	[ebp+var_58], eax

loc_6ED9518E:				; CODE XREF: sub_6ED950E0+2C6j
					; sub_6ED953D2+C1j
		mov	edx, [ebp+var_58]
		movzx	eax, byte ptr [edx+0Ch]
		mov	dword ptr [edx], 1
		mov	ecx, [ebp+arg_8]
		or	eax, 1
		mov	[edx+0Ch], al
		mov	esi, [ebp+arg_0]
		and	eax, 0FFFFFFFDh
		mov	[edx+4], ecx
		mov	edx, [esi]
		movzx	edx, byte ptr [edx+0Ch]
		and	edx, 2
		or	eax, edx
		mov	edx, [ebp+var_58]
		mov	[edx+0Ch], al
		and	dword ptr [edx+0Ch], 3

loc_6ED951C2:				; CODE XREF: sub_6ED950E0+212j
		mov	esi, [ebp+var_58]
		mov	ecx, [ebp+arg_0]
		mov	eax, [esi+8]
		mov	esi, [ebp+var_6C]
		mov	ebx, [ecx]
		lea	ecx, [eax+eax*4]
		mov	edx, eax
		lea	ecx, [esi+ecx*8+10h]
		mov	esi, [ebp+arg_4]
		mov	[ebp+var_54], ecx
		mov	ecx, [ebx+8]
		mov	[ebp+var_64], esi
		cmp	esi, ecx
		jle	short loc_6ED951EC
		mov	[ebp+var_64], ecx

loc_6ED951EC:				; CODE XREF: sub_6ED950E0+107j
		cmp	eax, [ebp+var_64]
		jge	short loc_6ED9523B
		lea	eax, [edx+edx*4]
		lea	eax, [ebx+eax*8+10h]
		jmp	short loc_6ED95203
; ---------------------------------------------------------------------------
		align 10h

loc_6ED95200:				; CODE XREF: sub_6ED950E0+159j
		mov	eax, [ebp+var_60]

loc_6ED95203:				; CODE XREF: sub_6ED950E0+118j
		lea	edx, [eax+28h]
		mov	[ebp+var_60], edx
		mov	edx, [ebp+var_54]
		test	edx, edx
		jz	short loc_6ED95226
		mov	ecx, [ebp+var_54]
		mov	[esp+4], eax
		mov	[ebp+var_48], 2
		mov	[esp], ecx
		call	_ZN29QXmlStreamNotationDeclarationC1ERKS_

loc_6ED95226:				; CODE XREF: sub_6ED950E0+12Ej
		mov	esi, [ebp+var_58]
		add	[ebp+var_54], 28h
		mov	eax, [esi+8]
		add	eax, 1
		cmp	eax, [ebp+var_64]
		mov	[esi+8], eax
		jl	short loc_6ED95200

loc_6ED9523B:				; CODE XREF: sub_6ED950E0+10Fj
		cmp	[ebp+arg_4], eax
		jle	short loc_6ED952A9
		mov	ecx, ds:_ZN7QString11shared_nullE
		mov	eax, [ebp+var_54]
		mov	esi, [ebp+var_58]
		mov	edi, [ebp+arg_4]
		mov	edx, ecx

loc_6ED95251:				; CODE XREF: sub_6ED950E0+1C7j
		test	eax, eax
		jz	short loc_6ED95299
		mov	[eax], ecx
		lock inc dword ptr [edx]
		setnz	bl
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax+8], 0
		mov	[eax+0Ch], ecx
		lock inc dword ptr [edx]
		setnz	bl
		mov	dword ptr [eax+10h], 0
		mov	dword ptr [eax+14h], 0
		mov	[eax+18h], ecx
		lock inc dword ptr [edx]
		setnz	bl
		mov	dword ptr [eax+1Ch], 0
		mov	dword ptr [eax+20h], 0

loc_6ED95299:				; CODE XREF: sub_6ED950E0+173j
		mov	ebx, [esi+8]
		add	eax, 28h
		add	ebx, 1
		cmp	ebx, edi
		mov	[esi+8], ebx
		jl	short loc_6ED95251

loc_6ED952A9:				; CODE XREF: sub_6ED950E0+15Ej
		mov	eax, [ebp+var_58]
		mov	edx, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		mov	[eax+8], edx
		mov	eax, [ecx]
		cmp	eax, [ebp+var_58]
		jz	short loc_6ED952CE
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED952F7

loc_6ED952C6:				; CODE XREF: sub_6ED950E0+22Cj
		mov	eax, [ebp+var_58]
		mov	esi, [ebp+arg_0]
		mov	[esi], eax

loc_6ED952CE:				; CODE XREF: sub_6ED950E0+1DAj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 7Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED952E1:				; CODE XREF: sub_6ED950E0+56j
		mov	edx, [eax]
		mov	ecx, [ebp+var_58]
		cmp	edx, 1
		mov	[ebp+var_6C], ecx
		jnz	loc_6ED9513C
		jmp	loc_6ED951C2
; ---------------------------------------------------------------------------

loc_6ED952F7:				; CODE XREF: sub_6ED950E0+1E4j
		mov	eax, [ecx]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_6ED95090
		jmp	short loc_6ED952C6
; ---------------------------------------------------------------------------

loc_6ED9530E:				; CODE XREF: sub_6ED950E0+47j
		mov	esi, [ebp+arg_0]
		lea	eax, [eax+eax*4]
		lea	eax, ds:10h[eax*8]
		mov	esi, [esi]
		add	eax, esi
		mov	[ebp+var_68], eax

loc_6ED95322:				; CODE XREF: sub_6ED950E0+269j
		sub	[ebp+var_68], 28h
		mov	eax, [ebp+var_68]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	_ZN29QXmlStreamNotationDeclarationD1Ev
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_4]
		mov	eax, [edx]
		sub	dword ptr [eax+8], 1
		mov	eax, [edx]
		cmp	[eax+8], ecx
		jg	short loc_6ED95322
		jmp	loc_6ED95130
; ---------------------------------------------------------------------------

loc_6ED95350:				; CODE XREF: sub_6ED950E0+61j
		mov	ecx, [ebp+arg_0]
		mov	esi, [ebp+arg_8]
		mov	edx, [ecx]
		mov	dword ptr [esp+0Ch], 4
		mov	eax, [edx+4]
		mov	[esp], edx
		mov	[ebp+var_48], 4
		lea	eax, [eax+eax*4-5]
		lea	eax, ds:38h[eax*8]
		mov	[esp+8], eax
		lea	eax, [esi+esi*4-5]
		lea	eax, ds:38h[eax*8]
		mov	[esp+4], eax
		call	ds:_ZN11QVectorData10reallocateEPS_iii
		test	eax, eax
		mov	[ebp+var_74], eax
		jz	short loc_6ED953C9

loc_6ED95398:				; CODE XREF: sub_6ED950E0+2F0j
		mov	edx, [ebp+var_74]
		mov	eax, [ebp+arg_0]
		mov	[eax], edx
		mov	[ebp+var_6C], edx
		mov	[ebp+var_58], edx
		jmp	loc_6ED9518E
; ---------------------------------------------------------------------------

loc_6ED953AB:				; CODE XREF: sub_6ED950E0+98j
		mov	eax, ds:_Z9qBadAllocv
		mov	[ebp+var_50], eax
		call	eax ; _Z9qBadAllocv
		mov	edx, [ebp+var_70]
		mov	[ebp+var_5C], edx
		call	[ebp+var_50]
		mov	ecx, [ebp+var_70]
		mov	[ebp+var_6C], ecx
		jmp	loc_6ED9517E
; ---------------------------------------------------------------------------

loc_6ED953C9:				; CODE XREF: sub_6ED950E0+2B6j
		call	ds:_Z9qBadAllocv
		nop
		jmp	short loc_6ED95398
sub_6ED950E0	endp


; =============== S U B	R O U T	I N E =======================================


sub_6ED953D2	proc near		; DATA XREF: sub_6ED950E0+23o

arg_0		= dword	ptr  4

		add	ebp, 18h
		mov	eax, [ebp-48h]
		mov	esi, [ebp-44h]
		mov	edx, [ebp-40h]
		cmp	eax, 1
		mov	[ebp-78h], esi
		jz	short loc_6ED9540B
		cmp	eax, 2
		jz	short loc_6ED9544B
		cmp	eax, 3
		jz	short loc_6ED95434
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED991C0
		mov	[esp+0], esi
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED9540B:				; CODE XREF: sub_6ED953D2+12j
		mov	eax, [ebp-78h]
		mov	[esp+0], eax
		call	sub_6ED98EF0
		mov	edx, [ebp-6Ch]
		mov	ecx, [ebp+8]
		mov	dword ptr [ebp-48h], 1
		mov	[esp+arg_0], edx
		mov	[esp+0], ecx
		call	sub_6ED95090
		call	sub_6ED99700
; ---------------------------------------------------------------------------

loc_6ED95434:				; CODE XREF: sub_6ED953D2+1Cj
		cmp	edx, 2
		jz	short loc_6ED95469
		mov	ecx, [ebp-78h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED9544B:				; CODE XREF: sub_6ED953D2+17j
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED991C0
		mov	esi, [ebp-78h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], esi
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED95469:				; CODE XREF: sub_6ED953D2+65j
		mov	esi, [ebp-78h]
		mov	[esp+0], esi
		call	sub_6ED98EF0
		mov	edx, [ebp+8]
		mov	ecx, [ebp+10h]
		mov	eax, [edx]
		cmp	[eax+4], ecx
		jl	short loc_6ED95498
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED991C0
		mov	eax, [ebp-58h]
		mov	[ebp-6Ch], eax
		jmp	loc_6ED9518E
; ---------------------------------------------------------------------------

loc_6ED95498:				; CODE XREF: sub_6ED953D2+ADj
		mov	dword ptr [ebp-48h], 3
		call	sub_6ED99700
sub_6ED953D2	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED954B0	proc near		; CODE XREF: sub_6ED79C60+199p
					; .text:6ED7B5A9p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED954D5
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_6ED954D5
		mov	eax, [edx]
		mov	[esp+1Ch+var_1C], edx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED95090

loc_6ED954D5:				; CODE XREF: sub_6ED954B0+Bj
					; sub_6ED954B0+15j
		add	esp, 1Ch
		retn
sub_6ED954B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED954E0	proc near		; CODE XREF: sub_6ED7C5C0+43Ep
					; .text:6ED7E31Ep ...

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		push	esi
		push	ebx
		sub	esp, 10h
		mov	edi, [esp+1Ch+arg_4]
		imul	eax, [edi+8], 1Ch
		lea	esi, [edi+10h]
		lea	ebx, [edi+eax+10h]
		cmp	esi, ebx
		jz	short loc_6ED95512
		sub	ebx, 1Ch
		lea	esi, [esi+0]

loc_6ED95500:				; CODE XREF: sub_6ED954E0+30j
		mov	[esp+1Ch+var_1C], ebx
		sub	ebx, 1Ch
		call	_ZN30QXmlStreamNamespaceDeclarationD1Ev
		lea	eax, [ebx+1Ch]
		cmp	esi, eax
		jnz	short loc_6ED95500

loc_6ED95512:				; CODE XREF: sub_6ED954E0+17j
		mov	eax, ds:_ZN11QVectorData4freeEPS_i
		mov	[esp+1Ch+arg_0], edi
		mov	[esp+1Ch+arg_4], 4
		add	esp, 10h
		pop	ebx
		pop	esi
		pop	edi
		jmp	eax
sub_6ED954E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED95530	proc near		; CODE XREF: sub_6ED74560+A4p
					; sub_6ED74560+217p ...

var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 7Ch
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9AA08
		mov	[ebp+var_28], offset sub_6ED95802
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	eax, [edx+8]
		cmp	eax, [ebp+arg_4]
		mov	[ebp+var_58], edx
		jle	short loc_6ED9557D
		mov	edx, [edx]
		cmp	edx, 1
		jz	loc_6ED95746

loc_6ED9557D:				; CODE XREF: sub_6ED95530+40j
		mov	eax, [ebp+var_58]

loc_6ED95580:				; CODE XREF: sub_6ED95530+24Fj
		mov	esi, [ebp+arg_8]
		cmp	[eax+4], esi
		jz	loc_6ED95719

loc_6ED9558C:				; CODE XREF: sub_6ED95530+1F4j
		mov	eax, [eax]
		cmp	eax, 1
		jz	loc_6ED95784
		mov	eax, [ebp+arg_8]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_48], 0FFFFFFFFh
		sub	eax, 1
		imul	eax, 1Ch
		add	eax, 2Ch
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	[ebp+var_70], eax
		mov	[ebp+var_5C], eax
		mov	[ebp+var_6C], eax
		jz	loc_6ED957DB

loc_6ED955CC:				; CODE XREF: sub_6ED95530+2C1j
		mov	ecx, [ebp+var_70]
		mov	esi, [ebp+var_5C]
		mov	dword ptr [ecx+8], 0
		mov	[ebp+var_58], esi

loc_6ED955DC:				; CODE XREF: sub_6ED95530+2A6j
					; sub_6ED95802+B1j
		mov	edx, [ebp+var_58]
		movzx	eax, byte ptr [edx+0Ch]
		mov	dword ptr [edx], 1
		mov	ecx, [ebp+arg_8]
		or	eax, 1
		mov	[edx+0Ch], al
		mov	esi, [ebp+arg_0]
		and	eax, 0FFFFFFFDh
		mov	[edx+4], ecx
		mov	edx, [esi]
		movzx	edx, byte ptr [edx+0Ch]
		and	edx, 2
		or	eax, edx
		mov	edx, [ebp+var_58]
		mov	[edx+0Ch], al
		and	dword ptr [edx+0Ch], 3

loc_6ED95610:				; CODE XREF: sub_6ED95530+1FAj
		mov	esi, [ebp+var_58]
		mov	ecx, [ebp+arg_0]
		mov	eax, [esi+8]
		mov	edx, [ecx]
		mov	esi, [ebp+var_6C]
		imul	ecx, eax, 1Ch
		mov	ebx, eax
		lea	ecx, [esi+ecx+10h]
		mov	esi, [ebp+arg_4]
		mov	[ebp+var_54], ecx
		mov	ecx, [edx+8]
		mov	[ebp+var_64], esi
		cmp	esi, ecx
		jle	short loc_6ED9563A
		mov	[ebp+var_64], ecx

loc_6ED9563A:				; CODE XREF: sub_6ED95530+105j
		cmp	eax, [ebp+var_64]
		jge	short loc_6ED95683
		imul	eax, ebx, 1Ch
		lea	eax, [edx+eax+10h]
		jmp	short loc_6ED9564B
; ---------------------------------------------------------------------------

loc_6ED95648:				; CODE XREF: sub_6ED95530+151j
		mov	eax, [ebp+var_60]

loc_6ED9564B:				; CODE XREF: sub_6ED95530+116j
		lea	edx, [eax+1Ch]
		mov	[ebp+var_60], edx
		mov	edx, [ebp+var_54]
		test	edx, edx
		jz	short loc_6ED9566E
		mov	ecx, [ebp+var_54]
		mov	[esp+4], eax
		mov	[ebp+var_48], 2
		mov	[esp], ecx
		call	_ZN30QXmlStreamNamespaceDeclarationC1ERKS_

loc_6ED9566E:				; CODE XREF: sub_6ED95530+126j
		mov	esi, [ebp+var_58]
		add	[ebp+var_54], 1Ch
		mov	eax, [esi+8]
		add	eax, 1
		cmp	eax, [ebp+var_64]
		mov	[esi+8], eax
		jl	short loc_6ED95648

loc_6ED95683:				; CODE XREF: sub_6ED95530+10Dj
		cmp	[ebp+arg_4], eax
		jle	short loc_6ED956E1
		mov	ecx, ds:_ZN7QString11shared_nullE
		mov	eax, [ebp+var_54]
		mov	esi, [ebp+var_58]
		mov	edi, [ebp+arg_4]
		mov	edx, ecx
		lea	esi, [esi+0]

loc_6ED956A0:				; CODE XREF: sub_6ED95530+1AFj
		test	eax, eax
		jz	short loc_6ED956D1
		mov	[eax], ecx
		lock inc dword ptr [edx]
		setnz	bl
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax+8], 0
		mov	[eax+0Ch], ecx
		lock inc dword ptr [edx]
		setnz	bl
		mov	dword ptr [eax+10h], 0
		mov	dword ptr [eax+14h], 0

loc_6ED956D1:				; CODE XREF: sub_6ED95530+172j
		mov	ebx, [esi+8]
		add	eax, 1Ch
		add	ebx, 1
		cmp	ebx, edi
		mov	[esi+8], ebx
		jl	short loc_6ED956A0

loc_6ED956E1:				; CODE XREF: sub_6ED95530+156j
		mov	eax, [ebp+var_58]
		mov	edx, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		mov	[eax+8], edx
		mov	eax, [ecx]
		cmp	eax, [ebp+var_58]
		jz	short loc_6ED95706
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED9572F

loc_6ED956FE:				; CODE XREF: sub_6ED95530+214j
		mov	eax, [ebp+var_58]
		mov	esi, [ebp+arg_0]
		mov	[esi], eax

loc_6ED95706:				; CODE XREF: sub_6ED95530+1C2j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 7Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED95719:				; CODE XREF: sub_6ED95530+56j
		mov	edx, [eax]
		mov	ecx, [ebp+var_58]
		cmp	edx, 1
		mov	[ebp+var_6C], ecx
		jnz	loc_6ED9558C
		jmp	loc_6ED95610
; ---------------------------------------------------------------------------

loc_6ED9572F:				; CODE XREF: sub_6ED95530+1CCj
		mov	eax, [ecx]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_6ED954E0
		jmp	short loc_6ED956FE
; ---------------------------------------------------------------------------

loc_6ED95746:				; CODE XREF: sub_6ED95530+47j
		mov	esi, [ebp+arg_0]
		imul	eax, 1Ch
		mov	esi, [esi]
		add	eax, 10h
		add	eax, esi
		mov	[ebp+var_68], eax

loc_6ED95756:				; CODE XREF: sub_6ED95530+24Dj
		sub	[ebp+var_68], 1Ch
		mov	eax, [ebp+var_68]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	_ZN30QXmlStreamNamespaceDeclarationD1Ev
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_4]
		mov	eax, [edx]
		sub	dword ptr [eax+8], 1
		mov	eax, [edx]
		cmp	[eax+8], ecx
		jg	short loc_6ED95756
		jmp	loc_6ED95580
; ---------------------------------------------------------------------------

loc_6ED95784:				; CODE XREF: sub_6ED95530+61j
		mov	eax, [ebp+arg_0]
		mov	edx, [eax]
		mov	dword ptr [esp+0Ch], 4
		mov	eax, [edx+4]
		mov	[esp], edx
		mov	[ebp+var_48], 4
		sub	eax, 1
		imul	eax, 1Ch
		add	eax, 2Ch
		mov	[esp+8], eax
		mov	eax, [ebp+arg_8]
		sub	eax, 1
		imul	eax, 1Ch
		add	eax, 2Ch
		mov	[esp+4], eax
		call	ds:_ZN11QVectorData10reallocateEPS_iii
		test	eax, eax
		mov	[ebp+var_74], eax
		jz	short loc_6ED957F6

loc_6ED957C8:				; CODE XREF: sub_6ED95530+2D0j
		mov	ecx, [ebp+var_74]
		mov	edx, [ebp+arg_0]
		mov	[edx], ecx
		mov	[ebp+var_6C], ecx
		mov	[ebp+var_58], ecx
		jmp	loc_6ED955DC
; ---------------------------------------------------------------------------

loc_6ED957DB:				; CODE XREF: sub_6ED95530+96j
		mov	esi, ds:_Z9qBadAllocv
		call	esi ; _Z9qBadAllocv
		mov	eax, [ebp+var_70]
		mov	[ebp+var_5C], eax
		call	esi ; _Z9qBadAllocv
		mov	edx, [ebp+var_70]
		mov	[ebp+var_6C], edx
		jmp	loc_6ED955CC
; ---------------------------------------------------------------------------

loc_6ED957F6:				; CODE XREF: sub_6ED95530+296j
		call	ds:_Z9qBadAllocv
		lea	esi, [esi+0]
		jmp	short loc_6ED957C8
sub_6ED95530	endp


; =============== S U B	R O U T	I N E =======================================


sub_6ED95802	proc near		; DATA XREF: sub_6ED95530+23o

arg_0		= dword	ptr  4

		add	ebp, 18h
		mov	eax, [ebp-48h]
		mov	esi, [ebp-44h]
		mov	edx, [ebp-40h]
		cmp	eax, 1
		mov	[ebp-78h], esi
		jz	short loc_6ED9583B
		cmp	eax, 2
		jz	short loc_6ED9587B
		cmp	eax, 3
		jz	short loc_6ED95864
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED991C0
		mov	[esp+0], esi
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED9583B:				; CODE XREF: sub_6ED95802+12j
		mov	eax, [ebp-78h]
		mov	[esp+0], eax
		call	sub_6ED98EF0
		mov	edx, [ebp-6Ch]
		mov	ecx, [ebp+8]
		mov	dword ptr [ebp-48h], 1
		mov	[esp+arg_0], edx
		mov	[esp+0], ecx
		call	sub_6ED954E0
		call	sub_6ED99700
; ---------------------------------------------------------------------------

loc_6ED95864:				; CODE XREF: sub_6ED95802+1Cj
		cmp	edx, 2
		jz	short loc_6ED95889

loc_6ED95869:				; CODE XREF: sub_6ED95802+85j
		mov	esi, [ebp-78h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], esi
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED9587B:				; CODE XREF: sub_6ED95802+17j
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED991C0
		jmp	short loc_6ED95869
; ---------------------------------------------------------------------------

loc_6ED95889:				; CODE XREF: sub_6ED95802+65j
		mov	eax, [ebp-78h]
		mov	[esp+0], eax
		call	sub_6ED98EF0
		mov	edx, [ebp+8]
		mov	ecx, [ebp+10h]
		mov	eax, [edx]
		cmp	[eax+4], ecx
		jl	short loc_6ED958B8
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED991C0
		mov	eax, [ebp-58h]
		mov	[ebp-6Ch], eax
		jmp	loc_6ED955DC
; ---------------------------------------------------------------------------

loc_6ED958B8:				; CODE XREF: sub_6ED95802+9Dj
		mov	dword ptr [ebp-48h], 3
		call	sub_6ED99700
sub_6ED95802	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED958D0	proc near		; CODE XREF: sub_6ED79C60+17Fp
					; .text:6ED7B58Fp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED958F5
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_6ED958F5
		mov	eax, [edx]
		mov	[esp+1Ch+var_1C], edx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED954E0

loc_6ED958F5:				; CODE XREF: sub_6ED958D0+Bj
					; sub_6ED958D0+15j
		add	esp, 1Ch
		retn
sub_6ED958D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED95900	proc near		; CODE XREF: _ZN20QXmlNamespaceSupportD1Ev+8Bp
					; sub_6ED59CE2+2Fp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		push	esi
		push	ebx
		sub	esp, 10h
		mov	edi, [esp+1Ch+arg_4]
		mov	eax, [edi+8]
		lea	esi, [edi+10h]
		lea	ebx, [edi+eax*4+10h]

loc_6ED95914:				; CODE XREF: sub_6ED95900+1Fj
					; sub_6ED95900+2Aj
		cmp	ebx, esi
		jz	short loc_6ED9593E

loc_6ED95918:				; CODE XREF: sub_6ED95900+3Cj
		sub	ebx, 4
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_6ED95914
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED95914
		mov	eax, [ebx]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_6ED92800
		cmp	ebx, esi
		jnz	short loc_6ED95918

loc_6ED9593E:				; CODE XREF: sub_6ED95900+16j
		mov	eax, ds:_ZN11QVectorData4freeEPS_i
		mov	[esp+1Ch+arg_0], edi
		mov	[esp+1Ch+arg_4], 4
		add	esp, 10h
		pop	ebx
		pop	esi
		pop	edi
		jmp	eax
sub_6ED95900	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED95960	proc near		; CODE XREF: _ZN20QXmlNamespaceSupport11pushContextEv+13p

var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_1C		= dword	ptr -1Ch
var_18		= byte ptr -18h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_18]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_C], ebx
		mov	[ebp+var_8], esi
		mov	[ebp+var_4], edi
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset word_6ED9A476
		mov	[ebp+var_38], offset sub_6ED95AF1
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED95A90

loc_6ED959A8:				; CODE XREF: sub_6ED95960+136j
		mov	ecx, [ebp+arg_4]
		mov	eax, [ecx]
		mov	[ebp+var_1C], eax
		lock inc dword ptr [eax+34h]
		setnz	dl
		mov	eax, [ebp+var_1C]
		test	byte ptr [eax+44h], 2
		jnz	short loc_6ED959DA
		mov	eax, [eax+34h]
		cmp	eax, 1
		jz	short loc_6ED959DA
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_6ED925B0

loc_6ED959DA:				; CODE XREF: sub_6ED95960+5Ej
					; sub_6ED95960+66j
		mov	ebx, [ebp+arg_0]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 4
		mov	eax, [ebx]
		mov	eax, [eax+8]
		mov	dword ptr [esp], 14h
		mov	[ebp+var_58], 3
		add	eax, 1
		mov	[esp+4], eax
		call	ds:_ZN11QVectorData4growEiiib
		mov	[esp+8], eax
		mov	eax, [ebx]
		mov	eax, [eax+8]
		mov	[esp], ebx
		mov	[esp+4], eax
		call	sub_6ED95B40
		mov	eax, [ebx]
		mov	edx, [ebp+var_1C]
		mov	ecx, [eax+8]
		add	ecx, 4
		mov	[eax+ecx*4], edx
		lea	edi, [eax+ecx*4]
		lock inc dword ptr [edx+34h]
		setnz	bl
		mov	eax, [eax+ecx*4]
		test	byte ptr [eax+44h], 2
		jnz	short loc_6ED95A5A
		mov	eax, [eax+34h]
		cmp	eax, 1
		jz	short loc_6ED95A5A
		mov	[esp], edi
		mov	[ebp+var_58], 2
		call	sub_6ED925B0

loc_6ED95A5A:				; CODE XREF: sub_6ED95960+E1j
					; sub_6ED95960+E9j
		mov	eax, [ebp+var_1C]
		test	eax, eax
		jz	short loc_6ED95A6C
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED95AD3

loc_6ED95A6C:				; CODE XREF: sub_6ED95960+FFj
					; sub_6ED95960+158j ...
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx]
		add	dword ptr [eax+8], 1
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	ebx, [ebp+var_C]
		mov	esi, [ebp+var_8]
		mov	edi, [ebp+var_4]
		mov	esp, ebp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED95A90:				; CODE XREF: sub_6ED95960+42j
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jge	loc_6ED959A8
		mov	esi, [ebp+arg_4]
		lea	ebx, [edx+4]
		lea	edi, [eax+ebx*4]
		mov	edx, [esi]
		mov	[eax+ebx*4], edx
		lock inc dword ptr [edx+34h]
		setnz	cl
		mov	eax, [eax+ebx*4]
		test	byte ptr [eax+44h], 2
		jnz	short loc_6ED95A6C
		mov	eax, [eax+34h]
		cmp	eax, 1
		jz	short loc_6ED95A6C
		mov	[esp], edi
		mov	[ebp+var_58], 1
		call	sub_6ED925B0
		jmp	short loc_6ED95A6C
; ---------------------------------------------------------------------------

loc_6ED95AD3:				; CODE XREF: sub_6ED95960+10Aj
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		call	sub_6ED92800
		jmp	loc_6ED95A6C
sub_6ED95960	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED95AF1	proc near		; DATA XREF: sub_6ED95960+29o
		add	ebp, 18h
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-60h], edx
		jz	short loc_6ED95B16
		cmp	eax, 2
		jz	short loc_6ED95B16
		mov	[esp+0], edx
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED95B16:				; CODE XREF: sub_6ED95AF1+Fj
					; sub_6ED95AF1+14j
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED92880
		mov	esi, [ebp-60h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], esi
		call	_Unwind_SjLj_Resume
sub_6ED95AF1	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED95B40	proc near		; CODE XREF: _ZN20QXmlNamespaceSupport10popContextEv+F0p
					; _ZN20QXmlNamespaceSupport10popContextEv+196p	...

var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 7Ch
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A458
		mov	[ebp+var_28], offset sub_6ED95DA6
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	eax, [edx+8]
		cmp	eax, [ebp+arg_4]
		mov	[ebp+var_5C], edx
		jle	short loc_6ED95B8D
		mov	edx, [edx]
		cmp	edx, 1
		jz	loc_6ED95D31

loc_6ED95B8D:				; CODE XREF: sub_6ED95B40+40j
		mov	eax, [ebp+var_5C]

loc_6ED95B90:				; CODE XREF: sub_6ED95B40+245j
		mov	ecx, [ebp+arg_8]
		cmp	[eax+4], ecx
		jz	loc_6ED95D04

loc_6ED95B9C:				; CODE XREF: sub_6ED95B40+1CFj
		mov	edx, [ebp+arg_8]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_48], 0FFFFFFFFh
		lea	eax, ds:10h[edx*4]
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	[ebp+var_6C], eax
		mov	[ebp+var_60], eax
		mov	[ebp+var_70], eax
		jz	loc_6ED95D8A

loc_6ED95BCF:				; CODE XREF: sub_6ED95B40+261j
		mov	eax, [ebp+var_6C]
		mov	dword ptr [eax], 1
		mov	edx, [ebp+arg_8]
		mov	ecx, [ebp+var_6C]
		mov	dword ptr [eax+8], 0
		mov	[eax+4], edx
		movzx	eax, byte ptr [ecx+0Ch]
		or	eax, 1
		mov	[ecx+0Ch], al
		mov	ebx, [ebp+arg_0]
		and	eax, 0FFFFFFFDh
		mov	edx, [ebx]
		movzx	edx, byte ptr [edx+0Ch]
		and	edx, 2
		or	eax, edx
		mov	[ecx+0Ch], al
		and	dword ptr [ecx+0Ch], 3
		mov	eax, [ebp+var_60]
		mov	[ebp+var_5C], eax

loc_6ED95C10:				; CODE XREF: sub_6ED95B40+1D5j
		mov	ebx, [ebp+var_5C]
		mov	ecx, [ebp+arg_0]
		mov	eax, [ebx+8]
		mov	ebx, [ebp+var_70]
		mov	edx, [ecx]
		mov	ecx, eax
		lea	ebx, [ebx+eax*4+10h]
		mov	[ebp+var_54], ebx
		mov	ebx, [edx+8]
		mov	[ebp+var_64], ebx
		mov	ebx, [ebp+arg_4]
		cmp	[ebp+var_64], ebx
		jle	short loc_6ED95C38
		mov	[ebp+var_64], ebx

loc_6ED95C38:				; CODE XREF: sub_6ED95B40+F3j
		cmp	eax, [ebp+var_64]
		jge	short loc_6ED95C95
		lea	ecx, [edx+ecx*4+10h]
		mov	[ebp+var_58], ecx

loc_6ED95C44:				; CODE XREF: sub_6ED95B40+153j
		mov	esi, [ebp+var_54]
		add	[ebp+var_58], 4
		test	esi, esi
		jz	short loc_6ED95C80
		mov	edx, [ebp+var_58]
		mov	ecx, [ebp+var_54]
		mov	eax, [edx-4]
		mov	[ecx], eax
		lock inc dword ptr [eax+34h]
		setnz	dl
		mov	eax, [ecx]
		test	byte ptr [eax+44h], 2
		jnz	short loc_6ED95C80
		mov	eax, [eax+34h]
		cmp	eax, 1
		jz	short loc_6ED95C80
		mov	[esp], ecx
		mov	[ebp+var_48], 2
		call	sub_6ED925B0

loc_6ED95C80:				; CODE XREF: sub_6ED95B40+10Dj
					; sub_6ED95B40+127j ...
		mov	ebx, [ebp+var_5C]
		add	[ebp+var_54], 4
		mov	eax, [ebx+8]
		add	eax, 1
		cmp	[ebp+var_64], eax
		mov	[ebx+8], eax
		jg	short loc_6ED95C44

loc_6ED95C95:				; CODE XREF: sub_6ED95B40+FBj
		cmp	eax, [ebp+arg_4]
		jge	short loc_6ED95CCC
		mov	ecx, ds:_ZN8QMapData11shared_nullE
		mov	eax, [ebp+var_54]
		mov	esi, [ebp+var_5C]
		mov	edi, [ebp+arg_4]
		lea	edx, [ecx+34h]
		lea	esi, [esi+0]

loc_6ED95CB0:				; CODE XREF: sub_6ED95B40+18Aj
		test	eax, eax
		jz	short loc_6ED95CBC
		mov	[eax], ecx
		lock inc dword ptr [edx]
		setnz	bl

loc_6ED95CBC:				; CODE XREF: sub_6ED95B40+172j
		mov	ebx, [esi+8]
		add	eax, 4
		add	ebx, 1
		cmp	ebx, edi
		mov	[esi+8], ebx
		jl	short loc_6ED95CB0

loc_6ED95CCC:				; CODE XREF: sub_6ED95B40+158j
		mov	eax, [ebp+var_5C]
		mov	edx, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		mov	[eax+8], edx
		mov	eax, [ecx]
		cmp	eax, [ebp+var_5C]
		jz	short loc_6ED95CF1
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED95D1A

loc_6ED95CE9:				; CODE XREF: sub_6ED95B40+1EFj
		mov	eax, [ebp+var_5C]
		mov	ebx, [ebp+arg_0]
		mov	[ebx], eax

loc_6ED95CF1:				; CODE XREF: sub_6ED95B40+19Dj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 7Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED95D04:				; CODE XREF: sub_6ED95B40+56j
		mov	eax, [eax]
		mov	ebx, [ebp+var_5C]
		cmp	eax, 1
		mov	[ebp+var_70], ebx
		jnz	loc_6ED95B9C
		jmp	loc_6ED95C10
; ---------------------------------------------------------------------------

loc_6ED95D1A:				; CODE XREF: sub_6ED95B40+1A7j
		mov	eax, [ecx]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_6ED95900
		jmp	short loc_6ED95CE9
; ---------------------------------------------------------------------------

loc_6ED95D31:				; CODE XREF: sub_6ED95B40+47j
		mov	ebx, [ebp+arg_0]
		lea	eax, ds:10h[eax*4]
		mov	ebx, [ebx]
		add	eax, ebx
		mov	[ebp+var_68], eax

loc_6ED95D42:				; CODE XREF: sub_6ED95B40+243j
		sub	[ebp+var_68], 4
		mov	edx, [ebp+var_68]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_6ED95D72
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED95D72
		mov	ecx, [ebp+var_68]
		mov	eax, [ecx]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_6ED92800

loc_6ED95D72:				; CODE XREF: sub_6ED95B40+20Dj
					; sub_6ED95B40+218j
		mov	ebx, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	eax, [ebx]
		sub	dword ptr [eax+8], 1
		mov	eax, [ebx]
		cmp	[eax+8], edx
		jg	short loc_6ED95D42
		jmp	loc_6ED95B90
; ---------------------------------------------------------------------------

loc_6ED95D8A:				; CODE XREF: sub_6ED95B40+89j
		mov	ecx, ds:_Z9qBadAllocv
		mov	[ebp+var_50], ecx
		call	ecx ; _Z9qBadAllocv
		mov	ebx, [ebp+var_6C]
		mov	[ebp+var_60], ebx
		call	[ebp+var_50]
		mov	[ebp+var_70], ebx
		jmp	loc_6ED95BCF
sub_6ED95B40	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED95DA6	proc near		; DATA XREF: sub_6ED95B40+23o

arg_0		= dword	ptr  4

		add	ebp, 18h
		mov	ebx, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-74h], ebx
		jz	short loc_6ED95DD0
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED991C0
		mov	[esp+0], ebx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED95DD0:				; CODE XREF: sub_6ED95DA6+Dj
		mov	eax, [ebp-74h]
		mov	[esp+0], eax
		call	sub_6ED98EF0
		mov	edx, [ebp-70h]
		mov	ecx, [ebp+8]
		mov	dword ptr [ebp-48h], 1
		mov	[esp+arg_0], edx
		mov	[esp+0], ecx
		call	sub_6ED95900
		call	sub_6ED99700
sub_6ED95DA6	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED95E00	proc near		; CODE XREF: sub_6ED5D140+2D5p
					; .text:6ED5DFB5p ...

var_2C		= dword	ptr -2Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	ebp, ds:_ZN7QString4freeEPNS_4DataE
		mov	edi, [esp+2Ch+arg_4]
		mov	eax, [edi+8]
		lea	esi, [edi+10h]
		lea	ebx, [edi+eax*4+10h]
		nop
		lea	esi, [esi+0]

loc_6ED95E20:				; CODE XREF: sub_6ED95E00+31j
		cmp	ebx, esi
		jz	short loc_6ED95E3E

loc_6ED95E24:				; CODE XREF: sub_6ED95E00+3Cj
		sub	ebx, 4
		mov	eax, [ebx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED95E20
		mov	eax, [ebx]
		mov	[esp+2Ch+var_2C], eax
		call	ebp ; _ZN7QString4freeEPNS_4DataE
		cmp	ebx, esi
		jnz	short loc_6ED95E24

loc_6ED95E3E:				; CODE XREF: sub_6ED95E00+22j
		mov	eax, ds:_ZN11QVectorData4freeEPS_i
		mov	[esp+2Ch+arg_0], edi
		mov	[esp+2Ch+arg_4], 4
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	eax
sub_6ED95E00	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED95E60	proc near		; CODE XREF: sub_6ED6FDD0+14Ep
					; sub_6ED6FDD0+1DBp ...

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A49C
		mov	[ebp+var_28], offset sub_6ED95F3F
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+var_C]
		mov	[ebp+var_50], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED95F22

loc_6ED95EB8:				; CODE XREF: sub_6ED95E60+DAj
		mov	edx, [ebp+var_50]
		mov	eax, [ebp+arg_0]
		mov	[eax], edx
		test	byte ptr [edx+0Ch], 1
		jz	short loc_6ED95F00

loc_6ED95EC6:				; CODE XREF: sub_6ED95E60+C0j
		mov	eax, [ebp+var_C]
		test	eax, eax
		jz	short loc_6ED95EF0
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED95EF0
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	sub_6ED95E00

loc_6ED95EF0:				; CODE XREF: sub_6ED95E60+6Bj
					; sub_6ED95E60+75j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED95F00:				; CODE XREF: sub_6ED95E60+64j
		mov	eax, [edx+4]
		mov	[esp+8], eax
		mov	eax, [edx+8]
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_6ED960D0
		jmp	short loc_6ED95EC6
; ---------------------------------------------------------------------------

loc_6ED95F22:				; CODE XREF: sub_6ED95E60+56j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[esp], edx
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		call	sub_6ED95E00
		jmp	loc_6ED95EB8
sub_6ED95E60	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED95F3F	proc near		; DATA XREF: sub_6ED95E60+20o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-0Ch]
		mov	edx, [ebp-44h]
		test	eax, eax
		mov	[ebp-54h], edx
		jz	short loc_6ED95F72
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED95F72
		mov	eax, [ebp-0Ch]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+arg_0], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_6ED95E00

loc_6ED95F72:				; CODE XREF: sub_6ED95F3F+Ej
					; sub_6ED95F3F+18j
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED95F3F	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED95F90	proc near		; CODE XREF: sub_6ED6B5F0+32Fp

var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 64h
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A534
		mov	[ebp+var_28], offset sub_6ED96095
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED96062

loc_6ED95FD0:				; CODE XREF: sub_6ED95F90+D8j
		mov	ebx, [ebp+arg_4]
		mov	eax, [ebx]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 4
		mov	eax, [edx]
		mov	eax, [eax+8]
		mov	dword ptr [esp], 14h
		mov	[ebp+var_48], 1
		add	eax, 1
		mov	[esp+4], eax
		call	ds:_ZN11QVectorData4growEiiib
		mov	ebx, [ebp+arg_0]
		mov	[esp+8], eax
		mov	eax, [ebx]
		mov	eax, [eax+8]
		mov	[esp], ebx
		mov	[esp+4], eax
		call	sub_6ED960D0
		mov	edx, [ebx]
		mov	eax, [ebp+var_C]
		mov	ecx, [edx+8]
		mov	[edx+ecx*4+10h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED96080

loc_6ED96048:				; CODE XREF: sub_6ED95F90+EDj
					; sub_6ED95F90+103j
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx]
		add	dword ptr [eax+8], 1
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 64h
		pop	ebx
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED96062:				; CODE XREF: sub_6ED95F90+3Aj
		mov	ecx, [eax+8]
		cmp	ecx, [eax+4]
		jge	loc_6ED95FD0
		mov	ebx, [ebp+arg_4]
		mov	edx, [ebx]
		mov	[eax+ecx*4+10h], edx
		lock inc dword ptr [edx]
		setnz	al
		jmp	short loc_6ED96048
; ---------------------------------------------------------------------------
		align 10h

loc_6ED96080:				; CODE XREF: sub_6ED95F90+B6j
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED96048
sub_6ED95F90	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED96095	proc near		; DATA XREF: sub_6ED95F90+21o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-50h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	edx, [ebp-50h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_6ED96095	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED960D0	proc near		; CODE XREF: sub_6ED5E6A0+4FBp
					; sub_6ED628B0+64p ...

var_6C		= dword	ptr -6Ch
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 7Ch
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A48C
		mov	[ebp+var_28], offset sub_6ED9635B
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	eax, [edx+8]
		cmp	eax, [ebp+arg_4]
		mov	[ebp+var_58], edx
		jle	short loc_6ED9611D
		mov	edx, [edx]
		cmp	edx, 1
		jz	loc_6ED962A0

loc_6ED9611D:				; CODE XREF: sub_6ED960D0+40j
		mov	eax, [ebp+var_58]

loc_6ED96120:				; CODE XREF: sub_6ED960D0+21Cj
		mov	ecx, [eax+4]
		cmp	ecx, [ebp+arg_8]
		jz	loc_6ED96270

loc_6ED9612C:				; CODE XREF: sub_6ED960D0+1A8j
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED962F1
		mov	ecx, [ebp+arg_8]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_48], 0FFFFFFFFh
		lea	eax, ds:10h[ecx*4]
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	edx, eax
		mov	[ebp+var_60], eax
		mov	[ebp+var_5C], eax
		jz	loc_6ED9633B

loc_6ED96169:				; CODE XREF: sub_6ED960D0+27Ej
		mov	ecx, [ebp+var_60]
		mov	ebx, [ebp+var_5C]
		mov	dword ptr [ecx+8], 0
		mov	[ebp+var_58], ebx

loc_6ED96179:				; CODE XREF: sub_6ED960D0+266j
					; sub_6ED9635B+6Ej
		mov	eax, [ebp+var_58]
		mov	dword ptr [eax], 1
		mov	ecx, [ebp+arg_8]
		mov	ebx, [ebp+var_58]
		mov	[eax+4], ecx
		movzx	eax, byte ptr [ebx+0Ch]
		or	eax, 1
		mov	[ebx+0Ch], al
		mov	ebx, [ebp+arg_0]
		and	eax, 0FFFFFFFDh
		mov	ecx, [ebx]
		movzx	ecx, byte ptr [ecx+0Ch]
		and	ecx, 2
		or	eax, ecx
		mov	ecx, [ebp+var_58]
		mov	[ecx+0Ch], al
		and	dword ptr [ecx+0Ch], 3

loc_6ED961B0:				; CODE XREF: sub_6ED960D0+1AEj
		mov	ebx, [ebp+arg_0]
		mov	ecx, [ebx]
		mov	ebx, [ebp+var_58]
		mov	esi, [ecx+8]
		mov	eax, [ebx+8]
		mov	ebx, [ebp+arg_4]
		mov	edi, eax
		cmp	ebx, esi
		lea	edx, [edx+eax*4+10h]
		jle	short loc_6ED961CD
		mov	ebx, esi

loc_6ED961CD:				; CODE XREF: sub_6ED960D0+F9j
		cmp	eax, ebx
		jge	short loc_6ED96205
		mov	esi, [ebp+var_58]
		lea	ecx, [ecx+edi*4+10h]
		mov	[ebp+var_6C], ebx
		nop
		lea	esi, [esi+0]

loc_6ED961E0:				; CODE XREF: sub_6ED960D0+133j
		add	edx, 4
		add	ecx, 4
		cmp	edx, 4
		jz	short loc_6ED961F7
		mov	eax, [ecx-4]
		mov	[edx-4], eax
		lock inc dword ptr [eax]
		setnz	bl

loc_6ED961F7:				; CODE XREF: sub_6ED960D0+119j
		mov	eax, [esi+8]
		add	eax, 1
		cmp	eax, [ebp+var_6C]
		mov	[esi+8], eax
		jl	short loc_6ED961E0

loc_6ED96205:				; CODE XREF: sub_6ED960D0+FFj
		cmp	[ebp+arg_4], eax
		jle	short loc_6ED96234
		mov	ecx, ds:_ZN7QString11shared_nullE
		mov	esi, [ebp+var_58]
		mov	edi, [ebp+arg_4]
		mov	eax, ecx

loc_6ED96218:				; CODE XREF: sub_6ED960D0+162j
		test	edx, edx
		jz	short loc_6ED96224
		mov	[edx], ecx
		lock inc dword ptr [eax]
		setnz	bl

loc_6ED96224:				; CODE XREF: sub_6ED960D0+14Aj
		mov	ebx, [esi+8]
		add	edx, 4
		add	ebx, 1
		cmp	ebx, edi
		mov	[esi+8], ebx
		jl	short loc_6ED96218

loc_6ED96234:				; CODE XREF: sub_6ED960D0+138j
		mov	eax, [ebp+var_58]
		mov	edx, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		mov	[eax+8], edx
		mov	eax, [ecx]
		cmp	eax, [ebp+var_58]
		jz	short loc_6ED96259
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED96283

loc_6ED96251:				; CODE XREF: sub_6ED960D0+1C8j
		mov	eax, [ebp+var_58]
		mov	ebx, [ebp+arg_0]
		mov	[ebx], eax

loc_6ED96259:				; CODE XREF: sub_6ED960D0+175j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 7Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED96270:				; CODE XREF: sub_6ED960D0+56j
		mov	ebx, [eax]
		mov	edx, [ebp+var_58]
		cmp	ebx, 1
		jnz	loc_6ED9612C
		jmp	loc_6ED961B0
; ---------------------------------------------------------------------------

loc_6ED96283:				; CODE XREF: sub_6ED960D0+17Fj
		mov	eax, [ecx]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_6ED95E00
		jmp	short loc_6ED96251
; ---------------------------------------------------------------------------
		align 10h

loc_6ED962A0:				; CODE XREF: sub_6ED960D0+47j
		mov	ebx, [ebp+arg_0]
		lea	eax, ds:10h[eax*4]
		mov	ebx, [ebx]
		add	eax, ebx
		mov	[ebp+var_54], eax

loc_6ED962B1:				; CODE XREF: sub_6ED960D0+21Aj
		sub	[ebp+var_54], 4
		mov	edx, [ebp+var_54]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED962D9
		mov	ecx, [ebp+var_54]
		mov	eax, [ecx]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_6ED962D9:				; CODE XREF: sub_6ED960D0+1F2j
		mov	ebx, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	eax, [ebx]
		sub	dword ptr [eax+8], 1
		mov	eax, [ebx]
		cmp	[eax+8], edx
		jg	short loc_6ED962B1
		jmp	loc_6ED96120
; ---------------------------------------------------------------------------

loc_6ED962F1:				; CODE XREF: sub_6ED960D0+61j
		lea	edx, ds:10h[ecx*4]
		mov	ecx, [ebp+arg_8]
		mov	[esp+8], edx
		mov	dword ptr [esp+0Ch], 4
		mov	[esp], eax
		lea	edx, ds:10h[ecx*4]
		mov	[esp+4], edx
		mov	[ebp+var_48], 2
		call	ds:_ZN11QVectorData10reallocateEPS_iii
		test	eax, eax
		mov	[ebp+var_64], eax
		jz	short loc_6ED96353

loc_6ED96329:				; CODE XREF: sub_6ED960D0+289j
		mov	eax, [ebp+var_64]
		mov	ebx, [ebp+arg_0]
		mov	edx, eax
		mov	[ebx], eax
		mov	[ebp+var_58], eax
		jmp	loc_6ED96179
; ---------------------------------------------------------------------------

loc_6ED9633B:				; CODE XREF: sub_6ED960D0+93j
		mov	ebx, ds:_Z9qBadAllocv
		call	ebx ; _Z9qBadAllocv
		mov	eax, [ebp+var_60]
		mov	[ebp+var_5C], eax
		call	ebx ; _Z9qBadAllocv
		mov	edx, [ebp+var_60]
		jmp	loc_6ED96169
; ---------------------------------------------------------------------------

loc_6ED96353:				; CODE XREF: sub_6ED960D0+257j
		call	ds:_Z9qBadAllocv
		jmp	short loc_6ED96329
sub_6ED960D0	endp


; =============== S U B	R O U T	I N E =======================================


sub_6ED9635B	proc near		; DATA XREF: sub_6ED960D0+23o
		add	ebp, 18h
		mov	ecx, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	eax, [ebp-40h]
		mov	[ebp-68h], ecx
		jz	short loc_6ED9638B
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED991C0
		mov	ebx, [ebp-68h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ebx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED9638B:				; CODE XREF: sub_6ED9635B+10j
		cmp	eax, 1
		jz	short loc_6ED963A2
		mov	edx, [ebp-68h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED963A2:				; CODE XREF: sub_6ED9635B+33j
		mov	ecx, [ebp-68h]
		mov	[esp+0], ecx
		call	sub_6ED98EF0
		mov	ebx, [ebp+8]
		mov	edx, [ebp+10h]
		mov	eax, [ebx]
		cmp	[eax+4], edx
		jl	short loc_6ED963CE
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED991C0
		mov	edx, [ebp-58h]
		jmp	loc_6ED96179
; ---------------------------------------------------------------------------

loc_6ED963CE:				; CODE XREF: sub_6ED9635B+5Dj
		mov	dword ptr [ebp-48h], 1
		call	sub_6ED99700
sub_6ED9635B	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED963E0	proc near		; CODE XREF: sub_6ED58C70+A8p
					; sub_6ED58C70+F4p ...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_4]
		mov	[esp+0Ch+arg_4], 4
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_ZN11QVectorData4freeEPS_i
		add	esp, 0Ch
		jmp	eax
sub_6ED963E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED96400	proc near		; CODE XREF: sub_6ED58550+66p
					; sub_6ED58C70+D6p ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	eax, [esp+3Ch+arg_0]
		mov	esi, [esp+3Ch+arg_8]
		mov	ebx, [eax]
		mov	eax, [ebx+8]
		mov	edi, ebx
		cmp	eax, [esp+3Ch+arg_4]
		jle	short loc_6ED96427
		mov	edx, [ebx]
		cmp	edx, 1
		jz	loc_6ED96543

loc_6ED96427:				; CODE XREF: sub_6ED96400+1Aj
		mov	edx, ebx

loc_6ED96429:				; CODE XREF: sub_6ED96400+15Fj
		cmp	[edx+4], esi
		jz	loc_6ED96523

loc_6ED96432:				; CODE XREF: sub_6ED96400+128j
		lea	eax, [esi+esi*2-3]
		lea	eax, ds:1Ch[eax*4]
		mov	[esp+3Ch+var_38], 4
		mov	[esp+3Ch+var_3C], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	edi, eax
		jz	loc_6ED96564

loc_6ED96458:				; CODE XREF: sub_6ED96400+17Cj
		movzx	edx, byte ptr [eax+0Ch]
		mov	dword ptr [eax], 1
		mov	dword ptr [eax+8], 0
		mov	[eax+4], esi
		or	edx, 1
		mov	[eax+0Ch], dl
		mov	ebx, [esp+3Ch+arg_0]
		and	edx, 0FFFFFFFDh
		mov	ecx, [ebx]
		mov	ebx, edi
		movzx	ecx, byte ptr [ecx+0Ch]
		and	ecx, 2
		or	edx, ecx
		mov	[eax+0Ch], dl
		and	dword ptr [eax+0Ch], 3

loc_6ED9648D:				; CODE XREF: sub_6ED96400+12Ej
		mov	eax, [esp+3Ch+arg_0]
		mov	edx, [ebx+8]
		mov	ebp, [eax]
		lea	eax, [edx+edx*2]
		mov	esi, edx
		lea	eax, [edi+eax*4+10h]
		mov	edi, [esp+3Ch+arg_4]
		mov	ecx, [ebp+8]
		mov	[esp+3Ch+var_20], edi
		cmp	edi, ecx
		jle	short loc_6ED964B2
		mov	[esp+3Ch+var_20], ecx

loc_6ED964B2:				; CODE XREF: sub_6ED96400+ACj
		cmp	edx, [esp+3Ch+var_20]
		jge	short loc_6ED964ED
		lea	ecx, [edx+edx*2]
		lea	ecx, [ebp+ecx*4+10h]
		nop

loc_6ED964C0:				; CODE XREF: sub_6ED96400+EBj
		add	eax, 0Ch
		mov	ebp, [ecx+8]
		mov	edi, [ecx+4]
		mov	esi, [ecx]
		add	ecx, 0Ch
		cmp	eax, 0Ch
		jz	short loc_6ED964DF
		mov	[eax-4], ebp
		mov	[eax-8], edi
		mov	[eax-0Ch], esi
		mov	edx, [ebx+8]

loc_6ED964DF:				; CODE XREF: sub_6ED96400+D1j
		lea	esi, [edx+1]
		cmp	esi, [esp+3Ch+var_20]
		mov	edx, esi
		mov	[ebx+8], esi
		jl	short loc_6ED964C0

loc_6ED964ED:				; CODE XREF: sub_6ED96400+B6j
		cmp	esi, [esp+3Ch+arg_4]
		jge	short loc_6ED964FA
		mov	eax, [esp+3Ch+arg_4]
		mov	[ebx+8], eax

loc_6ED964FA:				; CODE XREF: sub_6ED96400+F1j
		mov	edx, [esp+3Ch+arg_4]
		mov	edi, [esp+3Ch+arg_0]
		mov	[ebx+8], edx
		mov	eax, [edi]
		cmp	eax, ebx
		jz	short loc_6ED9651B
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED96533

loc_6ED96515:				; CODE XREF: sub_6ED96400+141j
		mov	eax, [esp+3Ch+arg_0]
		mov	[eax], ebx

loc_6ED9651B:				; CODE XREF: sub_6ED96400+109j
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED96523:				; CODE XREF: sub_6ED96400+2Cj
		mov	eax, [edx]
		cmp	eax, 1
		jnz	loc_6ED96432
		jmp	loc_6ED9648D
; ---------------------------------------------------------------------------

loc_6ED96533:				; CODE XREF: sub_6ED96400+113j
		mov	eax, [edi]
		mov	[esp+3Ch+var_3C], edi
		mov	[esp+3Ch+var_38], eax
		call	sub_6ED963E0
		jmp	short loc_6ED96515
; ---------------------------------------------------------------------------

loc_6ED96543:				; CODE XREF: sub_6ED96400+21j
		mov	ecx, [esp+3Ch+arg_0]
		mov	edx, ebx
		mov	ebp, [esp+3Ch+arg_4]
		lea	esi, [esi+0]

loc_6ED96550:				; CODE XREF: sub_6ED96400+15Dj
		sub	eax, 1
		mov	[edx+8], eax
		mov	edx, [ecx]
		mov	eax, [edx+8]
		cmp	eax, ebp
		jg	short loc_6ED96550
		jmp	loc_6ED96429
; ---------------------------------------------------------------------------

loc_6ED96564:				; CODE XREF: sub_6ED96400+52j
		mov	ebx, ds:_Z9qBadAllocv
		mov	[esp+3Ch+var_24], eax
		call	ebx ; _Z9qBadAllocv
		mov	eax, [esp+3Ch+var_24]
		mov	edi, eax
		call	ebx ; _Z9qBadAllocv
		mov	eax, [esp+3Ch+var_24]
		jmp	loc_6ED96458
sub_6ED96400	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED96590	proc near		; CODE XREF: sub_6ED5BDC0+9Fp
					; sub_6ED5BDC0+FCp ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset word_6ED9A53A
		mov	[ebp+var_18], offset sub_6ED9666A
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		add	edx, 10h
		mov	[ebp+var_44], edx
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+8]
		lea	eax, [eax+eax*2]
		lea	eax, [edx+eax*4+10h]
		mov	[ebp+var_40], eax
		mov	eax, ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_4C], eax
		jmp	short loc_6ED96609
; ---------------------------------------------------------------------------

loc_6ED965E2:				; CODE XREF: sub_6ED96590+98j
					; sub_6ED96590+B0j
		mov	edx, [ebp+var_40]
		mov	eax, [edx-0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED96605
		mov	edx, [ebp+var_40]
		mov	eax, [edx-0Ch]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	[ebp+var_4C]

loc_6ED96605:				; CODE XREF: sub_6ED96590+60j
		sub	[ebp+var_40], 0Ch

loc_6ED96609:				; CODE XREF: sub_6ED96590+50j
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+var_40]
		sub	eax, 0Ch
		cmp	[ebp+var_44], edx
		mov	[ebp+var_48], eax
		jz	short loc_6ED96642
		mov	edx, [ebp+var_40]
		mov	eax, [edx-8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED965E2
		mov	edx, [ebp+var_40]
		mov	eax, [edx-8]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED965E2
; ---------------------------------------------------------------------------

loc_6ED96642:				; CODE XREF: sub_6ED96590+88j
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_6ED96590	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED9666A	proc near		; DATA XREF: sub_6ED96590+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-50h], eax
		mov	[esp+0], edx
		call	sub_6ED94560
		mov	eax, [ebp-50h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED9666A	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED966A0	proc near		; CODE XREF: sub_6ED5BC00+55p
					; sub_6ED624E0+19Dp

var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 84h
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A554
		mov	[ebp+var_18], offset sub_6ED96877
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	edx, [ebp+arg_4]
		lea	ecx, [eax+10h]
		sub	edx, ecx
		sar	edx, 2
		imul	edx, 0AAAAAAABh
		mov	[ebp+var_64], edx
		mov	edx, [ebp+arg_8]
		sub	edx, ecx
		sar	edx, 2
		imul	edx, 0AAAAAAABh
		mov	[ebp+var_6C], edx
		sub	edx, [ebp+var_64]
		mov	[ebp+var_70], edx
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_6ED9672F
		mov	edx, [eax+4]
		mov	ecx, [ebp+arg_0]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_6ED96A70
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx]

loc_6ED9672F:				; CODE XREF: sub_6ED966A0+68j
		mov	edx, [eax+8]
		mov	ebx, [ebp+var_6C]
		lea	ecx, [edx+edx*2]
		lea	ecx, [eax+ecx*4+10h]
		mov	[ebp+var_60], ecx
		lea	ecx, [ebx+ebx*2]
		lea	ecx, [eax+ecx*4+10h]
		cmp	[ebp+var_60], ecx
		mov	[ebp+var_48], ecx
		jz	short loc_6ED967C1
		mov	ecx, [ebp+var_64]
		mov	ebx, ds:_ZN7QStringaSERKS_
		lea	edx, [ecx+ecx*2]
		lea	edx, [eax+edx*4+10h]
		mov	[ebp+var_4C], edx
		mov	[ebp+var_40], ebx

loc_6ED96764:				; CODE XREF: sub_6ED966A0+117j
		mov	eax, [ebp+var_48]
		mov	edx, [ebp+var_4C]
		mov	ecx, [ebp+var_48]
		mov	ebx, [ebp+var_4C]
		add	eax, 0Ch
		add	edx, 0Ch
		mov	[ebp+var_50], edx
		mov	[esp+4], ecx
		mov	[ebp+var_54], eax
		mov	[esp], ebx
		mov	[ebp+var_38], 0FFFFFFFFh
		call	[ebp+var_40]
		mov	eax, [ebp+var_48]
		add	eax, 4
		mov	[esp+4], eax
		mov	eax, ebx
		add	eax, 4
		mov	[esp], eax
		call	[ebp+var_40]
		mov	edx, [ebp+var_54]
		mov	ecx, [ebp+var_50]
		cmp	[ebp+var_60], edx
		mov	eax, [edx-4]
		mov	[ebp+var_4C], ecx
		mov	[ebp+var_48], edx
		mov	[ecx-4], eax
		jnz	short loc_6ED96764
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx]
		mov	edx, [eax+8]

loc_6ED967C1:				; CODE XREF: sub_6ED966A0+ACj
		lea	ecx, [edx+edx*2]
		sub	edx, [ebp+var_70]
		lea	ecx, [eax+ecx*4+10h]
		lea	edx, [edx+edx*2]
		lea	edx, [eax+edx*4+10h]
		cmp	ecx, edx
		mov	[ebp+var_5C], edx
		jz	short loc_6ED96848
		mov	eax, ds:_ZN7QString4freeEPNS_4DataE
		sub	ecx, 0Ch
		mov	[ebp+var_44], ecx
		mov	[ebp+var_68], eax
		jmp	short loc_6ED9681D
; ---------------------------------------------------------------------------
		align 10h

loc_6ED967F0:				; CODE XREF: sub_6ED966A0+18Ej
					; sub_6ED966A0+1A6j
		mov	edx, [ebp+var_44]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED96811
		mov	ecx, [ebp+var_44]
		mov	eax, [ecx]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	[ebp+var_68]

loc_6ED96811:				; CODE XREF: sub_6ED966A0+15Dj
		mov	ebx, [ebp+var_5C]
		sub	[ebp+var_44], 0Ch
		cmp	[ebp+var_58], ebx
		jz	short loc_6ED96848

loc_6ED9681D:				; CODE XREF: sub_6ED966A0+147j
		mov	edx, [ebp+var_44]
		mov	[ebp+var_58], edx
		mov	eax, [edx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED967F0
		mov	ecx, [ebp+var_44]
		mov	eax, [ecx+4]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED967F0
; ---------------------------------------------------------------------------

loc_6ED96848:				; CODE XREF: sub_6ED966A0+137j
					; sub_6ED966A0+17Bj
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+var_64]
		mov	ecx, [ebp+var_70]
		mov	eax, [edx]
		lea	edx, [ebx+ebx*2]
		sub	[eax+8], ecx
		lea	edx, [eax+edx*4+10h]
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_74], edx
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_74]
		add	esp, 84h
		pop	ebx
		pop	ebp
		retn
sub_6ED966A0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED96877	proc near		; DATA XREF: sub_6ED966A0+24o
		add	ebp, 8
		mov	ebx, [ebp-34h]
		mov	eax, [ebp-58h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	[esp+0], ebx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED96877	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED968A0	proc near		; CODE XREF: sub_6ED61050+DEp
					; sub_6ED61050+1BFp

var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 64h
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A6D0
		mov	[ebp+var_28], offset sub_6ED96A0A
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED969A5

loc_6ED968E0:				; CODE XREF: sub_6ED968A0+10Bj
		mov	ecx, [ebp+arg_4]
		mov	eax, [ecx]
		mov	[ebp+var_14], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ecx+4]
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ecx+8]
		mov	ebx, [ebp+arg_0]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0Ch
		mov	[ebp+var_C], eax
		mov	eax, [ebx]
		mov	eax, [eax+8]
		mov	dword ptr [esp], 1Ch
		mov	[ebp+var_48], 2
		add	eax, 1
		mov	[esp+4], eax
		call	ds:_ZN11QVectorData4growEiiib
		mov	[esp+8], eax
		mov	eax, [ebx]
		mov	eax, [eax+8]
		mov	[esp], ebx
		mov	[esp+4], eax
		call	sub_6ED96A70
		mov	edx, [ebx]
		mov	eax, [ebp+var_14]
		mov	ecx, [edx+8]
		lea	ecx, [ecx+ecx*2]
		lea	edx, [edx+ecx*4]
		mov	[edx+10h], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	eax, [ebp+var_10]
		mov	[edx+14h], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	eax, [ebp+var_C]
		mov	[edx+18h], eax
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED969E0

loc_6ED9697E:				; CODE XREF: sub_6ED968A0+153j
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED969F5

loc_6ED9698B:				; CODE XREF: sub_6ED968A0+137j
					; sub_6ED968A0+168j
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx]
		add	dword ptr [eax+8], 1
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 64h
		pop	ebx
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED969A5:				; CODE XREF: sub_6ED968A0+3Aj
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jge	loc_6ED968E0
		mov	ebx, [ebp+arg_4]
		lea	edx, [edx+edx*2]
		lea	edx, [eax+edx*4]
		mov	ecx, [ebx]
		mov	[edx+10h], ecx
		lock inc dword ptr [ecx]
		setnz	al
		mov	eax, [ebx+4]
		mov	[edx+14h], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	eax, [ebx+8]
		mov	[edx+18h], eax
		jmp	short loc_6ED9698B
; ---------------------------------------------------------------------------
		align 10h

loc_6ED969E0:				; CODE XREF: sub_6ED968A0+DCj
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED9697E
; ---------------------------------------------------------------------------

loc_6ED969F5:				; CODE XREF: sub_6ED968A0+E9j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED9698B
sub_6ED968A0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED96A0A	proc near		; DATA XREF: sub_6ED968A0+21o
		add	ebp, 8
		mov	edx, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-50h], edx
		jz	short loc_6ED96A3D
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED94560
		mov	ecx, [ebp-50h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED96A3D:				; CODE XREF: sub_6ED96A0A+Dj
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED914D0
		mov	eax, [ebp-50h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_6ED96A0A	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED96A70	proc near		; CODE XREF: sub_6ED5BC00+35p
					; sub_6ED5BC00+80p ...

var_7C		= dword	ptr -7Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 8Ch
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9A540
		mov	[ebp+var_28], offset sub_6ED96CF8
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	eax, [edx+8]
		cmp	eax, [ebp+arg_4]
		mov	[ebp+var_58], edx
		jle	short loc_6ED96AC0
		mov	edx, [edx]
		cmp	edx, 1
		jz	loc_6ED96C57

loc_6ED96AC0:				; CODE XREF: sub_6ED96A70+43j
		mov	eax, [ebp+var_58]

loc_6ED96AC3:				; CODE XREF: sub_6ED96A70+23Cj
		mov	ecx, [ebp+arg_8]
		cmp	[eax+4], ecx
		jz	loc_6ED96C27

loc_6ED96ACF:				; CODE XREF: sub_6ED96A70+1BFj
		mov	ebx, [ebp+arg_8]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_48], 0FFFFFFFFh
		lea	eax, [ebx+ebx*2-3]
		lea	eax, ds:1Ch[eax*4]
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	ebx, eax
		mov	[ebp+var_64], eax
		mov	[ebp+var_5C], eax
		jz	loc_6ED96CDD

loc_6ED96B05:				; CODE XREF: sub_6ED96A70+283j
		mov	ecx, [ebp+var_64]
		mov	dword ptr [ecx], 1
		mov	eax, [ebp+arg_8]
		mov	dword ptr [ecx+8], 0
		mov	[ecx+4], eax
		movzx	eax, byte ptr [ecx+0Ch]
		or	eax, 1
		mov	[ecx+0Ch], al
		mov	ecx, [ebp+arg_0]
		and	eax, 0FFFFFFFDh
		mov	edx, [ecx]
		movzx	edx, byte ptr [edx+0Ch]
		and	edx, 2
		or	eax, edx
		mov	edx, [ebp+var_64]
		mov	[edx+0Ch], al
		and	dword ptr [edx+0Ch], 3
		mov	ecx, [ebp+var_5C]
		mov	[ebp+var_58], ecx

loc_6ED96B46:				; CODE XREF: sub_6ED96A70+1C5j
		mov	edx, [ebp+var_58]
		mov	eax, [ebp+arg_0]
		mov	ecx, [edx+8]
		mov	esi, [eax]
		lea	eax, [ecx+ecx*2]
		mov	edx, ecx
		lea	eax, [ebx+eax*4+10h]
		mov	ebx, [esi+8]
		cmp	ebx, [ebp+arg_4]
		jle	short loc_6ED96B65
		mov	ebx, [ebp+arg_4]

loc_6ED96B65:				; CODE XREF: sub_6ED96A70+F0j
		cmp	ecx, ebx
		jge	short loc_6ED96BAD
		lea	edx, [edx+edx*2]
		lea	edx, [esi+edx*4+10h]
		mov	esi, [ebp+var_58]
		mov	[ebp+var_7C], ebx

loc_6ED96B76:				; CODE XREF: sub_6ED96A70+13Bj
		add	eax, 0Ch
		add	edx, 0Ch
		cmp	eax, 0Ch
		jz	short loc_6ED96B9F
		mov	ecx, [edx-0Ch]
		mov	[eax-0Ch], ecx
		lock inc dword ptr [ecx]
		setnz	bl
		mov	ecx, [edx-8]
		mov	[eax-8], ecx
		lock inc dword ptr [ecx]
		setnz	bl
		mov	ecx, [edx-4]
		mov	[eax-4], ecx

loc_6ED96B9F:				; CODE XREF: sub_6ED96A70+10Fj
		mov	ecx, [esi+8]
		add	ecx, 1
		cmp	ecx, [ebp+var_7C]
		mov	[esi+8], ecx
		jl	short loc_6ED96B76

loc_6ED96BAD:				; CODE XREF: sub_6ED96A70+F7j
		cmp	ecx, [ebp+arg_4]
		jge	short loc_6ED96BEC
		mov	ecx, ds:_ZN7QString11shared_nullE
		mov	esi, [ebp+var_58]
		mov	edi, [ebp+arg_4]
		mov	edx, ecx

loc_6ED96BC0:				; CODE XREF: sub_6ED96A70+17Aj
		test	eax, eax
		jz	short loc_6ED96BDC
		mov	[eax], ecx
		lock inc dword ptr [edx]
		setnz	bl
		mov	[eax+4], ecx
		lock inc dword ptr [edx]
		setnz	bl
		mov	dword ptr [eax+8], 0

loc_6ED96BDC:				; CODE XREF: sub_6ED96A70+152j
		mov	ebx, [esi+8]
		add	eax, 0Ch
		add	ebx, 1
		cmp	ebx, edi
		mov	[esi+8], ebx
		jl	short loc_6ED96BC0

loc_6ED96BEC:				; CODE XREF: sub_6ED96A70+140j
		mov	eax, [ebp+var_58]
		mov	edx, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		mov	[eax+8], edx
		mov	eax, [ecx]
		cmp	eax, [ebp+var_58]
		jz	short loc_6ED96C11
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_6ED96C40

loc_6ED96C09:				; CODE XREF: sub_6ED96A70+1E5j
		mov	eax, [ebp+var_58]
		mov	ebx, [ebp+arg_0]
		mov	[ebx], eax

loc_6ED96C11:				; CODE XREF: sub_6ED96A70+18Dj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 8Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED96C27:				; CODE XREF: sub_6ED96A70+59j
		mov	eax, [eax]
		mov	ebx, [ebp+var_58]
		cmp	eax, 1
		jnz	loc_6ED96ACF
		jmp	loc_6ED96B46
; ---------------------------------------------------------------------------
		align 10h

loc_6ED96C40:				; CODE XREF: sub_6ED96A70+197j
		mov	eax, [ecx]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_6ED96590
		jmp	short loc_6ED96C09
; ---------------------------------------------------------------------------

loc_6ED96C57:				; CODE XREF: sub_6ED96A70+4Aj
		mov	ebx, [ebp+arg_0]
		lea	eax, [eax+eax*2]
		lea	eax, ds:10h[eax*4]
		add	eax, [ebx]
		sub	eax, 0Ch
		mov	[ebp+var_54], eax
		mov	eax, ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_68], eax
		jmp	short loc_6ED96CB2
; ---------------------------------------------------------------------------

loc_6ED96C76:				; CODE XREF: sub_6ED96A70+253j
					; sub_6ED96A70+26Bj
		mov	edx, [ebp+var_54]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED96C97
		mov	ecx, [ebp+var_54]
		mov	eax, [ecx]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	[ebp+var_68]

loc_6ED96C97:				; CODE XREF: sub_6ED96A70+213j
		mov	ebx, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	eax, [ebx]
		sub	dword ptr [eax+8], 1
		mov	eax, [ebx]
		sub	[ebp+var_54], 0Ch
		cmp	[eax+8], edx
		jle	loc_6ED96AC3

loc_6ED96CB2:				; CODE XREF: sub_6ED96A70+204j
		mov	edx, [ebp+var_54]
		mov	[ebp+var_60], edx
		mov	eax, [edx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_6ED96C76
		mov	ecx, [ebp+var_54]
		mov	eax, [ecx+4]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_6ED96C76
; ---------------------------------------------------------------------------

loc_6ED96CDD:				; CODE XREF: sub_6ED96A70+8Fj
		mov	eax, ds:_Z9qBadAllocv
		mov	[ebp+var_50], eax
		call	eax ; _Z9qBadAllocv
		mov	edx, [ebp+var_64]
		mov	[ebp+var_5C], edx
		call	[ebp+var_50]
		mov	ebx, [ebp+var_64]
		jmp	loc_6ED96B05
sub_6ED96A70	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED96CF8	proc near		; DATA XREF: sub_6ED96A70+26o
		add	ebp, 18h
		mov	ebx, [ebp-44h]
		mov	eax, [ebp-60h]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], eax
		call	sub_6ED94560
		mov	[esp+0], ebx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_6ED96CF8	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED96D20	proc near		; CODE XREF: .text:6ED98C6Ep
					; sub_6ED98E61+40p

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9AECC
		mov	[ebp+var_18], offset sub_6ED96DA8
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, dword_6ED9B00C
		mov	eax, [ebp+arg_0]
		test	edx, edx
		mov	eax, [eax]
		jz	short loc_6ED96D71
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	sub_6ED8F6D0
		test	eax, eax
		jnz	short loc_6ED96D7E

loc_6ED96D71:				; CODE XREF: sub_6ED96D20+3Cj
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED96D7E:				; CODE XREF: sub_6ED96D20+4Fj
		mov	dword ptr [esp], 4
		call	sub_6ED98C90
		mov	dword ptr [eax], offset	off_6EDA7900
		mov	dword ptr [esp+8], offset sub_6ED96E60
		mov	dword ptr [esp+4], offset off_6EDA66C4
		mov	[esp], eax
		call	sub_6ED99760
sub_6ED96D20	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED96DA8	proc near		; DATA XREF: sub_6ED96D20+20o
		add	ebp, 8
		cmp	dword ptr [ebp-30h], 0FFFFFFFFh
		mov	eax, [ebp-34h]
		jz	short loc_6ED96DC3
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED96DC3:				; CODE XREF: sub_6ED96DA8+Aj
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	sub_6ED99030
sub_6ED96DA8	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED96DE0	proc near		; DATA XREF: .rdata:6EDA78ECo

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_6EDA78E8
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED98750
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_6ED988B0
sub_6ED96DE0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED96E10	proc near		; DATA XREF: .text:6ED98C0Ao
					; sub_6ED98C90+1B9o ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA78E8
		add	esp, 0Ch
		jmp	sub_6ED98750
sub_6ED96E10	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED96E30	proc near		; DATA XREF: .rdata:6EDA7904o

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_6EDA7900
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED98750
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_6ED988B0
sub_6ED96E30	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED96E60	proc near		; DATA XREF: sub_6ED96D20+70o
					; .text:6ED98BE0o ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7900
		add	esp, 0Ch
		jmp	sub_6ED98750
sub_6ED96E60	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn bp-based	frame

sub_6ED96E80	proc near		; DATA XREF: .data:off_6ED9FA28o

var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9AF24
		mov	[ebp+var_28], offset sub_6ED9702D
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		cmp	byte_6ED9FA38, 0
		jz	short loc_6ED96EF0
		mov	eax, ds:_iob
		mov	dword ptr [esp+8], 1Dh ; size_t
		mov	dword ptr [esp+4], 1 ; size_t
		mov	dword ptr [esp], offset	aTerminateCalle	; "terminate called recursively\n"
		add	eax, 40h
		mov	[esp+0Ch], eax	; FILE *
		mov	[ebp+var_48], 0FFFFFFFFh
		call	fwrite
		call	abort
; ---------------------------------------------------------------------------
		align 10h

loc_6ED96EF0:				; CODE XREF: sub_6ED96E80+36j
		mov	byte_6ED9FA38, 1
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_6ED99190
		test	eax, eax
		jz	loc_6ED96FE5
		mov	eax, [eax+4]
		mov	[ebp+var_C], 0FFFFFFFFh
		mov	dword ptr [esp+8], 0 ; int
		mov	dword ptr [esp+4], 0 ; char *
		mov	[ebp+var_50], eax
		lea	eax, [ebp+var_C]
		mov	[esp+0Ch], eax	; int
		mov	eax, [ebp+var_50]
		mov	[esp], eax	; int
		call	sub_6ED8E0F0
		mov	dword ptr [esp+8], 30h ; size_t
		mov	dword ptr [esp+4], 1 ; size_t
		mov	dword ptr [esp], offset	aTerminateCal_0	; "terminate called after throwing an inst"...
		mov	[ebp+var_54], eax
		mov	eax, ds:_iob
		add	eax, 40h
		mov	[esp+0Ch], eax	; FILE *
		call	fwrite
		mov	edx, [ebp+var_C]
		test	edx, edx
		jnz	short loc_6ED96FC5
		mov	eax, ds:_iob
		add	eax, 40h
		mov	[esp+4], eax	; FILE *
		mov	eax, [ebp+var_54]
		mov	[esp], eax	; char *
		call	fputs

loc_6ED96F83:				; CODE XREF: sub_6ED96E80+163j
		mov	eax, ds:_iob
		mov	dword ptr [esp+8], 2 ; size_t
		mov	dword ptr [esp+4], 1 ; size_t
		mov	dword ptr [esp], offset	asc_6EDA5041 ; "'\n"
		add	eax, 40h
		mov	[esp+0Ch], eax	; FILE *
		mov	[ebp+var_48], 0FFFFFFFFh
		call	fwrite
		mov	eax, [ebp+var_C]
		test	eax, eax
		jz	short loc_6ED97020

loc_6ED96FB9:				; CODE XREF: sub_6ED96E80+1ABj
		mov	[ebp+var_48], 2
		call	sub_6ED99700
; ---------------------------------------------------------------------------

loc_6ED96FC5:				; CODE XREF: sub_6ED96E80+EAj
		mov	eax, ds:_iob
		mov	[ebp+var_48], 0FFFFFFFFh
		add	eax, 40h
		mov	[esp+4], eax	; FILE *
		mov	eax, [ebp+var_50]
		mov	[esp], eax	; char *
		call	fputs
		jmp	short loc_6ED96F83
; ---------------------------------------------------------------------------

loc_6ED96FE5:				; CODE XREF: sub_6ED96E80+85j
		mov	eax, ds:_iob
		mov	dword ptr [esp+8], 2Dh ; size_t
		mov	dword ptr [esp+4], 1 ; size_t
		mov	dword ptr [esp], offset	aTerminateCal_1	; "terminate called without an active exce"...
		add	eax, 40h
		mov	[esp+0Ch], eax	; FILE *
		mov	[ebp+var_48], 0FFFFFFFFh
		call	fwrite

loc_6ED97014:				; CODE XREF: sub_6ED9702D+4Cj
		mov	[ebp+var_48], 0FFFFFFFFh
		call	abort
; ---------------------------------------------------------------------------

loc_6ED97020:				; CODE XREF: sub_6ED96E80+137j
		mov	eax, [ebp+var_54]
		mov	[esp], eax	; void *
		call	free
		jmp	short loc_6ED96FB9
sub_6ED96E80	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

; int __cdecl sub_6ED9702D(size_t, size_t, FILE	*)
sub_6ED9702D	proc near		; DATA XREF: sub_6ED96E80+1Do

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-58h], eax
		mov	eax, [ebp-40h]
		jz	short loc_6ED9705D
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED991C0
		mov	eax, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED9705D:				; CODE XREF: sub_6ED9702D+10j
		cmp	eax, 2
		jz	short loc_6ED9707B
		mov	eax, [ebp-58h]
		mov	[esp+0], eax
		call	sub_6ED98EF0

loc_6ED9706D:				; CODE XREF: sub_6ED9702D+C4j
		mov	dword ptr [ebp-48h], 0
		call	sub_6ED991C0
		jmp	short loc_6ED97014
; ---------------------------------------------------------------------------

loc_6ED9707B:				; CODE XREF: sub_6ED9702D+33j
		mov	eax, [ebp-58h]
		mov	[esp+0], eax
		call	sub_6ED98EF0
		mov	edx, [eax]
		mov	[esp+0], eax
		mov	eax, [edx+8]
		mov	dword ptr [ebp-48h], 1
		call	eax
		mov	[ebp-5Ch], eax
		mov	eax, ds:_iob
		mov	[esp+arg_4], 0Bh ; size_t
		mov	[esp+arg_0], 1	; size_t
		mov	dword ptr [esp+0], offset aWhat	; "  what():  "
		add	eax, 40h
		mov	[esp+arg_8], eax ; FILE	*
		call	fwrite
		mov	eax, ds:_iob
		add	eax, 40h
		mov	[esp+arg_0], eax ; FILE	*
		mov	eax, [ebp-5Ch]
		mov	[esp+0], eax	; char *
		call	fputs
		mov	eax, ds:_iob
		mov	dword ptr [esp+0], 0Ah ; int
		add	eax, 40h
		mov	[esp+arg_0], eax ; FILE	*
		call	fputc
		jmp	loc_6ED9706D
sub_6ED9702D	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED97100	proc near		; DATA XREF: .rdata:6EDA7818o
					; .rdata:6EDA7878o ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 2Ch
		mov	[esp+2Ch+var_10], ebx
		mov	ebx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_C], esi
		mov	esi, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_8], edi
		mov	edi, [esp+2Ch+arg_C]
		mov	[esp+2Ch+var_4], ebp
		mov	ebp, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_28], ebx
		mov	[esp+2Ch+var_2C], esi
		call	sub_6ED98640
		mov	edx, eax
		mov	eax, 1
		test	dl, dl
		jnz	short loc_6ED97141
		xor	eax, eax
		cmp	edi, 3
		jbe	short loc_6ED97155

loc_6ED97141:				; CODE XREF: sub_6ED97100+38j
		mov	ebx, [esp+2Ch+var_10]
		mov	esi, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_8]
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED97155:				; CODE XREF: sub_6ED97100+3Fj
		mov	eax, [ebx]
		mov	[esp+2Ch+arg_8], ebp
		mov	edi, [esp+2Ch+var_8]
		mov	[esp+2Ch+arg_4], esi
		mov	ebp, [esp+2Ch+var_4]
		mov	[esp+2Ch+arg_0], ebx
		mov	esi, [esp+2Ch+var_C]
		mov	eax, [eax+14h]
		mov	ebx, [esp+2Ch+var_10]
		add	esp, 2Ch
		jmp	eax
sub_6ED97100	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED97180	proc near		; CODE XREF: sub_6ED972E0+32p
					; sub_6ED97530+26p
					; DATA XREF: ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_C]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED98640
		mov	edx, eax
		xor	eax, eax
		test	dl, dl
		jz	short loc_6ED971BD
		mov	eax, [esp+1Ch+arg_8]
		mov	dword ptr [ebx+0Ch], 8
		mov	dword ptr [ebx+4], 6
		mov	[ebx], eax
		mov	eax, 1

loc_6ED971BD:				; CODE XREF: sub_6ED97180+22j
		add	esp, 18h
		pop	ebx
		retn
sub_6ED97180	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED971D0	proc near		; DATA XREF: .rdata:6EDA781Co
					; .rdata:6EDA787Co ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 28h
		mov	eax, [esp+2Ch+arg_0]
		lea	ecx, [esp+2Ch+var_1C]
		mov	ebx, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_1C], 0
		mov	[esp+2Ch+var_18], 0
		mov	edx, [eax]
		mov	[esp+2Ch+var_20], ecx
		mov	ecx, [ebx]
		mov	[esp+2Ch+var_14], 10h
		mov	[esp+2Ch+var_10], 0
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_24], ecx
		mov	ecx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_28], ecx
		call	dword ptr [edx+18h]
		mov	edx, [esp+2Ch+var_18]
		xor	eax, eax
		and	edx, 6
		cmp	edx, 6
		jnz	short loc_6ED97233
		mov	eax, [esp+2Ch+var_1C]
		mov	[ebx], eax
		mov	eax, 1

loc_6ED97233:				; CODE XREF: sub_6ED971D0+56j
		add	esp, 28h
		pop	ebx
		retn
sub_6ED971D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED97240	proc near		; DATA XREF: .rdata:6EDA7824o

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h
arg_18		= dword	ptr  1Ch
arg_1C		= dword	ptr  20h

		sub	esp, 2Ch
		mov	[esp+2Ch+var_10], ebx
		mov	ebx, [esp+2Ch+arg_10]
		cmp	ebx, [esp+2Ch+arg_18]
		mov	[esp+2Ch+var_C], esi
		mov	esi, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_8], edi
		mov	edi, [esp+2Ch+arg_1C]
		mov	[esp+2Ch+var_4], ebp
		mov	ebp, [esp+2Ch+arg_8]
		jz	short loc_6ED972A0

loc_6ED97269:				; CODE XREF: sub_6ED97240+72j
		mov	eax, [esp+2Ch+arg_C]
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_28], eax
		call	sub_6ED98640
		test	al, al
		jz	short loc_6ED97289
		mov	[edi], ebx
		mov	[edi+4], ebp
		mov	dword ptr [edi+0Ch], 1

loc_6ED97289:				; CODE XREF: sub_6ED97240+3Bj
					; sub_6ED97240+77j
		xor	eax, eax
		mov	ebx, [esp+2Ch+var_10]
		mov	esi, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_8]
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED972A0:				; CODE XREF: sub_6ED97240+27j
		mov	eax, [esp+2Ch+arg_14]
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_28], eax
		call	sub_6ED98640
		test	al, al
		jz	short loc_6ED97269
		mov	[edi+8], ebp
		jmp	short loc_6ED97289
sub_6ED97240	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED972C0	proc near		; DATA XREF: .rdata:6EDA7828o

arg_8		= dword	ptr  0Ch
arg_10		= dword	ptr  14h

		mov	eax, [esp+arg_10]
		cmp	eax, [esp+arg_8]
		setz	al
		movzx	eax, al
		lea	eax, [eax+eax*4+1]
		retn
sub_6ED972C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED972E0	proc near		; DATA XREF: .rdata:6EDA7880o

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 2Ch
		mov	[esp+2Ch+var_10], ebx
		mov	ebx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_C], esi
		mov	esi, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_8], edi
		mov	edi, [esp+2Ch+arg_C]
		mov	[esp+2Ch+var_4], ebp
		mov	ebp, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_28], ebx
		mov	[esp+2Ch+var_24], esi
		mov	[esp+2Ch+var_20], edi
		mov	[esp+2Ch+var_2C], ebp
		call	sub_6ED97180
		test	al, al
		jz	short loc_6ED97334
		mov	eax, 1
		mov	ebx, [esp+2Ch+var_10]
		mov	esi, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_8]
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_6ED97334:				; CODE XREF: sub_6ED972E0+39j
		mov	eax, [ebp+8]
		mov	ebp, [esp+2Ch+var_4]
		mov	edx, [eax]
		mov	[esp+2Ch+arg_C], edi
		mov	edi, [esp+2Ch+var_8]
		mov	[esp+2Ch+arg_8], esi
		mov	esi, [esp+2Ch+var_C]
		mov	[esp+2Ch+arg_4], ebx
		mov	ebx, [esp+2Ch+var_10]
		mov	[esp+2Ch+arg_0], eax
		mov	eax, [edx+18h]
		add	esp, 2Ch
		jmp	eax
sub_6ED972E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED97370	proc near		; DATA XREF: .rdata:6EDA7884o

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h
arg_18		= dword	ptr  1Ch
arg_1C		= dword	ptr  20h

		sub	esp, 3Ch
		mov	ecx, [esp+3Ch+arg_14]
		mov	edx, [esp+3Ch+arg_C]
		mov	[esp+3Ch+var_8], edi
		mov	eax, [esp+3Ch+arg_8]
		mov	edi, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_20], ecx
		mov	ecx, [esp+3Ch+arg_18]
		mov	[esp+3Ch+var_10], ebx
		mov	ebx, [esp+3Ch+arg_1C]
		mov	[esp+3Ch+var_C], esi
		mov	esi, [esp+3Ch+arg_10]
		mov	[esp+3Ch+var_4], ebp
		mov	ebp, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_38], edx
		mov	[esp+3Ch+var_28], edx
		mov	[esp+3Ch+var_2C], ecx
		mov	[esp+3Ch+var_24], eax
		mov	[esp+3Ch+var_3C], edi
		call	sub_6ED98640
		mov	edx, [esp+3Ch+var_28]
		mov	ecx, [esp+3Ch+var_2C]
		test	al, al
		jz	short loc_6ED97400
		mov	eax, [esp+3Ch+var_24]
		test	ebp, ebp
		mov	[ebx], esi
		mov	[ebx+4], eax
		js	short loc_6ED97450
		add	esi, ebp
		xor	eax, eax
		cmp	ecx, esi
		setz	al
		lea	eax, [eax+eax*4+1]
		mov	[ebx+0Ch], eax

loc_6ED973E8:				; CODE XREF: sub_6ED97370+E3j
					; sub_6ED97370+ECj ...
		xor	eax, eax
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED97400:				; CODE XREF: sub_6ED97370+59j
		cmp	esi, ecx
		jz	short loc_6ED97460

loc_6ED97404:				; CODE XREF: sub_6ED97370+112j
		mov	edi, [edi+8]
		mov	eax, [edi]
		mov	[esp+3Ch+arg_18], ecx
		mov	ecx, [esp+3Ch+var_20]
		mov	[esp+3Ch+arg_C], edx
		mov	edx, [esp+3Ch+var_24]
		mov	[esp+3Ch+arg_1C], ebx
		mov	ebx, [esp+3Ch+var_10]
		mov	[esp+3Ch+arg_10], esi
		mov	esi, [esp+3Ch+var_C]
		mov	[esp+3Ch+arg_4], ebp
		mov	ebp, [esp+3Ch+var_4]
		mov	[esp+3Ch+arg_0], edi
		mov	edi, [esp+3Ch+var_8]
		mov	[esp+3Ch+arg_14], ecx
		mov	[esp+3Ch+arg_8], edx
		mov	eax, [eax+1Ch]
		add	esp, 3Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_6ED97450:				; CODE XREF: sub_6ED97370+66j
		cmp	ebp, 0FFFFFFFEh
		jnz	short loc_6ED973E8
		mov	dword ptr [ebx+0Ch], 1
		jmp	short loc_6ED973E8
; ---------------------------------------------------------------------------
		align 10h

loc_6ED97460:				; CODE XREF: sub_6ED97370+92j
		mov	eax, [esp+3Ch+var_20]
		mov	[esp+3Ch+var_28], edx
		mov	[esp+3Ch+var_2C], ecx
		mov	[esp+3Ch+var_3C], edi
		mov	[esp+3Ch+var_38], eax
		call	sub_6ED98640
		mov	edx, [esp+3Ch+var_28]
		mov	ecx, [esp+3Ch+var_2C]
		test	al, al
		jz	short loc_6ED97404
		mov	edx, [esp+3Ch+var_24]
		mov	[ebx+8], edx
		jmp	loc_6ED973E8
sub_6ED97370	endp


; =============== S U B	R O U T	I N E =======================================


sub_6ED97490	proc near		; DATA XREF: .rdata:6EDA7888o

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		sub	esp, 3Ch
		mov	[esp+3Ch+var_10], ebx
		mov	ebx, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_C], esi
		mov	esi, [esp+3Ch+arg_10]
		mov	[esp+3Ch+var_8], edi
		mov	edx, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_4], ebp
		mov	edi, [esp+3Ch+arg_C]
		mov	ebp, [esp+3Ch+arg_0]
		cmp	esi, ebx
		jz	short loc_6ED974F0

loc_6ED974BB:				; CODE XREF: sub_6ED97490+76j
		mov	eax, [ebp+8]
		mov	ebp, [esp+3Ch+var_4]
		mov	ecx, [eax]
		mov	[esp+3Ch+arg_10], esi
		mov	esi, [esp+3Ch+var_C]
		mov	[esp+3Ch+arg_C], edi
		mov	edi, [esp+3Ch+var_8]
		mov	[esp+3Ch+arg_8], ebx
		mov	ebx, [esp+3Ch+var_10]
		mov	[esp+3Ch+arg_4], edx
		mov	[esp+3Ch+arg_0], eax
		mov	eax, [ecx+20h]
		add	esp, 3Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_6ED974F0:				; CODE XREF: sub_6ED97490+29j
		mov	[esp+3Ch+var_20], edx
		mov	[esp+3Ch+var_38], edi
		mov	[esp+3Ch+var_3C], ebp
		call	sub_6ED98640
		mov	edx, [esp+3Ch+var_20]
		test	al, al
		jz	short loc_6ED974BB
		mov	eax, 6
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
sub_6ED97490	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED97530	proc near		; DATA XREF: .rdata:6EDA78C0o

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_36		= byte ptr -36h
var_35		= byte ptr -35h
var_34		= dword	ptr -34h
var_2D		= byte ptr -2Dh
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	edi, [esp+4Ch+arg_8]
		mov	ebp, [esp+4Ch+arg_C]
		mov	eax, [esp+4Ch+arg_4]
		mov	edx, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_44], edi
		mov	[esp+4Ch+var_40], ebp
		mov	[esp+4Ch+var_48], eax
		mov	[esp+4Ch+var_4C], edx
		call	sub_6ED97180
		test	al, al
		jnz	loc_6ED976B4
		mov	ecx, [ebp+8]
		mov	[esp+4Ch+var_34], ecx
		and	ecx, 10h
		jnz	loc_6ED97710

loc_6ED97573:				; CODE XREF: sub_6ED97530+1EBj
		mov	edx, [esp+4Ch+arg_0]
		movzx	ecx, byte ptr [esp+4Ch+var_34]
		mov	esi, [edx+0Ch]
		and	ecx, 1
		mov	[esp+4Ch+var_2D], cl
		lea	ebx, [edx+esi*8+8]
		jmp	short loc_6ED975D1
; ---------------------------------------------------------------------------
		align 10h

loc_6ED97590:				; CODE XREF: sub_6ED97530+132j
					; sub_6ED97530+140j ...
		mov	eax, [esp+4Ch+var_28]
		cmp	eax, 3
		jle	short loc_6ED975A7
		cmp	[esp+4Ch+var_35], 0
		jnz	short loc_6ED975A7
		and	eax, 0FFFFFFFDh
		mov	[esp+4Ch+var_28], eax

loc_6ED975A7:				; CODE XREF: sub_6ED97530+67j
					; sub_6ED97530+6Ej
		mov	edx, [ebp+0Ch]
		test	edx, edx
		jz	loc_6ED97681
		mov	eax, [ebp+0]
		cmp	eax, [esp+4Ch+var_2C]
		jnz	loc_6ED97730
		test	eax, eax
		jz	loc_6ED976C1

loc_6ED975C7:				; CODE XREF: sub_6ED97530+1ADj
		mov	eax, [esp+4Ch+var_28]
		or	[ebp+4], eax

loc_6ED975CE:				; CODE XREF: sub_6ED97530+E3j
					; sub_6ED97530+127j ...
		sub	ebx, 8

loc_6ED975D1:				; CODE XREF: sub_6ED97530+5Aj
		test	esi, esi
		jz	loc_6ED97720
		mov	eax, [esp+4Ch+var_34]
		sub	esi, 1
		mov	[esp+4Ch+var_2C], 0
		mov	[esp+4Ch+var_28], 0
		mov	[esp+4Ch+var_20], 0
		mov	[esp+4Ch+var_24], eax
		mov	eax, [ebx+4]
		mov	edx, eax
		shr	edx, 1
		mov	ecx, edx
		and	ecx, 1
		mov	[esp+4Ch+var_35], cl
		jnz	short loc_6ED97615
		cmp	[esp+4Ch+var_2D], 0
		jz	short loc_6ED975CE

loc_6ED97615:				; CODE XREF: sub_6ED97530+DCj
		mov	edx, eax
		and	edx, 1
		mov	[esp+4Ch+var_36], dl
		xor	edx, edx
		test	edi, edi
		jz	short loc_6ED97635
		sar	eax, 8
		cmp	[esp+4Ch+var_36], 0
		jz	short loc_6ED97632
		add	eax, [edi]
		mov	eax, [eax]

loc_6ED97632:				; CODE XREF: sub_6ED97530+FCj
		lea	edx, [edi+eax]

loc_6ED97635:				; CODE XREF: sub_6ED97530+F2j
		mov	eax, [ebx]
		mov	ecx, [eax]
		lea	eax, [esp+4Ch+var_2C]
		mov	[esp+4Ch+var_44], edx
		mov	edx, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_40], eax
		mov	[esp+4Ch+var_48], edx
		mov	eax, [ebx]
		mov	[esp+4Ch+var_4C], eax
		call	dword ptr [ecx+18h]
		test	al, al
		jz	loc_6ED975CE
		cmp	[esp+4Ch+var_20], 8
		jnz	loc_6ED97590
		cmp	[esp+4Ch+var_36], 0
		lea	esi, [esi+0]
		jz	loc_6ED97590
		mov	eax, [ebx]
		mov	[esp+4Ch+var_20], eax
		jmp	loc_6ED97590
; ---------------------------------------------------------------------------

loc_6ED97681:				; CODE XREF: sub_6ED97530+7Cj
		mov	eax, [esp+4Ch+var_2C]
		mov	[ebp+0], eax
		mov	eax, [esp+4Ch+var_28]
		mov	[ebp+4], eax
		mov	edx, [esp+4Ch+var_24]
		cmp	eax, 3
		mov	[ebp+8], edx
		mov	edx, [esp+4Ch+var_20]
		mov	[ebp+0Ch], edx
		jle	short loc_6ED976B4
		test	al, 2
		jz	short loc_6ED976F7
		mov	edx, [esp+4Ch+arg_0]
		test	byte ptr [edx+8], 1
		jnz	loc_6ED975CE

loc_6ED976B4:				; CODE XREF: sub_6ED97530+2Dj
					; sub_6ED97530+170j ...
		add	esp, 3Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED976C1:				; CODE XREF: sub_6ED97530+91j
		mov	eax, [esp+4Ch+var_20]
		cmp	eax, 8
		jz	short loc_6ED976E3
		cmp	edx, 8
		jz	short loc_6ED976E3
		mov	[esp+4Ch+var_48], edx
		mov	[esp+4Ch+var_4C], eax
		call	sub_6ED98640
		test	al, al
		jnz	loc_6ED975C7

loc_6ED976E3:				; CODE XREF: sub_6ED97530+198j
					; sub_6ED97530+19Dj
		mov	dword ptr [ebp+4], 2
		mov	eax, 1
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED976F7:				; CODE XREF: sub_6ED97530+174j
		test	al, 1
		jz	short loc_6ED976B4
		mov	ecx, [esp+4Ch+arg_0]
		test	byte ptr [ecx+8], 2
		jnz	loc_6ED975CE
		jmp	short loc_6ED976B4
; ---------------------------------------------------------------------------
		align 10h

loc_6ED97710:				; CODE XREF: sub_6ED97530+3Dj
		mov	eax, [esp+4Ch+arg_0]
		mov	eax, [eax+8]
		mov	[esp+4Ch+var_34], eax
		jmp	loc_6ED97573
; ---------------------------------------------------------------------------

loc_6ED97720:				; CODE XREF: sub_6ED97530+A3j
		mov	eax, [ebp+4]
		test	eax, eax
		setnz	al
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED97730:				; CODE XREF: sub_6ED97530+89j
		mov	dword ptr [ebp+0], 0
		mov	eax, 1
		mov	dword ptr [ebp+4], 2
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_6ED97530	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED97750	proc near		; DATA XREF: .rdata:6EDA78C4o

var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_45		= byte ptr -45h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h
arg_18		= dword	ptr  1Ch
arg_1C		= dword	ptr  20h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 6Ch
		mov	ebx, [esp+7Ch+arg_1C]
		test	byte ptr [ebx+10h], 10h
		jz	short loc_6ED97771
		mov	edx, [esp+7Ch+arg_0]
		mov	eax, [edx+8]
		mov	[ebx+10h], eax

loc_6ED97771:				; CODE XREF: sub_6ED97750+12j
		mov	ecx, [esp+7Ch+arg_18]
		cmp	[esp+7Ch+arg_10], ecx
		jz	loc_6ED97B91

loc_6ED97785:				; CODE XREF: sub_6ED97750+45Dj
		mov	eax, [esp+7Ch+arg_C]
		mov	edx, [esp+7Ch+arg_0]
		mov	[esp+7Ch+var_78], eax
		mov	[esp+7Ch+var_7C], edx
		call	sub_6ED98640
		test	al, al
		jnz	loc_6ED97A25
		mov	esi, [esp+7Ch+arg_0]
		mov	eax, [esp+7Ch+arg_8]
		mov	ebp, [esp+7Ch+arg_0]
		mov	[esp+7Ch+var_45], 0
		mov	esi, [esi+0Ch]
		or	eax, 1
		mov	[esp+7Ch+var_40], eax
		mov	[esp+7Ch+var_50], esi
		lea	edi, [ebp+esi*8+8]
		jmp	loc_6ED9786A
; ---------------------------------------------------------------------------

loc_6ED977D8:				; CODE XREF: sub_6ED97750+202j
		mov	ebp, [ebx]
		test	ebp, ebp
		mov	[esp+7Ch+var_4C], ebp
		jz	loc_6ED97B50

loc_6ED977E6:				; CODE XREF: sub_6ED97750+210j
		mov	ebp, [esp+7Ch+var_30]
		cmp	[esp+7Ch+var_4C], ebp
		jz	loc_6ED97B23
		test	ebp, ebp
		jz	loc_6ED97B30

loc_6ED977FC:				; CODE XREF: sub_6ED97750+3E2j
		cmp	ecx, 3
		mov	edx, [ebx+0Ch]
		jle	loc_6ED97980

loc_6ED97808:				; CODE XREF: sub_6ED97750+228j
		and	ecx, 1
		jnz	loc_6ED97AB1

loc_6ED97811:				; CODE XREF: sub_6ED97750+365j
		test	edx, edx
		jnz	short loc_6ED97817
		mov	dl, 1

loc_6ED97817:				; CODE XREF: sub_6ED97750+C3j
		test	esi, esi
		mov	ebp, esi
		mov	ecx, edx
		jnz	short loc_6ED9782B
		mov	bp, 1
		mov	[esp+7Ch+var_44], 1

loc_6ED9782B:				; CODE XREF: sub_6ED97750+CDj
					; sub_6ED97750+23Ej ...
		mov	eax, ecx
		xor	eax, ebp
		cmp	eax, 3
		jle	loc_6ED97A00

loc_6ED97838:				; CODE XREF: sub_6ED97750+2A7j
		cmp	ebp, 3
		jg	loc_6ED97A96
		mov	ebp, ecx

loc_6ED97843:				; CODE XREF: sub_6ED97750+35Cj
		test	ebp, 2
		mov	[ebx+0Ch], edx
		jnz	loc_6ED97A7E
		and	ebp, 1
		jz	loc_6ED97A7E
		mov	edx, [ebx+8]

loc_6ED9785E:				; CODE XREF: sub_6ED97750+21Cj
					; sub_6ED97750+2D0j ...
		cmp	edx, 4
		jz	loc_6ED97B87

loc_6ED97867:				; CODE XREF: sub_6ED97750+33Bj
					; sub_6ED97750+417j
		sub	edi, 8

loc_6ED9786A:				; CODE XREF: sub_6ED97750+83j
		mov	edx, [esp+7Ch+var_50]
		test	edx, edx
		jz	loc_6ED97B87
		mov	eax, [edi+4]
		mov	esi, [ebx+10h]
		sub	[esp+7Ch+var_50], 1
		mov	edx, [esp+7Ch+arg_8]
		mov	ecx, eax
		sar	ecx, 8
		test	al, 1
		mov	[esp+7Ch+var_30], 0
		mov	[esp+7Ch+var_2C], 0
		mov	[esp+7Ch+var_28], 0
		mov	[esp+7Ch+var_24], 0
		mov	[esp+7Ch+var_20], esi
		jz	short loc_6ED978C5
		mov	ebp, [esp+7Ch+arg_10]
		mov	edx, [esp+7Ch+var_40]
		add	ecx, [ebp+0]
		mov	ecx, [ecx]

loc_6ED978C5:				; CODE XREF: sub_6ED97750+163j
		test	al, 2
		jnz	short loc_6ED978DA
		cmp	[esp+7Ch+arg_4], 0FFFFFFFEh
		jz	loc_6ED97A88

loc_6ED978D7:				; CODE XREF: sub_6ED97750+341j
		and	edx, 0FFFFFFFDh

loc_6ED978DA:				; CODE XREF: sub_6ED97750+177j
		mov	eax, [edi]
		lea	ebp, [esp+7Ch+var_30]
		add	ecx, [esp+7Ch+arg_10]
		mov	esi, [eax]
		mov	[esp+7Ch+var_60], ebp
		mov	ebp, [esp+7Ch+arg_18]
		mov	[esp+7Ch+var_6C], ecx
		mov	ecx, [esp+7Ch+arg_C]
		mov	[esp+7Ch+var_74], edx
		mov	[esp+7Ch+var_7C], eax
		mov	[esp+7Ch+var_64], ebp
		mov	ebp, [esp+7Ch+arg_14]
		mov	[esp+7Ch+var_70], ecx
		mov	[esp+7Ch+var_68], ebp
		mov	ebp, [esp+7Ch+arg_4]
		mov	[esp+7Ch+var_78], ebp
		call	dword ptr [esi+1Ch]
		mov	esi, [esp+7Ch+var_24]
		mov	ecx, [esp+7Ch+var_28]
		or	ecx, [ebx+8]
		cmp	esi, 2
		mov	edx, ecx
		mov	[ebx+8], ecx
		mov	[esp+7Ch+var_44], esi
		jz	loc_6ED97BD2
		cmp	esi, 6
		jz	loc_6ED97BD2
		cmp	[esp+7Ch+var_45], 0
		jz	loc_6ED977D8
		mov	ebp, [ebx]
		test	ebp, ebp
		mov	[esp+7Ch+var_4C], ebp
		jnz	loc_6ED977E6
		mov	ebp, [esp+7Ch+var_30]
		test	ebp, ebp
		jz	loc_6ED9785E
		cmp	ecx, 3
		mov	edx, [ebx+0Ch]
		jg	loc_6ED97808
		xchg	ax, ax

loc_6ED97980:				; CODE XREF: sub_6ED97750+B2j
		test	edx, edx
		mov	ecx, edx
		mov	ebp, esi
		jle	loc_6ED97AC7

loc_6ED9798C:				; CODE XREF: sub_6ED97750+371j
					; sub_6ED97750+3BEj ...
		test	esi, esi
		jg	loc_6ED9782B
		cmp	ecx, 3
		jle	short loc_6ED979AF
		test	cl, 1
		lea	esi, [esi+0]
		jz	short loc_6ED979E3
		mov	esi, [esp+7Ch+arg_0]
		test	byte ptr [esi+8], 2
		jz	short loc_6ED979E3

loc_6ED979AF:				; CODE XREF: sub_6ED97750+247j
		mov	ebp, [esp+7Ch+arg_4]
		mov	esi, [esp+7Ch+var_30]
		test	ebp, ebp
		js	loc_6ED97C40
		add	esi, [esp+7Ch+arg_4]
		mov	ebp, 6
		cmp	[esp+7Ch+arg_18], esi
		mov	[esp+7Ch+var_44], 6
		jz	loc_6ED9782B

loc_6ED979E3:				; CODE XREF: sub_6ED97750+250j
					; sub_6ED97750+25Dj ...
		mov	ebp, 1
		mov	eax, ecx
		xor	eax, ebp
		cmp	eax, 3
		mov	[esp+7Ch+var_44], 1
		jg	loc_6ED97838
		lea	esi, [esi+0]

loc_6ED97A00:				; CODE XREF: sub_6ED97750+E2j
		and	ebp, ecx
		cmp	ebp, 3
		jg	loc_6ED97CA5
		mov	dword ptr [ebx], 0
		mov	edx, [ebx+8]
		mov	dword ptr [ebx+0Ch], 1
		mov	[esp+7Ch+var_45], 1
		jmp	loc_6ED9785E
; ---------------------------------------------------------------------------

loc_6ED97A25:				; CODE XREF: sub_6ED97750+51j
		mov	edx, [esp+7Ch+arg_10]
		mov	[ebx], edx
		mov	ecx, [esp+7Ch+arg_8]
		mov	[ebx+4], ecx
		mov	eax, [esp+7Ch+arg_4]
		test	eax, eax
		js	short loc_6ED97A70
		mov	eax, [esp+7Ch+arg_4]
		add	eax, edx
		cmp	[esp+7Ch+arg_18], eax
		setz	al
		movzx	eax, al
		lea	eax, [eax+eax*4+1]
		mov	[ebx+0Ch], eax
		xor	eax, eax

loc_6ED97A62:				; CODE XREF: sub_6ED97750+428j
					; sub_6ED97750+43Cj ...
		add	esp, 6Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED97A70:				; CODE XREF: sub_6ED97750+2F1j
		cmp	[esp+7Ch+arg_4], 0FFFFFFFEh
		jz	loc_6ED97BC4

loc_6ED97A7E:				; CODE XREF: sub_6ED97750+FCj
					; sub_6ED97750+105j
		add	esp, 6Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED97A88:				; CODE XREF: sub_6ED97750+181j
		and	esi, 3
		jz	loc_6ED97867
		jmp	loc_6ED978D7
; ---------------------------------------------------------------------------

loc_6ED97A96:				; CODE XREF: sub_6ED97750+EBj
		mov	eax, [esp+7Ch+var_30]
		mov	edx, [esp+7Ch+var_44]
		mov	[esp+7Ch+var_45], 0
		mov	[ebx], eax
		mov	eax, [esp+7Ch+var_2C]
		mov	[ebx+4], eax
		jmp	loc_6ED97843
; ---------------------------------------------------------------------------

loc_6ED97AB1:				; CODE XREF: sub_6ED97750+BBj
		test	byte ptr [ebx+10h], 2
		jz	loc_6ED97811
		test	edx, edx
		mov	ecx, edx
		mov	ebp, esi
		jg	loc_6ED9798C

loc_6ED97AC7:				; CODE XREF: sub_6ED97750+236j
		cmp	esi, 3
		mov	ebp, esi
		jle	short loc_6ED97AE3
		test	esi, 1
		jz	short loc_6ED97B40
		mov	eax, [esp+7Ch+arg_0]
		test	byte ptr [eax+8], 2
		jz	short loc_6ED97B40

loc_6ED97AE3:				; CODE XREF: sub_6ED97750+37Cj
		mov	eax, [esp+7Ch+arg_4]
		test	eax, eax
		js	loc_6ED97BE7
		mov	eax, [esp+7Ch+var_4C]
		mov	ecx, 6
		mov	edx, 6
		add	eax, [esp+7Ch+arg_4]
		cmp	[esp+7Ch+arg_18], eax
		jz	loc_6ED9798C

loc_6ED97B14:				; CODE XREF: sub_6ED97750+49Fj
		mov	ecx, 1
		mov	edx, 1
		jmp	loc_6ED9798C
; ---------------------------------------------------------------------------

loc_6ED97B23:				; CODE XREF: sub_6ED97750+9Ej
		mov	eax, [esp+7Ch+var_2C]
		or	[ebx+4], eax
		jmp	loc_6ED9785E
; ---------------------------------------------------------------------------
		align 10h

loc_6ED97B30:				; CODE XREF: sub_6ED97750+A6j
		test	al, al
		jnz	loc_6ED977FC
		jmp	loc_6ED9785E
; ---------------------------------------------------------------------------
		align 10h

loc_6ED97B40:				; CODE XREF: sub_6ED97750+384j
					; sub_6ED97750+391j
		mov	ecx, 1
		mov	edx, 1
		jmp	loc_6ED9782B
; ---------------------------------------------------------------------------
		align 10h

loc_6ED97B50:				; CODE XREF: sub_6ED97750+90j
		mov	esi, [esp+7Ch+var_30]
		mov	ebp, [esp+7Ch+var_2C]
		test	esi, esi
		mov	[ebx], esi
		mov	[ebx+4], ebp
		jz	short loc_6ED97B7E
		test	ecx, ecx
		mov	[esp+7Ch+var_45], al
		jz	loc_6ED97867
		mov	ecx, [esp+7Ch+arg_0]
		test	byte ptr [ecx+8], 1
		jz	loc_6ED97A62

loc_6ED97B7E:				; CODE XREF: sub_6ED97750+40Fj
		mov	[esp+7Ch+var_45], al
		jmp	loc_6ED9785E
; ---------------------------------------------------------------------------

loc_6ED97B87:				; CODE XREF: sub_6ED97750+111j
					; sub_6ED97750+120j
		movzx	eax, [esp+7Ch+var_45]
		jmp	loc_6ED97A62
; ---------------------------------------------------------------------------

loc_6ED97B91:				; CODE XREF: sub_6ED97750+2Fj
		mov	esi, [esp+7Ch+arg_14]
		mov	ebp, [esp+7Ch+arg_0]
		mov	[esp+7Ch+var_78], esi
		mov	[esp+7Ch+var_7C], ebp
		call	sub_6ED98640
		test	al, al
		jz	loc_6ED97785
		mov	eax, [esp+7Ch+arg_8]
		mov	[ebx+8], eax
		xor	eax, eax
		jmp	loc_6ED97A62
; ---------------------------------------------------------------------------

loc_6ED97BC4:				; CODE XREF: sub_6ED97750+328j
		mov	dword ptr [ebx+0Ch], 1
		xor	eax, eax
		jmp	loc_6ED97A62
; ---------------------------------------------------------------------------

loc_6ED97BD2:				; CODE XREF: sub_6ED97750+1EEj
					; sub_6ED97750+1F7j
		mov	edx, [esp+7Ch+var_30]
		mov	[ebx+0Ch], esi
		mov	[ebx], edx
		mov	edx, [esp+7Ch+var_2C]
		mov	[ebx+4], edx
		jmp	loc_6ED97A62
; ---------------------------------------------------------------------------

loc_6ED97BE7:				; CODE XREF: sub_6ED97750+39Cj
		cmp	[esp+7Ch+arg_4], 0FFFFFFFEh
		jz	loc_6ED97B14
		mov	edx, [esp+7Ch+arg_C]
		mov	ecx, [esp+7Ch+arg_18]
		mov	eax, [edx]
		mov	edx, [esp+7Ch+arg_14]
		mov	[esp+7Ch+var_6C], ecx
		mov	ecx, [esp+7Ch+var_4C]
		mov	[esp+7Ch+var_70], edx
		mov	edx, [esp+7Ch+arg_4]
		mov	[esp+7Ch+var_74], ecx
		mov	ecx, [esp+7Ch+arg_C]
		mov	[esp+7Ch+var_78], edx
		mov	[esp+7Ch+var_7C], ecx
		call	dword ptr [eax+20h]
		mov	edx, eax
		mov	ecx, eax
		jmp	loc_6ED9798C
; ---------------------------------------------------------------------------
		align 10h

loc_6ED97C40:				; CODE XREF: sub_6ED97750+26Cj
		cmp	[esp+7Ch+arg_4], 0FFFFFFFEh
		jz	loc_6ED979E3
		mov	ebp, [esp+7Ch+arg_C]
		mov	[esp+7Ch+var_58], edx
		mov	[esp+7Ch+var_54], ecx
		mov	eax, [ebp+0]
		mov	ebp, [esp+7Ch+arg_18]
		mov	[esp+7Ch+var_74], esi
		mov	esi, [esp+7Ch+arg_4]
		mov	[esp+7Ch+var_6C], ebp
		mov	ebp, [esp+7Ch+arg_14]
		mov	[esp+7Ch+var_78], esi
		mov	[esp+7Ch+var_70], ebp
		mov	ebp, [esp+7Ch+arg_C]
		mov	[esp+7Ch+var_7C], ebp
		call	dword ptr [eax+20h]
		mov	edx, [esp+7Ch+var_58]
		mov	ecx, [esp+7Ch+var_54]
		mov	[esp+7Ch+var_44], eax
		mov	ebp, eax
		jmp	loc_6ED9782B
; ---------------------------------------------------------------------------

loc_6ED97CA5:				; CODE XREF: sub_6ED97750+2B5j
		mov	dword ptr [ebx], 0
		mov	eax, 1
		mov	dword ptr [ebx+0Ch], 2
		jmp	loc_6ED97A62
sub_6ED97750	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED97CC0	proc near		; DATA XREF: .rdata:6EDA78C8o

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_30		= dword	ptr -30h
var_1D		= byte ptr -1Dh
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	edi, [esp+5Ch+arg_8]
		cmp	edi, [esp+5Ch+arg_10]
		mov	ebx, [esp+5Ch+arg_0]
		mov	ebp, [esp+5Ch+arg_4]
		jz	loc_6ED97D69

loc_6ED97CDD:				; CODE XREF: sub_6ED97CC0+C4j
		mov	esi, [ebx+0Ch]
		mov	[esp+5Ch+var_30], edi
		lea	ebx, [ebx+esi*8+0Ch]
		jmp	short loc_6ED97D46
; ---------------------------------------------------------------------------
		align 10h

loc_6ED97CF0:				; CODE XREF: sub_6ED97CC0+88j
		mov	edx, [ebx]
		sub	esi, 1
		test	dl, 2
		jz	short loc_6ED97D43
		mov	eax, edx
		mov	ecx, edx
		sar	eax, 8
		and	ecx, 1
		mov	[esp+5Ch+var_1D], cl
		jz	short loc_6ED97D17
		cmp	ebp, 0FFFFFFFDh
		jz	short loc_6ED97D43
		mov	edi, [esp+5Ch+var_30]
		add	eax, [edi]
		mov	eax, [eax]

loc_6ED97D17:				; CODE XREF: sub_6ED97CC0+48j
		mov	edx, [ebx-4]
		mov	edi, [esp+5Ch+arg_10]
		add	eax, [esp+5Ch+var_30]
		mov	ecx, [edx]
		mov	[esp+5Ch+var_4C], edi
		mov	edi, [esp+5Ch+arg_C]
		mov	[esp+5Ch+var_54], eax
		mov	[esp+5Ch+var_58], ebp
		mov	[esp+5Ch+var_5C], edx
		mov	[esp+5Ch+var_50], edi
		call	dword ptr [ecx+20h]
		cmp	eax, 3
		jg	short loc_6ED97D57

loc_6ED97D43:				; CODE XREF: sub_6ED97CC0+38j
					; sub_6ED97CC0+4Dj
		sub	ebx, 8

loc_6ED97D46:				; CODE XREF: sub_6ED97CC0+28j
		test	esi, esi
		jnz	short loc_6ED97CF0
		mov	eax, 1

loc_6ED97D4F:				; CODE XREF: sub_6ED97CC0+9Cj
					; sub_6ED97CC0+C2j
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED97D57:				; CODE XREF: sub_6ED97CC0+81j
		cmp	[esp+5Ch+var_1D], 0
		jz	short loc_6ED97D4F
		add	esp, 4Ch
		or	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED97D69:				; CODE XREF: sub_6ED97CC0+17j
		mov	eax, [esp+5Ch+arg_C]
		mov	[esp+5Ch+var_5C], ebx
		mov	[esp+5Ch+var_58], eax
		call	sub_6ED98640
		mov	edx, eax
		mov	eax, 6
		test	dl, dl
		jnz	short loc_6ED97D4F
		jmp	loc_6ED97CDD
sub_6ED97CC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED97D90	proc near		; CODE XREF: sub_6ED6CA30+D92p
					; sub_6ED6CA30+F58p

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9A40C
		mov	[ebp+var_18], offset sub_6ED97E5C
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	dword ptr [esp+8], 0
		mov	ecx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	eax, [eax]
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_38], 0FFFFFFFFh
		add	eax, 1
		mov	[esp+4], eax
		call	ds:_ZN7QStringC1EiN2Qt14InitializationE
		mov	eax, [ebp+arg_0]
		mov	edx, [eax]
		mov	eax, [edx]
		cmp	eax, 1
		jz	short loc_6ED97E50

loc_6ED97DF8:				; CODE XREF: sub_6ED97D90+C8j
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 1
		mov	[esp], edx
		call	ds:_ZN7QString7reallocEv
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx]
		mov	eax, [eax+0Ch]

loc_6ED97E13:				; CODE XREF: sub_6ED97D90+CAj
		mov	ecx, [ebp+arg_4]
		mov	edx, [ecx]
		movzx	edx, byte ptr [edx]
		mov	[eax], dx
		mov	edx, [ecx+4]
		add	eax, 2
		mov	edx, [edx]
		mov	ecx, [edx+8]
		mov	edx, [edx+0Ch]
		mov	[esp], eax	; void *
		add	ecx, ecx
		mov	[esp+8], ecx	; size_t
		mov	[esp+4], edx	; void *
		call	memcpy
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------

loc_6ED97E50:				; CODE XREF: sub_6ED97D90+66j
		mov	eax, [edx+0Ch]
		add	edx, 12h
		cmp	eax, edx
		jnz	short loc_6ED97DF8
		jmp	short loc_6ED97E13
sub_6ED97D90	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED97E5C	proc near		; DATA XREF: sub_6ED97D90+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	[esp+0], edx
		call	sub_6ED94560
		mov	ecx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
sub_6ED97E5C	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED97E90	proc near		; DATA XREF: .rdata:6EDA6DF4o
		mov	eax, 1
		retn
sub_6ED97E90	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED97EA0	proc near		; DATA XREF: .rdata:6EDA6E28o
		mov	eax, 2
		retn
sub_6ED97EA0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED97EB0	proc near		; DATA XREF: .rdata:6EDA6E00o
					; .rdata:6EDA6E80o ...
		xor	eax, eax
		retn
sub_6ED97EB0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED97EC0	proc near		; DATA XREF: .rdata:6EDA6E18o
					; .rdata:6EDA6E98o ...
		xor	eax, eax
		retn
sub_6ED97EC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED97ED0	proc near		; DATA XREF: .rdata:6EDA6DF8o
					; .rdata:6EDA6E78o ...
		xor	eax, eax
		retn
sub_6ED97ED0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED97EE0	proc near		; DATA XREF: .rdata:6EDA6E04o
					; .rdata:6EDA6E84o ...
		xor	eax, eax
		retn
sub_6ED97EE0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED97EF0	proc near		; DATA XREF: .rdata:6EDA6E20o
					; .rdata:6EDA6EA0o ...
		xor	eax, eax
		retn
sub_6ED97EF0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED97F00	proc near		; DATA XREF: .rdata:6EDA6E0Co
					; .rdata:6EDA6E8Co ...
		xor	eax, eax
		retn
sub_6ED97F00	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED97F10	proc near		; DATA XREF: .rdata:6EDA6DFCo
					; .rdata:6EDA6E7Co ...
		xor	eax, eax
		retn
sub_6ED97F10	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED97F20	proc near		; DATA XREF: .rdata:6EDA6E1Co
					; .rdata:6EDA6E9Co ...
		xor	eax, eax
		retn
sub_6ED97F20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED97F30	proc near		; DATA XREF: .rdata:6EDA6E74o
					; .rdata:6EDA6EF4o ...
		xor	eax, eax
		retn
sub_6ED97F30	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED97F40	proc near		; DATA XREF: .rdata:6EDA6E10o
					; .rdata:6EDA6E90o ...
		xor	eax, eax
		retn
sub_6ED97F40	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED97F50	proc near		; DATA XREF: .rdata:6EDA6E14o
					; .rdata:6EDA6E94o ...
		xor	eax, eax
		retn
sub_6ED97F50	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED97F60	proc near		; DATA XREF: .rdata:6EDA6EA8o
		mov	eax, 15h
		retn
sub_6ED97F60	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED97F70	proc near		; DATA XREF: .rdata:6EDA6E24o
					; .rdata:6EDA6EA4o ...
		xor	eax, eax
		retn
sub_6ED97F70	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED97F80	proc near		; DATA XREF: .rdata:6EDA6E08o
					; .rdata:6EDA6E88o ...
		xor	eax, eax
		retn
sub_6ED97F80	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED97F90	proc near		; DATA XREF: .rdata:6EDA6F10o
					; .rdata:6EDA74F0o
		mov	eax, 1
		retn
sub_6ED97F90	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED97FA0	proc near		; DATA XREF: .rdata:6EDA6F28o
		mov	eax, 3
		retn
sub_6ED97FA0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED97FB0	proc near		; DATA XREF: .rdata:6EDA7094o
		mov	eax, 1
		retn
sub_6ED97FB0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED97FC0	proc near		; DATA XREF: .rdata:6EDA70A8o
		mov	eax, 6
		retn
sub_6ED97FC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED97FD0	proc near		; DATA XREF: .rdata:6EDA7128o
		mov	eax, 8
		retn
sub_6ED97FD0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED97FE0	proc near		; DATA XREF: .rdata:6EDA7124o
		mov	eax, 1
		retn
sub_6ED97FE0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED97FF0	proc near		; DATA XREF: .rdata:6EDA71A8o
		mov	eax, 1
		retn
sub_6ED97FF0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98000	proc near		; DATA XREF: .rdata:6EDA7188o
		mov	eax, 1
		retn
sub_6ED98000	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98010	proc near		; DATA XREF: .rdata:6EDA73E0o
		mov	eax, 1
		retn
sub_6ED98010	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98020	proc near		; DATA XREF: .rdata:6EDA7408o
		mov	eax, 9
		retn
sub_6ED98020	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98030	proc near		; DATA XREF: .rdata:6EDA7478o
		mov	eax, 1
		retn
sub_6ED98030	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98040	proc near		; DATA XREF: .rdata:6EDA7488o
		mov	eax, 0Ch
		retn
sub_6ED98040	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98050	proc near		; DATA XREF: .rdata:6EDA74D8o
		mov	eax, 1
		retn
sub_6ED98050	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98060	proc near		; DATA XREF: .rdata:6EDA7508o
		mov	eax, 4
		retn
sub_6ED98060	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98070	proc near		; DATA XREF: .rdata:6EDA7564o
		mov	eax, 1
		retn
sub_6ED98070	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98080	proc near		; DATA XREF: .rdata:6EDA7588o
		mov	eax, 0Ah
		retn
sub_6ED98080	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98090	proc near		; DATA XREF: .rdata:6EDA75B4o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+4]
		mov	eax, [eax+4]
		mov	edx, [eax+9Ch]
		cmp	edx, 0FFFFFFFFh
		lea	eax, [edx+1]
		setnz	dl
		movzx	edx, dl
		sub	edx, 1
		or	eax, edx
		retn
sub_6ED98090	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED980C0	proc near		; DATA XREF: .rdata:6EDA75B0o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+4]
		mov	eax, [eax+4]
		mov	edx, [eax+0A0h]
		cmp	edx, 0FFFFFFFFh
		lea	eax, [edx+1]
		setnz	dl
		movzx	edx, dl
		sub	edx, 1
		or	eax, edx
		retn
sub_6ED980C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED980F0	proc near		; DATA XREF: .rdata:6EDA6F20o
					; .rdata:6EDA7120o ...
		mov	eax, 1
		retn
sub_6ED980F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98100	proc near		; DATA XREF: .rdata:6EDA7628o
		mov	eax, 16h
		retn
sub_6ED98100	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98110	proc near		; DATA XREF: .rdata:6EDA76ACo
		mov	eax, 1
		retn
sub_6ED98110	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98120	proc near		; DATA XREF: .rdata:6EDA76C8o
		mov	eax, 5
		retn
sub_6ED98120	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98130	proc near		; DATA XREF: .rdata:6EDA771Co
		mov	eax, 1
		retn
sub_6ED98130	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98140	proc near		; DATA XREF: .rdata:6EDA7748o
		mov	eax, 0Bh
		retn
sub_6ED98140	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98150	proc near		; DATA XREF: .rdata:6EDA77BCo
		mov	eax, 1
		retn
sub_6ED98150	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98160	proc near		; DATA XREF: .rdata:6EDA77C8o
		mov	eax, 7
		retn
sub_6ED98160	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98170	proc near		; CODE XREF: sub_6ED58FC0+140p
					; sub_6ED61480+819p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	ebp, [esp+2Ch+arg_0]
		mov	eax, [ebp+0]
		mov	esi, [eax+38h]
		mov	edi, eax
		mov	ebx, eax
		test	esi, esi
		jns	short loc_6ED98198

loc_6ED98189:				; CODE XREF: sub_6ED98170+56j
					; sub_6ED98170+6Ej
		add	esp, 1Ch
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6ED98193:				; CODE XREF: sub_6ED98170+48j
		mov	eax, [ebp+0]
		mov	edi, ebx

loc_6ED98198:				; CODE XREF: sub_6ED98170+17j
					; sub_6ED98170+52j
		mov	ebx, [edi+esi*4+4]
		mov	edx, eax
		cmp	ebx, eax
		jz	short loc_6ED981BF
		mov	eax, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_28], eax
		lea	eax, [ebx-10h]
		mov	[esp+2Ch+var_2C], eax
		call	ds:_ZNK7QStringltERKS_
		test	al, al
		jnz	short loc_6ED98193
		mov	eax, [ebp+0]
		mov	edx, eax

loc_6ED981BF:				; CODE XREF: sub_6ED98170+30j
		sub	esi, 1
		jns	short loc_6ED98198
		cmp	edx, ebx
		jz	short loc_6ED98189
		mov	edx, [esp+2Ch+arg_4]
		lea	eax, [ebx-10h]
		mov	[esp+2Ch+var_28], eax
		mov	[esp+2Ch+var_2C], edx
		call	ds:_ZNK7QStringltERKS_
		test	al, al
		jz	short loc_6ED98189
		mov	ebx, [ebp+0]
		add	esp, 1Ch
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_6ED98170	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED981F0	proc near		; CODE XREF: _ZN20QXmlNamespaceSupportC2Ev+F5p
					; _ZN20QXmlNamespaceSupport9setPrefixERK7QStringS2_+95p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	eax, [esp+2Ch+arg_0]
		mov	edi, [eax]
		mov	esi, [edi+38h]
		mov	ebx, edi
		test	esi, esi
		js	short loc_6ED98273
		mov	eax, [esp+2Ch+arg_4]
		lea	ebp, [eax+esi*4]
		mov	eax, edi
		nop

loc_6ED98210:				; CODE XREF: sub_6ED981F0+61j
		mov	ebx, [edi+esi*4+4]
		cmp	eax, ebx
		jz	short loc_6ED98240

loc_6ED98218:				; CODE XREF: sub_6ED981F0+4Ej
		mov	edx, [esp+2Ch+arg_8]
		lea	eax, [ebx-8]
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], edx
		call	ds:_ZNK7QStringltERKS_
		test	al, al
		jz	short loc_6ED98240
		mov	edx, [esp+2Ch+arg_0]
		mov	edi, ebx
		mov	ebx, [edi+esi*4+4]
		mov	eax, [edx]
		cmp	eax, ebx
		jnz	short loc_6ED98218

loc_6ED98240:				; CODE XREF: sub_6ED981F0+26j
					; sub_6ED981F0+3Ej
		mov	[ebp+0], edi
		sub	ebp, 4
		sub	esi, 1
		js	short loc_6ED98253
		mov	edx, [esp+2Ch+arg_0]
		mov	eax, [edx]
		jmp	short loc_6ED98210
; ---------------------------------------------------------------------------

loc_6ED98253:				; CODE XREF: sub_6ED981F0+59j
		mov	eax, [esp+2Ch+arg_0]
		cmp	[eax], ebx
		jz	short loc_6ED98273
		mov	edx, [esp+2Ch+arg_8]
		lea	eax, [ebx-8]
		mov	[esp+2Ch+var_28], eax
		mov	[esp+2Ch+var_2C], edx
		call	ds:_ZNK7QStringltERKS_
		test	al, al
		jnz	short loc_6ED98280

loc_6ED98273:				; CODE XREF: sub_6ED981F0+14j
					; sub_6ED981F0+69j
		add	esp, 1Ch
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED98280:				; CODE XREF: sub_6ED981F0+81j
		mov	eax, [esp+2Ch+arg_0]
		mov	ebx, [eax]
		add	esp, 1Ch
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_6ED981F0	endp


; =============== S U B	R O U T	I N E =======================================


sub_6ED98290	proc near		; CODE XREF: sub_6ED51550+500p
					; sub_6ED51550+A72p ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 3Ch
		mov	[esp+3Ch+var_10], ebx
		mov	eax, [esp+3Ch+arg_4]
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_C], esi
		mov	[esp+3Ch+var_8], edi
		mov	[esp+3Ch+var_4], ebp
		mov	ebp, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_3C], eax
		mov	edi, ebx
		call	ds:_Z5qHashRK7QString
		mov	ecx, [ebx]
		mov	edx, [ecx+18h]
		mov	esi, eax
		test	edx, edx
		mov	[esp+3Ch+var_20], edx
		jz	short loc_6ED982ED
		xor	edx, edx
		div	[esp+3Ch+var_20]
		mov	edi, edx
		shl	edi, 2
		add	edi, [ecx+4]
		mov	eax, [edi]
		cmp	eax, [ebx]
		jz	short loc_6ED982ED
		lea	esi, [esi+0]

loc_6ED982E0:				; CODE XREF: sub_6ED98290+5Bj
		cmp	esi, [eax+4]
		jz	short loc_6ED98310

loc_6ED982E5:				; CODE XREF: sub_6ED98290+96j
		mov	edi, [edi]
		mov	eax, [edi]
		cmp	eax, [ebx]
		jnz	short loc_6ED982E0

loc_6ED982ED:				; CODE XREF: sub_6ED98290+37j
					; sub_6ED98290+4Bj ...
		test	ebp, ebp
		jz	short loc_6ED982F4
		mov	[ebp+0], esi

loc_6ED982F4:				; CODE XREF: sub_6ED98290+5Fj
		mov	eax, edi
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED98310:				; CODE XREF: sub_6ED98290+53j
		add	eax, 8
		mov	[esp+3Ch+var_38], eax
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_3C], eax
		call	ds:_ZNK7QStringeqERKS_
		test	al, al
		jz	short loc_6ED982E5
		jmp	short loc_6ED982ED
sub_6ED98290	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98330	proc near		; CODE XREF: sub_6ED78A10+491p
					; sub_6ED78A10+5FCp ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 3Ch
		mov	[esp+3Ch+var_10], ebx
		mov	eax, [esp+3Ch+arg_4]
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_C], esi
		mov	[esp+3Ch+var_8], edi
		mov	[esp+3Ch+var_4], ebp
		mov	ebp, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_3C], eax
		mov	edi, ebx
		call	ds:_Z5qHashRK7QString
		mov	ecx, [ebx]
		mov	edx, [ecx+18h]
		mov	esi, eax
		test	edx, edx
		mov	[esp+3Ch+var_20], edx
		jz	short loc_6ED9838D
		xor	edx, edx
		div	[esp+3Ch+var_20]
		mov	edi, edx
		shl	edi, 2
		add	edi, [ecx+4]
		mov	eax, [edi]
		cmp	eax, [ebx]
		jz	short loc_6ED9838D
		lea	esi, [esi+0]

loc_6ED98380:				; CODE XREF: sub_6ED98330+5Bj
		cmp	esi, [eax+4]
		jz	short loc_6ED983B0

loc_6ED98385:				; CODE XREF: sub_6ED98330+96j
		mov	edi, [edi]
		mov	eax, [edi]
		cmp	eax, [ebx]
		jnz	short loc_6ED98380

loc_6ED9838D:				; CODE XREF: sub_6ED98330+37j
					; sub_6ED98330+4Bj ...
		test	ebp, ebp
		jz	short loc_6ED98394
		mov	[ebp+0], esi

loc_6ED98394:				; CODE XREF: sub_6ED98330+5Fj
		mov	eax, edi
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED983B0:				; CODE XREF: sub_6ED98330+53j
		add	eax, 8
		mov	[esp+3Ch+var_38], eax
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_3C], eax
		call	ds:_ZNK7QStringeqERKS_
		test	al, al
		jz	short loc_6ED98385
		jmp	short loc_6ED9838D
sub_6ED98330	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED983D0	proc near		; CODE XREF: _ZNK11QDomElement12hasAttributeERK7QString-3Ap
					; sub_6ED45BD0+36p ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 3Ch
		mov	[esp+3Ch+var_10], ebx
		mov	eax, [esp+3Ch+arg_4]
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_C], esi
		mov	[esp+3Ch+var_8], edi
		mov	[esp+3Ch+var_4], ebp
		mov	ebp, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_3C], eax
		mov	edi, ebx
		call	ds:_Z5qHashRK7QString
		mov	ecx, [ebx]
		mov	edx, [ecx+18h]
		mov	esi, eax
		test	edx, edx
		mov	[esp+3Ch+var_20], edx
		jz	short loc_6ED9842D
		xor	edx, edx
		div	[esp+3Ch+var_20]
		mov	edi, edx
		shl	edi, 2
		add	edi, [ecx+4]
		mov	eax, [edi]
		cmp	eax, [ebx]
		jz	short loc_6ED9842D
		lea	esi, [esi+0]

loc_6ED98420:				; CODE XREF: sub_6ED983D0+5Bj
		cmp	esi, [eax+4]
		jz	short loc_6ED98450

loc_6ED98425:				; CODE XREF: sub_6ED983D0+96j
		mov	edi, [edi]
		mov	eax, [edi]
		cmp	eax, [ebx]
		jnz	short loc_6ED98420

loc_6ED9842D:				; CODE XREF: sub_6ED983D0+37j
					; sub_6ED983D0+4Bj ...
		test	ebp, ebp
		jz	short loc_6ED98434
		mov	[ebp+0], esi

loc_6ED98434:				; CODE XREF: sub_6ED983D0+5Fj
		mov	eax, edi
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED98450:				; CODE XREF: sub_6ED983D0+53j
		add	eax, 8
		mov	[esp+3Ch+var_38], eax
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_3C], eax
		call	ds:_ZNK7QStringeqERKS_
		test	al, al
		jz	short loc_6ED98425
		jmp	short loc_6ED9842D
sub_6ED983D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98470	proc near		; CODE XREF: sub_6ED59E30+2E7p
					; sub_6ED59E30+627p ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 3Ch
		mov	[esp+3Ch+var_10], ebx
		mov	eax, [esp+3Ch+arg_4]
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_C], esi
		mov	[esp+3Ch+var_8], edi
		mov	[esp+3Ch+var_4], ebp
		mov	ebp, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_3C], eax
		mov	edi, ebx
		call	ds:_Z5qHashRK7QString
		mov	ecx, [ebx]
		mov	edx, [ecx+18h]
		mov	esi, eax
		test	edx, edx
		mov	[esp+3Ch+var_20], edx
		jz	short loc_6ED984CD
		xor	edx, edx
		div	[esp+3Ch+var_20]
		mov	edi, edx
		shl	edi, 2
		add	edi, [ecx+4]
		mov	eax, [edi]
		cmp	eax, [ebx]
		jz	short loc_6ED984CD
		lea	esi, [esi+0]

loc_6ED984C0:				; CODE XREF: sub_6ED98470+5Bj
		cmp	esi, [eax+4]
		jz	short loc_6ED984F0

loc_6ED984C5:				; CODE XREF: sub_6ED98470+96j
		mov	edi, [edi]
		mov	eax, [edi]
		cmp	eax, [ebx]
		jnz	short loc_6ED984C0

loc_6ED984CD:				; CODE XREF: sub_6ED98470+37j
					; sub_6ED98470+4Bj ...
		test	ebp, ebp
		jz	short loc_6ED984D4
		mov	[ebp+0], esi

loc_6ED984D4:				; CODE XREF: sub_6ED98470+5Fj
		mov	eax, edi
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED984F0:				; CODE XREF: sub_6ED98470+53j
		add	eax, 8
		mov	[esp+3Ch+var_38], eax
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_3C], eax
		call	ds:_ZNK7QStringeqERKS_
		test	al, al
		jz	short loc_6ED984C5
		jmp	short loc_6ED984CD
sub_6ED98470	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98510	proc near		; CODE XREF: sub_6ED59E30+EBp
					; sub_6ED59E30+34Cp ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 3Ch
		mov	[esp+3Ch+var_10], ebx
		mov	eax, [esp+3Ch+arg_4]
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_C], esi
		mov	[esp+3Ch+var_8], edi
		mov	[esp+3Ch+var_4], ebp
		mov	ebp, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_3C], eax
		mov	edi, ebx
		call	ds:_Z5qHashRK7QString
		mov	ecx, [ebx]
		mov	edx, [ecx+18h]
		mov	esi, eax
		test	edx, edx
		mov	[esp+3Ch+var_20], edx
		jz	short loc_6ED9856D
		xor	edx, edx
		div	[esp+3Ch+var_20]
		mov	edi, edx
		shl	edi, 2
		add	edi, [ecx+4]
		mov	eax, [edi]
		cmp	eax, [ebx]
		jz	short loc_6ED9856D
		lea	esi, [esi+0]

loc_6ED98560:				; CODE XREF: sub_6ED98510+5Bj
		cmp	esi, [eax+4]
		jz	short loc_6ED98590

loc_6ED98565:				; CODE XREF: sub_6ED98510+96j
		mov	edi, [edi]
		mov	eax, [edi]
		cmp	eax, [ebx]
		jnz	short loc_6ED98560

loc_6ED9856D:				; CODE XREF: sub_6ED98510+37j
					; sub_6ED98510+4Bj ...
		test	ebp, ebp
		jz	short loc_6ED98574
		mov	[ebp+0], esi

loc_6ED98574:				; CODE XREF: sub_6ED98510+5Fj
		mov	eax, edi
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED98590:				; CODE XREF: sub_6ED98510+53j
		add	eax, 8
		mov	[esp+3Ch+var_38], eax
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_3C], eax
		call	ds:_ZNK7QStringeqERKS_
		test	al, al
		jz	short loc_6ED98565
		jmp	short loc_6ED9856D
sub_6ED98510	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED985B0	proc near		; DATA XREF: .rdata:6EDA78F0o
		mov	eax, offset a__gnu_cxx__con ; "__gnu_cxx::__concurrence_lock_error"
		retn
sub_6ED985B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED985C0	proc near		; DATA XREF: .rdata:6EDA7908o
		mov	eax, offset a__gnu_cxx__c_0 ; "__gnu_cxx::__concurrence_unlock_error"
		retn
sub_6ED985C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED985D0	proc near		; DATA XREF: .rdata:6EDA7920o
		mov	eax, offset aStdBad_excepti ; "std::bad_exception"
		retn
sub_6ED985D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED985E0	proc near		; DATA XREF: .rdata:6EDA7938o
		mov	eax, offset aStdBad_alloc ; "std::bad_alloc"
		retn
sub_6ED985E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED985F0	proc near		; DATA XREF: .rdata:6EDA7950o
		mov	eax, offset aStdException ; "std::exception"
		retn
sub_6ED985F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98600	proc near		; DATA XREF: .rdata:6EDA7978o
		sub	esp, 0Ch
		add	esp, 0Ch
		jmp	sub_6ED98640
sub_6ED98600	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98610	proc near		; DATA XREF: .rdata:6EDA797Co
		xor	eax, eax
		retn
sub_6ED98610	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98620	proc near		; DATA XREF: .rdata:6EDA7810o
					; .rdata:6EDA7870o ...
		xor	eax, eax
		retn
sub_6ED98620	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98630	proc near		; DATA XREF: .rdata:6EDA7814o
					; .rdata:6EDA7874o ...
		xor	eax, eax
		retn
sub_6ED98630	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98640	proc near		; CODE XREF: sub_6ED97100+2Ap
					; sub_6ED97180+17p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, 1
		mov	edx, [esp+1Ch+arg_0]
		mov	ecx, [esp+1Ch+arg_4]
		cmp	ecx, edx
		jz	short loc_6ED9866B
		mov	eax, [ecx+4]
		mov	[esp+1Ch+var_18], eax ;	char *
		mov	eax, [edx+4]
		mov	[esp+1Ch+var_1C], eax ;	char *
		call	strcmp
		test	eax, eax
		setz	al

loc_6ED9866B:				; CODE XREF: sub_6ED98640+12j
		add	esp, 1Ch
		retn
sub_6ED98640	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98670	proc near		; DATA XREF: .rdata:6EDA791Co

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7948
		add	esp, 0Ch
		jmp	sub_6ED988B0
sub_6ED98670	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98690	proc near		; DATA XREF: sub_6ED9909D+C8o
					; .rdata:off_6EDA7918o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7948
		retn
sub_6ED98690	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		mov	dword ptr [eax], offset	off_6EDA7948
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED986B0	proc near		; DATA XREF: .rdata:6EDA7934o

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_6EDA7930
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED98750
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_6ED988B0
sub_6ED986B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED986E0	proc near		; DATA XREF: sub_6ED988D0+86o
					; .rdata:off_6EDA7930o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7930
		add	esp, 0Ch
		jmp	sub_6ED98750
sub_6ED986E0	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		mov	eax, [esp+10h]
		mov	dword ptr [eax], offset	off_6EDA7930
		add	esp, 0Ch
		jmp	sub_6ED98750
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98720	proc near		; DATA XREF: .rdata:6EDA794Co

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7948
		add	esp, 0Ch
		jmp	sub_6ED988B0
sub_6ED98720	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98740	proc near		; DATA XREF: .rdata:off_6EDA7948o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7948
		retn
sub_6ED98740	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98750	proc near		; CODE XREF: sub_6ED96DE0+11p
					; sub_6ED96E10+10j ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7948
		retn
sub_6ED98750	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98760	proc near		; DATA XREF: .rdata:6EDA796Co

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7968
		add	esp, 0Ch
		jmp	sub_6ED988B0
sub_6ED98760	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98780	proc near		; DATA XREF: .rdata:off_6EDA7968o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7968
		retn
sub_6ED98780	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED98790	proc near		; CODE XREF: sub_6ED90350+11p
					; sub_6ED90380+10j ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_6EDA7968
		retn
sub_6ED98790	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED987A0	proc near		; CODE XREF: sub_6ED997C0+58Ep

var_1C		= dword	ptr -1Ch

		sub	esp, 1Ch
		mov	eax, off_6ED9FA2C
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED90300
sub_6ED987A0	endp

; ---------------------------------------------------------------------------
		mov	edx, [esp+4]
		mov	eax, off_6ED9FA28
		mov	off_6ED9FA28, edx
		retn
; ---------------------------------------------------------------------------
		mov	edx, [esp+4]
		mov	eax, off_6ED9FA2C
		mov	off_6ED9FA2C, edx
		retn
; ---------------------------------------------------------------------------
		mov	edx, [esp+4]
		mov	eax, dword_6ED9FA3C
		mov	dword_6ED9FA3C,	edx
		retn
; ---------------------------------------------------------------------------
		sub	esp, 0Ch
		call	sub_6ED99540
		mov	eax, [eax+4]
		test	eax, eax
		setnz	al
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED98800	proc near		; CODE XREF: sub_6ED90300+7p
					; .text:6ED98C5Cp ...

var_1C		= dword	ptr -1Ch

		sub	esp, 1Ch
		mov	eax, off_6ED9FA28
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED90270
sub_6ED98800	endp

; Exported entry 601. _ZThn12_N18QXmlDefaultHandlerD0Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZThn12_N18QXmlDefaultHandlerD0Ev
_ZThn12_N18QXmlDefaultHandlerD0Ev proc near ; DATA XREF: .rdata:6EDA72C8o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF4h
		jmp	_ZN18QXmlDefaultHandlerD0Ev
_ZThn12_N18QXmlDefaultHandlerD0Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 602. _ZThn12_N18QXmlDefaultHandlerD1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZThn12_N18QXmlDefaultHandlerD1Ev
_ZThn12_N18QXmlDefaultHandlerD1Ev proc near ; DATA XREF: .rdata:6EDA72C4o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF4h
		jmp	_ZN18QXmlDefaultHandlerD1Ev
_ZThn12_N18QXmlDefaultHandlerD1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 611. _ZThn16_N18QXmlDefaultHandlerD0Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZThn16_N18QXmlDefaultHandlerD0Ev
_ZThn16_N18QXmlDefaultHandlerD0Ev proc near ; DATA XREF: .rdata:6EDA72E0o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF0h
		jmp	_ZN18QXmlDefaultHandlerD0Ev
_ZThn16_N18QXmlDefaultHandlerD0Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 612. _ZThn16_N18QXmlDefaultHandlerD1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZThn16_N18QXmlDefaultHandlerD1Ev
_ZThn16_N18QXmlDefaultHandlerD1Ev proc near ; DATA XREF: .rdata:6EDA72DCo

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF0h
		jmp	_ZN18QXmlDefaultHandlerD1Ev
_ZThn16_N18QXmlDefaultHandlerD1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 617. _ZThn20_N18QXmlDefaultHandlerD0Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZThn20_N18QXmlDefaultHandlerD0Ev
_ZThn20_N18QXmlDefaultHandlerD0Ev proc near ; DATA XREF: .rdata:6EDA7310o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFECh
		jmp	_ZN18QXmlDefaultHandlerD0Ev
_ZThn20_N18QXmlDefaultHandlerD0Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 618. _ZThn20_N18QXmlDefaultHandlerD1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZThn20_N18QXmlDefaultHandlerD1Ev
_ZThn20_N18QXmlDefaultHandlerD1Ev proc near ; DATA XREF: .rdata:6EDA730Co

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFECh
		jmp	_ZN18QXmlDefaultHandlerD1Ev
_ZThn20_N18QXmlDefaultHandlerD1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 623. _ZThn4_N18QXmlDefaultHandlerD0Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZThn4_N18QXmlDefaultHandlerD0Ev
_ZThn4_N18QXmlDefaultHandlerD0Ev proc near ; DATA XREF:	.rdata:6EDA728Co

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFFCh
		jmp	_ZN18QXmlDefaultHandlerD0Ev
_ZThn4_N18QXmlDefaultHandlerD0Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 624. _ZThn4_N18QXmlDefaultHandlerD1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZThn4_N18QXmlDefaultHandlerD1Ev
_ZThn4_N18QXmlDefaultHandlerD1Ev proc near ; DATA XREF:	.rdata:6EDA7288o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFFCh
		jmp	_ZN18QXmlDefaultHandlerD1Ev
_ZThn4_N18QXmlDefaultHandlerD1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 628. _ZThn8_N18QXmlDefaultHandlerD0Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZThn8_N18QXmlDefaultHandlerD0Ev
_ZThn8_N18QXmlDefaultHandlerD0Ev proc near ; DATA XREF:	.rdata:6EDA72ACo

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF8h
		jmp	_ZN18QXmlDefaultHandlerD0Ev
_ZThn8_N18QXmlDefaultHandlerD0Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 629. _ZThn8_N18QXmlDefaultHandlerD1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZThn8_N18QXmlDefaultHandlerD1Ev
_ZThn8_N18QXmlDefaultHandlerD1Ev proc near ; DATA XREF:	.rdata:6EDA72A8o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF8h
		jmp	_ZN18QXmlDefaultHandlerD1Ev
_ZThn8_N18QXmlDefaultHandlerD1Ev endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED988B0	proc near		; CODE XREF: sub_6ED43DF0+5Bp
					; _ZN18QDomImplementationD1Ev+20j ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		test	eax, eax
		jz	short loc_6ED988C3
		add	esp, 0Ch
		jmp	free
; ---------------------------------------------------------------------------

loc_6ED988C3:				; CODE XREF: sub_6ED988B0+9j
		add	esp, 0Ch
		retn
sub_6ED988B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6ED988D0(size_t)
sub_6ED988D0	proc near		; CODE XREF: _ZN12QDomDocument19elementsByTagNameNSERK7QStringS2_+3Dp
					; _ZNK12QDomDocument17elementsByTagNameERK7QString+3Dp	...

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9AE88
		mov	[ebp+var_18], offset sub_6ED98975
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		test	eax, eax
		jnz	short loc_6ED98922
		mov	[ebp+arg_0], 1
		jmp	short loc_6ED98922
; ---------------------------------------------------------------------------
		align 10h

loc_6ED98910:				; CODE XREF: sub_6ED988D0+62j
		mov	eax, dword_6ED9FA3C
		test	eax, eax
		jz	short loc_6ED98944
		mov	[ebp+var_38], 1
		call	eax ; dword_6ED9FA3C

loc_6ED98922:				; CODE XREF: sub_6ED988D0+34j
					; sub_6ED988D0+3Dj
		mov	eax, [ebp+arg_0]
		mov	[esp], eax	; size_t
		call	malloc
		test	eax, eax
		mov	[ebp+var_40], eax
		jz	short loc_6ED98910
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_40]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED98944:				; CODE XREF: sub_6ED988D0+47j
		mov	dword ptr [esp], 4
		call	sub_6ED98C90
		mov	dword ptr [eax], offset	off_6EDA7930
		mov	dword ptr [esp+8], offset sub_6ED986E0
		mov	dword ptr [esp+4], offset off_6EDA66DC
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	sub_6ED99760
sub_6ED988D0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED98975	proc near		; DATA XREF: sub_6ED988D0+20o
		add	ebp, 8
		cmp	dword ptr [ebp-30h], 0FFFFFFFFh
		mov	eax, [ebp-34h]
		jz	short loc_6ED98990
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED98990:				; CODE XREF: sub_6ED98975+Aj
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	sub_6ED99030
sub_6ED98975	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED989A0	proc near		; CODE XREF: sub_6ED51550+3C3p

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	edi, [esp+3Ch+arg_4]
		mov	esi, [esp+3Ch+arg_0]
		mov	ebp, [edi]
		mov	ebx, [esi]
		mov	eax, [ebp+0]
		mov	edx, [ebx+8]
		mov	ecx, [eax]
		xor	eax, eax
		test	ecx, ecx
		jz	short loc_6ED989D1
		mov	[esp+3Ch+var_3C], ecx ;	char *
		mov	[esp+3Ch+var_20], edx
		call	strlen
		mov	edx, [esp+3Ch+var_20]

loc_6ED989D1:				; CODE XREF: sub_6ED989A0+1Fj
		mov	ecx, [ebp+4]
		mov	ecx, [ecx]
		add	edx, [ecx+8]
		lea	edx, [eax+edx+1]
		mov	eax, [ebx]
		cmp	eax, 1
		jz	loc_6ED98A90

loc_6ED989E8:				; CODE XREF: sub_6ED989A0+F3j
		mov	[esp+3Ch+var_38], edx
		mov	[esp+3Ch+var_3C], esi
		call	ds:_ZN7QString7reallocEi
		mov	ebx, [esi]
		or	byte ptr [ebx+10h], 10h
		mov	eax, [esi]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_6ED98AB0

loc_6ED98A08:				; CODE XREF: sub_6ED989A0+104j
					; sub_6ED989A0+118j
		mov	[esp+3Ch+var_3C], esi
		call	ds:_ZN7QString7reallocEv
		mov	eax, [esi]
		mov	edx, [eax+0Ch]

loc_6ED98A16:				; CODE XREF: sub_6ED989A0+11Ej
		mov	eax, [eax+8]
		mov	ecx, [edi]
		lea	ebx, [edx+eax*2]
		mov	eax, [ecx]
		mov	edx, [eax]
		movzx	eax, byte ptr [edx]
		test	al, al
		jz	short loc_6ED98A43
		lea	esi, [esi+0]

loc_6ED98A30:				; CODE XREF: sub_6ED989A0+A1j
		add	edx, 1
		movzx	eax, al
		mov	[ebx], ax
		movzx	eax, byte ptr [edx]
		add	ebx, 2
		test	al, al
		jnz	short loc_6ED98A30

loc_6ED98A43:				; CODE XREF: sub_6ED989A0+87j
		mov	eax, [ecx+4]
		mov	eax, [eax]
		mov	ebp, [eax+8]
		mov	eax, [eax+0Ch]
		mov	[esp+3Ch+var_3C], ebx ;	void *
		add	ebp, ebp
		mov	[esp+3Ch+var_34], ebp ;	size_t
		add	ebx, ebp
		mov	[esp+3Ch+var_38], eax ;	void *
		call	memcpy
		mov	eax, [edi+4]
		movzx	eax, byte ptr [eax]
		mov	[ebx], ax
		mov	eax, [esi]
		add	ebx, 2
		sub	ebx, [eax+0Ch]
		mov	[esp+3Ch+var_3C], esi
		sar	ebx, 1
		mov	[esp+3Ch+var_38], ebx
		call	ds:_ZN7QString6resizeEi
		add	esp, 2Ch
		mov	eax, esi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED98A90:				; CODE XREF: sub_6ED989A0+42j
		cmp	edx, [ebx+4]
		jg	loc_6ED989E8
		or	byte ptr [ebx+10h], 10h
		mov	eax, [esi]
		mov	edx, [eax]
		cmp	edx, 1
		jnz	loc_6ED98A08
		lea	esi, [esi+0]

loc_6ED98AB0:				; CODE XREF: sub_6ED989A0+62j
		mov	edx, [eax+0Ch]
		lea	ecx, [eax+12h]
		cmp	edx, ecx
		jnz	loc_6ED98A08
		jmp	loc_6ED98A16
sub_6ED989A0	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		lea	eax, [ebp-8]
		push	edi
		sub	esp, 64h
		mov	[ebp-2Ch], eax
		lea	eax, [ebp-4Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-34h], offset sub_6ED997C0
		mov	dword ptr [ebp-30h], offset dword_6ED9AF10
		mov	dword ptr [ebp-28h], offset loc_6ED98C22
		mov	[ebp-24h], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 50h
		call	malloc
		test	eax, eax
		mov	[ebp-50h], eax
		jz	short loc_6ED98B40

loc_6ED98B13:				; CODE XREF: .text:6ED98BB1j
					; .text:6ED98BC8j
		call	sub_6ED99540
		mov	edi, [ebp-50h]
		mov	ecx, 14h
		add	dword ptr [eax+4], 1
		xor	eax, eax
		rep stosd
		lea	eax, [ebp-4Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp-50h]
		add	esp, 64h
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED98B40:				; CODE XREF: .text:6ED98B11j
		mov	ecx, dword_6ED9B00C
		mov	dword ptr [ebp-0Ch], offset dword_6ED9FA30
		test	ecx, ecx
		jz	short loc_6ED98B6C
		mov	dword ptr [esp], offset	dword_6ED9FA30
		mov	dword ptr [ebp-48h], 3
		call	sub_6ED8F7F0
		test	eax, eax
		jnz	loc_6ED98BF8

loc_6ED98B6C:				; CODE XREF: .text:6ED98B4Fj
		mov	edx, dword_6ED9B01C
		xor	ecx, ecx
		mov	eax, edx
		jmp	short loc_6ED98B86
; ---------------------------------------------------------------------------

loc_6ED98B78:				; CODE XREF: .text:6ED98B88j
		add	ecx, 1
		cmp	ecx, 20h
		jz	loc_6ED98C55
		shr	eax, 1

loc_6ED98B86:				; CODE XREF: .text:6ED98B76j
		test	al, 1
		jnz	short loc_6ED98B78
		mov	eax, 1
		shl	eax, cl
		or	eax, edx
		mov	edx, dword_6ED9B00C
		mov	dword_6ED9B01C,	eax
		lea	eax, [ecx+ecx*4]
		shl	eax, 4
		add	eax, offset dword_6ED9F020
		test	edx, edx
		mov	[ebp-50h], eax
		mov	eax, [ebp-0Ch]
		jz	loc_6ED98B13
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 1
		call	sub_6ED8F6D0
		test	eax, eax
		jz	loc_6ED98B13
		mov	dword ptr [esp], 4
		call	sub_6ED98C90
		mov	dword ptr [eax], offset	off_6EDA7900
		mov	dword ptr [esp+8], offset sub_6ED96E60
		mov	dword ptr [esp+4], offset off_6EDA66C4
		mov	[esp], eax
		call	sub_6ED99760
; ---------------------------------------------------------------------------

loc_6ED98BF8:				; CODE XREF: .text:6ED98B66j
		mov	dword ptr [esp], 4
		call	sub_6ED98C90
		mov	dword ptr [eax], offset	off_6EDA78E8
		mov	dword ptr [esp+8], offset sub_6ED96E10
		mov	dword ptr [esp+4], offset off_6EDA66B8
		mov	[esp], eax
		call	sub_6ED99760
; ---------------------------------------------------------------------------

loc_6ED98C22:				; DATA XREF: .text:6ED98AF1o
		add	ebp, 8
		mov	edx, [ebp-44h]
		mov	eax, [ebp-48h]
		mov	[ebp-54h], edx
		mov	edx, [ebp-40h]
		cmp	eax, 1
		mov	[ebp-58h], edx
		jz	short loc_6ED98C61
		cmp	eax, 2
		jz	short loc_6ED98C73
		cmp	edx, 0FFFFFFFFh
		jz	short loc_6ED98C79

loc_6ED98C43:				; CODE XREF: .text:6ED98C77j
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED98C55:				; CODE XREF: .text:6ED98B7Ej
		mov	dword ptr [ebp-48h], 2
		call	sub_6ED98800
; ---------------------------------------------------------------------------

loc_6ED98C61:				; CODE XREF: .text:6ED98C37j
		lea	eax, [ebp-0Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	sub_6ED96D20

loc_6ED98C73:				; CODE XREF: .text:6ED98C3Cj
		cmp	dword ptr [ebp-58h], 0FFFFFFFFh
		jnz	short loc_6ED98C43

loc_6ED98C79:				; CODE XREF: .text:6ED98C41j
		mov	edx, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_6ED99030
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED98C90	proc near		; CODE XREF: sub_6ED96D20+65p
					; sub_6ED988D0+7Bp ...

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	edi
		sub	esp, 74h
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_6ED997C0
		mov	[ebp+var_30], offset dword_6ED9AEFC
		mov	[ebp+var_28], offset sub_6ED98E61
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		add	eax, 60h
		mov	[ebp+var_54], eax
		mov	[esp], eax	; size_t
		call	malloc
		test	eax, eax
		mov	[ebp+var_50], eax
		jz	short loc_6ED98D40

loc_6ED98CD8:				; CODE XREF: sub_6ED98C90+135j
					; sub_6ED98C90+14Cj
		call	sub_6ED99540
		mov	edi, [ebp+var_50]
		mov	edx, 60h
		add	dword ptr [eax+4], 1
		test	edi, 1
		jnz	loc_6ED98E10
		test	edi, 2
		jnz	loc_6ED98E27

loc_6ED98D01:				; CODE XREF: sub_6ED98C90+191j
					; sub_6ED98C90+1A2j
		mov	ecx, edx
		xor	eax, eax
		shr	ecx, 2
		test	dl, 2
		rep stosd
		jz	short loc_6ED98D17
		mov	word ptr [edi],	0
		add	edi, 2

loc_6ED98D17:				; CODE XREF: sub_6ED98C90+7Dj
		and	edx, 1
		jz	short loc_6ED98D1F
		mov	byte ptr [edi],	0

loc_6ED98D1F:				; CODE XREF: sub_6ED98C90+8Aj
		mov	eax, [ebp+var_50]
		add	eax, 60h
		mov	[ebp+var_58], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_58]
		add	esp, 74h
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED98D40:				; CODE XREF: sub_6ED98C90+46j
		mov	eax, dword_6ED9B00C
		mov	[ebp+var_C], offset dword_6ED9FA30
		test	eax, eax
		jz	short loc_6ED98D6B
		mov	dword ptr [esp], offset	dword_6ED9FA30
		mov	[ebp+var_48], 3
		call	sub_6ED8F7F0
		test	eax, eax
		jnz	loc_6ED98E37

loc_6ED98D6B:				; CODE XREF: sub_6ED98C90+BEj
		mov	eax, dword_6ED9B018
		xor	ecx, ecx
		cmp	[ebp+var_54], 200h
		mov	edx, eax
		jbe	short loc_6ED98D9A

loc_6ED98D7D:				; CODE XREF: sub_6ED98C90+106j
		mov	[ebp+var_48], 2
		call	sub_6ED98800
; ---------------------------------------------------------------------------
		align 10h

loc_6ED98D90:				; CODE XREF: sub_6ED98C90+10Dj
		add	ecx, 1
		cmp	ecx, 20h
		jz	short loc_6ED98D7D
		shr	edx, 1

loc_6ED98D9A:				; CODE XREF: sub_6ED98C90+EBj
		test	dl, 1
		jnz	short loc_6ED98D90
		mov	edi, dword_6ED9B00C
		mov	edx, 1
		shl	edx, cl
		shl	ecx, 9
		or	edx, eax
		mov	eax, [ebp+var_C]
		add	ecx, offset dword_6ED9B020
		test	edi, edi
		mov	dword_6ED9B018,	edx
		mov	[ebp+var_50], ecx
		jz	loc_6ED98CD8
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	sub_6ED8F6D0
		test	eax, eax
		jz	loc_6ED98CD8
		mov	dword ptr [esp], 4
		call	sub_6ED98C90
		mov	dword ptr [eax], offset	off_6EDA7900
		mov	dword ptr [esp+8], offset sub_6ED96E60
		mov	dword ptr [esp+4], offset off_6EDA66C4
		mov	[esp], eax
		call	sub_6ED99760
; ---------------------------------------------------------------------------
		align 10h

loc_6ED98E10:				; CODE XREF: sub_6ED98C90+5Fj
		mov	byte ptr [edi],	0
		mov	edi, [ebp+var_50]
		mov	dl, 5Fh
		add	edi, 1
		test	edi, 2
		jz	loc_6ED98D01

loc_6ED98E27:				; CODE XREF: sub_6ED98C90+6Bj
		mov	word ptr [edi],	0
		sub	edx, 2
		add	edi, 2
		jmp	loc_6ED98D01
; ---------------------------------------------------------------------------

loc_6ED98E37:				; CODE XREF: sub_6ED98C90+D5j
		mov	dword ptr [esp], 4
		call	sub_6ED98C90
		mov	dword ptr [eax], offset	off_6EDA78E8
		mov	dword ptr [esp+8], offset sub_6ED96E10
		mov	dword ptr [esp+4], offset off_6EDA66B8
		mov	[esp], eax
		call	sub_6ED99760
sub_6ED98C90	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED98E61	proc near		; DATA XREF: sub_6ED98C90+21o
		add	ebp, 8
		mov	edx, [ebp-44h]
		mov	eax, [ebp-48h]
		mov	[ebp-5Ch], edx
		mov	edx, [ebp-40h]
		cmp	eax, 1
		mov	[ebp-60h], edx
		jz	short loc_6ED98E94
		cmp	eax, 2
		jz	short loc_6ED98EA6
		cmp	edx, 0FFFFFFFFh
		jz	short loc_6ED98EBE
		mov	eax, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED98E94:				; CODE XREF: sub_6ED98E61+15j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	sub_6ED96D20

loc_6ED98EA6:				; CODE XREF: sub_6ED98E61+1Aj
		cmp	dword ptr [ebp-60h], 0FFFFFFFFh
		jz	short loc_6ED98ED0
		mov	edx, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED98EBE:				; CODE XREF: sub_6ED98E61+1Fj
		mov	edx, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	sub_6ED99030
; ---------------------------------------------------------------------------

loc_6ED98ED0:				; CODE XREF: sub_6ED98E61+49j
		mov	eax, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	sub_6ED99030
sub_6ED98E61	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED98EF0	proc near		; CODE XREF: sub_6ED4DF98+3Cp
					; sub_6ED5EF48+8Ap ...

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		lea	eax, [ebp+var_8]
		sub	esp, 50h
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9AE78
		mov	[ebp+var_18], offset sub_6ED98FA7
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		call	sub_6ED99540
		mov	edx, [ebp+arg_0]
		sub	edx, 30h
		mov	ecx, [edx+30h]
		mov	ebx, [edx+34h]
		mov	esi, [eax]
		add	ecx, 0BCD4D500h
		adc	ebx, 0B8B1AABCh
		cmp	ebx, 0
		ja	short loc_6ED98F4A
		cmp	ecx, 1
		jbe	short loc_6ED98F70

loc_6ED98F4A:				; CODE XREF: sub_6ED98EF0+53j
		test	esi, esi
		jnz	short loc_6ED98F9B
		mov	[eax], edx
		mov	[ebp+var_40], 0

loc_6ED98F57:				; CODE XREF: sub_6ED98EF0+A0j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_40]
		add	esp, 50h
		pop	ebx
		pop	esi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED98F70:				; CODE XREF: sub_6ED98EF0+58j
		mov	ecx, [edx+14h]
		test	ecx, ecx
		lea	ebx, [ecx+1]
		js	short loc_6ED98F92

loc_6ED98F7A:				; CODE XREF: sub_6ED98EF0+A9j
		mov	[edx+14h], ebx
		sub	dword ptr [eax+4], 1
		cmp	esi, edx
		jz	short loc_6ED98F8A
		mov	[edx+10h], esi
		mov	[eax], edx

loc_6ED98F8A:				; CODE XREF: sub_6ED98EF0+93j
		mov	edx, [edx+28h]
		mov	[ebp+var_40], edx
		jmp	short loc_6ED98F57
; ---------------------------------------------------------------------------

loc_6ED98F92:				; CODE XREF: sub_6ED98EF0+88j
		mov	ebx, 1
		sub	ebx, ecx
		jmp	short loc_6ED98F7A
; ---------------------------------------------------------------------------

loc_6ED98F9B:				; CODE XREF: sub_6ED98EF0+5Cj
		mov	[ebp+var_38], 1
		call	sub_6ED98800
sub_6ED98EF0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED98FA7	proc near		; DATA XREF: sub_6ED98EF0+22o
		add	ebp, 8
		cmp	dword ptr [ebp-30h], 0FFFFFFFFh
		mov	eax, [ebp-34h]
		jz	short loc_6ED98FC2
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED98FC2:				; CODE XREF: sub_6ED98FA7+Aj
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	sub_6ED99030
sub_6ED98FA7	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED98FE0	proc near		; CODE XREF: sub_6ED997C0+236p

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		test	ebx, ebx
		jz	short loc_6ED99020
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED98EF0
		mov	eax, [ebx]
		mov	edx, [ebx+4]
		add	eax, 0BCD4D500h
		adc	edx, 0B8B1AABCh
		cmp	edx, 0
		ja	short loc_6ED99020
		cmp	eax, 1
		ja	short loc_6ED99020
		mov	eax, [ebx-24h]
		mov	[esp+1Ch+var_1C], eax
		call	sub_6ED90270
; ---------------------------------------------------------------------------
		align 10h

loc_6ED99020:				; CODE XREF: sub_6ED98FE0+Aj
					; sub_6ED98FE0+27j ...
		call	sub_6ED98800
sub_6ED98FE0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn bp-based	frame

sub_6ED99030	proc near		; CODE XREF: sub_6ED96DA8+25p
					; sub_6ED98975+25p ...

var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_18		= dword	ptr -18h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_6ED997C0
		mov	[ebp+var_40], offset dword_6ED9AE58
		mov	[ebp+var_38], offset sub_6ED9909D
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		call	sub_6ED98EF0
		mov	eax, [ebp+arg_0]
		sub	eax, 30h
		mov	edx, [eax+18h]
		mov	ecx, [eax+20h]
		mov	[ebp+var_60], edx
		mov	edx, [eax+24h]
		mov	[ebp+var_68], ecx
		mov	ecx, [eax+0Ch]
		mov	eax, [eax+8]
		mov	[ebp+var_58], 2
		mov	[ebp+var_18], edx
		mov	[ebp+var_64], ecx
		mov	[esp], eax
		call	sub_6ED90300
sub_6ED99030	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED9909D	proc near		; DATA XREF: sub_6ED99030+23o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		add	ebp, 8
		mov	eax, [ebp-54h]
		cmp	dword ptr [ebp-58h], 1
		mov	[ebp-70h], eax
		jz	short loc_6ED990D6
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED991C0
		mov	dword ptr [ebp-58h], 0
		call	sub_6ED991C0
		mov	edx, [ebp-70h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED990D6:				; CODE XREF: sub_6ED9909D+Dj
		mov	eax, [ebp-70h]
		mov	[esp+0], eax
		call	sub_6ED98EF0
		call	sub_6ED99620
		mov	eax, [eax]
		test	byte ptr [eax+30h], 1
		lea	edx, [eax+30h]
		jz	short loc_6ED9912B
		mov	edx, [edx-30h]
		mov	[ebp-6Ch], edx

loc_6ED990F7:				; CODE XREF: sub_6ED9909D+94j
		mov	edx, [ebp-68h]
		lea	ecx, [ebp-20h]
		xor	eax, eax
		mov	dword ptr [ebp-58h], 1
		call	sub_6ED8FE00
		mov	ecx, [ebp-6Ch]
		lea	eax, [ebp-20h]
		mov	edx, [ecx-50h]
		mov	ecx, [ebp-60h]
		mov	[esp+0], ecx
		mov	ecx, [ebp-6Ch]
		call	sub_6ED8FEC0
		test	al, al
		jz	short loc_6ED99133
		call	sub_6ED99700
; ---------------------------------------------------------------------------

loc_6ED9912B:				; CODE XREF: sub_6ED9909D+52j
		add	eax, 50h
		mov	[ebp-6Ch], eax
		jmp	short loc_6ED990F7
; ---------------------------------------------------------------------------

loc_6ED99133:				; CODE XREF: sub_6ED9909D+87j
		mov	edx, [ebp-60h]
		lea	eax, [ebp-20h]
		xor	ecx, ecx
		mov	dword ptr [ebp-58h], 1
		mov	[esp+0], edx
		mov	edx, offset off_6EDA66D0
		call	sub_6ED8FEC0
		test	al, al
		jz	short loc_6ED9917D
		mov	dword ptr [esp+0], 4
		call	sub_6ED98C90
		mov	dword ptr [eax], offset	off_6EDA7918
		mov	[esp+arg_4], offset sub_6ED98690
		mov	[esp+arg_0], offset off_6EDA66D0
		mov	[esp+0], eax
		call	sub_6ED99760
; ---------------------------------------------------------------------------

loc_6ED9917D:				; CODE XREF: sub_6ED9909D+B4j
		mov	ecx, [ebp-64h]
		mov	dword ptr [ebp-58h], 1
		mov	[esp+0], ecx
		call	sub_6ED90270
sub_6ED9909D	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED99190	proc near		; CODE XREF: sub_6ED96E80+7Ep
		sub	esp, 0Ch
		call	sub_6ED99540
		mov	edx, [eax]
		xor	eax, eax
		test	edx, edx
		jz	short loc_6ED991A8
		test	byte ptr [edx+30h], 1
		jnz	short loc_6ED991B0

loc_6ED991A6:				; CODE XREF: sub_6ED99190+25j
		mov	eax, [edx]

loc_6ED991A8:				; CODE XREF: sub_6ED99190+Ej
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED991B0:				; CODE XREF: sub_6ED99190+14j
		mov	edx, [edx]
		sub	edx, 50h
		jmp	short loc_6ED991A6
sub_6ED99190	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6ED991C0	proc near		; CODE XREF: sub_6ED4DF98+7Bp
					; sub_6ED5EF48+5Bp ...

var_5C		= dword	ptr -5Ch
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h

		push	ebx
		sub	esp, 18h
		call	sub_6ED99620
		mov	edx, [eax]
		test	edx, edx
		jz	short loc_6ED991F7
		mov	ecx, [edx+30h]
		mov	ebx, [edx+34h]
		add	ecx, 0BCD4D500h
		adc	ebx, 0B8B1AABCh
		cmp	ebx, 0
		jbe	short loc_6ED99200

loc_6ED991E6:				; CODE XREF: sub_6ED991C0+43j
		mov	dword ptr [eax], 0
		add	edx, 30h
		mov	[esp+1Ch+var_1C], edx
		call	_Unwind_DeleteException

loc_6ED991F7:				; CODE XREF: sub_6ED991C0+Dj
					; sub_6ED991C0+80j
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED99200:				; CODE XREF: sub_6ED991C0+24j
		cmp	ecx, 1
		ja	short loc_6ED991E6
		mov	ecx, [edx+14h]
		test	ecx, ecx
		js	short loc_6ED99221
		sub	ecx, 1
		nop
		jz	short loc_6ED99230
		cmp	ecx, 0FFFFFFFFh
		jz	short loc_6ED99242

loc_6ED99217:				; CODE XREF: sub_6ED991C0+64j
					; sub_6ED991C0+6Bj
		mov	[edx+14h], ecx
		add	esp, 18h
		pop	ebx
		xchg	ax, ax
		retn
; ---------------------------------------------------------------------------

loc_6ED99221:				; CODE XREF: sub_6ED991C0+4Aj
		add	ecx, 1
		jnz	short loc_6ED99217
		mov	ebx, [edx+10h]
		mov	[eax], ebx
		jmp	short loc_6ED99217
; ---------------------------------------------------------------------------
		align 10h

loc_6ED99230:				; CODE XREF: sub_6ED991C0+50j
		mov	ecx, [edx+10h]
		add	edx, 30h
		mov	[eax], ecx
		mov	[esp+1Ch+var_1C], edx
		call	_Unwind_DeleteException
		jmp	short loc_6ED991F7
; ---------------------------------------------------------------------------

loc_6ED99242:				; CODE XREF: sub_6ED991C0+55j
		call	sub_6ED98800
; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	dword ptr [ebp-24h], offset sub_6ED997C0
		mov	dword ptr [ebp-20h], offset dword_6ED9AEDC
		mov	dword ptr [ebp-18h], offset loc_6ED99389
		mov	[ebp-14h], esp
		mov	[esp+5Ch+var_5C], eax
		call	_Unwind_SjLj_Register
		cmp	dword ptr [ebp+8], offset dword_6ED9F020
		jb	short loc_6ED99291
		cmp	dword ptr [ebp+8], offset dword_6ED9FA20
		jb	short loc_6ED992B0

loc_6ED99291:				; CODE XREF: sub_6ED991C0+C6j
		mov	eax, [ebp+8]
		mov	[esp+20h+var_20], eax ;	void *
		call	free

loc_6ED9929C:				; CODE XREF: sub_6ED991C0+13Ej
					; sub_6ED991C0+155j
		lea	eax, [ebp-3Ch]
		mov	[esp+20h+var_20], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED992B0:				; CODE XREF: sub_6ED991C0+CFj
		mov	eax, [ebp+8]
		mov	ecx, 0CCCCCCCDh
		sub	eax, offset dword_6ED9F020
		mul	ecx
		mov	eax, dword_6ED9B00C
		shr	edx, 6
		test	eax, eax
		mov	[ebp-40h], edx
		jz	short loc_6ED99341
		mov	[esp+20h+var_20], offset dword_6ED9FA30
		mov	dword ptr [ebp-38h], 2
		call	sub_6ED8F7F0
		test	eax, eax
		jnz	short loc_6ED9935F
		movzx	ecx, byte ptr [ebp-40h]
		mov	eax, 0FFFFFFFEh
		rol	eax, cl
		mov	ecx, dword_6ED9B00C
		and	dword_6ED9B01C,	eax
		test	ecx, ecx
		jz	short loc_6ED9929C
		mov	[esp+20h+var_20], offset dword_6ED9FA30
		mov	dword ptr [ebp-38h], 1
		call	sub_6ED8F6D0
		test	eax, eax
		jz	short loc_6ED9929C
		mov	[esp+20h+var_20], 4
		call	sub_6ED98C90
		mov	dword ptr [eax], offset	off_6EDA7900
		mov	[esp+20h+var_18], offset sub_6ED96E60
		mov	[esp+20h+var_1C], offset off_6EDA66C4
		mov	[esp+20h+var_20], eax
		call	sub_6ED99760
; ---------------------------------------------------------------------------

loc_6ED99341:				; CODE XREF: sub_6ED991C0+10Cj
		movzx	ecx, byte ptr [ebp-40h]
		mov	eax, 0FFFFFFFEh
		rol	eax, cl
		and	dword_6ED9B01C,	eax
		lea	eax, [ebp-3Ch]
		mov	[esp+20h+var_20], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED9935F:				; CODE XREF: sub_6ED991C0+123j
		mov	[esp+20h+var_20], 4
		call	sub_6ED98C90
		mov	dword ptr [eax], offset	off_6EDA78E8
		mov	[esp+20h+var_18], offset sub_6ED96E10
		mov	[esp+20h+var_1C], offset off_6EDA66B8
		mov	[esp+20h+var_20], eax
		call	sub_6ED99760
; ---------------------------------------------------------------------------

loc_6ED99389:				; DATA XREF: sub_6ED991C0+ADo
		add	ebp, 8
		mov	edx, [ebp-30h]
		mov	eax, [ebp-34h]
		cmp	edx, 0FFFFFFFFh
		jz	short loc_6ED993A6
		mov	[esp+1Ch+var_1C], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED993A6:				; CODE XREF: sub_6ED991C0+1D5j
		mov	[esp+1Ch+var_1C], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	sub_6ED99030
; ---------------------------------------------------------------------------
		align 10h

loc_6ED993C0:				; CODE XREF: sub_6ED8FFC0+2Cj
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	dword ptr [ebp-24h], offset sub_6ED997C0
		mov	dword ptr [ebp-20h], offset dword_6ED9AEEC
		mov	dword ptr [ebp-18h], offset sub_6ED994F8
		mov	[ebp-14h], esp
		mov	[esp+5Ch+var_5C], eax
		call	_Unwind_SjLj_Register
		cmp	dword ptr [ebp+8], offset dword_6ED9B020
		jb	short loc_6ED99401
		cmp	dword ptr [ebp+8], offset dword_6ED9F020
		jb	short loc_6ED99420

loc_6ED99401:				; CODE XREF: sub_6ED991C0+236j
		mov	eax, [ebp+8]
		sub	eax, 60h
		mov	[esp+20h+var_20], eax ;	void *
		call	free

loc_6ED9940F:				; CODE XREF: sub_6ED991C0+2A9j
					; sub_6ED991C0+2C0j
		lea	eax, [ebp-3Ch]
		mov	[esp+20h+var_20], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED99420:				; CODE XREF: sub_6ED991C0+23Fj
		mov	ecx, [ebp+8]
		sub	ecx, offset dword_6ED9B020
		shr	ecx, 9
		mov	[ebp-40h], ecx
		mov	ecx, dword_6ED9B00C
		test	ecx, ecx
		jz	short loc_6ED994B0
		mov	[esp+20h+var_20], offset dword_6ED9FA30
		mov	dword ptr [ebp-38h], 2
		call	sub_6ED8F7F0
		test	eax, eax
		jnz	short loc_6ED994CE
		movzx	ecx, byte ptr [ebp-40h]
		mov	eax, 0FFFFFFFEh
		mov	edx, dword_6ED9B00C
		rol	eax, cl
		and	dword_6ED9B018,	eax
		test	edx, edx
		jz	short loc_6ED9940F
		mov	[esp+20h+var_20], offset dword_6ED9FA30
		mov	dword ptr [ebp-38h], 1
		call	sub_6ED8F6D0
		test	eax, eax
		jz	short loc_6ED9940F
		mov	[esp+20h+var_20], 4
		call	sub_6ED98C90
		mov	dword ptr [eax], offset	off_6EDA7900
		mov	[esp+20h+var_18], offset sub_6ED96E60
		mov	[esp+20h+var_1C], offset off_6EDA66C4
		mov	[esp+20h+var_20], eax
		call	sub_6ED99760
; ---------------------------------------------------------------------------
		align 10h

loc_6ED994B0:				; CODE XREF: sub_6ED991C0+277j
		movzx	ecx, byte ptr [ebp-40h]
		mov	eax, 0FFFFFFFEh
		rol	eax, cl
		and	dword_6ED9B018,	eax
		lea	eax, [ebp-3Ch]
		mov	[esp+20h+var_20], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_6ED994CE:				; CODE XREF: sub_6ED991C0+28Ej
		mov	[esp+20h+var_20], 4
		call	sub_6ED98C90
		mov	dword ptr [eax], offset	off_6EDA78E8
		mov	[esp+20h+var_18], offset sub_6ED96E10
		mov	[esp+20h+var_1C], offset off_6EDA66B8
		mov	[esp+20h+var_20], eax
		call	sub_6ED99760
sub_6ED991C0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED994F8	proc near		; DATA XREF: sub_6ED991C0+21Do
		add	ebp, 8
		mov	edx, [ebp-30h]
		mov	eax, [ebp-34h]
		cmp	edx, 0FFFFFFFFh
		jz	short loc_6ED99515
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED99515:				; CODE XREF: sub_6ED994F8+Cj
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	sub_6ED99030
sub_6ED994F8	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		mov	eax, [eax-8]
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED99540	proc near		; CODE XREF: .text:6ED987E3p
					; .text:loc_6ED98B13p ...

var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9AEBC
		mov	[ebp+var_18], offset sub_6ED995F5
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		cmp	byte_6ED9FA24, 0
		mov	[ebp+var_44], offset dword_6ED9B010
		jnz	short loc_6ED99590

loc_6ED9957F:				; CODE XREF: sub_6ED99540+69j
					; sub_6ED99540+B3j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_44]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED99590:				; CODE XREF: sub_6ED99540+3Dj
		mov	eax, dword_6ED9FA20
		mov	[ebp+var_38], 1
		mov	[esp], eax	; DWORD
		call	sub_6ED8F920
		test	eax, eax
		mov	[ebp+var_44], eax
		jnz	short loc_6ED9957F
		mov	dword ptr [esp], 8 ; size_t
		call	malloc
		test	eax, eax
		mov	[ebp+var_40], eax
		jz	short loc_6ED995D3
		mov	[esp+4], eax	; LPVOID
		mov	eax, dword_6ED9FA20
		mov	[esp], eax	; DWORD
		call	sub_6ED8F8F0
		test	eax, eax
		jz	short loc_6ED995E0

loc_6ED995D3:				; CODE XREF: sub_6ED99540+7Cj
		mov	[ebp+var_38], 1
		call	sub_6ED98800
; ---------------------------------------------------------------------------
		align 10h

loc_6ED995E0:				; CODE XREF: sub_6ED99540+91j
		mov	eax, [ebp+var_40]
		mov	[ebp+var_44], eax
		mov	dword ptr [eax], 0
		mov	dword ptr [eax+4], 0
		jmp	short loc_6ED9957F
sub_6ED99540	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED995F5	proc near		; DATA XREF: sub_6ED99540+1Do
		add	ebp, 8
		cmp	dword ptr [ebp-30h], 0FFFFFFFFh
		mov	eax, [ebp-34h]
		jz	short loc_6ED99610
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED99610:				; CODE XREF: sub_6ED995F5+Aj
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	sub_6ED99030
sub_6ED995F5	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED99620	proc near		; CODE XREF: sub_6ED9909D+44p
					; sub_6ED991C0+4p

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_6ED997C0
		mov	[ebp+var_20], offset dword_6ED9AEAC
		mov	[ebp+var_18], offset sub_6ED99697
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		cmp	byte_6ED9FA24, 0
		mov	[ebp+var_40], offset dword_6ED9B010
		jnz	short loc_6ED99670
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_40]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED99670:				; CODE XREF: sub_6ED99620+3Dj
		mov	eax, dword_6ED9FA20
		mov	[esp], eax	; DWORD
		mov	[ebp+var_38], 1
		call	sub_6ED8F920
		mov	[ebp+var_40], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_40]
		leave
		retn
sub_6ED99620	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED99697	proc near		; DATA XREF: sub_6ED99620+1Do
		add	ebp, 8
		cmp	dword ptr [ebp-30h], 0FFFFFFFFh
		mov	eax, [ebp-34h]
		jz	short loc_6ED996B2
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED996B2:				; CODE XREF: sub_6ED99697+Aj
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	sub_6ED99030
sub_6ED99697	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED996D0	proc near		; DATA XREF: .rdata:6EDA6BD0o
					; .rdata:6EDA6BD4o ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h

		sub	esp, 1Ch
		mov	[esp+1Ch+var_14], 1Bh ;	unsigned int
		mov	[esp+1Ch+var_18], offset aPureVirtualMet ; "pure virtual method	called\n"
		mov	[esp+1Ch+var_1C], 2 ; int
		call	_write
		call	sub_6ED98800
sub_6ED996D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED99700	proc near		; CODE XREF: sub_6ED4DF98+6Fp
					; sub_6ED5EF48+DBp ...

var_1C		= dword	ptr -1Ch

		push	ebx
		sub	esp, 18h
		call	sub_6ED99540
		mov	ebx, [eax]
		add	dword ptr [eax+4], 1
		test	ebx, ebx
		jz	short loc_6ED99743
		mov	edx, [ebx+30h]
		mov	ecx, [ebx+34h]
		add	edx, 0BCD4D500h
		adc	ecx, 0B8B1AABCh
		cmp	ecx, 0
		jbe	short loc_6ED99748

loc_6ED9972A:				; CODE XREF: sub_6ED99700+4Bj
		mov	dword ptr [eax], 0

loc_6ED99730:				; CODE XREF: sub_6ED99700+50j
		add	ebx, 30h
		mov	[esp+1Ch+var_1C], ebx
		call	_Unwind_SjLj_Resume_or_Rethrow
; ---------------------------------------------------------------------------
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED98EF0

loc_6ED99743:				; CODE XREF: sub_6ED99700+11j
		call	sub_6ED98800
; ---------------------------------------------------------------------------

loc_6ED99748:				; CODE XREF: sub_6ED99700+28j
		cmp	edx, 1
		ja	short loc_6ED9972A
		neg	dword ptr [ebx+14h]
		jmp	short loc_6ED99730
sub_6ED99700	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED99760	proc near		; CODE XREF: sub_6ED96D20+83p
					; sub_6ED988D0+A0p ...

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	edx, [esp+1Ch+arg_4]
		lea	eax, [ebx-60h]
		mov	[eax+10h], edx
		mov	edx, [esp+1Ch+arg_8]
		mov	dword ptr [ebx-60h], 1
		sub	ebx, 20h
		mov	dword ptr [eax+40h], 432B2B00h
		mov	dword ptr [eax+44h], 474E5543h
		mov	[eax+14h], edx
		mov	edx, off_6ED9FA2C
		mov	dword ptr [eax+48h], offset sub_6ED8FFC0
		mov	[eax+18h], edx
		mov	edx, off_6ED9FA28
		mov	[eax+1Ch], edx
		mov	[esp+1Ch+var_1C], ebx
		call	_Unwind_SjLj_RaiseException
		mov	[esp+1Ch+var_1C], ebx
		call	sub_6ED98EF0
		call	sub_6ED98800
sub_6ED99760	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6ED997C0	proc near		; DATA XREF: sub_6ED44060+Do
					; sub_6ED44270+Do ...

var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_AD		= byte ptr -0ADh
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_99		= byte ptr -99h
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_38		= byte ptr -38h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= byte ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 0CCh
		mov	eax, [ebp+arg_8]
		mov	edx, [ebp+arg_C]
		mov	[ebp+var_54], offset sub_6ED997C0
		mov	[ebp+var_50], offset dword_6ED9AE68
		mov	[ebp+var_98], eax
		lea	eax, [ebp+var_6C]
		mov	[ebp+var_94], edx
		lea	edx, [ebp+var_18]
		mov	[ebp+var_4C], edx
		mov	[ebp+var_48], offset sub_6ED99D53
		mov	[ebp+var_44], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		cmp	[ebp+arg_0], 1
		mov	[ebp+var_78], 3
		jz	short loc_6ED99830

loc_6ED99814:				; CODE XREF: sub_6ED997C0+1C4j
					; sub_6ED997C0+257j ...
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_78]
		add	esp, 0CCh
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6ED99830:				; CODE XREF: sub_6ED997C0+52j
		mov	eax, [ebp+arg_10]
		mov	edx, [ebp+var_94]
		mov	[ebp+var_1C], 0
		mov	[ebp+var_20], 0
		sub	eax, 30h
		mov	[ebp+var_A4], eax
		mov	eax, [ebp+var_98]
		mov	[ebp+var_99], 1
		add	eax, 0BCD4D500h
		adc	edx, 0B8B1AABCh
		cmp	edx, 0
		jbe	loc_6ED99990
		cmp	[ebp+arg_4], 6
		jz	loc_6ED999AA

loc_6ED9987B:				; CODE XREF: sub_6ED997C0+1E4j
					; sub_6ED997C0+1F1j
		mov	eax, [ebp+arg_14]
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_GetLanguageSpecificData
		test	eax, eax
		mov	[ebp+var_A0], eax
		jz	loc_6ED99ADE
		mov	edx, eax
		mov	eax, [ebp+arg_14]
		lea	ecx, [ebp+var_38]
		call	sub_6ED8FE00
		mov	edx, [ebp+arg_14]
		mov	[ebp+var_B4], eax
		movzx	eax, [ebp+var_24]
		call	sub_6ED8FF40
		mov	edx, [ebp+arg_14]
		mov	[esp], edx
		mov	[ebp+var_30], eax
		lea	eax, [ebp+var_20]
		mov	[esp+4], eax
		call	_Unwind_GetIPInfo
		cmp	[ebp+var_20], 1
		sbb	eax, 0
		cmp	eax, 0
		mov	[ebp+var_74], eax
		jl	loc_6ED99ADE
		jnz	loc_6ED99A52
		mov	[ebp+var_7C], 0
		mov	eax, 1
		mov	[ebp+var_AC], 0
		mov	[ebp+var_80], 0

loc_6ED99905:				; CODE XREF: sub_6ED997C0+44Dj
					; sub_6ED997C0+537j
		test	byte ptr [ebp+arg_4], 1
		jnz	loc_6ED99A00

loc_6ED9990F:				; CODE XREF: sub_6ED997C0+32Fj
		test	byte ptr [ebp+arg_4], 8
		jz	loc_6ED99C65

loc_6ED99919:				; CODE XREF: sub_6ED997C0+4ACj
		cmp	eax, 1
		jz	loc_6ED99D3B
		mov	edx, [ebp+var_7C]
		test	edx, edx
		js	loc_6ED99D47

loc_6ED9992D:				; CODE XREF: sub_6ED997C0+4C0j
					; sub_6ED997C0+4F3j
		mov	eax, [ebp+arg_10]
		mov	edx, [ebp+arg_14]
		mov	dword ptr [esp+4], 0
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	[esp], edx
		call	_Unwind_SetGR
		mov	eax, [ebp+var_7C]
		mov	edx, [ebp+arg_14]
		mov	dword ptr [esp+4], 1
		mov	[esp+8], eax
		mov	[esp], edx
		call	_Unwind_SetGR
		mov	eax, [ebp+var_AC]
		mov	edx, [ebp+arg_14]
		mov	[esp+4], eax
		mov	[esp], edx
		call	_Unwind_SetIP
		mov	[ebp+var_78], 7
		jmp	loc_6ED99814
; ---------------------------------------------------------------------------
		align 10h

loc_6ED99990:				; CODE XREF: sub_6ED997C0+ABj
		cmp	eax, 2
		sbb	eax, eax
		not	eax
		and	eax, 1
		cmp	[ebp+arg_4], 6
		mov	[ebp+var_99], al
		jnz	loc_6ED9987B

loc_6ED999AA:				; CODE XREF: sub_6ED997C0+B5j
		cmp	[ebp+var_99], 0
		jnz	loc_6ED9987B
		mov	edx, [ebp+var_A4]
		mov	eax, [ebp+var_A4]
		mov	edx, [edx+18h]
		mov	eax, [eax+20h]
		mov	[ebp+var_7C], edx
		mov	edx, [ebp+var_A4]
		mov	[ebp+var_A0], eax
		mov	edx, [edx+24h]
		test	edx, edx
		mov	[ebp+var_AC], edx
		jnz	loc_6ED99AEA

loc_6ED999E9:				; CODE XREF: sub_6ED997C0+4B5j
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_6ED98FE0
; ---------------------------------------------------------------------------
		align 10h

loc_6ED99A00:				; CODE XREF: sub_6ED997C0+149j
		cmp	eax, 2
		jz	loc_6ED99ADE
		cmp	[ebp+var_99], 0
		mov	[ebp+var_78], 6
		jnz	loc_6ED99814
		mov	eax, [ebp+var_A4]
		mov	edx, [ebp+var_7C]
		mov	[eax+18h], edx
		mov	edx, [ebp+var_80]
		mov	[eax+1Ch], edx
		mov	edx, [ebp+var_A0]
		mov	[eax+20h], edx
		mov	eax, [ebp+var_1C]
		mov	edx, [ebp+var_A4]
		mov	[edx+28h], eax
		mov	eax, [ebp+var_AC]
		mov	[edx+24h], eax
		jmp	loc_6ED99814
; ---------------------------------------------------------------------------

loc_6ED99A52:				; CODE XREF: sub_6ED997C0+122j
		mov	eax, [ebp+var_B4]
		xor	edi, edi
		lea	esi, [esi+0]

loc_6ED99A60:				; CODE XREF: sub_6ED997C0+2EAj
		mov	[ebp+var_84], edi
		mov	ecx, edi
		mov	esi, edi
		lea	esi, [esi+0]

loc_6ED99A70:				; CODE XREF: sub_6ED997C0+2C4j
		movzx	ebx, byte ptr [eax]
		add	eax, 1
		mov	edx, ebx
		and	edx, 7Fh
		shl	edx, cl
		add	ecx, 7
		or	esi, edx
		test	bl, bl
		js	short loc_6ED99A70
		mov	[ebp+var_84], esi
		mov	ecx, edi
		mov	esi, edi

loc_6ED99A90:				; CODE XREF: sub_6ED997C0+2E4j
		movzx	ebx, byte ptr [eax]
		add	eax, 1
		mov	edx, ebx
		and	edx, 7Fh
		shl	edx, cl
		add	ecx, 7
		or	esi, edx
		test	bl, bl
		js	short loc_6ED99A90
		sub	[ebp+var_74], 1
		jnz	short loc_6ED99A60
		mov	ebx, esi
		mov	esi, [ebp+var_84]
		mov	[ebp+var_80], 0
		add	esi, 1
		test	ebx, ebx
		mov	[ebp+var_AC], esi
		jz	short loc_6ED99AD4
		sub	ebx, 1
		mov	eax, [ebp+var_28]
		mov	[ebp+var_80], ebx
		add	[ebp+var_80], eax

loc_6ED99AD4:				; CODE XREF: sub_6ED997C0+306j
		mov	edx, [ebp+var_AC]
		test	edx, edx
		jnz	short loc_6ED99AF4

loc_6ED99ADE:				; CODE XREF: sub_6ED997C0+D5j
					; sub_6ED997C0+11Cj ...
		mov	[ebp+var_78], 8
		jmp	loc_6ED99814
; ---------------------------------------------------------------------------

loc_6ED99AEA:				; CODE XREF: sub_6ED997C0+223j
		mov	eax, 3
		jmp	loc_6ED9990F
; ---------------------------------------------------------------------------

loc_6ED99AF4:				; CODE XREF: sub_6ED997C0+31Cj
		mov	eax, [ebp+var_80]
		test	eax, eax
		jz	loc_6ED99CEB
		mov	edx, [ebp+arg_4]
		and	edx, 8
		mov	[ebp+var_B8], edx
		jz	loc_6ED99D00
		mov	[ebp+var_A8], offset off_6EDA6684

loc_6ED99B1B:				; CODE XREF: sub_6ED997C0+551j
					; sub_6ED997C0+56Ej
		mov	[ebp+var_AD], 0

loc_6ED99B22:				; CODE XREF: sub_6ED997C0+410j
		mov	eax, [ebp+var_80]
		xor	edi, edi
		xor	ecx, ecx
		lea	esi, [esi+0]

loc_6ED99B30:				; CODE XREF: sub_6ED997C0+387j
		movzx	ebx, byte ptr [eax]
		add	eax, 1
		movzx	esi, bl
		mov	edx, esi
		and	edx, 7Fh
		shl	edx, cl
		add	ecx, 7
		or	edi, edx
		test	bl, bl
		js	short loc_6ED99B30
		cmp	ecx, 1Fh
		mov	[ebp+var_8C], eax
		ja	short loc_6ED99B62
		and	esi, 40h
		jz	short loc_6ED99B62
		mov	edx, 0FFFFFFFFh
		shl	edx, cl
		or	edi, edx

loc_6ED99B62:				; CODE XREF: sub_6ED997C0+392j
					; sub_6ED997C0+397j
		mov	[ebp+var_7C], edi
		xor	ecx, ecx
		mov	[ebp+var_88], edi
		xor	edi, edi
		mov	[ebp+var_70], 0

loc_6ED99B76:				; CODE XREF: sub_6ED997C0+3CDj
		movzx	ebx, byte ptr [eax]
		add	eax, 1
		movzx	esi, bl
		mov	edx, esi
		and	edx, 7Fh
		shl	edx, cl
		add	ecx, 7
		or	edi, edx
		test	bl, bl
		js	short loc_6ED99B76
		cmp	ecx, 1Fh
		mov	[ebp+var_70], edi
		mov	edi, [ebp+var_88]
		ja	short loc_6ED99BAC
		and	esi, 40h
		jz	short loc_6ED99BAC
		mov	eax, 0FFFFFFFFh
		shl	eax, cl
		or	[ebp+var_70], eax

loc_6ED99BAC:				; CODE XREF: sub_6ED997C0+3DBj
					; sub_6ED997C0+3E0j
		cmp	[ebp+var_7C], 0
		jnz	short loc_6ED99BD5
		mov	[ebp+var_AD], 1

loc_6ED99BB9:				; CODE XREF: sub_6ED997C0+434j
					; sub_6ED997C0+446j ...
		mov	ecx, [ebp+var_70]
		test	ecx, ecx
		jz	loc_6ED99CDE
		mov	edx, [ebp+var_8C]
		add	edx, [ebp+var_70]
		mov	[ebp+var_80], edx
		jmp	loc_6ED99B22
; ---------------------------------------------------------------------------

loc_6ED99BD5:				; CODE XREF: sub_6ED997C0+3F0j
		jle	short loc_6ED99C12
		mov	edx, edi
		lea	eax, [ebp+var_38]
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED8FD20
		test	eax, eax
		jz	short loc_6ED99C08
		mov	edi, [ebp+var_A8]
		test	edi, edi
		jz	short loc_6ED99BB9
		mov	edx, [ebp+var_A8]
		lea	ecx, [ebp+var_1C]
		call	sub_6ED8FD90
		test	al, al
		jz	short loc_6ED99BB9

loc_6ED99C08:				; CODE XREF: sub_6ED997C0+42Aj
					; sub_6ED997C0+4A3j
		mov	eax, 3
		jmp	loc_6ED99905
; ---------------------------------------------------------------------------

loc_6ED99C12:				; CODE XREF: sub_6ED997C0:loc_6ED99BD5j
		mov	esi, [ebp+var_A8]
		test	esi, esi
		jz	short loc_6ED99C33
		mov	ebx, [ebp+var_B8]
		test	ebx, ebx
		jnz	short loc_6ED99C33
		cmp	[ebp+var_99], 0
		jz	loc_6ED99CB8

loc_6ED99C33:				; CODE XREF: sub_6ED997C0+45Aj
					; sub_6ED997C0+464j
		not	edi
		xor	ebx, ebx
		add	edi, [ebp+var_2C]
		xor	ecx, ecx
		lea	esi, [esi+0]

loc_6ED99C40:				; CODE XREF: sub_6ED997C0+494j
		movzx	edx, byte ptr [edi]
		add	edi, 1
		mov	eax, edx
		and	eax, 7Fh
		shl	eax, cl
		add	ecx, 7
		or	ebx, eax
		test	dl, dl
		js	short loc_6ED99C40
		test	ebx, ebx
		setz	al

loc_6ED99C5B:				; CODE XREF: sub_6ED997C0+519j
		test	al, al
		jz	loc_6ED99BB9
		jmp	short loc_6ED99C08
; ---------------------------------------------------------------------------

loc_6ED99C65:				; CODE XREF: sub_6ED997C0+153j
		cmp	[ebp+var_99], 0
		jnz	loc_6ED99919
		cmp	eax, 1
		jz	loc_6ED999E9
		mov	eax, [ebp+var_7C]
		test	eax, eax
		jns	loc_6ED9992D
		mov	edx, [ebp+var_A0]
		lea	ecx, [ebp+var_38]
		mov	eax, [ebp+arg_14]
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED8FE00
		mov	edx, [ebp+arg_14]
		movzx	eax, [ebp+var_24]
		call	sub_6ED8FF40
		mov	edx, [ebp+var_A4]
		mov	[edx+24h], eax
		jmp	loc_6ED9992D
; ---------------------------------------------------------------------------

loc_6ED99CB8:				; CODE XREF: sub_6ED997C0+46Dj
		mov	eax, [ebp+var_7C]
		mov	ecx, [ebp+var_1C]
		mov	edx, [ebp+var_A8]
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		lea	eax, [ebp+var_38]
		call	sub_6ED8FEC0
		xor	eax, 1
		jmp	loc_6ED99C5B
; ---------------------------------------------------------------------------

loc_6ED99CDE:				; CODE XREF: sub_6ED997C0+3FEj
		cmp	[ebp+var_AD], 0
		jz	loc_6ED99ADE

loc_6ED99CEB:				; CODE XREF: sub_6ED997C0+339j
		mov	[ebp+var_7C], 0
		mov	eax, 2
		jmp	loc_6ED99905
; ---------------------------------------------------------------------------
		align 10h

loc_6ED99D00:				; CODE XREF: sub_6ED997C0+34Bj
		cmp	[ebp+var_99], 0
		mov	[ebp+var_A8], offset off_6EDA6698
		jnz	loc_6ED99B1B
		mov	eax, [ebp+arg_10]
		test	byte ptr [eax],	1
		jz	short loc_6ED99D33
		mov	eax, [eax-30h]

loc_6ED99D22:				; CODE XREF: sub_6ED997C0+579j
		mov	[ebp+var_1C], eax
		mov	eax, [eax-50h]
		mov	[ebp+var_A8], eax
		jmp	loc_6ED99B1B
; ---------------------------------------------------------------------------

loc_6ED99D33:				; CODE XREF: sub_6ED997C0+55Dj
		mov	eax, [ebp+arg_10]
		add	eax, 20h
		jmp	short loc_6ED99D22
; ---------------------------------------------------------------------------

loc_6ED99D3B:				; CODE XREF: sub_6ED997C0+15Cj
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_6ED98800
; ---------------------------------------------------------------------------

loc_6ED99D47:				; CODE XREF: sub_6ED997C0+167j
		mov	[ebp+var_68], 2
		call	sub_6ED987A0
sub_6ED997C0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_6ED99D53	proc near		; DATA XREF: sub_6ED997C0+35o
		add	ebp, 18h
		mov	eax, [ebp-64h]
		cmp	dword ptr [ebp-68h], 1
		mov	[ebp-0BCh], eax
		jz	short loc_6ED99D86
		mov	dword ptr [ebp-68h], 0
		call	sub_6ED991C0
		mov	edx, [ebp-0BCh]
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_6ED99D86:				; CODE XREF: sub_6ED99D53+10j
		mov	edx, [ebp-0BCh]
		mov	[esp+0], edx
		call	sub_6ED98EF0
		mov	dword ptr [ebp-68h], 1
		call	sub_6ED98800
sub_6ED99D53	endp


; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_6ED99DA0()
sub_6ED99DA0	proc near		; DATA XREF: sub_6ED8FCA0:loc_6ED8FCD0o

var_1C		= dword	ptr -1Ch

		sub	esp, 1Ch
		cmp	byte_6ED9FA24, 0
		jz	short loc_6ED99DB9
		mov	eax, dword_6ED9FA20
		mov	[esp+1Ch+var_1C], eax ;	DWORD
		call	sub_6ED8F960

loc_6ED99DB9:				; CODE XREF: sub_6ED99DA0+Aj
		mov	byte_6ED9FA24, 0
		add	esp, 1Ch
		retn
sub_6ED99DA0	endp

; ---------------------------------------------------------------------------
		align 10h
dword_6ED99DD0	dd 0FFFFFFFFh		; DATA XREF: sub_6ED8ED70-5Br
					; sub_6ED8ED70-4Co ...
		dd offset sub_6ED8FCA0
		dd offset sub_6ED8FC80
		dd offset sub_6ED8FC60
		dd 0
		dd 0FFFFFFFFh
dword_6ED99DE8	dd 0			; DATA XREF: .data:off_6ED9B008o
dword_6ED99DEC	dd 201FFFFh		; DATA XREF: sub_6ED44060+14o
		db 2 dup(0)
word_6ED99DF2	dw 0FFFFh		; DATA XREF: sub_6ED44270+14o
		dd 201h
dword_6ED99DF8	dd 201FFFFh		; DATA XREF: sub_6ED447C0+19o
		db 2 dup(0)
word_6ED99DFE	dw 0FFFFh		; DATA XREF: .text:6ED44909o
		dd 201h
dword_6ED99E04	dd 201FFFFh		; DATA XREF: sub_6ED44A20+19o
		db 2 dup(0)
word_6ED99E0A	dw 0FFFFh		; DATA XREF: .text:6ED44B49o
		dd 201h
dword_6ED99E10	dd 201FFFFh		; DATA XREF: _ZN12QDomDocument19elementsByTagNameNSERK7QStringS2_+19o
		db 2 dup(0)
word_6ED99E16	dw 0FFFFh		; DATA XREF: _ZNK12QDomDocument17elementsByTagNameERK7QString+19o
		dd 201h
dword_6ED99E1C	dd 201FFFFh		; DATA XREF: sub_6ED44DA0+17o
		db 2 dup(0)
word_6ED99E22	dw 0FFFFh		; DATA XREF: sub_6ED44E50+17o
		dd 201h
dword_6ED99E28	dd 201FFFFh		; DATA XREF: sub_6ED44F00+17o
		db 2 dup(0)
word_6ED99E2E	dw 0FFFFh		; DATA XREF: sub_6ED44FB0+17o
		dd 201h
dword_6ED99E34	dd 201FFFFh		; DATA XREF: sub_6ED45060+17o
		db 2 dup(0)
word_6ED99E3A	dw 0FFFFh		; DATA XREF: _ZNK11QDomElement19elementsByTagNameNSERK7QStringS2_+19o
		dd 201h
dword_6ED99E40	dd 201FFFFh		; DATA XREF: _ZNK11QDomElement17elementsByTagNameERK7QString+19o
		db 2 dup(0)
word_6ED99E46	dw 0FFFFh		; DATA XREF: sub_6ED45270+17o
		dd 201h
dword_6ED99E4C	dd 201FFFFh		; DATA XREF: sub_6ED45320+17o
		db 2 dup(0)
word_6ED99E52	dw 0FFFFh		; DATA XREF: sub_6ED453D0+17o
		dd 201h
dword_6ED99E58	dd 201FFFFh		; DATA XREF: sub_6ED45520+17o
		db 2 dup(0)
word_6ED99E5E	dw 0FFFFh		; DATA XREF: _ZNK8QDomNode11isSupportedERK7QStringS2_+19o
		dd 201h
dword_6ED99E64	dd 401FFFFh, 10000h	; DATA XREF: sub_6ED45D90+16o
dword_6ED99E6C	dd 201FFFFh		; DATA XREF: sub_6ED46310+16o
		db 2 dup(0)
word_6ED99E72	dw 0FFFFh		; DATA XREF: sub_6ED90180+19o
		dd 201h
dword_6ED99E78	dd 201FFFFh, 0		; DATA XREF: sub_6ED46640+1Fo
dword_6ED99E80	dd 10D00FFh, 1000004h, 101h, 0 ; DATA XREF: sub_6ED94100+1Co
dword_6ED99E90	dd 201FFFFh		; DATA XREF: sub_6ED46A30+17o
		db 2 dup(0)
word_6ED99E96	dw 0FFFFh		; DATA XREF: sub_6ED46C00+16o
		dd 201h
dword_6ED99E9C	dd 201FFFFh		; DATA XREF: sub_6ED46DB0+1Ao
		db 2 dup(0)
word_6ED99EA2	dw 0FFFFh		; DATA XREF: .text:6ED46F36o
		dd 201h
dword_6ED99EA8	dd 201FFFFh, 0		; DATA XREF: sub_6ED46FF0+16o
dword_6ED99EB0	dd 10D00FFh, 1010002h, 0 ; DATA	XREF: sub_6ED92EA0+1Co
		dd offset off_6EDA66DC
dword_6ED99EC0	dd 201FFFFh		; DATA XREF: sub_6ED47150+16o
		db 2 dup(0)
word_6ED99EC6	dw 0FFFFh		; DATA XREF: sub_6ED93870+19o
		dd 601h, 20001h
dword_6ED99ED0	dd 801FFFFh, 10000h, 30002h
					; DATA XREF: _ZNK8QDomNode22previousSiblingElementERK7QString+19o
dword_6ED99EDC	dd 801FFFFh, 10000h, 30002h
					; DATA XREF: _ZNK8QDomNode18nextSiblingElementERK7QString+19o
dword_6ED99EE8	dd 801FFFFh, 10000h, 30002h
					; DATA XREF: _ZNK8QDomNode16lastChildElementERK7QString+19o
dword_6ED99EF4	dd 801FFFFh, 10000h, 30002h
					; DATA XREF: _ZNK8QDomNode17firstChildElementERK7QString+19o
dword_6ED99F00	dd 201FFFFh		; DATA XREF: sub_6ED47D40+19o
		db 2 dup(0)
word_6ED99F06	dw 0FFFFh		; DATA XREF: sub_6ED47E70+19o
		dd 601h, 20001h
dword_6ED99F10	dd 1801FFFFh, 10000h, 30002h, 50004h, 70006h, 90008h, 0B000Ah
					; DATA XREF: sub_6ED480B0+48o
dword_6ED99F2C	dd 401FFFFh, 10000h	; DATA XREF: .text:6ED48969o
dword_6ED99F34	dd 801FFFFh, 10000h, 30002h ; DATA XREF: sub_6ED48AA0+19o
dword_6ED99F40	dd 801FFFFh, 10000h, 30002h ; DATA XREF: sub_6ED48CB0+19o
dword_6ED99F4C	dd 801FFFFh, 10000h, 30002h ; DATA XREF: sub_6ED48EB0+19o
dword_6ED99F58	dd 201FFFFh		; DATA XREF: sub_6ED490B0+19o
		db 2 dup(0)
word_6ED99F5E	dw 0FFFFh		; DATA XREF: sub_6ED491A0+19o
		dd 201h
dword_6ED99F64	dd 201FFFFh		; DATA XREF: .text:6ED492A9o
		db 2 dup(0)
word_6ED99F6A	dw 0FFFFh		; DATA XREF: sub_6ED49380+19o
		dd 201h
dword_6ED99F70	dd 201FFFFh		; DATA XREF: .text:6ED49459o
		db 2 dup(0)
word_6ED99F76	dw 0FFFFh		; DATA XREF: sub_6ED49500+19o
		dd 201h
dword_6ED99F7C	dd 201FFFFh		; DATA XREF: .text:6ED495C9o
		db 2 dup(0)
word_6ED99F82	dw 0FFFFh		; DATA XREF: sub_6ED49660+19o
		dd 201h
dword_6ED99F88	dd 201FFFFh		; DATA XREF: sub_6ED497D0+19o
		db 2 dup(0)
word_6ED99F8E	dw 0FFFFh		; DATA XREF: .text:6ED498D9o
		dd 201h
dword_6ED99F94	dd 201FFFFh		; DATA XREF: sub_6ED49A20+19o
		db 2 dup(0)
word_6ED99F9A	dw 0FFFFh		; DATA XREF: sub_6ED49B50+19o
		dd 201h
dword_6ED99FA0	dd 201FFFFh		; DATA XREF: .text:6ED49C59o
		db 2 dup(0)
word_6ED99FA6	dw 0FFFFh		; DATA XREF: sub_6ED49D60+19o
		dd 201h
dword_6ED99FAC	dd 201FFFFh		; DATA XREF: sub_6ED49E10+16o
		db 2 dup(0)
word_6ED99FB2	dw 0FFFFh		; DATA XREF: .text:6ED49F89o
		dd 201h
dword_6ED99FB8	dd 201FFFFh		; DATA XREF: sub_6ED4A020+17o
		db 2 dup(0)
word_6ED99FBE	dw 0FFFFh		; DATA XREF: sub_6ED4A180+17o
		dd 201h
dword_6ED99FC4	dd 201FFFFh		; DATA XREF: .text:6ED4A247o
		db 2 dup(0)
word_6ED99FCA	dw 0FFFFh		; DATA XREF: sub_6ED4A390+17o
		dd 201h
dword_6ED99FD0	dd 201FFFFh		; DATA XREF: sub_6ED4A4B0+17o
		db 2 dup(0)
word_6ED99FD6	dw 0FFFFh		; DATA XREF: .text:6ED4A577o
		dd 201h
dword_6ED99FDC	dd 201FFFFh		; DATA XREF: sub_6ED4A680+19o
		db 2 dup(0)
word_6ED99FE2	dw 0FFFFh		; DATA XREF: .text:6ED4A789o
		dd 201h
dword_6ED99FE8	dd 401FFFFh, 10000h	; DATA XREF: sub_6ED4A860+17o
dword_6ED99FF0	dd 201FFFFh		; DATA XREF: sub_6ED4A9D0+17o
		db 2 dup(0)
word_6ED99FF6	dw 0FFFFh		; DATA XREF: .text:6ED4AA97o
		dd 401h
		db 1, 0
word_6ED99FFE	dw 0FFFFh		; DATA XREF: sub_6ED4ABF0+19o
		dd 201h
dword_6ED9A004	dd 201FFFFh		; DATA XREF: sub_6ED4ACC0+19o
		db 2 dup(0)
word_6ED9A00A	dw 0FFFFh		; DATA XREF: .text:6ED4AD99o
		dd 201h
dword_6ED9A010	dd 801FFFFh, 10000h, 30002h ; DATA XREF: sub_6ED4AE40+19o
dword_6ED9A01C	dd 201FFFFh		; DATA XREF: sub_6ED4B010+17o
		db 2 dup(0)
word_6ED9A022	dw 0FFFFh		; DATA XREF: sub_6ED4B0D0+1Ao
		dd 1401h, 20001h, 40003h, 60005h, 80007h
		db 9, 0
word_6ED9A03A	dw 0FFFFh		; DATA XREF: sub_6ED4B4B0+17o
		dd 201h
dword_6ED9A040	dd 201FFFFh		; DATA XREF: .text:6ED4B577o
		db 2 dup(0)
word_6ED9A046	dw 0FFFFh		; DATA XREF: sub_6ED90F40+19o
		dd 401h
		db 1, 0
word_6ED9A04E	dw 0FFFFh		; DATA XREF: sub_6ED91040+19o
		dd 401h
		db 1, 0
word_6ED9A056	dw 0FFFFh		; DATA XREF: sub_6ED90B70+19o
		dd 601h, 20001h
dword_6ED9A060	dd 601FFFFh, 10000h	; DATA XREF: sub_6ED90CB0+19o
		db 2, 0
word_6ED9A06A	dw 0FFFFh		; DATA XREF: sub_6ED4B620+19o
		dd 601h, 20001h
dword_6ED9A074	dd 601FFFFh, 10000h	; DATA XREF: .text:6ED4B859o
		db 2, 0
word_6ED9A07E	dw 0FFFFh		; DATA XREF: sub_6ED4B990+19o
		dd 201h
dword_6ED9A084	dd 401FFFFh, 10000h	; DATA XREF: sub_6ED4BAC0+19o
dword_6ED9A08C	dd 401FFFFh, 10000h	; DATA XREF: sub_6ED4BC70+19o
dword_6ED9A094	dd 201FFFFh		; DATA XREF: sub_6ED4BDC0+19o
		db 2 dup(0)
word_6ED9A09A	dw 0FFFFh		; DATA XREF: .text:6ED4BEE9o
		dd 801h, 20001h
		db 3, 0
word_6ED9A0A6	dw 0FFFFh		; DATA XREF: sub_6ED4C0A0+16o
		dd 201h
dword_6ED9A0AC	dd 801FFFFh, 10000h, 30002h ; DATA XREF: sub_6ED4C1B0+19o
dword_6ED9A0B8	dd 201FFFFh		; DATA XREF: sub_6ED4C380+19o
		db 2 dup(0)
word_6ED9A0BE	dw 0FFFFh		; DATA XREF: sub_6ED4C4C0+1Fo
		dd 601h, 20001h
dword_6ED9A0C8	dd 401FFFFh, 10000h	; DATA XREF: sub_6ED4C6B0+16o
dword_6ED9A0D0	dd 401FFFFh, 10000h	; DATA XREF: sub_6ED4C7F0+16o
dword_6ED9A0D8	dd 401FFFFh, 10000h	; DATA XREF: .text:6ED4C936o
dword_6ED9A0E0	dd 401FFFFh, 10000h	; DATA XREF: sub_6ED4CA50+16o
dword_6ED9A0E8	dd 201FFFFh		; DATA XREF: sub_6ED4CB80+19o
		db 2 dup(0)
word_6ED9A0EE	dw 0FFFFh		; DATA XREF: sub_6ED4CC90+16o
		dd 401h
		db 1, 0
word_6ED9A0F6	dw 0FFFFh		; DATA XREF: .text:6ED4CEA6o
		dd 401h
		db 1, 0
word_6ED9A0FE	dw 0FFFFh		; DATA XREF: sub_6ED4CFD0+16o
		dd 401h
		db 1, 0
word_6ED9A106	dw 0FFFFh		; DATA XREF: sub_6ED4D100+16o
		dd 401h
		db 1, 0
word_6ED9A10E	dw 0FFFFh		; DATA XREF: .text:6ED4D246o
		dd 401h
		db 1, 0
word_6ED9A116	dw 0FFFFh		; DATA XREF: sub_6ED4D360+16o
		dd 401h
		db 1, 0
word_6ED9A11E	dw 0FFFFh		; DATA XREF: sub_6ED4D480+19o
		dd 201h
dword_6ED9A124	dd 401FFFFh, 10000h	; DATA XREF: .text:6ED4D546o
dword_6ED9A12C	dd 201FFFFh		; DATA XREF: sub_6ED4D660+1Co
		db 2 dup(0)
word_6ED9A132	dw 0FFFFh		; DATA XREF: sub_6ED4D770+1Co
		dd 401h
		db 1, 0
word_6ED9A13A	dw 0FFFFh		; DATA XREF: sub_6ED4DCE0+19o
		dd 201h
dword_6ED9A140	dd 11500FFh, 103000Ah, 3030203h, 1010400h, 7D0000h, 0
					; DATA XREF: sub_6ED4DDB0+19o
dword_6ED9A158	dd 601FFFFh, 10000h	; DATA XREF: sub_6ED4E060+1Ao
		db 2, 0
word_6ED9A162	dw 0FFFFh		; DATA XREF: sub_6ED4E430+17o
		dd 201h
dword_6ED9A168	dd 601FFFFh, 10000h	; DATA XREF: .text:6ED4E4FAo
		db 2, 0
word_6ED9A172	dw 0FFFFh		; DATA XREF: sub_6ED4E8B0+19o
		dd 201h
dword_6ED9A178	dd 801FFFFh, 10000h, 30002h ; DATA XREF: sub_6ED4E9C0+16o
dword_6ED9A184	dd 401FFFFh, 10000h	; DATA XREF: _ZN12QDomDocumentC1ERK16QDomDocumentType+16o
dword_6ED9A18C	dd 401FFFFh, 10000h	; DATA XREF: _ZN12QDomDocumentC2ERK16QDomDocumentType+16o
dword_6ED9A194	dd 801FFFFh, 10000h, 30002h ; DATA XREF: .text:6ED4EDC6o
dword_6ED9A1A0	dd 801FFFFh, 10000h, 30002h ; DATA XREF: sub_6ED4F020+16o
dword_6ED9A1AC	dd 401FFFFh, 10000h	; DATA XREF: _ZN12QDomDocumentC1ERK7QString+16o
dword_6ED9A1B4	dd 401FFFFh, 10000h	; DATA XREF: _ZN12QDomDocumentC2ERK7QString+16o
dword_6ED9A1BC	dd 801FFFFh, 10000h, 30002h ; DATA XREF: .text:6ED4F416o
dword_6ED9A1C8	dd 801FFFFh, 10000h, 30002h ; DATA XREF: sub_6ED4F660+16o
dword_6ED9A1D4	dd 201FFFFh		; DATA XREF: _ZN12QDomDocument10importNodeERK8QDomNodeb+17o
		db 2 dup(0)
word_6ED9A1DA	dw 0FFFFh		; DATA XREF: _ZN12QDomDocument22createDocumentFragmentEv+19o
		dd 201h
dword_6ED9A1E0	dd 801FFFFh, 10000h, 30002h ; DATA XREF: .text:6ED4FA66o
dword_6ED9A1EC	dd 201FFFFh		; DATA XREF: .text:6ED4FCA9o
		db 2 dup(0)
word_6ED9A1F2	dw 0FFFFh		; DATA XREF: _ZN11QDomElement12setAttributeERK7QStringf+16o
		dd 201h
dword_6ED9A1F8	dd 201FFFFh		; DATA XREF: _ZN11QDomElement12setAttributeERK7QStringy+13o
		db 2 dup(0)
word_6ED9A1FE	dw 0FFFFh		; DATA XREF: _ZN11QDomElement12setAttributeERK7QStringx+13o
		dd 201h
dword_6ED9A204	dd 201FFFFh		; DATA XREF: sub_6ED94460+16o
		db 2 dup(0)
word_6ED9A20A	dw 0FFFFh		; DATA XREF: sub_6ED500A0+19o
		dd 201h
dword_6ED9A210	dd 201FFFFh		; DATA XREF: _ZN11QDomElement17removeAttributeNSERK7QStringS2_+16o
		db 2 dup(0)
word_6ED9A216	dw 0FFFFh		; DATA XREF: sub_6ED50340+22o
		dd 201h
dword_6ED9A21C	dd 401FFFFh, 10000h	; DATA XREF: sub_6ED504D0+19o
dword_6ED9A224	dd 201FFFFh		; DATA XREF: _ZN12QDomDocument14createTextNodeERK7QString+19o
		db 2 dup(0)
word_6ED9A22A	dw 0FFFFh		; DATA XREF: _ZN11QDomElement12setAttributeERK7QStringd+2Bo
		dd 401h
		db 1, 0
word_6ED9A232	dw 0FFFFh		; DATA XREF: sub_6ED508B0+1Fo
		dd 801h, 20001h
		db 3, 0
word_6ED9A23E	dw 0FFFFh		; DATA XREF: sub_6ED50D50+11o
		dd 201h
dword_6ED9A244	dd 401FFFFh, 10000h	; DATA XREF: _ZN12QDomDocument10setContentEP9QIODevicebP7QStringPiS4_+14o
dword_6ED9A24C	dd 601FFFFh, 10000h	; DATA XREF: _ZN12QDomDocument10setContentERK10QByteArraybP7QStringPiS5_+17o
		db 2, 0
word_6ED9A256	dw 0FFFFh		; DATA XREF: _ZN12QDomDocument10setContentERK7QStringbPS0_PiS4_+14o
		dd 401h
		db 1, 0
word_6ED9A25E	dw 0FFFFh		; DATA XREF: _ZN12QDomDocument10setContentEP15QXmlInputSourceP10QXmlReaderP7QStringPiS6_+19o
		dd 201h
dword_6ED9A264	dd 401FFFFh, 10000h	; DATA XREF: _ZN12QDomDocument10setContentEP15QXmlInputSourcebP7QStringPiS4_+14o
dword_6ED9A26C	dd 1C01FFFFh, 10000h, 30002h, 50004h, 70006h, 90008h, 0B000Ah
					; DATA XREF: sub_6ED51550+25o
		dd 0D000Ch
dword_6ED9A28C	dd 601FFFFh, 10000h	; DATA XREF: sub_6ED52370+16o
		db 2, 0
word_6ED9A296	dw 0FFFFh		; DATA XREF: _ZN12QDomDocument18createCDATASectionERK7QString+19o
		dd 201h
dword_6ED9A29C	dd 601FFFFh, 10000h	; DATA XREF: sub_6ED52640+19o
		db 2, 0
word_6ED9A2A6	dw 0FFFFh		; DATA XREF: _ZN12QDomDocument13createCommentERK7QString+19o
		dd 201h
dword_6ED9A2AC	dd 1401FFFFh, 10000h, 30002h, 50004h, 70006h, 90008h
					; DATA XREF: sub_6ED52990+1Co
dword_6ED9A2C4	dd 401FFFFh, 10000h	; DATA XREF: sub_6ED53070+16o
dword_6ED9A2CC	dd 601FFFFh, 10000h	; DATA XREF: sub_6ED53210+1Bo
		db 2, 0
word_6ED9A2D6	dw 0FFFFh		; DATA XREF: sub_6ED53610+26o
		dd 801h, 20001h
		db 3, 0
word_6ED9A2E2	dw 0FFFFh		; DATA XREF: sub_6ED538D0+1Ao
		dd 201h
dword_6ED9A2E8	dd 201FFFFh		; DATA XREF: .text:6ED539FAo
		db 2 dup(0)
word_6ED9A2EE	dw 0FFFFh		; DATA XREF: sub_6ED53AF0+1Ao
		dd 201h
dword_6ED9A2F4	dd 201FFFFh		; DATA XREF: .text:6ED53BEAo
		db 2 dup(0)
word_6ED9A2FA	dw 0FFFFh		; DATA XREF: sub_6ED53CB0+26o
		dd 801h, 20001h
		db 3, 0
word_6ED9A306	dw 0FFFFh		; DATA XREF: sub_6ED540E0+19o
		dd 401h
		db 1, 0
word_6ED9A30E	dw 0FFFFh		; DATA XREF: sub_6ED54280+1Co
		dd 0C01h, 20001h, 40003h
		db 5, 0
word_6ED9A31E	dw 0FFFFh		; DATA XREF: _ZN12QDomDocument21createEntityReferenceERK7QString+19o
		dd 201h
dword_6ED9A324	dd 401FFFFh, 10000h	; DATA XREF: sub_6ED546E0+19o
dword_6ED9A32C	dd 201FFFFh		; DATA XREF: _ZN12QDomDocument17createAttributeNSERK7QStringS2_+19o
		db 2 dup(0)
word_6ED9A332	dw 0FFFFh		; DATA XREF: sub_6ED548D0+19o
		dd 401h
		db 1, 0
word_6ED9A33A	dw 0FFFFh		; DATA XREF: _ZN12QDomDocument15createAttributeERK7QString+19o
		dd 201h
dword_6ED9A340	dd 401FFFFh, 10000h	; DATA XREF: sub_6ED54AC0+19o
dword_6ED9A348	dd 201FFFFh		; DATA XREF: _ZN12QDomDocument15createElementNSERK7QStringS2_+19o
		db 2 dup(0)
word_6ED9A34E	dw 0FFFFh		; DATA XREF: _ZN18QDomImplementation14createDocumentERK7QStringS2_RK16QDomDocumentType+19o
		dd 401h
		db 1, 0
word_6ED9A356	dw 0FFFFh		; DATA XREF: sub_6ED54DF0+19o
		dd 401h
		db 1, 0
word_6ED9A35E	dw 0FFFFh		; DATA XREF: _ZN12QDomDocument13createElementERK7QString+19o
		dd 201h
dword_6ED9A364	dd 801FFFFh, 10000h, 30002h ; DATA XREF: sub_6ED54FE0+19o
dword_6ED9A370	dd 201FFFFh		; DATA XREF: _ZN12QDomDocument27createProcessingInstructionERK7QStringS2_+19o
		db 2 dup(0)
word_6ED9A376	dw 0FFFFh		; DATA XREF: sub_6ED553A0+1Co
		dd 601h, 20001h
dword_6ED9A380	dd 0A01FFFFh, 10000h, 30002h ; DATA XREF: sub_6ED555A0+19o
		db 4, 0
word_6ED9A38E	dw 0FFFFh		; DATA XREF: _ZN11QDomElement14setAttributeNSE7QStringRKS0_d+1Fo
		dd 201h
dword_6ED9A394	dd 201FFFFh		; DATA XREF: _ZN11QDomElement14setAttributeNSE7QStringRKS0_y+13o
		db 2 dup(0)
word_6ED9A39A	dw 0FFFFh		; DATA XREF: _ZN11QDomElement14setAttributeNSE7QStringRKS0_x+13o
		dd 201h
dword_6ED9A3A0	dd 601FFFFh, 10000h	; DATA XREF: sub_6ED55C90+16o
		db 2, 0
word_6ED9A3AA	dw 0FFFFh		; DATA XREF: sub_6ED55FA0+19o
		dd 601h, 20001h
dword_6ED9A3B4	dd 1401FFFFh, 10000h, 30002h, 50004h, 70006h, 90008h
					; DATA XREF: sub_6ED561D0+19o
dword_6ED9A3CC	dd 401FFFFh, 10000h	; DATA XREF: _ZNK12QDomDocument8toStringEi+19o
dword_6ED9A3D4	dd 201FFFFh		; DATA XREF: _ZNK12QDomDocument11toByteArrayEi+1Co
		db 2 dup(0)
word_6ED9A3DA	dw 0FFFFh		; DATA XREF: _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+19o
		dd 0C01h, 20001h, 40003h
		db 5, 0
word_6ED9A3EA	dw 0FFFFh		; DATA XREF: sub_6ED571A0+19o
		dd 401h
		db 1, 0
word_6ED9A3F2	dw 0FFFFh		; DATA XREF: sub_6ED574C0+19o
		dd 401h
		db 1, 0
word_6ED9A3FA	dw 0FFFFh		; DATA XREF: _ZNK8QDomNode8nodeNameEv+19o
		dd 201h
dword_6ED9A400	dd 801FFFFh, 10000h, 30002h ; DATA XREF: sub_6ED57960+19o
dword_6ED9A40C	dd 201FFFFh		; DATA XREF: sub_6ED97D90+19o
		db 2 dup(0)
word_6ED9A412	dw 0FFFFh		; DATA XREF: sub_6ED931F0+16o
		dd 201h
dword_6ED9A418	dd 201FFFFh		; DATA XREF: _ZNK16QXmlSimpleReader7featureERK7QStringPb+1Co
		db 2 dup(0)
word_6ED9A41E	dw 0FFFFh		; DATA XREF: sub_6ED58C70+16o
		dd 201h
dword_6ED9A424	dd 201FFFFh, 0		; DATA XREF: _ZN16QXmlSimpleReader10setFeatureERK7QStringb+19o
dword_6ED9A42C	dd 10D00FFh, 1000004h, 101h, 0 ; DATA XREF: sub_6ED934B0+1Co
dword_6ED9A43C	dd 201FFFFh		; DATA XREF: _ZNK20QXmlNamespaceSupport8prefixesERK7QString+19o
		db 2 dup(0)
word_6ED9A442	dw 0FFFFh		; DATA XREF: _ZNK20QXmlNamespaceSupport8prefixesEv+19o
		dd 201h
dword_6ED9A448	dd 10D00FFh, 1000004h, 101h, 0 ; DATA XREF: sub_6ED925B0+1Do
dword_6ED9A458	dd 11100FFh, 1000004h, 103h, 7Dh, 0 ; DATA XREF: sub_6ED95B40+1Co
dword_6ED9A46C	dd 601FFFFh, 10000h	; DATA XREF: _ZN20QXmlNamespaceSupport10popContextEv+1Co
		db 2, 0
word_6ED9A476	dw 0FFFFh		; DATA XREF: sub_6ED95960+22o
		dd 601h, 20001h
dword_6ED9A480	dd 201FFFFh		; DATA XREF: _ZN20QXmlNamespaceSupportD1Ev+19o
		db 2 dup(0)
word_6ED9A486	dw 0FFFFh		; DATA XREF: _ZN20QXmlNamespaceSupportD2Ev+19o
		dd 201h
dword_6ED9A48C	dd 10D00FFh, 1000004h, 101h ; DATA XREF: sub_6ED960D0+1Co
		dd offset off_6EDA66DC
dword_6ED9A49C	dd 201FFFFh		; DATA XREF: sub_6ED95E60+19o
		db 2 dup(0)
word_6ED9A4A2	dw 0FFFFh		; DATA XREF: sub_6ED59E30+19o
		dd 1201h, 20001h, 40003h, 60005h, 80007h
dword_6ED9A4B8	dd 401FFFFh, 10000h	; DATA XREF: _ZNK20QXmlNamespaceSupport9splitNameERK7QStringRS0_S3_+19o
dword_6ED9A4C0	dd 601FFFFh, 10000h	; DATA XREF: _ZN15QXmlInputSource9fetchDataEv+1Do
		db 2, 0
word_6ED9A4CA	dw 0FFFFh		; DATA XREF: _ZN20QXmlNamespaceSupportC2Ev+1Co
		dd 601h, 20001h
dword_6ED9A4D4	dd 201FFFFh		; DATA XREF: _ZN15QXmlInputSource7setDataERK10QByteArray+1Co
		db 2 dup(0)
word_6ED9A4DA	dw 0FFFFh		; DATA XREF: sub_6ED94590+1Co
		dd 201h
dword_6ED9A4E0	dd 201FFFFh		; DATA XREF: sub_6ED930B0+19o
		db 2 dup(0)
word_6ED9A4E6	dw 0FFFFh		; DATA XREF: sub_6ED90860+19o
		dd 601h, 20001h
dword_6ED9A4F0	dd 201FFFFh		; DATA XREF: sub_6ED914D0+19o
		db 2 dup(0)
word_6ED9A4F6	dw 0FFFFh		; DATA XREF: sub_6ED91410+19o
		dd 201h
dword_6ED9A4FC	dd 401FFFFh, 10000h, 201FFFFh ;	DATA XREF: sub_6ED91310+19o
		db 2 dup(0)
word_6ED9A50A	dw 0FFFFh		; DATA XREF: sub_6ED90740+16o
		dd 401h
		db 1, 0
word_6ED9A512	dw 0FFFFh		; DATA XREF: _ZN18QXmlParseExceptionC1ERK7QStringiiS2_S2_+19o
		dd 201h
dword_6ED9A518	dd 201FFFFh		; DATA XREF: _ZN18QXmlParseExceptionC2ERK7QStringiiS2_S2_+19o
		db 2 dup(0)
word_6ED9A51E	dw 0FFFFh		; DATA XREF: sub_6ED92450+19o
		dd 201h
dword_6ED9A524	dd 10D00FFh, 1000004h, 101h, 0 ; DATA XREF: sub_6ED922B0+1Do
dword_6ED9A534	dd 201FFFFh		; DATA XREF: sub_6ED95F90+1Ao
		db 2 dup(0)
word_6ED9A53A	dw 0FFFFh		; DATA XREF: sub_6ED96590+19o
		dd 201h
dword_6ED9A540	dd 201FFFFh		; DATA XREF: sub_6ED96A70+1Fo
		db 2 dup(0)
word_6ED9A546	dw 0FFFFh		; DATA XREF: sub_6ED5B910+1Co
		dd 0A01h, 20001h, 40003h
dword_6ED9A554	dd 201FFFFh		; DATA XREF: sub_6ED966A0+1Do
		db 2 dup(0)
word_6ED9A55A	dw 0FFFFh		; DATA XREF: sub_6ED5BDC0+19o
		dd 201h
dword_6ED9A560	dd 201FFFFh		; DATA XREF: _ZN20QXmlNamespaceSupport9setPrefixERK7QStringS2_+1Do
		db 2 dup(0)
word_6ED9A566	dw 0FFFFh		; DATA XREF: sub_6ED92100+19o
		dd 401h, 1
dword_6ED9A570	dd 10D00FFh, 1000004h, 101h, 0 ; DATA XREF: sub_6ED91F50+1Do
dword_6ED9A580	dd 0E01FFFFh, 10000h, 30002h, 50004h
					; DATA XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+1Ao
		db 6, 0
word_6ED9A592	dw 0FFFFh		; DATA XREF: _ZNK20QXmlNamespaceSupport3uriERK7QString+1Co
		dd 201h
dword_6ED9A598	dd 401FFFFh, 10000h	; DATA XREF: _ZN15QXmlInputSourceD0Ev+19o
dword_6ED9A5A0	dd 401FFFFh, 10000h	; DATA XREF: _ZN15QXmlInputSourceD1Ev+19o
dword_6ED9A5A8	dd 401FFFFh, 10000h, 601FFFFh, 10000h, 2
					; DATA XREF: _ZN15QXmlInputSourceD2Ev+19o
dword_6ED9A5BC	dd 11100FFh, 1030006h, 1000201h, 7D0000h, 0 ; DATA XREF: sub_6ED93680+1Ao
dword_6ED9A5D0	dd 201FFFFh, 0		; DATA XREF: _ZN14QXmlAttributes5clearEv+19o
dword_6ED9A5D8	dd 12500FFh, 100001Ah, 3000200h, 5010403h, 7010603h, 9000800h
					; DATA XREF: sub_6ED93A20+1Fo
		dd 0B010A00h, 1010C00h,	7D0000h, 0
dword_6ED9A600	dd 3601FFFFh, 10000h, 30002h, 50004h, 70006h, 90008h, 0B000Ah
					; DATA XREF: sub_6ED5D140+16o
		dd 0D000Ch, 0F000Eh, 110010h, 130012h, 150014h,	170016h
		dd 190018h
		db 1Ah,	0
word_6ED9A63A	dw 0FFFFh		; DATA XREF: _ZN16QXmlSimpleReaderD2Ev+19o
		dd 201h
dword_6ED9A640	dd 201FFFFh		; DATA XREF: _ZN16QXmlSimpleReaderD0Ev+19o
		db 2 dup(0)
word_6ED9A646	dw 0FFFFh		; DATA XREF: _ZN16QXmlSimpleReaderD1Ev+19o
		dd 201h
dword_6ED9A64C	dd 3601FFFFh, 10000h, 30002h, 50004h, 70006h, 90008h, 0B000Ah
					; DATA XREF: .text:6ED5DCF6o
		dd 0D000Ch, 0F000Eh, 110010h, 130012h, 150014h,	170016h
		dd 190018h
		db 1Ah,	0
word_6ED9A686	dw 0FFFFh		; DATA XREF: sub_6ED5E6A0+19o
		dd 1201h, 20001h, 40003h, 60005h, 80007h
dword_6ED9A69C	dd 11900FFh, 100000Ch, 3030200h, 5030400h, 101h, 7Dh, 0
					; DATA XREF: _ZN15QXmlInputSource4initEv+19o
dword_6ED9A6B8	dd 801FFFFh, 10000h, 30002h
					; DATA XREF: _ZN14QXmlAttributes6appendERK7QStringS2_S2_S2_+19o
dword_6ED9A6C4	dd 801FFFFh, 10000h, 30002h
					; DATA XREF: _ZNK20QXmlNamespaceSupport11processNameERK7QStringbRS0_S3_+17o
dword_6ED9A6D0	dd 401FFFFh, 10000h	; DATA XREF: sub_6ED968A0+1Ao
dword_6ED9A6D8	dd 801FFFFh, 10000h, 30002h
					; DATA XREF: _ZN20QXmlNamespaceSupport5resetEv+1Co
dword_6ED9A6E4	dd 601FFFFh, 10000h	; DATA XREF: _ZN20QXmlNamespaceSupportC1Ev+1Co
		db 2, 0
word_6ED9A6EE	dw 0FFFFh		; DATA XREF: sub_6ED5FC80+16o
		dd 401h
		db 1, 0
word_6ED9A6F6	dw 0FFFFh		; DATA XREF: _ZN16QXmlSimpleReaderC1Ev+16o
		dd 401h
		db 1, 0
word_6ED9A6FE	dw 0FFFFh		; DATA XREF: _ZN16QXmlSimpleReaderC2Ev+16o
		dd 401h
		db 1, 0
word_6ED9A706	dw 0FFFFh		; DATA XREF: .text:6ED60336o
		dd 401h
		db 1, 0
word_6ED9A70E	dw 0FFFFh		; DATA XREF: _ZN18QXmlParseExceptionD1Ev+16o
		dd 401h
		db 1, 0
word_6ED9A716	dw 0FFFFh		; DATA XREF: _ZN18QXmlParseExceptionD2Ev+16o
		dd 401h
		db 1, 0
word_6ED9A71E	dw 0FFFFh		; DATA XREF: sub_6ED60A80+1Co
		dd 0E01h, 20001h, 40003h, 60005h
dword_6ED9A730	dd 401FFFFh, 10000h	; DATA XREF: sub_6ED60E40+16o
dword_6ED9A738	dd 0E01FFFFh, 10000h, 30002h, 50004h ; DATA XREF: sub_6ED61050+17o
		db 6, 0
word_6ED9A74A	dw 0FFFFh		; DATA XREF: sub_6ED61480+25o
		dd 1C01h, 20001h, 40003h, 60005h, 80007h, 0A0009h, 0C000Bh
		db 0Dh,	0
word_6ED9A76A	dw 0FFFFh		; DATA XREF: sub_6ED624E0+19o
		dd 601h, 20001h
dword_6ED9A774	dd 1201FFFFh, 10000h, 30002h, 50004h, 70006h ; DATA XREF: sub_6ED628B0+1Co
		db 8, 0
word_6ED9A78A	dw 0FFFFh		; DATA XREF: sub_6ED630C0+1Eo
		dd 2601h, 20001h, 40003h, 60005h, 80007h, 0A0009h, 0C000Bh
		dd 0E000Dh, 10000Fh, 120011h
dword_6ED9A7B4	dd 0A01FFFFh, 10000h, 30002h ; DATA XREF: sub_6ED64010+1Co
		db 4, 0
word_6ED9A7C2	dw 0FFFFh		; DATA XREF: sub_6ED64390+1Ao
		dd 201h
dword_6ED9A7C8	dd 801FFFFh, 10000h, 30002h ; DATA XREF: sub_6ED64710+19o
dword_6ED9A7D4	dd 201FFFFh		; DATA XREF: sub_6ED64F30+19o
		db 2 dup(0)
word_6ED9A7DA	dw 0FFFFh		; DATA XREF: sub_6ED65310+19o
		dd 201h
dword_6ED9A7E0	dd 201FFFFh		; DATA XREF: sub_6ED656F0+19o
		db 2 dup(0)
word_6ED9A7E6	dw 0FFFFh		; DATA XREF: sub_6ED65AE0+19o
		dd 201h
dword_6ED9A7EC	dd 201FFFFh		; DATA XREF: sub_6ED65FC0+19o
		db 2 dup(0)
word_6ED9A7F2	dw 0FFFFh		; DATA XREF: sub_6ED666D0+19o
		dd 201h
dword_6ED9A7F8	dd 1401FFFFh, 10000h, 30002h, 50004h, 70006h, 90008h
					; DATA XREF: sub_6ED66E40+19o
dword_6ED9A810	dd 601FFFFh, 10000h	; DATA XREF: sub_6ED67AD0+19o
		db 2, 0
word_6ED9A81A	dw 0FFFFh		; DATA XREF: sub_6ED68110+19o
		dd 601h, 20001h
dword_6ED9A824	dd 201FFFFh		; DATA XREF: sub_6ED68760+19o
		db 2 dup(0)
word_6ED9A82A	dw 0FFFFh		; DATA XREF: sub_6ED68B40+19o
		dd 201h
dword_6ED9A830	dd 201FFFFh		; DATA XREF: sub_6ED68FF0+19o
		db 2 dup(0)
word_6ED9A836	dw 0FFFFh		; DATA XREF: sub_6ED69420+22o
		dd 1201h, 20001h, 40003h, 60005h, 80007h
dword_6ED9A84C	dd 601FFFFh, 10000h	; DATA XREF: sub_6ED6A130+19o
		db 2, 0
word_6ED9A856	dw 0FFFFh		; DATA XREF: sub_6ED6A6E0+1Do
		dd 1A01h, 20001h, 40003h, 60005h, 80007h, 0A0009h, 0C000Bh
dword_6ED9A874	dd 1001FFFFh, 10000h, 30002h, 50004h, 70006h ; DATA XREF: sub_6ED6B5F0+19o
dword_6ED9A888	dd 1201FFFFh, 10000h, 30002h, 50004h, 70006h ; DATA XREF: sub_6ED6BFC0+19o
		db 8, 0
word_6ED9A89E	dw 0FFFFh		; DATA XREF: sub_6ED6CA30+23o
		dd 1E01h, 20001h, 40003h, 60005h, 80007h, 0A0009h, 0C000Bh
		dd 0E000Dh
dword_6ED9A8C0	dd 601FFFFh, 10000h	; DATA XREF: sub_6ED6E1C0+19o
		db 2, 0
word_6ED9A8CA	dw 0FFFFh		; DATA XREF: sub_6ED6E7C0+19o
		dd 1201h, 20001h, 40003h, 60005h, 80007h
dword_6ED9A8E0	dd 0E01FFFFh, 10000h, 30002h, 50004h ; DATA XREF: sub_6ED6F330+19o
		db 6, 0
word_6ED9A8F2	dw 0FFFFh		; DATA XREF: sub_6ED6FDD0+14o
		dd 601h, 20001h
dword_6ED9A8FC	dd 0A01FFFFh, 10000h, 30002h, 4
					; DATA XREF: _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb+18o
dword_6ED9A90C	dd 201FFFFh		; DATA XREF: _ZNK20QXmlStreamAttributes5valueERK7QString+1Ao
		db 2 dup(0)
word_6ED9A912	dw 0FFFFh		; DATA XREF: _ZNK20QXmlStreamAttributes5valueERK7QStringS2_+1Do
		dd 201h
dword_6ED9A918	dd 201FFFFh		; DATA XREF: _ZNK20QXmlStreamAttributes5valueERK13QLatin1String+1Ao
		db 2 dup(0)
word_6ED9A91E	dw 0FFFFh		; DATA XREF: _ZNK20QXmlStreamAttributes5valueERK13QLatin1StringS2_+1Do
		dd 201h
dword_6ED9A924	dd 201FFFFh		; DATA XREF: _ZNK20QXmlStreamAttributes5valueERK7QStringRK13QLatin1String+1Ao
		db 2 dup(0)
word_6ED9A92A	dw 0FFFFh		; DATA XREF: sub_6ED71960+19o
		dd 401h
		db 1, 0
word_6ED9A932	dw 0FFFFh		; DATA XREF: _ZN30QXmlStreamNamespaceDeclarationC1ERKS_+19o
		dd 201h
dword_6ED9A938	dd 201FFFFh		; DATA XREF: _ZN30QXmlStreamNamespaceDeclarationC2ERKS_+19o
		db 2 dup(0)
word_6ED9A93E	dw 0FFFFh		; DATA XREF: _ZN29QXmlStreamNotationDeclarationC1ERKS_+19o
		dd 201h
dword_6ED9A944	dd 201FFFFh		; DATA XREF: _ZN29QXmlStreamNotationDeclarationC2ERKS_+19o
		db 2 dup(0)
word_6ED9A94A	dw 0FFFFh		; DATA XREF: _ZN19QXmlStreamAttributeC1ERKS_+19o
		dd 201h
dword_6ED9A950	dd 201FFFFh		; DATA XREF: _ZN19QXmlStreamAttributeC2ERKS_+19o
		db 2 dup(0)
word_6ED9A956	dw 0FFFFh		; DATA XREF: _ZN27QXmlStreamEntityDeclarationC1ERKS_+19o
		dd 201h
dword_6ED9A95C	dd 201FFFFh		; DATA XREF: _ZN27QXmlStreamEntityDeclarationC2ERKS_+19o
		db 2 dup(0)
word_6ED9A962	dw 0FFFFh		; DATA XREF: _ZN16QXmlStreamReader7addDataEPKc+19o
		dd 201h
dword_6ED9A968	dd 201FFFFh		; DATA XREF: _ZN16QXmlStreamReader7addDataERK7QString+1Co
		db 2 dup(0)
word_6ED9A96E	dw 0FFFFh		; DATA XREF: _ZN16QXmlStreamWriter23setAutoFormattingIndentEi+19o
		dd 201h
dword_6ED9A974	dd 201FFFFh		; DATA XREF: sub_6ED72900+18o
		db 2 dup(0)
word_6ED9A97A	dw 0FFFFh		; DATA XREF: sub_6ED72A90+18o
		dd 201h
dword_6ED9A980	dd 401FFFFh, 10000h	; DATA XREF: _ZN16QXmlStreamReader28addExtraNamespaceDeclarationERK30QXmlStreamNamespaceDeclaration+19o
dword_6ED9A988	dd 0E01FFFFh, 10000h, 30002h, 50004h
					; DATA XREF: _ZN19QXmlStreamAttributeC1ERK7QStringS2_+1Ao
		db 6, 0
word_6ED9A99A	dw 0FFFFh		; DATA XREF: _ZN19QXmlStreamAttributeC2ERK7QStringS2_+1Ao
		dd 0E01h, 20001h, 40003h, 60005h
dword_6ED9A9AC	dd 601FFFFh, 10000h	; DATA XREF: sub_6ED737E0+1Do
		db 2, 0
word_6ED9A9B6	dw 0FFFFh		; DATA XREF: sub_6ED73BB0+1Ao
		dd 401h
		db 1, 0
word_6ED9A9BE	dw 0FFFFh		; DATA XREF: _ZN16QXmlStreamWriter8setCodecEPKc+19o
		dd 201h
dword_6ED9A9C4	dd 201FFFFh		; DATA XREF: sub_6ED73E40+18o
		db 2 dup(0)
word_6ED9A9CA	dw 0FFFFh		; DATA XREF: _ZN27QXmlStreamEntityDeclarationD1Ev+19o
		dd 801h, 20001h, 3
dword_6ED9A9D8	dd 11900FFh, 1000008h, 3000203h, 105h, 27Dh ; DATA XREF: sub_6ED94CE0+1Fo
		dd offset off_6EDA66DC
		dd 0
dword_6ED9A9F4	dd 801FFFFh, 10000h, 30002h
					; DATA XREF: _ZN27QXmlStreamEntityDeclarationD2Ev+19o
dword_6ED9AA00	dd 201FFFFh, 0		; DATA XREF: _ZN30QXmlStreamNamespaceDeclarationD1Ev+19o
dword_6ED9AA08	dd 11900FFh, 1000008h, 3000203h, 105h, 27Dh ; DATA XREF: sub_6ED95530+1Co
		dd offset off_6EDA66DC
		dd 0
dword_6ED9AA24	dd 401FFFFh, 10000h	; DATA XREF: sub_6ED74560+1Co
dword_6ED9AA2C	dd 201FFFFh		; DATA XREF: _ZN30QXmlStreamNamespaceDeclarationD2Ev+19o
		db 2 dup(0)
word_6ED9AA32	dw 0FFFFh		; DATA XREF: _ZN29QXmlStreamNotationDeclarationD1Ev+19o
		dd 401h, 1
dword_6ED9AA3C	dd 11900FFh, 1000008h, 3000203h, 105h, 27Dh ; DATA XREF: sub_6ED950E0+1Co
		dd offset off_6EDA66DC
		align 8
dword_6ED9AA58	dd 1201FFFFh, 10000h, 30002h, 50004h, 70006h ; DATA XREF: sub_6ED74AB0+25o
		db 8, 0
word_6ED9AA6E	dw 0FFFFh		; DATA XREF: _ZN29QXmlStreamNotationDeclarationD2Ev+19o
		dd 401h
		db 1, 0
word_6ED9AA76	dw 0FFFFh		; DATA XREF: _ZN19QXmlStreamAttributeD1Ev+19o
		dd 601h, 20001h
dword_6ED9AA80	dd 11900FFh, 1000008h, 3000203h, 105h, 27Dh ; DATA XREF: sub_6ED94910+1Fo
		dd offset off_6EDA66DC
		dd 0
dword_6ED9AA9C	dd 601FFFFh, 10000h	; DATA XREF: sub_6ED94720+1Co
		db 2, 0
word_6ED9AAA6	dw 0FFFFh		; DATA XREF: _ZN20QXmlStreamAttributes6appendERK7QStringS2_+1Co
		dd 201h
dword_6ED9AAAC	dd 601FFFFh, 10000h	; DATA XREF: _ZN19QXmlStreamAttributeD2Ev+19o
		db 2, 0
word_6ED9AAB6	dw 0FFFFh		; DATA XREF: sub_6ED92900+19o
		dd 201h
dword_6ED9AABC	dd 401FFFFh, 10000h	; DATA XREF: sub_6ED91D00+19o
dword_6ED9AAC4	dd 401FFFFh, 10000h	; DATA XREF: sub_6ED75B20+19o
dword_6ED9AACC	dd 201FFFFh		; DATA XREF: _ZN16QXmlStreamWriterC1EP7QString+19o
		db 2 dup(0)
word_6ED9AAD2	dw 0FFFFh		; DATA XREF: _ZN16QXmlStreamWriterC2EP7QString+19o
		dd 201h
dword_6ED9AAD8	dd 201FFFFh		; DATA XREF: _ZN16QXmlStreamWriterC1EP9QIODevice+19o
		db 2 dup(0)
word_6ED9AADE	dw 0FFFFh		; DATA XREF: _ZN16QXmlStreamWriterC2EP9QIODevice+19o
		dd 201h
dword_6ED9AAE4	dd 201FFFFh		; DATA XREF: _ZN16QXmlStreamWriterC1Ev+19o
		db 2 dup(0)
word_6ED9AAEA	dw 0FFFFh		; DATA XREF: _ZN16QXmlStreamWriterC2Ev+19o
		dd 201h
dword_6ED9AAF0	dd 401FFFFh, 10000h	; DATA XREF: .text:6ED76059o
dword_6ED9AAF8	dd 601FFFFh, 10000h	; DATA XREF: _ZN30QXmlStreamNamespaceDeclarationC1ERK7QStringS2_+16o
		db 2, 0
word_6ED9AB02	dw 0FFFFh		; DATA XREF: _ZN30QXmlStreamNamespaceDeclarationC2ERK7QStringS2_+16o
		dd 601h, 20001h
dword_6ED9AB0C	dd 1001FFFFh, 10000h, 30002h, 50004h, 70006h
					; DATA XREF: _ZN19QXmlStreamAttributeC1ERK7QStringS2_S2_+19o
dword_6ED9AB20	dd 201FFFFh		; DATA XREF: _ZN20QXmlStreamAttributes6appendERK7QStringS2_S2_+1Co
		db 2 dup(0)
word_6ED9AB26	dw 0FFFFh		; DATA XREF: _ZN19QXmlStreamAttributeC2ERK7QStringS2_S2_+19o
		dd 1001h, 20001h, 40003h, 60005h
		db 7, 0
word_6ED9AB3A	dw 0FFFFh		; DATA XREF: .text:6ED76E9Do
		dd 601h, 20001h
dword_6ED9AB44	dd 401FFFFh, 10000h	; DATA XREF: sub_6ED77250+1Bo
dword_6ED9AB4C	dd 201FFFFh		; DATA XREF: sub_6ED77460+17o
		db 2 dup(0)
word_6ED9AB52	dw 0FFFFh		; DATA XREF: _ZN16QXmlStreamWriter18writeStartDocumentERK7QStringb+17o
		dd 401h
		db 1, 0
word_6ED9AB5A	dw 0FFFFh		; DATA XREF: _ZN16QXmlStreamWriter18writeStartDocumentERK7QString+19o
		dd 401h
		db 1, 0
word_6ED9AB62	dw 0FFFFh		; DATA XREF: _ZN16QXmlStreamWriter18writeStartDocumentEv+19o
		dd 201h
dword_6ED9AB68	dd 201FFFFh		; DATA XREF: _ZN16QXmlStreamWriter10writeCDATAERK7QString+19o
		db 2 dup(0)
word_6ED9AB6E	dw 0FFFFh		; DATA XREF: sub_6ED78320+16o
		dd 201h
dword_6ED9AB74	dd 601FFFFh, 10000h	; DATA XREF: sub_6ED78400+1Co
		db 2, 0
word_6ED9AB7E	dw 0FFFFh		; DATA XREF: sub_6ED78A10+1Fo
		dd 2001h, 20001h, 40003h, 60005h, 80007h, 0A0009h, 0C000Bh
		dd 0E000Dh
		db 0Fh,	0
word_6ED9ABA2	dw 0FFFFh		; DATA XREF: _ZN16QXmlStreamReaderC1Ev+19o
		dd 201h
dword_6ED9ABA8	dd 201FFFFh		; DATA XREF: _ZN16QXmlStreamReaderC2Ev+19o
		db 2 dup(0)
word_6ED9ABAE	dw 0FFFFh		; DATA XREF: .text:6ED7A1DFo
		dd 2001h, 20001h, 40003h, 60005h, 80007h, 0A0009h, 0C000Bh
		dd 0E000Dh
		db 0Fh,	0
word_6ED9ABD2	dw 0FFFFh		; DATA XREF: sub_6ED91800+1Ao
		dd 201h
dword_6ED9ABD8	dd 801FFFFh, 10000h, 30002h ; DATA XREF: sub_6ED7B830+19o
dword_6ED9ABE4	dd 1C01FFFFh, 10000h, 30002h, 50004h, 70006h, 90008h, 0B000Ah
					; DATA XREF: sub_6ED7BA60+25o
		dd 0D000Ch
dword_6ED9AC04	dd 2A01FFFFh, 10000h, 30002h, 50004h, 70006h, 90008h, 0B000Ah
					; DATA XREF: sub_6ED7C5C0+16o
		dd 0D000Ch, 0F000Eh, 110010h, 130012h
		db 14h,	0
word_6ED9AC32	dw 0FFFFh		; DATA XREF: _ZN16QXmlStreamReaderC1EPKc+16o
		dd 601h, 20001h
dword_6ED9AC3C	dd 601FFFFh, 10000h	; DATA XREF: _ZN16QXmlStreamReaderC2EPKc+16o
		db 2, 0
word_6ED9AC46	dw 0FFFFh		; DATA XREF: _ZN16QXmlStreamReaderC1ERK10QByteArray+19o
		dd 401h
		db 1, 0
word_6ED9AC4E	dw 0FFFFh		; DATA XREF: _ZN16QXmlStreamReaderC2ERK10QByteArray+19o
		dd 401h
		db 1, 0
word_6ED9AC56	dw 0FFFFh		; DATA XREF: _ZN16QXmlStreamReaderC1EP9QIODevice+19o
		dd 401h
		db 1, 0
word_6ED9AC5E	dw 0FFFFh		; DATA XREF: _ZN16QXmlStreamReaderC2EP9QIODevice+19o
		dd 401h
		db 1, 0
word_6ED9AC66	dw 0FFFFh		; DATA XREF: _ZN16QXmlStreamReaderC1ERK7QString+19o
		dd 601h, 20001h
dword_6ED9AC70	dd 601FFFFh, 10000h	; DATA XREF: _ZN16QXmlStreamReaderC2ERK7QString+19o
		db 2, 0
word_6ED9AC7A	dw 0FFFFh		; DATA XREF: _ZN16QXmlStreamReaderD2Ev+16o
		dd 201h
dword_6ED9AC80	dd 201FFFFh		; DATA XREF: _ZN16QXmlStreamReaderD1Ev+16o
		db 2 dup(0)
word_6ED9AC86	dw 0FFFFh		; DATA XREF: sub_6ED7D7F0+22o
		dd 0C01h, 20001h, 40003h
		db 5, 0
word_6ED9AC96	dw 0FFFFh		; DATA XREF: .text:6ED7DEF6o
		dd 2A01h, 20001h, 40003h, 60005h, 80007h, 0A0009h, 0C000Bh
		dd 0E000Dh, 10000Fh, 120011h, 140013h
dword_6ED9ACC4	dd 801FFFFh, 10000h, 30002h ; DATA XREF: sub_6ED90550+16o
dword_6ED9ACD0	dd 601FFFFh, 10000h	; DATA XREF: _ZN16QXmlStreamWriterC1EP10QByteArray+19o
		db 2, 0
word_6ED9ACDA	dw 0FFFFh		; DATA XREF: _ZN16QXmlStreamWriterC2EP10QByteArray+19o
		dd 601h, 20001h
dword_6ED9ACE4	dd 401FFFFh, 10000h	; DATA XREF: sub_6ED92AE0+19o
dword_6ED9ACEC	dd 601FFFFh, 10000h	; DATA XREF: sub_6ED7E910+19o
		db 2, 0
word_6ED9ACF6	dw 0FFFFh		; DATA XREF: sub_6ED7EB70+27o
		dd 2801h, 20001h, 40003h, 60005h, 80007h, 0A0009h, 0C000Bh
		dd 0E000Dh, 10000Fh, 120011h
		db 13h,	0
word_6ED9AD22	dw 0FFFFh		; DATA XREF: _ZN16QXmlStreamWriterD1Ev+16o
		dd 801h, 20001h
		db 3, 0
word_6ED9AD2E	dw 0FFFFh		; DATA XREF: sub_6ED802C0+1Co
		dd 801h, 20001h
		db 3, 0
word_6ED9AD3A	dw 0FFFFh		; DATA XREF: _ZN16QXmlStreamWriter17writeStartElementERK7QString+19o
		dd 201h
dword_6ED9AD40	dd 201FFFFh		; DATA XREF: _ZN16QXmlStreamWriter17writeEmptyElementERK7QString+19o
		db 2 dup(0)
word_6ED9AD46	dw 0FFFFh		; DATA XREF: _ZN16QXmlStreamWriter14writeAttributeERK19QXmlStreamAttribute+1Co
		dd 0E01h, 20001h, 40003h, 60005h
dword_6ED9AD58	dd 2A01FFFFh, 10000h, 30002h, 50004h, 70006h, 90008h, 0B000Ah
					; DATA XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader+26o
		dd 0D000Ch, 0F000Eh, 110010h, 130012h
		db 14h,	0
word_6ED9AD86	dw 0FFFFh		; DATA XREF: sub_6ED81C20+1Fo
		dd 401h
		db 1, 0
word_6ED9AD8E	dw 0FFFFh		; DATA XREF: sub_6ED826E0+19o
		dd 201h
dword_6ED9AD94	dd 201FFFFh		; DATA XREF: sub_6ED83010+25o
		db 2 dup(0)
word_6ED9AD9A	dw 0FFFFh		; DATA XREF: sub_6ED83560+28o
		dd 19201h, 2000100h, 4000300h, 6000500h, 8000700h, 0A000900h
		dd 0C000B00h, 0E000D00h, 10000F00h, 12001100h, 14001300h
		dd 16001500h, 18001700h, 1A001900h, 1C001B00h, 1E001D00h
		dd 20001F00h, 22002100h, 24002300h, 26002500h, 28002700h
		dd 2A002900h, 2C002B00h, 2E002D00h, 30002F00h, 32003100h
		dd 34003300h, 36003500h, 38003700h, 3A003900h, 3C003B00h
		dd 3E003D00h, 40003F00h, 42004100h, 44004300h, 46004500h
		dd 48004700h
		db 0
byte_6ED9AE31	db 2 dup(0FFh),	1	; DATA XREF: sub_6ED89B30+1Do
		dd 1000004h
		db 0
byte_6ED9AE39	db 2 dup(0FFh),	1	; DATA XREF: _ZN16QXmlStreamWriterD2Ev+16o
		dd 1000008h, 3000200h
		db 0
byte_6ED9AE45	db 2 dup(0FFh),	1	; DATA XREF: _ZN16QXmlStreamReader8readNextEv+16o
		dd 1000004h
		db 0
byte_6ED9AE4D	db 2 dup(0FFh),	1	; DATA XREF: _ZN16QXmlStreamReader15readElementTextENS_24ReadElementTextBehaviourE+17o
		dd 1000006h, 200h
dword_6ED9AE58	dd 10D00FFh, 1000004h, 101h, 0 ; DATA XREF: sub_6ED99030+1Co
dword_6ED9AE68	dd 10D00FFh, 1000004h, 101h, 0 ; DATA XREF: sub_6ED997C0+19o
dword_6ED9AE78	dd 10900FFh, 7F010002h,	2 dup(0) ; DATA	XREF: sub_6ED98EF0+1Bo
dword_6ED9AE88	dd 10D00FFh, 7F010002h,	0 ; DATA XREF: sub_6ED988D0+19o
		dd offset off_6EDA66DC
		dd 1
dword_6ED9AE9C	dd 10D00FFh, 1000004h, 101h, 0 ; DATA XREF: sub_6ED90270+16o
dword_6ED9AEAC	dd 10900FFh, 7F010002h,	2 dup(0) ; DATA	XREF: sub_6ED99620+16o
dword_6ED9AEBC	dd 10900FFh, 7F010002h,	2 dup(0) ; DATA	XREF: sub_6ED99540+16o
dword_6ED9AECC	dd 10900FFh, 7F010002h,	2 dup(0) ; DATA	XREF: sub_6ED96D20+19o
dword_6ED9AEDC	dd 10900FFh, 1010004h, 7F01h, 0	; DATA XREF: sub_6ED991C0+A6o
dword_6ED9AEEC	dd 10900FFh, 1010004h, 7F01h, 0	; DATA XREF: sub_6ED991C0+216o
dword_6ED9AEFC	dd 10D00FFh, 1010006h, 7F010203h, 7D0000h, 0 ; DATA XREF: sub_6ED98C90+1Ao
dword_6ED9AF10	dd 10D00FFh, 1010006h, 7F010203h, 7D0000h, 0 ; DATA XREF: .text:6ED98AEAo
dword_6ED9AF24	dd 11500FFh, 1000004h, 2000103h, 7Dh ; DATA XREF: sub_6ED96E80+16o
		dd offset off_6EDA66E8
		align 100h
_text		ends

; Section 2. (virtual address 0005B000)
; Virtual size			: 00004A4C (  19020.)
; Section size in file		: 00004C00 (  19456.)
; Offset to raw	data for section: 0005A400
; Flags	C0600040: Data Readable	Writable
; Alignment	: 32 bytes
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
; Segment alignment '32byte' can not be represented in assembly
_data		segment	para public 'DATA' use32
		assume cs:_data
		;org 6ED9B000h
dword_6ED9B000	dd 0FFFFFFFFh		; DATA XREF: sub_6ED41260+1Bw
					; sub_6ED41260+61w
		dd 0FFFFFFFFh
off_6ED9B008	dd offset dword_6ED99DE8 ; DATA	XREF: sub_6ED8ECE0+3r
					; sub_6ED8ECE0+12r ...
dword_6ED9B00C	dd 2			; DATA XREF: TlsCallback_0+4r
					; TlsCallback_0+11w ...
dword_6ED9B010	dd 2 dup(0)		; DATA XREF: sub_6ED99540+36o
					; sub_6ED99620+36o
dword_6ED9B018	dd 0			; DATA XREF: sub_6ED98C90:loc_6ED98D6Br
					; sub_6ED98C90+12Cw ...
dword_6ED9B01C	dd 0			; DATA XREF: .text:loc_6ED98B6Cr
					; .text:6ED98B99w ...
dword_6ED9B020	dd 1000h dup(0)		; DATA XREF: sub_6ED98C90+124o
					; sub_6ED991C0+22Fo ...
dword_6ED9F020	dd 280h	dup(0)		; DATA XREF: .text:6ED98BA4o
					; sub_6ED991C0+BFo ...
; DWORD	dword_6ED9FA20
dword_6ED9FA20	dd 0			; DATA XREF: sub_6ED8FCA0+1Bo
					; sub_6ED991C0+C8o ...
byte_6ED9FA24	db 0			; DATA XREF: sub_6ED8FCA0+8w
					; sub_6ED8FCA0+29w ...
		align 4
off_6ED9FA28	dd offset sub_6ED96E80	; DATA XREF: .text:6ED987B4r
					; .text:6ED987B9w ...
off_6ED9FA2C	dd offset sub_6ED98800	; DATA XREF: sub_6ED987A0+3r
					; .text:6ED987C4r ...
dword_6ED9FA30	dd 2 dup(0)		; DATA XREF: sub_6ED8FC80+Co
					; .text:6ED98B46o ...
byte_6ED9FA38	db 0			; DATA XREF: sub_6ED96E80+2Fr
					; sub_6ED96E80:loc_6ED96EF0w
		align 4
dword_6ED9FA3C	dd 0			; DATA XREF: .text:6ED987D4r
					; .text:6ED987D9w ...
dword_6ED9FA40	dd 0BB40E64Eh		; DATA XREF: .text:6ED8EDEFr
					; sub_6ED8EE40+3r ...
dword_6ED9FA44	dd 44BF19B1h		; DATA XREF: .text:6ED8EDF7r
					; sub_6ED8EE40+21w ...
dword_6ED9FA48	dd 0			; DATA XREF: sub_6ED41430+6r
					; sub_6ED41430+42o
		align 800h
_data		ends

; Section 3. (virtual address 00060000)
; Virtual size			: 00007980 (  31104.)
; Section size in file		: 00007A00 (  31232.)
; Offset to raw	data for section: 0005F000
; Flags	40600040: Data Readable
; Alignment	: 32 bytes
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment '32byte' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 6EDA0000h
; CHAR ModuleName[]
ModuleName	db 'libgcj_s.dll',0     ; DATA XREF: sub_6ED41430+Fo
; CHAR ProcName[]
ProcName	db '_Jv_RegisterClasses',0 ; DATA XREF: sub_6ED41430+2Ao
		align 4
aElementbyidIsN	db 'elementById() is not implemented and will always return a null no'
					; DATA XREF: _ZN12QDomDocument11elementByIdERK7QString+8o
		db 'de.',0
		align 4
aCallingAppendc	db 'Calling appendChild() on a null node does nothing.',0
					; DATA XREF: _ZN8QDomNode11appendChildERKS_:loc_6ED45660o
aXml		db 'XML',0              ; DATA XREF: _ZNK18QDomImplementation10hasFeatureERK7QStringS2_+21o
a1_0		db '1.0',0              ; DATA XREF: _ZNK18QDomImplementation10hasFeatureERK7QStringS2_+57o
aCdata_5	db '<![CDATA[',0        ; DATA XREF: sub_6ED45890+19o
asc_6EDA00B1	db ']]>',0              ; DATA XREF: sub_6ED45890+3Co
					; sub_6ED52370+133o
a?_3		db '<?',0               ; DATA XREF: sub_6ED45950+1Do
a?_4		db '?>',0               ; DATA XREF: sub_6ED45950+59o
					; sub_6ED54FE0+193o
byte_6EDA00BB	db 0			; DATA XREF: sub_6ED47E70+3Ao
					; sub_6ED51550+E5o ...
aLt		db '&lt;',0             ; DATA XREF: sub_6ED480B0+21Do
aQuot		db '&quot;',0           ; DATA XREF: sub_6ED480B0+29Fo
aAmp		db '&amp;',0            ; DATA XREF: sub_6ED480B0+31Do
aGt		db '&gt;',0             ; DATA XREF: sub_6ED480B0+1B3o
asc_6EDA00D3	db '&#x',0              ; DATA XREF: sub_6ED480B0+3C8o
					; sub_6ED480B0+525o
aXd		db '&#xd;',0            ; DATA XREF: sub_6ED480B0+658o
		align 10h
off_6EDA00E0	dd offset loc_6ED4B122	; DATA XREF: sub_6ED4B0D0:loc_6ED4B160r
		dd offset loc_6ED4B1A6	; jump table for switch	statement
		dd offset loc_6ED4B1E8
		dd offset loc_6ED4B230
		dd offset loc_6ED4B272
		dd offset loc_6ED4B2B4
		dd offset loc_6ED4B2F6
		dd offset loc_6ED4B338
		dd offset loc_6ED4B380
		dd offset loc_6ED4B122
		dd offset loc_6ED4B122
		dd offset loc_6ED4B3C2
		dd offset loc_6ED4B167
aHttpXml_orgSax	db 'http://xml.org/sax/features/namespaces',0 ; DATA XREF: sub_6ED4C4C0+45o
					; sub_6ED508B0+147o
		align 4
aHttpXml_orgS_0	db 'http://xml.org/sax/features/namespace-prefixes',0
					; DATA XREF: sub_6ED4C4C0+AEo
					; sub_6ED508B0+310o
		align 4
aHttpTrolltech_	db 'http://trolltech.com/xml/features/report-whitespace-only-CharData'
					; DATA XREF: sub_6ED4C4C0+11Do
		db 0
aCharacterData	db '#character-data',0  ; DATA XREF: sub_6ED4C6B0+82o
					; .text:6ED4CF12o
aComment	db '#comment',0         ; DATA XREF: sub_6ED4C7F0+70o
					; .text:6ED4C990o
aText		db '#text',0            ; DATA XREF: sub_6ED4CA50+70o
					; sub_6ED4CFD0+70o
		align 10h
aQdomtextSplitt	db 'QDomText::splitText  The node has no parent. So I can not split',0
					; DATA XREF: sub_6ED4CC90:loc_6ED4CCC8o
aCdataSection	db '#cdata-section',0   ; DATA XREF: sub_6ED4D100+70o
					; .text:6ED4D2A0o
aDocumentFragme	db '#document-fragment',0 ; DATA XREF: sub_6ED4D360+62o
					; .text:6ED4D592o
aDocument	db '#document',0        ; DATA XREF: sub_6ED4E9C0+C7o
					; .text:6ED4EE77o ...
asc_6EDA023C	db '<!--',0             ; DATA XREF: sub_6ED500A0+BCo
asc_6EDA0241	db '-->',0              ; DATA XREF: sub_6ED500A0+112o
a_16g		db '%.16g',0            ; DATA XREF: _ZN11QDomElement12setAttributeERK7QStringd+78o
aXmlns_0	db ' xmlns',0           ; DATA XREF: sub_6ED51550+30Bo
aXmlns		db ' xmlns:',0          ; DATA XREF: sub_6ED51550+213o
					; sub_6ED51550+957o ...
asc_6EDA025A	db '="',0               ; DATA XREF: sub_6ED51550+3AFo
					; sub_6ED51550+602o ...
asc_6EDA025D	db '</',0               ; DATA XREF: sub_6ED51550+75Eo
asc_6EDA0260	db '/>',0               ; DATA XREF: sub_6ED51550+BFEo
asc_6EDA0263	db '--',0               ; DATA XREF: sub_6ED52640+133o
asc_6EDA0266	db '% ',0               ; DATA XREF: sub_6ED52990+27Fo
a60		db '&#60;',0            ; DATA XREF: sub_6ED52990+55Bo
a34		db '&#34;',0            ; DATA XREF: sub_6ED52990+587o
a38		db '&#38;',0            ; DATA XREF: sub_6ED52990+465o
aEntity		db '<!ENTITY ',0        ; DATA XREF: sub_6ED52990+8Bo
					; sub_6ED52990+4A8o
asc_6EDA0285	db ' "',0               ; DATA XREF: sub_6ED52990+4D0o
asc_6EDA0288	db '">',0               ; DATA XREF: sub_6ED52990+4F1o
aSystem		db 'SYSTEM ',0          ; DATA XREF: sub_6ED52990+328o
					; sub_6ED55FA0+190o
aPublic		db 'PUBLIC ',0          ; DATA XREF: sub_6ED52990+107o
					; sub_6ED55FA0+98o
aNdata		db ' NDATA ',0          ; DATA XREF: sub_6ED52990+189o
aDoctype	db '<!DOCTYPE ',0       ; DATA XREF: sub_6ED53210+59o
aPublic_0	db ' PUBLIC ',0         ; DATA XREF: sub_6ED53210+A8o
aSystem_0	db ' SYSTEM ',0         ; DATA XREF: sub_6ED53210+341o
asc_6EDA02C0	db ' [',0               ; DATA XREF: sub_6ED53210+16Ao
aNotation	db '<!NOTATION ',0      ; DATA XREF: sub_6ED55FA0+37o
aXml_0		db 'xml',0              ; DATA XREF: sub_6ED561D0+103o
					; sub_6ED561D0+30Bo ...
		align 4
aEncodingSS	db 'encoding\s*=\s*(("([^"]*)")|(',27h,'([^',27h,']*)',27h,'))',0
					; DATA XREF: sub_6ED561D0+444o
aUtf8		db 'UTF-8',0            ; DATA XREF: sub_6ED561D0:loc_6ED563E4o
		align 4
a?xmlVersion1_0	db '<?xml version="1.0" encoding="',0 ; DATA XREF: sub_6ED561D0+6Co
a?		db '"?>',0Ah,0          ; DATA XREF: sub_6ED561D0+97o
		align 20h
aHttpXml_orgS_1	db 'http://xml.org/sax/features/namespaces',0
					; DATA XREF: _ZNK16QXmlSimpleReader10hasFeatureERK7QString+19o
					; _ZNK16QXmlSimpleReader7featureERK7QStringPb+58o ...
		align 4
aHttpXml_orgS_2	db 'http://xml.org/sax/features/namespace-prefixes',0
					; DATA XREF: _ZNK16QXmlSimpleReader10hasFeatureERK7QString+44o
					; _ZNK16QXmlSimpleReader7featureERK7QStringPb+96o ...
		align 4
aHttpTrolltec_0	db 'http://trolltech.com/xml/features/report-whitespace-only-CharData'
					; DATA XREF: _ZNK16QXmlSimpleReader10hasFeatureERK7QString+5Do
					; _ZNK16QXmlSimpleReader7featureERK7QStringPb+C6o ...
		db 0
		align 4
aHttpTrolltec_1	db 'http://trolltech.com/xml/features/report-start-end-entity',0
					; DATA XREF: _ZNK16QXmlSimpleReader10hasFeatureERK7QString+76o
					; _ZNK16QXmlSimpleReader7featureERK7QStringPb+F6o ...
aErrorTriggered	db 'error triggered by consumer',0
					; DATA XREF: _ZNK18QXmlDefaultHandler11errorStringEv+10o
aUnknownFeature	db 'Unknown feature %s',0
					; DATA XREF: _ZNK16QXmlSimpleReader7featureERK7QStringPb+16Co
					; _ZN16QXmlSimpleReader10setFeatureERK7QStringb+16Co
aCdata		db 'CDATA',0            ; DATA XREF: _ZNK14QXmlAttributes4typeERK7QStringS2_+10o
					; _ZNK14QXmlAttributes4typeERK7QString+10o ...
byte_6EDA044B	db 0			; DATA XREF: _ZNK20QXmlNamespaceSupport6prefixERK7QString+73o
					; sub_6ED5B910+E8o ...
aTheXmlEntity1E	db 'The XML entity "%1" expands to a string that is too large to proc'
					; DATA XREF: sub_6ED59E30+DB9o
		db 'ess (%2 characters > %3).',0
		align 4
aHttpWww_w3_org	db 'http://www.w3.org/XML/1998/namespace',0
					; DATA XREF: _ZN20QXmlNamespaceSupportC2Ev+72o
					; _ZN20QXmlNamespaceSupport5resetEv+72o ...
aXml_1		db 'xml',0              ; DATA XREF: _ZN20QXmlNamespaceSupportC2Ev+91o
					; _ZN20QXmlNamespaceSupport5resetEv+91o ...
a?xml		db '<?xml',0            ; DATA XREF: sub_6ED5B910+3Ao
					; _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+131o
		align 4
a?xmlSVersionSS	db '^<\?xml\s+(version\s*=\s*(([',27h,'"])[-a-zA-Z0-9_.:]+\3))?\s*(encod'
					; DATA XREF: sub_6ED5B910+8Ao
		db 'ing\s*=\s*(([',27h,'"])[A-Za-z][-a-zA-Z0-9_.]*\6))?\s*\?>',0
aEncoding	db 'encoding',0         ; DATA XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+44Ao
					; sub_6ED69420+7C6o
aNoErrorOccurre	db 'no error occurred',0 ; DATA XREF: sub_6ED60A80+19Ao
aUnexpectedEndO	db 'unexpected end of file',0 ; DATA XREF: sub_6ED60E40+88o
					; sub_6ED60E40+E8o ...
aApos		db '&apos;',0           ; DATA XREF: sub_6ED61050+5Bo
aQuot_0		db '&quot;',0           ; DATA XREF: sub_6ED61050+62o
aRecursiveEntit	db 'recursive entities',0 ; DATA XREF: sub_6ED61050+208o
aAmp_0		db 'amp',0              ; DATA XREF: sub_6ED61480+6Eo
aLt_0		db 'lt',0               ; DATA XREF: sub_6ED61480+10Ao
aGt_0		db 'gt',0               ; DATA XREF: sub_6ED61480+1F1o
aApos_0		db 'apos',0             ; DATA XREF: sub_6ED61480+270o
aQuot_1		db 'quot',0             ; DATA XREF: sub_6ED61480+2D4o
		align 4
aInternalGenera	db 'internal general entity reference not allowed in DTD',0
					; DATA XREF: sub_6ED61480+6E7o
		align 4
aErrorInTheText	db 'error in the text declaration of an external entity',0
					; DATA XREF: sub_6ED61480+9BCo
					; sub_6ED66E40+6A0o
aExternalParsed	db 'external parsed general entity reference not allowed in attribute'
					; DATA XREF: sub_6ED61480+A73o
		db ' value',0
aExternalPars_0	db 'external parsed general entity reference not allowed in DTD',0
					; DATA XREF: sub_6ED61480+B88o
aUnparsedEntity	db 'unparsed entity reference in wrong context',0
					; DATA XREF: sub_6ED61480+870o
aTagMismatch	db 'tag mismatch',0     ; DATA XREF: sub_6ED628B0+4F8o
					; sub_6ED6B5F0+812o
aXmlns_1	db 'xmlns',0            ; DATA XREF: sub_6ED64010+B2o
aHttpWww_w3_o_0	db 'http://www.w3.org/2000/xmlns/',0 ; DATA XREF: sub_6ED64010+292o
aUnexpectedChar	db 'unexpected character',0 ; DATA XREF: sub_6ED64390+C2o
					; sub_6ED64710+34Ao ...
aSystem_1	db 'SYSTEM',0           ; DATA XREF: sub_6ED64710+6E0o
aPublic_1	db 'PUBLIC',0           ; DATA XREF: sub_6ED64710+61Do
		align 4
off_6EDA0724	dd offset loc_6ED6482C	; DATA XREF: sub_6ED64710+17Br
		dd offset loc_6ED64DE7	; jump table for switch	statement
		dd offset loc_6ED64DC0
		dd offset loc_6ED64D95
		dd offset loc_6ED64BB0
		dd offset loc_6ED64D95
		dd offset loc_6ED64BB0
		dd offset loc_6ED64D20
		dd offset loc_6ED64CD0
		dd offset loc_6ED64CA0
		dd offset loc_6ED64BB0
		dd offset loc_6ED64CA0
		dd offset loc_6ED64BB0
		dd offset loc_6ED64C87
		dd offset loc_6ED64C20
		dd offset loc_6ED6482C
		dd offset loc_6ED64D63
aErrorOccurredW	db 'error occurred while parsing comment',0 ; DATA XREF: sub_6ED64F30+268o
		align 10h
off_6EDA0790	dd offset loc_6ED64F80	; DATA XREF: sub_6ED64F30+B1r
		dd offset loc_6ED64FE8	; jump table for switch	statement
		dd offset loc_6ED64FE8
		dd offset loc_6ED65207
		dd offset loc_6ED64FE8
		dd offset loc_6ED64FE8
		dd offset loc_6ED64FE8
aLetterIsExpect	db 'letter is expected',0 ; DATA XREF: sub_6ED65310+F8o
					; sub_6ED656F0+106o ...
		align 10h
off_6EDA07C0	dd offset loc_6ED65B2C	; DATA XREF: sub_6ED65AE0+A4r
		dd offset loc_6ED65DE6	; jump table for switch	statement
		dd offset loc_6ED65DA0
		dd offset loc_6ED65E96
		dd offset loc_6ED65E50
		dd offset loc_6ED65E24
		dd offset loc_6ED65E10
aLement		db 'LEMENT',0           ; DATA XREF: sub_6ED65FC0+5ECo
aEmpty		db 'EMPTY',0            ; DATA XREF: sub_6ED65FC0+43Do
aAny		db 'ANY',0              ; DATA XREF: sub_6ED65FC0+480o
aPcdata		db '#PCDATA',0          ; DATA XREF: sub_6ED65FC0+5ADo
		align 4
off_6EDA07F8	dd offset loc_6ED66018	; DATA XREF: sub_6ED65FC0+B3r
		dd offset loc_6ED665A3	; jump table for switch	statement
		dd offset loc_6ED665E6
		dd offset loc_6ED66610
		dd offset loc_6ED663C6
		dd offset loc_6ED663F0
		dd offset loc_6ED66433
		dd offset loc_6ED66537
		dd offset loc_6ED66560
		dd offset loc_6ED66380
		dd offset loc_6ED662D0
		dd offset loc_6ED66335
		dd offset loc_6ED664C0
		dd offset loc_6ED664E8
		dd offset loc_6ED662D0
		dd offset loc_6ED66495
		dd offset loc_6ED662D0
		dd offset loc_6ED66510
		dd offset loc_6ED662D0
byte_6EDA0844	db 49h,	44h, 0		; DATA XREF: sub_6ED666D0+6A4o
byte_6EDA0847	db 52h			; DATA XREF: sub_6ED666D0+42Bo
		db 45h,	46h, 0
aEntit		db 'ENTIT',0            ; DATA XREF: sub_6ED666D0+3CDo
aIes		db 'IES',0              ; DATA XREF: sub_6ED666D0+52Do
aMtoken		db 'MTOKEN',0           ; DATA XREF: sub_6ED666D0+599o
aOtation	db 'OTATION',0          ; DATA XREF: sub_6ED666D0+60Do
off_6EDA0864	dd offset loc_6ED66728	; DATA XREF: sub_6ED666D0+B7r
		dd offset loc_6ED66B35	; jump table for switch	statement
		dd offset loc_6ED66D67
		dd offset loc_6ED66AF2
		dd offset loc_6ED669E0
		dd offset loc_6ED66A90
		dd offset loc_6ED669E0
		dd offset loc_6ED66BF0
		dd offset loc_6ED669E0
		dd offset loc_6ED66C60
		dd offset loc_6ED669E0
		dd offset loc_6ED66CD0
		dd offset loc_6ED66D13
		dd offset loc_6ED66D40
		dd offset loc_6ED66B97
		dd offset loc_6ED66BC2
		dd offset loc_6ED66CA3
		dd offset loc_6ED66C33
		dd offset loc_6ED66A45
		dd offset loc_6ED669E0
aNotation_0	db 'NOTATION',0         ; DATA XREF: sub_6ED67AD0+452o
		align 10h
off_6EDA08C0	dd offset loc_6ED67B3B	; DATA XREF: sub_6ED67AD0+DBr
		dd offset loc_6ED67F17	; jump table for switch	statement
		dd offset loc_6ED67ED1
		dd offset loc_6ED67EA6
		dd offset loc_6ED67E60
		dd offset loc_6ED67E30
		dd offset loc_6ED67E30
		dd offset loc_6ED67DE5
		dd offset loc_6ED67DD0
aErrorOccurre_0	db 'error occurred while parsing reference',0 ; DATA XREF: sub_6ED68110+23Ao
					; sub_6ED68110+4BAo ...
		align 4
off_6EDA090C	dd offset loc_6ED68173	; DATA XREF: sub_6ED68110+113r
		dd offset loc_6ED68441	; jump table for switch	statement
		dd offset loc_6ED683C0
		dd offset loc_6ED68497
		dd offset loc_6ED683C0
		dd offset loc_6ED68565
		dd offset loc_6ED684C2
		dd offset loc_6ED68510
		dd offset loc_6ED68590
		dd offset loc_6ED68470
off_6EDA0934	dd offset loc_6ED687AC	; DATA XREF: sub_6ED68760+B6r
		dd offset loc_6ED68A40	; jump table for switch	statement
		dd offset loc_6ED689F0
		dd offset loc_6ED689C5
		dd offset loc_6ED68A40
		dd offset loc_6ED689F0
		dd offset loc_6ED689C5
		dd offset loc_6ED689B0
off_6EDA0954	dd offset loc_6ED6903C	; DATA XREF: sub_6ED68FF0+B6r
		dd offset loc_6ED69320	; jump table for switch	statement
		dd offset loc_6ED692F0
		dd offset loc_6ED692A0
		dd offset loc_6ED69250
		dd offset loc_6ED69320
		dd offset loc_6ED692F0
		dd offset loc_6ED692A0
		dd offset loc_6ED69250
		dd offset loc_6ED69238
aVersion	db 'version',0          ; DATA XREF: sub_6ED69420+453o
aVersionExpecte	db 'version expected while reading the XML declaration',0
					; DATA XREF: sub_6ED69420+A26o
aStandalone	db 'standalone',0       ; DATA XREF: sub_6ED69420+A3o
					; sub_6ED69420+3D7o
aYes		db 'yes',0              ; DATA XREF: sub_6ED69420+D7o
					; sub_6ED69420+413o
aNo		db 'no',0               ; DATA XREF: sub_6ED69420+823o
					; sub_6ED69420+8D9o
		align 4
aWrongValueForS	db 'wrong value for standalone declaration',0 ; DATA XREF: sub_6ED69420+B3Co
					; sub_6ED69420+B9Co
		align 4
aEncodingDeclar	db 'encoding declaration or standalone declaration expected while rea'
					; DATA XREF: sub_6ED69420+ADCo
		db 'ding the XML declaration',0
		align 10h
aStandaloneDecl	db 'standalone declaration expected while reading the XML declaration'
					; DATA XREF: sub_6ED69420+9D0o
		db 0
		align 4
aInvalidNameFor	db 'invalid name for processing instruction',0
					; DATA XREF: sub_6ED69420+54Ao
off_6EDA0ABC	dd offset loc_6ED699C0	; DATA XREF: sub_6ED69420+95r
		dd offset loc_6ED69532	; jump table for switch	statement
		dd offset loc_6ED69532
		dd offset loc_6ED698D1
		dd offset loc_6ED69532
		dd offset loc_6ED69532
		dd offset loc_6ED69532
		dd offset loc_6ED69532
		dd offset loc_6ED69870
		dd offset loc_6ED69532
		dd offset loc_6ED697F4
		dd offset loc_6ED69532
		dd offset loc_6ED694C0
		dd offset loc_6ED69532
		dd offset loc_6ED69532
		dd offset loc_6ED69532
		dd offset loc_6ED697B0
		dd offset loc_6ED69790
off_6EDA0B04	dd offset loc_6ED694A0	; DATA XREF: sub_6ED69420+16Fr
		dd offset loc_6ED695C2	; jump table for switch	statement
		dd offset loc_6ED69B70
		dd offset loc_6ED694A0
		dd offset loc_6ED69B20
		dd offset loc_6ED694A0
		dd offset loc_6ED69B20
		dd offset loc_6ED69AD0
		dd offset loc_6ED69B20
		dd offset loc_6ED69AA0
		dd offset loc_6ED69B20
		dd offset loc_6ED69A66
		dd offset loc_6ED69B20
		dd offset loc_6ED695C2
		dd offset loc_6ED69A38
		dd offset loc_6ED695C2
		dd offset loc_6ED695C2
off_6EDA0B48	dd offset loc_6ED6A28C	; DATA XREF: sub_6ED6A130+1A8r
		dd offset loc_6ED6A4F0	; jump table for switch	statement
		dd offset loc_6ED6A4F0
		dd offset loc_6ED6A5A0
		dd offset loc_6ED6A550
		dd offset loc_6ED6A5E6
aErrorOccurre_1	db 'error occurred while parsing content',0 ; DATA XREF: sub_6ED6A6E0+4C8o
aCdata_0	db '[CDATA[',0          ; DATA XREF: sub_6ED6A6E0+53Bo
		align 10h
off_6EDA0B90	dd offset loc_6ED6ABA0	; DATA XREF: sub_6ED6A6E0+85r
		dd offset loc_6ED6A900	; jump table for switch	statement
		dd offset loc_6ED6A900
		dd offset loc_6ED6A900
		dd offset loc_6ED6A900
		dd offset loc_6ED6AB80
		dd offset loc_6ED6A900
		dd offset loc_6ED6AB10
		dd offset loc_6ED6A900
		dd offset loc_6ED6A900
		dd offset loc_6ED6A900
		dd offset loc_6ED6A8B0
		dd offset loc_6ED6A900
		dd offset loc_6ED6AAF0
		dd offset loc_6ED6A900
		dd offset loc_6ED6AAA0
		dd offset loc_6ED6AA40
		dd offset loc_6ED6A9D7
off_6EDA0BD8	dd offset loc_6ED6A9C0	; DATA XREF: sub_6ED6A6E0+27Cr
		dd offset loc_6ED6A963	; jump table for switch	statement
		dd offset loc_6ED6A963
		dd offset loc_6ED6AC94
		dd offset loc_6ED6AE43
		dd offset loc_6ED6ADD3
		dd offset loc_6ED6AD80
		dd offset loc_6ED6AD80
		dd offset loc_6ED6AD30
		dd offset loc_6ED6A9C0
		dd offset loc_6ED6ACD7
		dd offset loc_6ED6ACD7
		dd offset loc_6ED6AC10
		dd offset loc_6ED6AD00
		dd offset loc_6ED6A9C0
		dd offset loc_6ED6A9C0
aErrorOccurre_2	db 'error occurred while parsing element',0 ; DATA XREF: sub_6ED6B5F0+36Ao
					; sub_6ED6F330+5C8o
		align 10h
off_6EDA0C40	dd offset loc_6ED6B952	; DATA XREF: sub_6ED6B5F0+94r
		dd offset loc_6ED6B6B4	; jump table for switch	statement
		dd offset loc_6ED6B900
		dd offset loc_6ED6B6B4
		dd offset loc_6ED6B6B4
		dd offset loc_6ED6B6B4
		dd offset loc_6ED6B6B4
		dd offset loc_6ED6B8E0
		dd offset loc_6ED6B6B4
		dd offset loc_6ED6B6B4
		dd offset loc_6ED6B690
		dd offset loc_6ED6B6B4
		dd offset loc_6ED6B6B4
		dd offset loc_6ED6B8C1
off_6EDA0C78	dd offset loc_6ED6B676	; DATA XREF: sub_6ED6B5F0+11Br
		dd offset loc_6ED6BBF7	; jump table for switch	statement
		dd offset loc_6ED6BC22
		dd offset loc_6ED6B9A7
		dd offset loc_6ED6BBD0
		dd offset loc_6ED6BADB
		dd offset loc_6ED6BB80
		dd offset loc_6ED6BC22
		dd offset loc_6ED6BAF0
		dd offset loc_6ED6BB27
		dd offset loc_6ED6BB27
		dd offset loc_6ED6BC22
		dd offset loc_6ED6BB72
aAttlist	db 'ATTLIST',0          ; DATA XREF: sub_6ED6BFC0+4DBo
aRequired	db 'REQUIRED',0         ; DATA XREF: sub_6ED6BFC0+5EBo
aImplied	db 'IMPLIED',0          ; DATA XREF: sub_6ED6BFC0+71Bo
aFixed		db 'FIXED',0            ; DATA XREF: sub_6ED6BFC0+7CBo
		align 4
off_6EDA0CCC	dd offset loc_6ED6C045	; DATA XREF: sub_6ED6BFC0+E9r
		dd offset loc_6ED6C490	; jump table for switch	statement
		dd offset loc_6ED6C520
		dd offset loc_6ED6C550
		dd offset loc_6ED6C520
		dd offset loc_6ED6C657
		dd offset loc_6ED6C520
		dd offset loc_6ED6C6A4
		dd offset loc_6ED6C520
		dd offset loc_6ED6C270
		dd offset loc_6ED6C5A0
		dd offset loc_6ED6C6D0
		dd offset loc_6ED6C780
		dd offset loc_6ED6C630
		dd offset loc_6ED6C360
		dd offset loc_6ED6C270
aNtity		db 'NTITY',0            ; DATA XREF: sub_6ED6CA30+7F4o
aNdata_0	db 'NDATA',0            ; DATA XREF: sub_6ED6CA30+6BBo
off_6EDA0D18	dd offset loc_6ED6CAFE	; DATA XREF: sub_6ED6CA30+126r
		dd offset loc_6ED6D217	; jump table for switch	statement
		dd offset loc_6ED6D280
		dd offset loc_6ED6D2B0
		dd offset loc_6ED6D2E0
		dd offset loc_6ED6D310
		dd offset loc_6ED6D310
		dd offset loc_6ED6D332
		dd offset loc_6ED6D360
		dd offset loc_6ED6D0E2
		dd offset loc_6ED6D147
		dd offset loc_6ED6D171
		dd offset loc_6ED6D171
		dd offset loc_6ED6CF98
		dd offset loc_6ED6D390
		dd offset loc_6ED6D3C0
		dd offset loc_6ED6D3F0
		dd offset loc_6ED6D420
		dd offset loc_6ED6D420
		dd offset loc_6ED6D1C4
		dd offset loc_6ED6D1C4
		dd offset loc_6ED6D0B8
		dd offset loc_6ED6CF98
		dd offset loc_6ED6CF98
off_6EDA0D78	dd offset loc_6ED6CF20	; DATA XREF: sub_6ED6CA30+177r
		dd offset loc_6ED6CB10	; jump table for switch	statement
		dd offset loc_6ED6CB10
		dd offset loc_6ED6CB10
		dd offset loc_6ED6CB10
		dd offset loc_6ED6CB10
		dd offset loc_6ED6CDF6
		dd offset loc_6ED6CB10
		dd offset loc_6ED6CB10
		dd offset loc_6ED6CB10
		dd offset loc_6ED6CB10
		dd offset loc_6ED6CB10
		dd offset loc_6ED6CDC0
		dd offset loc_6ED6CB10
		dd offset loc_6ED6CB10
		dd offset loc_6ED6CB10
		dd offset loc_6ED6CB10
		dd offset loc_6ED6CB10
		dd offset loc_6ED6CD86
		dd offset loc_6ED6CB10
		dd offset loc_6ED6CD50
		dd offset loc_6ED6CB10
		dd offset loc_6ED6CB10
		dd offset loc_6ED6CBDC
		dd offset loc_6ED6CBB0
off_6EDA0DDC	dd offset loc_6ED6E210	; DATA XREF: sub_6ED6E1C0+D1r
		dd offset loc_6ED6E560	; jump table for switch	statement
		dd offset loc_6ED6E560
		dd offset loc_6ED6E560
		dd offset loc_6ED6E690
		dd offset loc_6ED6E648
		dd offset loc_6ED6E602
		dd offset loc_6ED6E5BC
		dd offset loc_6ED6E6C0
		dd offset loc_6ED6E6E4
off_6EDA0E04	dd offset loc_6ED6E466	; DATA XREF: sub_6ED6E1C0+DBr
		dd offset loc_6ED6E21B	; jump table for switch	statement
		dd offset loc_6ED6E21B
		dd offset loc_6ED6E21B
		dd offset loc_6ED6E21B
		dd offset loc_6ED6E2A2
		dd offset loc_6ED6E3D4
		dd offset loc_6ED6E2B0
		dd offset loc_6ED6E2B0
		dd offset loc_6ED6E2B0
		dd offset loc_6ED6E2B0
		dd offset loc_6ED6E2B0
aErrorOccurre_3	db 'error occurred while parsing document type definition',0
					; DATA XREF: sub_6ED6E7C0+478o
aDoctype_0	db 'DOCTYPE',0          ; DATA XREF: sub_6ED6E7C0+52Bo
		align 4
aDtdParsingExce	db 'DTD parsing exceeded recursion limit of %1.',0
					; DATA XREF: sub_6ED6E7C0+920o
off_6EDA0EA0	dd offset loc_6ED6E911	; DATA XREF: sub_6ED6E7C0+3D3r
		dd offset loc_6ED6ECE0	; jump table for switch	statement
		dd offset loc_6ED6EF80
		dd offset loc_6ED6EF30
		dd offset loc_6ED6EF80
		dd offset loc_6ED6EED1
		dd offset loc_6ED6EF80
		dd offset loc_6ED6EE85
		dd offset loc_6ED6EE85
		dd offset loc_6ED6EE57
		dd offset loc_6ED6EE20
		dd offset loc_6ED6EF80
		dd offset loc_6ED6EDF5
		dd offset loc_6ED6ED70
aMoreThanOneDoc	db 'more than one document type definition',0 ; DATA XREF: sub_6ED6F330+87Eo
aVersion_0	db 'version=',27h,0     ; DATA XREF: sub_6ED6F330+3FEo
aEncoding_0	db ' encoding=',27h,0   ; DATA XREF: sub_6ED6F330+71Co
aStandaloneYes	db ' standalone=',27h,'yes',27h,0 ; DATA XREF: sub_6ED6F330+6F6o
aStandaloneNo	db ' standalone=',27h,'no',27h,0 ; DATA XREF: sub_6ED6F330+82Co
off_6EDA0F38	dd offset loc_6ED6F3B4	; DATA XREF: sub_6ED6F330+134r
		dd offset loc_6ED6F660	; jump table for switch	statement
		dd offset loc_6ED6F648
		dd offset loc_6ED6F630
		dd offset loc_6ED6F5E1
		dd offset loc_6ED6F690
		dd offset loc_6ED6F690
		dd offset loc_6ED6F5A8
		dd offset loc_6ED6F5A8
off_6EDA0F5C	dd offset loc_6ED6F8F0	; DATA XREF: sub_6ED6F330+2AAr
		dd offset loc_6ED6F3C6	; jump table for switch	statement
		dd offset loc_6ED6F3C6
		dd offset loc_6ED6F3C6
		dd offset loc_6ED6F3C6
		dd offset loc_6ED6F8D2
		dd offset loc_6ED6F883
		dd offset loc_6ED6F3C6
		dd offset loc_6ED6F700
		dd offset loc_6ED6F3C6
		dd offset loc_6ED6F6E0
; Exported entry 111. _ZN15QXmlInputSource9EndOfDataE
		public _ZN15QXmlInputSource9EndOfDataE
_ZN15QXmlInputSource9EndOfDataE	db 0FEh, 0FFh
; Exported entry 105. _ZN15QXmlInputSource13EndOfDocumentE
		public _ZN15QXmlInputSource13EndOfDocumentE
_ZN15QXmlInputSource13EndOfDocumentE dw	0FFFFh
		align 20h
byte_6EDA0FA0	db 1			; DATA XREF: sub_6ED68110+FDr
		db 3 dup(0FFh)
		dd 0FFFFFFFFh, 60602FFh, 0FFFF0606h, 0FF0304FFh, 0FF07FFFFh
		dd 0FFFF03FFh, 0FFFFFFFFh, 0FFFF0505h, 5FFFF08h, 9FFFF05h
		dd 0FFFFFFFFh, 0FFh, 0
byte_6EDA0FD8	db 1			; DATA XREF: sub_6ED65310+A2r
		db 0FFh, 2, 3
		dd 302h
byte_6EDA0FE0	db 2			; DATA XREF: sub_6ED65310+8Fr
					; sub_6ED656F0+92r ...
		db 3 dup(2)
		dd 0Ah dup(2020202h), 2010102h,	2 dup(1010101h), 2000101h
		dd 2020202h, 2,	5 dup(0)
		dd 2000000h, 20202h, 2,	5 dup(0)
		dd 2000000h, 2020202h
dword_6EDA1060	dd 1			; DATA XREF: sub_6ED656F0+A2r
		dd 2 dup(0FFFFFFFFh), 2	dup(2),	3, 2 dup(2), 3,	7 dup(0)
dword_6EDA10A0	dd 1			; DATA XREF: sub_6ED68B40+ABr
		dd 5 dup(0FFFFFFFFh), 3, 2 dup(0FFFFFFFFh), 2, 0FFFFFFFFh
		dd 3, 5	dup(0FFFFFFFFh), 2 dup(4), 0FFFFFFFFh
byte_6EDA10F0	db 1			; DATA XREF: sub_6ED64F30+A0r
		db 2 dup(0FFh),	2
		dd 304FFFFh, 3030403h, 0FF030305h, 0FF06h, 7 dup(0)
byte_6EDA1120	db 1			; DATA XREF: sub_6ED68FF0+A4r
		db 5, 2	dup(0FFh)
		dd 40209FFh, 2090203h, 9020304h, 2030402h, 3040209h, 8090602h
		dd 9060607h, 6060708h, 6070809h, 7080906h, 6, 4	dup(0)
byte_6EDA1160	db 0FFh			; DATA XREF: sub_6ED6CA30+111r
		db 3 dup(0FFh)
		dd 0FF02FF01h, 0FFFFFFFFh, 0FFFF0DFFh, 0FF040303h, 0FFFFFFFFh
		dd 0FF05FFFFh, 0FF1507FFh, 0FFFF16FFh, 16FFFF15h, 0FF08FFFFh
		dd 0FFFF17FFh, 17FFFFFFh, 0FF0AFF09h, 2	dup(0FFFFFFFFh)
		dd 0FF150B0Bh, 0FFFF16FFh, 16FFFF15h, 0FF0EFFFFh, 2 dup(0FFFFFFFFh)
		dd 0FF100F0Fh, 0FFFFFFFFh, 0FF11FFFFh, 0FF1513FFh, 0FFFF16FFh
		dd 16FFFF15h, 0FF15FFFFh, 0FFFF16FFh, 16FFFF15h, 0FFFFFFFFh
		dd 0FFFF16FFh, 7 dup(0)
byte_6EDA1200	db 0FFh			; DATA XREF: sub_6ED65AE0+92r
		db 1, 2	dup(0FFh)
		dd 0FFFFFFFFh, 0FF02FF05h, 0FFFFFFFFh, 0FF0302FFh, 3030306h
		dd 0FFFF0404h, 0FFFF06FFh, 0FF0404FFh, 0FFFF01FFh, 0FFFFFFFFh
		dd 6FF0305h, 4030303h, 0FF04h, 2 dup(0)
byte_6EDA1240	db 0FFh			; DATA XREF: sub_6ED67AD0:loc_6ED67B98r
		db 0FFh, 1, 0FFh
		dd 0FFFFFF02h, 303FFFFh, 0FFFF0804h, 50508FFh, 2 dup(0FFFF0807h)
		dd 0FFFF08FFh
byte_6EDA1260	db 0FFh			; DATA XREF: sub_6ED65FC0+A1r
		db 3 dup(0FFh)
		dd 0FFFFFFFFh, 1FFFFFFh, 0FFFF02FFh, 4 dup(0FFFFFFFFh)
		dd 3FFFFFFh, 4030303h, 3 dup(0FFFFFFFFh), 7FFFFFFh, 0FFFFFFFFh
		dd 0FF0506FFh, 0FF1211FFh, 2 dup(0FFFFFFFFh), 1211FFFFh
		dd 3 dup(0FFFFFFFFh), 0F0FFFFFh, 0FFFFFF08h, 0F0F0F0Fh
		dd 0FF0BFF09h, 0FFFFFF0Ah, 0FFFFFFFFh, 0BFFFFFFh, 0FFFF0AFFh
		dd 0FFFFFFFFh, 1211FFFFh, 0FFFFFFFFh, 0FFFF11FFh, 3 dup(0FFFFFFFFh)
		dd 0C0C0C0Ch, 0FF0BFF0Dh, 0FFFFFF0Eh, 0FFFFFFFFh, 0BFFFFFFh
		dd 0FFFF0EFFh, 3 dup(0FFFFFFFFh), 0FFFF11FFh, 11FFFFFFh
		dd 0FFFFFF12h, 101010FFh, 0FFFFFFFFh, 0FFFF1211h, 2 dup(0FFFFFFFFh)
		dd 0FF12FFFFh, 2 dup(0FFFFFFFFh), 0FFFFh, 5 dup(0)
byte_6EDA1360	db 1			; DATA XREF: sub_6ED68760+A4r
		db 4, 2	dup(0FFh)
		dd 20307FFh, 30703FFh, 703FF02h, 3FF0203h, 0FF050706h
		dd 5070606h, 70606FFh, 6FF05h, 7 dup(0)
byte_6EDA13A0	db 0FFh			; DATA XREF: sub_6ED666D0+A5r
		db 10h,	2 dup(0FFh)
		dd 0FF020501h, 0FFFFFF08h, 1414FFFFh, 5	dup(14141414h)
		dd 14031414h, 3	dup(14141414h),	14140414h, 3 dup(14141414h)
		dd 0FFFF1414h, 0FFFFFFFFh, 0FFFFFF07h, 0FF06FFFFh, 7 dup(14141414h)
		dd 0FFFFFFFFh, 9FFFFFFh, 0FFFF0BFFh, 1414FFFFh,	2 dup(14141414h)
		dd 14140A14h, 3	dup(14141414h),	0FF0C1414h, 3 dup(0FFFFFFFFh)
		dd 0FFFF0DFFh, 2 dup(0FFFFFFFFh), 0E0EFFFFh, 3 dup(0E0E0E0Eh)
		dd 0D13FF0Fh, 3	dup(0FFFFFFFFh), 0FFFF0D13h, 2 dup(0FFFFFFFFh)
		dd 0FF11FFFFh, 2 dup(11111111h), 0FF121111h, 0FFFF1013h
		dd 2 dup(0FFFFFFFFh), 1013FFFFh, 2 dup(0FFFFFFFFh), 0FFFFh
		dd 5 dup(0)
byte_6EDA14C0	db 0FFh			; DATA XREF: sub_6ED6BFC0+D3r
		db 2 dup(0FFh),	1
		dd 0FFFFFFFFh, 0FFFFFF02h, 0FFFFFFFFh, 3FFFFFFh, 3030303h
		dd 5050F04h, 5050505h, 5050FFFh, 5050505h, 0FFFFFF06h
		dd 0FFFFFFFFh, 70707FFh, 7070707h, 0FFFFFF08h, 0FFFFFFFFh
		dd 0D090DFFh, 0D0D0D0Dh, 0FFFFFFFFh, 0FF0A0C0Bh, 0FFFF0E0Eh
		dd 0FFFFFFFFh, 0FFFF0E0Eh, 0FFFFFFFFh, 0FFFFFF08h, 0FFFFFFFFh
		dd 0FFFF0E0Eh, 0FFFFFFFFh, 5050FFFh, 5050505h
byte_6EDA1538	db 0FFh			; DATA XREF: sub_6ED66E40+E5r
		db 1, 2	dup(0FFh)
		dd 0FF0402FFh, 0FFFF04FFh, 7 dup(0)
byte_6EDA1560	db 1			; DATA XREF: sub_6ED6E1C0+BFr
		db 3 dup(0FFh)
		dd 0FFFFFFFFh, 204FFFFh, 2 dup(0FFFFFFFFh), 30605FFh, 0FFFF09FFh
		dd 0FFFFFFFFh, 0FF0807FFh, 7 dup(0)
byte_6EDA15A0	db 0FFh			; DATA XREF: sub_6ED64710+169r
		db 0FFh, 1, 7
		dd 0FFFFFFFFh, 0FF02FFFFh, 0FFFF0503h, 410FFFFh, 4040404h
		dd 4040410h, 10060404h,	6060606h, 6061006h, 0FFFF0606h
		dd 0FF08FFFFh, 0FFFF0B09h, 0FF0DFFFFh, 0A0A0A0Ah, 0A0AFF0Dh
		dd 0DFF0A0Ah, 0C0C0C0Ch, 0C0C0DFFh, 0F0F0C0Ch, 0F0E0F0Fh
		dd 0F0F0503h, 0F0Fh, 0
byte_6EDA1600	db 0FFh			; DATA XREF: sub_6ED6E7C0:loc_6ED6EB79r
		db 1, 2	dup(0FFh)
		dd 0FFFFFFFFh, 0FFFFFF02h, 0FFFFFFFFh, 0FF0303FFh, 3FFFFFFh
		dd 705FF04h, 0FF0DFFFFh, 705FFFFh, 0FF0DFFFFh, 7FFFF06h
		dd 0FF0DFFFFh, 7FFFFFFh, 0FF0DFFFFh, 0FFFFFFFFh, 0AFF090Ch
		dd 0FFFFFFFFh, 0AFF090Ch, 0FFFFFF0Bh, 0AFF090Ch, 0FFFFFF0Bh
		dd 0AFF090Ch, 0FFFFFFFFh, 0AFF090Ch, 0FFFFFFFFh, 0FF0DFFFFh
		dd 6 dup(0)
byte_6EDA1680	db 0FFh			; DATA XREF: sub_6ED69420+155r
		db 2 dup(0FFh),	1
		dd 0FF02FFFFh, 0FFFFFFFFh, 4FFFFFFh, 0FFFFFFFFh, 0FFFF07FFh
		dd 0FFFF06FFh, 0E0EFF0Fh, 80E0F0Eh, 0FF0DFFFFh,	0DFF09FFh
		dd 0FFFF0AFFh, 0BFFFF0Dh, 0CFF0DFFh, 0FF0DFFFFh, 0DFFFFFFh
		dd 10FFFFFFh, 0E0EFFFFh, 0E0E0F0Eh, 0E0F100Eh
byte_6EDA16D0	db 3			; DATA XREF: sub_6ED6A130+196r
		db 1, 2	dup(0FFh)
		dd 4FFFFFFh, 0FFFFFF02h, 5FFFFh
byte_6EDA16E0	db 0Eh			; DATA XREF: sub_6ED6A6E0+252r
		db 3 dup(0Eh)
		dd 0E0E0E0Eh, 0E00000Eh, 0E0E000Eh, 4 dup(0E0E0E0Eh), 0E0C0700h
		dd 0D02010Eh, 0E0E0E0Eh, 50E080Eh, 3 dup(0E0E0E0Eh), 6030B04h
		dd 6 dup(0E0E0E0Eh), 0A0E0E0Eh,	0E0E090Eh, 28h dup(0E0E0E0Eh)
byte_6EDA17E0	db 5			; DATA XREF: sub_6ED6A6E0+263r
		db 3 dup(1)
		dd 1010401h, 1050102h, 4010101h, 1020101h, 1010105h, 1010401h
		dd 0FF050103h, 4010101h, 1030101h, 1010105h, 1010401h
		dd 0FFFF0101h, 0FF090610h, 8FFFFFFh, 1010105h, 1010401h
		dd 1050101h, 4010101h, 1010101h, 1010105h, 1010401h, 0FFFF0101h
		dd 0FFFFFFFFh, 0FFFF0C0Ah, 1010105h, 1010401h, 1050101h
		dd 4010101h, 1010101h, 2 dup(0D0D0D0Dh), 0D0D0D0Eh, 0D0D0D0Dh
		dd 0D0E0D0Dh, 2	dup(0D0D0D0Dh),	0D0D0Fh, 0D0D0D0Dh, 0D0F0D0Dh
byte_6EDA1880	db 9			; DATA XREF: sub_6ED6A6E0+259r
		db 9, 5, 1
		dd 4030200h, 9070806h, 90909h, 4 dup(0)
dword_6EDA18A0	dd 0FFFFFFFFh		; DATA XREF: sub_6ED6B5F0+105r
		dd 1, 3	dup(0FFFFFFFFh), 2, 9, 3, 8, 2 dup(0FFFFFFFFh)
		dd 9, 3, 8, 0FFFFFFFFh,	5 dup(4), 3 dup(0FFFFFFFFh), 5
		dd 2 dup(0FFFFFFFFh), 6, 3 dup(0FFFFFFFFh), 7, 0FFFFFFFFh
		dd 0Ch,	4 dup(0FFFFFFFFh), 0Ch,	4 dup(0FFFFFFFFh), 0Ch
		dd 2 dup(0FFFFFFFFh), 0Bh, 9, 3, 8, 0FFFFFFFFh,	0Bh, 9
		dd 3, 8, 2 dup(0FFFFFFFFh), 9, 3, 8, 0FFFFFFFFh, 4 dup(0)
byte_6EDA19A0	db 1			; DATA XREF: sub_6ED6F330+11Br
		db 2, 2	dup(0FFh)
		dd 0FFFFFFFFh, 0FFFFFF02h, 0FFFFFFFFh, 0FF090307h, 0FFFFFF09h
		dd 0FF0504FFh, 0FFFF0201h, 1FFFFFFh, 0FFFFFF02h, 201FFFFh
		dd 0FFFFFFFFh, 0FF0201FFh, 0FFFFFFFFh, 0FFFF0201h, 0FFFFFFh
aQxmlstreamread	db 'QXmlStreamReader: addData() with device()',0
					; DATA XREF: _ZN16QXmlStreamReader7addDataERK10QByteArray+19o
aQxmlstream	db 'QXmlStream',0       ; DATA XREF: sub_6ED71920+1Do
					; sub_6ED77250+E9o ...
aPrematureEndOf	db 'Premature end of document.',0 ; DATA XREF: sub_6ED71960:loc_6ED71A32o
aInvalidDocumen	db 'Invalid document.',0 ; DATA XREF: sub_6ED71960+93o
aQxmlstreamwrit	db 'QXmlStreamWriter: No device',0 ; DATA XREF: sub_6ED72900:loc_6ED72A41o
					; sub_6ED72A90:loc_6ED72BA6o
aXml_2		db 'xml',0              ; DATA XREF: sub_6ED737E0+150o
					; .text:6ED76FD0o ...
		align 4
aHttpWww_w3_o_1	db 'http://www.w3.org/XML/1998/namespace',0 ; DATA XREF: sub_6ED737E0+1F3o
					; .text:6ED77073o ...
asc_6EDA1A89	db ' ',0                ; DATA XREF: sub_6ED73BB0+38o
					; _ZN16QXmlStreamWriter14writeAttributeERK7QStringS2_+25o ...
aLt_1		db '&lt;',0             ; DATA XREF: sub_6ED73E40:loc_6ED73FC2o
aGt_1		db '&gt;',0             ; DATA XREF: sub_6ED73E40:loc_6ED73FE8o
aAmp_1		db '&amp;',0            ; DATA XREF: sub_6ED73E40:loc_6ED74010o
aQuot_2		db '&quot;',0           ; DATA XREF: sub_6ED73E40:loc_6ED74036o
a10		db '&#10;',0            ; DATA XREF: sub_6ED73E40:loc_6ED740D1o
a13		db '&#13;',0            ; DATA XREF: sub_6ED73E40:loc_6ED740E0o
a9		db '&#9;',0             ; DATA XREF: sub_6ED73E40:loc_6ED740B8o
		align 4
aUnexpectedCh_0	db 'Unexpected character ',27h,'%1',27h,' in public id literal.',0
					; DATA XREF: sub_6ED77250+E1o
off_6EDA1AE4	dd offset loc_6ED772D6	; DATA XREF: sub_6ED77250+64o
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772D6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772D6
		dd offset loc_6ED772D6
		dd offset loc_6ED772D6
		dd offset loc_6ED772D6
		dd offset loc_6ED772D6
		dd offset loc_6ED772D6
		dd offset loc_6ED772F6
		dd offset loc_6ED772D6
		dd offset loc_6ED772D6
		dd offset loc_6ED772D6
		dd offset loc_6ED772D6
		dd offset loc_6ED772D6
		dd offset loc_6ED772D6
		dd offset loc_6ED772D6
		dd offset loc_6ED772D6
		dd offset loc_6ED772D6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772D6
		dd offset loc_6ED772D6
		dd offset loc_6ED772F6
		dd offset loc_6ED772D6
		dd offset loc_6ED772F6
		dd offset loc_6ED772D6
		dd offset loc_6ED772D6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772F6
		dd offset loc_6ED772D6
byte_6EDA1C3C	db 0Ah,	0		; DATA XREF: sub_6ED775A0+15o
					; _ZN16QXmlStreamWriter16writeEndDocumentEv+2Ao ...
word_6EDA1C3E	dw 223Dh		; DATA XREF: _ZN16QXmlStreamWriter14writeAttributeERK7QStringS2_+4Co
					; sub_6ED776A0+40o ...
		db 0
byte_6EDA1C41	db 22h,	0		; DATA XREF: _ZN16QXmlStreamWriter14writeAttributeERK7QStringS2_+85o
					; sub_6ED776A0+6Ao ...
aXmlns_3	db ' xmlns="',0         ; DATA XREF: sub_6ED776A0+88o
aXmlns_2	db ' xmlns:',0          ; DATA XREF: sub_6ED776A0+1Co
asc_6EDA1C54	db '/>',0               ; DATA XREF: sub_6ED77880+7Co
					; _ZN16QXmlStreamWriter15writeEndElementEv+E2o
asc_6EDA1C57	db '>',0                ; DATA XREF: sub_6ED77880+3Eo
					; _ZN16QXmlStreamWriter15writeEndElementEv+ADo	...
a?xmlVersion	db '<?xml version="',0  ; DATA XREF: _ZN16QXmlStreamWriter18writeStartDocumentERK7QStringb+5Do
					; _ZN16QXmlStreamWriter18writeStartDocumentERK7QString+59o
aEncoding_1	db '" encoding="',0     ; DATA XREF: _ZN16QXmlStreamWriter18writeStartDocumentERK7QStringb+9Bo
					; _ZN16QXmlStreamWriter18writeStartDocumentERK7QString+94o
aStandaloneYes?	db '" standalone="yes"?>',0
					; DATA XREF: _ZN16QXmlStreamWriter18writeStartDocumentERK7QStringb+181o
aStandaloneNo?	db '" standalone="no"?>',0
					; DATA XREF: _ZN16QXmlStreamWriter18writeStartDocumentERK7QStringb+137o
a?_0		db '"?>',0              ; DATA XREF: _ZN16QXmlStreamWriter18writeStartDocumentERK7QString+13Co
a1_0_0		db '1.0',0              ; DATA XREF: _ZN16QXmlStreamWriter18writeStartDocumentEv+37o
					; sub_6ED7BA60+62o
asc_6EDA1CA7	db '&',0                ; DATA XREF: _ZN16QXmlStreamWriter20writeEntityReferenceERK7QString+25o
					; sub_6ED78A10+6CEo ...
asc_6EDA1CA9	db ';',0                ; DATA XREF: _ZN16QXmlStreamWriter20writeEntityReferenceERK7QString+4Do
					; .rdata:6EDA29A8o
aCdata_1	db ']]]]><![CDATA[>',0  ; DATA XREF: _ZN16QXmlStreamWriter10writeCDATAERK7QString+6Do
asc_6EDA1CBB	db ']]>',0              ; DATA XREF: _ZN16QXmlStreamWriter10writeCDATAERK7QString+74o
					; _ZN16QXmlStreamWriter10writeCDATAERK7QString+CBo ...
aCdata_2	db '<![CDATA[',0        ; DATA XREF: _ZN16QXmlStreamWriter10writeCDATAERK7QString+9Eo
a?_1		db '<?',0               ; DATA XREF: _ZN16QXmlStreamWriter26writeProcessingInstructionERK7QStringS2_+3Fo
a?_2		db '?>',0               ; DATA XREF: _ZN16QXmlStreamWriter26writeProcessingInstructionERK7QStringS2_+9Co
					; sub_6ED83560+1A40o
asc_6EDA1CCF	db '<!--',0             ; DATA XREF: _ZN16QXmlStreamWriter12writeCommentERK7QString+41o
asc_6EDA1CD4	db '-->',0              ; DATA XREF: _ZN16QXmlStreamWriter12writeCommentERK7QString+69o
asc_6EDA1CD8	db '</',0               ; DATA XREF: _ZN16QXmlStreamWriter15writeEndElementEv+7Eo
asc_6EDA1CDB	db ':',0                ; DATA XREF: _ZN16QXmlStreamWriter15writeEndElementEv+137o
					; sub_6ED807D0+1E9o ...
asc_6EDA1CDD	db '<',0                ; DATA XREF: sub_6ED78A10+3F6o
					; .text:6ED7A5B6o ...
aLt_2		db 'lt',0               ; DATA XREF: sub_6ED78A10+424o
					; .text:6ED7A5E4o
aGt_2		db 'gt',0               ; DATA XREF: sub_6ED78A10+59Bo
					; .text:6ED7A75Bo
aAmp_2		db 'amp',0              ; DATA XREF: sub_6ED78A10+706o
					; .text:6ED7A8C6o
asc_6EDA1CE9	db 27h,0		; DATA XREF: sub_6ED78A10+839o
					; .text:6ED7A9F9o ...
aApos_1		db 'apos',0             ; DATA XREF: sub_6ED78A10+871o
					; .text:6ED7AA31o
aQuot_3		db 'quot',0             ; DATA XREF: sub_6ED78A10+9DCo
					; .text:6ED7AB9Co
aRecursiveEnt_0	db 'Recursive entity detected.',0 ; DATA XREF: sub_6ED91800+146o
aInvalidXmlVers	db 'Invalid XML version string.',0 ; DATA XREF: sub_6ED7BA60+1A6o
aUnsupportedXml	db 'Unsupported XML version.',0 ; DATA XREF: sub_6ED7BA60+941o
aEncoding_2	db 'encoding',0         ; DATA XREF: sub_6ED7BA60+37Eo
		align 10h
aTheStandaloneP	db 'The standalone pseudo attribute must appear after the encoding.',0
					; DATA XREF: sub_6ED7BA60+3F0o
a1IsAnInvalidEn	db '%1 is an invalid encoding name.',0 ; DATA XREF: sub_6ED7BA60+47Bo
aEncoding1IsUns	db 'Encoding %1 is unsupported',0 ; DATA XREF: sub_6ED7BA60+76Fo
aYes_0		db 'yes',0              ; DATA XREF: sub_6ED7BA60+56Eo
aNo_0		db 'no',0               ; DATA XREF: sub_6ED7BA60+6FAo
		align 4
aStandaloneAcce	db 'Standalone accepts only yes or no.',0 ; DATA XREF: sub_6ED7BA60+893o
		align 4
aInvalidAttribu	db 'Invalid attribute in XML declaration.',0 ; DATA XREF: sub_6ED7BA60+308o
aStandalone_0	db 'standalone',0       ; DATA XREF: sub_6ED7BA60+542o
aExpected	db 'Expected ',0        ; DATA XREF: sub_6ED7D7F0+2A9o
aOr_0		db ', or ',0            ; DATA XREF: sub_6ED7D7F0+1B2o
aOr		db ' or ',0             ; DATA XREF: sub_6ED7D7F0+1ABo
asc_6EDA1E3E	db ', ',0               ; DATA XREF: sub_6ED7D7F0+273o
aButGot		db ', but got ',27h,0   ; DATA XREF: sub_6ED7D7F0+32Bo
aUnexpected	db 'Unexpected ',27h,0  ; DATA XREF: sub_6ED7D7F0+4A5o
		align 4
aNamespacePrefi	db 'Namespace prefix ',27h,'%1',27h,' not declared',0
					; DATA XREF: sub_6ED7E910+124o
aXmlns_4	db 'xmlns',0            ; DATA XREF: sub_6ED7EB70+189o
					; sub_6ED7EB70+34Co ...
aHttpWww_w3_o_2	db 'http://www.w3.org/2000/xmlns/',0 ; DATA XREF: sub_6ED7EB70+3C7o
					; sub_6ED7EB70+1298o ...
		align 4
aIllegalNamespa	db 'Illegal namespace declaration.',0 ; DATA XREF: sub_6ED7EB70+2B8o
					; sub_6ED7EB70+44Do ...
aAttributeRedef	db 'Attribute redefined.',0 ; DATA XREF: sub_6ED7EB70+804o
aQxmlstreamwr_0	db 'QXmlStreamWriter: writeCurrentToken() with invalid state.',0
					; DATA XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader:loc_6ED81332o
		align 4
off_6EDA1F14	dd offset loc_6ED81350	; DATA XREF: _ZN16QXmlStreamWriter17writeCurrentTokenERK16QXmlStreamReader:loc_6ED81363r
		dd offset loc_6ED81332	; jump table for switch	statement
		dd offset loc_6ED81455
		dd offset loc_6ED81470
		dd offset loc_6ED81490
		dd offset loc_6ED815E0
		dd offset loc_6ED81600
		dd offset loc_6ED81680
		dd offset loc_6ED81700
		dd offset loc_6ED81780
		dd offset loc_6ED81370
aEncounteredInc	db 'Encountered incorrectly encoded content.',0
					; DATA XREF: sub_6ED81C20+347o
					; sub_6ED83560+AC8o
		align 4
off_6EDA1F6C	dd offset loc_6ED91685,	offset loc_6ED91685, offset loc_6ED9160C
					; DATA XREF: sub_6ED91590+58r
		dd offset loc_6ED9160C,	offset loc_6ED91685, offset loc_6ED9160C ; jump	table for switch statement
		dd offset loc_6ED9160C,	offset loc_6ED9160C, offset loc_6ED9160C
		dd offset loc_6ED9160C,	offset loc_6ED9160C, offset loc_6ED9160C
		dd offset loc_6ED9160C,	offset loc_6ED9160C, offset loc_6ED9160C
		dd offset loc_6ED9160C,	offset loc_6ED9160C, offset loc_6ED9160C
		dd offset loc_6ED9160C,	offset loc_6ED9160C, offset loc_6ED9160C
		dd offset loc_6ED9160C,	offset loc_6ED9160C, offset loc_6ED91685
		dd offset loc_6ED91685,	offset loc_6ED91685, offset loc_6ED91685
		dd offset loc_6ED9160C,	offset loc_6ED91685, offset loc_6ED91685
		dd offset loc_6ED91685,	offset loc_6ED91685, offset loc_6ED91685
		dd offset loc_6ED91685,	offset loc_6ED91685, offset loc_6ED91685
		dd offset loc_6ED9160C,	offset loc_6ED9160C, offset loc_6ED91685
		dd offset loc_6ED9160C,	offset loc_6ED9160C, offset loc_6ED9160C
		dd offset loc_6ED9160C,	offset loc_6ED9160C, offset loc_6ED9160C
		dd offset loc_6ED9160C,	offset loc_6ED9160C, offset loc_6ED9160C
		dd offset loc_6ED9160C,	offset loc_6ED915F0, offset loc_6ED91685
		dd offset loc_6ED91685,	offset loc_6ED91685, offset loc_6ED91685
		dd offset loc_6ED91685,	offset loc_6ED9160C, offset loc_6ED9160C
		dd offset loc_6ED9160C,	offset loc_6ED9160C, offset loc_6ED9160C
		dd offset loc_6ED9160C,	offset loc_6ED9160C, offset loc_6ED9160C
		dd offset loc_6ED9160C,	offset loc_6ED9160C, offset loc_6ED9160C
		dd offset loc_6ED9160C,	offset loc_6ED9160C, offset loc_6ED9160C
		dd offset loc_6ED9160C,	offset loc_6ED9160C, offset loc_6ED9160C
		dd offset loc_6ED9160C,	offset loc_6ED9160C, offset loc_6ED9160C
		dd offset loc_6ED9160C,	offset loc_6ED9160C, offset loc_6ED9160C
		dd offset loc_6ED9160C,	offset loc_6ED9160C, offset loc_6ED9160C
		dd offset loc_6ED9160C,	offset loc_6ED91685, offset loc_6ED9160C
		dd offset loc_6ED91685,	offset loc_6ED91685, offset loc_6ED9160C
		dd offset loc_6ED9160C,	offset loc_6ED9160C, offset loc_6ED9160C
		dd offset loc_6ED9160C,	offset loc_6ED9160C, offset loc_6ED9160C
		dd offset loc_6ED9160C,	offset loc_6ED9160C, offset loc_6ED9160C
		dd offset loc_6ED9160C,	offset loc_6ED9160C, offset loc_6ED9160C
		dd offset loc_6ED9160C,	offset loc_6ED9160C, offset loc_6ED9160C
		dd offset loc_6ED9160C,	offset loc_6ED9160C, offset loc_6ED9160C
		dd offset loc_6ED9160C,	offset loc_6ED9160C, offset loc_6ED9160C
		dd offset loc_6ED9160C,	offset loc_6ED9160C, offset loc_6ED9160C
		dd offset loc_6ED9160C,	offset loc_6ED9160C, offset loc_6ED9160C
		dd offset loc_6ED9160C,	offset loc_6ED91685
a?xml_0		db '<?xml',0            ; DATA XREF: sub_6ED826E0+49o
					; .rdata:6EDA2A38o
aCdata_4	db 'CDATA',0            ; DATA XREF: sub_6ED82800+58o
					; .rdata:6EDA2A1Co
aId		db 'ID',0               ; DATA XREF: sub_6ED82800+120o
					; .rdata:6EDA2A20o
aIdref		db 'IDREF',0            ; DATA XREF: sub_6ED82800+148o
					; .rdata:6EDA2A24o
aIdrefs		db 'IDREFS',0           ; DATA XREF: sub_6ED82800+170o
					; .rdata:6EDA2A28o
aEntity_0	db 'ENTITY',0           ; DATA XREF: sub_6ED82800+D1o
					; sub_6ED82EB0+D4o ...
aEntities	db 'ENTITIES',0         ; DATA XREF: sub_6ED82800+F5o
					; .rdata:6EDA2A2Co
aNotation_1	db 'NOTATION',0         ; DATA XREF: sub_6ED82800+80o
					; sub_6ED82EB0+83o ...
aNmtoken	db 'NMTOKEN',0          ; DATA XREF: sub_6ED82800+195o
					; .rdata:6EDA2A30o
aNmtokens	db 'NMTOKENS',0         ; DATA XREF: sub_6ED82800+1BDo
					; .rdata:6EDA2A34o
aRequired_0	db 'REQUIRED',0         ; DATA XREF: sub_6ED829F0+43o
					; .rdata:6EDA29F4o
aImplied_0	db 'IMPLIED',0          ; DATA XREF: sub_6ED829F0+AAo
					; .rdata:6EDA29F8o
aFixed_0	db 'FIXED',0            ; DATA XREF: sub_6ED829F0+68o
					; .rdata:6EDA29FCo
aNdata_1	db 'NDATA',0            ; DATA XREF: sub_6ED82AD0+203o
					; .rdata:6EDA29F0o
aSystem_2	db 'SYSTEM',0           ; DATA XREF: sub_6ED82E00+3Ao
					; .rdata:6EDA29E8o
aPublic_2	db 'PUBLIC',0           ; DATA XREF: sub_6ED82E00+7Ao
					; .rdata:6EDA29ECo
aCdata_3	db '[CDATA[',0          ; DATA XREF: sub_6ED82EB0+5Bo
					; .rdata:6EDA29D0o
aDoctype_1	db 'DOCTYPE',0          ; DATA XREF: sub_6ED82EB0+103o
					; .rdata:6EDA29D4o
aAttlist_0	db 'ATTLIST',0          ; DATA XREF: sub_6ED82EB0+128o
					; .rdata:6EDA29DCo
aElement	db 'ELEMENT',0          ; DATA XREF: sub_6ED82EB0+A5o
					; .rdata:6EDA29D8o
		align 10h
off_6EDA21D0	dd offset loc_6ED82FC5	; DATA XREF: sub_6ED82EB0:loc_6ED82ED5r
		dd offset loc_6ED82ECE	; jump table for switch	statement
		dd offset loc_6ED82ECE
		dd offset loc_6ED82FA0
		dd offset loc_6ED82F45
		dd offset loc_6ED82ECE
		dd offset loc_6ED82ECE
		dd offset loc_6ED82ECE
		dd offset loc_6ED82ECE
		dd offset loc_6ED82ECE
		dd offset loc_6ED82ECE
		dd offset loc_6ED82ECE
		dd offset loc_6ED82ECE
		dd offset loc_6ED82F20
		dd offset loc_6ED82ECE
		dd offset loc_6ED82ECE
		dd offset loc_6ED82ECE
		dd offset loc_6ED82ECE
		dd offset loc_6ED82ECE
		dd offset loc_6ED82ECE
		dd offset loc_6ED82ECE
		dd offset loc_6ED82ECE
		dd offset loc_6ED82ECE
		dd offset loc_6ED82ECE
		dd offset loc_6ED82ECE
		dd offset loc_6ED82ECE
		dd offset loc_6ED82EF8
aInvalidXmlChar	db 'Invalid XML character.',0 ; DATA XREF: sub_6ED83010+466o
aStartTagExpect	db 'Start tag expected.',0 ; DATA XREF: sub_6ED83560+5382o
aVersion_1	db 'version',0          ; DATA XREF: sub_6ED83560+2CC6o
					; .rdata:6EDA2A3Co
aEmpty_0	db 'EMPTY',0            ; DATA XREF: sub_6ED83560+2ED9o
					; .rdata:6EDA2A00o
aAny_0		db 'ANY',0              ; DATA XREF: sub_6ED83560+4D68o
					; .rdata:6EDA2A04o
aPcdata_0	db 'PCDATA',0           ; DATA XREF: sub_6ED83560+2F16o
					; .rdata:6EDA2A08o
aNdataInParamet	db 'NDATA in parameter entity declaration.',0
					; DATA XREF: sub_6ED83560+103Do
		align 4
aXmlDeclaration	db 'XML declaration not at start of document.',0
					; DATA XREF: sub_6ED83560+4ADAo
		align 4
a1IsAnInvalidPr	db '%1 is an invalid processing instruction name.',0
					; DATA XREF: sub_6ED83560+56EEo
		align 4
aInvalidProcess	db 'Invalid processing instruction name.',0
					; DATA XREF: sub_6ED83560:loc_6ED880BDo
asc_6EDA2329	db '--',0               ; DATA XREF: sub_6ED83560+180Ao
aSequenceNotAll	db 'Sequence ',27h,']]>',27h,' not allowed in content.',0
					; DATA XREF: sub_6ED83560+6526o
		align 4
a1IsAnInvalidPu	db '%1 is an invalid PUBLIC identifier.',0 ; DATA XREF: sub_6ED83560+4E57o
aInvalidXmlName	db 'Invalid XML name.',0 ; DATA XREF: sub_6ED83560:loc_6ED8695Fo
		align 4
aExtraContentAt	db 'Extra content at end of document.',0
					; DATA XREF: sub_6ED83560:loc_6ED88306o
					; _ZN16QXmlStreamReader8readNextEv:loc_6ED8A140o
		align 10h
aOpeningAndEndi	db 'Opening and ending tag mismatch.',0 ; DATA XREF: sub_6ED83560+30E5o
aEntity1NotDecl	db 'Entity ',27h,'%1',27h,' not declared.',0
					; DATA XREF: sub_6ED83560:loc_6ED869E1o
					; sub_6ED83560+4038o ...
		align 4
aReferenceToUnp	db 'Reference to unparsed entity ',27h,'%1',27h,'.',0
					; DATA XREF: sub_6ED83560+52DEo
		align 10h
aReferenceToExt	db 'Reference to external entity ',27h,'%1',27h,' in attribute value.',0
					; DATA XREF: sub_6ED83560+23B3o
aInvalidCharact	db 'Invalid character reference.',0 ; DATA XREF: sub_6ED83560:loc_6ED886CCo
		align 4
off_6EDA2464	dd offset loc_6ED835C9	; DATA XREF: sub_6ED83560:loc_6ED837B8r
		dd offset loc_6ED835C9	; jump table for switch	statement
		dd offset loc_6ED83FC4
		dd offset loc_6ED835B6
		dd offset loc_6ED840BF
		dd offset loc_6ED83F34
		dd offset loc_6ED83A4D
		dd offset loc_6ED83A4D
		dd offset loc_6ED83875
		dd offset loc_6ED8427F
		dd offset loc_6ED83EE0
off_6EDA2490	dd offset loc_6ED8650A,	offset loc_6ED8652C, offset loc_6ED837F3
					; DATA XREF: sub_6ED83560+7DCr
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3 ; jump	table for switch statement
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED861F2, offset loc_6ED86213
		dd offset loc_6ED86262,	offset loc_6ED862CB, offset loc_6ED86311
		dd offset loc_6ED837F3,	offset loc_6ED863E0, offset loc_6ED844D6
		dd offset loc_6ED844D6,	offset loc_6ED84512, offset loc_6ED84512
		dd offset loc_6ED84E12,	offset loc_6ED84E23, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED86426, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED86463, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED84920
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED84E38,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED84E8B
		dd offset loc_6ED84FF8,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED84A4F, offset loc_6ED84C93
		dd offset loc_6ED84C50,	offset loc_6ED84CD6, offset loc_6ED84D19
		dd offset loc_6ED84557,	offset loc_6ED845E5, offset loc_6ED845E5
		dd offset loc_6ED84F2B,	offset loc_6ED84935, offset loc_6ED849FC
		dd offset loc_6ED84D5F,	offset loc_6ED84DB5, offset loc_6ED8482C
		dd offset loc_6ED848DA,	offset loc_6ED85E73, offset loc_6ED86683
		dd offset loc_6ED852F8,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED84748,	offset loc_6ED84752, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED864B2, offset loc_6ED853B2
		dd offset loc_6ED853B2,	offset loc_6ED84475, offset loc_6ED84475
		dd offset loc_6ED844A8,	offset loc_6ED844A8, offset loc_6ED844A8
		dd offset loc_6ED844A8,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED85E10
		dd offset loc_6ED859D9,	offset loc_6ED85AB6, offset loc_6ED85518
		dd offset loc_6ED85518,	offset loc_6ED84475, offset loc_6ED84475
		dd offset loc_6ED844A8,	offset loc_6ED844A8, offset loc_6ED844A8
		dd offset loc_6ED844A8,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED85531,	offset loc_6ED85531, offset loc_6ED86072
		dd offset loc_6ED86072,	offset loc_6ED860DB, offset loc_6ED860DB
		dd offset loc_6ED860DB,	offset loc_6ED860DB, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED85B5D, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED866F7, offset loc_6ED846F1
		dd offset loc_6ED846FB,	offset loc_6ED8655B, offset loc_6ED869BE
		dd offset loc_6ED85560,	offset loc_6ED856DC, offset loc_6ED857E7
		dd offset loc_6ED8581D,	offset loc_6ED86106, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED861CB, offset loc_6ED861CB
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED837F3, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED85ED4, offset loc_6ED837F3
		dd offset loc_6ED837F3,	offset loc_6ED86011, offset loc_6ED85298
		dd offset loc_6ED853DB,	offset loc_6ED853DB, offset loc_6ED853DB
		dd offset loc_6ED853DB,	offset loc_6ED853DB
aInvalidEntityV	db 'Invalid entity value.',0 ; DATA XREF: sub_6ED89B30+148o
aExpectedCharac	db 'Expected character data.',0
					; DATA XREF: _ZN16QXmlStreamReader15readElementTextENS_24ReadElementTextBehaviourE+1D2o
		align 4
off_6EDA28F4	dd offset loc_6ED8A378	; DATA XREF: _ZN16QXmlStreamReader15readElementTextENS_24ReadElementTextBehaviourE:loc_6ED8A320r
		dd offset loc_6ED8A2E6	; jump table for switch	statement
		dd offset loc_6ED8A327
		dd offset loc_6ED8A2B4
		dd offset loc_6ED8A2CE
		dd offset loc_6ED8A327
		dd offset loc_6ED8A2B4
aEndOfFile	db 'end of file',0      ; DATA XREF: .rdata:off_6EDA2960o
a_?:					; DATA XREF: .rdata:6EDA2978o
					; .rdata:6EDA2984o ...
		unicode	0, <#[]()|=%/,-+*.?!>
aAZaZ		db '[a-zA-Z]',0         ; DATA XREF: .rdata:6EDA29C8o
a09		db '[0-9]',0            ; DATA XREF: .rdata:6EDA29CCo
		align 20h
off_6EDA2960	dd offset aEndOfFile	; DATA XREF: sub_6ED7D7F0+C9r
					; sub_6ED7D7F0+20Br ...
					; "end of file"
		align 8
		dd offset asc_6EDA1A89	; " "
		dd offset asc_6EDA1CDD	; "<"
		dd offset asc_6EDA1C57	; ">"
		dd offset asc_6EDA1CA7	; "&"
		dd offset a_?		; "#[]()|=%/,-+*.?!"
		dd offset asc_6EDA1CE9	; "'"
		dd offset byte_6EDA1C41
		dd offset a_?+2		; "[]()|=%/,-+*.?!"
		dd offset a_?+4		; "]()|=%/,-+*.?!"
		dd offset a_?+6		; "()|=%/,-+*.?!"
		dd offset a_?+8		; ")|=%/,-+*.?!"
		dd offset a_?+0Ah	; "|=%/,-+*.?!"
		dd offset a_?+0Ch	; "=%/,-+*.?!"
		dd offset a_?+0Eh	; "%/,-+*.?!"
		dd offset a_?+10h	; "/,-+*.?!"
		dd offset asc_6EDA1CDB	; ":"
		dd offset asc_6EDA1CA9	; ";"
		dd offset a_?+12h	; ",-+*.?!"
		dd offset a_?+14h	; "-+*.?!"
		dd offset a_?+16h	; "+*.?!"
		dd offset a_?+18h	; "*.?!"
		dd offset a_?+1Ah	; ".?!"
		dd offset a_?+1Ch	; "?!"
		dd offset a_?+1Eh	; "!"
		dd offset aAZaZ		; "[a-zA-Z]"
		dd offset a09		; "[0-9]"
		dd offset aCdata_3	; "[CDATA["
		dd offset aDoctype_1	; "DOCTYPE"
		dd offset aElement	; "ELEMENT"
		dd offset aAttlist_0	; "ATTLIST"
		dd offset aEntity_0	; "ENTITY"
		dd offset aNotation_1	; "NOTATION"
		dd offset aSystem_2	; "SYSTEM"
		dd offset aPublic_2	; "PUBLIC"
		dd offset aNdata_1	; "NDATA"
		dd offset aRequired_0	; "REQUIRED"
		dd offset aImplied_0	; "IMPLIED"
		dd offset aFixed_0	; "FIXED"
		dd offset aEmpty_0	; "EMPTY"
		dd offset aAny_0	; "ANY"
		dd offset aPcdata_0	; "PCDATA"
		dd 4 dup(0)
		dd offset aCdata_4	; "CDATA"
		dd offset aId		; "ID"
		dd offset aIdref	; "IDREF"
		dd offset aIdrefs	; "IDREFS"
		dd offset aEntities	; "ENTITIES"
		dd offset aNmtoken	; "NMTOKEN"
		dd offset aNmtokens	; "NMTOKENS"
		dd offset a?xml_0	; "<?xml"
		dd offset aVersion_1	; "version"
		dd 8 dup(0)
word_6EDA2A60	dw 39h			; DATA XREF: sub_6ED83560+2B2r
		dw 39h
aCd@hhhkbbbbonp:
		unicode	0, <;;;;;;;;CD@HHHKBBBBONPPPPPPPQQQQQQQWSXXXX[\]]]]^^```aabbc>
		unicode	0, <cddYY_ZeegggggggggghiiiiklmmTTnnppUUUAALr?stVVVuuuuuuuuuu>
		unicode	0, <uuuuuuuuuuuuuvvwwwwwwwwzFFFF{|{|{|{|~~~~~~~~~~~~~~~~~~~~~>
		unicode	0, <~}Iqqqq>
		dd 4 dup(80007Fh), 0Ch dup(810081h), 6A0081h, 6A006Ah
		dd 83006Ah, 2 dup(830084h), 840083h, 850084h, 850085h
		dd 870085h, 470047h, 880047h, 890088h, 3C003Eh,	8A003Dh
		dd 520079h, 860082h, 8B0078h, 8B008Bh, 3A008Bh,	4 dup(3A003Ah)
		dd 4A003Ah, 450045h, 6F004Dh, 2	dup(660066h), 8C0066h
		dd 0
word_6EDA2C80	dw 2			; DATA XREF: sub_6ED83560+7F4r
		dw 1
		dd 20004h, 2 dup(20002h), 2, 10001h, 20009h, 4,	40004h
		dd 60006h, 10004h, 10003h, 10001h, 20002h, 2, 3	dup(10001h)
		dd 40001h, 10004h, 2 dup(10001h), 10002h, 10001h, 20000h
		dd 20002h, 60006h, 2 dup(50001h), 50003h, 10000h, 80006h
		dd 20004h, 50001h, 4 dup(10001h), 70006h, 20001h, 10002h
		dd 30004h, 10003h, 50002h, 40006h, 30006h, 50005h, 40003h
		dd 50004h, 30002h, 20002h, 50004h, 70005h, 0Ch dup(10001h)
		dd 20001h, 20002h, 10002h, 2 dup(10001h), 20002h, 30003h
		dd 2 dup(20002h), 0Eh dup(10001h), 20002h, 30003h, 2 dup(20002h)
		dd 0Eh dup(10001h), 20001h, 30002h, 20003h, 20002h, 10002h
		dd 3 dup(10001h), 50001h, 10000h, 10003h, 20003h, 30004h
		dd 10005h, 2 dup(30003h), 10004h, 20001h, 20002h, 20004h
		dd 3 dup(20002h), 2 dup(10000h), 3 dup(10001h),	20001h
		dd 0
word_6EDA2EA0	dw 0Ah			; DATA XREF: sub_6ED7D7F0+BAo
					; sub_6ED83560+109r ...
		dw 103h
		dd 20000h, 1, 75007Dh, 780077h,	81007Fh, 0B007Bh, 6C0072h
		dd 6D0000h, 6F0080h, 710073h, 7C0079h, 6B007Eh,	70006Eh
		dd 740076h, 7A0083h, 0C00F0h, 8800FEh, 0FD00FAh, 820000h
		dd 101008Ch, 0FC0010h, 89008Ah,	1000000h, 103008Bh, 10200E7h
		dd 0FFh, 1080000h, 0F70000h, 0F6h, 0F800F9h, 0F100F5h
		dd 1070063h, 0EC0000h, 0
		dd 610104h, 650062h, 840000h, 850086h, 87h, 1050000h, 0
		dd 0B0h, 0A500ADh, 0A800A7h, 9A008Eh, 0A200ABh,	9D009Ch
		dd 9F0099h, 0A100A3h, 0AC00A9h,	9B0098h, 0A0009Eh, 0A400A6h
		dd 0AA00AEh, 0AF0096h, 900000h,	920094h, 8D0097h, 95h
		dd 8F0093h, 91h, 0E000Fh, 106h,	150016h, 1E0105h, 140000h
		dd 0
		dd 250020h, 1Fh, 1050021h, 220000h, 180000h, 230000h, 1A0000h
		dd 190024h, 0F20000h, 280029h, 2B0105h,	1050031h, 2Ah
		dd 105002Ch, 1050031h, 1050000h, 310000h, 300000h, 2F002Eh
		dd 340033h, 1050105h, 390000h, 360105h,	105h, 3Ah, 1050037h
		dd 1050035h, 380000h, 41h, 3D0105h, 105h, 3E003Bh, 3Fh
		dd 105h, 3C0000h, 2D0040h, 420032h, 270000h, 0
		dd 105h, 5F005Eh, 2 dup(0)
		dd 105h, 0C900D2h, 0CD00CBh, 0BE00B2h, 0C700D0h, 0BF00C1h
		dd 0BD00C2h, 0C600C4h, 0D100CEh, 0C000BCh, 0C500C3h, 0C800CAh
		dd 0CF00CCh, 0D500D3h, 0BA00D4h, 0
		dd 0B400F3h, 0B600B8h, 0
		dd 0BB005Dh, 0B900B1h, 0B70000h, 0B500B3h, 5Ch,	60h, 2 dup(0)
		dd 560105h, 105h, 106h,	57h, 450059h, 49004Ah, 470046h
		dd 1050048h, 4C004Bh, 0
		dd 10D0000h, 10A010Ch, 109010Bh, 1050043h, 1050000h, 0
		dd 4D0044h, 2 dup(105h), 4E0000h, 4F0000h, 520000h, 55h
		dd 0D70000h, 0E000E1h, 0E30000h, 0E400E5h, 0E2h, 0D900F4h
		dd 0DB00DDh, 0D600DFh, 0DEh, 0D800DCh, 0DAh, 500051h, 530000h
		dd 540000h, 640058h, 260000h, 2	dup(0)
aZ:
		unicode	0, <[Z>,0
aG		db 'g',0
		dd 1B0017h, 1C001Dh, 0
		dd 1060105h, 1050000h, 6A0000h,	1050069h, 680000h, 66h
		dd 120000h, 110105h, 130000h, 0
		dd 0FBh, 105h, 0EFh, 0EE00E8h, 0ED0000h, 10500EAh, 1060105h
		dd 0EB00E9h, 1050000h, 0E60000h, 2 dup(105h), 0E7h, 0D0000h
		dd 9010Eh, 80005h, 4, 1030007h,	6, 3, 2	dup(0)
word_6EDA3200	dw 2			; DATA XREF: sub_6ED83560:loc_6ED83845r
		dw 4
		dd 310003h, 2B0184h, 340025h, 29002Fh, 3500F9h,	54007Fh
		dd 510189h, 7E0055h, 2E002Ah, 8200A9h, 920083h,	950091h
		dd 88008Ah, 93008Ch, 9F008Bh, 9D00A0h, 0A700A8h, 0A500D1h
		dd 0A600A4h, 0B400BBh, 0C800C4h, 12E012Fh, 1410127h, 13F0140h
		dd 1150117h, 8E0116h, 8D0038h, 2600DEh,	940022h, 300027h
		dd 0F80028h, 24002Dh, 700077h, 6F014Ah,	0FC0108h, 0FA00FBh
		dd 1460153h, 1490145h, 18F018Eh, 330032h, 3Bh, 6 dup(0)
word_6EDA32C0	dw 0FFEBh		; DATA XREF: sub_6ED7D7F0+8Dr
					; sub_6ED83560+E7r ...
		dw 0FFC7h
		dd 770021h, 4603C0h, 5 dup(0FFC7FFC7h),	0FFC70069h, 0Ah	dup(0FFC7FFC7h)
		dd 0FFC70028h, 0FFC7031Bh, 0FFC7002Fh, 0FFC7FFC7h, 0FFC7006Bh
		dd 0FFC7FFC7h, 0FFC70054h, 0FFDAFFC7h, 0FFC70050h, 0FFC7000Ch
		dd 61FFC7h, 3 dup(0FFC7FFC7h), 0FFC7000Dh, 220038h, 2 dup(0FFC7FFC7h)
		dd 0FFC70033h, 0FFC7FFC7h, 35FFC7h, 540039h, 0FF012Ch
		dd 54FFC7h, 0Dh	dup(0FFC7FFC7h), 0FFC70163h, 2 dup(0FFC7FFC7h)
		dd 146FFC7h, 0FFC7FFC7h, 30FFC7h, 0FFC7FFC7h, 32FFC7h
		dd 0FFC7FFC7h, 9B0054h,	0FFC70020h, 160026h, 0FFC7FFC7h
		dd 73FFC7h, 23FFC7h, 0FFC7009Ch, 0FFC700ADh, 0FFC700F5h
		dd 0FFC7002Ch, 0FFC7FFC7h, 0FFC70010h, 0FFC7FFC7h, 0FFC7001Dh
		dd 1D0074h, 85FFC7h, 1DFFC7h, 540081h, 1D000Fh,	79FFEAh
		dd 0FFC7004Ah, 0FFC7FFC7h, 52FFC7h, 1D001Dh, 0FFC70058h
		dd 7001Dh, 56001Dh, 53FFC7h, 1BFFC7h, 1A0013h, 0FFC7005Eh
		dd 6AFFC7h, 3001Dh, 0FFF8001Dh,	0FFC7FFC7h, 68FFC7h, 0FFFA001Dh
		dd 0FFC7FFF9h, 2 dup(0FFC7FFC7h), 0FFC70011h, 0BFFFEh
		dd 12001Dh, 0FFC7FFC7h,	410352h, 4301D1h, 870054h, 0Eh dup(0FFC7FFC7h)
		dd 180276h, 2 dup(0FFC7FFC7h), 4C0054h,	2 dup(0FFC7FFC7h)
		dd 0FFC702E4h, 0FFC7FFC7h, 27FFC7h, 17FFC7h, 0E0015h, 16004Eh
		dd 0FFC70054h, 0B80054h, 1F0014h, 29FFC7h, 3 dup(0FFC7FFC7h)
		dd 54FFC7h, 0FFC7FFC7h,	7E0024h, 0FFC700A2h, 2 dup(0FFC7FFC7h)
		dd 1DFFC7h, 1D004Fh, 0A0001Dh, 0FFC7FFC7h, 91001Dh, 4B001Dh
		dd 0FFC7001Dh, 0FFC7023Fh, 0FFC7019Ah, 6EFFC7h,	0FFC70040h
		dd 0FFC7FFC7h, 0FFC702ADh, 0FFC7FFC7h, 0FFEFFFC7h, 3 dup(0FFC7FFC7h)
		dd 208FFC7h, 0FFC7FFC7h, 1DFFC7h, 0FFC7FFC7h, 0FFC7003Dh
		dd 0FFC7001Dh, 0FFC7FFC7h, 0FFC7001Dh, 1D001Dh,	1DFFF1h
		dd 0FFC7FFC7h, 0FFC7001Dh, 2 dup(0FFC7FFC7h), 2B005Fh
		dd 2D001Dh, 1D0009h, 0FFC7000Ah, 1DFFC7h, 0FFC70002h, 0FFE8FFC7h
		dd 0FFC700BEh, 0FFC7001Dh, 0FFC70001h, 960389h,	0FFE6FFC7h
		dd 1Dh,	6DFFC7h, 0FFC7FFE6h, 0FFC70008h, 1DFFC7h, 0FFED001Dh
		dd 0FFC7FFC7h, 1DFFF5h,	0FFC7003Bh, 0FFFB001Dh,	67001Dh
		dd 0FFF0001Dh, 0FFC70006h, 2 dup(0FFC7FFC7h), 45FFC7h
		dd 0FFC7FFC7h, 389FFC7h
		db 0C7h, 0FFh
word_6EDA3616	dw 0FFACh		; DATA XREF: sub_6ED83560+2BAr
		dd 0FFACFFACh, 4B00CCh,	5 dup(0FFACFFACh), 7FFACh, 0Bh dup(0FFACFFACh)
		dd 65FFACh, 4 dup(0FFACFFACh), 360040h,	7 dup(0FFACFFACh)
		dd 44FFACh, 1EFFACh, 5 dup(0FFACFFACh),	20FFACh, 0FFF0FFACh
		dd 0FFACFFF9h, 0FFAC002Ah, 0Ch dup(0FFACFFACh),	2DFFACh
		dd 3 dup(0FFACFFACh), 0FFAC002Ch, 0FFACFFACh, 0FFAC0021h
		dd 2 dup(0FFACFFACh), 24FFACh, 0FFAC006Ch, 0FFACFFACh
		dd 0FFAC0045h, 0FFACFFACh, 0FFAC003Eh, 0FFAC003Fh, 0FFACFFACh
		dd 76FFACh, 4 dup(0FFACFFACh), 0FFFEFFACh, 0FFACFFACh
		dd 0FFACFFF6h, 0FFACFFACh, 0FFEB0019h, 0FFAC000Bh, 0FFAC0014h
		dd 0FFACFFE7h, 2 dup(0FFACFFACh), 1FFACh, 0FFDC0002h, 0FFF7FFACh
		dd 5FFACh, 0FFACFFF3h, 0FFACFFF8h, 0FFAC0006h, 0C0008h
		dd 0FFACFFACh, 17FFACh,	4FFACh,	0FFACFFFFh, 0FFACFFACh
		dd 0FFACh, 0FFF2FFACh, 3 dup(0FFACFFACh), 37FFACh, 3AFFACh
		dd 2 dup(0FFACFFACh), 2F0035h, 43007Bh,	0FFAC0042h, 0Dh	dup(0FFACFFACh)
		dd 0FFF1FFACh, 2 dup(0FFACFFACh), 29FFACh, 0FFAC0028h
		dd 0FFACFFACh, 0FFD2FFACh, 3 dup(0FFACFFACh), 0FFAC0023h
		dd 250022h, 460012h, 59FFACh, 2BFFACh, 5 dup(0FFACFFACh)
		dd 0FFAC0030h, 5 dup(0FFACFFACh), 0FFAC001Fh, 1B001Dh
		dd 0FFAC0011h, 26FFACh,	270018h, 31FFACh, 47FFACh, 5DFFACh
		dd 0FFACFFACh, 0FFF4FFACh, 0FFACFFACh, 5EFFACh,	6 dup(0FFACFFACh)
		dd 0FFAC004Eh, 0FFACFFACh, 0FFAC0032h, 2EFFACh,	38FFACh
		dd 0FFACFFACh, 3CFFACh,	3DFFACh, 33003Bh, 0FFAC0039h, 0EFFACh
		dd 2 dup(0FFACFFACh), 0FFF5FFACh, 48FFFAh, 0FFACFFFBh
		dd 0FFACFFFDh, 0FFACFFACh, 0FFAC0034h, 0FFACFFACh, 4DFFECh
		dd 15FFACh, 0FFACFFACh,	4CFFACh, 0FFAC0010h, 1A0013h, 0FFACFFACh
		dd 0AFFACh, 2 dup(0FFACFFACh), 0D0050h,	0FFAC0049h, 0FFACFFACh
		dd 0FFE50016h, 9FFACh, 1CFFACh,	52000Fh, 5 dup(0FFACFFACh)
		dd 0FFAC0003h, 0FFAC0062h, 5 dup(0)
word_6EDA3980	dw 41h			; DATA XREF: sub_6ED7D7F0+A5o
					; sub_6ED83560:loc_6ED83B10r ...
		dw 14Ch
		dd 1950041h, 1810188h, 410179h,	19A019Eh, 37019Fh, 176018Dh
		dd 0D90175h, 19800CEh, 410041h,	0D300CFh, 100D8h, 0C70037h
		dd 0C000B6h, 460046h, 46003Fh, 1A000BDh, 15E0099h, 460085h
		dd 370048h, 15F0041h, 10E00FEh,	11C0049h, 1360041h, 410037h
		dd 2 dup(520053h), 530081h, 360052h, 800046h, 520053h
		dd 400042h, 520053h, 2 dup(13C013Eh), 0D40036h,	2 dup(520053h)
		dd 370036h, 16E016Fh, 500045h, 53004Fh,	0A30052h, 13A0046h
		dd 1100131h, 1320037h, 1620131h, 0B100A3h, 0A30037h, 0A3017Bh
		dd 0B00041h, 520053h, 0A30037h,	39003Ah, 410000h, 520053h
		dd 18B0041h, 3E0041h, 0CA00CBh,	0C200C3h, 1A10041h, 3D0010h
		dd 18C003Ch, 110009Ch, 420000h,	410040h, 13E013Dh, 17A013Ch
		dd 0AB017Bh, 0A200ADh, 3600ACh,	0AD00ABh, 0AC00A3h, 1590000h
		dd 1570158h, 0AD00ABh, 0AC0000h, 9B0000h, 46009Ah, 410086h
		dd 370000h, 0DC0129h, 12A00DAh,	185h, 12Ch, 12D0087h, 21012Bh
		dd 400042h, 1290041h, 1290000h,	12Ah, 12C012Ah,	12C0000h
		dd 2 dup(12B012Dh), 0DB00DDh, 1100046h,	123017Dh, 0
		dd 800000h, 0Dh, 1110000h, 112010Fh, 113h, 4 dup(0)
		dd 126011Fh, 6 dup(0)
		dd 11D0000h, 1210120h, 11E0122h, 1250124h, 4 dup(0)
		dd 460000h, 86h, 2 dup(0)
		dd 16A0000h, 6C0000h, 670000h, 5E0087h,	740075h, 68005Fh
		dd 690061h, 5D0063h, 6B0062h, 6A0057h, 590058h,	6D0064h
		dd 65005Ch, 600056h, 5Bh, 3 dup(0)
		dd 0Dh,	5 dup(0)
		dd 6Ch,	67h, 66005Eh, 5F005Ah, 610068h,	630069h, 62005Dh
		dd 57006Bh, 58006Ah, 640059h, 5C006Dh, 560065h,	5B0060h
		dd 6Ch,	67h, 79005Eh, 5F0078h, 610068h,	630069h, 62005Dh
		dd 57006Bh, 58006Ah, 640059h, 5C006Dh, 560065h,	5B0060h
		dd 0
		dd 6C0000h, 670000h, 5E0000h, 710072h, 68005Fh,	690061h
		dd 5D0063h, 6B0062h, 6A0057h, 590058h, 6D0064h,	65005Ch
		dd 600056h, 5Bh, 0Eh dup(0)
		dd 6Ch,	1420067h, 151005Eh, 5F0150h, 610068h, 630069h
		dd 62005Dh, 57006Bh, 58006Ah, 640059h, 5C006Dh,	560065h
		dd 5B0060h, 8 dup(0)
		dd 0D0000h, 5 dup(0)
		dd 0F60000h, 0F100E9h, 0E800DFh, 1050106h, 0F200EAh, 0F300ECh
		dd 0E700EDh, 0F50000h, 0F400E1h, 0E300E2h, 0F700EEh, 0EF00E6h
		dd 0EB00E0h, 0E5h, 8 dup(0)
		dd 0Dh,	5 dup(0)
		dd 6Ch,	1420067h, 155005Eh, 5F0154h, 610068h, 630069h
		dd 62005Dh, 57006Bh, 58006Ah, 640059h, 5C006Dh,	560065h
		dd 5B0060h, 8 dup(0)
		dd 0D0000h, 5 dup(0)
		dd 6C0000h, 670000h, 5E0142h, 1430144h,	68005Fh, 690061h
		dd 5D0063h, 6B0062h, 6A0057h, 590058h, 6D0064h,	65005Ch
		dd 600056h, 5Bh, 8 dup(0)
		dd 0Dh,	5 dup(0)
		dd 0E900F6h, 0DF00F1h, 10000E8h, 0EA00FFh, 0EC00F2h, 0ED00F3h
		dd 0E7h, 0E100F5h, 0E200F4h, 0EE00E3h, 0E600F7h, 0E000EFh
		dd 0E500EBh, 8 dup(0)
		dd 0D0000h, 5 dup(0)
		dd 6C0000h, 670000h, 5E0142h, 14D014Eh,	68005Fh, 690061h
		dd 5D0063h, 6B0062h, 6A0057h, 590058h, 6D0064h,	65005Ch
		dd 600056h, 5Bh, 8 dup(0)
		dd 0Dh,	5 dup(0)
		dd 0E900F6h, 0DF00F1h, 10A00E8h, 0EA0109h, 0EC00F2h, 0ED00F3h
		dd 0E7h, 0E100F5h, 0E200F4h, 0EE00E3h, 0E600F7h, 0E000EFh
		dd 0E500EBh, 8 dup(0)
		dd 0D0000h, 5 dup(0)
		dd 1E0000h, 190000h, 0F004Ah, 0A0018h, 1A0011h,	1B0013h
		dd 0E0015h, 1D0014h, 1C0007h, 90008h, 1F0016h, 17000Ch
		dd 120006h, 0Bh, 8 dup(0)
		dd 0Dh,	5 dup(0)
		dd 0E900F6h, 0DF00F1h, 0F000E8h, 0EA00E4h, 0EC00F2h, 0ED00F3h
		dd 0E7h, 0E100F5h, 0E200F4h, 0EE00E3h, 0E600F7h, 0E000EFh
		dd 0E500EBh, 8 dup(0)
		dd 0D0000h, 5 dup(0)
		dd 1E0000h, 190183h, 0F0005h, 0A0018h, 1A0011h,	1B0013h
		dd 0E0015h, 1D0014h, 1C0007h, 90008h, 1F0016h, 17000Ch
		dd 120006h, 0Bh, 8 dup(0)
		dw 0Dh
		unicode	0, < >,0
		align 4
		dd 2 dup(0)
		dd 210000h, 0
		dd 10001Eh, 50019h, 18000Fh, 11000Ah, 13001Ah, 15001Bh
		dd 14000Eh, 7001Dh, 8001Ch, 160009h, 0C001Fh, 60017h, 0B0012h
		dd 8 dup(0)
		dd 0D0000h, 20h, 3 dup(0)
		dd 21h,	17C0000h, 0D200B3h, 1A900B5h, 0CD0170h,	1730177h
		dd 0A10174h, 0CC00D0h, 0B900B2h, 0C900AEh, 0BC00B7h, 0BE00C6h
		dd 1970199h, 0B800AFh, 10B0194h, 19C0043h, 19000BAh, 0C10169h
		dd 1960180h, 4300C5h, 18700AAh,	19B0186h, 14B0133h, 1350130h
		dd 7C007Dh, 840047h, 13700BFh, 6E0139h,	1600104h, 114h
		dd 1030101h, 128007Bh, 1340076h, 178015Ch, 13B0182h, 138015Ah
		dd 0D70102h, 168018Ah, 166015Dh, 16700D5h, 1640161h, 10Dh
		dd 1190148h, 1720000h, 2C002Ch,	1480118h, 171h,	1920163h
		dd 17F0190h, 19D015Bh, 17E0191h, 9E018Ah, 1AA011Bh, 1480148h
		dd 1180165h, 2C0000h, 0D6h, 7A004Ch, 890073h, 960000h
		dd 8F0000h, 0FD0107h, 440000h, 890098h,	960097h, 8F0090h
		dd 2 dup(0)
		dd 1470000h, 10C016Dh, 230090h,	11A0023h, 16B0147h, 16Ch
		dd 3 dup(0)
		dd 193h, 1560000h, 1470000h, 147h, 0
aN:
		unicode	0, <#N>,0
aK		db 'K',0
aM		db 'M',0
		align 10h
		dd 0
		dd 14F0152h, 12h dup(0)
		dd 1A7h, 1A201A4h, 1A601A8h, 1A3h, 4 dup(0)
		dd 1A5h, 23h dup(0)
word_6EDA43C0	dw 1Ah			; DATA XREF: sub_6ED7D7F0+107r
					; sub_6ED83560+F3r ...
		dw 12h
		dd 0E001Ah, 40004h, 1A0004h, 0E0018h, 1A0004h, 2 dup(40004h)
		dd 370016h, 1A001Ah, 4002Ah, 2C0004h, 16001Ah, 0C0013h
		dd 20002h, 20012h, 0Dh,	40012h,	20004h,	1A0004h, 14001Ah
		dd 40012h, 40004h, 0B001Ah, 1A001Ah, 2 dup(80007h), 70004h
		dd 60008h, 90002h, 80007h, 190018h, 3 dup(80007h), 240006h
		dd 2 dup(80007h), 1A0006h, 230022h, 220018h, 70023h, 0B0008h
		dd 0C0002h, 14000Dh, 0C001Ah, 0F000Dh, 0D000Bh,	0B001Ah
		dd 0B001Dh, 13001Ah, 80007h, 0B001Ah, 1B001Ah, 1AFFFFh
		dd 80007h, 4001Ah, 12001Ah, 2 dup(0D000Ch), 2001Ah, 1A0003h
		dd 10001Bh, 14000Bh, 18FFFFh, 1A0019h, 70006h, 1C0008h
		dd 15001Dh, 60016h, 60018h, 160015h, 18000Bh, 25FFFFh
		dd 270026h, 160015h, 18FFFFh, 28FFFFh, 20029h, 1A0003h
		dd 1AFFFFh, 70011h, 140008h, 0FFFF0010h, 0FFFF0017h, 1A000Fh
		dd 36001Bh, 190018h, 11001Ah, 11FFFFh, 0FFFF0014h, 170014h
		dd 17FFFFh, 2 dup(1B001Ah), 230022h, 140002h, 0B0004h
		dd 0FFFFFFFFh, 9FFFFh, 0FFFF002Dh, 1EFFFFh, 20001Fh, 0FFFF0021h
		dd 4 dup(0FFFFFFFFh), 210020h, 6 dup(0FFFFFFFFh), 2FFFFFh
		dd 310030h, 330032h, 350034h, 4	dup(0FFFFFFFFh), 2FFFFh
		dd 0FFFF0003h, 2 dup(0FFFFFFFFh), 0AFFFFh, 2FFFFh, 4FFFFh
		dd 6000Fh, 80007h, 0A0009h, 0C000Bh, 0E000Dh, 10000Fh
		dd 120011h, 140013h, 160015h, 180017h, 1A0019h,	0FFFF001Bh
		dd 3 dup(0FFFFFFFFh), 0FFFF002Dh, 5 dup(0FFFFFFFFh), 0FFFF0002h
		dd 0FFFF0004h, 70006h, 90008h, 0B000Ah,	0D000Ch, 0F000Eh
		dd 110010h, 130012h, 150014h, 170016h, 190018h,	1B001Ah
		dd 0FFFF0002h, 0FFFF0004h, 70006h, 90008h, 0B000Ah, 0D000Ch
		dd 0F000Eh, 110010h, 130012h, 150014h, 170016h,	190018h
		dd 1B001Ah, 0FFFFFFFFh,	2FFFFh,	4FFFFh,	6FFFFh,	80007h
		dd 0A0009h, 0C000Bh, 0E000Dh, 10000Fh, 120011h,	140013h
		dd 160015h, 180017h, 1A0019h, 0FFFF001Bh, 0Eh dup(0FFFFFFFFh)
		dd 0FFFF0002h, 50004h, 70006h, 90008h, 0B000Ah,	0D000Ch
		dd 0F000Eh, 110010h, 130012h, 150014h, 170016h,	190018h
		dd 1B001Ah, 8 dup(0FFFFFFFFh), 2DFFFFh,	5 dup(0FFFFFFFFh)
		dd 2FFFFh, 40003h, 60005h, 80007h, 0A0009h, 0C000Bh, 0E000Dh
		dd 10FFFFh, 120011h, 140013h, 160015h, 180017h,	1A0019h
		dd 0FFFF001Bh, 8 dup(0FFFFFFFFh), 0FFFF002Dh, 5	dup(0FFFFFFFFh)
		dd 0FFFF0002h, 50004h, 70006h, 90008h, 0B000Ah,	0D000Ch
		dd 0F000Eh, 110010h, 130012h, 150014h, 170016h,	190018h
		dd 1B001Ah, 8 dup(0FFFFFFFFh), 2DFFFFh,	5 dup(0FFFFFFFFh)
		dd 2FFFFh, 4FFFFh, 60005h, 80007h, 0A0009h, 0C000Bh, 0E000Dh
		dd 10000Fh, 120011h, 140013h, 160015h, 180017h,	1A0019h
		dd 0FFFF001Bh, 8 dup(0FFFFFFFFh), 0FFFF002Dh, 5	dup(0FFFFFFFFh)
		dd 30002h, 50004h, 70006h, 90008h, 0B000Ah, 0D000Ch, 0FFFF000Eh
		dd 110010h, 130012h, 150014h, 170016h, 190018h,	1B001Ah
		dd 8 dup(0FFFFFFFFh), 2DFFFFh, 5 dup(0FFFFFFFFh), 2FFFFh
		dd 4FFFFh, 60005h, 80007h, 0A0009h, 0C000Bh, 0E000Dh, 10000Fh
		dd 120011h, 140013h, 160015h, 180017h, 1A0019h,	0FFFF001Bh
		dd 8 dup(0FFFFFFFFh), 0FFFF002Dh, 5 dup(0FFFFFFFFh), 30002h
		dd 50004h, 70006h, 90008h, 0B000Ah, 0D000Ch, 0FFFF000Eh
		dd 110010h, 130012h, 150014h, 170016h, 190018h,	1B001Ah
		dd 8 dup(0FFFFFFFFh), 2DFFFFh, 5 dup(0FFFFFFFFh), 2FFFFh
		dd 4FFFFh, 60005h, 80007h, 0A0009h, 0C000Bh, 0E000Dh, 10000Fh
		dd 120011h, 140013h, 160015h, 180017h, 1A0019h,	0FFFF001Bh
		dd 8 dup(0FFFFFFFFh), 0FFFF002Dh, 5 dup(0FFFFFFFFh), 30002h
		dd 50004h, 70006h, 90008h, 0B000Ah, 0D000Ch, 0FFFF000Eh
		dd 110010h, 130012h, 150014h, 170016h, 190018h,	1B001Ah
		dd 8 dup(0FFFFFFFFh), 2DFFFFh, 5 dup(0FFFFFFFFh), 2FFFFh
		dd 40003h, 60005h, 80007h, 0A0009h, 0C000Bh, 0E000Dh, 10000Fh
		dd 120011h, 140013h, 160015h, 180017h, 1A0019h,	0FFFF001Bh
		dd 8 dup(0FFFFFFFFh), 2E002Dh, 3 dup(0FFFFFFFFh), 36FFFFh
		dd 0FFFFFFFFh, 30002h, 50004h, 70006h, 90008h, 0B000Ah
		dd 0D000Ch, 0F000Eh, 110010h, 130012h, 150014h,	170016h
		dd 190018h, 1B001Ah, 8 dup(0FFFFFFFFh),	2DFFFFh, 0FFFF002Eh
		dd 3 dup(0FFFFFFFFh), 0FFFF0036h, 14FFFFh, 0C0025h, 1000Ch
		dd 140010h, 0D000Dh, 0C000Ch, 0C0024h, 0C000Ch,	0C0024h
		dd 0C000Ch, 0C0014h, 31000Ch, 25000Ch, 48000Ch,	0D0014h
		dd 140025h, 0C0011h, 0C000Ch, 14000Ch, 0C000Ch,	0C0014h
		dd 36000Ch, 11000Ch, 0D000Dh, 0C0011h, 0C0025h,	44000Ch
		dd 14000Dh, 0FFFF0014h,	110048h, 0C0011h, 2D0044h, 0C0014h
		dd 110001h, 2C0011h, 0C0010h, 360011h, 110011h,	11000Ch
		dd 110011h, 0FFFF000Ch,	0C000Ah, 0CFFFFh, 0A000Ah, 0A0011h
		dd 0FFFF0011h, 0C0036h,	110014h, 0E0031h, 150011h, 260011h
		dd 4000Ch, 0A000Ah, 110036h, 0AFFFFh, 0FFFF0036h, 44000Ah
		dd 60044h, 8FFFFh, 0AFFFFh, 360048h, 36FFFFh, 60036h, 80011h
		dd 0A0013h, 2 dup(0FFFFFFFFh), 3FFFFFh,	0D0011h, 3F0013h
		dd 33003Fh, 18003Fh, 0FFFF0019h, 3 dup(0FFFFFFFFh), 0FFFF004Eh
		dd 4CFFFFh, 3FFFFFh, 0FFFF003Fh, 0FFFFFFFFh, 3D003Fh, 3FFFFFh
		dd 0FFFF0040h, 0FFFFFFFFh, 4C004Ch, 12h	dup(0FFFFFFFFh)
		dd 0FFFF0003h, 60005h, 80007h, 0FFFF0009h, 4 dup(0FFFFFFFFh)
		dd 0FFFF0013h, 1Fh dup(0FFFFFFFFh)
		db 2 dup(0FFh)
word_6EDA4DF2	dw 0			; DATA XREF: _ZNK16QXmlStreamReader11tokenStringEv+19r
		dd 100008h, 2A001Eh, 420037h, 55004Dh, 690059h,	6 dup(0)
aNotoken	db 'NoToken',0          ; DATA XREF: _ZNK16QXmlStreamReader11tokenStringEv+21o
aInvalid	db 'Invalid',0
aStartdocument	db 'StartDocument',0
aEnddocument	db 'EndDocument',0
aStartelement	db 'StartElement',0
aEndelement	db 'EndElement',0
aCharacters	db 'Characters',0
aComment_0	db 'Comment',0
aDtd		db 'DTD',0
aEntityreferenc	db 'EntityReference',0
aProcessinginst	db 'ProcessingInstruction',0
		align 10h
byte_6EDA4EA0	db 2			; DATA XREF: sub_6ED83560:loc_6ED8541Cr
		db 3 dup(2)
		dd 0Ah dup(2020202h), 2010102h,	2 dup(1010101h), 2000101h
		dd 2020202h, 2,	5 dup(0)
		dd 2000000h, 20202h, 2,	5 dup(0)
		dd 2000000h, 2020202h
off_6EDA4F20	dd offset loc_6ED90047	; DATA XREF: sub_6ED90000:loc_6ED90040r
		dd offset loc_6ED900E2	; jump table for switch	statement
		dd offset loc_6ED90120
		dd offset loc_6ED90047
		dd offset loc_6ED90090
		dd offset loc_6ED90037
		dd offset loc_6ED90037
		dd offset loc_6ED90037
		dd offset loc_6ED90037
		dd offset loc_6ED90097
		dd offset loc_6ED90111
		dd offset loc_6ED90047
		dd offset loc_6ED90090
aPureVirtualMet	db 'pure virtual method called',0Ah,0 ; DATA XREF: sub_6ED996D0+Bo
aStdException	db 'std::exception',0   ; DATA XREF: sub_6ED985F0o
aStdBad_excepti	db 'std::bad_exception',0 ; DATA XREF: sub_6ED985D0o
		align 4
a__gnu_cxx__con	db '__gnu_cxx::__concurrence_lock_error',0 ; DATA XREF: sub_6ED985B0o
; a__gnu_cxx(char)
a__gnu_cxx__c_0	db '__gnu_cxx::__concurrence_unlock_error',0 ; DATA XREF: sub_6ED985C0o
		align 10h
aStdBad_alloc	db 'std::bad_alloc',0   ; DATA XREF: sub_6ED985E0o
		align 10h
aTerminateCalle	db 'terminate called recursively',0Ah,0 ; DATA XREF: sub_6ED96E80+4Do
		align 10h
aTerminateCal_0	db 'terminate called after throwing an instance of ',27h,0
					; DATA XREF: sub_6ED96E80+CAo
asc_6EDA5041	db 27h,0Ah,0		; DATA XREF: sub_6ED96E80+118o
aWhat		db '  what():  ',0      ; DATA XREF: sub_6ED9702D+82o
aTerminateCal_1	db 'terminate called without an active exception',0Ah,0
					; DATA XREF: sub_6ED96E80+17Ao
		align 10h
off_6EDA5080	dd offset loc_6ED8A547,	offset loc_6ED8A590, offset loc_6ED8A590
					; DATA XREF: sub_6ED8A530:loc_6ED8A560r
		dd offset loc_6ED8A590,	offset loc_6ED8A590, offset loc_6ED8A547 ; jump	table for switch statement
		dd offset loc_6ED8A547,	offset loc_6ED8A547, offset loc_6ED8A547
		dd offset loc_6ED8A594,	offset loc_6ED8A594, offset loc_6ED8A590
		dd offset loc_6ED8A594,	offset loc_6ED8A594, offset loc_6ED8A594
		dd offset loc_6ED8A594,	offset loc_6ED8A594, offset loc_6ED8A594
		dd offset loc_6ED8A594,	offset loc_6ED8A594, offset loc_6ED8A594
		dd offset loc_6ED8A594,	offset loc_6ED8A547, offset loc_6ED8A56B
		dd offset loc_6ED8A56B,	offset loc_6ED8A56B, offset loc_6ED8A56B
		dd offset loc_6ED8A56B,	offset loc_6ED8A56B, offset loc_6ED8A590
		dd offset loc_6ED8A594,	offset loc_6ED8A594, offset loc_6ED8A594
		dd offset loc_6ED8A594,	offset loc_6ED8A594, offset loc_6ED8A547
		dd offset loc_6ED8A594,	offset loc_6ED8A56B, offset loc_6ED8A567
		dd offset loc_6ED8A590,	offset loc_6ED8A547, offset loc_6ED8A56B
		dd offset loc_6ED8A56B,	offset loc_6ED8A547, offset loc_6ED8A547
		dd offset loc_6ED8A594,	offset loc_6ED8A590, offset loc_6ED8A590
		dd offset loc_6ED8A590,	offset loc_6ED8A590, offset loc_6ED8A590
		dd offset loc_6ED8A590,	offset loc_6ED8A590, offset loc_6ED8A590
		dd offset loc_6ED8A594,	offset loc_6ED8A590, offset loc_6ED8A547
		dd offset loc_6ED8A594,	offset loc_6ED8A594, offset loc_6ED8A594
		dd offset loc_6ED8A594
off_6EDA5174	dd offset loc_6ED8AA27,	offset loc_6ED8AA12, offset loc_6ED8AA12
					; DATA XREF: sub_6ED8AA00+32r
		dd offset loc_6ED8AA12,	offset loc_6ED8AA12, offset loc_6ED8AA40 ; jump	table for switch statement
		dd offset loc_6ED8AA27,	offset loc_6ED8AA20, offset loc_6ED8AA20
		dd offset loc_6ED8AA12,	offset loc_6ED8AA12, offset loc_6ED8AA12
		dd offset loc_6ED8AA12,	offset loc_6ED8AA12, offset loc_6ED8AA12
		dd offset loc_6ED8AA12,	offset loc_6ED8AA12, offset loc_6ED8AA12
		dd offset loc_6ED8AA12,	offset loc_6ED8AA12, offset loc_6ED8AA12
		dd offset loc_6ED8AA12,	offset loc_6ED8AA27, offset loc_6ED8AA12
		dd offset loc_6ED8AA12,	offset loc_6ED8AA12, offset loc_6ED8AA12
		dd offset loc_6ED8AA12,	offset loc_6ED8AA12, offset loc_6ED8AA12
		dd offset loc_6ED8AA12,	offset loc_6ED8AA12, offset loc_6ED8AA12
		dd offset loc_6ED8AA12,	offset loc_6ED8AA12, offset loc_6ED8AA27
		dd offset loc_6ED8AA12,	offset loc_6ED8AA12, offset loc_6ED8AA12
		dd offset loc_6ED8AA12,	offset loc_6ED8AA12, offset loc_6ED8AA12
		dd offset loc_6ED8AA12,	offset loc_6ED8AA27, offset loc_6ED8AA20
		dd offset loc_6ED8AA12,	offset loc_6ED8AA12, offset loc_6ED8AA12
		dd offset loc_6ED8AA12,	offset loc_6ED8AA12, offset loc_6ED8AA12
		dd offset loc_6ED8AA12,	offset loc_6ED8AA12, offset loc_6ED8AA12
		dd offset loc_6ED8AA12,	offset loc_6ED8AA12, offset loc_6ED8AA27
		dd offset loc_6ED8AA12,	offset loc_6ED8AA12, offset loc_6ED8AA12
		dd offset loc_6ED8AA27
a_global_	db '_GLOBAL_',0         ; DATA XREF: sub_6ED8AAB0+42o
					; sub_6ED8DE10:loc_6ED8DE33o
aAnonymousNames	db '(anonymous namespace)',0 ; DATA XREF: sub_6ED8AAB0+B4o
aSt		db 'st',0               ; DATA XREF: sub_6ED8AB80+174o
					; .rdata:6EDA63C0o
aCl		db 'cl',0               ; DATA XREF: sub_6ED8AB80+2B5o
					; sub_6ED8CF10+55Ao ...
		align 10h
off_6EDA5290	dd offset loc_6ED8AF58,	offset loc_6ED8AF58, offset loc_6ED8AF58
					; DATA XREF: sub_6ED8AEC0+4Br
		dd offset loc_6ED8AF58,	offset loc_6ED8AF58, offset loc_6ED8AF58 ; jump	table for switch statement
		dd offset loc_6ED8AF58,	offset loc_6ED8AF58, offset loc_6ED8AF58
		dd offset loc_6ED8AF58,	offset loc_6ED8AEF2, offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2,	offset loc_6ED8AEF2, offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2,	offset loc_6ED8AEF2, offset loc_6ED8B1F5
		dd offset loc_6ED8AEF2,	offset loc_6ED8AF70, offset loc_6ED8AF98
		dd offset loc_6ED8AEF2,	offset loc_6ED8B260, offset loc_6ED8AFC5
		dd offset loc_6ED8AEF2,	offset loc_6ED8AEF2, offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2,	offset loc_6ED8AEF2, offset loc_6ED8B1C3
		dd offset loc_6ED8AF58,	offset loc_6ED8AFF0, offset loc_6ED8B020
		dd offset loc_6ED8AEF2,	offset loc_6ED8B050, offset loc_6ED8B080
		dd offset loc_6ED8B0D7,	offset loc_6ED8B130, offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2,	offset loc_6ED8AEF2, offset loc_6ED8AEF2
		dd offset loc_6ED8AF58,	offset loc_6ED8AEF2, offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2,	offset loc_6ED8AEF2, offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2,	offset loc_6ED8B160, offset loc_6ED8B160
		dd offset loc_6ED8B160,	offset loc_6ED8B160, offset loc_6ED8B160
		dd offset loc_6ED8B160,	offset loc_6ED8B160, offset loc_6ED8B160
		dd offset loc_6ED8B160,	offset loc_6ED8B160, offset loc_6ED8AEF2
		dd offset loc_6ED8B160,	offset loc_6ED8B160, offset loc_6ED8B160
		dd offset loc_6ED8B160,	offset loc_6ED8AEF2, offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2,	offset loc_6ED8B160, offset loc_6ED8B160
		dd offset loc_6ED8B198,	offset loc_6ED8B160, offset loc_6ED8B160
		dd offset loc_6ED8B160,	offset loc_6ED8B160, offset loc_6ED8B160
off_6EDA53BC	dd offset loc_6ED8B426	; DATA XREF: sub_6ED8AEC0+FEr
		dd offset loc_6ED8AEF2	; jump table for switch	statement
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8B3DC
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8B3A2
		dd offset loc_6ED8B368
		dd offset loc_6ED8B4E7
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8B4AD
		dd offset loc_6ED8B331
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8B310
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8AEF2
		dd offset loc_6ED8B2D0
		dd offset loc_6ED8B3DC
aStringLiteral	db 'string literal',0   ; DATA XREF: sub_6ED8BC50+208o
aStd		db 'std',0              ; DATA XREF: sub_6ED8BC50+E6o
					; .rdata:6EDA5EC4o ...
		align 4
off_6EDA548C	dd offset loc_6ED8C2CE,	offset loc_6ED8C04F, offset loc_6ED8C04F
					; DATA XREF: sub_6ED8BF60+199r
		dd offset loc_6ED8C2AB,	offset loc_6ED8C04F, offset loc_6ED8C04F ; jump	table for switch statement
		dd offset loc_6ED8C288,	offset loc_6ED8C265, offset loc_6ED8C04F
		dd offset loc_6ED8C04F,	offset loc_6ED8C04F, offset loc_6ED8C04F
		dd offset loc_6ED8C04F,	offset loc_6ED8C04F, offset loc_6ED8C04F
		dd offset loc_6ED8C04F,	offset loc_6ED8C242, offset loc_6ED8C219
		dd offset loc_6ED8C04F,	offset loc_6ED8C1F0, offset loc_6ED8C04F
		dd offset loc_6ED8C04F,	offset loc_6ED8C04F, offset loc_6ED8C04F
		dd offset loc_6ED8C04F,	offset loc_6ED8C04F, offset loc_6ED8C04F
		dd offset loc_6ED8C04F,	offset loc_6ED8C04F, offset loc_6ED8C04F
		dd offset loc_6ED8C04F,	offset loc_6ED8C04F, offset loc_6ED8C1A4
		dd offset loc_6ED8C04F,	offset loc_6ED8C04F, offset loc_6ED8C04F
		dd offset loc_6ED8C04F,	offset loc_6ED8C16B, offset loc_6ED8C04F
		dd offset loc_6ED8C04F,	offset loc_6ED8C04F, offset loc_6ED8C04F
		dd offset loc_6ED8C04F,	offset loc_6ED8C04F, offset loc_6ED8C04F
		dd offset loc_6ED8C04F,	offset loc_6ED8C04F, offset loc_6ED8C04F
		dd offset loc_6ED8C04F,	offset loc_6ED8C04F, offset loc_6ED8C04F
		dd offset loc_6ED8C130
off_6EDA555C	dd offset loc_6ED8C10C	; DATA XREF: sub_6ED8BF60+1B8r
		dd offset loc_6ED8C120	; jump table for switch	statement
		dd offset loc_6ED8C120
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8BFCD
		dd offset loc_6ED8BFCD
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8C10C
		dd offset loc_6ED8BFCD
byte_6EDA5614	db 2 dup(3Ah), 0	; DATA XREF: sub_6ED8CAB0+DBo
					; sub_6ED8CF10+1DFo
aJarray		db 'JArray',0           ; DATA XREF: sub_6ED8CF10+DECo
asc_6EDA561E	db '[]',0               ; DATA XREF: sub_6ED8CF10+E08o
					; .rdata:6EDA61F4o
aVtableFor	db 'vtable for ',0      ; DATA XREF: sub_6ED8CF10:loc_6ED8CF7Fo
aVttFor		db 'VTT for ',0         ; DATA XREF: sub_6ED8CF10:loc_6ED8CFE2o
aConstructionVt	db 'construction vtable for ',0 ; DATA XREF: sub_6ED8CF10:loc_6ED8CF97o
aIn		db '-in-',0             ; DATA XREF: sub_6ED8CF10+9Do
aTypeinfoFor	db 'typeinfo for ',0    ; DATA XREF: sub_6ED8CF10:loc_6ED8CFE9o
aTypeinfoNameFo	db 'typeinfo name for ',0 ; DATA XREF: sub_6ED8CF10:loc_6ED8CFF0o
aTypeinfoFnFor	db 'typeinfo fn for ',0 ; DATA XREF: sub_6ED8CF10:loc_6ED8CFF7o
aNonVirtualThun	db 'non-virtual thunk to ',0 ; DATA XREF: sub_6ED8CF10:loc_6ED8CFFEo
aVirtualThunkTo	db 'virtual thunk to ',0 ; DATA XREF: sub_6ED8CF10:loc_6ED8D96Do
aCovariantRetur	db 'covariant return thunk to ',0 ; DATA XREF: sub_6ED8CF10:loc_6ED8D977o
aJavaClassFor	db 'java Class for ',0  ; DATA XREF: sub_6ED8CF10:loc_6ED8D2C4o
aGuardVariableF	db 'guard variable for ',0 ; DATA XREF: sub_6ED8CF10:loc_6ED8D2CEo
aReferenceTempo	db 'reference temporary for ',0 ; DATA XREF: sub_6ED8CF10:loc_6ED8D718o
aHiddenAliasFor	db 'hidden alias for ',0 ; DATA XREF: sub_6ED8CF10:loc_6ED8D722o
asc_6EDA5718	db '::*',0              ; DATA XREF: sub_6ED8CF10+73Bo
					; sub_6ED8E250+DFo
a_sat		db '_Sat ',0            ; DATA XREF: sub_6ED8CF10:loc_6ED8DA89o
a_accum		db '_Accum',0           ; DATA XREF: sub_6ED8CF10+3FDo
a_fract		db '_Fract',0           ; DATA XREF: sub_6ED8CF10:loc_6ED8DA78o
asc_6EDA5730	db ', ',0               ; DATA XREF: sub_6ED8CF10+170o
					; sub_6ED8CF10:loc_6ED8D348o
aOperator_0	db 'operator',0         ; DATA XREF: sub_6ED8CF10:loc_6ED8D6D0o
aOperator	db 'operator ',0        ; DATA XREF: sub_6ED8CF10+4D8o
					; sub_6ED8CF10:loc_6ED8D70Eo
aIx		db 'ix',0               ; DATA XREF: sub_6ED8CF10+531o
					; .rdata:6EDA61F0o
asc_6EDA5749	db ' : ',0              ; DATA XREF: sub_6ED8CF10+9A8o
aUl		db 'ul',0               ; DATA XREF: sub_6ED8CF10:loc_6ED8DC01o
aLl		db 'll',0               ; DATA XREF: sub_6ED8CF10:loc_6ED8DBF0o
aUll		db 'ull',0              ; DATA XREF: sub_6ED8CF10:loc_6ED8DC36o
aFalse		db 'false',0            ; DATA XREF: sub_6ED8CF10:loc_6ED8DDFEo
aTrue		db 'true',0             ; DATA XREF: sub_6ED8CF10+C9Bo
aJavaResource	db 'java resource ',0   ; DATA XREF: sub_6ED8CF10:loc_6ED8D99Eo
aDecltype	db 'decltype (',0       ; DATA XREF: sub_6ED8CF10+A9Ao
a___		db '...',0              ; DATA XREF: sub_6ED8CF10+E89o
					; .rdata:6EDA5CB4o ...
aParm		db 'parm#',0            ; DATA XREF: sub_6ED8CF10:loc_6ED8D69Bo
; char aLd[]
aLd		db '%ld',0              ; DATA XREF: sub_6ED8CF10+79Eo
aGlobalConstruc	db 'global constructors keyed to ',0 ; DATA XREF: sub_6ED8CF10:loc_6ED8D963o
aGlobalDestruct	db 'global destructors keyed to ',0 ; DATA XREF: sub_6ED8CF10:loc_6ED8D72Co
		align 4
off_6EDA57C8	dd offset loc_6ED8D08E,	offset loc_6ED8D0DC, offset loc_6ED8D0DC
					; DATA XREF: sub_6ED8CF10:loc_6ED8CF78r
		dd offset loc_6ED8D100,	offset loc_6ED8D7B9, offset loc_6ED8D837 ; jump	table for switch statement
		dd offset loc_6ED8D69B,	offset loc_6ED8CFB9, offset loc_6ED8CFD4
		dd offset loc_6ED8CF7F,	offset loc_6ED8CFE2, offset loc_6ED8CF97
		dd offset loc_6ED8CFE9,	offset loc_6ED8CFF0, offset loc_6ED8CFF7
		dd offset loc_6ED8CFFE,	offset loc_6ED8D96D, offset loc_6ED8D977
		dd offset loc_6ED8D2C4,	offset loc_6ED8D2CE, offset loc_6ED8D718
		dd offset loc_6ED8D722,	offset loc_6ED8CFC5, offset loc_6ED8D65C
		dd offset loc_6ED8D65C,	offset loc_6ED8D65C, offset loc_6ED8D392
		dd offset loc_6ED8D392,	offset loc_6ED8D392, offset loc_6ED8D392
		dd offset loc_6ED8D392,	offset loc_6ED8D392, offset loc_6ED8D392
		dd offset loc_6ED8D392,	offset loc_6ED8D392, offset loc_6ED8D981
		dd offset loc_6ED8CF8B,	offset loc_6ED8D8D7, offset loc_6ED8D4CF
		dd offset loc_6ED8D5F5,	offset loc_6ED8D2D8, offset loc_6ED8D31E
		dd offset loc_6ED8D31E,	offset loc_6ED8D6D0, offset loc_6ED8D70E
		dd offset loc_6ED8D3E6,	offset loc_6ED8D400, offset loc_6ED8D424
		dd offset loc_6ED8CF4B,	offset loc_6ED8D877, offset loc_6ED8CF4B
		dd offset loc_6ED8CF4B,	offset loc_6ED8D736, offset loc_6ED8D736
		dd offset loc_6ED8D99E,	offset loc_6ED8D9C3, offset loc_6ED8D4BF
		dd offset loc_6ED8D9A8,	offset loc_6ED8D963, offset loc_6ED8D72C
		dd offset loc_6ED8D008
off_6EDA58BC	dd offset loc_6ED8DC25	; DATA XREF: sub_6ED8CF10+CD9r
		dd offset loc_6ED8DC12	; jump table for switch	statement
		dd offset loc_6ED8DC01
		dd offset loc_6ED8DBF0
		dd offset loc_6ED8DC36
aRestrict	db ' restrict',0        ; DATA XREF: sub_6ED8E250:loc_6ED8E290o
aVolatile	db ' volatile',0        ; DATA XREF: sub_6ED8E250:loc_6ED8E2A7o
aConst		db ' const',0           ; DATA XREF: sub_6ED8E250:loc_6ED8E2B0o
asc_6EDA58EB	db '&&',0               ; DATA XREF: sub_6ED8E250:loc_6ED8E2F7o
					; .rdata:6EDA60E4o
aComplex	db 'complex ',0         ; DATA XREF: sub_6ED8E250:loc_6ED8E300o
aImaginary	db 'imaginary ',0       ; DATA XREF: sub_6ED8E250:loc_6ED8E307o
		align 4
off_6EDA5904	dd offset loc_6ED8E287	; DATA XREF: sub_6ED8E250:loc_6ED8E280r
		dd offset loc_6ED8E269	; jump table for switch	statement
		dd offset loc_6ED8E269
		dd offset loc_6ED8E269
		dd offset loc_6ED8E269
		dd offset loc_6ED8E269
		dd offset loc_6ED8E269
		dd offset loc_6ED8E269
		dd offset loc_6ED8E269
		dd offset loc_6ED8E269
		dd offset loc_6ED8E269
		dd offset loc_6ED8E269
		dd offset loc_6ED8E269
		dd offset loc_6ED8E269
		dd offset loc_6ED8E269
		dd offset loc_6ED8E269
		dd offset loc_6ED8E269
		dd offset loc_6ED8E269
		dd offset loc_6ED8E269
		dd offset loc_6ED8E269
		dd offset loc_6ED8E290
		dd offset loc_6ED8E2A7
		dd offset loc_6ED8E2B0
		dd offset loc_6ED8E290
		dd offset loc_6ED8E2A7
		dd offset loc_6ED8E2B0
		dd offset loc_6ED8E2B7
		dd offset loc_6ED8E2C8
		dd offset loc_6ED8E2E0
		dd offset loc_6ED8E2F7
		dd offset loc_6ED8E300
		dd offset loc_6ED8E307
		dd offset loc_6ED8E269
		dd offset loc_6ED8E269
		dd offset loc_6ED8E269
		dd offset loc_6ED8E269
		dd offset loc_6ED8E310
aSignedChar	db 'signed char',0      ; DATA XREF: .rdata:6EDA5AC0o
					; .rdata:6EDA5AC8o
aBool		db 'bool',0             ; DATA XREF: .rdata:6EDA5AD4o
aBoolean	db 'boolean',0          ; DATA XREF: .rdata:6EDA5ADCo
aChar		db 'char',0             ; DATA XREF: .rdata:6EDA5AE8o
					; .rdata:6EDA5C80o
aByte		db 'byte',0             ; DATA XREF: .rdata:6EDA5AF0o
aDouble		db 'double',0           ; DATA XREF: .rdata:6EDA5AFCo
					; .rdata:6EDA5B04o
aLongDouble	db 'long double',0      ; DATA XREF: .rdata:6EDA5B10o
					; .rdata:6EDA5B18o
aFloat		db 'float',0            ; DATA XREF: .rdata:6EDA5B24o
					; .rdata:6EDA5B2Co
a__float128	db '__float128',0       ; DATA XREF: .rdata:6EDA5B38o
					; .rdata:6EDA5B40o
aUnsignedChar	db 'unsigned char',0    ; DATA XREF: .rdata:6EDA5B4Co
					; .rdata:6EDA5B54o
aInt		db 'int',0              ; DATA XREF: .rdata:off_6EDA5B60o
					; .rdata:6EDA5B68o
aUnsignedInt	db 'unsigned int',0     ; DATA XREF: .rdata:6EDA5B74o
aUnsigned	db 'unsigned',0         ; DATA XREF: .rdata:6EDA5B7Co
aLong		db 'long',0             ; DATA XREF: .rdata:6EDA5B9Co
					; .rdata:6EDA5BA4o ...
aUnsignedLong	db 'unsigned long',0    ; DATA XREF: .rdata:6EDA5BB0o
					; .rdata:6EDA5BB8o
a__int128	db '__int128',0         ; DATA XREF: .rdata:6EDA5BC4o
					; .rdata:6EDA5BCCo
aUnsigned__int1	db 'unsigned __int128',0 ; DATA XREF: .rdata:6EDA5BD8o
					; .rdata:6EDA5BE0o
aShort		db 'short',0            ; DATA XREF: .rdata:6EDA5C28o
					; .rdata:6EDA5C30o
aUnsignedShort	db 'unsigned short',0   ; DATA XREF: .rdata:6EDA5C3Co
					; .rdata:6EDA5C44o
aVoid		db 'void',0             ; DATA XREF: .rdata:6EDA5C64o
					; .rdata:6EDA5C6Co
aWchar_t	db 'wchar_t',0          ; DATA XREF: .rdata:6EDA5C78o
aLongLong	db 'long long',0        ; DATA XREF: .rdata:6EDA5C8Co
aUnsignedLongLo	db 'unsigned long long',0 ; DATA XREF: .rdata:6EDA5CA0o
					; .rdata:6EDA5CA8o
aDecimal32	db 'decimal32',0        ; DATA XREF: .rdata:off_6EDA5CC8o
					; .rdata:6EDA5CD0o
aDecimal64	db 'decimal64',0        ; DATA XREF: .rdata:off_6EDA5CDCo
					; .rdata:6EDA5CE4o
aDecimal128	db 'decimal128',0       ; DATA XREF: .rdata:off_6EDA5CF0o
					; .rdata:6EDA5CF8o
aHalf		db 'half',0             ; DATA XREF: .rdata:off_6EDA5D04o
					; .rdata:6EDA5D0Co
aChar16_t	db 'char16_t',0         ; DATA XREF: .rdata:off_6EDA5D18o
					; .rdata:6EDA5D20o
aChar32_t	db 'char32_t',0         ; DATA XREF: .rdata:off_6EDA5D2Co
					; .rdata:6EDA5D34o
		align 20h
		dd offset aSignedChar	; "signed char"
		dd 0Bh
		dd offset aSignedChar	; "signed char"
		dd 0Bh,	0
		dd offset aBool		; "bool"
		dd 4
		dd offset aBoolean	; "boolean"
		dd 2 dup(7)
		dd offset aChar		; "char"
		dd 4
		dd offset aByte		; "byte"
		dd 4, 0
		dd offset aDouble	; "double"
		dd 6
		dd offset aDouble	; "double"
		dd 6, 8
		dd offset aLongDouble	; "long	double"
		dd 0Bh
		dd offset aLongDouble	; "long	double"
		dd 0Bh,	8
		dd offset aFloat	; "float"
		dd 5
		dd offset aFloat	; "float"
		dd 5, 8
		dd offset a__float128	; "__float128"
		dd 0Ah
		dd offset a__float128	; "__float128"
		dd 0Ah,	8
		dd offset aUnsignedChar	; "unsigned char"
		dd 0Dh
		dd offset aUnsignedChar	; "unsigned char"
		dd 0Dh,	0
off_6EDA5B60	dd offset aInt		; DATA XREF: sub_6ED8CF10+3D6o
					; "int"
		dd 3
		dd offset aInt		; "int"
		dd 3, 1
		dd offset aUnsignedInt	; "unsigned int"
		dd 0Ch
		dd offset aUnsigned	; "unsigned"
		dd 8, 2, 5 dup(0)
		dd offset aLong		; "long"
		dd 4
		dd offset aLong		; "long"
		dd 4, 3
		dd offset aUnsignedLong	; "unsigned long"
		dd 0Dh
		dd offset aUnsignedLong	; "unsigned long"
		dd 0Dh,	4
		dd offset a__int128	; "__int128"
		dd 8
		dd offset a__int128	; "__int128"
		dd 8, 0
		dd offset aUnsigned__int1 ; "unsigned __int128"
		dd 11h
		dd offset aUnsigned__int1 ; "unsigned __int128"
		dd 11h,	10h dup(0)
		dd offset aShort	; "short"
		dd 5
		dd offset aShort	; "short"
		dd 5, 0
		dd offset aUnsignedShort ; "unsigned short"
		dd 0Eh
		dd offset aUnsignedShort ; "unsigned short"
		dd 0Eh,	6 dup(0)
		dd offset aVoid		; "void"
		dd 4
		dd offset aVoid		; "void"
		dd 4, 9
		dd offset aWchar_t	; "wchar_t"
		dd 7
		dd offset aChar		; "char"
		dd 4, 0
		dd offset aLongLong	; "long	long"
		dd 9
		dd offset aLong		; "long"
		dd 4, 5
		dd offset aUnsignedLongLo ; "unsigned long long"
		dd 12h
		dd offset aUnsignedLongLo ; "unsigned long long"
		dd 12h,	6
		dd offset a___		; "..."
		dd 3
		dd offset a___		; "..."
		dd 3, 0
off_6EDA5CC8	dd offset aDecimal32	; DATA XREF: sub_6ED8AEC0+64Co
					; sub_6ED8AEC0+651o
					; "decimal32"
		dd 9
		dd offset aDecimal32	; "decimal32"
		dd 9, 0
off_6EDA5CDC	dd offset aDecimal64	; DATA XREF: sub_6ED8AEC0+50Bo
					; sub_6ED8AEC0+510o
					; "decimal64"
		dd 9
		dd offset aDecimal64	; "decimal64"
		dd 9, 0
off_6EDA5CF0	dd offset aDecimal128	; DATA XREF: sub_6ED8AEC0+4D1o
					; sub_6ED8AEC0+4D6o
					; "decimal128"
		dd 0Ah
		dd offset aDecimal128	; "decimal128"
		dd 0Ah,	0
off_6EDA5D04	dd offset aHalf		; DATA XREF: sub_6ED8AEC0+616o
					; sub_6ED8AEC0+61Bo
					; "half"
		dd 4
		dd offset aHalf		; "half"
		dd 4, 8
off_6EDA5D18	dd offset aChar16_t	; DATA XREF: sub_6ED8AEC0+439o
					; sub_6ED8AEC0+43Eo
					; "char16_t"
		dd 8
		dd offset aChar16_t	; "char16_t"
		dd 8, 0
off_6EDA5D2C	dd offset aChar32_t	; DATA XREF: sub_6ED8AEC0+49Ao
					; sub_6ED8AEC0+49Fo
					; "char32_t"
		dd 8
		dd offset aChar32_t	; "char32_t"
		dd 8, 0
aStdAllocator	db 'std::allocator',0   ; DATA XREF: .rdata:6EDA5EE0o
					; .rdata:6EDA5EE8o
aAllocator	db 'allocator',0        ; DATA XREF: .rdata:6EDA5EF0o
aStdBasic_strin	db 'std::basic_string',0 ; DATA XREF: .rdata:6EDA5EFCo
					; .rdata:6EDA5F04o
aBasic_string	db 'basic_string',0     ; DATA XREF: .rdata:6EDA5F0Co
					; .rdata:6EDA5F28o
aStdString	db 'std::string',0      ; DATA XREF: .rdata:6EDA5F18o
aStdBasic_str_0	db 'std::basic_string<char, std::char_traits<char>, std::allocator<ch'
					; DATA XREF: .rdata:6EDA5F20o
		db 'ar> >',0
aStdIstream	db 'std::istream',0     ; DATA XREF: .rdata:6EDA5F34o
aStdBasic_istre	db 'std::basic_istream<char, std::char_traits<char> >',0
					; DATA XREF: .rdata:6EDA5F3Co
aBasic_istream	db 'basic_istream',0    ; DATA XREF: .rdata:6EDA5F44o
aStdOstream	db 'std::ostream',0     ; DATA XREF: .rdata:6EDA5F50o
		align 4
aStdBasic_ostre	db 'std::basic_ostream<char, std::char_traits<char> >',0
					; DATA XREF: .rdata:6EDA5F58o
aBasic_ostream	db 'basic_ostream',0    ; DATA XREF: .rdata:6EDA5F60o
aStdIostream	db 'std::iostream',0    ; DATA XREF: .rdata:6EDA5F6Co
		align 4
aStdBasic_iostr	db 'std::basic_iostream<char, std::char_traits<char> >',0
					; DATA XREF: .rdata:6EDA5F74o
aBasic_iostream	db 'basic_iostream',0   ; DATA XREF: .rdata:6EDA5F7Co
		align 10h
aT		db 't',0                ; DATA XREF: sub_6ED8A7E0+4Ao
					; sub_6ED8A7E0+55o
		align 4
		dd offset aStd		; "std"
		dd 3
		dd offset aStd		; "std"
		dd 3, 2	dup(0)
		dd 61h
		dd offset aStdAllocator	; "std::allocator"
		dd 0Eh
		dd offset aStdAllocator	; "std::allocator"
		dd 0Eh
		dd offset aAllocator	; "allocator"
		dd 9, 62h
		dd offset aStdBasic_strin ; "std::basic_string"
		dd 11h
		dd offset aStdBasic_strin ; "std::basic_string"
		dd 11h
		dd offset aBasic_string	; "basic_string"
		dd 0Ch,	73h
		dd offset aStdString	; "std::string"
		dd 0Bh
		dd offset aStdBasic_str_0 ; "std::basic_string<char, std::char_trait"...
		dd 46h
		dd offset aBasic_string	; "basic_string"
		dd 0Ch,	69h
		dd offset aStdIstream	; "std::istream"
		dd 0Ch
		dd offset aStdBasic_istre ; "std::basic_istream<char, std::char_trai"...
		dd 31h
		dd offset aBasic_istream ; "basic_istream"
		dd 0Dh,	6Fh
		dd offset aStdOstream	; "std::ostream"
		dd 0Ch
		dd offset aStdBasic_ostre ; "std::basic_ostream<char, std::char_trai"...
		dd 31h
		dd offset aBasic_ostream ; "basic_ostream"
		dd 0Dh,	64h
		dd offset aStdIostream	; "std::iostream"
		dd 0Dh
		dd offset aStdBasic_iostr ; "std::basic_iostream<char, std::char_tra"...
		dd 32h
		dd offset aBasic_iostream ; "basic_iostream"
		dd 0Eh
dword_6EDA5F84	dd 26004E61h, 5361003Dh, 61003D00h, 64610061h, 61002600h
					; DATA XREF: sub_6ED8A7E0:loc_6ED8A825o
					; sub_6ED8A7E0+6Co ...
		dd 2928006Eh, 6D6300h, 6F63002Ch, 64007E00h, 3D2F0056h
		dd 616400h, 656C6564h, 5D5B6574h, 656400h, 6C64002Ah, 6C656400h
		dd 657465h, 2E007464h, 766400h,	4F65002Fh, 3D5E00h, 5E006F65h
		dd 716500h, 67003D3Dh, 3D3E0065h, 746700h, 536C003Eh, 3D3C3C00h
		dd 656C00h, 6C003D3Ch, 3C3C0073h, 746C00h, 496D003Ch, 3D2D00h
		dd 2A004C6Dh, 696D003Dh, 6D002D00h, 6D6D006Ch, 2D2D00h
		dd 6E00616Eh, 5D5B7765h, 656E00h, 6E003D21h, 746E0067h
		dd 6E002100h, 656E0077h, 526F0077h, 3D7C00h, 7C006F6Fh
		dd 726F007Ch, 70007C00h, 3D2B004Ch, 6C7000h, 6D70002Bh
		dd 2A3E2D00h, 707000h, 70002B2Bh, 74700073h, 3E2D00h, 3F007571h
		dd 4D7200h, 72003D25h, 3E3E0053h, 6D72003Dh, 72002500h
		dd 3E3E0073h, 7A697300h, 20666F65h, 7A7300h, 61007461h
		dd 6E67696Ch, 20666Fh, 7A61h, 6	dup(0)
off_6EDA60C0	dd offset dword_6EDA5F84 ; DATA	XREF: sub_6ED8B6E0+65o
					; sub_6ED8B6E0+6Br
		dd offset dword_6EDA5F84+3
		dd 2 dup(2)
		dd offset dword_6EDA5F84+6
		dd offset dword_6EDA5F84+9
		dd 1, 2
		dd offset dword_6EDA5F84+0Bh
		dd offset asc_6EDA58EB	; "&&"
		dd 2 dup(2)
		dd offset dword_6EDA5F84+0Eh
		dd offset dword_6EDA5F84+11h
		dd 2 dup(1)
		dd offset dword_6EDA5F84+13h
		dd offset dword_6EDA5F84+11h
		dd 1, 2
		dd offset aCl		; "cl"
		dd offset dword_6EDA5F84+16h
		dd 2 dup(2)
		dd offset dword_6EDA5F84+19h
		dd offset dword_6EDA5F84+1Ch
		dd 1, 2
		dd offset dword_6EDA5F84+1Eh
		dd offset dword_6EDA5F84+21h
		dd 2 dup(1)
		dd offset dword_6EDA5F84+23h
		dd offset dword_6EDA5F84+26h
		dd 2 dup(2)
		dd offset dword_6EDA5F84+29h
		dd offset dword_6EDA5F84+2Ch
		dd 8, 1
		dd offset dword_6EDA5F84+35h
		dd offset dword_6EDA5F84+38h
		dd 2 dup(1)
		dd offset dword_6EDA5F84+3Ah
		dd offset dword_6EDA5F84+3Dh
		dd 6, 1
		dd offset dword_6EDA5F84+44h
		dd offset dword_6EDA5F84+47h
		dd 1, 2
		dd offset dword_6EDA5F84+49h
		dd offset dword_6EDA5F84+4Ch
		dd 1, 2
		dd offset dword_6EDA5F84+4Eh
		dd offset dword_6EDA5F84+51h
		dd 2 dup(2)
		dd offset dword_6EDA5F84+54h
		dd offset dword_6EDA5F84+57h
		dd 1, 2
		dd offset dword_6EDA5F84+59h
		dd offset dword_6EDA5F84+5Ch
		dd 2 dup(2)
		dd offset dword_6EDA5F84+5Fh
		dd offset dword_6EDA5F84+62h
		dd 2 dup(2)
		dd offset dword_6EDA5F84+65h
		dd offset dword_6EDA5F84+68h
		dd 1, 2
		dd offset aIx		; "ix"
		dd offset asc_6EDA561E	; "[]"
		dd 2 dup(2)
		dd offset dword_6EDA5F84+6Ah
		dd offset dword_6EDA5F84+6Dh
		dd 3, 2
		dd offset dword_6EDA5F84+71h
		dd offset dword_6EDA5F84+74h
		dd 2 dup(2)
		dd offset dword_6EDA5F84+77h
		dd offset dword_6EDA5F84+7Ah
		dd 2 dup(2)
		dd offset dword_6EDA5F84+7Dh
		dd offset dword_6EDA5F84+80h
		dd 1, 2
		dd offset dword_6EDA5F84+82h
		dd offset dword_6EDA5F84+85h
		dd 2 dup(2)
		dd offset dword_6EDA5F84+88h
		dd offset dword_6EDA5F84+8Bh
		dd 2 dup(2)
		dd offset dword_6EDA5F84+8Eh
		dd offset dword_6EDA5F84+91h
		dd 1, 2
		dd offset dword_6EDA5F84+93h
		dd offset dword_6EDA5F84+38h
		dd 1, 2
		dd offset dword_6EDA5F84+96h
		dd offset dword_6EDA5F84+99h
		dd 2, 1
		dd offset dword_6EDA5F84+9Ch
		dd offset dword_6EDA5F84+9Fh
		dd 5, 1
		dd offset dword_6EDA5F84+0A5h
		dd offset dword_6EDA5F84+0A8h
		dd 2 dup(2)
		dd offset dword_6EDA5F84+0ABh
		dd offset dword_6EDA5F84+91h
		dd 2 dup(1)
		dd offset dword_6EDA5F84+0AEh
		dd offset dword_6EDA5F84+0B1h
		dd 2 dup(1)
		dd offset dword_6EDA5F84+0B3h
		dd offset dword_6EDA5F84+0B6h
		dd 3, 1
		dd offset dword_6EDA5F84+0BAh
		dd offset dword_6EDA5F84+0BDh
		dd 2 dup(2)
		dd offset dword_6EDA5F84+0C0h
		dd offset dword_6EDA5F84+0C3h
		dd 2 dup(2)
		dd offset dword_6EDA5F84+0C6h
		dd offset dword_6EDA5F84+0C9h
		dd 1, 2
		dd offset dword_6EDA5F84+0CBh
		dd offset dword_6EDA5F84+0CEh
		dd 2 dup(2)
		dd offset dword_6EDA5F84+0D1h
		dd offset dword_6EDA5F84+0D4h
		dd 1, 2
		dd offset dword_6EDA5F84+0D6h
		dd offset dword_6EDA5F84+0D9h
		dd 3, 2
		dd offset dword_6EDA5F84+0DDh
		dd offset dword_6EDA5F84+0E0h
		dd 2, 1
		dd offset dword_6EDA5F84+0E3h
		dd offset dword_6EDA5F84+0D4h
		dd 2 dup(1)
		dd offset dword_6EDA5F84+0E6h
		dd offset dword_6EDA5F84+0E9h
		dd 2 dup(2)
		dd offset dword_6EDA5F84+0ECh
		dd offset dword_6EDA5F84+0EFh
		dd 1, 3
		dd offset dword_6EDA5F84+0F1h
		dd offset dword_6EDA5F84+0F4h
		dd 2 dup(2)
		dd offset dword_6EDA5F84+0F7h
		dd offset dword_6EDA5F84+0FAh
		dd 3, 2
		dd offset dword_6EDA5F84+0FEh
		dd offset dword_6EDA5F84+101h
		dd 1, 2
		dd offset dword_6EDA5F84+103h
		dd offset dword_6EDA5F84+106h
		dd 2 dup(2)
		dd offset aSt		; "st"
		dd offset dword_6EDA5F84+109h
		dd 7, 1
		dd offset dword_6EDA5F84+111h
		dd offset dword_6EDA5F84+109h
		dd 7, 1
		dd offset dword_6EDA5F84+114h
		dd offset dword_6EDA5F84+117h
		dd 8, 1
		dd offset dword_6EDA5F84+120h
		dd offset dword_6EDA5F84+117h
		dd 8, 1, 8 dup(0)
off_6EDA6420	dd offset TlsCallback_0	; DATA XREF: sub_6ED41040:loc_6ED41137r
aMingwW64Runtim	db 'Mingw-w64 runtime failure:',0Ah,0 ; DATA XREF: sub_6ED8E8B0+1Do
; char aAddressPHasNoI[]
aAddressPHasNoI	db 'Address %p has no image-section',0 ; DATA XREF: sub_6ED8E910+13Ao
; char aVirtualqueryFa[]
aVirtualqueryFa	db '  VirtualQuery failed for %d bytes at address %p',0
					; DATA XREF: sub_6ED8E910+126o
					; sub_6ED8EA60+253o
		align 4
; char aUnknownPseud_0[]
aUnknownPseud_0	db '  Unknown pseudo relocation protocol version %d.',0Ah,0
					; DATA XREF: sub_6ED8EA60+267o
		align 4
; char aUnknownPseudoR[]
aUnknownPseudoR	db '  Unknown pseudo relocation bit size %d.',0Ah,0
					; DATA XREF: sub_6ED8EA60+F4o
		align 4
off_6EDA64F4	dd offset dword_6EDA8040 ; DATA	XREF: .text:6ED8EE08o
		dd offset dword_6EDA80A0
aMsvcrt_dll:				; DATA XREF: .text:loc_6ED8F505o
		unicode	0, <msvcrt.dll>,0
		align 8
off_6EDA6518	dd offset off_6EDA7808	; DATA XREF: .rdata:6EDA6584o
					; .rdata:6EDA6BC4o
		dd offset a10qxmlreader	; "10QXmlReader"
off_6EDA6520	dd offset off_6EDA7868	; DATA XREF: .rdata:6EDA6C24o
					; .rdata:6EDA6CA4o ...
		dd offset a11qdomhandler ; "11QDomHandler"
		dd offset off_6EDA65C0
off_6EDA652C	dd offset off_6EDA7808	; DATA XREF: .rdata:6EDA6648o
					; .rdata:6EDA6D64o
		dd offset a11qxmllocator ; "11QXmlLocator"
off_6EDA6534	dd offset off_6EDA7808	; DATA XREF: .rdata:6EDA6D7Co
		dd offset a14qxmlattribut ; "14QXmlAttributes"
off_6EDA653C	dd offset off_6EDA7808	; DATA XREF: .rdata:6EDA65E0o
					; .rdata:6EDA6D8Co
		dd offset a14qxmldtdhandl ; "14QXmlDTDHandler"
off_6EDA6544	dd offset off_6EDA7868	; DATA XREF: .rdata:6EDA6DC4o
		dd offset a15qdomattrpriv ; "15QDomAttrPrivate"
		dd offset off_6EDA6550
off_6EDA6550	dd offset off_6EDA7808	; DATA XREF: .rdata:6EDA654Co
					; .rdata:6EDA6590o ...
		dd offset a15qdomnodepriv ; "15QDomNodePrivate"
off_6EDA6558	dd offset off_6EDA7868	; DATA XREF: .rdata:6EDA6630o
					; .rdata:6EDA6EC4o
		dd offset a15qdomtextpriv ; "15QDomTextPrivate"
		dd offset off_6EDA664C
off_6EDA6564	dd offset off_6EDA7808	; DATA XREF: .rdata:6EDA65F8o
					; .rdata:6EDA6F44o
		dd offset a15qxmldeclhand ; "15QXmlDeclHandler"
off_6EDA656C	dd offset off_6EDA7808	; DATA XREF: .rdata:6EDA6F64o
		dd offset a15qxmlinputsou ; "15QXmlInputSource"
off_6EDA6574	dd offset off_6EDA7808	; DATA XREF: .rdata:6EDA65D8o
					; .rdata:6EDA6FA4o
		dd offset a16qxmlerrorhan ; "16QXmlErrorHandler"
off_6EDA657C	dd offset off_6EDA7868	; DATA XREF: .rdata:6EDA6FC4o
		dd offset a16qxmlsimplere ; "16QXmlSimpleReader"
		dd offset off_6EDA6518
off_6EDA6588	dd offset off_6EDA7868	; DATA XREF: .rdata:6EDA7044o
		dd offset a17qdomentitypr ; "17QDomEntityPrivate"
		dd offset off_6EDA6550
off_6EDA6594	dd offset off_6EDA7868	; DATA XREF: .rdata:6EDA70C4o
		dd offset a18qdomcommentp ; "18QDomCommentPrivate"
		dd offset off_6EDA664C
off_6EDA65A0	dd offset off_6EDA7868	; DATA XREF: .rdata:6EDA7144o
		dd offset a18qdomelementp ; "18QDomElementPrivate"
		dd offset off_6EDA6550
off_6EDA65AC	dd offset off_6EDA7808	; DATA XREF: .rdata:6EDA65D0o
					; .rdata:6EDA71C4o
		dd offset a18qxmlcontenth ; "18QXmlContentHandler"
		align 10h
off_6EDA65C0	dd offset off_6EDA78A8	; DATA XREF: .rdata:6EDA6528o
					; .rdata:6EDA7204o ...
		dd offset a18qxmldefaulth ; "18QXmlDefaultHandler"
		dd 0
		dd 6
		dd offset off_6EDA65AC
		dd 2
		dd offset off_6EDA6574
		dd 402h
		dd offset off_6EDA653C
		dd 802h
		dd offset off_6EDA6600
		dd 0C02h
		dd offset off_6EDA6608
		dd 1002h
		dd offset off_6EDA6564
		dd 1402h
off_6EDA6600	dd offset off_6EDA7808	; DATA XREF: .rdata:6EDA65E8o
					; .rdata:6EDA7344o
		dd offset a18qxmlentityre ; "18QXmlEntityResolver"
off_6EDA6608	dd offset off_6EDA7808	; DATA XREF: .rdata:6EDA65F0o
					; .rdata:6EDA7364o
		dd offset a18qxmllexicalh ; "18QXmlLexicalHandler"
off_6EDA6610	dd offset off_6EDA7868	; DATA XREF: .rdata:6EDA73A4o
		dd offset a19qdomdocument ; "19QDomDocumentPrivate"
		dd offset off_6EDA6550
off_6EDA661C	dd offset off_6EDA7868	; DATA XREF: .rdata:6EDA7424o
		dd offset a19qdomnotation ; "19QDomNotationPrivate"
		dd offset off_6EDA6550
off_6EDA6628	dd offset off_6EDA7868	; DATA XREF: .rdata:6EDA74A4o
		dd offset a23qdomcdatasec ; "23QDomCDATASectionPrivate"
		dd offset off_6EDA6558
off_6EDA6634	dd offset off_6EDA7868	; DATA XREF: .rdata:6EDA7524o
		dd offset a23qdomdocument ; "23QDomDocumentTypePrivate"
		dd offset off_6EDA6550
off_6EDA6640	dd offset off_6EDA7868	; DATA XREF: .rdata:6EDA75A4o
		dd offset a23qxmlsimplere ; "23QXmlSimpleReaderLocator"
		dd offset off_6EDA652C
off_6EDA664C	dd offset off_6EDA7868	; DATA XREF: .rdata:6EDA6560o
					; .rdata:6EDA659Co ...
		dd offset a24qdomcharacte ; "24QDomCharacterDataPrivate"
		dd offset off_6EDA6550
off_6EDA6658	dd offset off_6EDA7808	; DATA XREF: .rdata:6EDA7644o
		dd offset a24qxmlstreamen ; "24QXmlStreamEntityResolver"
off_6EDA6660	dd offset off_6EDA7868	; DATA XREF: .rdata:6EDA7664o
		dd offset a26qdomentityre ; "26QDomEntityReferencePrivate"
		dd offset off_6EDA6550
off_6EDA666C	dd offset off_6EDA7868	; DATA XREF: .rdata:6EDA76E4o
		dd offset a27qdomdocument ; "27QDomDocumentFragmentPrivate"
		dd offset off_6EDA6550
off_6EDA6678	dd offset off_6EDA7868	; DATA XREF: .rdata:6EDA7764o
		dd offset a32qdomprocessi ; "32QDomProcessingInstructionPrivate"
		dd offset off_6EDA6550
off_6EDA6684	dd offset off_6EDA7808	; DATA XREF: sub_6ED997C0+351o
					; .rdata:6EDA77E4o
		dd offset aN10__cxxabiv11 ; "N10__cxxabiv115__forced_unwindE"
off_6EDA668C	dd offset off_6EDA7868	; DATA XREF: .rdata:6EDA66A8o
					; .rdata:6EDA66B4o ...
		dd offset aN10__cxxabiv_0 ; "N10__cxxabiv117__class_type_infoE"
		dd offset off_6EDA66F0
off_6EDA6698	dd offset off_6EDA7808	; DATA XREF: sub_6ED997C0+547o
					; .rdata:6EDA7844o
		dd offset aN10__cxxabiv_1 ; "N10__cxxabiv119__foreign_exceptionE"
off_6EDA66A0	dd offset off_6EDA7868	; DATA XREF: .rdata:6EDA7864o
		dd offset aN10__cxxabiv12 ; "N10__cxxabiv120__si_class_type_infoE"
		dd offset off_6EDA668C
off_6EDA66AC	dd offset off_6EDA7868	; DATA XREF: .rdata:6EDA78A4o
		dd offset aN10__cxxabiv_2 ; "N10__cxxabiv121__vmi_class_type_infoE"
		dd offset off_6EDA668C
off_6EDA66B8	dd offset off_6EDA7868	; DATA XREF: .text:6ED98C12o
					; sub_6ED98C90+1C1o ...
		dd offset aN9__gnu_cxx24_ ; "N9__gnu_cxx24__concurrence_lock_errorE"
		dd offset off_6EDA66E8
off_6EDA66C4	dd offset off_6EDA7868	; DATA XREF: sub_6ED96D20+78o
					; .text:6ED98BE8o ...
		dd offset aN9__gnu_cxx26_ ; "N9__gnu_cxx26__concurrence_unlock_error"...
		dd offset off_6EDA66E8
off_6EDA66D0	dd offset off_6EDA7868	; DATA XREF: sub_6ED9909D+A8o
					; sub_6ED9909D+D0o ...
		dd offset aSt13bad_except ; "St13bad_exception"
		dd offset off_6EDA66E8
off_6EDA66DC	dd offset off_6EDA7868	; DATA XREF: sub_6ED988D0+8Eo
					; .text:6ED99EBCo ...
		dd offset aSt9bad_alloc	; "St9bad_alloc"
		dd offset off_6EDA66E8
off_6EDA66E8	dd offset off_6EDA7808	; DATA XREF: .text:6ED9AF34o
					; .rdata:6EDA66C0o ...
		dd offset aSt9exception	; "St9exception"
off_6EDA66F0	dd offset off_6EDA7808	; DATA XREF: .rdata:6EDA6694o
					; .rdata:6EDA7964o
		dd offset aSt9type_info	; "St9type_info"
a10qxmlreader	db '10QXmlReader',0     ; DATA XREF: .rdata:6EDA651Co
		align 4
a11qdomhandler	db '11QDomHandler',0    ; DATA XREF: .rdata:6EDA6524o
		align 4
a11qxmllocator	db '11QXmlLocator',0    ; DATA XREF: .rdata:6EDA6530o
		align 4
a14qxmlattribut	db '14QXmlAttributes',0 ; DATA XREF: .rdata:6EDA6538o
		align 4
a14qxmldtdhandl	db '14QXmlDTDHandler',0 ; DATA XREF: .rdata:6EDA6540o
		align 10h
a15qdomattrpriv	db '15QDomAttrPrivate',0 ; DATA XREF: .rdata:6EDA6548o
		align 4
a15qdomnodepriv	db '15QDomNodePrivate',0 ; DATA XREF: .rdata:6EDA6554o
		align 4
a15qdomtextpriv	db '15QDomTextPrivate',0 ; DATA XREF: .rdata:6EDA655Co
		align 4
a15qxmldeclhand	db '15QXmlDeclHandler',0 ; DATA XREF: .rdata:6EDA6568o
		align 10h
a15qxmlinputsou	db '15QXmlInputSource',0 ; DATA XREF: .rdata:6EDA6570o
		align 4
a16qxmlerrorhan	db '16QXmlErrorHandler',0 ; DATA XREF: .rdata:6EDA6578o
		align 4
a16qxmlsimplere	db '16QXmlSimpleReader',0 ; DATA XREF: .rdata:6EDA6580o
		align 4
a17qdomentitypr	db '17QDomEntityPrivate',0 ; DATA XREF: .rdata:6EDA658Co
a18qdomcommentp	db '18QDomCommentPrivate',0 ; DATA XREF: .rdata:6EDA6598o
		align 4
a18qdomelementp	db '18QDomElementPrivate',0 ; DATA XREF: .rdata:6EDA65A4o
		align 10h
a18qxmlcontenth	db '18QXmlContentHandler',0 ; DATA XREF: .rdata:6EDA65B0o
		align 4
a18qxmldefaulth	db '18QXmlDefaultHandler',0 ; DATA XREF: .rdata:6EDA65C4o
		align 10h
a18qxmlentityre	db '18QXmlEntityResolver',0 ; DATA XREF: .rdata:6EDA6604o
		align 4
a18qxmllexicalh	db '18QXmlLexicalHandler',0 ; DATA XREF: .rdata:6EDA660Co
		align 10h
a19qdomdocument	db '19QDomDocumentPrivate',0 ; DATA XREF: .rdata:6EDA6614o
		align 4
a19qdomnotation	db '19QDomNotationPrivate',0 ; DATA XREF: .rdata:6EDA6620o
		align 10h
a23qdomcdatasec	db '23QDomCDATASectionPrivate',0 ; DATA XREF: .rdata:6EDA662Co
		align 4
a23qdomdocument	db '23QDomDocumentTypePrivate',0 ; DATA XREF: .rdata:6EDA6638o
		align 4
a23qxmlsimplere	db '23QXmlSimpleReaderLocator',0 ; DATA XREF: .rdata:6EDA6644o
		align 4
a24qdomcharacte	db '24QDomCharacterDataPrivate',0 ; DATA XREF: .rdata:6EDA6650o
		align 10h
a24qxmlstreamen	db '24QXmlStreamEntityResolver',0 ; DATA XREF: .rdata:6EDA665Co
		align 4
a26qdomentityre	db '26QDomEntityReferencePrivate',0 ; DATA XREF: .rdata:6EDA6664o
		align 4
a27qdomdocument	db '27QDomDocumentFragmentPrivate',0 ; DATA XREF: .rdata:6EDA6670o
		align 10h
a32qdomprocessi	db '32QDomProcessingInstructionPrivate',0 ; DATA XREF: .rdata:6EDA667Co
		align 20h
aN10__cxxabiv11	db 'N10__cxxabiv115__forced_unwindE',0 ; DATA XREF: .rdata:6EDA6688o
aN10__cxxabiv_0	db 'N10__cxxabiv117__class_type_infoE',0 ; DATA XREF: .rdata:6EDA6690o
		align 20h
aN10__cxxabiv_1	db 'N10__cxxabiv119__foreign_exceptionE',0 ; DATA XREF: .rdata:6EDA669Co
		align 20h
aN10__cxxabiv12	db 'N10__cxxabiv120__si_class_type_infoE',0 ; DATA XREF: .rdata:6EDA66A4o
		align 20h
aN10__cxxabiv_2	db 'N10__cxxabiv121__vmi_class_type_infoE',0 ; DATA XREF: .rdata:6EDA66B0o
		align 20h
aN9__gnu_cxx24_	db 'N9__gnu_cxx24__concurrence_lock_errorE',0 ; DATA XREF: .rdata:6EDA66BCo
		align 20h
aN9__gnu_cxx26_	db 'N9__gnu_cxx26__concurrence_unlock_errorE',0
					; DATA XREF: .rdata:6EDA66C8o
		align 20h
aSt13bad_except	db 'St13bad_exception',0 ; DATA XREF: .rdata:6EDA66D4o
		align 4
aSt9bad_alloc	db 'St9bad_alloc',0     ; DATA XREF: .rdata:6EDA66E0o
		align 4
aSt9exception	db 'St9exception',0     ; DATA XREF: .rdata:6EDA66ECo
		align 4
aSt9type_info	db 'St9type_info',0     ; DATA XREF: .rdata:6EDA66F4o
		align 20h
; Exported entry 587. _ZTV10QXmlReader
		public _ZTV10QXmlReader
_ZTV10QXmlReader dd 0
		dd offset off_6EDA6518
off_6EDA6BC8	dd offset _ZN10QXmlReaderD1Ev ;	DATA XREF: _ZN16QXmlSimpleReaderD2Ev+66o
					; sub_6ED5DB79+9o ...
		dd offset _ZN10QXmlReaderD0Ev
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd 0
		dd offset off_6EDA6520
off_6EDA6C28	dd offset sub_6ED4BC70	; DATA XREF: .text:6ED43C50o
					; sub_6ED43CC0+20o ...
		dd offset sub_6ED4BAC0
		dd offset sub_6ED43DE0
		dd offset _ZN18QXmlDefaultHandler13startDocumentEv
		dd offset sub_6ED43D50
		dd offset _ZN18QXmlDefaultHandler18startPrefixMappingERK7QStringS2_
		dd offset _ZN18QXmlDefaultHandler16endPrefixMappingERK7QString
		dd offset sub_6ED555A0
		dd offset sub_6ED43D60
		dd offset sub_6ED54280
		dd offset _ZN18QXmlDefaultHandler19ignorableWhitespaceERK7QString
		dd offset sub_6ED55250
		dd offset sub_6ED54200
		dd offset _ZNK18QXmlDefaultHandler11errorStringEv
		dd offset _ZN18QXmlDefaultHandler7warningERK18QXmlParseException
		dd offset _ZN18QXmlDefaultHandler5errorERK18QXmlParseException
		dd offset sub_6ED4D660
		dd offset sub_6ED49B50
		dd offset sub_6ED497D0
		dd offset _ZN18QXmlDefaultHandler13resolveEntityERK7QStringS2_RP15QXmlInputSource
		dd offset sub_6ED43F60
		dd offset _ZN18QXmlDefaultHandler6endDTDEv
		dd offset sub_6ED43F20
		dd offset sub_6ED4DCE0
		dd offset sub_6ED43DB0
		dd offset sub_6ED43DD0
		dd offset sub_6ED52850
		dd offset _ZN18QXmlDefaultHandler13attributeDeclERK7QStringS2_S2_S2_S2_
		dd offset _ZN18QXmlDefaultHandler18internalEntityDeclERK7QStringS2_
		dd offset sub_6ED4B990
		dd 0FFFFFFFCh
		dd offset off_6EDA6520
off_6EDA6CA8	dd offset sub_6ED4BC60	; DATA XREF: .text:6ED43C56o
					; sub_6ED43CC0+26o ...
		dd offset sub_6ED4BAB0
		dd offset _ZThn4_N18QXmlDefaultHandler7warningERK18QXmlParseException
		dd offset _ZThn4_N18QXmlDefaultHandler5errorERK18QXmlParseException
		dd offset sub_6ED4D650
		dd offset _ZThn4_NK18QXmlDefaultHandler11errorStringEv
		dd 0FFFFFFF8h
		dd offset off_6EDA6520
off_6EDA6CC8	dd offset sub_6ED4BC50	; DATA XREF: .text:6ED43C5Do
					; sub_6ED43CC0+2Do ...
		dd offset sub_6ED4BAA0
		dd offset sub_6ED49B40
		dd offset sub_6ED497C0
		dd offset _ZThn8_NK18QXmlDefaultHandler11errorStringEv
		dd 0FFFFFFF4h
		dd offset off_6EDA6520
off_6EDA6CE4	dd offset sub_6ED4BC40	; DATA XREF: .text:6ED43C64o
					; sub_6ED43CC0+34o ...
		dd offset sub_6ED4BA90
		dd offset _ZThn12_N18QXmlDefaultHandler13resolveEntityERK7QStringS2_RP15QXmlInputSource
		dd offset _ZThn12_NK18QXmlDefaultHandler11errorStringEv
		dd 0FFFFFFF0h
		dd offset off_6EDA6520
off_6EDA6CFC	dd offset sub_6ED4BC30	; DATA XREF: .text:6ED43C6Bo
					; sub_6ED43CC0+3Bo ...
		dd offset sub_6ED4BA80
		dd offset sub_6ED43F50
		dd offset _ZThn16_N18QXmlDefaultHandler6endDTDEv
		dd offset sub_6ED43F10
		dd offset sub_6ED4DCD0
		dd offset sub_6ED43DA0
		dd offset sub_6ED43DC0
		dd offset sub_6ED52840
		dd offset _ZThn16_NK18QXmlDefaultHandler11errorStringEv
		dd 0FFFFFFECh
		dd offset off_6EDA6520
off_6EDA6D2C	dd offset sub_6ED4BC20	; DATA XREF: .text:6ED43C72o
					; sub_6ED43CC0+42o ...
		dd offset sub_6ED4BA70
		dd offset _ZThn20_N18QXmlDefaultHandler13attributeDeclERK7QStringS2_S2_S2_S2_
		dd offset _ZThn20_N18QXmlDefaultHandler18internalEntityDeclERK7QStringS2_
		dd offset sub_6ED4B980
		dd offset _ZThn20_NK18QXmlDefaultHandler11errorStringEv
		align 20h
; Exported entry 588. _ZTV11QXmlLocator
		public _ZTV11QXmlLocator
_ZTV11QXmlLocator dd 0
		dd offset off_6EDA652C
off_6EDA6D68	dd offset _ZN11QXmlLocatorD1Ev ; DATA XREF: _ZN11QXmlLocatorC2Ev+4o
					; _ZN11QXmlLocatorC1Ev+4o ...
		dd offset _ZN11QXmlLocatorD0Ev
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
; Exported entry 589. _ZTV14QXmlAttributes
		public _ZTV14QXmlAttributes
_ZTV14QXmlAttributes dd	0
		dd offset off_6EDA6534
off_6EDA6D80	dd offset _ZN14QXmlAttributesD1Ev ; DATA XREF: sub_6ED5D140+161o
					; .text:6ED5DE41o ...
		dd offset _ZN14QXmlAttributesD0Ev
; Exported entry 590. _ZTV14QXmlDTDHandler
		public _ZTV14QXmlDTDHandler
_ZTV14QXmlDTDHandler dd	0
		dd offset off_6EDA653C
off_6EDA6D90	dd offset _ZN14QXmlDTDHandlerD1Ev ; DATA XREF: .text:6ED489E0o
					; .text:6ED48A77o ...
		dd offset _ZN14QXmlDTDHandlerD0Ev
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd 8 dup(0)
		dd offset off_6EDA6544
off_6EDA6DC8	dd offset sub_6ED90A80	; DATA XREF: sub_6ED44540+2Co
					; .text:6ED445BCo ...
		dd offset sub_6ED90A50
		dd offset sub_6ED4CB80
		dd offset sub_6ED41A30
		dd offset sub_6ED418D0
		dd offset sub_6ED46860
		dd offset sub_6ED46790
		dd offset sub_6ED41860
		dd offset sub_6ED45270
		dd offset sub_6ED46FF0
		dd offset sub_6ED41820
		dd offset sub_6ED97E90
		dd offset sub_6ED97ED0
		dd offset sub_6ED97F10
		dd offset sub_6ED97EB0
		dd offset sub_6ED97EE0
		dd offset sub_6ED97F80
		dd offset sub_6ED97F00
		dd offset sub_6ED97F40
		dd offset sub_6ED97F50
		dd offset sub_6ED97EC0
		dd offset sub_6ED97F20
		dd offset sub_6ED97EF0
		dd offset sub_6ED97F70
		dd offset sub_6ED97EA0
		dd offset sub_6ED55C90
		dd 5 dup(0)
		dd offset off_6EDA6550
off_6EDA6E48	dd offset sub_6ED48CB0	; DATA XREF: sub_6ED416C0+Fo
					; .text:6ED4177Fo ...
		dd offset sub_6ED48AA0
		dd offset sub_6ED90AA0
		dd offset sub_6ED41A30
		dd offset sub_6ED418D0
		dd offset sub_6ED46860
		dd offset sub_6ED46790
		dd offset sub_6ED41860
		dd offset sub_6ED45520
		dd offset sub_6ED46FF0
		dd offset sub_6ED41820
		dd offset sub_6ED97F30
		dd offset sub_6ED97ED0
		dd offset sub_6ED97F10
		dd offset sub_6ED97EB0
		dd offset sub_6ED97EE0
		dd offset sub_6ED97F80
		dd offset sub_6ED97F00
		dd offset sub_6ED97F40
		dd offset sub_6ED97F50
		dd offset sub_6ED97EC0
		dd offset sub_6ED97F20
		dd offset sub_6ED97EF0
		dd offset sub_6ED97F70
		dd offset sub_6ED97F60
		dd offset sub_6ED41BA0
		dd 5 dup(0)
		dd offset off_6EDA6558
off_6EDA6EC8	dd offset sub_6ED90AF0	; DATA XREF: sub_6ED446A0+21o
					; sub_6ED446D0+21o ...
		dd offset sub_6ED90AC0
		dd offset sub_6ED90AA0
		dd offset sub_6ED41A30
		dd offset sub_6ED418D0
		dd offset sub_6ED46860
		dd offset sub_6ED46790
		dd offset sub_6ED41860
		dd offset sub_6ED45060
		dd offset sub_6ED46FF0
		dd offset sub_6ED41820
		dd offset sub_6ED97F30
		dd offset sub_6ED97ED0
		dd offset sub_6ED97F10
		dd offset sub_6ED97EB0
		dd offset sub_6ED97EE0
		dd offset sub_6ED97F80
		dd offset sub_6ED97F00
		dd offset sub_6ED97F90
		dd offset sub_6ED97F50
		dd offset sub_6ED97EC0
		dd offset sub_6ED97F20
		dd offset sub_6ED980F0
		dd offset sub_6ED97F70
		dd offset sub_6ED97FA0
		dd offset sub_6ED4C0A0
		align 20h
; Exported entry 591. _ZTV15QXmlDeclHandler
		public _ZTV15QXmlDeclHandler
_ZTV15QXmlDeclHandler dd 0
		dd offset off_6EDA6564
off_6EDA6F48	dd offset _ZN15QXmlDeclHandlerD1Ev ; DATA XREF:	.text:6ED489CBo
					; .text:6ED48A62o ...
		dd offset _ZN15QXmlDeclHandlerD0Ev
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
; Exported entry 592. _ZTV15QXmlInputSource
		public _ZTV15QXmlInputSource
_ZTV15QXmlInputSource dd 0
		dd offset off_6EDA656C
off_6EDA6F68	dd offset _ZN15QXmlInputSourceD1Ev ; DATA XREF:	_ZN15QXmlInputSourceD0Ev+35o
					; _ZN15QXmlInputSourceD1Ev+35o	...
		dd offset _ZN15QXmlInputSourceD0Ev
		dd offset _ZN15QXmlInputSource7setDataERK7QString
		dd offset _ZN15QXmlInputSource7setDataERK10QByteArray
		dd offset _ZN15QXmlInputSource9fetchDataEv
		dd offset _ZNK15QXmlInputSource4dataEv
		dd offset _ZN15QXmlInputSource4nextEv
		dd offset _ZN15QXmlInputSource5resetEv
		dd offset _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb
		align 20h
; Exported entry 593. _ZTV16QXmlErrorHandler
		public _ZTV16QXmlErrorHandler
_ZTV16QXmlErrorHandler dd 0
		dd offset off_6EDA6574
off_6EDA6FA8	dd offset _ZN16QXmlErrorHandlerD1Ev ; DATA XREF: .text:6ED489E7o
					; .text:6ED48A7Eo ...
		dd offset _ZN16QXmlErrorHandlerD0Ev
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
; Exported entry 594. _ZTV16QXmlSimpleReader
		public _ZTV16QXmlSimpleReader
_ZTV16QXmlSimpleReader dd 0
		dd offset off_6EDA657C
off_6EDA6FC8	dd offset _ZN16QXmlSimpleReaderD1Ev
					; DATA XREF: _ZN16QXmlSimpleReaderD2Ev+35o
					; _ZN16QXmlSimpleReaderD0Ev+35o ...
		dd offset _ZN16QXmlSimpleReaderD0Ev
		dd offset _ZNK16QXmlSimpleReader7featureERK7QStringPb
		dd offset _ZN16QXmlSimpleReader10setFeatureERK7QStringb
		dd offset _ZNK16QXmlSimpleReader10hasFeatureERK7QString
		dd offset _ZNK16QXmlSimpleReader8propertyERK7QStringPb
		dd offset _ZN16QXmlSimpleReader11setPropertyERK7QStringPv
		dd offset _ZNK16QXmlSimpleReader11hasPropertyERK7QString
		dd offset _ZN16QXmlSimpleReader17setEntityResolverEP18QXmlEntityResolver
		dd offset _ZNK16QXmlSimpleReader14entityResolverEv
		dd offset _ZN16QXmlSimpleReader13setDTDHandlerEP14QXmlDTDHandler
		dd offset _ZNK16QXmlSimpleReader10DTDHandlerEv
		dd offset _ZN16QXmlSimpleReader17setContentHandlerEP18QXmlContentHandler
		dd offset _ZNK16QXmlSimpleReader14contentHandlerEv
		dd offset _ZN16QXmlSimpleReader15setErrorHandlerEP16QXmlErrorHandler
		dd offset _ZNK16QXmlSimpleReader12errorHandlerEv
		dd offset _ZN16QXmlSimpleReader17setLexicalHandlerEP18QXmlLexicalHandler
		dd offset _ZNK16QXmlSimpleReader14lexicalHandlerEv
		dd offset _ZN16QXmlSimpleReader14setDeclHandlerEP15QXmlDeclHandler
		dd offset _ZNK16QXmlSimpleReader11declHandlerEv
		dd offset _ZN16QXmlSimpleReader5parseERK15QXmlInputSource
		dd offset _ZN16QXmlSimpleReader5parseEPK15QXmlInputSource
		dd offset _ZN16QXmlSimpleReader5parseEPK15QXmlInputSourceb
		dd offset _ZN16QXmlSimpleReader13parseContinueEv
		dd 7 dup(0)
		dd offset off_6EDA6588
off_6EDA7048	dd offset sub_6ED90CB0	; DATA XREF: sub_6ED49660+4Eo
					; .text:6ED4990Eo ...
		dd offset sub_6ED90B70
		dd offset sub_6ED90AA0
		dd offset sub_6ED41A30
		dd offset sub_6ED418D0
		dd offset sub_6ED46860
		dd offset sub_6ED46790
		dd offset sub_6ED41860
		dd offset sub_6ED4A180
		dd offset sub_6ED46FF0
		dd offset sub_6ED41820
		dd offset sub_6ED97F30
		dd offset sub_6ED97ED0
		dd offset sub_6ED97F10
		dd offset sub_6ED97EB0
		dd offset sub_6ED97EE0
		dd offset sub_6ED97F80
		dd offset sub_6ED97F00
		dd offset sub_6ED97F40
		dd offset sub_6ED97FB0
		dd offset sub_6ED97EC0
		dd offset sub_6ED97F20
		dd offset sub_6ED97EF0
		dd offset sub_6ED97F70
		dd offset sub_6ED97FC0
		dd offset sub_6ED52990
		dd 5 dup(0)
		dd offset off_6EDA6594
off_6EDA70C8	dd offset sub_6ED90E20	; DATA XREF: sub_6ED44640+21o
					; .text:6ED44691o ...
		dd offset sub_6ED90DF0
		dd offset sub_6ED90AA0
		dd offset sub_6ED41A30
		dd offset sub_6ED418D0
		dd offset sub_6ED46860
		dd offset sub_6ED46790
		dd offset sub_6ED41860
		dd offset sub_6ED44FB0
		dd offset sub_6ED46FF0
		dd offset sub_6ED41820
		dd offset sub_6ED97F30
		dd offset sub_6ED97ED0
		dd offset sub_6ED97F10
		dd offset sub_6ED97EB0
		dd offset sub_6ED97EE0
		dd offset sub_6ED97F80
		dd offset sub_6ED97F00
		dd offset sub_6ED97F40
		dd offset sub_6ED97F50
		dd offset sub_6ED97EC0
		dd offset sub_6ED97F20
		dd offset sub_6ED980F0
		dd offset sub_6ED97FE0
		dd offset sub_6ED97FD0
		dd offset sub_6ED500A0
		dd 5 dup(0)
		dd offset off_6EDA65A0
off_6EDA7148	dd offset sub_6ED4ACC0	; DATA XREF: sub_6ED4A680+4Bo
					; .text:6ED4A7BBo ...
		dd offset sub_6ED4ABF0
		dd offset sub_6ED90AA0
		dd offset sub_6ED41A30
		dd offset sub_6ED418D0
		dd offset sub_6ED46860
		dd offset sub_6ED46790
		dd offset sub_6ED41860
		dd offset sub_6ED4B4B0
		dd offset sub_6ED46FF0
		dd offset sub_6ED41820
		dd offset sub_6ED97F30
		dd offset sub_6ED97ED0
		dd offset sub_6ED97F10
		dd offset sub_6ED97EB0
		dd offset sub_6ED97EE0
		dd offset sub_6ED98000
		dd offset sub_6ED97F00
		dd offset sub_6ED97F40
		dd offset sub_6ED97F50
		dd offset sub_6ED97EC0
		dd offset sub_6ED97F20
		dd offset sub_6ED97EF0
		dd offset sub_6ED97F70
		dd offset sub_6ED97FF0
		dd offset sub_6ED51550
		align 20h
; Exported entry 595. _ZTV18QXmlContentHandler
		public _ZTV18QXmlContentHandler
_ZTV18QXmlContentHandler dd 0
		dd offset off_6EDA65AC
off_6EDA71C8	dd offset _ZN18QXmlContentHandlerD1Ev ;	DATA XREF: .text:6ED489EEo
					; .text:6ED48A85o ...
		dd offset _ZN18QXmlContentHandlerD0Ev
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
; Exported entry 596. _ZTV18QXmlDefaultHandler
		public _ZTV18QXmlDefaultHandler
_ZTV18QXmlDefaultHandler dd 0
		dd offset off_6EDA65C0
		dd offset _ZN18QXmlDefaultHandlerD1Ev
		dd offset _ZN18QXmlDefaultHandlerD0Ev
		dd offset _ZN18QXmlDefaultHandler18setDocumentLocatorEP11QXmlLocator
		dd offset _ZN18QXmlDefaultHandler13startDocumentEv
		dd offset _ZN18QXmlDefaultHandler11endDocumentEv
		dd offset _ZN18QXmlDefaultHandler18startPrefixMappingERK7QStringS2_
		dd offset _ZN18QXmlDefaultHandler16endPrefixMappingERK7QString
		dd offset _ZN18QXmlDefaultHandler12startElementERK7QStringS2_S2_RK14QXmlAttributes
		dd offset _ZN18QXmlDefaultHandler10endElementERK7QStringS2_S2_
		dd offset _ZN18QXmlDefaultHandler10charactersERK7QString
		dd offset _ZN18QXmlDefaultHandler19ignorableWhitespaceERK7QString
		dd offset _ZN18QXmlDefaultHandler21processingInstructionERK7QStringS2_
		dd offset _ZN18QXmlDefaultHandler13skippedEntityERK7QString
		dd offset _ZNK18QXmlDefaultHandler11errorStringEv
		dd offset _ZN18QXmlDefaultHandler7warningERK18QXmlParseException
		dd offset _ZN18QXmlDefaultHandler5errorERK18QXmlParseException
		dd offset _ZN18QXmlDefaultHandler10fatalErrorERK18QXmlParseException
		dd offset _ZN18QXmlDefaultHandler12notationDeclERK7QStringS2_S2_
		dd offset _ZN18QXmlDefaultHandler18unparsedEntityDeclERK7QStringS2_S2_S2_
		dd offset _ZN18QXmlDefaultHandler13resolveEntityERK7QStringS2_RP15QXmlInputSource
		dd offset _ZN18QXmlDefaultHandler8startDTDERK7QStringS2_S2_
		dd offset _ZN18QXmlDefaultHandler6endDTDEv
		dd offset _ZN18QXmlDefaultHandler11startEntityERK7QString
		dd offset _ZN18QXmlDefaultHandler9endEntityERK7QString
		dd offset _ZN18QXmlDefaultHandler10startCDATAEv
		dd offset _ZN18QXmlDefaultHandler8endCDATAEv
		dd offset _ZN18QXmlDefaultHandler7commentERK7QString
		dd offset _ZN18QXmlDefaultHandler13attributeDeclERK7QStringS2_S2_S2_S2_
		dd offset _ZN18QXmlDefaultHandler18internalEntityDeclERK7QStringS2_
		dd offset _ZN18QXmlDefaultHandler18externalEntityDeclERK7QStringS2_S2_
		dd 0FFFFFFFCh
		dd offset off_6EDA65C0
		dd offset _ZThn4_N18QXmlDefaultHandlerD1Ev
		dd offset _ZThn4_N18QXmlDefaultHandlerD0Ev
		dd offset _ZThn4_N18QXmlDefaultHandler7warningERK18QXmlParseException
		dd offset _ZThn4_N18QXmlDefaultHandler5errorERK18QXmlParseException
		dd offset _ZThn4_N18QXmlDefaultHandler10fatalErrorERK18QXmlParseException
		dd offset _ZThn4_NK18QXmlDefaultHandler11errorStringEv
		dd 0FFFFFFF8h
		dd offset off_6EDA65C0
		dd offset _ZThn8_N18QXmlDefaultHandlerD1Ev
		dd offset _ZThn8_N18QXmlDefaultHandlerD0Ev
		dd offset _ZThn8_N18QXmlDefaultHandler12notationDeclERK7QStringS2_S2_
		dd offset _ZThn8_N18QXmlDefaultHandler18unparsedEntityDeclERK7QStringS2_S2_S2_
		dd offset _ZThn8_NK18QXmlDefaultHandler11errorStringEv
		dd 0FFFFFFF4h
		dd offset off_6EDA65C0
		dd offset _ZThn12_N18QXmlDefaultHandlerD1Ev
		dd offset _ZThn12_N18QXmlDefaultHandlerD0Ev
		dd offset _ZThn12_N18QXmlDefaultHandler13resolveEntityERK7QStringS2_RP15QXmlInputSource
		dd offset _ZThn12_NK18QXmlDefaultHandler11errorStringEv
		dd 0FFFFFFF0h
		dd offset off_6EDA65C0
		dd offset _ZThn16_N18QXmlDefaultHandlerD1Ev
		dd offset _ZThn16_N18QXmlDefaultHandlerD0Ev
		dd offset _ZThn16_N18QXmlDefaultHandler8startDTDERK7QStringS2_S2_
		dd offset _ZThn16_N18QXmlDefaultHandler6endDTDEv
		dd offset _ZThn16_N18QXmlDefaultHandler11startEntityERK7QString
		dd offset _ZThn16_N18QXmlDefaultHandler9endEntityERK7QString
		dd offset _ZThn16_N18QXmlDefaultHandler10startCDATAEv
		dd offset _ZThn16_N18QXmlDefaultHandler8endCDATAEv
		dd offset _ZThn16_N18QXmlDefaultHandler7commentERK7QString
		dd offset _ZThn16_NK18QXmlDefaultHandler11errorStringEv
		dd 0FFFFFFECh
		dd offset off_6EDA65C0
		dd offset _ZThn20_N18QXmlDefaultHandlerD1Ev
		dd offset _ZThn20_N18QXmlDefaultHandlerD0Ev
		dd offset _ZThn20_N18QXmlDefaultHandler13attributeDeclERK7QStringS2_S2_S2_S2_
		dd offset _ZThn20_N18QXmlDefaultHandler18internalEntityDeclERK7QStringS2_
		dd offset _ZThn20_N18QXmlDefaultHandler18externalEntityDeclERK7QStringS2_S2_
		dd offset _ZThn20_NK18QXmlDefaultHandler11errorStringEv
		align 20h
; Exported entry 597. _ZTV18QXmlEntityResolver
		public _ZTV18QXmlEntityResolver
_ZTV18QXmlEntityResolver dd 0
		dd offset off_6EDA6600
off_6EDA7348	dd offset _ZN18QXmlEntityResolverD1Ev ;	DATA XREF: .text:6ED489D9o
					; .text:6ED48A70o ...
		dd offset _ZN18QXmlEntityResolverD0Ev
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		align 10h
; Exported entry 598. _ZTV18QXmlLexicalHandler
		public _ZTV18QXmlLexicalHandler
_ZTV18QXmlLexicalHandler dd 0
		dd offset off_6EDA6608
off_6EDA7368	dd offset _ZN18QXmlLexicalHandlerD1Ev ;	DATA XREF: .text:6ED489D2o
					; .text:6ED48A69o ...
		dd offset _ZN18QXmlLexicalHandlerD0Ev
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd offset sub_6ED996D0
		dd 5 dup(0)
		dd offset off_6EDA6610
off_6EDA73A8	dd offset sub_6ED491A0	; DATA XREF: sub_6ED490B0+35o
					; sub_6ED491A0+35o ...
		dd offset sub_6ED490B0
		dd offset sub_6ED90AA0
		dd offset sub_6ED41A30
		dd offset sub_6ED418D0
		dd offset sub_6ED46860
		dd offset sub_6ED46790
		dd offset sub_6ED41860
		dd offset sub_6ED4A9D0
		dd offset sub_6ED46FF0
		dd offset sub_6ED43DF0
		dd offset sub_6ED97F30
		dd offset sub_6ED97ED0
		dd offset sub_6ED97F10
		dd offset sub_6ED98010
		dd offset sub_6ED97EE0
		dd offset sub_6ED97F80
		dd offset sub_6ED97F00
		dd offset sub_6ED97F40
		dd offset sub_6ED97F50
		dd offset sub_6ED97EC0
		dd offset sub_6ED97F20
		dd offset sub_6ED97EF0
		dd offset sub_6ED97F70
		dd offset sub_6ED98020
		dd offset sub_6ED41BA0
		dd 5 dup(0)
		dd offset off_6EDA661C
off_6EDA7428	dd offset sub_6ED91040	; DATA XREF: sub_6ED49A20+4Eo
					; .text:6ED49C8Eo ...
		dd offset sub_6ED90F40
		dd offset sub_6ED90AA0
		dd offset sub_6ED41A30
		dd offset sub_6ED418D0
		dd offset sub_6ED46860
		dd offset sub_6ED46790
		dd offset sub_6ED41860
		dd offset sub_6ED4A4B0
		dd offset sub_6ED46FF0
		dd offset sub_6ED41820
		dd offset sub_6ED97F30
		dd offset sub_6ED97ED0
		dd offset sub_6ED97F10
		dd offset sub_6ED97EB0
		dd offset sub_6ED97EE0
		dd offset sub_6ED97F80
		dd offset sub_6ED97F00
		dd offset sub_6ED97F40
		dd offset sub_6ED97F50
		dd offset sub_6ED98030
		dd offset sub_6ED97F20
		dd offset sub_6ED97EF0
		dd offset sub_6ED97F70
		dd offset sub_6ED98040
		dd offset sub_6ED55FA0
		dd 5 dup(0)
		dd offset off_6EDA6628
off_6EDA74A8	dd offset sub_6ED912C0	; DATA XREF: sub_6ED44700+21o
					; .text:6ED44751o ...
		dd offset sub_6ED91290
		dd offset sub_6ED90AA0
		dd offset sub_6ED41A30
		dd offset sub_6ED418D0
		dd offset sub_6ED46860
		dd offset sub_6ED46790
		dd offset sub_6ED41860
		dd offset sub_6ED44F00
		dd offset sub_6ED46FF0
		dd offset sub_6ED41820
		dd offset sub_6ED97F30
		dd offset sub_6ED98050
		dd offset sub_6ED97F10
		dd offset sub_6ED97EB0
		dd offset sub_6ED97EE0
		dd offset sub_6ED97F80
		dd offset sub_6ED97F00
		dd offset sub_6ED97F90
		dd offset sub_6ED97F50
		dd offset sub_6ED97EC0
		dd offset sub_6ED97F20
		dd offset sub_6ED980F0
		dd offset sub_6ED97F70
		dd offset sub_6ED98060
		dd offset sub_6ED45890
		dd 5 dup(0)
		dd offset off_6EDA6634
off_6EDA7528	dd offset sub_6ED4AE40	; DATA XREF: sub_6ED4AE40+32o
					; .text:6ED4BF02o ...
		dd offset sub_6ED4C1B0
		dd offset sub_6ED90AA0
		dd offset sub_6ED574C0
		dd offset sub_6ED571A0
		dd offset sub_6ED57960
		dd offset sub_6ED53070
		dd offset sub_6ED42760
		dd offset sub_6ED4E430
		dd offset sub_6ED46FF0
		dd offset sub_6ED41820
		dd offset sub_6ED97F30
		dd offset sub_6ED97ED0
		dd offset sub_6ED97F10
		dd offset sub_6ED97EB0
		dd offset sub_6ED98070
		dd offset sub_6ED97F80
		dd offset sub_6ED97F00
		dd offset sub_6ED97F40
		dd offset sub_6ED97F50
		dd offset sub_6ED97EC0
		dd offset sub_6ED97F20
		dd offset sub_6ED97EF0
		dd offset sub_6ED97F70
		dd offset sub_6ED98080
		dd offset sub_6ED53210
		dd 5 dup(0)
		dd offset off_6EDA6640
off_6EDA75A8	dd offset sub_6ED91300	; DATA XREF: sub_6ED5FC80+225o
					; .text:6ED60545o
		dd offset sub_6ED912E0
		dd offset sub_6ED980C0
		dd offset sub_6ED98090
		dd 3 dup(0)
		dd offset off_6EDA664C
off_6EDA75C8	dd offset sub_6ED91C30	; DATA XREF: sub_6ED445E0+21o
					; sub_6ED44610+21o ...
		dd offset sub_6ED91C00
		dd offset sub_6ED90AA0
		dd offset sub_6ED41A30
		dd offset sub_6ED418D0
		dd offset sub_6ED46860
		dd offset sub_6ED46790
		dd offset sub_6ED41860
		dd offset sub_6ED45320
		dd offset sub_6ED46FF0
		dd offset sub_6ED41820
		dd offset sub_6ED97F30
		dd offset sub_6ED97ED0
		dd offset sub_6ED97F10
		dd offset sub_6ED97EB0
		dd offset sub_6ED97EE0
		dd offset sub_6ED97F80
		dd offset sub_6ED97F00
		dd offset sub_6ED97F40
		dd offset sub_6ED97F50
		dd offset sub_6ED97EC0
		dd offset sub_6ED97F20
		dd offset sub_6ED980F0
		dd offset sub_6ED97F70
		dd offset sub_6ED98100
		dd offset sub_6ED41BA0
		align 20h
; Exported entry 599. _ZTV24QXmlStreamEntityResolver
		public _ZTV24QXmlStreamEntityResolver
_ZTV24QXmlStreamEntityResolver dd 0
		dd offset off_6EDA6658
off_6EDA7648	dd offset _ZN24QXmlStreamEntityResolverD1Ev
					; DATA XREF: _ZN24QXmlStreamEntityResolverD2Ev+4o
					; _ZN24QXmlStreamEntityResolverD1Ev+4o	...
		dd offset _ZN24QXmlStreamEntityResolverD0Ev
		dd offset _ZN24QXmlStreamEntityResolver13resolveEntityERK7QStringS2_
		dd offset _ZN24QXmlStreamEntityResolver23resolveUndeclaredEntityERK7QString
		dd 3 dup(0)
		dd offset off_6EDA6660
off_6EDA7668	dd offset sub_6ED91E20	; DATA XREF: sub_6ED444E0+21o
					; .text:6ED44531o ...
		dd offset sub_6ED91DF0
		dd offset sub_6ED90AA0
		dd offset sub_6ED41A30
		dd offset sub_6ED418D0
		dd offset sub_6ED46860
		dd offset sub_6ED46790
		dd offset sub_6ED41860
		dd offset sub_6ED44E50
		dd offset sub_6ED46FF0
		dd offset sub_6ED41820
		dd offset sub_6ED97F30
		dd offset sub_6ED97ED0
		dd offset sub_6ED97F10
		dd offset sub_6ED97EB0
		dd offset sub_6ED97EE0
		dd offset sub_6ED97F80
		dd offset sub_6ED98110
		dd offset sub_6ED97F40
		dd offset sub_6ED97F50
		dd offset sub_6ED97EC0
		dd offset sub_6ED97F20
		dd offset sub_6ED97EF0
		dd offset sub_6ED97F70
		dd offset sub_6ED98120
		dd offset sub_6ED458F0
		dd 5 dup(0)
		dd offset off_6EDA666C
off_6EDA76E8	dd offset sub_6ED91E70	; DATA XREF: sub_6ED44760+21o
					; .text:6ED447B1o ...
		dd offset sub_6ED91E40
		dd offset sub_6ED90AA0
		dd offset sub_6ED41A30
		dd offset sub_6ED418D0
		dd offset sub_6ED46860
		dd offset sub_6ED46790
		dd offset sub_6ED41860
		dd offset sub_6ED453D0
		dd offset sub_6ED46FF0
		dd offset sub_6ED41820
		dd offset sub_6ED97F30
		dd offset sub_6ED97ED0
		dd offset sub_6ED98130
		dd offset sub_6ED97EB0
		dd offset sub_6ED97EE0
		dd offset sub_6ED97F80
		dd offset sub_6ED97F00
		dd offset sub_6ED97F40
		dd offset sub_6ED97F50
		dd offset sub_6ED97EC0
		dd offset sub_6ED97F20
		dd offset sub_6ED97EF0
		dd offset sub_6ED97F70
		dd offset sub_6ED98140
		dd offset sub_6ED41BA0
		dd 5 dup(0)
		dd offset off_6EDA6678
off_6EDA7768	dd offset sub_6ED91F30	; DATA XREF: sub_6ED44480+21o
					; .text:6ED444D1o ...
		dd offset sub_6ED91F00
		dd offset sub_6ED90AA0
		dd offset sub_6ED41A30
		dd offset sub_6ED418D0
		dd offset sub_6ED46860
		dd offset sub_6ED46790
		dd offset sub_6ED41860
		dd offset sub_6ED44DA0
		dd offset sub_6ED46FF0
		dd offset sub_6ED41820
		dd offset sub_6ED97F30
		dd offset sub_6ED97ED0
		dd offset sub_6ED97F10
		dd offset sub_6ED97EB0
		dd offset sub_6ED97EE0
		dd offset sub_6ED97F80
		dd offset sub_6ED97F00
		dd offset sub_6ED97F40
		dd offset sub_6ED97F50
		dd offset sub_6ED97EC0
		dd offset sub_6ED98150
		dd offset sub_6ED97EF0
		dd offset sub_6ED97F70
		dd offset sub_6ED98160
		dd offset sub_6ED45950
		dd 5 dup(0)
		dd offset off_6EDA6684
off_6EDA77E8	dd offset sub_6ED90330	; DATA XREF: sub_6ED90310+7o
					; sub_6ED90330+4o ...
		dd offset sub_6ED90310
		dd offset sub_6ED996D0
		dd 4 dup(0)
		dd offset off_6EDA668C
off_6EDA7808	dd offset sub_6ED90380	; DATA XREF: sub_6ED90350+8o
					; sub_6ED90380+7o ...
		dd offset sub_6ED90350
		dd offset sub_6ED98620
		dd offset sub_6ED98630
		dd offset sub_6ED97100
		dd offset sub_6ED971D0
		dd offset sub_6ED97180
		dd offset sub_6ED97240
		dd offset sub_6ED972C0
		dd 6 dup(0)
		dd offset off_6EDA6698
off_6EDA7848	dd offset sub_6ED903E0	; DATA XREF: sub_6ED903C0+7o
					; sub_6ED903E0+4o ...
		dd offset sub_6ED903C0
		dd offset sub_6ED996D0
		dd 4 dup(0)
		dd offset off_6EDA66A0
off_6EDA7868	dd offset sub_6ED90430	; DATA XREF: sub_6ED90400+8o
					; sub_6ED90430+7o ...
		dd offset sub_6ED90400
		dd offset sub_6ED98620
		dd offset sub_6ED98630
		dd offset sub_6ED97100
		dd offset sub_6ED971D0
		dd offset sub_6ED972E0
		dd offset sub_6ED97370
		dd offset sub_6ED97490
		dd 6 dup(0)
		dd offset off_6EDA66AC
off_6EDA78A8	dd offset sub_6ED904A0	; DATA XREF: sub_6ED90470+8o
					; sub_6ED904A0+7o ...
		dd offset sub_6ED90470
		dd offset sub_6ED98620
		dd offset sub_6ED98630
		dd offset sub_6ED97100
		dd offset sub_6ED971D0
		dd offset sub_6ED97530
		dd offset sub_6ED97750
		dd offset sub_6ED97CC0
		dd 6 dup(0)
		dd offset off_6EDA66B8
off_6EDA78E8	dd offset sub_6ED96E10	; DATA XREF: sub_6ED96DE0+8o
					; sub_6ED96E10+7o ...
		dd offset sub_6ED96DE0
		dd offset sub_6ED985B0
		dd 2 dup(0)
		dd offset off_6EDA66C4
off_6EDA7900	dd offset sub_6ED96E60	; DATA XREF: sub_6ED96D20+6Ao
					; sub_6ED96E30+8o ...
		dd offset sub_6ED96E30
		dd offset sub_6ED985C0
		dd 2 dup(0)
		dd offset off_6EDA66D0
off_6EDA7918	dd offset sub_6ED98690	; DATA XREF: sub_6ED9909D+C2o
		dd offset sub_6ED98670
		dd offset sub_6ED985D0
		dd 2 dup(0)
		dd offset off_6EDA66DC
off_6EDA7930	dd offset sub_6ED986E0	; DATA XREF: sub_6ED986B0+8o
					; sub_6ED986E0+7o ...
		dd offset sub_6ED986B0
		dd offset sub_6ED985E0
		dd 2 dup(0)
		dd offset off_6EDA66E8
off_6EDA7948	dd offset sub_6ED98740	; DATA XREF: sub_6ED98670+7o
					; sub_6ED98690+4o ...
		dd offset sub_6ED98720
		dd offset sub_6ED985F0
		dd 4 dup(0)
		dd offset off_6EDA66F0
off_6EDA7968	dd offset sub_6ED98780	; DATA XREF: sub_6ED98760+7o
					; sub_6ED98780+4o ...
		dd offset sub_6ED98760
		dd offset sub_6ED98620
		dd offset sub_6ED98630
		dd offset sub_6ED98600
		dd offset sub_6ED98610
dword_6EDA7980	dd 0			; DATA XREF: sub_6ED8EA60+57o
					; sub_6ED8EA60+5Co ...
dword_6EDA7984	dd 0			; DATA XREF: sub_6ED8EA60+7Ar
dword_6EDA7988	dd 0			; DATA XREF: sub_6ED8EA60+84r
dword_6EDA798C	dd 1Dh dup(0)		; DATA XREF: sub_6ED8EA60+8Do
		align 800h
_rdata		ends

; Section 4. (virtual address 00068000)
; Virtual size			: 000003C8 (	968.)
; Section size in file		: 00000000 (	  0.)
; Offset to raw	data for section: 00000000
; Flags	C0600080: Bss Readable Writable
; Alignment	: 32 bytes
; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
; Segment alignment '32byte' can not be represented in assembly
_bss		segment	para public 'BSS' use32
		assume cs:_bss
		;org 6EDA8000h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
dword_6EDA8000	dd ?			; DATA XREF: sub_6ED41040+Dr
					; sub_6ED41040+22w ...
dword_6EDA8004	dd ?			; DATA XREF: _ZN18QDomImplementation17invalidDataPolicyEvr
					; _ZN18QDomImplementation20setInvalidDataPolicyENS_17InvalidDataPolicyE+4w ...
byte_6EDA8008	db ?			; DATA XREF: sub_6ED54200+3r
					; sub_6ED61480+A3Ew ...
		align 4
TlsIndex	dd 4 dup(?)		; DATA XREF: .tls:TlsIndex_ptro
dword_6EDA801C	dd ?			; DATA XREF: DllEntryPoint+7w
dword_6EDA8020	dd ?			; DATA XREF: sub_6ED8E910+2Cr
					; sub_6ED8E910+65r ...
dword_6EDA8024	dd ?			; DATA XREF: sub_6ED8E910:loc_6ED8E930r
					; sub_6ED8E910:loc_6ED8E9D2w ...
dword_6EDA8028	dd ?			; DATA XREF: sub_6ED8EA60+9r
					; sub_6ED8EA60:loc_6ED8EA80w
dword_6EDA802C	dd ?			; DATA XREF: sub_6ED8ED70+3r
					; sub_6ED8ED70:loc_6ED8ED81w
		align 20h
dword_6EDA8040	dd ?			; DATA XREF: .text:6ED8EDC2w
					; .rdata:off_6EDA64F4o
dword_6EDA8044	dd ?			; DATA XREF: .text:6ED8EDCCw
		dd ?
dword_6EDA804C	dd ?			; DATA XREF: .text:6ED8EDDBw
		dd 14h dup(?)
dword_6EDA80A0	dd 2Bh dup(?)		; DATA XREF: .rdata:6EDA64F8o
dword_6EDA814C	dd ?			; DATA XREF: .text:6ED8EDEAw
		dd 2 dup(?)
dword_6EDA8158	dd ?			; DATA XREF: .text:6ED8EDD6w
		dd 2 dup(?)
dword_6EDA8164	dd ?			; DATA XREF: .text:6ED8EDBCw
		dd 86h dup(?)
dword_6EDA8380	dd ?			; DATA XREF: sub_6ED8EF10+7r
					; sub_6ED8EF90+26r ...
; struct _RTL_CRITICAL_SECTION CriticalSection
CriticalSection	_RTL_CRITICAL_SECTION <?> ; DATA XREF: sub_6ED8EF10:loc_6ED8EF28o
					; sub_6ED8EF10:loc_6ED8EF75o ...
dword_6EDA839C	dd ?			; DATA XREF: sub_6ED8EF10+25r
					; .text:6ED8F045r ...
		dd ?
dword_6EDA83A4	dd ?			; DATA XREF: .text:6ED8F466r
					; .text:6ED8F4FAw ...
dword_6EDA83A8	dd ?			; DATA XREF: sub_6ED41000+21w
					; sub_6ED41040+143r ...
dword_6EDA83AC	dd ?			; DATA XREF: sub_6ED41000+1Cw
					; sub_6ED41040:loc_6ED41170r ...
dword_6EDA83B0	dd ?			; DATA XREF: sub_6ED41040+4Co
					; sub_6ED41040+C1o ...
dword_6EDA83B4	dd ?			; DATA XREF: sub_6ED41040+5Fr
					; sub_6ED41040:loc_6ED41116r ...
		align 1000h
_bss		ends

;
; Imports from QtCore4.dll
;
; Section 6. (virtual address 00071000)
; Virtual size			: 00002160 (   8544.)
; Section size in file		: 00002200 (   8704.)
; Offset to raw	data for section: 0006E200
; Flags	C0300040: Data Readable	Writable
; Alignment	: 4 bytes
; ===========================================================================

; Segment type:	Externs
; _idata
		extrn _ZN7QString11shared_nullE:dword ;	DATA XREF: .text:6ED41581r
					; .text:6ED415E1r ...
		extrn _ZN9QListData11shared_nullE:dword	; DATA XREF: .text:6ED415A6r
					; .text:6ED41606r ...
		extrn _ZN9QHashData11shared_nullE:dword	; DATA XREF: .text:6ED42614r
					; .text:6ED42644r ...
		extrn _Z5qFreePv:dword	; CODE XREF: sub_6ED4D770+250p
					; sub_6ED52990+53Ap ...
		extrn _ZN7QString4freeEPNS_4DataE:dword	; CODE XREF: sub_6ED46FF0+AAp
					; _ZNK8QDomNode22previousSiblingElementERK7QString+19Dp ...
		extrn _ZN7QStringaSERKS_:dword ; CODE XREF: sub_6ED43F20+15p
					; sub_6ED43F60+23p ...
		extrn _Z8qWarningPKcz:dword
					; CODE XREF: _ZN12QDomDocument11elementByIdERK7QString+Fp
					; _ZN8QDomNode11appendChildERKS_+47p ...
		extrn _ZNK7QStringeqERK13QLatin1String:dword
					; CODE XREF: _ZNK18QDomImplementation10hasFeatureERK7QStringS2_+2Cp
					; _ZNK18QDomImplementation10hasFeatureERK7QStringS2_+63p ...
		extrn _ZNK7QString3midEii:dword	; CODE XREF: .text:6ED457C6p
					; _ZN17QDomCharacterData13substringDataEmm+2Cp	...
		extrn _ZN7QString6removeEii:dword ; CODE XREF: sub_6ED52370+127p
					; sub_6ED52640+127p ...
		extrn _ZN11QTextStreamlsEPKc:dword ; CODE XREF:	sub_6ED45890+24p
					; sub_6ED45950+28p ...
		extrn _ZN11QTextStreamlsERK7QString:dword ; CODE XREF: sub_6ED45890+30p
					; sub_6ED458F0+30p ...
		extrn _ZN11QTextStreamlsEc:dword ; CODE	XREF: sub_6ED458F0+24p
					; sub_6ED45950+4Ap ...
		extrn _Z4endlR11QTextStream:dword ; CODE XREF: sub_6ED500A0+14Dp
					; sub_6ED51550+6B7p ...
		extrn _ZN7QString7replaceEiiRKS_:dword ; CODE XREF: sub_6ED480B0+1EDp
					; sub_6ED480B0+254p ...
		extrn _ZNK7QStringeqERKS_:dword	; CODE XREF: .text:6ED45A4Dp
					; sub_6ED45F90+76p ...
		extrn _Z5qHashRK7QString:dword ; CODE XREF: sub_6ED98290+24p
					; sub_6ED98330+24p ...
		extrn _ZN9QHashData14detach_helper2EPFvPNS_4NodeEPvEPFvS1_Eii:dword
					; CODE XREF: sub_6ED51550+A1Bp
					; sub_6ED929C0+34p ...
		extrn _ZN9QHashData11free_helperEPFvPNS_4NodeEE:dword
					; CODE XREF: sub_6ED46A30+12Dp
					; sub_6ED46A30+178p ...
		extrn _ZN9QHashData12allocateNodeEi:dword ; CODE XREF: sub_6ED4E060+167p
					; sub_6ED4E060+250p ...
		extrn _ZN9QHashData6rehashEi:dword ; CODE XREF:	sub_6ED4E060+2FDp
					; sub_6ED4E060+31Dp ...
		extrn _ZN9QHashData8nextNodeEPNS_4NodeE:dword ;	CODE XREF: sub_6ED45F90+53p
					; sub_6ED46DB0+100p ...
		extrn _ZN7QString6appendERKS_:dword ; CODE XREF: sub_6ED46FF0+8Ap
					; sub_6ED47E70+94p ...
		extrn _ZN7QString6insertEiPK5QChari:dword ; CODE XREF: sub_6ED46510+29p
					; _ZN16QXmlStreamReader28addExtraNamespaceDeclarationERK30QXmlStreamNamespaceDeclaration+118p ...
		extrn _ZN9QHashData12previousNodeEPNS_4NodeE:dword
					; DATA XREF: sub_6ED46570+66r
		extrn _ZN7QString7reallocEi:dword ; CODE XREF: sub_6ED6F330+460p
					; sub_6ED6F330+77Bp ...
		extrn _ZN7QString7reallocEv:dword ; CODE XREF: sub_6ED46640+B3p
					; sub_6ED480B0+407p ...
		extrn _ZN7QString6resizeEi:dword ; CODE	XREF: sub_6ED58460+6Ep
					; sub_6ED59190+36p ...
		extrn _ZN10QByteArrayC1EPKc:dword
					; CODE XREF: _ZN16QXmlStreamReader7addDataEPKc+43p
					; _ZN16QXmlStreamWriter8setCodecEPKc+43p ...
		extrn _ZN10QTextCodec12codecForNameERK10QByteArray:dword
					; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+21Fp
					; _ZN16QXmlStreamWriter8setCodecEPKc+56p ...
		extrn _ZNK7QString7indexOfE5QChariN2Qt15CaseSensitivityE:dword
					; CODE XREF: sub_6ED46640+59p
					; sub_6ED53610+63p ...
		extrn _ZN7QStringC1EiN2Qt14InitializationE:dword
					; CODE XREF: sub_6ED46640+94p
					; sub_6ED480B0+3E6p ...
		extrn _ZN9QListData6detachEi:dword ; CODE XREF:	sub_6ED933E0+1Ap
					; sub_6ED93680+52p ...
		extrn _ZN9QListData11detach_growEPii:dword ; CODE XREF:	sub_6ED934B0+71p
					; sub_6ED93A20+77p ...
		extrn _ZN9QListData6appendEv:dword ; CODE XREF:	sub_6ED934B0+15Bp
					; sub_6ED93A20+28Dp ...
		extrn _ZN9QHashData8freeNodeEPv:dword ;	DATA XREF: sub_6ED92EA0+A8r
		extrn _ZN7QString17fromLatin1_helperEPKci:dword
					; CODE XREF: sub_6ED47E70+4Bp
					; sub_6ED480B0+1C1p ...
		extrn _ZNK11QTextStream5codecEv:dword ;	CODE XREF: sub_6ED480B0+71p
					; sub_6ED561D0+55p
					; DATA XREF: ...
		extrn _ZNK10QTextCodec9canEncodeE5QChar:dword ;	CODE XREF: sub_6ED480B0+10Ep
					; DATA XREF: sub_6ED480B0+10Er
		extrn _ZN7QString6numberEii:dword ; CODE XREF: sub_6ED480B0+3B4p
					; sub_6ED480B0+511p ...
		extrn _ZN7QString10fromLatin1EPKci:dword ; CODE	XREF: sub_6ED4C6B0+8Dp
					; sub_6ED4C7F0+82p ...
		extrn _ZN7QString8truncateEi:dword ; CODE XREF:	sub_6ED4CC90+122p
					; DATA XREF: sub_6ED4CC90+122r
		extrn _ZN7QString6setNumEdci:dword
					; CODE XREF: _ZN11QDomElement12setAttributeERK7QStringf+6Ap
					; _ZN11QDomElement12setAttributeERK7QStringd+19Bp ...
		extrn _ZN7QString6setNumEyi:dword
					; CODE XREF: _ZN11QDomElement12setAttributeERK7QStringy+75p
					; _ZN11QDomElement14setAttributeNSE7QStringRKS0_y+75p
					; DATA XREF: ...
		extrn _ZN7QString6setNumExi:dword
					; CODE XREF: _ZN11QDomElement12setAttributeERK7QStringx+75p
					; _ZN11QDomElement14setAttributeNSE7QStringRKS0_x+75p
					; DATA XREF: ...
		extrn _ZN7QStringC1Ei5QChar:dword ; CODE XREF: sub_6ED500A0+76p
					; sub_6ED51550+8Bp ...
		extrn _ZNK7QString8endsWithERK5QCharN2Qt15CaseSensitivityE:dword
					; CODE XREF: sub_6ED500A0+105p
					; DATA XREF: sub_6ED500A0+105r
		extrn _ZN9QXmlUtils6isCharE5QChar:dword	; DATA XREF: sub_6ED50340+69r
		extrn _ZN7QString6appendE5QChar:dword ;	CODE XREF: sub_6ED50340+CDp
					; sub_6ED53CB0+26Fp
					; DATA XREF: ...
		extrn _Z9qsnprintfPcjPKcz:dword
					; CODE XREF: _ZN11QDomElement12setAttributeERK7QStringd+95p
					; DATA XREF: _ZN11QDomElement12setAttributeERK7QStringd+95r
		extrn _ZN7QBufferC1EP7QObject:dword
					; CODE XREF: _ZN12QDomDocument10setContentERK10QByteArraybP7QStringPiS5_+58p
					; DATA XREF: _ZN12QDomDocument10setContentERK10QByteArraybP7QStringPiS5_+58r
		extrn _ZN7QBuffer7setDataERK10QByteArray:dword
					; CODE XREF: _ZN12QDomDocument10setContentERK10QByteArraybP7QStringPiS5_+72p
					; DATA XREF: _ZN12QDomDocument10setContentERK10QByteArraybP7QStringPiS5_+72r
		extrn _ZN7QBufferD1Ev:dword
					; CODE XREF: _ZN12QDomDocument10setContentERK10QByteArraybP7QStringPiS5_+E4p
					; sub_6ED510E2+35p
					; DATA XREF: ...
		extrn _ZNK7QString7indexOfERK13QLatin1StringiN2Qt15CaseSensitivityE:dword
					; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+46Fp
					; DATA XREF: sub_6ED52370+FBr ...
		extrn _ZNK7QString10startsWithERK5QCharN2Qt15CaseSensitivityE:dword
					; CODE XREF: sub_6ED52990+63p
					; DATA XREF: sub_6ED52990+63r
		extrn _ZNK7QString6toUtf8Ev:dword ; CODE XREF: sub_6ED52990+3B6p
					; _ZNK12QDomDocument11toByteArrayEi+66p
					; DATA XREF: ...
		extrn _ZN10QByteArray7reallocEi:dword ;	CODE XREF: sub_6ED52990+3F3p
					; sub_6ED561D0+52Fp ...
		extrn _ZN10QByteArray7replaceEiiPKc:dword ; CODE XREF: sub_6ED52990+483p
					; DATA XREF: sub_6ED52990+40Dr	...
		extrn _ZN11QTextStreamlsERK10QByteArray:dword ;	CODE XREF: sub_6ED52990+4EBp
					; sub_6ED561D0+91p
					; DATA XREF: ...
		extrn _ZNK7QString4leftEi:dword	; CODE XREF: sub_6ED53610+90p
					; _ZNK20QXmlNamespaceSupport9splitNameERK7QStringRS0_S3_+80p ...
		extrn _ZN9QXmlUtils8isLetterE5QChar:dword ; CODE XREF: sub_6ED53CB0+14Cp
					; DATA XREF: sub_6ED53CB0+14Cr
		extrn _ZN9QXmlUtils10isNameCharE5QChar:dword ; CODE XREF: sub_6ED53CB0+1ADp
					; DATA XREF: sub_6ED53CB0+1ADr
		extrn _ZN11QTextStream8setCodecEP10QTextCodec:dword
					; CODE XREF: sub_6ED561D0+248p
					; DATA XREF: sub_6ED561D0+248r
		extrn _ZN7QRegExpC1ERK7QStringN2Qt15CaseSensitivityENS_13PatternSyntaxE:dword
					; CODE XREF: sub_6ED561D0+483p
					; sub_6ED5B910+C9p
					; DATA XREF: ...
		extrn _ZNK7QRegExp7indexInERK7QStringiNS_9CaretModeE:dword
					; CODE XREF: sub_6ED561D0+4BEp
					; DATA XREF: sub_6ED561D0+4BEr
		extrn _ZN7QRegExp3capEi:dword ;	CODE XREF: sub_6ED561D0+4D9p
					; sub_6ED561D0+5FEp
					; DATA XREF: ...
		extrn _ZNK7QString8toLatin1Ev:dword ; CODE XREF: sub_6ED561D0+504p
					; _ZNK16QXmlSimpleReader7featureERK7QStringPb+135p ...
		extrn _ZN7QRegExpD1Ev:dword ; CODE XREF: sub_6ED561D0+57Cp
					; sub_6ED56833+15Bp ...
		extrn _ZN11QTextStreamC1EP7QString6QFlagsIN9QIODevice12OpenModeFlagEE:dword
					; CODE XREF: _ZNK12QDomDocument8toStringEi+61p
					; DATA XREF: _ZNK12QDomDocument8toStringEi+61r
		extrn _ZN11QTextStreamD1Ev:dword
					; CODE XREF: _ZNK12QDomDocument8toStringEi+94p
					; sub_6ED56B7C+1Cp
					; DATA XREF: ...
		extrn _ZN9QXmlUtils10isPublicIDERK7QString:dword
					; CODE XREF: _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+102p
					; sub_6ED83560+25C1p
					; DATA XREF: ...
		extrn _ZN7QString6removeE5QCharN2Qt15CaseSensitivityE:dword
					; CODE XREF: _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+19Dp
					; _ZN18QDomImplementation18createDocumentTypeERK7QStringS2_S2_+331p
					; DATA XREF: ...
		extrn _ZN11QVectorData4freeEPS_i:dword ; CODE XREF: sub_6ED96590+C7p
					; DATA XREF: sub_6ED946D0:loc_6ED94702r ...
		extrn _ZN11QVectorData8allocateEii:dword ; CODE	XREF: sub_6ED94910+88p
					; sub_6ED94CE0+85p ...
		extrn _Z9qBadAllocv:dword ; CODE XREF: sub_6ED72BF0:loc_6ED72C7Bp
					; sub_6ED72C90:loc_6ED72D16p ...
		extrn _ZN11QVectorData4growEiiib:dword ; CODE XREF: sub_6ED58550+50p
					; _ZN20QXmlNamespaceSupport10popContextEv+178p	...
		extrn _ZNK7QStringltERKS_:dword	; CODE XREF: sub_6ED58FC0+3Bp
					; sub_6ED58FC0+6Cp ...
		extrn _ZN11QVectorData11shared_nullE:dword ; DATA XREF:	sub_6ED58C70+40r
					; sub_6ED58C70+119r ...
		extrn _ZN8QMapData16continueFreeDataEi:dword ; CODE XREF: sub_6ED92100+115p
					; sub_6ED92450+E5p
					; DATA XREF: ...
		extrn _ZN8QMapData10createDataEi:dword ; CODE XREF: sub_6ED91F50+41p
					; sub_6ED922B0+41p ...
		extrn _ZN8QMapData11node_createEPPNS_4NodeEii:dword
					; CODE XREF: _ZN20QXmlNamespaceSupportC2Ev+19Dp
					; _ZN20QXmlNamespaceSupport9setPrefixERK7QStringS2_+1BAp ...
		extrn _ZN8QMapData11shared_nullE:dword
					; DATA XREF: _ZN20QXmlNamespaceSupport10popContextEv+35r
					; _ZN20QXmlNamespaceSupportC2Ev+58r ...
		extrn _ZN11QVectorData10reallocateEPS_iii:dword
					; CODE XREF: sub_6ED94910+25Ep
					; sub_6ED94CE0+267p ...
		extrn _ZNK7QString7indexOfERKS_iN2Qt15CaseSensitivityE:dword
					; CODE XREF: sub_6ED59E30+26Ap
					; DATA XREF: sub_6ED59E30+26Ar
		extrn _ZNK7QString3argERKS_iRK5QChar:dword ; CODE XREF:	sub_6ED59E30+E07p
					; sub_6ED7BA60+4C4p ...
		extrn _ZN10QByteArray11shared_nullE:dword
					; DATA XREF: _ZN15QXmlInputSource9fetchDataEv+33r
					; _ZN15QXmlInputSource4initEv+54r ...
		extrn _ZNK9QIODevice6isOpenEv:dword
					; CODE XREF: _ZN15QXmlInputSource9fetchDataEv+61p
					; _ZN15QXmlInputSourceC1EP9QIODevice+29p ...
		extrn _ZN10QByteArray6resizeEi:dword
					; CODE XREF: _ZN15QXmlInputSource9fetchDataEv+84p
					; _ZN15QXmlInputSource9fetchDataEv+129p ...
		extrn _ZN9QIODevice4readEPcx:dword
					; CODE XREF: _ZN15QXmlInputSource9fetchDataEv+D9p
					; _ZN15QXmlInputSource9fetchDataEv+31Dp ...
		extrn _ZNK11QTextStream6deviceEv:dword
					; CODE XREF: _ZN15QXmlInputSource9fetchDataEv+21Ap
					; DATA XREF: _ZN15QXmlInputSource9fetchDataEv+21Ar
		extrn _ZNK11QTextStream6stringEv:dword
					; CODE XREF: _ZN15QXmlInputSource9fetchDataEv+23Fp
					; _ZN15QXmlInputSource9fetchDataEv+259p
					; DATA XREF: ...
		extrn _ZN10QByteArrayC1EPKci:dword
					; CODE XREF: _ZN15QXmlInputSource9fetchDataEv+277p
					; DATA XREF: _ZN15QXmlInputSource9fetchDataEv+277r
		extrn _ZN10QByteArrayaSERKS_:dword
					; CODE XREF: _ZN15QXmlInputSource9fetchDataEv+291p
					; _ZN16QXmlStreamWriter23setAutoFormattingIndentEi+82p	...
		extrn _ZNK7QString10startsWithERKS_N2Qt15CaseSensitivityE:dword
					; CODE XREF: sub_6ED5B910+6Dp
					; _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+1B3p
					; DATA XREF: ...
		extrn _ZN7QString7replaceERK7QRegExpRKS_:dword
					; CODE XREF: sub_6ED5B910+11Ap
					; DATA XREF: sub_6ED5B910+11Ar
		extrn _ZN12QTextDecoderD1Ev:dword
					; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+75p
					; _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+289p ...
		extrn _ZN12QTextDecoder9toUnicodeEPKci:dword
					; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+D5p
					; _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+2F7p ...
		extrn _ZNK10QTextCodec11makeDecoderEv:dword
					; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+2B9p
					; _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+6D5p ...
		extrn _ZN10QByteArray6appendERKS_:dword
					; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+380p
					; sub_6ED81C20+3F8p
					; DATA XREF: ...
		extrn _ZN10QByteArray5clearEv:dword
					; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+64Dp
					; _ZN15QXmlInputSource4initEv+D7p ...
		extrn _ZN10QTextCodec11codecForMibEi:dword
					; CODE XREF: _ZN15QXmlInputSource11fromRawDataERK10QByteArrayb+6C0p
					; sub_6ED75B20+BDp ...
		extrn _ZN9QIODevice18setTextModeEnabledEb:dword
					; DATA XREF: _ZN15QXmlInputSourceC1EP9QIODevice+59r
					; _ZN15QXmlInputSourceC2EP9QIODevice+59r
		extrn _ZN7QString7replaceE5QCharRK13QLatin1StringN2Qt15CaseSensitivityE:dword
					; CODE XREF: sub_6ED61050+82p
					; sub_6ED61050+A1p
					; DATA XREF: ...
		extrn _ZNK7QString10simplifiedEv:dword ; CODE XREF: sub_6ED61480+EF8p
					; sub_6ED624E0+259p ...
		extrn _ZN9QtPrivate20QStringList_containsEPK11QStringListRK7QStringN2Qt15CaseSensitivityE:dword
					; CODE XREF: sub_6ED630C0+7F3p
					; DATA XREF: sub_6ED630C0+7F3r
		extrn _ZNK5QChar8categoryEv:dword ; CODE XREF: sub_6ED65310+28Dp
					; sub_6ED656F0+2BDp ...
		extrn _ZNK7QString6toUIntEPbi:dword ; CODE XREF: sub_6ED68110+4A4p
					; sub_6ED7B830+ADp ...
		extrn _ZNK7QString7toLowerEv:dword ; CODE XREF:	sub_6ED69420+4D7p
					; DATA XREF: sub_6ED69420+4D7r
		extrn _ZNK7QString3argExiiRK5QChar:dword ; CODE	XREF: sub_6ED6E7C0+976p
					; DATA XREF: sub_6ED6E7C0+976r
		extrn _ZN7QString4growEi:dword ; CODE XREF: sub_6ED6F330+450p
					; sub_6ED6F330+76Bp ...
		extrn _ZN7QString6appendERK13QLatin1String:dword
					; CODE XREF: sub_6ED6F330+70Bp
					; sub_6ED6F330+731p ...
		extrn _Z8qReallocPvj:dword ; CODE XREF:	sub_6ED72BF0+39p
					; sub_6ED72C90+3Dp ...
		extrn _ZNK10QByteArray5countEc:dword
					; CODE XREF: _ZNK16QXmlStreamWriter20autoFormattingIndentEv+29p
					; _ZNK16QXmlStreamWriter20autoFormattingIndentEv+38p
					; DATA XREF: ...
		extrn _ZeqRK7QStringRK10QStringRef:dword
					; CODE XREF: _ZNK20QXmlStreamAttributes5valueERK7QStringRK13QLatin1String+D1p
					; sub_6ED802C0+409p
					; DATA XREF: ...
		extrn _ZeqRK13QLatin1StringRK10QStringRef:dword
					; CODE XREF: sub_6ED7BA60+86p
					; sub_6ED7BA60+392p ...
		extrn _ZN16QCoreApplication9translateEPKcS1_S1_NS_8EncodingE:dword
					; CODE XREF: sub_6ED71920+25p
					; sub_6ED77250+F8p ...
		extrn _ZNK10QTextCodec11fromUnicodeERK7QString:dword
					; CODE XREF: _ZN16QXmlStreamReader7addDataERK7QString+56p
					; _ZN16QXmlStreamReaderC1ERK7QString+7Ep ...
		extrn _ZN10QByteArrayC1Eic:dword
					; CODE XREF: _ZN16QXmlStreamWriter23setAutoFormattingIndentEi+65p
					; sub_6ED75B20+64p ...
		extrn _ZN12QTextEncoder11fromUnicodeEPK5QChari:dword
					; CODE XREF: sub_6ED72900+85p
					; DATA XREF: sub_6ED72900+85r
		extrn _ZN9QIODevice5writeEPKcx:dword ; CODE XREF: sub_6ED72900+B8p
					; sub_6ED72A90+A5p ...
		extrn _ZNK10QStringRef8appendToEP7QString:dword
					; CODE XREF: sub_6ED72900+136p
					; DATA XREF: sub_6ED72900+136r
		extrn _ZN12QTextEncoder11fromUnicodeERK7QString:dword
					; CODE XREF: sub_6ED72A90+72p
					; sub_6ED73BB0+6Dp
					; DATA XREF: ...
		extrn _ZN12QTextEncoderD1Ev:dword
					; CODE XREF: _ZN16QXmlStreamWriter8setCodecEP10QTextCodec+2Ap
					; _ZN16QXmlStreamWriterD1Ev+60p ...
		extrn _ZNK10QTextCodec11makeEncoderE6QFlagsINS_14ConversionFlagEE:dword
					; CODE XREF: _ZN16QXmlStreamWriter8setCodecEP10QTextCodec+4Bp
					; sub_6ED75B20+DAp ...
		extrn _ZNK5QChar7isSpaceEv:dword ; CODE	XREF: sub_6ED73E40+14Dp
					; DATA XREF: sub_6ED73E40+14Dr
		extrn _ZNK7QString3argE5QChariRKS0_:dword ; CODE XREF: sub_6ED77250+12Dp
					; DATA XREF: sub_6ED77250+12Dr
		extrn _ZN7QString7replaceERK13QLatin1StringS2_N2Qt15CaseSensitivityE:dword
					; CODE XREF: _ZN16QXmlStreamWriter10writeCDATAERK7QString+8Dp
					; DATA XREF: _ZN16QXmlStreamWriter10writeCDATAERK7QString+8Dr
		extrn _ZNK10QStringRef8toStringEv:dword	; CODE XREF: sub_6ED7B830+88p
					; sub_6ED7B830+184p ...
		extrn _ZN9QXmlUtils9isEncNameERK7QString:dword
					; CODE XREF: sub_6ED7BA60+454p
					; DATA XREF: sub_6ED7BA60+454r
		extrn _ZN12QTextDecoder9toUnicodeEP7QStringPKci:dword
					; CODE XREF: sub_6ED7BA60+6DEp
					; sub_6ED81C20+18Bp
					; DATA XREF: ...
		extrn _ZN7QBufferC1EP10QByteArrayP7QObject:dword
					; CODE XREF: _ZN16QXmlStreamWriterC1EP10QByteArray+95p
					; _ZN16QXmlStreamWriterC2EP10QByteArray+95p
					; DATA XREF: ...
		extrn _ZeqRK10QStringRefS1_:dword ; CODE XREF: sub_6ED7EB70+11Ep
					; sub_6ED7EB70+922p ...
		extrn _ZNK12QTextDecoder10hasFailureEv:dword ; CODE XREF: sub_6ED81C20+326p
					; sub_6ED83560+ABAp
					; DATA XREF: ...
		extrn _ZNK7QString7compareERK13QLatin1StringN2Qt15CaseSensitivityE:dword
					; CODE XREF: sub_6ED83560+1466p
					; sub_6ED83560+4AC9p
					; DATA XREF: ...
		extrn _ZN7QString4chopEi:dword ; CODE XREF: sub_6ED83560+2150p
					; sub_6ED83560+2C60p ...
		extrn _ZN7QString8fromUcs4EPKji:dword ;	CODE XREF: sub_6ED83560+2BF7p
					; DATA XREF: sub_6ED83560+2BF7r
		extrn _ZN9QXmlUtils8isNCNameERK10QStringRef:dword
					; CODE XREF: sub_6ED83560+33F1p
					; sub_6ED83560+4579p ...

;
; Imports from KERNEL32.dll
;
; BOOL __stdcall CloseHandle(HANDLE hObject)
		extrn CloseHandle:dword	; CODE XREF: .text:6ED8F8DDp
					; DATA XREF: .text:6ED8F8DDr
; HANDLE __stdcall CreateSemaphoreA(LPSECURITY_ATTRIBUTES lpSemaphoreAttributes, LONG lInitialCount, LONG lMaximumCount, LPCSTR	lpName)
		extrn CreateSemaphoreA:dword ; CODE XREF: .text:6ED8F87Bp
					; sub_6ED8F890+2Dp
					; DATA XREF: ...
; void __stdcall DeleteCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
		extrn DeleteCriticalSection:dword ; CODE XREF: sub_6ED8EF90+41p
					; DATA XREF: sub_6ED8EF90+41r
; void __stdcall EnterCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
		extrn EnterCriticalSection:dword ; CODE	XREF: sub_6ED8EF10+1Fp
					; .text:6ED8F03Fp ...
; HANDLE __stdcall GetCurrentProcess()
		extrn GetCurrentProcess:dword ;	CODE XREF: .text:6ED8EE18p
					; DATA XREF: .text:6ED8EE18r
; DWORD	__stdcall GetCurrentProcessId()
		extrn GetCurrentProcessId:dword	; CODE XREF: sub_6ED8EE40+6Cp
					; DATA XREF: sub_6ED8EE40+6Cr
; DWORD	__stdcall GetCurrentThreadId()
		extrn GetCurrentThreadId:dword ; CODE XREF: sub_6ED8EE40+74p
					; .text:6ED8F728p ...
; DWORD	__stdcall GetLastError()
		extrn GetLastError:dword ; CODE	XREF: sub_6ED8EF10+4Cp
					; sub_6ED8F920+Bp
					; DATA XREF: ...
; HMODULE __stdcall GetModuleHandleA(LPCSTR lpModuleName)
		extrn GetModuleHandleA:dword ; CODE XREF: sub_6ED41430+16p
					; .text:6ED8F4F1p
					; DATA XREF: ...
; FARPROC __stdcall GetProcAddress(HMODULE hModule, LPCSTR lpProcName)
		extrn GetProcAddress:dword ; CODE XREF:	sub_6ED41430+35p
					; DATA XREF: sub_6ED41430+35r
; void __stdcall GetSystemTimeAsFileTime(LPFILETIME lpSystemTimeAsFileTime)
		extrn GetSystemTimeAsFileTime:dword ; CODE XREF: sub_6ED8EE40+57p
					; DATA XREF: sub_6ED8EE40+57r
; DWORD	__stdcall GetTickCount()
		extrn GetTickCount:dword ; CODE	XREF: sub_6ED8EE40+7Cp
					; DATA XREF: sub_6ED8EE40+7Cr
; void __stdcall InitializeCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
		extrn InitializeCriticalSection:dword ;	CODE XREF: sub_6ED8EF90+77p
					; DATA XREF: sub_6ED8EF90+77r
; void __stdcall LeaveCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
		extrn LeaveCriticalSection:dword ; CODE	XREF: sub_6ED8EF10+6Cp
					; .text:6ED8F076p ...
; HMODULE __stdcall LoadLibraryW(LPCWSTR lpLibFileName)
		extrn LoadLibraryW:dword ; CODE	XREF: .text:6ED8F50Cp
					; DATA XREF: .text:6ED8F50Cr
; BOOL __stdcall QueryPerformanceCounter(LARGE_INTEGER *lpPerformanceCount)
		extrn QueryPerformanceCounter:dword ; CODE XREF: sub_6ED8EE40+8Bp
					; DATA XREF: sub_6ED8EE40+8Br
; BOOL __stdcall ReleaseSemaphore(HANDLE hSemaphore, LONG lReleaseCount, LPLONG	lpPreviousCount)
		extrn ReleaseSemaphore:dword ; CODE XREF: .text:6ED8F6ACp
					; sub_6ED8F6D0+31p
					; DATA XREF: ...
; void __stdcall SetLastError(DWORD dwErrCode)
		extrn SetLastError:dword ; CODE	XREF: sub_6ED8F920+28p
					; DATA XREF: sub_6ED8F920+28r
; LPTOP_LEVEL_EXCEPTION_FILTER __stdcall SetUnhandledExceptionFilter(LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter)
		extrn SetUnhandledExceptionFilter:dword	; CODE XREF: .text:6ED8EDFFp
					; DATA XREF: .text:6ED8EDFFr
; void __stdcall Sleep(DWORD dwMilliseconds)
		extrn Sleep:dword	; CODE XREF: sub_6ED41040+37p
					; sub_6ED41040+B0p ...
; BOOL __stdcall TerminateProcess(HANDLE hProcess, UINT	uExitCode)
		extrn TerminateProcess:dword ; CODE XREF: .text:6ED8EE29p
					; DATA XREF: .text:6ED8EE29r
; DWORD	__stdcall TlsAlloc()
		extrn TlsAlloc:dword	; CODE XREF: sub_6ED8F990+13p
					; DATA XREF: sub_6ED8F990+13r
; BOOL __stdcall TlsFree(DWORD dwTlsIndex)
		extrn TlsFree:dword	; CODE XREF: sub_6ED8F960+Ap
					; DATA XREF: sub_6ED8F960+Ar
; LPVOID __stdcall TlsGetValue(DWORD dwTlsIndex)
		extrn TlsGetValue:dword	; CODE XREF: sub_6ED8EF10+45p
					; sub_6ED8F920+1Ap
					; DATA XREF: ...
; BOOL __stdcall TlsSetValue(DWORD dwTlsIndex, LPVOID lpTlsValue)
		extrn TlsSetValue:dword	; CODE XREF: sub_6ED8F8F0+12p
					; DATA XREF: sub_6ED8F8F0+12r
; LONG __stdcall UnhandledExceptionFilter(struct _EXCEPTION_POINTERS *ExceptionInfo)
		extrn UnhandledExceptionFilter:dword ; CODE XREF: .text:6ED8EE0Fp
					; DATA XREF: .text:6ED8EE0Fr
; BOOL __stdcall VirtualProtect(LPVOID lpAddress, DWORD	dwSize,	DWORD flNewProtect, PDWORD lpflOldProtect)
		extrn VirtualProtect:dword ; CODE XREF:	sub_6ED8E910+10Bp
					; sub_6ED8EA60+1B2p
					; DATA XREF: ...
; DWORD	__stdcall VirtualQuery(LPCVOID lpAddress, PMEMORY_BASIC_INFORMATION lpBuffer, DWORD dwLength)
		extrn VirtualQuery:dword ; CODE	XREF: sub_6ED8E910+A8p
					; sub_6ED8EA60+184p
					; DATA XREF: ...
; DWORD	__stdcall WaitForSingleObject(HANDLE hHandle, DWORD dwMilliseconds)
		extrn WaitForSingleObject:dword	; CODE XREF: .text:6ED8F7A3p
					; sub_6ED8F7F0+2Ep
					; DATA XREF: ...

;
; Imports from msvcrt.dll
;
; int __cdecl _write(int, const	void *,	unsigned int)
		extrn __imp__write:dword ; DATA	XREF: _writer

;
; Imports from msvcrt.dll
;
		extrn __imp___dllonexit:dword ;	DATA XREF: __dllonexitr
		extrn __imp__amsg_exit:dword ; DATA XREF: _amsg_exitr
		extrn __imp__initterm:dword ; DATA XREF: _inittermr
; FILE iob[]
		extrn _iob:dword	; DATA XREF: sub_6ED8E8B0+4r
					; sub_6ED8E8B0+3Cr ...
		extrn __imp__lock:dword	; DATA XREF: _lockr
; _onexit_t __cdecl onexit(_onexit_t)
		extrn _onexit:dword	; CODE XREF: sub_6ED8E6D0+A3p
					; DATA XREF: sub_6ED8E6D0+A3r
		extrn __imp__unlock:dword ; DATA XREF: _unlockr
; void __cdecl __noreturn abort()
		extrn __imp_abort:dword	; DATA XREF: abortr
; void *__cdecl	calloc(size_t, size_t)
		extrn __imp_calloc:dword ; DATA	XREF: callocr
; int __cdecl fputc(int, FILE *)
		extrn __imp_fputc:dword	; DATA XREF: fputcr
; int __cdecl fputs(const char *, FILE *)
		extrn __imp_fputs:dword	; DATA XREF: fputsr
; void __cdecl free(void *)
		extrn __imp_free:dword	; DATA XREF: freer
; size_t __cdecl fwrite(const void *, size_t, size_t, FILE *)
		extrn __imp_fwrite:dword ; DATA	XREF: fwriter
; void *__cdecl	malloc(size_t)
		extrn __imp_malloc:dword ; DATA	XREF: mallocr
; void *__cdecl	memcpy(void *, const void *, size_t)
		extrn __imp_memcpy:dword ; DATA	XREF: memcpyr
; void *__cdecl	realloc(void *,	size_t)
		extrn __imp_realloc:dword ; DATA XREF: reallocr
; int sprintf(char *, const char *, ...)
		extrn __imp_sprintf:dword ; DATA XREF: sprintfr
; int __cdecl strcmp(const char	*, const char *)
		extrn __imp_strcmp:dword ; DATA	XREF: strcmpr
; char *__cdecl	strcpy(char *, const char *)
		extrn __imp_strcpy:dword ; DATA	XREF: strcpyr
; size_t __cdecl strlen(const char *)
		extrn __imp_strlen:dword ; DATA	XREF: strlenr
; int __cdecl strncmp(const char *, const char *, size_t)
		extrn __imp_strncmp:dword ; DATA XREF: strncmpr
; int __cdecl vfprintf(FILE *, const char *, va_list)
		extrn __imp_vfprintf:dword ; DATA XREF:	vfprintfr

;
; Imports from libgcc_s_sjlj-1.dll
;
		extrn __imp__Unwind_SjLj_Resume:dword ;	DATA XREF: _Unwind_SjLj_Resumer
		extrn __imp__Unwind_SjLj_Register:dword	; DATA XREF: _Unwind_SjLj_Registerr
		extrn __imp__Unwind_SjLj_Unregister:dword
					; DATA XREF: _Unwind_SjLj_Unregisterr
		extrn __imp__Unwind_GetTextRelBase:dword
					; DATA XREF: _Unwind_GetTextRelBaser
		extrn __imp__Unwind_GetDataRelBase:dword
					; DATA XREF: _Unwind_GetDataRelBaser
		extrn __imp__Unwind_GetRegionStart:dword
					; DATA XREF: _Unwind_GetRegionStartr
		extrn __imp__Unwind_GetLanguageSpecificData:dword
					; DATA XREF: _Unwind_GetLanguageSpecificDatar
		extrn __imp__Unwind_GetIPInfo:dword ; DATA XREF: _Unwind_GetIPInfor
		extrn __imp__Unwind_SetGR:dword	; DATA XREF: _Unwind_SetGRr
		extrn __imp__Unwind_SetIP:dword	; DATA XREF: _Unwind_SetIPr
		extrn __imp__Unwind_DeleteException:dword
					; DATA XREF: _Unwind_DeleteExceptionr
		extrn __imp__Unwind_SjLj_Resume_or_Rethrow:dword
					; DATA XREF: _Unwind_SjLj_Resume_or_Rethrowr
		extrn __imp__Unwind_SjLj_RaiseException:dword
					; DATA XREF: _Unwind_SjLj_RaiseExceptionr


; Section 7. (virtual address 00074000)
; Virtual size			: 0000002C (	 44.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 00070400
; Flags	C0300040: Data Readable	Writable
; Alignment	: 4 bytes
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_CRT		segment	dword public 'DATA' use32
		assume cs:_CRT
		;org 6EDB4000h
dword_6EDB4000	dd 0			; DATA XREF: sub_6ED41040+1DDo
dword_6EDB4004	dd 0			; DATA XREF: sub_6ED41040+1D5o
dword_6EDB4008	dd 0			; DATA XREF: sub_6ED41040+1C9o
		dd offset sub_6ED41000
dword_6EDB4010	dd 2 dup(0)		; DATA XREF: sub_6ED41040+1C1o
TlsCallbacks	dd offset TlsCallback_0	; DATA XREF: .tls:TlsCallbacks_ptro
		dd offset TlsCallback_1
		dd 0
		align 8
dword_6EDB4028	dd 76h dup(0)		; DATA XREF: TlsCallback_0:loc_6ED8E841o
					; TlsCallback_0+36o ...
		align 1000h
_CRT		ends

; Section 8. (virtual address 00075000)
; Virtual size			: 00000020 (	 32.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 00070600
; Flags	C0300040: Data Readable	Writable
; Alignment	: 4 bytes
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_tls		segment	dword public 'DATA' use32
		assume cs:_tls
		;org 6EDB5000h
TlsDirectory	dd offset TlsStart
TlsEnd_ptr	dd offset TlsEnd
TlsIndex_ptr	dd offset TlsIndex
TlsCallbacks_ptr dd offset TlsCallbacks
TlsSizeOfZeroFill dd 0
TlsCharacteristics dd 0
		db 0
TlsStart	db 3 dup(0)		; DATA XREF: .tls:TlsDirectoryo
TlsEnd		dd 79h dup(0)		; DATA XREF: .tls:TlsEnd_ptro
		align 1000h
_tls		ends


		end DllEntryPoint

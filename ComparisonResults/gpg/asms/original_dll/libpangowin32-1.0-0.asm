;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	D07F128828225B7CC38E9E590EB3BA8A
; Input	CRC32 :	EF621C9F

; File Name   :	C:\compspace\compare\gpg\dlls\original\libpangowin32-1.0-0.dll
; Format      :	Portable executable for	80386 (PE)
; Imagebase   :	6B280000
; Section 1. (virtual address 00001000)
; Virtual size			: 0000864C (  34380.)
; Section size in file		: 00008800 (  34816.)
; Offset to raw	data for section: 00000400
; Flags	60500060: Text Data Executable Readable
; Alignment	: 16 bytes

		include	uni.inc	; see unicode subdir of	ida for	info on	unicode

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 6B281000h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _onexit_t __cdecl _onexit(_onexit_t Func)
		public __onexit
__onexit	proc near

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
Func		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+Func]
		mov	[esp+18h+var_10], offset _next_atexit
		mov	[esp+18h+var_14], offset __bss_start__
		mov	[esp+18h+var_18], eax
		call	___dllonexit
		leave
		retn
__onexit	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl atexit(void (__cdecl *)())
		public _atexit
_atexit		proc near		; CODE XREF: ___do_global_ctors+31p
					; _register_frame_ctor+12p

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_10], offset _next_atexit
		mov	[esp+18h+var_14], offset __bss_start__
		mov	[esp+18h+var_18], eax
		call	___dllonexit
		leave
		cmp	eax, 1
		sbb	eax, eax
		retn
_atexit		endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

___dll_exit	proc near		; CODE XREF: DllMainCRTStartup(x,x,x)+45p
					; DllMainCRTStartup(x,x,x)+C2p

Memory		= dword	ptr -18h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	edx, ds:__bss_start__
		test	edx, edx
		jz	short loc_6B2810A5
		mov	ebx, ds:_next_atexit

loc_6B281077:				; CODE XREF: ___dll_exit+22j
		sub	ebx, 4
		cmp	edx, ebx
		ja	short loc_6B281093

loc_6B28107E:				; CODE XREF: ___dll_exit+31j
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_6B281077
		call	eax
		mov	edx, ds:__bss_start__
		sub	ebx, 4
		cmp	edx, ebx
		jbe	short loc_6B28107E

loc_6B281093:				; CODE XREF: ___dll_exit+1Cj
		mov	[esp+18h+Memory], edx ;	Memory
		call	_free
		mov	ds:__bss_start__, 0

loc_6B2810A5:				; CODE XREF: ___dll_exit+Fj
		mov	[esp+18h+Memory], 0 ; File
		call	_fflush
		add	esp, 14h
		pop	ebx
		pop	ebp
		retn
___dll_exit	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; BOOL __stdcall DllMainCRTStartup(HINSTANCE hinstDLL, DWORD fdwReason,	LPVOID lpReserved)
		public _DllMainCRTStartup@12
_DllMainCRTStartup@12 proc near

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
lpvReserved	= dword	ptr -30h
var_1C		= dword	ptr -1Ch
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
hinstDLL	= dword	ptr  8
fdwReason	= dword	ptr  0Ch
lpReserved	= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 38h
		mov	[ebp+var_C], ebx
		mov	ebx, [ebp+fdwReason]
		mov	[ebp+var_8], esi
		mov	esi, [ebp+hinstDLL]
		mov	[ebp+var_4], edi
		mov	edi, [ebp+lpReserved]
		cmp	ebx, 1
		jz	short loc_6B281120
		mov	[esp+38h+lpvReserved], edi ; lpvReserved
		mov	[esp+38h+var_34], ebx ;	fdwReason
		mov	[esp+38h+var_38], esi ;	hinstDLL
		call	_DllMain@12	; DllMain(x,x,x)
		sub	esp, 0Ch
		test	ebx, ebx
		jnz	short loc_6B28110D
		mov	edx, ds:__bss_start__
		test	edx, edx
		jz	loc_6B281190
		mov	[ebp+var_1C], eax
		call	___dll_exit
		mov	eax, [ebp+var_1C]

loc_6B28110D:				; CODE XREF: DllMainCRTStartup(x,x,x)+32j
					; DllMainCRTStartup(x,x,x)+C0j	...
		mov	ebx, [ebp+var_C]
		mov	esi, [ebp+var_8]
		mov	edi, [ebp+var_4]
		mov	esp, ebp
		pop	ebp
		retn	0Ch
; ---------------------------------------------------------------------------
		align 10h

loc_6B281120:				; CODE XREF: DllMainCRTStartup(x,x,x)+1Bj
		mov	[esp+38h+var_38], 80h ;	Size
		call	_malloc
		test	eax, eax
		mov	ds:__bss_start__, eax
		jz	short loc_6B281197
		mov	dword ptr [eax], 0
		mov	ds:_next_atexit, eax
		mov	eax, ds:___dyn_tls_init_callback
		test	eax, eax
		jz	short loc_6B28115D
		mov	[esp+38h+lpvReserved], edi
		mov	[esp+38h+var_34], 2
		mov	[esp+38h+var_38], esi
		call	eax ; __dyn_tls_init(x,x,x) ; __dyn_tls_init(x,x,x)
		sub	esp, 0Ch

loc_6B28115D:				; CODE XREF: DllMainCRTStartup(x,x,x)+87j
		call	__pei386_runtime_relocator
		call	___main
		mov	[esp+38h+lpvReserved], edi ; lpvReserved
		mov	[esp+38h+var_34], 1 ; fdwReason
		mov	[esp+38h+var_38], esi ;	hinstDLL
		call	_DllMain@12	; DllMain(x,x,x)
		sub	esp, 0Ch
		test	eax, eax
		jnz	short loc_6B28110D
		call	___dll_exit
		xor	eax, eax
		jmp	short loc_6B28110D
; ---------------------------------------------------------------------------
		align 10h

loc_6B281190:				; CODE XREF: DllMainCRTStartup(x,x,x)+3Cj
		xor	eax, eax
		jmp	loc_6B28110D
; ---------------------------------------------------------------------------

loc_6B281197:				; CODE XREF: DllMainCRTStartup(x,x,x)+73j
		call	__errno
		mov	dword ptr [eax], 0Ch
		xor	eax, eax
		jmp	loc_6B28110D
_DllMainCRTStartup@12 endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public ___gcc_register_frame
___gcc_register_frame proc near		; CODE XREF: _register_frame_ctor+6p

lpModuleName	= dword	ptr -18h
lpProcName	= dword	ptr -14h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	[esp+18h+lpModuleName],	offset ModuleName ; "libgcc_s_dw2-1.dll"
		call	_GetModuleHandleA@4 ; GetModuleHandleA(x)
		push	edx
		test	eax, eax
		jz	short loc_6B28122C
		mov	[esp+18h+lpProcName], offset ProcName ;	"__register_frame_info"
		mov	[esp+18h+lpModuleName],	eax ; hModule
		call	_GetProcAddress@8 ; GetProcAddress(x,x)
		sub	esp, 8

loc_6B2811DA:				; CODE XREF: ___gcc_register_frame+81j
		test	eax, eax
		jz	short loc_6B2811EF
		mov	[esp+18h+lpProcName], offset _obj
		mov	[esp+18h+lpModuleName],	offset ___FRAME_END__
		call	eax

loc_6B2811EF:				; CODE XREF: ___gcc_register_frame+2Cj
		mov	ecx, ___JCR_END__
		test	ecx, ecx
		jz	short locret_6B28122A
		mov	[esp+18h+lpModuleName],	offset aLibgcj11_dll ; "libgcj-11.dll"
		call	_GetModuleHandleA@4 ; GetModuleHandleA(x)
		push	edx
		test	eax, eax
		jz	short loc_6B281234
		mov	[esp+18h+lpProcName], offset a_jv_registercl ; "_Jv_RegisterClasses"
		mov	[esp+18h+lpModuleName],	eax ; hModule
		call	_GetProcAddress@8 ; GetProcAddress(x,x)
		sub	esp, 8

loc_6B28121D:				; CODE XREF: ___gcc_register_frame+89j
		test	eax, eax
		jz	short locret_6B28122A
		mov	[esp+18h+lpModuleName],	offset ___JCR_END__
		call	eax

locret_6B28122A:			; CODE XREF: ___gcc_register_frame+47j
					; ___gcc_register_frame+6Fj
		leave
		retn
; ---------------------------------------------------------------------------

loc_6B28122C:				; CODE XREF: ___gcc_register_frame+15j
		mov	eax, 0
		jmp	short loc_6B2811DA
; ---------------------------------------------------------------------------
		align 4

loc_6B281234:				; CODE XREF: ___gcc_register_frame+58j
		mov	eax, 0
		jmp	short loc_6B28121D
___gcc_register_frame endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __cdecl __gcc_deregister_frame()
		public ___gcc_deregister_frame
___gcc_deregister_frame	proc near	; DATA XREF: _register_frame_ctor+Bo

lpModuleName	= dword	ptr -18h
lpProcName	= dword	ptr -14h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	[esp+18h+lpModuleName],	offset ModuleName ; "libgcc_s_dw2-1.dll"
		call	_GetModuleHandleA@4 ; GetModuleHandleA(x)
		push	ecx
		test	eax, eax
		jz	short loc_6B281278
		mov	[esp+18h+lpProcName], offset a__deregister_f ; "__deregister_frame_info"
		mov	[esp+18h+lpModuleName],	eax ; hModule
		call	_GetProcAddress@8 ; GetProcAddress(x,x)
		sub	esp, 8

loc_6B281266:				; CODE XREF: ___gcc_deregister_frame+41j
		test	eax, eax
		jz	short locret_6B281273
		mov	[esp+18h+lpModuleName],	offset ___FRAME_END__
		call	eax

locret_6B281273:			; CODE XREF: ___gcc_deregister_frame+2Cj
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B281278:				; CODE XREF: ___gcc_deregister_frame+15j
		mov	eax, 0
		jmp	short loc_6B281266
___gcc_deregister_frame	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_pango_win32_font_get_font_map proc near
					; DATA XREF: __pango_win32_font_class_intern_init+73o

arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+70h]
		leave
		retn
_pango_win32_font_get_font_map endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_pango_win32_font_real_done_font proc near
					; DATA XREF: __pango_win32_font_class_intern_init+81o
		push	ebp
		mov	ebp, esp
		leave
		retn
_pango_win32_font_real_done_font endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_pango_win32_font_real_get_metrics_factor proc near
					; DATA XREF: __pango_win32_font_class_intern_init+88o
		push	ebp
		mov	ebp, esp
		fld	ds:flt_6B28B438
		leave
		retn
_pango_win32_font_real_get_metrics_factor endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_get_cmap_offset proc near		; CODE XREF: _font_get_cmap+42p
					; _font_get_cmap+5Ap

hdc		= dword	ptr -48h
dwTable		= dword	ptr -44h
dwOffset	= dword	ptr -40h
pvBuffer	= dword	ptr -3Ch
cjBuffer	= dword	ptr -38h
var_1A		= word ptr -1Ah

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	ebx, eax
		mov	esi, edx
		mov	[esp+48h+cjBuffer], 2 ;	cjBuffer
		lea	eax, [ebp+var_1A]
		mov	[esp+48h+pvBuffer], eax	; pvBuffer
		mov	[esp+48h+dwOffset], 2 ;	dwOffset
		mov	[esp+48h+dwTable], 70616D63h ; dwTable
		mov	[esp+48h+hdc], ebx ; hdc
		call	_GetFontData@20	; GetFontData(x,x,x,x,x)
		sub	esp, 14h
		cmp	eax, 2
		jz	short loc_6B2812E8

loc_6B2812DC:				; CODE XREF: _get_cmap_offset+9Bj
		xor	eax, eax

loc_6B2812DE:				; CODE XREF: _get_cmap_offset+D9j
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B2812E8:				; CODE XREF: _get_cmap_offset+3Aj
		mov	ax, [ebp+var_1A]
		ror	ax, 8
		mov	[ebp+var_1A], ax
		movzx	eax, ax
		shl	eax, 3
		mov	[esp+48h+hdc], eax
		call	_g_malloc
		mov	edi, eax
		movzx	eax, [ebp+var_1A]
		shl	eax, 3
		mov	[esp+48h+cjBuffer], eax	; cjBuffer
		mov	[esp+48h+pvBuffer], edi	; pvBuffer
		mov	[esp+48h+dwOffset], 4 ;	dwOffset
		mov	[esp+48h+dwTable], 70616D63h ; dwTable
		mov	[esp+48h+hdc], ebx ; hdc
		call	_GetFontData@20	; GetFontData(x,x,x,x,x)
		sub	esp, 14h
		movzx	ecx, [ebp+var_1A]
		lea	edx, ds:0[ecx*8]
		cmp	edx, eax
		jnz	short loc_6B2812DC
		test	ecx, ecx
		jz	short loc_6B281380
		mov	eax, edi
		xor	edx, edx
		ror	si, 8
		jmp	short loc_6B281354
; ---------------------------------------------------------------------------
		align 4

loc_6B28134C:				; CODE XREF: _get_cmap_offset+B9j
					; _get_cmap_offset+BFj
		inc	edx
		add	eax, 8
		cmp	ecx, edx
		jle	short loc_6B281380

loc_6B281354:				; CODE XREF: _get_cmap_offset+A9j
		cmp	word ptr [eax],	300h
		jnz	short loc_6B28134C
		cmp	[eax+2], si
		jnz	short loc_6B28134C
		mov	ebx, [eax+4]
		ror	bx, 8
		ror	ebx, 10h
		ror	bx, 8
		mov	[esp+48h+hdc], edi
		call	_g_free
		mov	eax, ebx
		jmp	loc_6B2812DE
; ---------------------------------------------------------------------------
		align 10h

loc_6B281380:				; CODE XREF: _get_cmap_offset+9Fj
					; _get_cmap_offset+B2j
		mov	[esp+48h+hdc], edi
		call	_g_free
		xor	eax, eax
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
_get_cmap_offset endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_pango_win32_font_find_shaper proc near	; DATA XREF: __pango_win32_font_class_intern_init+5Eo

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	ebx, [ebp+arg_4]
		mov	esi, [ebp+arg_8]
		mov	edx, ds:_engine_type_id_42142
		test	edx, edx
		jz	short loc_6B2813DC
		mov	eax, ds:_render_type_id_42143

loc_6B2813B1:				; CODE XREF: _pango_win32_font_find_shaper+70j
		mov	[esp+18h+var_10], eax
		mov	[esp+18h+var_14], edx
		mov	[esp+18h+var_18], ebx
		call	_pango_find_map
		mov	ebx, eax
		mov	[esp+14h+var_14], esi
		call	_pango_script_for_unichar
		mov	[ebp+arg_4], eax
		mov	[ebp+arg_0], ebx
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		jmp	_pango_map_get_engine
; ---------------------------------------------------------------------------

loc_6B2813DC:				; CODE XREF: _pango_win32_font_find_shaper+16j
		mov	[esp+18h+var_18], offset aPangoenginesha ; "PangoEngineShape"
		call	_g_quark_from_static_string
		mov	ds:_engine_type_id_42142, eax
		mov	[esp+18h+var_18], offset aPangorenderwin ; "PangoRenderWin32"
		call	_g_quark_from_static_string
		mov	ds:_render_type_id_42143, eax
		mov	edx, ds:_engine_type_id_42142
		jmp	short loc_6B2813B1
_pango_win32_font_find_shaper endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_pango_win32_coverage_language_classify	proc near
					; CODE XREF: _pango_win32_font_get_coverage+12p
					; _pango_win32_font_get_coverage+CEp ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, eax
		mov	[esp+18h+var_14], offset aZhTw ; "zh-tw"
		mov	[esp+18h+var_18], eax
		call	_pango_language_matches
		test	eax, eax
		jnz	short loc_6B281490
		mov	[esp+18h+var_14], offset aZhCn ; "zh-cn"
		mov	[esp+18h+var_18], ebx
		call	_pango_language_matches
		test	eax, eax
		jnz	short loc_6B281484
		mov	[esp+18h+var_14], offset aJa ; "ja"
		mov	[esp+18h+var_18], ebx
		call	_pango_language_matches
		test	eax, eax
		jnz	short loc_6B28149C
		mov	[esp+18h+var_14], offset aKo ; "ko"
		mov	[esp+18h+var_18], ebx
		call	_pango_language_matches
		test	eax, eax
		jnz	short loc_6B2814A8
		mov	[esp+18h+var_14], offset aVi ; "vi"
		mov	[esp+18h+var_18], ebx
		call	_pango_language_matches
		cmp	eax, 1
		sbb	eax, eax
		not	eax
		and	eax, 5

loc_6B28147B:				; CODE XREF: _pango_win32_coverage_language_classify+A5j
		add	esp, 14h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B281484:				; CODE XREF: _pango_win32_coverage_language_classify+2Fj
		mov	eax, 2
		add	esp, 14h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6B281490:				; CODE XREF: _pango_win32_coverage_language_classify+1Bj
		mov	eax, 1
		add	esp, 14h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B28149C:				; CODE XREF: _pango_win32_coverage_language_classify+43j
		mov	eax, 3
		add	esp, 14h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B2814A8:				; CODE XREF: _pango_win32_coverage_language_classify+57j
		mov	eax, 4
		jmp	short loc_6B28147B
_pango_win32_coverage_language_classify	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_pango_win32_font_finalize proc	near	; DATA XREF: __pango_win32_font_class_intern_init+3Bo

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx+70h]
		mov	[esp+28h+var_28], eax
		call	_pango_win32_font_map_get_font_cache
		mov	edx, [ebx+74h]
		test	edx, edx
		jz	short loc_6B2814D9
		mov	[esp+28h+var_24], edx
		mov	[esp+28h+var_28], eax
		call	_pango_win32_font_cache_unload

loc_6B2814D9:				; CODE XREF: _pango_win32_font_finalize+1Bj
		mov	[esp+28h+var_20], 0
		mov	[esp+28h+var_24], offset _free_metrics_info
		mov	eax, [ebx+6Ch]
		mov	[esp+28h+var_28], eax
		call	_g_slist_foreach
		mov	eax, [ebx+6Ch]
		mov	[esp+28h+var_28], eax
		call	_g_slist_free
		mov	eax, [ebx+78h]
		test	eax, eax
		jz	short loc_6B281532
		call	_pango_font_get_type
		mov	[esp+28h+var_24], eax
		mov	[esp+28h+var_28], ebx
		call	_g_type_check_instance_cast
		mov	esi, [ebx+78h]
		mov	[esp+28h+var_24], eax
		mov	eax, [esi+98h]
		mov	[esp+28h+var_28], eax
		call	_g_slist_remove
		mov	[esi+98h], eax

loc_6B281532:				; CODE XREF: _pango_win32_font_finalize+54j
		mov	eax, [ebx+80h]
		mov	[esp+28h+var_28], eax
		call	_g_hash_table_destroy
		mov	eax, [ebx+70h]
		test	eax, eax
		jz	short loc_6B281590
		mov	[esp+28h+var_24], 50h
		mov	[esp+28h+var_28], eax
		call	_g_type_check_instance_cast
		lea	edx, [ebx+70h]
		mov	[esp+28h+var_24], edx
		mov	[esp+28h+var_28], eax
		call	_g_object_remove_weak_pointer
		mov	dword ptr [ebx+70h], 0
		mov	[esp+28h+var_24], 50h
		mov	eax, ds:__pango_win32_font_parent_class
		mov	[esp+28h+var_28], eax
		call	_g_type_check_class_cast
		mov	[ebp+arg_0], ebx
		mov	eax, [eax+18h]
		add	esp, 20h
		pop	ebx
		pop	esi
		leave
		jmp	eax
; ---------------------------------------------------------------------------

loc_6B281590:				; CODE XREF: _pango_win32_font_finalize+95j
		mov	[esp+28h+var_18], offset aWin32fontFontm ; "win32font->fontmap != NULL"
		mov	[esp+28h+var_1C], offset ___PRETTY_FUNCTION___42128 ; "pango_win32_font_finalize"
		mov	[esp+28h+var_20], 33Fh
		mov	[esp+28h+var_24], offset aPangowin32_c ; "pangowin32.c"
		mov	[esp+28h+var_28], offset aPango	; "Pango"
		call	_g_assertion_message_expr
_pango_win32_font_finalize endp	; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_free_metrics_info proc	near		; DATA XREF: _pango_win32_font_finalize+31o

var_18		= dword	ptr -18h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx+4]
		mov	[esp+18h+var_18], eax
		call	_pango_font_metrics_unref
		mov	[ebp+arg_0], ebx
		add	esp, 14h
		pop	ebx
		leave
		jmp	_g_free
_free_metrics_info endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

__pango_win32_font_init	proc near	; DATA XREF: __pango_win32_font_get_type+47o

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, [ebp+arg_0]
		mov	dword ptr [ebx+68h], 0FFFFFFFFh
		mov	dword ptr [ebx+6Ch], 0
		mov	[esp+18h+var_C], offset	_g_free
		mov	[esp+18h+var_10], 0
		mov	[esp+18h+var_14], 0
		mov	[esp+18h+var_18], 0
		call	_g_hash_table_new_full
		mov	[ebx+80h], eax
		add	esp, 14h
		pop	ebx
		leave
		retn
__pango_win32_font_init	endp

; Exported entry   1. _pango_win32_font_get_hfont

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public __pango_win32_font_get_hfont
__pango_win32_font_get_hfont proc near	; CODE XREF: _pango_win32_font_real_select_font+Cp
					; _pango_win32_font_get_glyph_extents+11Bp ...

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [ebp+arg_0]
		test	ebx, ebx
		jz	short loc_6B281648
		mov	esi, [ebx+74h]
		test	esi, esi
		jz	short loc_6B281654

loc_6B28163E:				; CODE XREF: __pango_win32_font_get_hfont+4Dj
					; __pango_win32_font_get_hfont+A4j
		mov	eax, esi
		add	esp, 20h
		pop	ebx
		pop	esi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B281648:				; CODE XREF: __pango_win32_font_get_hfont+Dj
		xor	esi, esi
		mov	eax, esi
		add	esp, 20h
		pop	ebx
		pop	esi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B281654:				; CODE XREF: __pango_win32_font_get_hfont+14j
		mov	eax, [ebx+70h]
		mov	[esp+28h+var_28], eax
		call	_pango_win32_font_map_get_font_cache
		lea	edx, [ebx+0Ch]
		mov	[esp+28h+var_24], edx
		mov	[esp+28h+var_28], eax
		call	_pango_win32_font_cache_loadw
		mov	esi, eax
		mov	[ebx+74h], eax
		test	eax, eax
		jnz	short loc_6B28163E
		mov	[esp+28h+var_18], 0
		mov	[esp+28h+var_1C], 0
		mov	[esp+28h+var_20], 0
		mov	[esp+28h+var_24], 0FFFFFFFFh
		add	ebx, 28h
		mov	[esp+28h+var_28], ebx
		call	_g_utf16_to_utf8
		mov	ebx, eax
		mov	[esp+28h+var_1C], eax
		mov	[esp+28h+var_20], offset aCannotLoadFont ; "Cannot load	font '%s\n"
		mov	[esp+28h+var_24], 10h
		mov	[esp+28h+var_28], offset aPango	; "Pango"
		call	_g_log
		mov	[esp+28h+var_28], ebx
		call	_g_free
		jmp	loc_6B28163E
__pango_win32_font_get_hfont endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl pango_win32_font_real_select_font(int, HDC)
_pango_win32_font_real_select_font proc	near
					; DATA XREF: __pango_win32_font_class_intern_init+7Ao

hdc		= dword	ptr -18h
h		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+hdc], eax
		call	__pango_win32_font_get_hfont
		test	eax, eax
		jz	short loc_6B281708
		mov	[esp+18h+h], eax ; h
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+hdc], eax ; hdc
		call	_SelectObject@8	; SelectObject(x,x)
		sub	esp, 8
		test	eax, eax
		jz	short loc_6B28170C
		mov	eax, 1
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B281708:				; CODE XREF: _pango_win32_font_real_select_font+13j
		xor	eax, eax
		leave
		retn
; ---------------------------------------------------------------------------

loc_6B28170C:				; CODE XREF: _pango_win32_font_real_select_font+29j
		mov	[esp+18h+var_10], offset aPango_win32_fo ; "pango_win32_font_real_select_font: Cann"...
		mov	[esp+18h+h], 10h
		mov	[esp+18h+hdc], offset aPango ; "Pango"
		call	_g_log
		xor	eax, eax
		leave
		retn
_pango_win32_font_real_select_font endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_pango_win32_font_get_glyph_extents proc near
					; DATA XREF: __pango_win32_font_class_intern_init+65o

hdc		= dword	ptr -0B8h
h		= dword	ptr -0B4h
fuFormat	= dword	ptr -0B0h
lpgm		= dword	ptr -0ACh
cjBuffer	= dword	ptr -0A8h
pvBuffer	= dword	ptr -0A4h
lpmat2		= dword	ptr -0A0h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
tm		= tagTEXTMETRICA ptr -74h
gm		= _GLYPHMETRICS	ptr -3Ch
mat2		= MAT2 ptr -28h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 0ACh
		mov	edx, [ebp+arg_8]
		lea	eax, [ebp+mat2]
		mov	[ebp+var_8C], eax
		mov	esi, offset _C_47_50822
		mov	ecx, 4
		mov	edi, eax
		rep movsd
		cmp	[ebp+arg_4], 0FFFFFFFh
		jz	short loc_6B2817CC
		test	[ebp+arg_4], 10000000h
		jnz	short loc_6B2817BC
		mov	esi, [ebp+arg_4]
		mov	eax, [ebp+arg_4]

loc_6B28176A:				; CODE XREF: _pango_win32_font_get_glyph_extents+9Bj
		mov	[esp+0B8h+h], eax
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+80h]
		mov	[esp+0B8h+hdc],	eax
		mov	[ebp+var_80], edx
		call	_g_hash_table_lookup
		mov	ebx, eax
		test	eax, eax
		mov	edx, [ebp+var_80]
		jz	loc_6B281818

loc_6B28178F:				; CODE XREF: _pango_win32_font_get_glyph_extents+205j
		test	edx, edx
		jz	short loc_6B28179F
		lea	esi, [ebx+10h]
		mov	ecx, 4
		mov	edi, edx
		rep movsd

loc_6B28179F:				; CODE XREF: _pango_win32_font_get_glyph_extents+65j
		mov	edx, [ebp+arg_C]
		test	edx, edx
		jz	short loc_6B2817B2
		mov	ecx, 4
		mov	edi, [ebp+arg_C]
		mov	esi, ebx
		rep movsd

loc_6B2817B2:				; CODE XREF: _pango_win32_font_get_glyph_extents+78j
					; _pango_win32_font_get_glyph_extents+C4j
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B2817BC:				; CODE XREF: _pango_win32_font_get_glyph_extents+36j
		xor	eax, eax
		xor	esi, esi
		mov	[ebp+arg_4], 0
		jmp	short loc_6B28176A
; ---------------------------------------------------------------------------
		align 4

loc_6B2817CC:				; CODE XREF: _pango_win32_font_get_glyph_extents+2Dj
		test	edx, edx
		jz	short loc_6B2817EB
		mov	dword ptr [edx+0Ch], 0
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx+8], 0
		mov	dword ptr [edx], 0

loc_6B2817EB:				; CODE XREF: _pango_win32_font_get_glyph_extents+A2j
		mov	ecx, [ebp+arg_C]
		test	ecx, ecx
		jz	short loc_6B2817B2
		mov	ecx, [ebp+arg_C]
		mov	dword ptr [ecx+0Ch], 0
		mov	dword ptr [ecx+4], 0
		mov	dword ptr [ecx+8], 0
		mov	dword ptr [ecx], 0
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6B281818:				; CODE XREF: _pango_win32_font_get_glyph_extents+5Dj
		mov	[esp+0B8h+hdc],	20h
		call	_g_malloc0
		mov	[ebp+var_7C], eax
		mov	ebx, eax
		lea	eax, [ebp+gm]
		mov	[ebp+var_90], eax
		mov	ecx, 14h
		xor	eax, eax
		mov	edi, [ebp+var_90]
		rep stosb
		mov	ecx, [ebp+arg_0]
		mov	[esp+0B8h+hdc],	ecx
		call	__pango_win32_font_get_hfont
		mov	[esp+0B8h+h], eax ; h
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+0B8h+hdc],	eax ; hdc
		call	_SelectObject@8	; SelectObject(x,x)
		sub	esp, 8
		lea	eax, [ebp+mat2]
		mov	[esp+0B8h+lpmat2], eax ; lpmat2
		mov	[esp+0B8h+pvBuffer], 0 ; pvBuffer
		mov	[esp+0B8h+cjBuffer], 0 ; cjBuffer
		lea	ecx, [ebp+gm]
		mov	[esp+0B8h+lpgm], ecx ; lpgm
		mov	[esp+0B8h+fuFormat], 80h ; fuFormat
		movzx	esi, si
		mov	[esp+0B8h+h], esi ; uChar
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+0B8h+hdc],	eax ; hdc
		call	_GetGlyphOutlineA@28 ; GetGlyphOutlineA(x,x,x,x,x,x,x)
		sub	esp, 1Ch
		inc	eax
		mov	edx, [ebp+var_80]
		jz	loc_6B281936

loc_6B2818A7:				; CODE XREF: _pango_win32_font_get_glyph_extents+248j
		mov	eax, [ebp+gm.gmptGlyphOrigin.x]
		shl	eax, 0Ah
		mov	esi, [ebp+var_7C]
		mov	[esi+10h], eax
		mov	eax, [ebp+gm.gmBlackBoxX]
		shl	eax, 0Ah
		mov	[esi+18h], eax
		mov	eax, [ebp+gm.gmptGlyphOrigin.y]
		neg	eax
		shl	eax, 0Ah
		mov	[esi+14h], eax
		mov	eax, [ebp+gm.gmBlackBoxY]
		shl	eax, 0Ah
		mov	[esi+1Ch], eax
		lea	eax, [ebp+tm]
		mov	[esp+0B8h+h], eax ; lptm
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+0B8h+hdc],	eax ; hdc
		mov	[ebp+var_80], edx
		call	_GetTextMetricsA@8 ; GetTextMetricsA(x,x)
		sub	esp, 8
		mov	dword ptr [esi], 0
		movsx	eax, [ebp+gm.gmCellIncX]
		shl	eax, 0Ah
		mov	[esi+8], eax
		mov	ecx, [ebp+tm.tmAscent]
		mov	eax, ecx
		neg	eax
		shl	eax, 0Ah
		mov	[esi+4], eax
		mov	eax, [ebp+tm.tmDescent]
		add	eax, ecx
		shl	eax, 0Ah
		mov	[esi+0Ch], eax
		mov	[esp+0B8h+fuFormat], esi
		mov	eax, [ebp+arg_4]
		mov	[esp+0B8h+h], eax
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+80h]
		mov	[esp+0B8h+hdc],	eax
		call	_g_hash_table_insert
		mov	edx, [ebp+var_80]
		jmp	loc_6B28178F
; ---------------------------------------------------------------------------

loc_6B281936:				; CODE XREF: _pango_win32_font_get_glyph_extents+175j
		call	_GetLastError@0	; GetLastError()
		mov	[esp+0B8h+hdc],	eax
		call	_g_win32_error_message
		mov	edi, eax
		mov	[esp+0B8h+cjBuffer], eax
		mov	[esp+0B8h+lpgm], esi
		mov	[esp+0B8h+fuFormat], offset aGetglyphoutlin ; "GetGlyphOutline(%04X) failed: %s\n"
		mov	[esp+0B8h+h], 10h
		mov	[esp+0B8h+hdc],	offset aPango ;	"Pango"
		call	_g_log
		mov	[esp+0B8h+hdc],	edi
		call	_g_free
		mov	edx, [ebp+var_80]
		jmp	loc_6B2818A7
_pango_win32_font_get_glyph_extents endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry  21. pango_win32_get_context

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _pango_win32_get_context
_pango_win32_get_context proc near

var_18		= dword	ptr -18h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		call	_pango_win32_font_map_for_display
		mov	[esp+18h+var_18], eax
		call	_pango_font_map_create_context
		leave
		retn
_pango_win32_get_context endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry   2. _pango_win32_font_get_type

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public __pango_win32_font_get_type
__pango_win32_font_get_type proc near	; CODE XREF: _pango_win32_font_describe_absolute+7p
					; _pango_win32_font_describe+8p ...

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 24h
		mov	eax, ds:_g_define_type_id__volatile_41894
		test	eax, eax
		jz	short loc_6B2819B0

loc_6B2819A4:				; CODE XREF: __pango_win32_font_get_type+2Aj
		mov	eax, ds:_g_define_type_id__volatile_41894
		add	esp, 24h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6B2819B0:				; CODE XREF: __pango_win32_font_get_type+Ej
		mov	[esp+28h+var_28], offset _g_define_type_id__volatile_41894
		call	_g_once_init_enter_impl
		test	eax, eax
		jz	short loc_6B2819A4
		mov	[esp+28h+var_28], offset aPangowin32font ; "PangoWin32Font"
		call	_g_intern_static_string
		mov	ebx, eax
		call	_pango_font_get_type
		mov	[esp+24h+var_C], 0
		mov	[esp+24h+var_10], offset __pango_win32_font_init
		mov	[esp+24h+var_14], 84h
		mov	[esp+24h+var_18], offset __pango_win32_font_class_intern_init
		mov	[esp+24h+var_1C], 74h
		mov	[esp+24h+var_20], ebx
		mov	[esp+24h+var_24], eax
		call	_g_type_register_static_simple
		mov	[esp+24h+var_20], eax
		mov	[esp+24h+var_24], offset _g_define_type_id__volatile_41894
		call	_g_once_init_leave
		mov	eax, ds:_g_define_type_id__volatile_41894
		add	esp, 24h
		pop	ebx
		leave
		retn
__pango_win32_font_get_type endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_pango_win32_font_describe_absolute proc near
					; DATA XREF: __pango_win32_font_class_intern_init+50o

var_28		= dword	ptr -28h
var_24		= qword	ptr -24h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 24h
		call	__pango_win32_font_get_type
		mov	dword ptr [esp+28h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+var_28], eax
		call	_g_type_check_instance_cast
		mov	ebx, eax
		mov	eax, [eax+78h]
		mov	eax, [eax+68h]
		mov	[esp+28h+var_28], eax
		call	_pango_font_description_copy
		fild	dword ptr [ebx+68h]
		fstp	[esp+28h+var_24]
		mov	[esp+28h+var_28], eax
		mov	[ebp+var_C], eax
		call	_pango_font_description_set_absolute_size
		mov	eax, [ebp+var_C]
		add	esp, 24h
		pop	ebx
		leave
		retn
_pango_win32_font_describe_absolute endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_pango_win32_font_describe proc	near	; DATA XREF: __pango_win32_font_class_intern_init+49o

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= qword	ptr -18h
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 20h
		call	__pango_win32_font_get_type
		mov	[esp+28h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+var_28], eax
		call	_g_type_check_instance_cast
		mov	ebx, eax
		mov	eax, [eax+78h]
		mov	eax, [eax+68h]
		mov	[esp+28h+var_28], eax
		call	_pango_font_description_copy
		mov	esi, eax
		fild	dword ptr [ebx+68h]
		fstp	[ebp+var_18]
		call	__pango_win32_font_map_get_type
		mov	[esp+28h+var_24], eax
		mov	eax, [ebx+70h]
		mov	[esp+28h+var_28], eax
		call	_g_type_check_instance_cast
		fld	ds:flt_6B28B438
		fdiv	qword ptr [eax+20h]
		fdivr	[ebp+var_18]
		fnstcw	[ebp+var_A]
		mov	ax, [ebp+var_A]
		mov	ah, 0Ch
		mov	[ebp+var_C], ax
		fldcw	[ebp+var_C]
		fistp	[esp+28h+var_24]
		fldcw	[ebp+var_A]
		mov	[esp+28h+var_28], esi
		call	_pango_font_description_set_size
		mov	eax, esi
		add	esp, 20h
		pop	ebx
		pop	esi
		leave
		retn
_pango_win32_font_describe endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_pango_win32_font_dispose proc near	; DATA XREF: __pango_win32_font_class_intern_init+42o

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	esi, [ebp+arg_0]
		call	__pango_win32_font_get_type
		mov	[esp+28h+var_24], eax
		mov	[esp+28h+var_28], esi
		call	_g_type_check_instance_cast
		mov	ebx, eax
		mov	edi, [eax+7Ch]
		test	edi, edi
		jnz	short loc_6B281B4F
		mov	edi, [eax+70h]
		test	edi, edi
		jz	short loc_6B281B4F
		call	__pango_win32_font_map_get_type
		mov	[esp+28h+var_24], eax
		mov	[esp+28h+var_28], edi
		call	_g_type_check_instance_cast
		mov	edi, eax
		mov	eax, [eax+10h]
		cmp	dword ptr [eax+8], 10h
		jz	short loc_6B281B74

loc_6B281B31:				; CODE XREF: _pango_win32_font_dispose+9Cj
		mov	[esp+28h+var_28], ebx
		call	_g_object_ref
		mov	[esp+28h+var_24], ebx
		mov	eax, [edi+10h]
		mov	[esp+28h+var_28], eax
		call	_g_queue_push_head
		mov	dword ptr [ebx+7Ch], 1

loc_6B281B4F:				; CODE XREF: _pango_win32_font_dispose+24j
					; _pango_win32_font_dispose+2Bj
		mov	[esp+28h+var_24], 50h
		mov	eax, ds:__pango_win32_font_parent_class
		mov	[esp+28h+var_28], eax
		call	_g_type_check_class_cast
		mov	[ebp+arg_0], esi
		mov	eax, [eax+14h]
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		jmp	eax
; ---------------------------------------------------------------------------
		align 4

loc_6B281B74:				; CODE XREF: _pango_win32_font_dispose+47j
		mov	[esp+28h+var_28], eax
		call	_g_queue_pop_tail
		mov	[esp+28h+var_28], eax
		call	_g_object_unref
		jmp	short loc_6B281B31
_pango_win32_font_dispose endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry  22. pango_win32_get_dc

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _pango_win32_get_dc
_pango_win32_get_dc proc near		; CODE XREF: __pango_win32_font_class_intern_init+95j
					; __pango_win32_font_map_class_intern_init+5Ep	...

pwszDriver	= dword	ptr -18h
pwszDevice	= dword	ptr -14h
pszPort		= dword	ptr -10h
pdm		= dword	ptr -0Ch
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		push	edi
		sub	esp, 14h
		mov	eax, ds:__pango_win32_hdc
		test	eax, eax
		jz	short loc_6B281BA0
		mov	edi, [ebp+var_4]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6B281BA0:				; CODE XREF: _pango_win32_get_dc+Ej
		mov	[esp+18h+pdm], 0 ; pdm
		mov	[esp+18h+pszPort], 0 ; pszPort
		mov	[esp+18h+pwszDevice], 0	; pwszDevice
		mov	[esp+18h+pwszDriver], offset pwszDriver	; "DISPLAY"
		call	_CreateDCA@16	; CreateDCA(x,x,x,x)
		sub	esp, 10h
		mov	ds:__pango_win32_hdc, eax
		mov	edx, offset __pango_win32_os_version_info
		mov	ecx, 94h
		xor	eax, eax
		mov	edi, edx
		rep stosb
		mov	ds:__pango_win32_os_version_info.dwOSVersionInfoSize, 94h
		mov	[esp+18h+pwszDriver], edx ; lpVersionInformation
		call	_GetVersionExA@4 ; GetVersionExA(x)
		push	eax
		mov	[esp+18h+pwszDriver], offset VarName ; "PANGO_WIN32_DEBUG"
		call	_getenv
		test	eax, eax
		jz	short loc_6B281C09
		mov	ds:__pango_win32_debug,	1

loc_6B281C09:				; CODE XREF: _pango_win32_get_dc+75j
		mov	eax, ds:__pango_win32_hdc
		mov	edi, [ebp+var_4]
		leave
		retn
_pango_win32_get_dc endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

__pango_win32_font_class_intern_init proc near ; DATA XREF: __pango_win32_font_get_type+57o

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	ebx, [ebp+arg_0]
		mov	[esp+18h+var_18], ebx
		call	_g_type_class_peek_parent
		mov	ds:__pango_win32_font_parent_class, eax
		mov	[esp+14h+var_10], 50h
		mov	[esp+14h+var_14], ebx
		call	_g_type_check_class_cast
		mov	esi, eax
		call	_pango_font_get_type
		mov	[esp+14h+var_10], eax
		mov	[esp+14h+var_14], ebx
		call	_g_type_check_class_cast
		mov	dword ptr [esi+18h], offset _pango_win32_font_finalize
		mov	dword ptr [esi+14h], offset _pango_win32_font_dispose
		mov	dword ptr [eax+44h], offset _pango_win32_font_describe
		mov	dword ptr [eax+5Ch], offset _pango_win32_font_describe_absolute
		mov	dword ptr [eax+48h], offset _pango_win32_font_get_coverage
		mov	dword ptr [eax+4Ch], offset _pango_win32_font_find_shaper
		mov	dword ptr [eax+50h], offset _pango_win32_font_get_glyph_extents
		mov	dword ptr [eax+54h], offset _pango_win32_font_get_metrics
		mov	dword ptr [eax+58h], offset _pango_win32_font_get_font_map
		mov	dword ptr [ebx+68h], offset _pango_win32_font_real_select_font
		mov	dword ptr [ebx+6Ch], offset _pango_win32_font_real_done_font
		mov	dword ptr [ebx+70h], offset _pango_win32_font_real_get_metrics_factor
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		jmp	_pango_win32_get_dc
__pango_win32_font_class_intern_init endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  23. pango_win32_get_debug_flag

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _pango_win32_get_debug_flag
_pango_win32_get_debug_flag proc near	; CODE XREF: __pango_basic_win32_script_engine_init+Dp
		push	ebp
		mov	ebp, esp
		mov	eax, ds:__pango_win32_debug
		leave
		retn
_pango_win32_get_debug_flag endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry  25. pango_win32_render

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _pango_win32_render
_pango_win32_render proc near		; CODE XREF: _pango_win32_render_transformed+D0p
					; _pango_win32_render_layout_line+153p

hdc		= dword	ptr -88h
h		= dword	ptr -84h
y		= dword	ptr -80h
options		= dword	ptr -7Ch
lprect		= dword	ptr -78h
lpString	= dword	ptr -74h
c		= dword	ptr -70h
lpDx		= dword	ptr -6Ch
var_5C		= dword	ptr -5Ch
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
x		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 7Ch
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_44], eax
		mov	edi, [ebp+arg_4]
		mov	edx, [ebp+arg_8]
		mov	[ebp+var_3C], edx
		mov	ecx, [ebp+arg_C]
		mov	[ebp+var_40], ecx
		mov	ebx, [ebp+arg_10]
		mov	[ebp+var_48], ebx
		test	edx, edx
		jz	loc_6B28205A
		mov	esi, ds:__pango_win32_debug
		test	esi, esi
		jz	loc_6B281DAB
		mov	[esp+88h+y], 0EFh
		mov	[esp+88h+h], offset ___PRETTY_FUNCTION___41931 ; "pango_win32_render"
		mov	[esp+88h+hdc], offset aSD ; "%s:%d "
		call	_g_print
		mov	edx, [ebp+var_3C]
		mov	eax, [edx]
		mov	[esp+88h+h], eax
		mov	[esp+88h+hdc], offset aNum_glyphsD ; "num_glyphs:%d"
		call	_g_print
		mov	[esp+88h+hdc], offset asc_6B28B194 ; "\n"
		call	_g_print
		mov	ecx, [ebp+var_3C]
		mov	ebx, [ecx]
		test	ebx, ebx
		jle	short loc_6B281D9F
		xor	ebx, ebx
		xor	esi, esi
		mov	[ebp+var_1C], edi
		mov	edi, ecx
		jmp	short loc_6B281D6B
; ---------------------------------------------------------------------------
		align 4

loc_6B281D48:				; CODE XREF: _pango_win32_render+D7j
		mov	eax, [eax+0Ch]
		test	eax, eax
		jz	short loc_6B281D63

loc_6B281D4F:				; CODE XREF: _pango_win32_render+DCj
		mov	[esp+88h+y], eax
		mov	[esp+88h+h], edx
		mov	[esp+88h+hdc], offset aDD_0 ; ":%d,%d"
		call	_g_print

loc_6B281D63:				; CODE XREF: _pango_win32_render+91j
		inc	esi
		add	ebx, 14h
		cmp	[edi], esi
		jle	short loc_6B281D9C

loc_6B281D6B:				; CODE XREF: _pango_win32_render+89j
		mov	eax, [edi+4]
		add	eax, ebx
		mov	edx, [eax+4]
		mov	[esp+88h+y], edx
		mov	eax, [eax]
		mov	[esp+88h+h], eax
		mov	[esp+88h+hdc], offset aDD ; " %d:%d"
		call	_g_print
		mov	eax, [edi+4]
		add	eax, ebx
		mov	edx, [eax+8]
		test	edx, edx
		jz	short loc_6B281D48
		mov	eax, [eax+0Ch]
		jmp	short loc_6B281D4F
; ---------------------------------------------------------------------------
		align 4

loc_6B281D9C:				; CODE XREF: _pango_win32_render+ADj
		mov	edi, [ebp+var_1C]

loc_6B281D9F:				; CODE XREF: _pango_win32_render+7Ej
		mov	[esp+88h+hdc], offset asc_6B28B194 ; "\n"
		call	_g_print

loc_6B281DAB:				; CODE XREF: _pango_win32_render+34j
		mov	ebx, [ebp+var_3C]
		mov	ecx, [ebx]
		test	ecx, ecx
		jnz	short loc_6B281DBC

loc_6B281DB4:				; CODE XREF: _pango_win32_render+10Aj
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6B281DBC:				; CODE XREF: _pango_win32_render+F6j
		mov	[esp+88h+hdc], edi
		call	__pango_win32_font_get_hfont
		test	eax, eax
		jz	short loc_6B281DB4
		mov	[esp+88h+h], eax ; h
		mov	eax, [ebp+var_44]
		mov	[esp+88h+hdc], eax ; hdc
		call	_SelectObject@8	; SelectObject(x,x)
		sub	esp, 8
		mov	[ebp+var_4C], eax
		mov	[esp+88h+h], 2
		mov	eax, [ebx]
		mov	[esp+88h+hdc], eax
		call	_g_malloc_n
		mov	[ebp+var_34], eax
		mov	[esp+88h+h], 4
		mov	eax, [ebx]
		mov	[esp+88h+hdc], eax
		call	_g_malloc_n
		mov	[ebp+var_28], eax
		mov	edx, [ebx]
		mov	[ebp+x], edx
		test	edx, edx
		jle	loc_6B282028
		xor	ebx, ebx
		xchg	ax, ax

loc_6B281E18:				; CODE XREF: _pango_win32_render+2C5j
		mov	ecx, [ebp+var_3C]
		mov	ecx, [ecx+4]
		mov	[ebp+var_20], ecx
		lea	edx, [ebx+ebx*4]
		shl	edx, 2
		mov	eax, ecx
		add	eax, edx
		mov	ecx, [eax+0Ch]
		mov	[ebp+var_30], ecx
		mov	eax, [eax+8]
		mov	[ebp+var_38], eax
		add	eax, 200h
		sar	eax, 0Ah
		mov	[ebp+var_1C], eax
		cmp	[ebp+x], ebx
		jle	loc_6B28207B
		xor	edi, edi
		xor	esi, esi
		mov	ecx, [ebp+x]
		dec	ecx
		mov	[ebp+var_2C], ecx
		mov	[ebp+var_5C], ebx
		jmp	short loc_6B281E9C
; ---------------------------------------------------------------------------
		align 4

loc_6B281E5C:				; CODE XREF: _pango_win32_render+201j
		mov	ebx, [ebp+var_34]
		mov	word ptr [ebx+esi*2], 0
		add	edi, [eax+4]
		mov	eax, [ebp+var_2C]
		cmp	[ebp+var_5C], eax
		jge	short loc_6B281ED1

loc_6B281E70:				; CODE XREF: _pango_win32_render+213j
		mov	ecx, [ebp+var_20]
		mov	eax, [ecx+edx+1Ch]

loc_6B281E77:				; CODE XREF: _pango_win32_render+217j
		lea	eax, [edi+eax+200h]
		sar	eax, 0Ah
		sub	eax, [ebp+var_1C]
		mov	ebx, [ebp+var_28]
		mov	[ebx+esi*4], eax
		add	[ebp+var_1C], eax
		inc	esi

loc_6B281E8E:				; CODE XREF: _pango_win32_render+2E2j
		inc	[ebp+var_5C]
		add	edx, 14h
		mov	eax, [ebp+var_5C]
		cmp	[ebp+x], eax
		jle	short loc_6B281EF4

loc_6B281E9C:				; CODE XREF: _pango_win32_render+19Dj
					; _pango_win32_render+236j
		mov	eax, [ebp+var_20]
		add	eax, edx
		mov	ecx, [eax]
		cmp	ecx, 0FFFFFFFh
		jz	short loc_6B281ED8
		mov	ebx, [ebp+var_30]
		cmp	[eax+0Ch], ebx
		jnz	loc_6B281FA4
		test	ecx, 10000000h
		jnz	short loc_6B281E5C
		mov	ebx, [ebp+var_34]
		mov	[ebx+esi*2], cx
		add	edi, [eax+4]
		mov	eax, [ebp+var_2C]
		cmp	[ebp+var_5C], eax
		jl	short loc_6B281E70

loc_6B281ED1:				; CODE XREF: _pango_win32_render+1B2j
		xor	eax, eax
		jmp	short loc_6B281E77
; ---------------------------------------------------------------------------
		align 4

loc_6B281ED8:				; CODE XREF: _pango_win32_render+1EDj
		test	esi, esi
		jnz	loc_6B281F88
		mov	ebx, [eax+4]
		add	[ebp+var_38], ebx
		inc	[ebp+var_5C]
		add	edx, 14h
		mov	eax, [ebp+var_5C]
		cmp	[ebp+x], eax
		jg	short loc_6B281E9C

loc_6B281EF4:				; CODE XREF: _pango_win32_render+1DEj
		mov	ebx, eax
		mov	eax, [ebp+var_38]
		add	eax, 200h
		sar	eax, 0Ah
		mov	[ebp+var_2C], esi

loc_6B281F04:				; CODE XREF: _pango_win32_render+3C8j
		mov	edx, ds:__pango_win32_debug
		test	edx, edx
		jnz	loc_6B281FC3

loc_6B281F12:				; CODE XREF: _pango_win32_render+301j
		mov	edx, [ebp+var_30]
		add	edx, 200h
		sar	edx, 0Ah
		add	edx, [ebp+var_48]
		mov	[ebp+var_20], edx
		add	eax, [ebp+var_40]
		mov	[ebp+x], eax

loc_6B281F2A:				; CODE XREF: _pango_win32_render+367j
		mov	eax, [ebp+var_28]
		mov	[esp+88h+lpDx],	eax ; lpDx
		mov	edx, [ebp+var_2C]
		mov	[esp+88h+c], edx ; c
		mov	ecx, [ebp+var_34]
		mov	[esp+88h+lpString], ecx	; lpString
		mov	[esp+88h+lprect], 0 ; lprect
		mov	[esp+88h+options], 10h ; options
		mov	eax, [ebp+var_20]
		mov	[esp+88h+y], eax ; y
		mov	edx, [ebp+x]
		mov	[esp+88h+h], edx ; x
		mov	ecx, [ebp+var_44]
		mov	[esp+88h+hdc], ecx ; hdc
		call	_ExtTextOutW@32	; ExtTextOutW(x,x,x,x,x,x,x,x)
		sub	esp, 20h
		mov	eax, [ebp+var_3C]
		mov	eax, [eax]
		mov	[ebp+x], eax
		cmp	eax, ebx
		jle	loc_6B282028
		mov	edx, [ebp+var_1C]
		add	[ebp+var_40], edx
		jmp	loc_6B281E18
; ---------------------------------------------------------------------------
		align 4

loc_6B281F88:				; CODE XREF: _pango_win32_render+21Ej
		add	edi, [eax+4]
		lea	eax, [edi+200h]
		sar	eax, 0Ah
		sub	eax, [ebp+var_1C]
		mov	ecx, [ebp+var_28]
		mov	[ecx+esi*4-4], eax
		jmp	loc_6B281E8E
; ---------------------------------------------------------------------------
		align 4

loc_6B281FA4:				; CODE XREF: _pango_win32_render+1F5j
		mov	ebx, [ebp+var_5C]
		mov	eax, [ebp+var_38]
		add	eax, 200h
		sar	eax, 0Ah
		mov	[ebp+var_2C], esi
		mov	edx, ds:__pango_win32_debug
		test	edx, edx
		jz	loc_6B281F12

loc_6B281FC3:				; CODE XREF: _pango_win32_render+250j
		mov	edx, [ebp+var_30]
		add	edx, 200h
		sar	edx, 0Ah
		add	edx, [ebp+var_48]
		mov	[ebp+var_20], edx
		add	eax, [ebp+var_40]
		mov	[ebp+x], eax
		mov	[esp+88h+y], edx
		mov	[esp+88h+h], eax
		mov	[esp+88h+hdc], offset aExttextoutwAtD ;	"ExtTextOutW at	%d,%d deltas:"
		call	_g_print
		test	esi, esi
		jz	short loc_6B282017
		xor	edi, edi
		mov	[ebp+var_30], ebx
		mov	ebx, [ebp+var_28]
		nop

loc_6B281FFC:				; CODE XREF: _pango_win32_render+356j
		mov	eax, [ebx+edi*4]
		mov	[esp+88h+h], eax
		mov	[esp+88h+hdc], offset aD ; " %d"
		call	_g_print
		inc	edi
		cmp	esi, edi
		jg	short loc_6B281FFC
		mov	ebx, [ebp+var_30]

loc_6B282017:				; CODE XREF: _pango_win32_render+335j
		mov	[esp+88h+hdc], offset asc_6B28B194 ; "\n"
		call	_g_print
		jmp	loc_6B281F2A
; ---------------------------------------------------------------------------

loc_6B282028:				; CODE XREF: _pango_win32_render+152j
					; _pango_win32_render+2B9j
		mov	ecx, [ebp+var_4C]
		mov	[esp+88h+h], ecx ; h
		mov	ebx, [ebp+var_44]
		mov	[esp+88h+hdc], ebx ; hdc
		call	_SelectObject@8	; SelectObject(x,x)
		sub	esp, 8
		mov	eax, [ebp+var_34]
		mov	[esp+88h+hdc], eax
		call	_g_free
		mov	edx, [ebp+var_28]
		mov	[ebp+arg_0], edx
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		jmp	_g_free
; ---------------------------------------------------------------------------

loc_6B28205A:				; CODE XREF: _pango_win32_render+26j
		mov	[ebp+arg_8], offset aGlyphsNull	; "glyphs != NULL"
		mov	[ebp+arg_4], offset ___PRETTY_FUNCTION___41931 ; "pango_win32_render"
		mov	[ebp+arg_0], offset aPango ; "Pango"
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		jmp	_g_return_if_fail_warning
; ---------------------------------------------------------------------------

loc_6B28207B:				; CODE XREF: _pango_win32_render+189j
		mov	[ebp+var_2C], 0
		xor	esi, esi
		jmp	loc_6B281F04
_pango_win32_render endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry  28. pango_win32_render_transformed

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl pango_win32_render_transformed(HDC, int, int, int, int, int)
		public _pango_win32_render_transformed
_pango_win32_render_transformed	proc near

hdc		= dword	ptr -88h
iMode		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_5C		= dword	ptr -5Ch
xf		= tagXFORM ptr -48h
var_30		= XFORM	ptr -30h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 7Ch
		mov	ebx, [ebp+arg_0]
		lea	eax, [ebp+xf]
		mov	[ebp+var_5C], eax
		mov	esi, offset _C_29_50587
		mov	ecx, 6
		mov	edi, eax
		rep movsd
		mov	[esp+88h+hdc], ebx ; hdc
		call	_GetGraphicsMode@4 ; GetGraphicsMode(x)
		push	edx
		mov	esi, eax
		mov	[esp+88h+iMode], 2 ; iMode
		mov	[esp+88h+hdc], ebx ; hdc
		call	_SetGraphicsMode@8 ; SetGraphicsMode(x,x)
		sub	esp, 8
		test	eax, eax
		jz	loc_6B2821CC
		lea	eax, [ebp+xf]
		mov	[esp+88h+iMode], eax ; lpxf
		mov	[esp+88h+hdc], ebx ; hdc
		call	_GetWorldTransform@8 ; GetWorldTransform(x,x)
		sub	esp, 8
		test	eax, eax
		jz	loc_6B28218C
		mov	edi, [ebp+arg_4]
		test	edi, edi
		jz	short loc_6B28212F
		mov	eax, [ebp+arg_4]
		fld	qword ptr [eax]
		fstp	[ebp+var_30.eM11]
		fld	qword ptr [eax+10h]
		fstp	[ebp+var_30.eM12]
		fld	qword ptr [eax+8]
		fstp	[ebp+var_30.eM21]
		fld	qword ptr [eax+18h]
		fstp	[ebp+var_30.eM22]
		fld	qword ptr [eax+20h]
		fstp	[ebp+var_30._eDx]
		fld	qword ptr [eax+28h]
		fstp	[ebp+var_30.eDy]
		lea	eax, [ebp+var_30]
		mov	[esp+88h+iMode], eax ; lpxf
		mov	[esp+88h+hdc], ebx ; hdc
		call	_SetWorldTransform@8 ; SetWorldTransform(x,x)
		sub	esp, 8
		test	eax, eax
		jz	short loc_6B28218C

loc_6B28212F:				; CODE XREF: _pango_win32_render_transformed+65j
					; _pango_win32_render_transformed+15Cj
		mov	eax, [ebp+arg_14]
		test	eax, eax
		js	short loc_6B2821AF

loc_6B282136:				; CODE XREF: _pango_win32_render_transformed+121j
		sar	eax, 0Ah
		mov	[esp+88h+var_78], eax
		mov	eax, [ebp+arg_10]
		test	eax, eax
		js	short loc_6B2821C2

loc_6B282144:				; CODE XREF: _pango_win32_render_transformed+134j
					; _pango_win32_render_transformed+13Bj
		sar	eax, 0Ah
		mov	[esp+88h+var_7C], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+88h+var_80], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+88h+iMode], eax
		mov	[esp+88h+hdc], ebx
		call	_pango_win32_render
		lea	eax, [ebp+xf]
		mov	[esp+88h+iMode], eax ; lpxf
		mov	[esp+88h+hdc], ebx ; hdc
		call	_SetWorldTransform@8 ; SetWorldTransform(x,x)
		sub	esp, 8
		mov	[esp+88h+iMode], esi ; iMode
		mov	[esp+88h+hdc], ebx ; hdc
		call	_SetGraphicsMode@8 ; SetGraphicsMode(x,x)
		sub	esp, 8
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B28218C:				; CODE XREF: _pango_win32_render_transformed+5Aj
					; _pango_win32_render_transformed+A1j
		mov	[esp+88h+var_80], offset aGetworldtransf ; "GetWorldTransform()	failed"
		mov	[esp+88h+iMode], 10h
		mov	[esp+88h+hdc], offset aPango ; "Pango"
		call	_g_log
		mov	eax, [ebp+arg_14]
		test	eax, eax
		jns	short loc_6B282136

loc_6B2821AF:				; CODE XREF: _pango_win32_render_transformed+A8j
		add	eax, 3FFh
		sar	eax, 0Ah
		mov	[esp+88h+var_78], eax
		mov	eax, [ebp+arg_10]
		test	eax, eax
		jns	short loc_6B282144

loc_6B2821C2:				; CODE XREF: _pango_win32_render_transformed+B6j
		add	eax, 3FFh
		jmp	loc_6B282144
; ---------------------------------------------------------------------------

loc_6B2821CC:				; CODE XREF: _pango_win32_render_transformed+40j
		mov	[esp+88h+var_80], offset aSetgraphicsmod ; "SetGraphicsMode() failed"
		mov	[esp+88h+iMode], 10h
		mov	[esp+88h+hdc], offset aPango ; "Pango"
		call	_g_log
		jmp	loc_6B28212F
_pango_win32_render_transformed	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  16. pango_win32_font_logfont

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _pango_win32_font_logfont
_pango_win32_font_logfont proc near

CodePage	= dword	ptr -38h
dwFlags		= dword	ptr -34h
lpWideCharStr	= dword	ptr -30h
cchWideChar	= dword	ptr -2Ch
lpMultiByteStr	= dword	ptr -28h
cbMultiByte	= dword	ptr -24h
lpDefaultChar	= dword	ptr -20h
lpUsedDefaultChar= dword ptr -1Ch
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	ecx, [ebp+arg_0]
		test	ecx, ecx
		jz	loc_6B2822CC
		call	__pango_win32_font_get_type
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx]
		test	edx, edx
		jz	short loc_6B282216
		cmp	[edx], eax
		jz	short loc_6B282254

loc_6B282216:				; CODE XREF: _pango_win32_font_logfont+20j
		mov	[esp+38h+dwFlags], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+38h+CodePage], eax
		call	_g_type_check_instance_is_a
		test	eax, eax
		jnz	short loc_6B282254
		mov	[esp+38h+lpWideCharStr], offset	aPango_win32_is	; "PANGO_WIN32_IS_FONT (font)"
		mov	[esp+38h+dwFlags], offset ___PRETTY_FUNCTION___42044 ; "pango_win32_font_logfont"
		mov	[esp+38h+CodePage], offset aPango ; "Pango"
		call	_g_return_if_fail_warning
		xor	ebx, ebx

loc_6B282247:				; CODE XREF: _pango_win32_font_logfont+CBj
		mov	eax, ebx
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B282254:				; CODE XREF: _pango_win32_font_logfont+24j
					; _pango_win32_font_logfont+37j
		mov	[esp+38h+CodePage], 3Ch
		call	_g_malloc
		mov	ebx, eax
		mov	esi, [ebp+arg_0]
		add	esi, 0Ch
		mov	ecx, 0Fh
		mov	edi, eax
		rep movsd
		mov	[esp+38h+lpUsedDefaultChar], 0 ; lpUsedDefaultChar
		mov	[esp+38h+lpDefaultChar], 0 ; lpDefaultChar
		mov	[esp+38h+cbMultiByte], 20h ; cbMultiByte
		lea	eax, [eax+1Ch]
		mov	[esp+38h+lpMultiByteStr], eax ;	lpMultiByteStr
		mov	[esp+38h+cchWideChar], 0FFFFFFFFh ; cchWideChar
		mov	eax, [ebp+arg_0]
		add	eax, 28h
		mov	[esp+38h+lpWideCharStr], eax ; lpWideCharStr
		mov	[esp+38h+dwFlags], 0 ; dwFlags
		mov	[esp+38h+CodePage], 0 ;	CodePage
		call	_WideCharToMultiByte@32	; WideCharToMultiByte(x,x,x,x,x,x,x,x)
		sub	esp, 20h
		test	eax, eax
		jnz	short loc_6B282247
		mov	byte ptr [ebx+1Ch], 0
		mov	eax, ebx
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B2822CC:				; CODE XREF: _pango_win32_font_logfont+Ej
		mov	[esp+38h+lpWideCharStr], offset	aFontNull ; "font != NULL"
		mov	[esp+38h+dwFlags], offset ___PRETTY_FUNCTION___42044 ; "pango_win32_font_logfont"
		mov	[esp+38h+CodePage], offset aPango ; "Pango"
		call	_g_return_if_fail_warning
		xor	ebx, ebx
		mov	eax, ebx
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
_pango_win32_font_logfont endp

; Exported entry  17. pango_win32_font_logfontw

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _pango_win32_font_logfontw
_pango_win32_font_logfontw proc	near

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		sub	esp, 10h
		mov	esi, [ebp+arg_0]
		test	esi, esi
		jz	short loc_6B282368
		call	__pango_win32_font_get_type
		mov	edx, [esi]
		test	edx, edx
		jz	short loc_6B282312
		cmp	[edx], eax
		jz	short loc_6B282348

loc_6B282312:				; CODE XREF: _pango_win32_font_logfontw+18j
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], esi
		call	_g_type_check_instance_is_a
		test	eax, eax
		jnz	short loc_6B282348
		mov	[esp+18h+var_10], offset aPango_win32_is ; "PANGO_WIN32_IS_FONT	(font)"
		mov	[esp+18h+var_14], offset ___PRETTY_FUNCTION___42062 ; "pango_win32_font_logfontw"
		mov	[esp+18h+var_18], offset aPango	; "Pango"
		call	_g_return_if_fail_warning
		xor	eax, eax
		add	esp, 10h
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B282348:				; CODE XREF: _pango_win32_font_logfontw+1Cj
					; _pango_win32_font_logfontw+2Cj
		mov	[esp+18h+var_18], 5Ch
		call	_g_malloc
		add	esi, 0Ch
		mov	ecx, 17h
		mov	edi, eax
		rep movsd
		add	esp, 10h
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B282368:				; CODE XREF: _pango_win32_font_logfontw+Dj
		mov	[esp+18h+var_10], offset aFontNull ; "font != NULL"
		mov	[esp+18h+var_14], offset ___PRETTY_FUNCTION___42062 ; "pango_win32_font_logfontw"
		mov	[esp+18h+var_18], offset aPango	; "Pango"
		call	_g_return_if_fail_warning
		xor	eax, eax
		add	esp, 10h
		pop	esi
		pop	edi
		leave
		retn
_pango_win32_font_logfontw endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  20. pango_win32_font_select_font

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _pango_win32_font_select_font
_pango_win32_font_select_font proc near	; CODE XREF: _font_get_cmap+30p
					; _pango_win32_font_get_glyph_index+32p ...

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	ebx, [ebp+arg_0]
		mov	edi, [ebp+arg_4]
		call	__pango_win32_font_get_type
		test	ebx, ebx
		jz	short loc_6B2823C2
		mov	esi, [ebx]
		test	esi, esi
		jz	short loc_6B2823B2
		cmp	[esi], eax
		jz	short loc_6B2823E8

loc_6B2823B2:				; CODE XREF: _pango_win32_font_select_font+1Cj
		mov	[esp+28h+var_24], eax
		mov	[esp+28h+var_28], ebx
		call	_g_type_check_instance_is_a
		test	eax, eax
		jnz	short loc_6B2823E8

loc_6B2823C2:				; CODE XREF: _pango_win32_font_select_font+16j
		mov	[esp+28h+var_20], offset aPango_win32_is ; "PANGO_WIN32_IS_FONT	(font)"
		mov	[esp+28h+var_24], offset ___PRETTY_FUNCTION___42083 ; "pango_win32_font_select_font"
		mov	[esp+28h+var_28], offset aPango	; "Pango"
		call	_g_return_if_fail_warning
		xor	eax, eax
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6B2823E8:				; CODE XREF: _pango_win32_font_select_font+20j
					; _pango_win32_font_select_font+30j
		mov	[ebp+arg_4], edi
		mov	[ebp+arg_0], ebx
		mov	eax, [esi+68h]
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		jmp	eax
_pango_win32_font_select_font endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry  13. pango_win32_font_done_font

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _pango_win32_font_done_font
_pango_win32_font_done_font proc near	; CODE XREF: _font_get_cmap+6Cp
					; _pango_win32_font_get_glyph_index+6Ap ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	ebx, [ebp+arg_0]
		call	__pango_win32_font_get_type
		test	ebx, ebx
		jz	short loc_6B28242A
		mov	esi, [ebx]
		test	esi, esi
		jz	short loc_6B28241A
		cmp	[esi], eax
		jz	short loc_6B282450

loc_6B28241A:				; CODE XREF: _pango_win32_font_done_font+18j
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], ebx
		call	_g_type_check_instance_is_a
		test	eax, eax
		jnz	short loc_6B282450

loc_6B28242A:				; CODE XREF: _pango_win32_font_done_font+12j
		mov	[esp+18h+var_10], offset aPango_win32_is ; "PANGO_WIN32_IS_FONT	(font)"
		mov	[esp+18h+var_14], offset ___PRETTY_FUNCTION___42093 ; "pango_win32_font_done_font"
		mov	[esp+18h+var_18], offset aPango	; "Pango"
		call	_g_return_if_fail_warning
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6B282450:				; CODE XREF: _pango_win32_font_done_font+1Cj
					; _pango_win32_font_done_font+2Cj
		mov	[ebp+arg_0], ebx
		mov	eax, [esi+6Ch]
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		jmp	eax
_pango_win32_font_done_font endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_font_get_cmap	proc near		; CODE XREF: _pango_win32_font_get_glyph_index+7Ep
					; _pango_win32_font_get_coverage+194p

hdc		= dword	ptr -58h
dwTable		= dword	ptr -54h
dwOffset	= dword	ptr -50h
pvBuffer	= dword	ptr -4Ch
cjBuffer	= dword	ptr -48h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_20		= dword	ptr -20h
var_1A		= word ptr -1Ah

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	esi, eax
		mov	eax, [eax+78h]
		mov	ebx, [eax+94h]
		test	ebx, ebx
		jz	short loc_6B282484
		mov	eax, ebx
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B282484:				; CODE XREF: _font_get_cmap+16j
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+58h+dwTable], eax
		mov	[esp+58h+hdc], esi
		call	_pango_win32_font_select_font
		mov	edi, ds:__pango_win32_hdc
		mov	edx, 0Ah
		mov	eax, edi
		call	_get_cmap_offset
		mov	edx, eax
		test	eax, eax
		jnz	short loc_6B2824DB

loc_6B2824AD:				; CODE XREF: _font_get_cmap+AAj
					; _font_get_cmap+19Bj
		mov	edi, ds:__pango_win32_hdc
		mov	edx, 1
		mov	eax, edi
		call	_get_cmap_offset
		mov	edx, eax
		test	eax, eax
		jnz	loc_6B282600

loc_6B2824C9:				; CODE XREF: _font_get_cmap+18Ej
					; _font_get_cmap+1CFj ...
		mov	[esp+58h+hdc], esi
		call	_pango_win32_font_done_font
		mov	eax, ebx
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6B2824DB:				; CODE XREF: _font_get_cmap+4Bj
		mov	[esp+58h+cjBuffer], 4 ;	cjBuffer
		lea	eax, [ebp+var_20]
		mov	[esp+58h+pvBuffer], eax	; pvBuffer
		lea	eax, [edx+4]
		mov	[esp+58h+dwOffset], eax	; dwOffset
		mov	[esp+58h+dwTable], 70616D63h ; dwTable
		mov	[esp+58h+hdc], edi ; hdc
		mov	[ebp+var_30], edx
		call	_GetFontData@20	; GetFontData(x,x,x,x,x)
		sub	esp, 14h
		cmp	eax, 4
		jnz	short loc_6B2824AD
		mov	eax, [ebp+var_20]
		ror	ax, 8
		ror	eax, 10h
		ror	ax, 8
		mov	[ebp+var_20], eax
		mov	[esp+58h+hdc], eax
		call	_g_malloc
		mov	ecx, eax
		mov	eax, [ebp+var_20]
		mov	[esp+58h+cjBuffer], eax	; cjBuffer
		mov	[esp+58h+pvBuffer], ecx	; pvBuffer
		mov	edx, [ebp+var_30]
		mov	[esp+58h+dwOffset], edx	; dwOffset
		mov	[esp+58h+dwTable], 70616D63h ; dwTable
		mov	[esp+58h+hdc], edi ; hdc
		mov	[ebp+var_30], ecx
		call	_GetFontData@20	; GetFontData(x,x,x,x,x)
		sub	esp, 14h
		mov	[ebp+var_2C], eax
		cmp	eax, [ebp+var_20]
		mov	ecx, [ebp+var_30]
		jnz	loc_6B2825F3
		mov	edi, [ecx]
		ror	di, 8
		mov	[ecx], di
		mov	eax, [ecx+4]
		ror	ax, 8
		ror	eax, 10h
		ror	ax, 8
		mov	[ecx+4], eax
		mov	edx, [ecx+8]
		ror	dx, 8
		ror	edx, 10h
		ror	dx, 8
		mov	[ecx+8], edx
		mov	edx, [ecx+0Ch]
		ror	dx, 8
		ror	edx, 10h
		ror	dx, 8
		mov	[ecx+0Ch], edx
		cmp	di, 0Ch
		jnz	short loc_6B2825F3
		test	al, 3
		jnz	short loc_6B2825F3
		cmp	[ebp+var_2C], eax
		jb	short loc_6B2825F3
		lea	edx, [edx+edx*2]
		lea	edx, ds:10h[edx*4]
		cmp	eax, edx
		jb	short loc_6B2825F3
		mov	ebx, [ebp+var_2C]
		lea	ebx, [ecx+ebx]
		lea	eax, [ecx+10h]
		cmp	ebx, eax
		jbe	short loc_6B2825DA

loc_6B2825C4:				; CODE XREF: _font_get_cmap+178j
		mov	edx, [eax]
		ror	dx, 8
		ror	edx, 10h
		ror	dx, 8
		mov	[eax], edx
		add	eax, 4
		cmp	ebx, eax
		ja	short loc_6B2825C4

loc_6B2825DA:				; CODE XREF: _font_get_cmap+162j
		mov	eax, [esi+78h]
		mov	word ptr [eax+90h], 0Ch
		mov	[eax+94h], ecx
		mov	ebx, ecx
		jmp	loc_6B2824C9
; ---------------------------------------------------------------------------

loc_6B2825F3:				; CODE XREF: _font_get_cmap+F8j
					; _font_get_cmap+13Ej ...
		mov	[esp+58h+hdc], ecx
		call	_g_free
		jmp	loc_6B2824AD
; ---------------------------------------------------------------------------

loc_6B282600:				; CODE XREF: _font_get_cmap+63j
		mov	[esp+58h+cjBuffer], 2 ;	cjBuffer
		lea	eax, [ebp+var_1A]
		mov	[esp+58h+pvBuffer], eax	; pvBuffer
		lea	eax, [edx+2]
		mov	[esp+58h+dwOffset], eax	; dwOffset
		mov	[esp+58h+dwTable], 70616D63h ; dwTable
		mov	[esp+58h+hdc], edi ; hdc
		mov	[ebp+var_30], edx
		call	_GetFontData@20	; GetFontData(x,x,x,x,x)
		sub	esp, 14h
		cmp	eax, 2
		jnz	loc_6B2824C9
		mov	ax, [ebp+var_1A]
		ror	ax, 8
		mov	[ebp+var_1A], ax
		movzx	eax, ax
		mov	[esp+58h+hdc], eax
		call	_g_malloc
		mov	ecx, eax
		movzx	eax, [ebp+var_1A]
		mov	[esp+58h+cjBuffer], eax	; cjBuffer
		mov	[esp+58h+pvBuffer], ecx	; pvBuffer
		mov	edx, [ebp+var_30]
		mov	[esp+58h+dwOffset], edx	; dwOffset
		mov	[esp+58h+dwTable], 70616D63h ; dwTable
		mov	[esp+58h+hdc], edi ; hdc
		mov	[ebp+var_30], ecx
		call	_GetFontData@20	; GetFontData(x,x,x,x,x)
		sub	esp, 14h
		movzx	edx, [ebp+var_1A]
		cmp	eax, edx
		mov	ecx, [ebp+var_30]
		jnz	loc_6B28271B
		mov	dx, [ecx]
		ror	dx, 8
		cmp	dx, 4
		jnz	loc_6B28271B
		mov	dx, [ecx+2]
		ror	dx, 8
		test	dl, 1
		jnz	short loc_6B28271B
		mov	word ptr [ecx],	4
		mov	[ecx+2], dx
		mov	dx, [ecx+4]
		ror	dx, 8
		mov	[ecx+4], dx
		mov	dx, [ecx+6]
		ror	dx, 8
		mov	[ecx+6], dx
		mov	dx, [ecx+8]
		ror	dx, 8
		mov	[ecx+8], dx
		mov	dx, [ecx+0Ah]
		ror	dx, 8
		mov	[ecx+0Ah], dx
		mov	dx, [ecx+0Ch]
		ror	dx, 8
		mov	[ecx+0Ch], dx
		lea	ebx, [ecx+eax]
		lea	eax, [ecx+0Eh]
		jmp	short loc_6B2826FE
; ---------------------------------------------------------------------------

loc_6B2826F1:				; CODE XREF: _font_get_cmap+2A0j
		mov	dx, [eax]
		ror	dx, 8
		mov	[eax], dx
		add	eax, 2

loc_6B2826FE:				; CODE XREF: _font_get_cmap+28Fj
		cmp	ebx, eax
		ja	short loc_6B2826F1
		mov	eax, [esi+78h]
		mov	word ptr [eax+90h], 4
		mov	[eax+94h], ecx
		mov	ebx, ecx
		jmp	loc_6B2824C9
; ---------------------------------------------------------------------------

loc_6B28271B:				; CODE XREF: _font_get_cmap+220j
					; _font_get_cmap+231j ...
		mov	[esp+58h+hdc], ecx
		call	_g_free
		jmp	loc_6B2824C9
_font_get_cmap	endp

; Exported entry  15. pango_win32_font_get_metrics_factor

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _pango_win32_font_get_metrics_factor
_pango_win32_font_get_metrics_factor proc near
					; CODE XREF: _itemize_shape_and_place_clone_2+2Cp

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	ebx, [ebp+arg_0]
		call	__pango_win32_font_get_type
		test	ebx, ebx
		jz	short loc_6B282756
		mov	esi, [ebx]
		test	esi, esi
		jz	short loc_6B282746
		cmp	[esi], eax
		jz	short loc_6B28277C

loc_6B282746:				; CODE XREF: _pango_win32_font_get_metrics_factor+18j
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], ebx
		call	_g_type_check_instance_is_a
		test	eax, eax
		jnz	short loc_6B28277C

loc_6B282756:				; CODE XREF: _pango_win32_font_get_metrics_factor+12j
		mov	[esp+18h+var_10], offset aPango_win32_is ; "PANGO_WIN32_IS_FONT	(font)"
		mov	[esp+18h+var_14], offset ___PRETTY_FUNCTION___42103 ; "pango_win32_font_get_metrics_factor"
		mov	[esp+18h+var_18], offset aPango	; "Pango"
		call	_g_return_if_fail_warning
		fld1
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B28277C:				; CODE XREF: _pango_win32_font_get_metrics_factor+1Cj
					; _pango_win32_font_get_metrics_factor+2Cj
		mov	[ebp+arg_0], ebx
		mov	eax, [esi+70h]
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		jmp	eax
_pango_win32_font_get_metrics_factor endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry  24. pango_win32_get_unknown_glyph

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _pango_win32_get_unknown_glyph
_pango_win32_get_unknown_glyph proc near

arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+arg_4]
		or	eax, 10000000h
		leave
		retn
_pango_win32_get_unknown_glyph endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry  27. pango_win32_render_layout_line

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl pango_win32_render_layout_line(HDC hdc, int, int,	int)
		public _pango_win32_render_layout_line
_pango_win32_render_layout_line	proc near ; CODE XREF: _pango_win32_render_layout+BDp

color		= dword	ptr -0E8h
h		= dword	ptr -0E4h
top		= dword	ptr -0E0h
right		= dword	ptr -0DCh
bottom		= dword	ptr -0D8h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_8E		= word ptr -8Eh
var_8C		= word ptr -8Ch
var_8A		= word ptr -8Ah
var_88		= dword	ptr -88h
var_6E		= word ptr -6Eh
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
ho		= dword	ptr -5Ch
apt		= POINT	ptr -58h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_30		= dword	ptr -30h
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_1C		= dword	ptr -1Ch
hdc		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 0DCh
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+0Ch]
		mov	[ebp+var_64], eax
		lea	eax, [ebp+var_28]
		mov	[esp+0E8h+top],	eax
		mov	[esp+0E8h+h], 0
		mov	[esp+0E8h+color], edx
		call	_pango_layout_line_get_extents
		mov	ebx, [ebp+var_64]
		test	ebx, ebx
		jz	loc_6B282BA2
		mov	[ebp+var_68], 0
		mov	edx, [ebp+arg_8]
		dec	edx
		mov	[ebp+var_B0], edx
		mov	ecx, [ebp+arg_C]
		add	ecx, 4
		mov	[ebp+var_B4], ecx
		mov	eax, [ebp+arg_C]
		add	eax, 2
		mov	[ebp+var_6C], eax
		lea	esi, [esi+0]

loc_6B2827FC:				; CODE XREF: _pango_win32_render_layout_line+187j
		mov	edx, [ebp+var_64]
		mov	edi, [edx]
		mov	ecx, [edx+4]
		mov	[ebp+var_64], ecx
		mov	eax, [edi]
		mov	[ebp+var_60], eax
		mov	eax, [eax+20h]
		test	eax, eax
		jz	loc_6B282953
		xor	ebx, ebx
		xor	esi, esi
		mov	[ebp+ho], 0
		jmp	short loc_6B28283E
; ---------------------------------------------------------------------------

loc_6B282824:				; CODE XREF: _pango_win32_render_layout_line+ABj
		jb	short loc_6B282837
		cmp	ecx, 0Ah
		jz	loc_6B282928
		cmp	ecx, 0Bh
		jnz	short loc_6B282837
		mov	ebx, [edx+0Ch]

loc_6B282837:				; CODE XREF: _pango_win32_render_layout_line:loc_6B282824j
					; _pango_win32_render_layout_line+96j ...
		mov	eax, [eax+4]
		test	eax, eax
		jz	short loc_6B282871

loc_6B28283E:				; CODE XREF: _pango_win32_render_layout_line+86j
					; _pango_win32_render_layout_line+D3j
		mov	edx, [eax]
		mov	ecx, [edx]
		mov	ecx, [ecx]
		cmp	ecx, 9
		jnz	short loc_6B282824
		mov	ecx, [edx+0Ch]
		mov	[ebp+var_6E], cx
		mov	cx, [edx+0Eh]
		mov	word ptr [ebp+var_88], cx
		mov	edx, [edx+10h]
		mov	[ebp+var_8C], dx
		mov	esi, 1
		mov	eax, [eax+4]
		test	eax, eax
		jnz	short loc_6B28283E

loc_6B282871:				; CODE XREF: _pango_win32_render_layout_line+A0j
		test	ebx, ebx
		jz	loc_6B28295C
		lea	ecx, [ebp+var_38]
		mov	[esp+0E8h+right], ecx
		lea	eax, [ebp+var_48]
		mov	[esp+0E8h+top],	eax
		mov	edx, [ebp+var_60]
		mov	eax, [edx+14h]
		mov	[esp+0E8h+h], eax
		mov	eax, [edi+4]
		mov	[esp+0E8h+color], eax
		call	_pango_glyph_string_extents
		mov	ecx, [ebp+ho]
		test	ecx, ecx
		jnz	loc_6B28298D

loc_6B2828A7:				; CODE XREF: _pango_win32_render_layout_line+1EBj
		mov	[ebp+ho], 0
		test	esi, esi
		jnz	loc_6B282A67

loc_6B2828B6:				; CODE XREF: _pango_win32_render_layout_line+2C5j
		mov	[ebp+var_AC], 0

loc_6B2828C0:				; CODE XREF: _pango_win32_render_layout_line+31Fj
		mov	ecx, [ebp+arg_C]
		mov	[esp+0E8h+bottom], ecx
		mov	eax, [ebp+var_68]
		add	eax, 200h
		sar	eax, 0Ah
		add	eax, [ebp+arg_8]
		mov	[esp+0E8h+right], eax
		mov	eax, [edi+4]
		mov	[esp+0E8h+top],	eax
		mov	eax, [edi]
		mov	eax, [eax+14h]
		mov	[esp+0E8h+h], eax
		mov	eax, [ebp+hdc]
		mov	[esp+0E8h+color], eax
		call	_pango_win32_render
		cmp	ebx, 2
		jz	loc_6B282C14
		ja	loc_6B282AC0
		dec	ebx
		jz	loc_6B282C78

loc_6B28290A:				; CODE XREF: _pango_win32_render_layout_line+330j
					; _pango_win32_render_layout_line+35Dj	...
		test	esi, esi
		jnz	loc_6B282B70
		mov	eax, [ebp+var_30]
		mov	ebx, [ebp+var_64]
		test	ebx, ebx
		jz	loc_6B282BA2

loc_6B282920:				; CODE XREF: _pango_win32_render_layout_line+400j
		add	[ebp+var_68], eax
		jmp	loc_6B2827FC
; ---------------------------------------------------------------------------

loc_6B282928:				; CODE XREF: _pango_win32_render_layout_line+8Dj
		mov	ecx, [edx+0Ch]
		mov	[ebp+var_8A], cx
		mov	cx, [edx+0Eh]
		mov	word ptr [ebp+var_A8], cx
		mov	edx, [edx+10h]
		mov	[ebp+var_8E], dx
		mov	[ebp+ho], 1
		jmp	loc_6B282837
; ---------------------------------------------------------------------------

loc_6B282953:				; CODE XREF: _pango_win32_render_layout_line+75j
		xor	esi, esi
		mov	[ebp+ho], 0

loc_6B28295C:				; CODE XREF: _pango_win32_render_layout_line+D7j
		lea	eax, [ebp+var_38]
		mov	[esp+0E8h+right], eax
		mov	[esp+0E8h+top],	0
		mov	edx, [ebp+var_60]
		mov	eax, [edx+14h]
		mov	[esp+0E8h+h], eax
		mov	eax, [edi+4]
		mov	[esp+0E8h+color], eax
		call	_pango_glyph_string_extents
		xor	ebx, ebx
		mov	ecx, [ebp+ho]
		test	ecx, ecx
		jz	loc_6B2828A7

loc_6B28298D:				; CODE XREF: _pango_win32_render_layout_line+105j
		mov	ecx, [ebp+var_A8]
		lea	edx, [ecx+80h]
		and	edx, 0FF00h
		movzx	eax, [ebp+var_8E]
		sub	eax, 0FFFFFF80h
		movzx	eax, ah
		shl	eax, 10h
		or	edx, eax
		movzx	eax, [ebp+var_8A]
		sub	eax, 0FFFFFF80h
		movzx	eax, ah
		or	edx, eax
		mov	[esp+0E8h+color], edx ;	color
		call	_CreateSolidBrush@4 ; CreateSolidBrush(x)
		push	edx
		mov	[ebp+ho], eax
		mov	[esp+0E8h+h], eax ; h
		mov	eax, [ebp+hdc]
		mov	[esp+0E8h+color], eax ;	hdc
		call	_SelectObject@8	; SelectObject(x,x)
		sub	esp, 8
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 200h
		sar	eax, 0Ah
		mov	[esp+0E8h+bottom], eax ; bottom
		mov	eax, [ebp+var_30]
		add	eax, 200h
		sar	eax, 0Ah
		mov	[esp+0E8h+right], eax ;	right
		mov	eax, [ebp+var_24]
		add	eax, 200h
		sar	eax, 0Ah
		add	eax, [ebp+arg_C]
		mov	[esp+0E8h+top],	eax ; top
		mov	eax, [ebp+var_38]
		mov	ecx, [ebp+var_68]
		lea	eax, [ecx+eax+200h]
		sar	eax, 0Ah
		add	eax, [ebp+arg_8]
		mov	[esp+0E8h+h], eax ; left
		mov	eax, [ebp+hdc]
		mov	[esp+0E8h+color], eax ;	hdc
		mov	[ebp+var_BC], edx
		call	_Rectangle@20	; Rectangle(x,x,x,x,x)
		sub	esp, 14h
		mov	edx, [ebp+var_BC]
		mov	[esp+0E8h+h], edx ; h
		mov	edx, [ebp+hdc]
		mov	[esp+0E8h+color], edx ;	hdc
		call	_SelectObject@8	; SelectObject(x,x)
		sub	esp, 8
		mov	ecx, [ebp+ho]
		mov	[esp+0E8h+color], ecx ;	ho
		call	_DeleteObject@4	; DeleteObject(x)
		push	ecx
		test	esi, esi
		jz	loc_6B2828B6

loc_6B282A67:				; CODE XREF: _pango_win32_render_layout_line+114j
		mov	eax, [ebp+var_88]
		lea	edx, [eax+80h]
		and	edx, 0FF00h
		movzx	eax, [ebp+var_8C]
		sub	eax, 0FFFFFF80h
		movzx	eax, ah
		shl	eax, 10h
		or	edx, eax
		movzx	eax, [ebp+var_6E]
		sub	eax, 0FFFFFF80h
		movzx	eax, ah
		or	edx, eax
		mov	[esp+0E8h+color], edx ;	color
		call	_CreateSolidBrush@4 ; CreateSolidBrush(x)
		push	edx
		mov	[ebp+ho], eax
		mov	[esp+0E8h+h], eax ; h
		mov	edx, [ebp+hdc]
		mov	[esp+0E8h+color], edx ;	hdc
		call	_SelectObject@8	; SelectObject(x,x)
		sub	esp, 8
		mov	[ebp+var_AC], eax
		jmp	loc_6B2828C0
; ---------------------------------------------------------------------------

loc_6B282AC0:				; CODE XREF: _pango_win32_render_layout_line+161j
		cmp	ebx, 3
		jz	loc_6B282BAC
		cmp	ebx, 4
		jnz	loc_6B28290A
		mov	ebx, [ebp+var_68]
		add	ebx, [ebp+var_48]
		mov	eax, [ebp+var_40]
		lea	eax, [ebx+eax+200h]
		sar	eax, 0Ah
		add	eax, [ebp+arg_8]
		add	ebx, 200h
		sar	ebx, 0Ah
		add	ebx, [ebp+var_B0]
		cmp	eax, ebx
		jl	loc_6B28290A
		xor	edi, edi
		mov	ecx, [ebp+arg_C]
		add	ecx, 3
		mov	[ebp+var_60], ecx
		mov	[ebp+var_B8], esi
		mov	esi, eax
		jmp	short loc_6B282B52
; ---------------------------------------------------------------------------

loc_6B282B14:				; CODE XREF: _pango_win32_render_layout_line+3BBj
		lea	eax, [ebx+1]
		mov	[ebp+var_50], eax
		test	edi, edi
		jz	short loc_6B282B62

loc_6B282B1E:				; CODE XREF: _pango_win32_render_layout_line+3C4j
		mov	eax, [ebp+var_6C]
		mov	[ebp+var_4C], eax
		mov	[ebp+apt.y], eax

loc_6B282B27:				; CODE XREF: _pango_win32_render_layout_line+3CFj
		mov	[esp+0E8h+top],	2 ; cpt
		lea	ecx, [ebp+apt]
		mov	[esp+0E8h+h], ecx ; apt
		mov	eax, [ebp+hdc]
		mov	[esp+0E8h+color], eax ;	hdc
		call	_Polyline@12	; Polyline(x,x,x)
		sub	esp, 0Ch
		add	ebx, 2
		cmp	esi, ebx
		jl	loc_6B282CA0
		xor	edi, 1

loc_6B282B52:				; CODE XREF: _pango_win32_render_layout_line+376j
		mov	[ebp+apt.x], ebx
		cmp	esi, ebx
		jle	short loc_6B282B14
		mov	eax, esi
		mov	[ebp+var_50], eax
		test	edi, edi
		jnz	short loc_6B282B1E

loc_6B282B62:				; CODE XREF: _pango_win32_render_layout_line+380j
		mov	edx, [ebp+var_60]
		mov	[ebp+var_4C], edx
		mov	[ebp+apt.y], edx
		jmp	short loc_6B282B27
; ---------------------------------------------------------------------------
		align 10h

loc_6B282B70:				; CODE XREF: _pango_win32_render_layout_line+170j
		mov	ecx, [ebp+var_AC]
		mov	[esp+0E8h+h], ecx ; h
		mov	eax, [ebp+hdc]
		mov	[esp+0E8h+color], eax ;	hdc
		call	_SelectObject@8	; SelectObject(x,x)
		sub	esp, 8
		mov	edx, [ebp+ho]
		mov	[esp+0E8h+color], edx ;	ho
		call	_DeleteObject@4	; DeleteObject(x)
		push	esi
		mov	eax, [ebp+var_30]
		mov	ebx, [ebp+var_64]
		test	ebx, ebx
		jnz	loc_6B282920

loc_6B282BA2:				; CODE XREF: _pango_win32_render_layout_line+31j
					; _pango_win32_render_layout_line+17Ej
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B282BAC:				; CODE XREF: _pango_win32_render_layout_line+327j
		mov	edx, [ebp+var_68]
		add	edx, [ebp+var_48]
		lea	eax, [edx+200h]
		sar	eax, 0Ah
		add	eax, [ebp+var_B0]
		mov	[ebp+apt.x], eax
		mov	eax, [ebp+var_44]
		add	eax, [ebp+var_3C]
		add	eax, 200h
		sar	eax, 0Ah
		mov	ecx, [ebp+arg_C]
		lea	eax, [ecx+eax+2]
		mov	[ebp+var_4C], eax
		mov	[ebp+apt.y], eax

loc_6B282BDF:				; CODE XREF: _pango_win32_render_layout_line+4FDj
		mov	eax, [ebp+var_40]
		lea	eax, [edx+eax+200h]
		sar	eax, 0Ah
		add	eax, [ebp+arg_8]
		mov	[ebp+var_50], eax

loc_6B282BF2:				; CODE XREF: _pango_win32_render_layout_line+4D5j
		mov	[esp+0E8h+top],	2 ; cpt
		lea	eax, [ebp+apt]
		mov	[esp+0E8h+h], eax ; apt
		mov	edx, [ebp+hdc]
		mov	[esp+0E8h+color], edx ;	hdc
		call	_Polyline@12	; Polyline(x,x,x)
		sub	esp, 0Ch
		jmp	loc_6B28290A
; ---------------------------------------------------------------------------

loc_6B282C14:				; CODE XREF: _pango_win32_render_layout_line+15Bj
		mov	edx, [ebp+var_68]
		add	edx, [ebp+var_48]
		lea	eax, [edx+200h]
		sar	eax, 0Ah
		add	eax, [ebp+var_B0]
		mov	[ebp+apt.x], eax
		mov	ecx, [ebp+var_B4]
		mov	[ebp+var_4C], ecx
		mov	[ebp+apt.y], ecx
		mov	eax, [ebp+var_40]
		lea	eax, [edx+eax+200h]
		sar	eax, 0Ah
		add	eax, [ebp+arg_8]
		mov	[ebp+var_50], eax
		mov	[esp+0E8h+top],	2 ; cpt
		lea	eax, [ebp+apt]
		mov	[esp+0E8h+h], eax ; apt
		mov	edx, [ebp+hdc]
		mov	[esp+0E8h+color], edx ;	hdc
		call	_Polyline@12	; Polyline(x,x,x)
		sub	esp, 0Ch
		mov	ecx, [ebp+var_6C]
		mov	[ebp+var_4C], ecx
		mov	[ebp+apt.y], ecx
		jmp	loc_6B282BF2
; ---------------------------------------------------------------------------
		align 4

loc_6B282C78:				; CODE XREF: _pango_win32_render_layout_line+168j
		mov	edx, [ebp+var_68]
		add	edx, [ebp+var_48]
		lea	eax, [edx+200h]
		sar	eax, 0Ah
		add	eax, [ebp+var_B0]
		mov	[ebp+apt.x], eax
		mov	ecx, [ebp+var_6C]
		mov	[ebp+var_4C], ecx
		mov	[ebp+apt.y], ecx
		jmp	loc_6B282BDF
; ---------------------------------------------------------------------------
		align 10h

loc_6B282CA0:				; CODE XREF: _pango_win32_render_layout_line+3ADj
		mov	esi, [ebp+var_B8]
		jmp	loc_6B28290A
_pango_win32_render_layout_line	endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry  26. pango_win32_render_layout

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl pango_win32_render_layout(HDC, int, int, int)
		public _pango_win32_render_layout
_pango_win32_render_layout proc	near

hdc		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	edi, [ebp+arg_0]
		mov	ebx, [ebp+arg_4]
		test	edi, edi
		jz	loc_6B282D8C
		call	_pango_layout_get_type
		test	ebx, ebx
		jz	short loc_6B282CE6
		mov	edx, [ebx]
		test	edx, edx
		jz	short loc_6B282CD6
		cmp	[edx], eax
		jz	short loc_6B282D0C

loc_6B282CD6:				; CODE XREF: _pango_win32_render_layout+24j
		mov	[esp+38h+var_34], eax
		mov	[esp+38h+hdc], ebx
		call	_g_type_check_instance_is_a
		test	eax, eax
		jnz	short loc_6B282D0C

loc_6B282CE6:				; CODE XREF: _pango_win32_render_layout+1Ej
		mov	[esp+38h+var_30], offset aPango_is_layou ; "PANGO_IS_LAYOUT (layout)"
		mov	[esp+38h+var_34], offset ___PRETTY_FUNCTION___42219 ; "pango_win32_render_layout"
		mov	[esp+38h+hdc], offset aPango ; "Pango"
		call	_g_return_if_fail_warning

loc_6B282D02:				; CODE XREF: _pango_win32_render_layout+FCj
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B282D0C:				; CODE XREF: _pango_win32_render_layout+28j
					; _pango_win32_render_layout+38j
		mov	[esp+38h+hdc], ebx
		call	_pango_layout_get_iter
		mov	ebx, eax
		xchg	ax, ax

loc_6B282D18:				; CODE XREF: _pango_win32_render_layout+CCj
		mov	[esp+38h+hdc], ebx
		call	_pango_layout_iter_get_line_readonly
		mov	esi, eax
		lea	eax, [ebp+var_28]
		mov	[esp+38h+var_30], eax
		mov	[esp+38h+var_34], 0
		mov	[esp+38h+hdc], ebx
		call	_pango_layout_iter_get_line_extents
		mov	[esp+38h+hdc], ebx
		call	_pango_layout_iter_get_baseline
		add	eax, 200h
		sar	eax, 0Ah
		add	eax, [ebp+arg_C]
		mov	[esp+38h+var_2C], eax ;	int
		mov	eax, [ebp+var_28]
		add	eax, 200h
		sar	eax, 0Ah
		add	eax, [ebp+arg_8]
		mov	[esp+38h+var_30], eax ;	int
		mov	[esp+38h+var_34], esi ;	int
		mov	[esp+38h+hdc], edi ; hdc
		call	_pango_win32_render_layout_line
		mov	[esp+38h+hdc], ebx
		call	_pango_layout_iter_next_line
		test	eax, eax
		jnz	short loc_6B282D18
		mov	[esp+38h+hdc], ebx
		call	_pango_layout_iter_free
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B282D8C:				; CODE XREF: _pango_win32_render_layout+11j
		mov	[esp+38h+var_30], offset aHdcNull ; "hdc != NULL"
		mov	[esp+38h+var_34], offset ___PRETTY_FUNCTION___42219 ; "pango_win32_render_layout"
		mov	[esp+38h+hdc], offset aPango ; "Pango"
		call	_g_return_if_fail_warning
		jmp	loc_6B282D02
_pango_win32_render_layout endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  14. pango_win32_font_get_glyph_index

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _pango_win32_font_get_glyph_index
_pango_win32_font_get_glyph_index proc near ; CODE XREF: _basic_engine_shape+1C4p

hdc		= dword	ptr -78h
lpstr		= dword	ptr -74h
c		= dword	ptr -70h
pgi		= dword	ptr -6Ch
fl		= dword	ptr -68h
var_4C		= dword	ptr -4Ch
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
str		= word ptr -1Eh
var_1C		= word ptr -1Ch
var_1A		= word ptr -1Ah
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 6Ch
		mov	ebx, [ebp+arg_0]
		mov	edi, [ebp+arg_4]
		mov	eax, [ebx+78h]
		mov	eax, [eax+8Ch]
		test	eax, eax
		jnz	short loc_6B282E2C

loc_6B282DCC:				; CODE XREF: _pango_win32_font_get_glyph_index+99j
					; _pango_win32_font_get_glyph_index+21Aj
		mov	[ebp+str], di
		mov	[ebp+var_1C], 0
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+78h+lpstr], eax
		mov	[esp+78h+hdc], ebx
		call	_pango_win32_font_select_font
		mov	[esp+78h+fl], 0	; fl
		lea	eax, [ebp+var_1A]
		mov	[esp+78h+pgi], eax ; pgi
		mov	[esp+78h+c], 1	; c
		lea	eax, [ebp+str]
		mov	[esp+78h+lpstr], eax ; lpstr
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+78h+hdc], eax ; hdc
		call	_GetGlyphIndicesW@20 ; GetGlyphIndicesW(x,x,x,x,x)
		sub	esp, 14h
		mov	esi, eax
		mov	[esp+78h+hdc], ebx
		call	_pango_win32_font_done_font
		dec	esi
		jz	short loc_6B282E90

loc_6B282E22:				; CODE XREF: _pango_win32_font_get_glyph_index+B9j
					; _pango_win32_font_get_glyph_index+DBj ...
		xor	eax, eax

loc_6B282E24:				; CODE XREF: _pango_win32_font_get_glyph_index+167j
					; _pango_win32_font_get_glyph_index+24Cj
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6B282E2C:				; CODE XREF: _pango_win32_font_get_glyph_index+1Aj
		mov	eax, ebx
		call	_font_get_cmap
		mov	[ebp+var_2C], eax
		test	eax, eax
		jz	loc_6B282FBD
		mov	eax, [ebx+78h]
		mov	esi, [eax+8Ch]
		test	esi, esi
		jz	short loc_6B282DCC
		mov	eax, [eax+90h]
		cmp	ax, 4
		jz	short loc_6B282E9C
		cmp	ax, 0Ch
		jnz	loc_6B283015
		mov	eax, [ebp+var_2C]
		mov	esi, [eax+0Ch]
		test	esi, esi
		jz	short loc_6B282E22
		xor	ecx, ecx
		xor	edx, edx
		nop

loc_6B282E70:				; CODE XREF: _pango_win32_font_get_glyph_index+D9j
		mov	ebx, [eax+10h]
		cmp	edi, ebx
		jb	short loc_6B282E80
		cmp	edi, [eax+14h]
		jbe	loc_6B282FA8

loc_6B282E80:				; CODE XREF: _pango_win32_font_get_glyph_index+C5j
		inc	edx
		add	eax, 0Ch
		add	ecx, 3
		cmp	edx, esi
		jb	short loc_6B282E70
		jmp	short loc_6B282E22
; ---------------------------------------------------------------------------
		align 10h

loc_6B282E90:				; CODE XREF: _pango_win32_font_get_glyph_index+70j
		movzx	eax, [ebp+var_1A]
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6B282E9C:				; CODE XREF: _pango_win32_font_get_glyph_index+A5j
		cmp	edi, 0FFFFh
		ja	loc_6B282E22
		mov	eax, [ebp+var_2C]
		mov	bx, [eax+6]
		shr	bx, 1
		add	eax, 0Eh
		mov	[ebp+var_3C], eax
		movzx	edx, bx
		mov	[ebp+var_40], edx
		mov	[ebp+var_34], edx
		mov	ecx, [ebp+var_2C]
		lea	ecx, [ecx+edx*2+10h]
		mov	[ebp+var_38], ecx
		mov	edx, ds:_last_42345
		cmp	[ebp+var_40], edx
		jbe	short loc_6B282F1C
		lea	eax, [edx+edx]
		cmp	di, [ecx+eax]
		jb	short loc_6B282F1C
		mov	esi, [ebp+var_3C]
		cmp	di, [esi+eax]
		ja	short loc_6B282F1C
		movzx	edx, dx
		lea	eax, [edx+edx]

loc_6B282EEE:				; CODE XREF: _pango_win32_font_get_glyph_index+1F1j
					; _pango_win32_font_get_glyph_index+260j
		mov	ebx, [ebp+var_2C]
		add	ebx, 10h
		mov	esi, [ebp+var_40]
		lea	ecx, [esi+esi*2]
		lea	ecx, [ebx+ecx*2]
		mov	[ebp+var_2C], ecx
		lea	ebx, [ebx+esi*4]
		mov	cx, [ecx+eax]
		test	cx, cx
		jnz	loc_6B282FCF
		add	di, [ebx+eax]
		movzx	eax, di
		jmp	loc_6B282E24
; ---------------------------------------------------------------------------

loc_6B282F1C:				; CODE XREF: _pango_win32_font_get_glyph_index+124j
					; _pango_win32_font_get_glyph_index+12Dj ...
		xor	eax, eax
		jmp	short loc_6B282F2F
; ---------------------------------------------------------------------------

loc_6B282F20:				; CODE XREF: _pango_win32_font_get_glyph_index+1ACj
		mov	eax, edx
		mov	edx, [ebp+var_3C]
		cmp	di, [edx+ecx]
		jbe	loc_6B283001

loc_6B282F2F:				; CODE XREF: _pango_win32_font_get_glyph_index+16Ej
		cmp	ax, bx
		jnb	loc_6B282E22
		movzx	ecx, ax
		mov	[ebp+var_30], ecx
		mov	edx, [ebp+var_34]
		add	edx, ecx
		sar	edx, 1
		mov	esi, edx
		cmp	ax, dx
		jz	short loc_6B282F7B

loc_6B282F4C:				; CODE XREF: _pango_win32_font_get_glyph_index+1C9j
		movzx	esi, si
		mov	[ebp+var_4C], esi
		lea	ecx, [esi+esi]
		mov	esi, [ebp+var_38]
		cmp	di, [esi+ecx]
		jnb	short loc_6B282F20
		mov	ebx, edx
		cmp	ax, dx
		jnb	loc_6B282E22
		movzx	edx, bx
		mov	[ebp+var_34], edx
		add	edx, [ebp+var_30]
		sar	edx, 1
		mov	esi, edx
		cmp	ax, dx
		jnz	short loc_6B282F4C

loc_6B282F7B:				; CODE XREF: _pango_win32_font_get_glyph_index+19Aj
		mov	edx, [ebp+var_30]
		lea	eax, [edx+edx]
		mov	ecx, [ebp+var_38]
		cmp	di, [ecx+eax]
		jb	loc_6B282E22
		mov	esi, [ebp+var_3C]
		cmp	di, [esi+eax]
		ja	loc_6B282E22
		mov	ds:_last_42345,	edx
		jmp	loc_6B282EEE
; ---------------------------------------------------------------------------
		align 4

loc_6B282FA8:				; CODE XREF: _pango_win32_font_get_glyph_index+CAj
		sub	di, bx
		mov	edx, [ebp+var_2C]
		add	edi, [edx+ecx*4+18h]
		movzx	eax, di
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6B282FBD:				; CODE XREF: _pango_win32_font_get_glyph_index+88j
		mov	eax, [ebx+78h]
		mov	dword ptr [eax+8Ch], 0
		jmp	loc_6B282DCC
; ---------------------------------------------------------------------------

loc_6B282FCF:				; CODE XREF: _pango_win32_font_get_glyph_index+15Aj
		shr	cx, 1
		movzx	ecx, cx
		mov	esi, [ebp+var_38]
		movzx	esi, word ptr [esi+eax]
		sub	ecx, esi
		movzx	edi, di
		add	edx, ecx
		add	edx, edi
		mov	ecx, [ebp+var_2C]
		mov	dx, [ecx+edx*2]
		test	dx, dx
		jz	loc_6B282E22
		add	dx, [ebx+eax]
		movzx	eax, dx
		jmp	loc_6B282E24
; ---------------------------------------------------------------------------

loc_6B283001:				; CODE XREF: _pango_win32_font_get_glyph_index+179j
		mov	esi, [ebp+var_4C]
		mov	ds:_last_42345,	esi
		movzx	edx, ax
		lea	eax, [edx+edx]
		jmp	loc_6B282EEE
; ---------------------------------------------------------------------------

loc_6B283015:				; CODE XREF: _pango_win32_font_get_glyph_index+ABj
		mov	[esp+78h+fl], 0
		mov	[esp+78h+pgi], offset ___PRETTY_FUNCTION___42410 ; "pango_win32_font_get_glyph_index"
		mov	[esp+78h+c], 615h
		mov	[esp+78h+lpstr], offset	aPangowin32_c ;	"pangowin32.c"
		mov	[esp+78h+hdc], offset aPango ; "Pango"
		call	_g_assertion_message
		lea	esi, [esi+0]
_pango_win32_font_get_glyph_index endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl _pango_win32_get_name_header(HDC,	PVOID)
		public __pango_win32_get_name_header
__pango_win32_get_name_header proc near	; CODE XREF: _pango_win32_font_get_coverage+68Ep
					; _pango_win32_font_description_from_logfont+93p ...

hdc		= dword	ptr -28h
dwTable		= dword	ptr -24h
dwOffset	= dword	ptr -20h
pvBuffer	= dword	ptr -1Ch
cjBuffer	= dword	ptr -18h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 24h
		mov	ebx, [ebp+arg_4]
		mov	[esp+28h+cjBuffer], 6 ;	cjBuffer
		mov	[esp+28h+pvBuffer], ebx	; pvBuffer
		mov	[esp+28h+dwOffset], 0 ;	dwOffset
		mov	[esp+28h+dwTable], 656D616Eh ; dwTable
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+hdc], eax ; hdc
		call	_GetFontData@20	; GetFontData(x,x,x,x,x)
		sub	esp, 14h
		cmp	eax, 6
		jz	short loc_6B283084
		xor	eax, eax
		mov	ebx, [ebp+var_4]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6B283084:				; CODE XREF: __pango_win32_get_name_header+37j
		mov	ax, [ebx+2]
		ror	ax, 8
		mov	[ebx+2], ax
		mov	ax, [ebx+4]
		ror	ax, 8
		mov	[ebx+4], ax
		mov	eax, 1
		mov	ebx, [ebp+var_4]
		leave
		retn
__pango_win32_get_name_header endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl _pango_win32_get_name_record(HDC,	int, PVOID)
		public __pango_win32_get_name_record
__pango_win32_get_name_record proc near	; CODE XREF: _pango_win32_font_get_coverage+6D2p
					; _pango_win32_font_description_from_logfont+FBp ...

hdc		= dword	ptr -28h
dwTable		= dword	ptr -24h
dwOffset	= dword	ptr -20h
pvBuffer	= dword	ptr -1Ch
cjBuffer	= dword	ptr -18h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 24h
		mov	eax, [ebp+arg_4]
		mov	ebx, [ebp+arg_8]
		mov	[esp+28h+cjBuffer], 0Ch	; cjBuffer
		mov	[esp+28h+pvBuffer], ebx	; pvBuffer
		lea	eax, [eax+eax*2]
		lea	eax, ds:6[eax*4]
		mov	[esp+28h+dwOffset], eax	; dwOffset
		mov	[esp+28h+dwTable], 656D616Eh ; dwTable
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+hdc], eax ; hdc
		call	_GetFontData@20	; GetFontData(x,x,x,x,x)
		sub	esp, 14h
		cmp	eax, 0Ch
		jz	short loc_6B2830F4
		xor	eax, eax
		mov	ebx, [ebp+var_4]
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B2830F4:				; CODE XREF: __pango_win32_get_name_record+40j
		mov	ax, [ebx]
		ror	ax, 8
		mov	[ebx], ax
		mov	ax, [ebx+2]
		ror	ax, 8
		mov	[ebx+2], ax
		mov	ax, [ebx+4]
		ror	ax, 8
		mov	[ebx+4], ax
		mov	ax, [ebx+6]
		ror	ax, 8
		mov	[ebx+6], ax
		mov	ax, [ebx+8]
		ror	ax, 8
		mov	[ebx+8], ax
		mov	ax, [ebx+0Ah]
		ror	ax, 8
		mov	[ebx+0Ah], ax
		mov	eax, 1
		mov	ebx, [ebp+var_4]
		leave
		retn
__pango_win32_get_name_record endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_pango_win32_font_get_coverage proc near ; CODE	XREF: _pango_win32_font_get_metrics+D3p
					; DATA XREF: __pango_win32_font_class_intern_init+57o

hdc		= dword	ptr -88h
lpgs		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
h		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_2A		= word ptr -2Ah
var_28		= word ptr -28h
var_26		= word ptr -26h
var_24		= dword	ptr -24h
var_1E		= byte ptr -1Eh
var_1C		= word ptr -1Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 7Ch
		mov	eax, [ebp+arg_0]
		mov	ebx, [eax+78h]
		mov	eax, [ebp+arg_4]
		call	_pango_win32_coverage_language_classify
		lea	esi, [eax+18h]
		mov	eax, [ebx+esi*4+0Ch]
		test	eax, eax
		jz	short loc_6B283180
		mov	[esp+88h+hdc], eax
		call	_pango_coverage_ref
		mov	ebx, [ebx+esi*4+0Ch]
		test	ebx, ebx
		jz	short loc_6B283180
		mov	eax, ebx
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6B283180:				; CODE XREF: _pango_win32_font_get_coverage+20j
					; _pango_win32_font_get_coverage+30j
		call	_pango_coverage_new
		mov	ebx, eax
		mov	edx, [ebp+arg_0]
		mov	[esp+88h+hdc], edx
		call	_pango_font_describe
		mov	esi, eax
		mov	[esp+88h+hdc], eax
		call	_pango_font_description_to_string
		mov	edx, ds:__pango_win32_debug
		test	edx, edx
		jnz	loc_6B283469

loc_6B2831AA:				; CODE XREF: _pango_win32_font_get_coverage+36Dj
		mov	[esp+88h+hdc], eax
		call	_g_free
		mov	[esp+88h+hdc], esi
		call	_pango_font_description_free
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+78h]
		mov	edi, [eax+8Ch]
		test	edi, edi
		jnz	loc_6B2832D6

loc_6B2831CE:				; CODE XREF: _pango_win32_font_get_coverage+1B1j
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+88h+lpgs],	eax
		mov	ecx, [ebp+arg_0]
		mov	[esp+88h+hdc], ecx
		call	_pango_win32_font_select_font
		mov	[esp+88h+lpgs],	0 ; lpgs
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+88h+hdc], eax ; hdc
		call	_GetFontUnicodeRanges@8	; GetFontUnicodeRanges(x,x)
		sub	esp, 8
		test	eax, eax
		jnz	short loc_6B28322F

loc_6B2831FE:				; CODE XREF: _pango_win32_font_get_coverage+18Dj
		mov	eax, [ebp+arg_0]
		mov	[esp+88h+hdc], eax
		call	_pango_win32_font_done_font

loc_6B283209:				; CODE XREF: _pango_win32_font_get_coverage+2F9j
					; _pango_win32_font_get_coverage+30Bj
		mov	ecx, [ebp+arg_0]
		mov	esi, [ecx+78h]
		mov	eax, [ebp+arg_4]
		call	_pango_win32_coverage_language_classify
		mov	edi, eax
		mov	[esp+88h+hdc], ebx
		call	_pango_coverage_ref
		mov	[esi+edi*4+6Ch], eax
		mov	eax, ebx
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6B28322F:				; CODE XREF: _pango_win32_font_get_coverage+B8j
		mov	[esp+88h+hdc], eax
		call	_g_malloc
		mov	[ebp+h], eax
		mov	[esp+88h+lpgs],	eax ; lpgs
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+88h+hdc], eax ; hdc
		call	_GetFontUnicodeRanges@8	; GetFontUnicodeRanges(x,x)
		sub	esp, 8
		test	eax, eax
		jz	short loc_6B2832C6
		mov	eax, [ebp+h]
		cmp	dword ptr [eax+0Ch], 0
		jz	short loc_6B2832C6
		mov	[ebp+var_3C], 0
		xchg	ax, ax

loc_6B283264:				; CODE XREF: _pango_win32_font_get_coverage+180j
		mov	edx, [ebp+var_3C]
		mov	ecx, [ebp+h]
		movzx	edi, word ptr [ecx+edx*4+12h]
		movzx	esi, word ptr [ecx+edx*4+10h]
		add	edi, esi
		cmp	edi, esi
		ja	short loc_6B283295
		jmp	short loc_6B2832B8
; ---------------------------------------------------------------------------

loc_6B28327C:				; CODE XREF: _pango_win32_font_get_coverage+15Cj
		mov	[esp+88h+var_80], 2
		mov	[esp+88h+lpgs],	esi
		mov	[esp+88h+hdc], ebx
		call	_pango_coverage_set

loc_6B283290:				; CODE XREF: _pango_win32_font_get_coverage+172j
		inc	esi
		cmp	edi, esi
		jbe	short loc_6B2832B8

loc_6B283295:				; CODE XREF: _pango_win32_font_get_coverage+134j
		lea	eax, [esi-3400h]
		cmp	eax, 6BFFh
		jbe	short loc_6B28327C
		mov	[esp+88h+var_80], 3
		mov	[esp+88h+lpgs],	esi
		mov	[esp+88h+hdc], ebx
		call	_pango_coverage_set
		jmp	short loc_6B283290
; ---------------------------------------------------------------------------

loc_6B2832B8:				; CODE XREF: _pango_win32_font_get_coverage+136j
					; _pango_win32_font_get_coverage+14Fj
		inc	[ebp+var_3C]
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+h]
		cmp	edx, [eax+0Ch]
		jb	short loc_6B283264

loc_6B2832C6:				; CODE XREF: _pango_win32_font_get_coverage+10Cj
					; _pango_win32_font_get_coverage+115j
		mov	ecx, [ebp+h]
		mov	[esp+88h+hdc], ecx
		call	_g_free
		jmp	loc_6B2831FE
; ---------------------------------------------------------------------------

loc_6B2832D6:				; CODE XREF: _pango_win32_font_get_coverage+84j
		mov	eax, edx
		call	_font_get_cmap
		mov	edi, eax
		test	eax, eax
		jz	loc_6B283935
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+78h]

loc_6B2832ED:				; CODE XREF: _pango_win32_font_get_coverage+801j
		mov	esi, [eax+8Ch]
		test	esi, esi
		jz	loc_6B2831CE
		mov	eax, [ebp+arg_4]
		call	_pango_win32_coverage_language_classify
		mov	[ebp+var_3C], eax
		test	eax, eax
		jnz	loc_6B2837A1
		xor	esi, esi

loc_6B283310:				; CODE XREF: _pango_win32_font_get_coverage+793j
					; _pango_win32_font_get_coverage+8A3j
		mov	eax, ds:__pango_win32_debug
		test	eax, eax
		jnz	loc_6B2834B6

loc_6B28331D:				; CODE XREF: _pango_win32_font_get_coverage+3A6j
					; _pango_win32_font_get_coverage+82Bj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+78h]
		mov	eax, [eax+90h]
		cmp	ax, 4
		jz	loc_6B2834EF
		cmp	ax, 0Ch
		jnz	loc_6B283A24
		mov	eax, [edi+0Ch]
		test	eax, eax
		jz	loc_6B283435
		mov	[ebp+var_4C], 1
		mov	[ebp+var_44], 0
		mov	[ebp+var_48], 0
		mov	[ebp+h], ebx
		mov	[ebp+var_50], esi
		nop

loc_6B283364:				; CODE XREF: _pango_win32_font_get_coverage+2E8j
		mov	ebx, ds:__pango_win32_debug
		test	ebx, ebx
		jz	short loc_6B283395
		mov	ecx, [ebp+var_44]
		mov	eax, [edi+ecx*4+10h]
		mov	edx, [edi+ecx*4+14h]
		cmp	eax, edx
		jz	loc_6B283454
		mov	[esp+88h+var_80], edx
		mov	[esp+88h+lpgs],	eax
		mov	[esp+88h+hdc], offset a04x04x ;	"%04x:%04x "
		call	_g_print

loc_6B283395:				; CODE XREF: _pango_win32_font_get_coverage+228j
					; _pango_win32_font_get_coverage+320j
		mov	eax, [ebp+var_44]
		mov	esi, [edi+eax*4+10h]
		mov	ebx, [ebp+var_4C]
		add	ebx, 4
		cmp	[edi+ebx*4], esi
		jb	short loc_6B28341B
		mov	[ebp+var_3C], ebx
		mov	ebx, [ebp+var_50]
		jmp	short loc_6B2833DD
; ---------------------------------------------------------------------------
		align 10h

loc_6B2833B0:				; CODE XREF: _pango_win32_font_get_coverage+2B5j
		lea	eax, [esi-2F800h]
		cmp	eax, 21Fh
		jbe	short loc_6B2833FB

loc_6B2833BD:				; CODE XREF: _pango_win32_font_get_coverage+29Bj
		mov	[esp+88h+var_80], 3
		mov	[esp+88h+lpgs],	esi
		mov	ecx, [ebp+h]
		mov	[esp+88h+hdc], ecx
		call	_pango_coverage_set
		inc	esi
		mov	eax, [ebp+var_3C]
		cmp	esi, [edi+eax*4]
		ja	short loc_6B28341B

loc_6B2833DD:				; CODE XREF: _pango_win32_font_get_coverage+269j
					; _pango_win32_font_get_coverage+2D5j
		test	ebx, ebx
		jz	short loc_6B2833BD
		lea	eax, [esi-3400h]
		cmp	eax, 6BFFh
		jbe	short loc_6B2833FB
		lea	eax, [esi-20000h]
		cmp	eax, 0A6DFh
		ja	short loc_6B2833B0

loc_6B2833FB:				; CODE XREF: _pango_win32_font_get_coverage+277j
					; _pango_win32_font_get_coverage+2A8j
		mov	[esp+88h+var_80], 2
		mov	[esp+88h+lpgs],	esi
		mov	edx, [ebp+h]
		mov	[esp+88h+hdc], edx
		call	_pango_coverage_set
		inc	esi
		mov	eax, [ebp+var_3C]
		cmp	esi, [edi+eax*4]
		jbe	short loc_6B2833DD

loc_6B28341B:				; CODE XREF: _pango_win32_font_get_coverage+261j
					; _pango_win32_font_get_coverage+297j
		inc	[ebp+var_48]
		add	[ebp+var_44], 3
		add	[ebp+var_4C], 3
		mov	edx, [ebp+var_48]
		cmp	edx, [edi+0Ch]
		jb	loc_6B283364
		mov	ebx, [ebp+h]

loc_6B283435:				; CODE XREF: _pango_win32_font_get_coverage+1FEj
					; _pango_win32_font_get_coverage+3D1j ...
		mov	ecx, ds:__pango_win32_debug
		test	ecx, ecx
		jz	loc_6B283209
		mov	[esp+88h+hdc], offset asc_6B28B194 ; "\n"
		call	_g_print
		jmp	loc_6B283209
; ---------------------------------------------------------------------------

loc_6B283454:				; CODE XREF: _pango_win32_font_get_coverage+237j
		mov	[esp+88h+lpgs],	eax
		mov	[esp+88h+hdc], offset a04x ; "%04x "
		call	_g_print
		jmp	loc_6B283395
; ---------------------------------------------------------------------------

loc_6B283469:				; CODE XREF: _pango_win32_font_get_coverage+60j
		mov	[esp+88h+var_80], 6AFh
		mov	[esp+88h+lpgs],	offset ___PRETTY_FUNCTION___42490 ; "pango_win32_font_calc_coverage"
		mov	[esp+88h+hdc], offset aSD ; "%s:%d "
		mov	[ebp+var_58], eax
		call	_g_print
		mov	ecx, [ebp+arg_4]
		mov	[esp+88h+var_80], ecx
		mov	eax, [ebp+var_58]
		mov	[esp+88h+lpgs],	eax
		mov	[esp+88h+hdc], offset aFontSLangS ; "font:%s lang:%s"
		call	_g_print
		mov	[esp+88h+hdc], offset asc_6B28B194 ; "\n"
		call	_g_print
		mov	eax, [ebp+var_58]
		jmp	loc_6B2831AA
; ---------------------------------------------------------------------------

loc_6B2834B6:				; CODE XREF: _pango_win32_font_get_coverage+1D3j
		mov	[esp+88h+var_80], 6C9h
		mov	[esp+88h+lpgs],	offset ___PRETTY_FUNCTION___42490 ; "pango_win32_font_calc_coverage"
		mov	[esp+88h+hdc], offset aSD ; "%s:%d "
		call	_g_print
		mov	[esp+88h+hdc], offset aCoverage	; "coverage:"
		call	_g_print
		mov	[esp+88h+hdc], offset asc_6B28B194 ; "\n"
		call	_g_print
		jmp	loc_6B28331D
; ---------------------------------------------------------------------------

loc_6B2834EF:				; CODE XREF: _pango_win32_font_get_coverage+1E9j
		mov	ax, [edi+6]
		shr	ax, 1
		lea	ecx, [edi+0Eh]
		mov	[ebp+var_3C], ecx
		movzx	eax, ax
		mov	[ebp+var_54], eax
		lea	ecx, [edi+eax*2+10h]
		lea	eax, [eax+eax*2]
		lea	eax, [edi+eax*2+10h]
		mov	[ebp+var_50], eax
		mov	edi, [ebp+var_54]
		test	edi, edi
		jz	loc_6B283435
		mov	edx, [ebp+var_3C]
		mov	[ebp+h], ecx
		xor	eax, eax
		mov	[ebp+var_44], ebx
		mov	edi, edx
		mov	[ebp+var_4C], esi
		mov	esi, eax
		lea	esi, [esi+0]

loc_6B283530:				; CODE XREF: _pango_win32_font_get_coverage+4DBj
		mov	edx, [ebp+var_50]
		mov	ax, [edx+esi*2]
		test	ax, ax
		jnz	loc_6B283630
		mov	ecx, ds:__pango_win32_debug
		test	ecx, ecx
		jz	short loc_6B283576
		mov	ax, [edi]
		mov	ecx, [ebp+h]
		mov	dx, [ecx]
		cmp	ax, dx
		jz	loc_6B283789
		movzx	eax, ax
		mov	[esp+88h+var_80], eax
		movzx	eax, dx
		mov	[esp+88h+lpgs],	eax
		mov	[esp+88h+hdc], offset a04x04x ;	"%04x:%04x "
		call	_g_print

loc_6B283576:				; CODE XREF: _pango_win32_font_get_coverage+404j
					; _pango_win32_font_get_coverage+658j
		mov	eax, [ebp+h]
		movzx	ebx, word ptr [eax]
		mov	dx, [eax]
		cmp	[edi], dx
		jb	loc_6B283614
		mov	[ebp+var_3C], esi
		mov	esi, [ebp+var_4C]
		jmp	short loc_6B2835B3
; ---------------------------------------------------------------------------

loc_6B283590:				; CODE XREF: _pango_win32_font_get_coverage+471j
					; _pango_win32_font_get_coverage+47Ej
		mov	[esp+88h+var_80], 3
		mov	[esp+88h+lpgs],	ebx
		mov	eax, [ebp+var_44]
		mov	[esp+88h+hdc], eax
		call	_pango_coverage_set

loc_6B2835A7:				; CODE XREF: _pango_win32_font_get_coverage+497j
		inc	ebx
		movzx	eax, word ptr [edi]
		cmp	ebx, eax
		ja	loc_6B28376C

loc_6B2835B3:				; CODE XREF: _pango_win32_font_get_coverage+44Aj
		test	esi, esi
		jz	short loc_6B283590
		lea	eax, [ebx-3400h]
		cmp	eax, 6BFFh
		ja	short loc_6B283590
		mov	[esp+88h+var_80], 2
		mov	[esp+88h+lpgs],	ebx
		mov	ecx, [ebp+var_44]
		mov	[esp+88h+hdc], ecx
		call	_pango_coverage_set
		jmp	short loc_6B2835A7
; ---------------------------------------------------------------------------
		align 10h

loc_6B2835E0:				; CODE XREF: _pango_win32_font_get_coverage+563j
					; _pango_win32_font_get_coverage+56Fj
		mov	edi, [ebp+var_48]
		cmp	ecx, 0FFFFFFFFh
		jz	short loc_6B283614
		mov	edx, ds:__pango_win32_debug
		test	edx, edx
		jz	short loc_6B283614
		lea	eax, [ecx+2]
		cmp	eax, ebx
		jnb	loc_6B283774
		dec	ebx
		mov	[esp+88h+var_80], ebx
		mov	[esp+88h+lpgs],	ecx
		mov	[esp+88h+hdc], offset a04x04x ;	"%04x:%04x "
		call	_g_print
		xchg	ax, ax

loc_6B283614:				; CODE XREF: _pango_win32_font_get_coverage+43Ej
					; _pango_win32_font_get_coverage+4A2j ...
		inc	esi
		add	edi, 2
		add	[ebp+h], 2
		cmp	esi, [ebp+var_54]
		jb	loc_6B283530
		mov	ebx, [ebp+var_44]
		jmp	loc_6B283435
; ---------------------------------------------------------------------------
		align 10h

loc_6B283630:				; CODE XREF: _pango_win32_font_get_coverage+3F6j
		mov	ecx, [ebp+h]
		movzx	edx, word ptr [ecx]
		mov	ebx, edx
		movzx	ecx, word ptr [edi]
		mov	[ebp+var_3C], ecx
		cmp	edx, ecx
		ja	short loc_6B283614
		cmp	edx, 0FFFFh
		jz	short loc_6B283614
		mov	ecx, 0FFFFFFFFh
		mov	[ebp+var_48], edi
		mov	edi, [ebp+var_50]
		mov	[ebp+var_5C], edx
		jmp	short loc_6B2836C6
; ---------------------------------------------------------------------------
		align 4

loc_6B28365C:				; CODE XREF: _pango_win32_font_get_coverage+59Bj
		cmp	ecx, 0FFFFFFFFh
		jz	loc_6B283730

loc_6B283665:				; CODE XREF: _pango_win32_font_get_coverage+5EEj
		mov	edx, [ebp+var_4C]
		test	edx, edx
		jz	short loc_6B28367D
		lea	eax, [ebx-3400h]
		cmp	eax, 6BFFh
		jbe	loc_6B283738

loc_6B28367D:				; CODE XREF: _pango_win32_font_get_coverage+526j
		mov	[esp+88h+var_80], 3

loc_6B283685:				; CODE XREF: _pango_win32_font_get_coverage+5FCj
		mov	[esp+88h+lpgs],	ebx
		mov	eax, [ebp+var_44]
		mov	[esp+88h+hdc], eax
		mov	[ebp+var_58], ecx
		call	_pango_coverage_set
		mov	edx, [ebp+var_48]
		movzx	edx, word ptr [edx]
		mov	[ebp+var_3C], edx
		mov	ecx, [ebp+var_58]

loc_6B2836A3:				; CODE XREF: _pango_win32_font_get_coverage+5A4j
					; _pango_win32_font_get_coverage+5DBj ...
		inc	ebx
		cmp	ebx, [ebp+var_3C]
		ja	loc_6B2835E0
		cmp	ebx, 0FFFFh
		jz	loc_6B2835E0
		mov	ax, [edi+esi*2]
		mov	edx, [ebp+h]
		movzx	edx, word ptr [edx]
		mov	[ebp+var_5C], edx

loc_6B2836C6:				; CODE XREF: _pango_win32_font_get_coverage+514j
		mov	edx, esi
		sub	edx, [ebp+var_5C]
		mov	[ebp+var_5C], edx
		shr	ax, 1
		movzx	eax, ax
		lea	edx, [ebx+edx]
		lea	eax, [edx+eax]
		cmp	word ptr [edi+eax*2], 0
		jnz	loc_6B28365C
		cmp	ecx, 0FFFFFFFFh
		jz	short loc_6B2836A3
		mov	eax, ds:__pango_win32_debug
		test	eax, eax
		jz	short loc_6B283724
		lea	eax, [ecx+2]
		cmp	eax, ebx
		jnb	short loc_6B283748
		lea	eax, [ebx-1]
		mov	[esp+88h+var_80], eax
		mov	[esp+88h+lpgs],	ecx
		mov	[esp+88h+hdc], offset a04x04x ;	"%04x:%04x "
		call	_g_print
		mov	ecx, 0FFFFFFFFh
		mov	eax, [ebp+var_48]
		movzx	eax, word ptr [eax]
		mov	[ebp+var_3C], eax
		jmp	short loc_6B2836A3
; ---------------------------------------------------------------------------
		align 4

loc_6B283724:				; CODE XREF: _pango_win32_font_get_coverage+5ADj
		mov	ecx, 0FFFFFFFFh
		jmp	loc_6B2836A3
; ---------------------------------------------------------------------------
		align 10h

loc_6B283730:				; CODE XREF: _pango_win32_font_get_coverage+51Bj
		mov	ecx, ebx
		jmp	loc_6B283665
; ---------------------------------------------------------------------------
		align 4

loc_6B283738:				; CODE XREF: _pango_win32_font_get_coverage+533j
		mov	[esp+88h+var_80], 2
		jmp	loc_6B283685
; ---------------------------------------------------------------------------
		align 4

loc_6B283748:				; CODE XREF: _pango_win32_font_get_coverage+5B4j
		mov	[esp+88h+lpgs],	ecx
		mov	[esp+88h+hdc], offset a04x ; "%04x "
		call	_g_print
		mov	ecx, 0FFFFFFFFh
		mov	edx, [ebp+var_48]
		movzx	edx, word ptr [edx]
		mov	[ebp+var_3C], edx
		jmp	loc_6B2836A3
; ---------------------------------------------------------------------------
		align 4

loc_6B28376C:				; CODE XREF: _pango_win32_font_get_coverage+469j
		mov	esi, [ebp+var_3C]
		jmp	loc_6B283614
; ---------------------------------------------------------------------------

loc_6B283774:				; CODE XREF: _pango_win32_font_get_coverage+4B3j
		mov	[esp+88h+lpgs],	ecx
		mov	[esp+88h+hdc], offset a04x ; "%04x "
		call	_g_print
		jmp	loc_6B283614
; ---------------------------------------------------------------------------

loc_6B283789:				; CODE XREF: _pango_win32_font_get_coverage+412j
		movzx	eax, ax
		mov	[esp+88h+lpgs],	eax
		mov	[esp+88h+hdc], offset a04x ; "%04x "
		call	_g_print
		jmp	loc_6B283576
; ---------------------------------------------------------------------------

loc_6B2837A1:				; CODE XREF: _pango_win32_font_get_coverage+1C4j
		mov	edx, [ebp+arg_0]
		mov	[esp+88h+hdc], edx
		call	__pango_win32_font_get_hfont
		mov	[esp+88h+lpgs],	eax ; h
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+88h+hdc], eax ; hdc
		call	_SelectObject@8	; SelectObject(x,x)
		sub	esp, 8
		mov	[ebp+h], eax
		lea	eax, [ebp+var_1E]
		mov	[esp+88h+lpgs],	eax ; PVOID
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+88h+hdc], eax ; HDC
		call	__pango_win32_get_name_header
		test	eax, eax
		jz	loc_6B2839EC
		cmp	[ebp+var_1C], 0
		jz	loc_6B28394A
		xor	esi, esi
		jmp	short loc_6B283803
; ---------------------------------------------------------------------------
		align 10h

loc_6B2837F0:				; CODE XREF: _pango_win32_font_get_coverage+6E6j
		cmp	ax, 10h
		jz	short loc_6B28382C

loc_6B2837F6:				; CODE XREF: _pango_win32_font_get_coverage+6EDj
					; _pango_win32_font_get_coverage+701j ...
		inc	esi
		movzx	eax, [ebp+var_1C]
		cmp	esi, eax
		jge	loc_6B28394A

loc_6B283803:				; CODE XREF: _pango_win32_font_get_coverage+6A8j
		lea	eax, [ebp+var_2A]
		mov	[esp+88h+var_80], eax ;	PVOID
		mov	[esp+88h+lpgs],	esi ; int
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+88h+hdc], eax ; HDC
		call	__pango_win32_get_name_record
		test	eax, eax
		jz	loc_6B283974
		mov	eax, [ebp+var_24]
		cmp	ax, 1
		jnz	short loc_6B2837F0

loc_6B28382C:				; CODE XREF: _pango_win32_font_get_coverage+6B0j
		cmp	word ptr [ebp+var_24+2], 0
		jz	short loc_6B2837F6
		mov	eax, ds:__pango_win32_debug
		test	eax, eax
		jnz	loc_6B2838DC

loc_6B283840:				; CODE XREF: _pango_win32_font_get_coverage+7ECj
		cmp	[ebp+var_2A], 3
		jnz	short loc_6B2837F6
		cmp	[ebp+var_3C], 1
		jz	loc_6B28399D
		cmp	[ebp+var_3C], 2
		jz	loc_6B28398C
		cmp	[ebp+var_3C], 3
		jnz	loc_6B283A07
		movzx	eax, [ebp+var_26]
		and	eax, 3FFh
		cmp	eax, 11h
		jnz	short loc_6B2837F6

loc_6B283873:				; CODE XREF: _pango_win32_font_get_coverage+854j
					; _pango_win32_font_get_coverage+865j ...
		cmp	ds:__pango_win32_debug,	0
		jz	short loc_6B2838BF
		mov	[esp+88h+var_80], 66Eh
		mov	[esp+88h+lpgs],	offset ___PRETTY_FUNCTION___42455 ; "font_has_name_in"
		mov	[esp+88h+hdc], offset aSD ; "%s:%d "
		call	_g_print
		movzx	eax, [ebp+var_26]
		mov	[esp+88h+var_80], eax
		mov	ecx, [ebp+var_3C]
		mov	[esp+88h+lpgs],	ecx
		mov	[esp+88h+hdc], offset aYepD04x ; "yep:%d:%04x"
		call	_g_print
		mov	[esp+88h+hdc], offset asc_6B28B194 ; "\n"
		call	_g_print

loc_6B2838BF:				; CODE XREF: _pango_win32_font_get_coverage+736j
		mov	eax, [ebp+h]
		mov	[esp+88h+lpgs],	eax ; h
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+88h+hdc], eax ; hdc
		call	_SelectObject@8	; SelectObject(x,x)
		push	ecx
		push	ecx
		xor	esi, esi
		jmp	loc_6B283310
; ---------------------------------------------------------------------------

loc_6B2838DC:				; CODE XREF: _pango_win32_font_get_coverage+6F6j
		mov	[esp+88h+var_80], 65Ch
		mov	[esp+88h+lpgs],	offset ___PRETTY_FUNCTION___42455 ; "font_has_name_in"
		mov	[esp+88h+hdc], offset aSD ; "%s:%d "
		call	_g_print
		movzx	eax, word ptr [ebp+var_24]
		mov	[esp+88h+var_78], eax
		movzx	eax, [ebp+var_26]
		mov	[esp+88h+var_7C], eax
		movzx	eax, [ebp+var_28]
		mov	[esp+88h+var_80], eax
		movzx	eax, [ebp+var_2A]
		mov	[esp+88h+lpgs],	eax
		mov	[esp+88h+hdc], offset aPlatformDEncod ;	"platform:%d encoding:%d language:%04x n"...
		call	_g_print
		mov	[esp+88h+hdc], offset asc_6B28B194 ; "\n"
		call	_g_print
		jmp	loc_6B283840
; ---------------------------------------------------------------------------

loc_6B283935:				; CODE XREF: _pango_win32_font_get_coverage+19Dj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+78h]
		mov	dword ptr [eax+8Ch], 0
		jmp	loc_6B2832ED
; ---------------------------------------------------------------------------

loc_6B28394A:				; CODE XREF: _pango_win32_font_get_coverage+6A0j
					; _pango_win32_font_get_coverage+6B9j
		mov	eax, [ebp+h]
		mov	[esp+88h+lpgs],	eax ; h
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+88h+hdc], eax ; hdc
		call	_SelectObject@8	; SelectObject(x,x)
		push	edx
		push	edx

loc_6B283960:				; CODE XREF: _pango_win32_font_get_coverage+846j
					; _pango_win32_font_get_coverage+8BEj
		mov	edx, ds:__pango_win32_debug
		test	edx, edx
		jnz	short loc_6B2839AE
		mov	esi, 1
		jmp	loc_6B28331D
; ---------------------------------------------------------------------------

loc_6B283974:				; CODE XREF: _pango_win32_font_get_coverage+6D9j
		mov	edx, [ebp+h]
		mov	[esp+88h+lpgs],	edx ; h
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+88h+hdc], eax ; hdc
		call	_SelectObject@8	; SelectObject(x,x)
		push	edx
		push	edx
		jmp	short loc_6B283960
; ---------------------------------------------------------------------------

loc_6B28398C:				; CODE XREF: _pango_win32_font_get_coverage+711j
		cmp	[ebp+var_26], 804h
		jnz	loc_6B2837F6
		jmp	loc_6B283873
; ---------------------------------------------------------------------------

loc_6B28399D:				; CODE XREF: _pango_win32_font_get_coverage+707j
		cmp	[ebp+var_26], 404h
		jnz	loc_6B2837F6
		jmp	loc_6B283873
; ---------------------------------------------------------------------------

loc_6B2839AE:				; CODE XREF: _pango_win32_font_get_coverage+824j
		mov	[esp+88h+var_80], 6C5h
		mov	[esp+88h+lpgs],	offset ___PRETTY_FUNCTION___42490 ; "pango_win32_font_calc_coverage"
		mov	[esp+88h+hdc], offset aSD ; "%s:%d "
		call	_g_print
		mov	[esp+88h+hdc], offset aHidingUnihanCh ;	"hiding	UniHan chars"
		call	_g_print
		mov	[esp+88h+hdc], offset asc_6B28B194 ; "\n"
		call	_g_print
		mov	esi, 1
		jmp	loc_6B283310
; ---------------------------------------------------------------------------

loc_6B2839EC:				; CODE XREF: _pango_win32_font_get_coverage+695j
		mov	ecx, [ebp+h]
		mov	[esp+88h+lpgs],	ecx ; h
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+88h+hdc], eax ; hdc
		call	_SelectObject@8	; SelectObject(x,x)
		push	ecx
		push	ecx
		jmp	loc_6B283960
; ---------------------------------------------------------------------------

loc_6B283A07:				; CODE XREF: _pango_win32_font_get_coverage+71Bj
		cmp	[ebp+var_3C], 4
		jnz	short loc_6B283A50
		movzx	eax, [ebp+var_26]
		and	eax, 3FFh
		cmp	eax, 12h
		jnz	loc_6B2837F6
		jmp	loc_6B283873
; ---------------------------------------------------------------------------

loc_6B283A24:				; CODE XREF: _pango_win32_font_get_coverage+1F3j
		mov	[esp+88h+var_78], 0
		mov	[esp+88h+var_7C], offset ___PRETTY_FUNCTION___42490 ; "pango_win32_font_calc_coverage"
		mov	[esp+88h+var_80], 739h
		mov	[esp+88h+lpgs],	offset aPangowin32_c ; "pangowin32.c"
		mov	[esp+88h+hdc], offset aPango ; "Pango"
		call	_g_assertion_message

loc_6B283A50:				; CODE XREF: _pango_win32_font_get_coverage+8C7j
		cmp	[ebp+var_3C], 5
		jnz	loc_6B2837F6
		movzx	eax, [ebp+var_26]
		and	eax, 3FFh
		cmp	eax, 2Ah
		jnz	loc_6B2837F6
		jmp	loc_6B283873
_pango_win32_font_get_coverage endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_pango_win32_font_get_metrics proc near	; DATA XREF: __pango_win32_font_class_intern_init+6Co

hdc		= dword	ptr -88h
h		= dword	ptr -84h
var_80		= dword	ptr -80h
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
tm		= tagTEXTMETRICA ptr -50h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 7Ch
		mov	esi, [ebp+arg_0]
		mov	edi, [ebp+arg_4]
		mov	[esp+88h+hdc], edi
		call	_pango_language_get_sample_string
		mov	edx, eax
		mov	eax, [esi+6Ch]
		test	eax, eax
		jnz	short loc_6B283A9F
		jmp	short loc_6B283AB8
; ---------------------------------------------------------------------------
		align 4

loc_6B283A98:				; CODE XREF: _pango_win32_font_get_metrics+2Fj
		mov	eax, [eax+4]
		test	eax, eax
		jz	short loc_6B283AB8

loc_6B283A9F:				; CODE XREF: _pango_win32_font_get_metrics+1Ej
		mov	ebx, [eax]
		cmp	[ebx], edx
		jnz	short loc_6B283A98

loc_6B283AA5:				; CODE XREF: _pango_win32_font_get_metrics+81j
					; _pango_win32_font_get_metrics+132j
		mov	eax, [ebx+4]
		mov	[esp+88h+hdc], eax
		call	_pango_font_metrics_ref
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6B283AB8:				; CODE XREF: _pango_win32_font_get_metrics+20j
					; _pango_win32_font_get_metrics+29j
		mov	[esp+88h+hdc], 8
		mov	[ebp+var_78], edx
		call	_g_malloc
		mov	ebx, eax
		mov	[esp+88h+h], eax
		mov	eax, [esi+6Ch]
		mov	[esp+88h+hdc], eax
		call	_g_slist_prepend
		mov	[esi+6Ch], eax
		mov	edx, [ebp+var_78]
		mov	[ebx], edx
		call	_pango_font_metrics_new
		mov	[ebp+var_5C], eax
		mov	[ebx+4], eax
		mov	[esp+88h+hdc], esi
		call	__pango_win32_font_get_hfont
		test	eax, eax
		jz	short loc_6B283AA5
		mov	[esp+88h+h], eax ; h
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+88h+hdc], eax ; hdc
		call	_SelectObject@8	; SelectObject(x,x)
		sub	esp, 8
		lea	eax, [ebp+tm]
		mov	[esp+88h+h], eax ; lptm
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+88h+hdc], eax ; hdc
		call	_GetTextMetricsA@8 ; GetTextMetricsA(x,x)
		sub	esp, 8
		mov	eax, [ebp+tm.tmAscent]
		shl	eax, 0Ah
		mov	edx, [ebp+var_5C]
		mov	[edx+4], eax
		mov	eax, [ebp+tm.tmDescent]
		shl	eax, 0Ah
		mov	[edx+8], eax
		mov	eax, [ebp+tm.tmAveCharWidth]
		shl	eax, 0Ah
		mov	[edx+0Ch], eax
		mov	[esp+88h+h], edi
		mov	[esp+88h+hdc], esi
		call	_pango_win32_font_get_coverage
		mov	[ebp+var_60], eax
		mov	[esp+88h+h], 30h
		mov	[esp+88h+hdc], eax
		call	_pango_coverage_get
		test	eax, eax
		jnz	short loc_6B283BAB

loc_6B283B63:				; CODE XREF: _pango_win32_font_get_metrics+14Cj
		mov	edx, [ebp+var_5C]
		mov	eax, [edx+0Ch]
		mov	[edx+10h], eax

loc_6B283B6C:				; CODE XREF: _pango_win32_font_get_metrics+22Fj
		mov	eax, [ebp+var_60]
		mov	[esp+88h+hdc], eax
		call	_pango_coverage_unref
		mov	edx, [ebp+var_5C]
		mov	dword ptr [edx+14h], 0FFFFF800h
		mov	dword ptr [edx+18h], 400h
		mov	dword ptr [edx+20h], 400h
		mov	ecx, [edx+4]
		mov	edx, 55555556h
		mov	eax, ecx
		imul	edx
		sar	ecx, 1Fh
		sub	edx, ecx
		mov	eax, [ebp+var_5C]
		mov	[eax+1Ch], edx
		jmp	loc_6B283AA5
; ---------------------------------------------------------------------------

loc_6B283BAB:				; CODE XREF: _pango_win32_font_get_metrics+EDj
		mov	[esp+88h+h], 39h
		mov	eax, [ebp+var_60]
		mov	[esp+88h+hdc], eax
		call	_pango_coverage_get
		test	eax, eax
		jz	short loc_6B283B63
		call	_pango_win32_font_map_for_display
		mov	[esp+88h+hdc], eax
		call	_pango_font_map_create_context
		mov	[ebp+var_68], eax
		mov	[esp+88h+h], edi
		mov	[esp+88h+hdc], eax
		call	_pango_context_set_language
		mov	[esp+88h+hdc], esi
		call	_pango_font_describe_with_absolute_size
		mov	[ebp+var_70], eax
		mov	[esp+88h+h], eax
		mov	edx, [ebp+var_68]
		mov	[esp+88h+hdc], edx
		call	_pango_context_set_font_description
		mov	eax, [ebp+var_68]
		mov	[esp+88h+hdc], eax
		call	_pango_layout_new
		mov	[ebp+var_6C], eax
		mov	[esp+88h+var_80], 0FFFFFFFFh
		mov	[esp+88h+h], offset a0123456789	; "0123456789"
		mov	[esp+88h+hdc], eax
		call	_pango_layout_set_text
		mov	edx, [ebp+var_6C]
		mov	[esp+88h+hdc], edx
		call	_pango_layout_get_lines_readonly
		mov	[ebp+var_64], eax
		xor	esi, esi
		test	eax, eax
		jz	short loc_6B283C7C
		mov	[ebp+var_74], ebx

loc_6B283C35:				; CODE XREF: _pango_win32_font_get_metrics+203j
		mov	edx, [ebp+var_64]
		mov	eax, [edx]
		mov	edi, [eax+0Ch]
		test	edi, edi
		jz	short loc_6B283C6C
		lea	esi, [esi+0]

loc_6B283C44:				; CODE XREF: _pango_win32_font_get_metrics+1F6j
		mov	eax, [edi]
		mov	eax, [eax+4]
		mov	ebx, [eax]
		test	ebx, ebx
		jle	short loc_6B283C65
		mov	edx, [eax+4]
		xor	eax, eax

loc_6B283C54:				; CODE XREF: _pango_win32_font_get_metrics+1EFj
		mov	ecx, [edx+4]
		cmp	esi, ecx
		jge	short loc_6B283C5D
		mov	esi, ecx

loc_6B283C5D:				; CODE XREF: _pango_win32_font_get_metrics+1E5j
		inc	eax
		add	edx, 14h
		cmp	eax, ebx
		jnz	short loc_6B283C54

loc_6B283C65:				; CODE XREF: _pango_win32_font_get_metrics+1D9j
		mov	edi, [edi+4]
		test	edi, edi
		jnz	short loc_6B283C44

loc_6B283C6C:				; CODE XREF: _pango_win32_font_get_metrics+1CBj
		mov	eax, [ebp+var_64]
		mov	eax, [eax+4]
		mov	[ebp+var_64], eax
		test	eax, eax
		jnz	short loc_6B283C35
		mov	ebx, [ebp+var_74]

loc_6B283C7C:				; CODE XREF: _pango_win32_font_get_metrics+1BCj
		mov	edx, [ebp+var_5C]
		mov	[edx+10h], esi
		mov	eax, [ebp+var_70]
		mov	[esp+88h+hdc], eax
		call	_pango_font_description_free
		mov	edx, [ebp+var_6C]
		mov	[esp+88h+hdc], edx
		call	_g_object_unref
		mov	eax, [ebp+var_68]
		mov	[esp+88h+hdc], eax
		call	_g_object_unref
		jmp	loc_6B283B6C
_pango_win32_font_get_metrics endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_logfontw_hash	proc near		; DATA XREF: _pango_win32_font_cache_new+1Do

arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		mov	ebx, [ebp+arg_0]
		movzx	ecx, word ptr [ebx+1Ch]
		test	ecx, ecx
		jz	short loc_6B283CE1
		lea	edx, [ebx+1Eh]
		mov	ax, [ebx+1Eh]
		test	ax, ax
		jz	short loc_6B283CE1
		lea	esi, [esi+0]

loc_6B283CC8:				; CODE XREF: _logfontw_hash+37j
		movzx	eax, ax
		mov	esi, ecx
		shl	esi, 5
		add	eax, esi
		sub	eax, ecx
		mov	ecx, eax
		add	edx, 2
		mov	ax, [edx]
		test	ax, ax
		jnz	short loc_6B283CC8

loc_6B283CE1:				; CODE XREF: _logfontw_hash+Fj
					; _logfontw_hash+1Bj
		xor	eax, eax
		cmp	byte ptr [ebx+14h], 0
		setnz	al
		mov	esi, [ebx+0Ch]
		add	esi, eax
		mov	edi, [ebx+10h]
		mov	edx, 66666667h
		mov	eax, edi
		imul	edx
		sar	edx, 2
		sar	edi, 1Fh
		sub	edx, edi
		add	esi, edx
		mov	eax, [ebx]
		test	eax, eax
		js	short loc_6B283D18
		lea	eax, [eax+eax*4]
		lea	eax, [esi+eax*2]
		add	eax, ecx
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6B283D18:				; CODE XREF: _logfontw_hash+61j
		neg	eax
		lea	eax, [eax+eax*4]
		lea	eax, [esi+eax*2]
		add	eax, ecx
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
_logfontw_hash	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_free_cache_entry proc near		; CODE XREF: _cache_entry_unref+65p
					; DATA XREF: _pango_win32_font_cache_free+12o

ho		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, [ebp+arg_4]
		mov	eax, [ebx+5Ch]
		mov	[esp+18h+ho], eax ; ho
		call	_DeleteObject@4	; DeleteObject(x)
		push	edx
		test	eax, eax
		jnz	short loc_6B283D4B
		mov	eax, ds:__pango_win32_debug
		test	eax, eax
		jnz	short loc_6B283D60

loc_6B283D4B:				; CODE XREF: _free_cache_entry+18j
					; _free_cache_entry+73j
		mov	[ebp+arg_4], ebx
		mov	[ebp+arg_0], 68h
		mov	ebx, [ebp+var_4]
		leave
		jmp	_g_slice_free1
; ---------------------------------------------------------------------------
		align 10h

loc_6B283D60:				; CODE XREF: _free_cache_entry+21j
		mov	[esp+18h+var_10], 3Fh
		mov	[esp+18h+var_14], offset ___PRETTY_FUNCTION___41529 ; "free_cache_entry"
		mov	[esp+18h+ho], offset aSD_0 ; "%s:%d "
		call	_g_print
		mov	eax, [ebx+5Ch]
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+ho], offset aDeleteobjectFo ; "DeleteObject for hfont %p failed"
		call	_g_print
		mov	[esp+18h+ho], offset asc_6B28B469 ; "\n"
		call	_g_print
		jmp	short loc_6B283D4B
_free_cache_entry endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_cache_entry_unref proc	near		; CODE XREF: _pango_win32_font_cache_loadw+2BCp
					; _pango_win32_font_cache_unload+31j

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	ebx, eax
		mov	esi, edx
		mov	[esp+18h+var_14], 0FFFFFFFFh
		lea	eax, [edx+60h]
		mov	[esp+18h+var_18], eax
		call	_g_atomic_int_exchange_and_add
		dec	eax
		jz	short loc_6B283DCC
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B283DCC:				; CODE XREF: _cache_entry_unref+20j
		mov	ecx, ds:__pango_win32_debug
		test	ecx, ecx
		jnz	short loc_6B283E14

loc_6B283DD6:				; CODE XREF: _cache_entry_unref+AFj
		mov	[esp+18h+var_14], esi
		mov	eax, [ebx]
		mov	[esp+18h+var_18], eax
		call	_g_hash_table_remove
		mov	eax, [esi+5Ch]
		mov	[esp+14h+var_10], eax
		mov	eax, [ebx+4]
		mov	[esp+14h+var_14], eax
		call	_g_hash_table_remove
		mov	[esp+14h+var_C], ebx
		mov	[esp+14h+var_10], esi
		mov	[esp+14h+var_14], 0
		call	_free_cache_entry
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B283E14:				; CODE XREF: _cache_entry_unref+34j
		mov	[esp+18h+var_10], 0A5h
		mov	[esp+18h+var_14], offset ___PRETTY_FUNCTION___41562 ; "cache_entry_unref"
		mov	[esp+18h+var_18], offset aSD_0 ; "%s:%d	"
		call	_g_print
		mov	eax, [esi+5Ch]
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], offset aRemovingCacheE ; "removing cache entry %p"
		call	_g_print
		mov	[esp+18h+var_18], offset asc_6B28B469 ;	"\n"
		call	_g_print
		jmp	short loc_6B283DD6
_cache_entry_unref endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_logfontw_equal	proc near		; DATA XREF: _pango_win32_font_cache_new+15o

Str1		= dword	ptr -18h
Str2		= dword	ptr -14h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	esi, [ebp+arg_0]
		mov	ebx, [ebp+arg_4]
		lea	eax, [ebx+1Ch]
		mov	[esp+18h+Str2],	eax ; Str2
		lea	eax, [esi+1Ch]
		mov	[esp+18h+Str1],	eax ; Str1
		call	_wcscmp
		test	eax, eax
		jnz	short loc_6B283E80
		mov	al, [ebx+1Bh]
		cmp	[esi+1Bh], al
		jz	short loc_6B283E8C

loc_6B283E80:				; CODE XREF: _logfontw_equal+22j
					; _logfontw_equal+4Bj ...
		xor	eax, eax

loc_6B283E82:				; CODE XREF: _logfontw_equal+7Fj
					; _logfontw_equal+8Bj
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B283E8C:				; CODE XREF: _logfontw_equal+2Aj
		mov	edx, [esi+14h]
		and	edx, 0FFFF00h
		mov	eax, [ebx+14h]
		and	eax, 0FFFF00h
		cmp	edx, eax
		jnz	short loc_6B283E80
		cmp	byte ptr [ebx+14h], 0
		setnz	dl
		cmp	byte ptr [esi+14h], 0
		setz	al
		cmp	dl, al
		jz	short loc_6B283E80
		mov	edx, [ebx+10h]
		cmp	[esi+10h], edx
		jnz	short loc_6B283E80
		mov	eax, [ebx+0Ch]
		cmp	[esi+0Ch], eax
		jnz	short loc_6B283E80
		mov	edx, [ebx+8]
		cmp	[esi+8], edx
		jnz	short loc_6B283E80
		xor	eax, eax
		mov	edx, [ebx+4]
		cmp	[esi+4], edx
		jnz	short loc_6B283E82
		mov	eax, [ebx]
		cmp	[esi], eax
		setz	al
		movzx	eax, al
		jmp	short loc_6B283E82
_logfontw_equal	endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry   6. pango_win32_font_cache_free

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _pango_win32_font_cache_free
_pango_win32_font_cache_free proc near	; CODE XREF: _pango_win32_font_map_finalize+4Cp

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, [ebp+arg_0]
		test	ebx, ebx
		jz	short loc_6B283F40
		mov	[esp+18h+var_10], ebx
		mov	[esp+18h+var_14], offset _free_cache_entry
		mov	eax, [ebx]
		mov	[esp+18h+var_18], eax
		call	_g_hash_table_foreach
		mov	eax, [ebx]
		mov	[esp+18h+var_18], eax
		call	_g_hash_table_destroy
		mov	eax, [ebx+4]
		mov	[esp+18h+var_18], eax
		call	_g_hash_table_destroy
		mov	eax, [ebx+8]
		mov	[esp+18h+var_18], eax
		call	_g_list_free
		mov	[esp+18h+var_14], ebx
		mov	[esp+18h+var_18], 14h
		call	_g_slice_free1
		add	esp, 14h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6B283F40:				; CODE XREF: _pango_win32_font_cache_free+Cj
		mov	[esp+18h+var_10], offset aCacheNull ; "cache !=	NULL"
		mov	[esp+18h+var_14], offset ___PRETTY_FUNCTION___41535 ; "pango_win32_font_cache_free"
		mov	[esp+18h+var_18], offset aPango_0 ; "Pango"
		call	_g_return_if_fail_warning
		add	esp, 14h
		pop	ebx
		leave
		retn
_pango_win32_font_cache_free endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry   9. pango_win32_font_cache_new

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _pango_win32_font_cache_new
_pango_win32_font_cache_new proc near	; CODE XREF: __pango_win32_font_map_init+39p

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	[esp+18h+var_18], 14h
		call	_g_slice_alloc
		mov	ebx, eax
		mov	[esp+18h+var_14], offset _logfontw_equal
		mov	[esp+18h+var_18], offset _logfontw_hash
		call	_g_hash_table_new
		mov	[ebx], eax
		mov	[esp+18h+var_14], offset _g_direct_equal
		mov	[esp+18h+var_18], offset _g_direct_hash
		call	_g_hash_table_new
		mov	[ebx+4], eax
		mov	dword ptr [ebx+8], 0
		mov	dword ptr [ebx+0Ch], 0
		mov	dword ptr [ebx+10h], 0
		mov	eax, ebx
		add	esp, 14h
		pop	ebx
		leave
		retn
_pango_win32_font_cache_new endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry   8. pango_win32_font_cache_loadw

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _pango_win32_font_cache_loadw
_pango_win32_font_cache_loadw proc near	; CODE XREF: __pango_win32_font_get_hfont+41p
					; _pango_win32_font_cache_load+6Ap

uiAction	= dword	ptr -0F8h
uiParam		= dword	ptr -0F4h
pvParam		= dword	ptr -0F0h
fWinIni		= dword	ptr -0ECh
var_E8		= dword	ptr -0E8h
var_E4		= dword	ptr -0E4h
var_E0		= dword	ptr -0E0h
var_DC		= dword	ptr -0DCh
var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_D0		= dword	ptr -0D0h
var_CC		= dword	ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
lf		= LOGFONTW ptr -7Ch
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 0ECh
		mov	esi, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		test	edx, edx
		jz	loc_6B2840C4
		test	esi, esi
		jz	loc_6B2840EC
		mov	[esp+0F8h+uiParam], esi
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[esp+0F8h+uiAction], eax
		call	_g_hash_table_lookup
		mov	ebx, eax
		test	eax, eax
		jz	loc_6B284168
		mov	[esp+0F8h+uiParam], 1
		lea	eax, [eax+60h]
		mov	[esp+0F8h+uiAction], eax
		call	_g_atomic_int_add
		mov	eax, ds:__pango_win32_debug
		test	eax, eax
		jnz	short loc_6B284070

loc_6B28401D:				; CODE XREF: _pango_win32_font_cache_loadw+EEj
					; _pango_win32_font_cache_loadw+51Aj
		mov	eax, [ebx+64h]
		test	eax, eax
		jz	loc_6B284114
		mov	edx, [ebp+arg_0]
		cmp	dword ptr [edx+10h], 1
		jle	short loc_6B284062
		mov	edx, [eax+8]
		test	edx, edx
		jz	short loc_6B284062
		mov	ecx, [ebp+arg_0]
		cmp	eax, [ecx+0Ch]
		jz	short loc_6B2840B8
		mov	ecx, [eax+4]
		mov	[edx+4], ecx
		mov	ecx, [eax+4]
		mov	[ecx+8], edx

loc_6B28404C:				; CODE XREF: _pango_win32_font_cache_loadw+FEj
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+8]
		mov	[eax+4], edx
		mov	dword ptr [eax+8], 0
		mov	[edx+8], eax
		mov	[ecx+8], eax

loc_6B284062:				; CODE XREF: _pango_win32_font_cache_loadw+6Bj
					; _pango_win32_font_cache_loadw+72j ...
		mov	eax, [ebx+5Ch]

loc_6B284065:				; CODE XREF: _pango_win32_font_cache_loadw+239j
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6B284070:				; CODE XREF: _pango_win32_font_cache_loadw+57j
		mov	[esp+0F8h+pvParam], 0ECh
		mov	[esp+0F8h+uiParam], offset ___PRETTY_FUNCTION___41578 ;	"pango_win32_font_cache_loadw"
		mov	[esp+0F8h+uiAction], offset aSD_0 ; "%s:%d "
		call	_g_print
		mov	eax, [ebx+60h]
		mov	[esp+0F8h+pvParam], eax
		mov	eax, [ebx+5Ch]
		mov	[esp+0F8h+uiParam], eax
		mov	[esp+0F8h+uiAction], offset aIncreasedRefco ; "increased refcount for cache entry %p: "...
		call	_g_print
		mov	[esp+0F8h+uiAction], offset asc_6B28B469 ; "\n"
		call	_g_print
		jmp	loc_6B28401D
; ---------------------------------------------------------------------------
		align 4

loc_6B2840B8:				; CODE XREF: _pango_win32_font_cache_loadw+7Aj
		mov	[ecx+0Ch], edx
		mov	dword ptr [edx+4], 0
		jmp	short loc_6B28404C
; ---------------------------------------------------------------------------

loc_6B2840C4:				; CODE XREF: _pango_win32_font_cache_loadw+14j
		mov	[esp+0F8h+pvParam], offset aCacheNull ;	"cache != NULL"
		mov	[esp+0F8h+uiParam], offset ___PRETTY_FUNCTION___41578 ;	"pango_win32_font_cache_loadw"
		mov	[esp+0F8h+uiAction], offset aPango_0 ; "Pango"
		call	_g_return_if_fail_warning
		xor	eax, eax
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B2840EC:				; CODE XREF: _pango_win32_font_cache_loadw+1Cj
		mov	[esp+0F8h+pvParam], offset aLfpNull ; "lfp != NULL"
		mov	[esp+0F8h+uiParam], offset ___PRETTY_FUNCTION___41578 ;	"pango_win32_font_cache_loadw"
		mov	[esp+0F8h+uiAction], offset aPango_0 ; "Pango"
		call	_g_return_if_fail_warning
		xor	eax, eax
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B284114:				; CODE XREF: _pango_win32_font_cache_loadw+5Ej
		mov	[esp+0F8h+uiParam], 1
		lea	eax, [ebx+60h]
		mov	[esp+0F8h+uiAction], eax
		call	_g_atomic_int_add
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+10h]
		cmp	eax, 10h
		jz	loc_6B284257
		inc	eax
		mov	ecx, [ebp+arg_0]
		mov	[ecx+10h], eax

loc_6B28413D:				; CODE XREF: _pango_win32_font_cache_loadw+2C1j
		mov	[esp+0F8h+uiParam], ebx
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		mov	[esp+0F8h+uiAction], eax
		call	_g_list_prepend
		mov	ecx, [ebp+arg_0]
		mov	[ecx+8], eax
		mov	esi, [ecx+0Ch]
		test	esi, esi
		jz	loc_6B28424F

loc_6B284160:				; CODE XREF: _pango_win32_font_cache_loadw+28Ej
		mov	[ebx+64h], eax
		jmp	loc_6B284062
; ---------------------------------------------------------------------------

loc_6B284168:				; CODE XREF: _pango_win32_font_cache_loadw+37j
		lea	ecx, [ebp+lf]
		mov	[ebp+var_AC], ecx
		mov	ecx, 17h
		mov	edi, [ebp+var_AC]
		rep movsd
		mov	[esp+0F8h+fWinIni], 0 ;	fWinIni
		lea	eax, [ebp+var_1C]
		mov	[esp+0F8h+pvParam], eax	; pvParam
		mov	[esp+0F8h+uiParam], 0 ;	uiParam
		mov	[esp+0F8h+uiAction], 4Ah ; uiAction
		call	_SystemParametersInfoA@16 ; SystemParametersInfoA(x,x,x,x)
		sub	esp, 10h
		mov	edi, [ebp+var_1C]
		test	edi, edi
		jz	loc_6B284248
		cmp	ds:__pango_win32_os_version_info.dwMajorVersion, 5
		ja	short loc_6B28420C
		jz	short loc_6B284202

loc_6B2841BA:				; CODE XREF: _pango_win32_font_cache_loadw+246j
		mov	al, 4

loc_6B2841BC:				; CODE XREF: _pango_win32_font_cache_loadw+27Fj
					; _pango_win32_font_cache_loadw+286j
		mov	[ebp+lf.lfQuality], al
		mov	[ebp+lf.lfCharSet], 1
		xor	ebx, ebx
		lea	esi, [ebp+lf.lfFaceName]

loc_6B2841C8:				; CODE XREF: _pango_win32_font_cache_loadw+41Dj
		mov	ecx, ds:__pango_win32_debug
		test	ecx, ecx
		jnz	loc_6B28428A

loc_6B2841D6:				; CODE XREF: _pango_win32_font_cache_loadw+3BBj
		lea	eax, [ebp+lf]
		mov	[esp+0F8h+uiAction], eax ; lplf
		call	_CreateFontIndirectW@4 ; CreateFontIndirectW(x)
		push	edx
		test	eax, eax
		jnz	loc_6B284466
		test	ebx, ebx
		jz	loc_6B284384
		cmp	ebx, 1
		jz	loc_6B2845B1
		xor	eax, eax
		jmp	loc_6B284065
; ---------------------------------------------------------------------------

loc_6B284202:				; CODE XREF: _pango_win32_font_cache_loadw+1F4j
		mov	esi, ds:__pango_win32_os_version_info.dwMinorVersion
		test	esi, esi
		jz	short loc_6B2841BA

loc_6B28420C:				; CODE XREF: _pango_win32_font_cache_loadw+1F2j
		mov	[esp+0F8h+fWinIni], 0 ;	fWinIni
		lea	eax, [ebp+var_20]
		mov	[esp+0F8h+pvParam], eax	; pvParam
		mov	[esp+0F8h+uiParam], 0 ;	uiParam
		mov	[esp+0F8h+uiAction], 200Ah ; uiAction
		call	_SystemParametersInfoA@16 ; SystemParametersInfoA(x,x,x,x)
		sub	esp, 10h
		mov	ebx, [ebp+var_1C]
		test	ebx, ebx
		jz	short loc_6B284248
		cmp	[ebp+var_20], 2
		setz	al
		add	eax, 4
		jmp	loc_6B2841BC
; ---------------------------------------------------------------------------

loc_6B284248:				; CODE XREF: _pango_win32_font_cache_loadw+1E5j
					; _pango_win32_font_cache_loadw+273j
		xor	eax, eax
		jmp	loc_6B2841BC
; ---------------------------------------------------------------------------

loc_6B28424F:				; CODE XREF: _pango_win32_font_cache_loadw+196j
		mov	[ecx+0Ch], eax
		jmp	loc_6B284160
; ---------------------------------------------------------------------------

loc_6B284257:				; CODE XREF: _pango_win32_font_cache_loadw+16Cj
		mov	eax, [edx+0Ch]
		mov	esi, [eax]
		mov	eax, [eax+8]
		mov	[edx+0Ch], eax
		mov	dword ptr [eax+4], 0
		mov	eax, [esi+64h]
		mov	[esp+0F8h+uiAction], eax
		call	_g_list_free_1
		mov	dword ptr [esi+64h], 0
		mov	edx, esi
		mov	eax, [ebp+arg_0]
		call	_cache_entry_unref
		jmp	loc_6B28413D
; ---------------------------------------------------------------------------

loc_6B28428A:				; CODE XREF: _pango_win32_font_cache_loadw+20Cj
		mov	[esp+0F8h+pvParam], 11Ch
		mov	[esp+0F8h+uiParam], offset ___PRETTY_FUNCTION___41578 ;	"pango_win32_font_cache_loadw"
		mov	[esp+0F8h+uiAction], offset aSD_0 ; "%s:%d "
		call	_g_print
		movzx	edi, [ebp+lf.lfPitchAndFamily]
		movzx	ecx, [ebp+lf.lfQuality]
		movzx	edx, [ebp+lf.lfClipPrecision]
		movzx	eax, [ebp+lf.lfOutPrecision]
		mov	[ebp+var_B0], eax
		movzx	eax, [ebp+lf.lfCharSet]
		mov	[ebp+var_8C], eax
		cmp	[ebp+lf.lfStrikeOut], 0
		jz	loc_6B284404
		mov	[ebp+var_90], offset aStrikeout	; "strikeout,"

loc_6B2842DA:				; CODE XREF: _pango_win32_font_cache_loadw+44Aj
		cmp	[ebp+lf.lfUnderline], 0
		jz	loc_6B2843F5
		mov	[ebp+var_94], offset aUnderline	; "underline,"

loc_6B2842EE:				; CODE XREF: _pango_win32_font_cache_loadw+43Bj
		cmp	[ebp+lf.lfItalic], 0
		jz	loc_6B2843E6
		mov	[ebp+var_98], offset aItalic ; "italic,"

loc_6B284302:				; CODE XREF: _pango_win32_font_cache_loadw+42Cj
		mov	[esp+0F8h+var_C0], esi
		mov	[esp+0F8h+var_C4], edi
		mov	[esp+0F8h+var_C8], ecx
		mov	[esp+0F8h+var_CC], edx
		mov	edx, [ebp+var_B0]
		mov	[esp+0F8h+var_D0], edx
		mov	ecx, [ebp+var_8C]
		mov	[esp+0F8h+var_D4], ecx
		mov	eax, [ebp+var_90]
		mov	[esp+0F8h+var_D8], eax
		mov	edx, [ebp+var_94]
		mov	[esp+0F8h+var_DC], edx
		mov	ecx, [ebp+var_98]
		mov	[esp+0F8h+var_E0], ecx
		mov	eax, [ebp+lf.lfWeight]
		mov	[esp+0F8h+var_E4], eax
		mov	eax, [ebp+lf.lfOrientation]
		mov	[esp+0F8h+var_E8], eax
		mov	eax, [ebp+lf.lfEscapement]
		mov	[esp+0F8h+fWinIni], eax
		mov	eax, [ebp+lf.lfWidth]
		mov	[esp+0F8h+pvParam], eax
		mov	eax, [ebp+lf.lfHeight]
		mov	[esp+0F8h+uiParam], eax
		mov	[esp+0F8h+uiAction], offset a___TryingCreat ; "... trying CreateFontIndirect height=%l"...
		call	_g_print
		mov	[esp+0F8h+uiAction], offset asc_6B28B469 ; "\n"
		call	_g_print
		jmp	loc_6B2841D6
; ---------------------------------------------------------------------------

loc_6B284384:				; CODE XREF: _pango_win32_font_cache_loadw+228j
		mov	[esp+0F8h+var_E8], 0
		mov	[esp+0F8h+fWinIni], 0
		mov	[esp+0F8h+pvParam], 0
		mov	[esp+0F8h+uiParam], 0FFFFFFFFh
		mov	[esp+0F8h+uiAction], esi
		call	_g_utf16_to_utf8
		mov	edi, eax
		test	eax, eax
		jz	short loc_6B2843D6
		mov	[esp+0F8h+uiParam], offset aHelvetica ;	"helvetica"
		mov	[esp+0F8h+uiAction], eax
		call	_g_ascii_strcasecmp
		test	eax, eax
		jnz	short loc_6B284413
		mov	[esp+0F8h+uiParam], offset Source ; "arial"
		mov	[esp+0F8h+uiAction], esi ; Dest
		call	_wcscpy

loc_6B2843D6:				; CODE XREF: _pango_win32_font_cache_loadw+3ECj
					; _pango_win32_font_cache_loadw+473j ...
		mov	[esp+0F8h+uiAction], edi
		call	_g_free
		add	ebx, 2
		jmp	loc_6B2841C8
; ---------------------------------------------------------------------------

loc_6B2843E6:				; CODE XREF: _pango_win32_font_cache_loadw+32Ej
		mov	[ebp+var_98], offset byte_6B28B4A2
		jmp	loc_6B284302
; ---------------------------------------------------------------------------

loc_6B2843F5:				; CODE XREF: _pango_win32_font_cache_loadw+31Aj
		mov	[ebp+var_94], offset byte_6B28B4A2
		jmp	loc_6B2842EE
; ---------------------------------------------------------------------------

loc_6B284404:				; CODE XREF: _pango_win32_font_cache_loadw+306j
		mov	[ebp+var_90], offset byte_6B28B4A2
		jmp	loc_6B2842DA
; ---------------------------------------------------------------------------

loc_6B284413:				; CODE XREF: _pango_win32_font_cache_loadw+400j
		mov	[esp+0F8h+uiParam], offset aNewCenturyScho ; "new century schoolbook"
		mov	[esp+0F8h+uiAction], edi
		call	_g_ascii_strcasecmp
		test	eax, eax
		jnz	short loc_6B284439
		mov	[esp+0F8h+uiParam], offset aCenturySchoolb ; "century schoolbook"
		mov	[esp+0F8h+uiAction], esi ; Dest
		call	_wcscpy
		jmp	short loc_6B2843D6
; ---------------------------------------------------------------------------

loc_6B284439:				; CODE XREF: _pango_win32_font_cache_loadw+461j
		mov	[esp+0F8h+uiParam], offset aCourier ; "courier"
		mov	[esp+0F8h+uiAction], edi
		call	_g_ascii_strcasecmp
		test	eax, eax
		jnz	loc_6B2844E3
		mov	[esp+0F8h+uiParam], offset aC ;	"c"
		mov	[esp+0F8h+uiAction], esi ; Dest
		call	_wcscpy
		jmp	loc_6B2843D6
; ---------------------------------------------------------------------------

loc_6B284466:				; CODE XREF: _pango_win32_font_cache_loadw+220j
		mov	edx, eax
		mov	edi, ds:__pango_win32_debug
		test	edi, edi
		jnz	loc_6B28450C

loc_6B284476:				; CODE XREF: _pango_win32_font_cache_loadw+592j
		mov	[esp+0F8h+uiAction], 68h
		mov	[ebp+var_9C], edx
		call	_g_slice_alloc
		mov	ebx, eax
		mov	ecx, 17h
		mov	edi, eax
		mov	esi, [ebp+var_AC]
		rep movsd
		mov	edx, [ebp+var_9C]
		mov	[eax+5Ch], edx
		mov	dword ptr [eax+60h], 1
		mov	dword ptr [eax+64h], 0
		mov	[esp+0F8h+pvParam], eax
		mov	[esp+0F8h+uiParam], eax
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[esp+0F8h+uiAction], eax
		call	_g_hash_table_insert
		mov	[esp+0F8h+pvParam], ebx
		mov	eax, [ebx+5Ch]
		mov	[esp+0F8h+uiParam], eax
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+4]
		mov	[esp+0F8h+uiAction], eax
		call	_g_hash_table_insert
		jmp	loc_6B28401D
; ---------------------------------------------------------------------------

loc_6B2844E3:				; CODE XREF: _pango_win32_font_cache_loadw+487j
		mov	[esp+0F8h+uiParam], offset aLucida ; "lucida"
		mov	[esp+0F8h+uiAction], edi
		call	_g_ascii_strcasecmp
		test	eax, eax
		jnz	short loc_6B28455B
		mov	[esp+0F8h+uiParam], offset aLucidaSansUnic ; "lucida sans unicode"
		mov	[esp+0F8h+uiAction], esi ; Dest
		call	_wcscpy
		jmp	loc_6B2843D6
; ---------------------------------------------------------------------------

loc_6B28450C:				; CODE XREF: _pango_win32_font_cache_loadw+4ACj
		mov	[esp+0F8h+pvParam], 121h
		mov	[esp+0F8h+uiParam], offset ___PRETTY_FUNCTION___41578 ;	"pango_win32_font_cache_loadw"
		mov	[esp+0F8h+uiAction], offset aSD_0 ; "%s:%d "
		mov	[ebp+var_9C], eax
		call	_g_print
		mov	edx, [ebp+var_9C]
		mov	[esp+0F8h+uiParam], edx
		mov	[esp+0F8h+uiAction], offset aSuccessHfontP ; "Success! hfont=%p"
		call	_g_print
		mov	[esp+0F8h+uiAction], offset asc_6B28B469 ; "\n"
		call	_g_print
		mov	edx, [ebp+var_9C]
		jmp	loc_6B284476
; ---------------------------------------------------------------------------

loc_6B28455B:				; CODE XREF: _pango_win32_font_cache_loadw+531j
		mov	[esp+0F8h+uiParam], offset aLucidatypewrit ; "lucidatypewriter"
		mov	[esp+0F8h+uiAction], edi
		call	_g_ascii_strcasecmp
		test	eax, eax
		jnz	short loc_6B284584
		mov	[esp+0F8h+uiParam], offset asc_6B28B66E	; "l"
		mov	[esp+0F8h+uiAction], esi ; Dest
		call	_wcscpy
		jmp	loc_6B2843D6
; ---------------------------------------------------------------------------

loc_6B284584:				; CODE XREF: _pango_win32_font_cache_loadw+5A9j
		mov	[esp+0F8h+uiParam], offset aTimes ; "times"
		mov	[esp+0F8h+uiAction], edi
		call	_g_ascii_strcasecmp
		test	eax, eax
		jnz	loc_6B2843D6
		mov	[esp+0F8h+uiParam], offset aTimesNewRoman ; "times new roman"
		mov	[esp+0F8h+uiAction], esi ; Dest
		call	_wcscpy
		jmp	loc_6B2843D6
; ---------------------------------------------------------------------------

loc_6B2845B1:				; CODE XREF: _pango_win32_font_cache_loadw+231j
		mov	[esp+0F8h+var_E8], 0
		mov	[esp+0F8h+fWinIni], 0
		mov	[esp+0F8h+pvParam], 0
		mov	[esp+0F8h+uiParam], 0FFFFFFFFh
		mov	[esp+0F8h+uiAction], esi
		call	_g_utf16_to_utf8
		mov	edi, eax
		test	eax, eax
		jz	loc_6B2843D6
		mov	[esp+0F8h+uiParam], offset aCourier ; "courier"
		mov	[esp+0F8h+uiAction], eax
		call	_g_ascii_strcasecmp
		test	eax, eax
		jnz	short loc_6B284610
		mov	[esp+0F8h+uiParam], offset word_6B28B6B4 ; Source
		mov	[esp+0F8h+uiAction], esi ; Dest
		call	_wcscpy
		or	[ebp+lf.lfPitchAndFamily], 30h
		jmp	loc_6B2843D6
; ---------------------------------------------------------------------------

loc_6B284610:				; CODE XREF: _pango_win32_font_cache_loadw+631j
		mov	[esp+0F8h+uiParam], offset aTimesNewRoma_0 ; "times new	roman"
		mov	[esp+0F8h+uiAction], edi
		call	_g_ascii_strcasecmp
		test	eax, eax
		jnz	short loc_6B28463D
		mov	[esp+0F8h+uiParam], offset word_6B28B6B4 ; Source
		mov	[esp+0F8h+uiAction], esi ; Dest
		call	_wcscpy
		or	[ebp+lf.lfPitchAndFamily], 10h
		jmp	loc_6B2843D6
; ---------------------------------------------------------------------------

loc_6B28463D:				; CODE XREF: _pango_win32_font_cache_loadw+65Ej
		mov	[esp+0F8h+uiParam], offset aHelvetica ;	"helvetica"
		mov	[esp+0F8h+uiAction], edi
		call	_g_ascii_strcasecmp
		test	eax, eax
		jz	short loc_6B284665
		mov	[esp+0F8h+uiParam], offset aLucida ; "lucida"
		mov	[esp+0F8h+uiAction], edi
		call	_g_ascii_strcasecmp
		test	eax, eax
		jnz	short loc_6B28467E

loc_6B284665:				; CODE XREF: _pango_win32_font_cache_loadw+68Bj
		mov	[esp+0F8h+uiParam], offset word_6B28B6B4 ; Source
		mov	[esp+0F8h+uiAction], esi ; Dest
		call	_wcscpy
		or	[ebp+lf.lfPitchAndFamily], 20h
		jmp	loc_6B2843D6
; ---------------------------------------------------------------------------

loc_6B28467E:				; CODE XREF: _pango_win32_font_cache_loadw+69Fj
		mov	[esp+0F8h+uiParam], offset word_6B28B6B4 ; Source
		mov	[esp+0F8h+uiAction], esi ; Dest
		call	_wcscpy
		and	[ebp+lf.lfPitchAndFamily], 0Fh
		jmp	loc_6B2843D6
_pango_win32_font_cache_loadw endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry   7. pango_win32_font_cache_load

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _pango_win32_font_cache_load
_pango_win32_font_cache_load proc near

CodePage	= dword	ptr -98h
dwFlags		= dword	ptr -94h
lpMultiByteStr	= dword	ptr -90h
cbMultiByte	= dword	ptr -8Ch
lpWideCharStr	= dword	ptr -88h
cchWideChar	= dword	ptr -84h
var_74		= byte ptr -74h
WideCharStr	= word ptr -58h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 8Ch
		mov	eax, [ebp+arg_4]
		lea	ebx, [ebp+var_74]
		mov	ecx, 0Fh
		mov	edi, ebx
		mov	esi, eax
		rep movsd
		mov	[esp+98h+cchWideChar], 20h ; cchWideChar
		lea	edx, [ebp+WideCharStr]
		mov	[esp+98h+lpWideCharStr], edx ; lpWideCharStr
		mov	[esp+98h+cbMultiByte], 0FFFFFFFFh ; cbMultiByte
		add	eax, 1Ch
		mov	[esp+98h+lpMultiByteStr], eax ;	lpMultiByteStr
		mov	[esp+98h+dwFlags], 8 ; dwFlags
		mov	[esp+98h+CodePage], 0 ;	CodePage
		call	_MultiByteToWideChar@24	; MultiByteToWideChar(x,x,x,x,x,x)
		sub	esp, 18h
		test	eax, eax
		jnz	short loc_6B2846F8
		xor	eax, eax
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6B2846F8:				; CODE XREF: _pango_win32_font_cache_load+54j
		mov	[esp+98h+dwFlags], ebx
		mov	eax, [ebp+arg_0]
		mov	[esp+98h+CodePage], eax
		call	_pango_win32_font_cache_loadw
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
_pango_win32_font_cache_load endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  10. pango_win32_font_cache_unload

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _pango_win32_font_cache_unload
_pango_win32_font_cache_unload proc near ; CODE	XREF: _pango_win32_font_finalize+24p

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		test	ebx, ebx
		jz	short loc_6B284748
		test	eax, eax
		jz	short loc_6B28476C
		mov	[esp+18h+var_14], eax
		mov	eax, [ebx+4]
		mov	[esp+18h+var_18], eax
		call	_g_hash_table_lookup
		test	eax, eax
		jz	short loc_6B284790
		mov	edx, eax
		mov	eax, ebx
		add	esp, 14h
		pop	ebx
		leave
		jmp	_cache_entry_unref
; ---------------------------------------------------------------------------
		align 4

loc_6B284748:				; CODE XREF: _pango_win32_font_cache_unload+Fj
		mov	[esp+18h+var_10], offset aCacheNull ; "cache !=	NULL"
		mov	[esp+18h+var_14], offset ___PRETTY_FUNCTION___41595 ; "pango_win32_font_cache_unload"
		mov	[esp+18h+var_18], offset aPango_0 ; "Pango"
		call	_g_return_if_fail_warning

loc_6B284764:				; CODE XREF: _pango_win32_font_cache_unload+9Cj
		add	esp, 14h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B28476C:				; CODE XREF: _pango_win32_font_cache_unload+13j
		mov	[esp+18h+var_10], offset aHfontNull ; "hfont !=	NULL"
		mov	[esp+18h+var_14], offset ___PRETTY_FUNCTION___41595 ; "pango_win32_font_cache_unload"
		mov	[esp+18h+var_18], offset aPango_0 ; "Pango"
		call	_g_return_if_fail_warning
		add	esp, 14h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6B284790:				; CODE XREF: _pango_win32_font_cache_unload+26j
		mov	[esp+18h+var_10], offset aEntryNull ; "entry !=	NULL"
		mov	[esp+18h+var_14], offset ___PRETTY_FUNCTION___41595 ; "pango_win32_font_cache_unload"
		mov	[esp+18h+var_18], offset aPango_0 ; "Pango"
		call	_g_return_if_fail_warning
		jmp	short loc_6B284764
_pango_win32_font_cache_unload endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_case_insensitive_str_hash proc	near	; DATA XREF: __pango_win32_font_map_init+13o

arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		mov	ecx, [ebp+arg_0]
		mov	al, [ecx]
		lea	edx, [eax-41h]
		cmp	dl, 19h
		ja	short loc_6B284804
		movsx	eax, al
		add	eax, 20h

loc_6B2847C7:				; CODE XREF: _case_insensitive_str_hash+59j
		lea	ebx, [ecx+1]
		mov	dl, [ecx+1]
		test	dl, dl
		jnz	short loc_6B2847E4
		jmp	short loc_6B2847FF
; ---------------------------------------------------------------------------
		align 4

loc_6B2847D4:				; CODE XREF: _case_insensitive_str_hash+40j
		movsx	eax, dl
		add	eax, 20h
		lea	eax, [ecx+eax]
		inc	ebx
		mov	dl, [ebx]
		test	dl, dl
		jz	short loc_6B2847FF

loc_6B2847E4:				; CODE XREF: _case_insensitive_str_hash+1Fj
					; _case_insensitive_str_hash+4Dj
		mov	ecx, eax
		shl	ecx, 5
		sub	ecx, eax
		lea	eax, [edx-41h]
		cmp	al, 19h
		jbe	short loc_6B2847D4
		movsx	eax, dl
		lea	eax, [ecx+eax]
		inc	ebx
		mov	dl, [ebx]
		test	dl, dl
		jnz	short loc_6B2847E4

loc_6B2847FF:				; CODE XREF: _case_insensitive_str_hash+21j
					; _case_insensitive_str_hash+32j
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B284804:				; CODE XREF: _case_insensitive_str_hash+Fj
		movsx	eax, al
		test	eax, eax
		jnz	short loc_6B2847C7
		pop	ebx
		leave
		retn
_case_insensitive_str_hash endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_case_insensitive_str_equal proc near	; DATA XREF: __pango_win32_font_map_init+Bo

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		mov	ebx, [ebp+arg_0]
		mov	edi, [ebp+arg_4]
		mov	al, [ebx]
		test	al, al
		jnz	short loc_6B284846
		jmp	short loc_6B284874
; ---------------------------------------------------------------------------

loc_6B284824:				; CODE XREF: _case_insensitive_str_equal+44j
		movsx	eax, al
		add	eax, 20h
		lea	esi, [edx-41h]
		mov	ecx, esi
		cmp	cl, 19h
		ja	short loc_6B284863

loc_6B284834:				; CODE XREF: _case_insensitive_str_equal+51j
		movsx	edx, dl
		add	edx, 20h
		cmp	eax, edx
		jnz	short loc_6B28486A

loc_6B28483E:				; CODE XREF: _case_insensitive_str_equal+58j
		inc	ebx
		inc	edi
		mov	al, [ebx]
		test	al, al
		jz	short loc_6B284874

loc_6B284846:				; CODE XREF: _case_insensitive_str_equal+10j
		mov	dl, [edi]
		test	dl, dl
		jz	short loc_6B28486A
		lea	esi, [eax-41h]
		mov	ecx, esi
		cmp	cl, 19h
		jbe	short loc_6B284824
		movsx	eax, al
		lea	esi, [edx-41h]
		mov	ecx, esi
		cmp	cl, 19h
		jbe	short loc_6B284834

loc_6B284863:				; CODE XREF: _case_insensitive_str_equal+22j
		movsx	edx, dl
		cmp	eax, edx
		jz	short loc_6B28483E

loc_6B28486A:				; CODE XREF: _case_insensitive_str_equal+2Cj
					; _case_insensitive_str_equal+3Aj
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B284874:				; CODE XREF: _case_insensitive_str_equal+12j
					; _case_insensitive_str_equal+34j
		xor	eax, eax
		cmp	byte ptr [edi],	0
		setz	al
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
_case_insensitive_str_equal endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_logfontw_nosize_hash proc near		; DATA XREF: __pango_win32_font_map_init+2Ao

arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		mov	esi, [ebp+arg_0]
		mov	eax, [esi+1Ch]
		lea	edx, [eax-41h]
		cmp	dx, 19h
		ja	short loc_6B2848F4
		movzx	eax, ax
		add	eax, 20h

loc_6B28489E:				; CODE XREF: _logfontw_nosize_hash+77j
		mov	dx, [esi+1Eh]
		test	dx, dx
		jz	short loc_6B2848E1
		lea	ebx, [esi+1Eh]
		jmp	short loc_6B2848C0
; ---------------------------------------------------------------------------

loc_6B2848AC:				; CODE XREF: _logfontw_nosize_hash+4Aj
		movzx	eax, dx
		add	eax, 20h
		lea	eax, [ecx+eax]
		add	ebx, 2
		mov	dx, [ebx]
		test	dx, dx
		jz	short loc_6B2848E1

loc_6B2848C0:				; CODE XREF: _logfontw_nosize_hash+26j
					; _logfontw_nosize_hash+5Bj
		mov	ecx, eax
		shl	ecx, 5
		sub	ecx, eax
		lea	eax, [edx-41h]
		cmp	ax, 19h
		jbe	short loc_6B2848AC
		movzx	eax, dx
		lea	eax, [ecx+eax]
		add	ebx, 2
		mov	dx, [ebx]
		test	dx, dx
		jnz	short loc_6B2848C0

loc_6B2848E1:				; CODE XREF: _logfontw_nosize_hash+21j
					; _logfontw_nosize_hash+3Aj ...
		xor	edx, edx
		cmp	byte ptr [esi+14h], 0
		setnz	dl
		add	edx, [esi+10h]
		lea	eax, [edx+eax]
		pop	ebx
		pop	esi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6B2848F4:				; CODE XREF: _logfontw_nosize_hash+12j
		movzx	eax, ax
		test	eax, eax
		jz	short loc_6B2848E1
		jmp	short loc_6B28489E
_logfontw_nosize_hash endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_logfontw_nosize_equal proc near	; DATA XREF: __pango_win32_font_map_init+22o

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		mov	esi, [ebp+arg_4]
		lea	ecx, [esi+1Ch]
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+1Ch]
		test	ax, ax
		jz	short loc_6B28497C
		mov	edx, [esi+1Ch]
		test	dx, dx
		jz	short loc_6B284974
		mov	edi, [ebp+arg_0]
		lea	ebx, [edi+1Ch]
		jmp	short loc_6B284957
; ---------------------------------------------------------------------------
		align 4

loc_6B284928:				; CODE XREF: _logfontw_nosize_equal+5Ej
		movzx	eax, ax
		add	eax, 20h
		lea	edi, [edx-41h]
		cmp	di, 19h
		ja	short loc_6B28496C

loc_6B284937:				; CODE XREF: _logfontw_nosize_equal+6Aj
		movzx	edx, dx
		add	edx, 20h
		cmp	eax, edx
		jnz	short loc_6B284974

loc_6B284941:				; CODE XREF: _logfontw_nosize_equal+71j
		add	ebx, 2
		add	ecx, 2
		mov	ax, [ebx]
		test	ax, ax
		jz	short loc_6B28497C
		mov	dx, [ecx]
		test	dx, dx
		jz	short loc_6B284974

loc_6B284957:				; CODE XREF: _logfontw_nosize_equal+25j
		lea	edi, [eax-41h]
		cmp	di, 19h
		jbe	short loc_6B284928
		movzx	eax, ax
		lea	edi, [edx-41h]
		cmp	di, 19h
		jbe	short loc_6B284937

loc_6B28496C:				; CODE XREF: _logfontw_nosize_equal+35j
		movzx	edx, dx
		cmp	eax, edx
		jz	short loc_6B284941
		nop

loc_6B284974:				; CODE XREF: _logfontw_nosize_equal+1Dj
					; _logfontw_nosize_equal+3Fj ...
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B28497C:				; CODE XREF: _logfontw_nosize_equal+15j
					; _logfontw_nosize_equal+4Dj
		cmp	word ptr [ecx],	0
		jnz	short loc_6B284974
		cmp	byte ptr [esi+14h], 0
		setnz	dl
		mov	eax, [ebp+arg_0]
		cmp	byte ptr [eax+14h], 0
		setz	al
		cmp	dl, al
		jz	short loc_6B284974
		mov	edi, [esi+10h]
		mov	edx, [ebp+arg_0]
		xor	eax, eax
		cmp	[edx+10h], edi
		setz	al
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
_logfontw_nosize_equal endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_pango_win32_family_class_init proc near ; DATA	XREF: _pango_win32_family_get_type+20o

arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+44h], offset _pango_win32_family_list_faces
		mov	dword ptr [eax+48h], offset _pango_win32_family_get_name
		mov	dword ptr [eax+4Ch], offset _pango_win32_family_is_monospace
		leave
		retn
_pango_win32_family_class_init endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_pango_win32_face_class_init proc near	; DATA XREF: .rdata:6B28BBACo

arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+48h], offset _pango_win32_face_describe
		mov	dword ptr [eax+44h], offset _pango_win32_face_get_face_name
		mov	dword ptr [eax+4Ch], offset _pango_win32_face_list_sizes
		mov	dword ptr [eax+50h], offset _pango_win32_face_is_synthesized
		leave
		retn
_pango_win32_face_class_init endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_pango_win32_face_list_sizes proc near	; DATA XREF: _pango_win32_face_class_init+14o

arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+arg_8]
		mov	dword ptr [eax], 0
		leave
		retn
_pango_win32_face_list_sizes endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

__pango_win32_font_map_class_intern_init proc near
					; DATA XREF: __pango_win32_font_map_get_type+57o

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	ebx, [ebp+arg_0]
		mov	[esp+18h+var_18], ebx
		call	_g_type_class_peek_parent
		mov	ds:__pango_win32_font_map_parent_class,	eax
		mov	[esp+18h+var_14], 50h
		mov	[esp+18h+var_18], ebx
		call	_g_type_check_class_cast
		mov	esi, eax
		call	_pango_font_map_get_type
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], ebx
		call	_g_type_check_class_cast
		mov	dword ptr [ebx+64h], offset _pango_win32_font_map_real_find_font
		mov	dword ptr [esi+18h], offset _pango_win32_font_map_finalize
		mov	dword ptr [eax+44h], offset _pango_win32_font_map_load_font
		mov	dword ptr [eax+48h], offset _pango_win32_font_map_list_families
		mov	dword ptr [eax+50h], offset aPangorenderw_0 ; "PangoRenderWin32"
		call	_pango_win32_get_dc
		mov	eax, __pango_included_win32_modules
		test	eax, eax
		jz	short loc_6B284A98
		mov	esi, offset dword_6B28A010
		xor	ebx, ebx
		nop

loc_6B284A7C:				; CODE XREF: __pango_win32_font_map_class_intern_init+8Ej
		mov	eax, ebx
		shl	eax, 4
		add	eax, offset __pango_included_win32_modules
		mov	[esp+18h+var_18], eax
		call	_pango_module_register
		inc	ebx
		mov	eax, [esi]
		add	esi, 10h
		test	eax, eax
		jnz	short loc_6B284A7C

loc_6B284A98:				; CODE XREF: __pango_win32_font_map_class_intern_init+6Aj
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		retn
__pango_win32_font_map_class_intern_init endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_pango_win32_font_map_list_families proc near
					; DATA XREF: __pango_win32_font_map_class_intern_init+50o

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 20h
		mov	esi, [ebp+arg_4]
		mov	ebx, [ebp+arg_8]
		mov	[ebp+var_C], 0
		test	ebx, ebx
		jz	short loc_6B284B1A
		lea	eax, [ebp+var_C]
		mov	[esp+28h+var_20], eax
		mov	[esp+28h+var_24], offset _list_families_foreach
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+14h]
		mov	[esp+28h+var_28], eax
		call	_g_hash_table_foreach
		mov	eax, [ebp+var_C]
		mov	[esp+28h+var_28], eax
		call	_g_slist_length
		mov	[ebx], eax
		test	esi, esi
		jz	short loc_6B284B24
		mov	[esp+28h+var_24], 4
		mov	[esp+28h+var_28], eax
		call	_g_malloc_n
		mov	[esi], eax
		mov	ebx, [ebp+var_C]
		test	ebx, ebx
		jz	short loc_6B284B12
		mov	edx, ebx
		xchg	ax, ax

loc_6B284B04:				; CODE XREF: _pango_win32_font_map_list_families+70j
		mov	ecx, [edx]
		mov	[eax], ecx
		mov	edx, [edx+4]
		add	eax, 4
		test	edx, edx
		jnz	short loc_6B284B04

loc_6B284B12:				; CODE XREF: _pango_win32_font_map_list_families+5Ej
					; _pango_win32_font_map_list_families+87j
		mov	[esp+28h+var_28], ebx
		call	_g_slist_free

loc_6B284B1A:				; CODE XREF: _pango_win32_font_map_list_families+17j
		add	esp, 20h
		pop	ebx
		pop	esi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B284B24:				; CODE XREF: _pango_win32_font_map_list_families+45j
		mov	ebx, [ebp+var_C]
		jmp	short loc_6B284B12
_pango_win32_font_map_list_families endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_list_families_foreach proc near	; DATA XREF: _pango_win32_font_map_list_families+20o

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, [ebp+arg_8]
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+var_14], eax
		mov	eax, [ebx]
		mov	[esp+18h+var_18], eax
		call	_g_slist_prepend
		mov	[ebx], eax
		add	esp, 14h
		pop	ebx
		leave
		retn
_list_families_foreach endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_pango_win32_font_map_load_font	proc near
					; DATA XREF: __pango_win32_font_map_class_intern_init+49o

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	esi, [ebp+arg_8]
		test	esi, esi
		jz	loc_6B284CF8
		mov	eax, [ebp+arg_8]
		mov	[esp+38h+var_38], eax
		call	_pango_font_description_get_family
		test	eax, eax
		jz	loc_6B284D20

loc_6B284B77:				; CODE XREF: _pango_win32_font_map_load_font+1D5j
		mov	ebx, ds:__pango_win32_debug
		test	ebx, ebx
		jnz	loc_6B284C34

loc_6B284B85:				; CODE XREF: _pango_win32_font_map_load_font+125j
		mov	[esp+38h+var_34], eax
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+14h]
		mov	[esp+38h+var_38], eax
		call	_g_hash_table_lookup
		test	eax, eax
		jz	loc_6B284C2A
		mov	ecx, ds:__pango_win32_debug
		test	ecx, ecx
		jnz	loc_6B284C7C

loc_6B284BAD:				; CODE XREF: _pango_win32_font_map_load_font+166j
		mov	ebx, [eax+10h]
		test	ebx, ebx
		jz	short loc_6B284C1C
		mov	edi, [ebx]
		mov	eax, [edi+68h]
		xor	esi, esi
		xor	edx, edx
		jmp	short loc_6B284BCC
; ---------------------------------------------------------------------------
		align 10h

loc_6B284BC0:				; CODE XREF: _pango_win32_font_map_load_font+9Aj
		mov	edi, [ebx]
		mov	eax, [edi+68h]
		test	esi, esi
		jz	short loc_6B284C18
		mov	edx, [esi+68h]

loc_6B284BCC:				; CODE XREF: _pango_win32_font_map_load_font+6Dj
					; _pango_win32_font_map_load_font+CAj
		mov	[esp+38h+var_30], eax
		mov	[esp+38h+var_34], edx
		mov	eax, [ebp+arg_8]
		mov	[esp+38h+var_38], eax
		call	_pango_font_description_better_match
		test	eax, eax
		jz	short loc_6B284BE5
		mov	esi, edi

loc_6B284BE5:				; CODE XREF: _pango_win32_font_map_load_font+91j
		mov	ebx, [ebx+4]
		test	ebx, ebx
		jnz	short loc_6B284BC0
		test	esi, esi
		jz	short loc_6B284C1C
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	edx, [ebp+arg_8]
		mov	[esp+38h+var_2C], edx
		mov	[esp+38h+var_30], esi
		mov	edx, [ebp+arg_4]
		mov	[esp+38h+var_34], edx
		mov	edx, [ebp+arg_0]
		mov	[esp+38h+var_38], edx
		call	dword ptr [eax+64h]

loc_6B284C10:				; CODE XREF: _pango_win32_font_map_load_font+1A1j
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6B284C18:				; CODE XREF: _pango_win32_font_map_load_font+77j
		xor	edx, edx
		jmp	short loc_6B284BCC
; ---------------------------------------------------------------------------

loc_6B284C1C:				; CODE XREF: _pango_win32_font_map_load_font+62j
					; _pango_win32_font_map_load_font+9Ej
		mov	edx, ds:__pango_win32_debug
		test	edx, edx
		jnz	loc_6B284CBB

loc_6B284C2A:				; CODE XREF: _pango_win32_font_map_load_font+49j
		xor	eax, eax
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6B284C34:				; CODE XREF: _pango_win32_font_map_load_font+2Fj
		mov	[esp+38h+var_30], 273h
		mov	[esp+38h+var_34], offset ___PRETTY_FUNCTION___42262 ; "pango_win32_font_map_load_font"
		mov	[esp+38h+var_38], offset aSD_1 ; "%s:%d	"
		mov	[ebp+var_1C], eax
		call	_g_print
		mov	eax, [ebp+var_1C]
		mov	[esp+38h+var_34], eax
		mov	[esp+38h+var_38], offset aNameS	; "name=%s"
		call	_g_print
		mov	[esp+38h+var_38], offset asc_6B28B7A1 ;	"\n"
		call	_g_print
		mov	eax, [ebp+var_1C]
		jmp	loc_6B284B85
; ---------------------------------------------------------------------------
		align 4

loc_6B284C7C:				; CODE XREF: _pango_win32_font_map_load_font+57j
		mov	[esp+38h+var_30], 27Ah
		mov	[esp+38h+var_34], offset ___PRETTY_FUNCTION___42262 ; "pango_win32_font_map_load_font"
		mov	[esp+38h+var_38], offset aSD_1 ; "%s:%d	"
		mov	[ebp+var_1C], eax
		call	_g_print
		mov	[esp+38h+var_38], offset aGotWin32family ; "got	win32family"
		call	_g_print
		mov	[esp+38h+var_38], offset asc_6B28B7A1 ;	"\n"
		call	_g_print
		mov	eax, [ebp+var_1C]
		jmp	loc_6B284BAD
; ---------------------------------------------------------------------------

loc_6B284CBB:				; CODE XREF: _pango_win32_font_map_load_font+D4j
		mov	[esp+38h+var_30], 28Eh
		mov	[esp+38h+var_34], offset ___PRETTY_FUNCTION___42262 ; "pango_win32_font_map_load_font"
		mov	[esp+38h+var_38], offset aSD_1 ; "%s:%d	"
		call	_g_print
		mov	[esp+38h+var_38], offset aNoBestMatch ;	"no best match!"
		call	_g_print
		mov	[esp+38h+var_38], offset asc_6B28B7A1 ;	"\n"
		call	_g_print
		xor	eax, eax
		jmp	loc_6B284C10
; ---------------------------------------------------------------------------
		align 4

loc_6B284CF8:				; CODE XREF: _pango_win32_font_map_load_font+Ej
		mov	[esp+38h+var_30], offset aDescriptionNul ; "description	!= NULL"
		mov	[esp+38h+var_34], offset ___PRETTY_FUNCTION___42262 ; "pango_win32_font_map_load_font"
		mov	[esp+38h+var_38], offset aPango_1 ; "Pango"
		call	_g_return_if_fail_warning
		xor	eax, eax
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6B284D20:				; CODE XREF: _pango_win32_font_map_load_font+21j
		mov	eax, offset byte_6B28B791
		jmp	loc_6B284B77
_pango_win32_font_map_load_font	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	pango_win32_enum_proc(const LOGFONTW *,	const TEXTMETRICW *, DWORD, LPARAM)
_pango_win32_enum_proc@16 proc near	; DATA XREF: __pango_win32_font_map_init+67o

hdc		= dword	ptr -98h
lpLogfont	= dword	ptr -94h
lpProc		= dword	ptr -90h
lParam		= dword	ptr -8Ch
dwFlags		= dword	ptr -88h
Logfont		= tagLOGFONTW ptr -74h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 8Ch
		mov	esi, [ebp+arg_0]
		mov	ebx, [ebp+arg_4]
		mov	edi, [ebp+arg_8]
		mov	eax, ds:__pango_win32_debug
		test	eax, eax
		jnz	short loc_6B284DA8

loc_6B284D4A:				; CODE XREF: pango_win32_enum_proc(x,x,x,x)+C2j
		cmp	edi, 4
		jz	short loc_6B284D61
		cmp	ds:__pango_win32_os_version_info.dwMajorVersion, 4
		jbe	short loc_6B284D99
		test	dword ptr [ebx+3Ch], 120000h
		jz	short loc_6B284D99

loc_6B284D61:				; CODE XREF: pango_win32_enum_proc(x,x,x,x)+21j
		lea	edi, [ebp+Logfont]
		mov	ecx, 17h
		rep movsd
		mov	[esp+98h+dwFlags], 0 ; dwFlags
		mov	eax, [ebp+arg_C]
		mov	[esp+98h+lParam], eax ;	lParam
		mov	[esp+98h+lpProc], offset _pango_win32_inner_enum_proc@16 ; lpProc
		lea	eax, [ebp+Logfont]
		mov	[esp+98h+lpLogfont], eax ; lpLogfont
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+98h+hdc], eax ; hdc
		call	_EnumFontFamiliesExW@20	; EnumFontFamiliesExW(x,x,x,x,x)
		sub	esp, 14h

loc_6B284D99:				; CODE XREF: pango_win32_enum_proc(x,x,x,x)+2Aj
					; pango_win32_enum_proc(x,x,x,x)+33j
		mov	eax, 1
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn	10h
; ---------------------------------------------------------------------------

loc_6B284DA8:				; CODE XREF: pango_win32_enum_proc(x,x,x,x)+1Cj
		mov	[esp+98h+lpProc], 0C6h
		mov	[esp+98h+lpLogfont], offset ___PRETTY_FUNCTION___42122 ; "pango_win32_enum_proc"
		mov	[esp+98h+hdc], offset aSD_1 ; "%s:%d "
		call	_g_print
		mov	eax, [ebx+3Ch]
		mov	[esp+98h+lParam], eax
		mov	[esp+98h+lpProc], edi
		lea	eax, [esi+1Ch]
		mov	[esp+98h+lpLogfont], eax
		mov	[esp+98h+hdc], offset aSLuLx ; "%S: %lu	%lx"
		call	_g_print
		mov	[esp+98h+hdc], offset asc_6B28B7A1 ; "\n"
		call	_g_print
		jmp	loc_6B284D4A
_pango_win32_enum_proc@16 endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_pango_win32_family_get_type proc near	; CODE XREF: _pango_win32_get_font_family:loc_6B284E88p
					; _pango_win32_family_is_monospace+6p ...

var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_2C		= word ptr -2Ch
var_20		= dword	ptr -20h
var_14		= word ptr -14h

		push	ebp
		mov	ebp, esp
		push	edi
		sub	esp, 44h
		mov	eax, ds:_object_type_42219
		test	eax, eax
		jnz	short loc_6B284E54
		lea	edi, [ebp+var_2C]
		mov	ecx, 24h
		rep stosb
		mov	[ebp+var_2C], 5Ch
		mov	[ebp+var_20], offset _pango_win32_family_class_init
		mov	[ebp+var_14], 18h
		mov	[esp+48h+var_48], offset aPangowin32fami ; "PangoWin32Family"
		call	_g_intern_static_string
		mov	edi, eax
		call	_pango_font_family_get_type
		mov	[esp+48h+var_3C], 0
		lea	edx, [ebp+var_2C]
		mov	[esp+48h+var_40], edx
		mov	[esp+48h+var_44], edi
		mov	[esp+48h+var_48], eax
		call	_g_type_register_static
		mov	ds:_object_type_42219, eax

loc_6B284E54:				; CODE XREF: _pango_win32_family_get_type+Ej
		add	esp, 44h
		pop	edi
		leave
		retn
_pango_win32_family_get_type endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_pango_win32_get_font_family proc near	; CODE XREF: _create_standard_family+5Ep
					; _pango_win32_insert_font+334p

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	ebx, eax
		mov	edi, edx
		mov	[esp+28h+var_24], edx
		mov	eax, [eax+14h]
		mov	[esp+28h+var_28], eax
		call	_g_hash_table_lookup
		mov	esi, eax
		test	eax, eax
		jz	short loc_6B284E88
		mov	eax, esi
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6B284E88:				; CODE XREF: _pango_win32_get_font_family+20j
		call	_pango_win32_family_get_type
		mov	[esp+28h+var_24], 0
		mov	[esp+28h+var_28], eax
		call	_g_object_new
		mov	esi, eax
		mov	[esp+24h+var_24], edi
		call	_g_strdup
		mov	[esi+0Ch], eax
		mov	dword ptr [esi+10h], 0
		mov	[esp+24h+var_1C], esi
		mov	[esp+24h+var_20], eax
		mov	eax, [ebx+14h]
		mov	[esp+24h+var_24], eax
		call	_g_hash_table_insert
		mov	eax, esi
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
_pango_win32_get_font_family endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_pango_win32_family_is_monospace proc near ; DATA XREF:	_pango_win32_family_class_init+14o

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		call	_pango_win32_family_get_type
		mov	[esp+18h+var_14], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_18], eax
		call	_g_type_check_instance_cast
		mov	eax, [eax+14h]
		leave
		retn
_pango_win32_family_is_monospace endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_pango_win32_family_get_name proc near	; DATA XREF: _pango_win32_family_class_init+Do

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		call	_pango_win32_family_get_type
		mov	[esp+18h+var_14], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_18], eax
		call	_g_type_check_instance_cast
		mov	eax, [eax+0Ch]
		leave
		retn
_pango_win32_family_get_name endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_pango_win32_family_list_faces proc near ; DATA	XREF: _pango_win32_family_class_init+6o

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	esi, [ebp+arg_8]
		call	_pango_win32_family_get_type
		mov	[esp+28h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+var_28], eax
		call	_g_type_check_instance_cast
		mov	edi, eax
		mov	eax, [eax+10h]
		test	eax, eax
		jz	short loc_6B284F84
		xor	ebx, ebx
		nop

loc_6B284F3C:				; CODE XREF: _pango_win32_family_list_faces+32j
		inc	ebx
		mov	eax, [eax+4]
		test	eax, eax
		jnz	short loc_6B284F3C

loc_6B284F44:				; CODE XREF: _pango_win32_family_list_faces+76j
		mov	edx, [ebp+arg_4]
		test	edx, edx
		jz	short loc_6B284F76
		mov	[esp+28h+var_24], 4
		mov	[esp+28h+var_28], ebx
		call	_g_malloc_n
		mov	edx, [ebp+arg_4]
		mov	[edx], eax
		mov	edx, [edi+10h]
		test	edx, edx
		jz	short loc_6B284F76
		nop

loc_6B284F68:				; CODE XREF: _pango_win32_family_list_faces+64j
		mov	ecx, [edx]
		mov	[eax], ecx
		mov	edx, [edx+4]
		add	eax, 4
		test	edx, edx
		jnz	short loc_6B284F68

loc_6B284F76:				; CODE XREF: _pango_win32_family_list_faces+39j
					; _pango_win32_family_list_faces+55j
		test	esi, esi
		jz	short loc_6B284F7C
		mov	[esi], ebx

loc_6B284F7C:				; CODE XREF: _pango_win32_family_list_faces+68j
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6B284F84:				; CODE XREF: _pango_win32_family_list_faces+27j
		xor	ebx, ebx
		jmp	short loc_6B284F44
_pango_win32_family_list_faces endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_pango_win32_face_get_type proc	near	; CODE XREF: _create_standard_family+85p
					; _pango_win32_face_is_synthesized+6p ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	eax, ds:_object_type_42455
		test	eax, eax
		jnz	short loc_6B284FCC
		mov	[esp+18h+var_18], offset aPangowin32face ; "PangoWin32Face"
		call	_g_intern_static_string
		mov	ebx, eax
		call	_pango_font_face_get_type
		mov	[esp+18h+var_C], 0
		mov	[esp+18h+var_10], offset _object_info_42458 ; "\\"
		mov	[esp+18h+var_14], ebx
		mov	[esp+18h+var_18], eax
		call	_g_type_register_static
		mov	ds:_object_type_42455, eax

loc_6B284FCC:				; CODE XREF: _pango_win32_face_get_type+Ej
		add	esp, 14h
		pop	ebx
		leave
		retn
_pango_win32_face_get_type endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_create_standard_family	proc near	; CODE XREF: __pango_win32_font_map_init+A1p
					; __pango_win32_font_map_init+ADp ...

var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	esi, eax
		mov	[ebp+var_34], edx
		lea	eax, [ebp+var_1C]
		mov	[esp+48h+var_40], eax
		lea	eax, [ebp+var_20]
		mov	[esp+48h+var_44], eax
		mov	[esp+48h+var_48], edx
		call	_pango_lookup_aliases
		mov	ebx, [ebp+var_1C]
		test	ebx, ebx
		jle	loc_6B285136
		xor	edi, edi
		jmp	short loc_6B285012
; ---------------------------------------------------------------------------
		align 4

loc_6B285008:				; CODE XREF: _create_standard_family+55j
		inc	edi
		cmp	[ebp+var_1C], edi
		jle	loc_6B285136

loc_6B285012:				; CODE XREF: _create_standard_family+31j
		mov	eax, [ebp+var_20]
		mov	eax, [eax+edi*4]
		mov	[esp+48h+var_44], eax
		mov	eax, [esi+14h]
		mov	[esp+48h+var_48], eax
		call	_g_hash_table_lookup
		test	eax, eax
		jz	short loc_6B285008
		mov	ebx, eax
		mov	edx, [ebp+var_34]
		mov	eax, esi
		call	_pango_win32_get_font_family
		mov	[ebp+var_30], eax
		mov	eax, [ebx+10h]
		mov	[ebp+var_2C], eax
		mov	eax, [ebx+14h]
		mov	edx, [ebp+var_30]
		mov	[edx+14h], eax
		mov	ecx, [ebp+var_2C]
		test	ecx, ecx
		jz	loc_6B285136

loc_6B285054:				; CODE XREF: _create_standard_family+15Cj
		mov	ecx, [ebp+var_2C]
		mov	ebx, [ecx]
		call	_pango_win32_face_get_type
		mov	[esp+48h+var_44], 0
		mov	[esp+48h+var_48], eax
		call	_g_object_new
		mov	edx, eax
		lea	edi, [eax+0Ch]
		lea	esi, [ebx+0Ch]
		mov	ecx, 17h
		rep movsd
		mov	eax, [ebx+68h]
		mov	[esp+48h+var_48], eax
		mov	[ebp+var_38], edx
		call	_pango_font_description_copy_static
		mov	edx, [ebp+var_38]
		mov	[edx+68h], eax
		mov	ecx, [ebp+var_34]
		mov	[esp+48h+var_44], ecx
		mov	[esp+48h+var_48], eax
		call	_pango_font_description_set_family_static
		xor	esi, esi
		mov	edx, [ebp+var_38]
		mov	edi, edx
		jmp	short loc_6B2850BE
; ---------------------------------------------------------------------------
		align 4

loc_6B2850AC:				; CODE XREF: _create_standard_family+F0j
		mov	[esp+48h+var_48], eax
		call	_pango_coverage_ref
		mov	[edi+esi*4+6Ch], eax
		inc	esi
		cmp	esi, 6
		jz	short loc_6B2850D4

loc_6B2850BE:				; CODE XREF: _create_standard_family+D3j
					; _create_standard_family+FEj
		mov	eax, [ebx+esi*4+6Ch]
		test	eax, eax
		jnz	short loc_6B2850AC
		mov	dword ptr [edi+esi*4+6Ch], 0
		inc	esi
		cmp	esi, 6
		jnz	short loc_6B2850BE

loc_6B2850D4:				; CODE XREF: _create_standard_family+E8j
		mov	dword ptr [edi+88h], 1
		mov	eax, [ebx+8Ch]
		mov	[edi+8Ch], eax
		mov	eax, [ebx+90h]
		mov	[edi+90h], ax
		mov	eax, [ebx+94h]
		mov	[edi+94h], eax
		mov	dword ptr [edi+98h], 0
		mov	[esp+48h+var_44], edi
		mov	edx, [ebp+var_30]
		mov	eax, [edx+10h]
		mov	[esp+48h+var_48], eax
		call	_g_slist_append
		mov	ecx, [ebp+var_30]
		mov	[ecx+10h], eax
		mov	eax, [ebp+var_2C]
		mov	eax, [eax+4]
		mov	[ebp+var_2C], eax
		test	eax, eax
		jnz	loc_6B285054

loc_6B285136:				; CODE XREF: _create_standard_family+29j
					; _create_standard_family+38j ...
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
_create_standard_family	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl _pango_win32_font_map_init(LPARAM)
__pango_win32_font_map_init proc near	; DATA XREF: __pango_win32_font_map_get_type+47o

var_8C		= dword	ptr -8Ch
hdc		= dword	ptr -88h
lpLogfont	= dword	ptr -84h
lpProc		= dword	ptr -80h
lParam		= dword	ptr -7Ch
dwFlags		= dword	ptr -78h
Logfont		= tagLOGFONTW ptr -64h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	edi
		push	ebx
		add	esp, 0FFFFFF80h
		mov	ebx, [ebp+arg_0]
		mov	[esp+88h+lpLogfont], offset _case_insensitive_str_equal
		mov	[esp+88h+hdc], offset _case_insensitive_str_hash
		call	_g_hash_table_new
		mov	[ebx+14h], eax
		mov	[esp+88h+lpLogfont], offset _logfontw_nosize_equal
		mov	[esp+88h+hdc], offset _logfontw_nosize_hash
		call	_g_hash_table_new
		mov	[ebx+18h], eax
		call	_pango_win32_font_cache_new
		mov	[ebx+0Ch], eax
		call	_g_queue_new
		mov	[ebx+10h], eax
		lea	edx, [ebp+Logfont]
		mov	ecx, 5Ch
		xor	eax, eax
		mov	edi, edx
		rep stosb
		mov	[ebp+Logfont.lfCharSet], 1
		mov	[esp+88h+dwFlags], 0 ; dwFlags
		mov	[esp+88h+lParam], ebx ;	lParam
		mov	[esp+88h+lpProc], offset _pango_win32_enum_proc@16 ; lpProc
		mov	[esp+88h+lpLogfont], edx ; lpLogfont
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+88h+hdc], eax ; hdc
		call	_EnumFontFamiliesExW@20	; EnumFontFamiliesExW(x,x,x,x,x)
		sub	esp, 14h
		mov	[esp+88h+lpProc], ebx
		mov	[esp+88h+lpLogfont], offset _synthesize_foreach
		mov	eax, [ebx+14h]
		mov	[esp+88h+hdc], eax
		call	_g_hash_table_foreach
		mov	edx, offset aSans ; "Sans"
		mov	eax, ebx
		call	_create_standard_family
		mov	edx, offset aSerif ; "Serif"
		mov	eax, ebx
		call	_create_standard_family
		mov	edx, offset aMonospace ; "Monospace"
		mov	eax, ebx
		call	_create_standard_family
		mov	[esp+88h+lpLogfont], 5Ah ; index
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+88h+hdc], eax ; hdc
		call	_GetDeviceCaps@8 ; GetDeviceCaps(x,x)
		sub	esp, 8
		fld	ds:flt_6B28BBF4
		push	eax
		fidiv	[esp+8Ch+var_8C]
		add	esp, 4
		fmul	ds:flt_6B28BBF8
		fstp	qword ptr [ebx+20h]
		lea	esp, [ebp-8]
		pop	ebx
		pop	edi
		leave
		retn
__pango_win32_font_map_init endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_pango_win32_face_is_synthesized proc near ; DATA XREF:	_pango_win32_face_class_init+1Bo

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		call	_pango_win32_face_get_type
		mov	[esp+18h+var_14], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_18], eax
		call	_g_type_check_instance_cast
		mov	eax, [eax+88h]
		leave
		retn
_pango_win32_face_is_synthesized endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_pango_win32_face_get_face_name	proc near ; DATA XREF: _pango_win32_face_class_init+Do

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	esi, [ebp+arg_0]
		call	_pango_win32_face_get_type
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], esi
		call	_g_type_check_instance_cast
		mov	ebx, eax
		mov	eax, [eax+84h]
		test	eax, eax
		jz	short loc_6B285288
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B285288:				; CODE XREF: _pango_win32_face_get_face_name+26j
		mov	[esp+18h+var_18], esi
		call	_pango_font_face_describe
		mov	esi, eax
		mov	[esp+14h+var_10], 21h
		mov	[esp+14h+var_14], eax
		call	_pango_font_description_unset_fields
		mov	[esp+14h+var_14], esi
		call	_pango_font_description_to_string
		mov	[ebx+84h], eax
		mov	[esp+14h+var_14], esi
		call	_pango_font_description_free
		mov	eax, [ebx+84h]
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		retn
_pango_win32_face_get_face_name	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_pango_win32_face_describe proc	near	; DATA XREF: _pango_win32_face_class_init+6o

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, [ebp+arg_0]
		call	_pango_win32_face_get_type
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], ebx
		call	_g_type_check_instance_cast
		mov	eax, [eax+68h]
		mov	[ebp+arg_0], eax
		add	esp, 14h
		pop	ebx
		leave
		jmp	_pango_font_description_copy
_pango_win32_face_describe endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry   3. _pango_win32_font_map_get_type

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public __pango_win32_font_map_get_type
__pango_win32_font_map_get_type	proc near ; CODE XREF: _pango_win32_font_describe+34p
					; _pango_win32_font_dispose+2Dp ...

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 24h
		mov	eax, ds:_g_define_type_id__volatile_42069
		test	eax, eax
		jz	short loc_6B285310

loc_6B285304:				; CODE XREF: __pango_win32_font_map_get_type+2Aj
		mov	eax, ds:_g_define_type_id__volatile_42069
		add	esp, 24h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6B285310:				; CODE XREF: __pango_win32_font_map_get_type+Ej
		mov	[esp+28h+var_28], offset _g_define_type_id__volatile_42069
		call	_g_once_init_enter_impl
		test	eax, eax
		jz	short loc_6B285304
		mov	[esp+28h+var_28], offset aPangowin32fo_0 ; "PangoWin32FontMap"
		call	_g_intern_static_string
		mov	ebx, eax
		call	_pango_font_map_get_type
		mov	[esp+24h+var_C], 0
		mov	[esp+24h+var_10], offset __pango_win32_font_map_init
		mov	[esp+24h+var_14], 28h
		mov	[esp+24h+var_18], offset __pango_win32_font_map_class_intern_init
		mov	[esp+24h+var_1C], 68h
		mov	[esp+24h+var_20], ebx
		mov	[esp+24h+var_24], eax
		call	_g_type_register_static_simple
		mov	[esp+24h+var_20], eax
		mov	[esp+24h+var_24], offset _g_define_type_id__volatile_42069
		call	_g_once_init_leave
		mov	eax, ds:_g_define_type_id__volatile_42069
		add	esp, 24h
		pop	ebx
		leave
		retn
__pango_win32_font_map_get_type	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_pango_win32_font_map_finalize proc near
					; DATA XREF: __pango_win32_font_map_class_intern_init+42o

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	ebx, [ebp+arg_0]
		call	__pango_win32_font_map_get_type
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], ebx
		call	_g_type_check_instance_cast
		mov	esi, eax
		mov	[esp+14h+var_C], 0
		mov	[esp+14h+var_10], offset _g_object_unref
		mov	eax, [eax+10h]
		mov	eax, [eax]
		mov	[esp+14h+var_14], eax
		call	_g_list_foreach
		mov	eax, [esi+10h]
		mov	[esp+14h+var_14], eax
		call	_g_queue_free
		mov	eax, [esi+0Ch]
		mov	[esp+14h+var_14], eax
		call	_pango_win32_font_cache_free
		mov	[esp+14h+var_10], 50h
		mov	eax, ds:__pango_win32_font_map_parent_class
		mov	[esp+14h+var_14], eax
		call	_g_type_check_class_cast
		mov	[ebp+arg_0], ebx
		mov	eax, [eax+18h]
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		jmp	eax
_pango_win32_font_map_finalize endp

; Exported entry  18. pango_win32_font_map_for_display

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _pango_win32_font_map_for_display
_pango_win32_font_map_for_display proc near ; CODE XREF: _pango_win32_get_context+6p
					; _pango_win32_font_get_metrics+14Ep

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		call	_g_type_init
		mov	ebx, ds:_default_fontmap
		test	ebx, ebx
		jz	short loc_6B285428

loc_6B28540E:				; CODE XREF: _pango_win32_font_map_for_display+4Cj
		call	_pango_font_map_get_type
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], ebx
		call	_g_type_check_instance_cast
		add	esp, 14h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B285428:				; CODE XREF: _pango_win32_font_map_for_display+14j
		call	__pango_win32_font_map_get_type
		mov	[esp+18h+var_14], 0
		mov	[esp+18h+var_18], eax
		call	_g_object_new
		mov	ebx, eax
		mov	ds:_default_fontmap, eax
		jmp	short loc_6B28540E
_pango_win32_font_map_for_display endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry  29. pango_win32_shutdown_display

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _pango_win32_shutdown_display
_pango_win32_shutdown_display proc near

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, ds:_default_fontmap
		test	ebx, ebx
		jz	short loc_6B2854A0
		mov	[esp+18h+var_10], 0
		mov	[esp+18h+var_14], offset _g_object_unref
		mov	eax, [ebx+10h]
		mov	eax, [eax]
		mov	[esp+18h+var_18], eax
		call	_g_list_foreach
		mov	eax, [ebx+10h]
		mov	[esp+18h+var_18], eax
		call	_g_queue_free
		call	_g_queue_new
		mov	[ebx+10h], eax
		mov	eax, ds:_default_fontmap
		mov	[esp+18h+var_18], eax
		call	_g_object_unref
		mov	ds:_default_fontmap, 0

loc_6B2854A0:				; CODE XREF: _pango_win32_shutdown_display+Fj
		add	esp, 14h
		pop	ebx
		leave
		retn
_pango_win32_shutdown_display endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry  11. pango_win32_font_description_from_logfont

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl pango_win32_font_description_from_logfont(LOGFONTA *)
		public _pango_win32_font_description_from_logfont
_pango_win32_font_description_from_logfont proc	near

lplf		= dword	ptr -78h
h		= dword	ptr -74h
dwOffset	= dword	ptr -70h
pvBuffer	= dword	ptr -6Ch
cjBuffer	= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
ho		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_2E		= word ptr -2Eh
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= word ptr -24h
var_22		= byte ptr -22h
var_20		= word ptr -20h
var_1E		= word ptr -1Eh
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 6Ch
		mov	ebx, [ebp+arg_0]
		lea	eax, [ebx+1Ch]
		mov	[ebp+var_3C], eax
		xor	eax, eax
		mov	ecx, 0FFFFFFFFh
		mov	edi, [ebp+var_3C]
		repne scasb
		not	ecx
		dec	ecx
		test	ecx, ecx
		jle	loc_6B2859B4
		mov	al, [ebx+1Ch]
		sub	eax, 20h
		cmp	al, 5Eh
		ja	short loc_6B2854F9
		xor	eax, eax
		jmp	short loc_6B2854EC
; ---------------------------------------------------------------------------
		align 10h

loc_6B2854E0:				; CODE XREF: _pango_win32_font_description_from_logfont+47j
		mov	dl, [ebx+eax+1Ch]
		sub	edx, 20h
		cmp	dl, 5Eh
		ja	short loc_6B2854F1

loc_6B2854EC:				; CODE XREF: _pango_win32_font_description_from_logfont+35j
		inc	eax
		cmp	ecx, eax
		jg	short loc_6B2854E0

loc_6B2854F1:				; CODE XREF: _pango_win32_font_description_from_logfont+42j
					; _pango_win32_font_description_from_logfont+50Ej
		cmp	ecx, eax
		jz	loc_6B285910

loc_6B2854F9:				; CODE XREF: _pango_win32_font_description_from_logfont+31j
		mov	[esp+78h+lplf],	ebx ; lplf
		call	_CreateFontIndirectA@4 ; CreateFontIndirectA(x)
		push	esi
		mov	[ebp+ho], eax
		test	eax, eax
		jz	loc_6B28564D
		mov	[esp+78h+h], eax ; h
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+78h+lplf],	eax ; hdc
		call	_SelectObject@8	; SelectObject(x,x)
		sub	esp, 8
		mov	[ebp+var_44], eax
		test	eax, eax
		jz	loc_6B285641
		lea	eax, [ebp+var_22]
		mov	[esp+78h+h], eax ; PVOID
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+78h+lplf],	eax ; HDC
		call	__pango_win32_get_name_header
		test	eax, eax
		jz	loc_6B285620
		mov	ecx, ds:__pango_win32_debug
		test	ecx, ecx
		jnz	loc_6B285930

loc_6B285556:				; CODE XREF: _pango_win32_font_description_from_logfont+4C4j
		cmp	[ebp+var_20], 0
		jz	loc_6B285620
		mov	[ebp+var_4C], 0FFFFFFFFh
		mov	[ebp+var_50], 0FFFFFFFFh
		mov	[ebp+var_48], 0FFFFFFFFh
		xor	esi, esi
		lea	edi, [ebp+var_2E]
		jmp	short loc_6B285593
; ---------------------------------------------------------------------------
		align 10h

loc_6B285580:				; CODE XREF: _pango_win32_font_description_from_logfont+10Bj
		cmp	ax, 10h
		jz	short loc_6B2855B5

loc_6B285586:				; CODE XREF: _pango_win32_font_description_from_logfont+112j
					; _pango_win32_font_description_from_logfont+147j ...
		inc	esi
		movzx	eax, [ebp+var_20]
		cmp	esi, eax
		jge	loc_6B285760

loc_6B285593:				; CODE XREF: _pango_win32_font_description_from_logfont+D3j
					; _pango_win32_font_description_from_logfont+2B2j
		mov	[esp+78h+dwOffset], edi	; PVOID
		mov	[esp+78h+h], esi ; int
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+78h+lplf],	eax ; HDC
		call	__pango_win32_get_name_record
		test	eax, eax
		jz	short loc_6B285620
		mov	eax, [ebp+var_28]
		cmp	ax, 1
		jnz	short loc_6B285580

loc_6B2855B5:				; CODE XREF: _pango_win32_font_description_from_logfont+DCj
		cmp	word ptr [ebp+var_28+2], 0
		jz	short loc_6B285586
		mov	edx, ds:__pango_win32_debug
		test	edx, edx
		jnz	loc_6B2858B4

loc_6B2855CA:				; CODE XREF: _pango_win32_font_description_from_logfont+460j
		mov	ax, [ebp+var_2E]
		test	ax, ax
		jz	loc_6B285750
		cmp	ax, 2
		jz	loc_6B285750
		cmp	ax, 1
		jz	loc_6B285971
		cmp	ax, 3
		jnz	short loc_6B285586
		cmp	[ebp+var_48], 0FFFFFFFFh
		jz	short loc_6B285605
		movzx	eax, word ptr [ebp+var_2C+2]
		and	eax, 3FFh
		cmp	eax, 9
		jnz	short loc_6B285586

loc_6B285605:				; CODE XREF: _pango_win32_font_description_from_logfont+14Dj
		mov	eax, [ebp-2Ch]
		cmp	ax, 1
		jbe	short loc_6B285618
		cmp	ax, 0Ah
		jnz	loc_6B285586

loc_6B285618:				; CODE XREF: _pango_win32_font_description_from_logfont+164j
		mov	[ebp+var_48], esi
		jmp	loc_6B285586
; ---------------------------------------------------------------------------

loc_6B285620:				; CODE XREF: _pango_win32_font_description_from_logfont+9Aj
					; _pango_win32_font_description_from_logfont+B3j ...
		xor	edi, edi

loc_6B285622:				; CODE XREF: _pango_win32_font_description_from_logfont+337j
					; _pango_win32_font_description_from_logfont+394j
		mov	[esp+78h+lplf],	edi
		call	_g_free
		mov	eax, [ebp+var_44]
		mov	[esp+78h+h], eax ; h
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+78h+lplf],	eax ; hdc
		call	_SelectObject@8	; SelectObject(x,x)
		sub	esp, 8

loc_6B285641:				; CODE XREF: _pango_win32_font_description_from_logfont+7Ej
		mov	eax, [ebp+ho]
		mov	[esp+78h+lplf],	eax ; ho
		call	_DeleteObject@4	; DeleteObject(x)
		push	esi

loc_6B28564D:				; CODE XREF: _pango_win32_font_description_from_logfont+5Fj
		mov	[esp+78h+cjBuffer], 0
		mov	[esp+78h+pvBuffer], 0
		mov	[esp+78h+dwOffset], 0
		mov	[esp+78h+h], 0FFFFFFFFh
		mov	eax, [ebp+var_3C]
		mov	[esp+78h+lplf],	eax
		call	_g_locale_to_utf8
		mov	esi, eax

loc_6B28567A:				; CODE XREF: _pango_win32_font_description_from_logfont+406j
					; _pango_win32_font_description_from_logfont+475j
		cmp	byte ptr [ebx+14h], 1
		sbb	edi, edi
		not	edi
		and	edi, 2
		mov	eax, [ebx+10h]
		test	eax, eax
		jz	loc_6B285748
		cmp	eax, 0FAh
		jle	short loc_6B2856D8
		cmp	eax, 15Eh
		jle	loc_6B285924
		cmp	eax, 1F4h
		jle	loc_6B285748
		cmp	eax, 28Ah
		jle	loc_6B2859A0
		cmp	eax, 2EEh
		jle	loc_6B2859BB
		cmp	eax, 352h
		jle	loc_6B2859AA
		mov	ebx, 384h
		jmp	short loc_6B2856DD
; ---------------------------------------------------------------------------
		align 4

loc_6B2856D8:				; CODE XREF: _pango_win32_font_description_from_logfont+1EDj
		mov	ebx, 0C8h

loc_6B2856DD:				; CODE XREF: _pango_win32_font_description_from_logfont+22Bj
					; _pango_win32_font_description_from_logfont+2A5j ...
		call	_pango_font_description_new
		mov	[ebp+var_3C], eax
		mov	[esp+78h+h], esi
		mov	[esp+78h+lplf],	eax
		call	_pango_font_description_set_family
		mov	[esp+78h+lplf],	esi
		call	_g_free
		mov	[esp+78h+h], edi
		mov	eax, [ebp+var_3C]
		mov	[esp+78h+lplf],	eax
		call	_pango_font_description_set_style
		mov	[esp+78h+h], ebx
		mov	eax, [ebp+var_3C]
		mov	[esp+78h+lplf],	eax
		call	_pango_font_description_set_weight
		mov	[esp+78h+h], 4
		mov	eax, [ebp+var_3C]
		mov	[esp+78h+lplf],	eax
		call	_pango_font_description_set_stretch
		mov	[esp+78h+h], 0
		mov	eax, [ebp+var_3C]
		mov	[esp+78h+lplf],	eax
		call	_pango_font_description_set_variant
		mov	eax, [ebp+var_3C]
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6B285748:				; CODE XREF: _pango_win32_font_description_from_logfont+1E2j
					; _pango_win32_font_description_from_logfont+1FFj
		mov	ebx, 190h
		jmp	short loc_6B2856DD
; ---------------------------------------------------------------------------
		align 10h

loc_6B285750:				; CODE XREF: _pango_win32_font_description_from_logfont+129j
					; _pango_win32_font_description_from_logfont+133j
		mov	[ebp+var_4C], esi
		inc	esi
		movzx	eax, [ebp+var_20]
		cmp	esi, eax
		jl	loc_6B285593

loc_6B285760:				; CODE XREF: _pango_win32_font_description_from_logfont+E5j
		mov	esi, [ebp+var_48]
		cmp	esi, 0FFFFFFFFh
		jz	loc_6B28598F
		mov	esi, [ebp+var_48]

loc_6B28576F:				; CODE XREF: _pango_win32_font_description_from_logfont+4F3j
					; _pango_win32_font_description_from_logfont+52Dj
		mov	[esp+78h+dwOffset], edi	; PVOID
		mov	eax, [ebp+var_48]
		mov	[esp+78h+h], eax ; int
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+78h+lplf],	eax ; HDC
		call	__pango_win32_get_name_record
		test	eax, eax
		jz	loc_6B285620
		movzx	eax, word ptr [ebp+var_28+2]
		inc	eax
		mov	[esp+78h+lplf],	eax
		call	_g_malloc
		mov	edx, eax
		mov	edi, eax
		movzx	eax, word ptr [ebp+var_28+2]
		mov	[esp+78h+cjBuffer], eax	; cjBuffer
		mov	[esp+78h+pvBuffer], edx	; pvBuffer
		movzx	ecx, [ebp+var_24]
		movzx	eax, [ebp+var_1E]
		lea	eax, [ecx+eax]
		mov	[esp+78h+dwOffset], eax	; dwOffset
		mov	[esp+78h+h], 656D616Eh ; dwTable
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+78h+lplf],	eax ; hdc
		mov	[ebp+var_54], edx
		call	_GetFontData@20	; GetFontData(x,x,x,x,x)
		sub	esp, 14h
		movzx	ecx, word ptr [ebp+var_28+2]
		cmp	eax, ecx
		mov	edx, [ebp+var_54]
		jnz	loc_6B285622
		mov	byte ptr [edx+ecx], 0
		cmp	esi, [ebp+var_48]
		jz	loc_6B2859DA
		mov	eax, [ebp+var_48]
		cmp	[ebp+var_50], eax
		jz	loc_6B285A05
		mov	eax, offset aUcs4be ; "UCS-4BE"

loc_6B285803:				; CODE XREF: _pango_win32_font_description_from_logfont+53Ej
					; _pango_win32_font_description_from_logfont+54Dj ...
		mov	[esp+78h+var_60], 0
		lea	esi, [ebp+var_1C]
		mov	[esp+78h+var_64], esi
		mov	[esp+78h+cjBuffer], 0
		mov	[esp+78h+pvBuffer], eax
		mov	[esp+78h+dwOffset], offset aUtf8 ; "UTF-8"
		mov	[esp+78h+h], ecx
		mov	[esp+78h+lplf],	edx
		mov	[ebp+var_54], edx
		call	_g_convert
		mov	esi, eax
		test	eax, eax
		mov	edx, [ebp+var_54]
		jz	loc_6B285622
		mov	[esp+78h+lplf],	edx
		call	_g_free
		mov	eax, ds:__pango_win32_debug
		test	eax, eax
		jz	short loc_6B28588B
		mov	[esp+78h+dwOffset], 340h
		mov	[esp+78h+h], offset ___PRETTY_FUNCTION___42318 ; "get_family_nameA"
		mov	[esp+78h+lplf],	offset aSD_1 ; "%s:%d "
		call	_g_print
		mov	[esp+78h+h], esi
		mov	[esp+78h+lplf],	offset aS ; "%s"
		call	_g_print
		mov	[esp+78h+lplf],	offset asc_6B28B7A1 ; "\n"
		call	_g_print

loc_6B28588B:				; CODE XREF: _pango_win32_font_description_from_logfont+3A9j
		mov	eax, [ebp+var_44]
		mov	[esp+78h+h], eax ; h
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+78h+lplf],	eax ; hdc
		call	_SelectObject@8	; SelectObject(x,x)
		sub	esp, 8
		mov	eax, [ebp+ho]
		mov	[esp+78h+lplf],	eax ; ho
		call	_DeleteObject@4	; DeleteObject(x)
		push	edi
		jmp	loc_6B28567A
; ---------------------------------------------------------------------------
		align 4

loc_6B2858B4:				; CODE XREF: _pango_win32_font_description_from_logfont+11Cj
		mov	[esp+78h+dwOffset], 309h
		mov	[esp+78h+h], offset ___PRETTY_FUNCTION___42318 ; "get_family_nameA"
		mov	[esp+78h+lplf],	offset aSD_1 ; "%s:%d "
		call	_g_print
		movzx	eax, word ptr [ebp+var_28]
		mov	[esp+78h+cjBuffer], eax
		movzx	eax, word ptr [ebp+var_2C+2]
		mov	[esp+78h+pvBuffer], eax
		movzx	eax, word ptr [ebp+var_2C]
		mov	[esp+78h+dwOffset], eax
		movzx	eax, [ebp+var_2E]
		mov	[esp+78h+h], eax
		mov	[esp+78h+lplf],	offset aPlatformDEnc_0 ; "platform:%d encoding:%d language:%04x	n"...
		call	_g_print
		mov	[esp+78h+lplf],	offset asc_6B28B7A1 ; "\n"
		call	_g_print
		jmp	loc_6B2855CA
; ---------------------------------------------------------------------------
		align 10h

loc_6B285910:				; CODE XREF: _pango_win32_font_description_from_logfont+4Bj
		mov	eax, [ebp+var_3C]
		mov	[esp+78h+lplf],	eax
		call	_g_strdup
		mov	esi, eax
		jmp	loc_6B28567A
; ---------------------------------------------------------------------------
		align 4

loc_6B285924:				; CODE XREF: _pango_win32_font_description_from_logfont+1F4j
		mov	ebx, 12Ch
		jmp	loc_6B2856DD
; ---------------------------------------------------------------------------
		align 10h

loc_6B285930:				; CODE XREF: _pango_win32_font_description_from_logfont+A8j
		mov	[esp+78h+dwOffset], 2FEh
		mov	[esp+78h+h], offset ___PRETTY_FUNCTION___42318 ; "get_family_nameA"
		mov	[esp+78h+lplf],	offset aSD_1 ; "%s:%d "
		call	_g_print
		movzx	eax, [ebp+var_20]
		mov	[esp+78h+h], eax
		mov	[esp+78h+lplf],	offset aDNameRecords ; "%d name	records"
		call	_g_print
		mov	[esp+78h+lplf],	offset asc_6B28B7A1 ; "\n"
		call	_g_print
		jmp	loc_6B285556
; ---------------------------------------------------------------------------

loc_6B285971:				; CODE XREF: _pango_win32_font_description_from_logfont+13Dj
		cmp	word ptr [ebp+var_2C], 0
		jnz	loc_6B285586
		cmp	word ptr [ebp+var_2C+2], 0
		jnz	loc_6B285586
		mov	[ebp+var_50], esi
		jmp	loc_6B285586
; ---------------------------------------------------------------------------

loc_6B28598F:				; CODE XREF: _pango_win32_font_description_from_logfont+2BEj
		cmp	[ebp+var_50], 0FFFFFFFFh
		jz	short loc_6B2859C5
		mov	eax, [ebp+var_50]
		mov	[ebp+var_48], eax
		jmp	loc_6B28576F
; ---------------------------------------------------------------------------

loc_6B2859A0:				; CODE XREF: _pango_win32_font_description_from_logfont+20Aj
		mov	ebx, 258h
		jmp	loc_6B2856DD
; ---------------------------------------------------------------------------

loc_6B2859AA:				; CODE XREF: _pango_win32_font_description_from_logfont+220j
		mov	ebx, 320h
		jmp	loc_6B2856DD
; ---------------------------------------------------------------------------

loc_6B2859B4:				; CODE XREF: _pango_win32_font_description_from_logfont+23j
		xor	eax, eax
		jmp	loc_6B2854F1
; ---------------------------------------------------------------------------

loc_6B2859BB:				; CODE XREF: _pango_win32_font_description_from_logfont+215j
		mov	ebx, 2BCh
		jmp	loc_6B2856DD
; ---------------------------------------------------------------------------

loc_6B2859C5:				; CODE XREF: _pango_win32_font_description_from_logfont+4EBj
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_48], eax
		inc	eax
		jz	loc_6B285620
		mov	esi, [ebp+var_50]
		jmp	loc_6B28576F
; ---------------------------------------------------------------------------

loc_6B2859DA:				; CODE XREF: _pango_win32_font_description_from_logfont+344j
		mov	esi, [ebp+var_2C]
		mov	eax, offset aUtf16be ; "UTF-16BE"
		cmp	si, 1
		jbe	loc_6B285803
		mov	eax, offset aUcs4be ; "UCS-4BE"
		cmp	si, 0Ah
		jnz	loc_6B285803
		mov	eax, offset aUtf16be ; "UTF-16BE"
		jmp	loc_6B285803
; ---------------------------------------------------------------------------

loc_6B285A05:				; CODE XREF: _pango_win32_font_description_from_logfont+350j
		mov	eax, offset aMacroman ;	"MacRoman"
		jmp	loc_6B285803
_pango_win32_font_description_from_logfont endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  12. pango_win32_font_description_from_logfontw

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl pango_win32_font_description_from_logfontw(LOGFONTW *lplf)
		public _pango_win32_font_description_from_logfontw
_pango_win32_font_description_from_logfontw proc near
					; CODE XREF: _pango_win32_insert_font+274p

Str		= dword	ptr -78h
h		= dword	ptr -74h
dwOffset	= dword	ptr -70h
pvBuffer	= dword	ptr -6Ch
cjBuffer	= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
ho		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_2E		= word ptr -2Eh
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= word ptr -24h
var_22		= byte ptr -22h
var_20		= word ptr -20h
var_1E		= word ptr -1Eh
var_1C		= byte ptr -1Ch
lplf		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 6Ch
		mov	esi, [ebp+lplf]
		lea	eax, [esi+1Ch]
		mov	[ebp+var_3C], eax
		mov	[esp+78h+Str], eax ; Str
		call	_wcslen
		test	eax, eax
		jle	loc_6B285F30
		mov	edx, [esi+1Ch]
		sub	edx, 20h
		cmp	dx, 5Eh
		ja	short loc_6B285A5F
		xor	edx, edx
		jmp	short loc_6B285A52
; ---------------------------------------------------------------------------
		align 4

loc_6B285A44:				; CODE XREF: _pango_win32_font_description_from_logfontw+45j
		mov	cx, [esi+edx*2+1Ch]
		sub	ecx, 20h
		cmp	cx, 5Eh
		ja	short loc_6B285A57

loc_6B285A52:				; CODE XREF: _pango_win32_font_description_from_logfontw+30j
		inc	edx
		cmp	eax, edx
		jg	short loc_6B285A44

loc_6B285A57:				; CODE XREF: _pango_win32_font_description_from_logfontw+40j
					; _pango_win32_font_description_from_logfontw+522j
		cmp	eax, edx
		jz	loc_6B285BB1

loc_6B285A5F:				; CODE XREF: _pango_win32_font_description_from_logfontw+2Cj
		mov	[esp+78h+Str], esi ; lplf
		call	_CreateFontIndirectW@4 ; CreateFontIndirectW(x)
		push	edi
		mov	[ebp+ho], eax
		test	eax, eax
		jz	loc_6B285BB1
		mov	[esp+78h+h], eax ; h
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+78h+Str], eax ; hdc
		call	_SelectObject@8	; SelectObject(x,x)
		sub	esp, 8
		mov	[ebp+var_44], eax
		test	eax, eax
		jz	loc_6B285BA5
		lea	eax, [ebp+var_22]
		mov	[esp+78h+h], eax ; PVOID
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+78h+Str], eax ; HDC
		call	__pango_win32_get_name_header
		test	eax, eax
		jz	loc_6B285B84
		mov	ebx, ds:__pango_win32_debug
		test	ebx, ebx
		jnz	loc_6B285EAC

loc_6B285ABC:				; CODE XREF: _pango_win32_font_description_from_logfontw+4D8j
		cmp	[ebp+var_20], 0
		jz	loc_6B285B84
		mov	[ebp+var_4C], 0FFFFFFFFh
		mov	[ebp+var_50], 0FFFFFFFFh
		mov	[ebp+var_48], 0FFFFFFFFh
		xor	ebx, ebx
		lea	edi, [ebp+var_2E]
		jmp	short loc_6B285AF7
; ---------------------------------------------------------------------------
		align 4

loc_6B285AE4:				; CODE XREF: _pango_win32_font_description_from_logfontw+107j
		cmp	ax, 10h
		jz	short loc_6B285B19

loc_6B285AEA:				; CODE XREF: _pango_win32_font_description_from_logfontw+10Ej
					; _pango_win32_font_description_from_logfontw+143j ...
		inc	ebx
		movzx	eax, [ebp+var_20]
		cmp	ebx, eax
		jge	loc_6B285CD8

loc_6B285AF7:				; CODE XREF: _pango_win32_font_description_from_logfontw+D1j
					; _pango_win32_font_description_from_logfontw+2C2j
		mov	[esp+78h+dwOffset], edi	; PVOID
		mov	[esp+78h+h], ebx ; int
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+78h+Str], eax ; HDC
		call	__pango_win32_get_name_record
		test	eax, eax
		jz	short loc_6B285B84
		mov	eax, [ebp+var_28]
		cmp	ax, 1
		jnz	short loc_6B285AE4

loc_6B285B19:				; CODE XREF: _pango_win32_font_description_from_logfontw+D8j
		cmp	word ptr [ebp+var_28+2], 0
		jz	short loc_6B285AEA
		mov	ecx, ds:__pango_win32_debug
		test	ecx, ecx
		jnz	loc_6B285E2C

loc_6B285B2E:				; CODE XREF: _pango_win32_font_description_from_logfontw+470j
		mov	ax, [ebp+var_2E]
		test	ax, ax
		jz	loc_6B285CC8
		cmp	ax, 2
		jz	loc_6B285CC8
		cmp	ax, 1
		jz	loc_6B285EED
		cmp	ax, 3
		jnz	short loc_6B285AEA
		cmp	[ebp+var_48], 0FFFFFFFFh
		jz	short loc_6B285B69
		movzx	eax, word ptr [ebp+var_2C+2]
		and	eax, 3FFh
		cmp	eax, 9
		jnz	short loc_6B285AEA

loc_6B285B69:				; CODE XREF: _pango_win32_font_description_from_logfontw+149j
		mov	eax, [ebp-2Ch]
		cmp	ax, 1
		jbe	short loc_6B285B7C
		cmp	ax, 0Ah
		jnz	loc_6B285AEA

loc_6B285B7C:				; CODE XREF: _pango_win32_font_description_from_logfontw+160j
		mov	[ebp+var_48], ebx
		jmp	loc_6B285AEA
; ---------------------------------------------------------------------------

loc_6B285B84:				; CODE XREF: _pango_win32_font_description_from_logfontw+98j
					; _pango_win32_font_description_from_logfontw+B1j ...
		xor	edi, edi

loc_6B285B86:				; CODE XREF: _pango_win32_font_description_from_logfontw+347j
					; _pango_win32_font_description_from_logfontw+3A4j
		mov	[esp+78h+Str], edi
		call	_g_free
		mov	eax, [ebp+var_44]
		mov	[esp+78h+h], eax ; h
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+78h+Str], eax ; hdc
		call	_SelectObject@8	; SelectObject(x,x)
		sub	esp, 8

loc_6B285BA5:				; CODE XREF: _pango_win32_font_description_from_logfontw+7Cj
		mov	eax, [ebp+ho]
		mov	[esp+78h+Str], eax ; ho
		call	_DeleteObject@4	; DeleteObject(x)
		push	edi

loc_6B285BB1:				; CODE XREF: _pango_win32_font_description_from_logfontw+49j
					; _pango_win32_font_description_from_logfontw+5Dj
		mov	[esp+78h+cjBuffer], 0
		mov	[esp+78h+pvBuffer], 0
		mov	[esp+78h+dwOffset], 0
		mov	[esp+78h+h], 0FFFFFFFFh
		mov	eax, [ebp+var_3C]
		mov	[esp+78h+Str], eax
		call	_g_utf16_to_utf8
		mov	ebx, eax

loc_6B285BDE:				; CODE XREF: _pango_win32_font_description_from_logfontw+417j
		movzx	eax, byte ptr [esi+1Bh]
		and	eax, 0F0h
		cmp	eax, 10h
		jz	loc_6B285E88
		mov	al, [esi+14h]

loc_6B285BF3:				; CODE XREF: _pango_win32_font_description_from_logfontw+48Aj
		test	al, al
		setnz	al
		movzx	eax, al
		mov	edi, eax

loc_6B285BFD:				; CODE XREF: _pango_win32_font_description_from_logfontw+483j
		mov	eax, [esi+10h]
		test	eax, eax
		jz	loc_6B285CC0
		cmp	eax, 0FAh
		jle	short loc_6B285C50
		cmp	eax, 15Eh
		jle	loc_6B285EA0
		cmp	eax, 1F4h
		jle	loc_6B285CC0
		cmp	eax, 28Ah
		jle	loc_6B285F1C
		cmp	eax, 2EEh
		jle	loc_6B285F37
		cmp	eax, 352h
		jle	loc_6B285F26
		mov	esi, 384h
		jmp	short loc_6B285C55
; ---------------------------------------------------------------------------
		align 10h

loc_6B285C50:				; CODE XREF: _pango_win32_font_description_from_logfontw+1FDj
		mov	esi, 0C8h

loc_6B285C55:				; CODE XREF: _pango_win32_font_description_from_logfontw+23Bj
					; _pango_win32_font_description_from_logfontw+2B5j ...
		call	_pango_font_description_new
		mov	[ebp+var_3C], eax
		mov	[esp+78h+h], ebx
		mov	[esp+78h+Str], eax
		call	_pango_font_description_set_family
		mov	[esp+78h+Str], ebx
		call	_g_free
		mov	[esp+78h+h], edi
		mov	eax, [ebp+var_3C]
		mov	[esp+78h+Str], eax
		call	_pango_font_description_set_style
		mov	[esp+78h+h], esi
		mov	eax, [ebp+var_3C]
		mov	[esp+78h+Str], eax
		call	_pango_font_description_set_weight
		mov	[esp+78h+h], 4
		mov	eax, [ebp+var_3C]
		mov	[esp+78h+Str], eax
		call	_pango_font_description_set_stretch
		mov	[esp+78h+h], 0
		mov	eax, [ebp+var_3C]
		mov	[esp+78h+Str], eax
		call	_pango_font_description_set_variant
		mov	eax, [ebp+var_3C]
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6B285CC0:				; CODE XREF: _pango_win32_font_description_from_logfontw+1F2j
					; _pango_win32_font_description_from_logfontw+20Fj
		mov	esi, 190h
		jmp	short loc_6B285C55
; ---------------------------------------------------------------------------
		align 4

loc_6B285CC8:				; CODE XREF: _pango_win32_font_description_from_logfontw+125j
					; _pango_win32_font_description_from_logfontw+12Fj
		mov	[ebp+var_4C], ebx
		inc	ebx
		movzx	eax, [ebp+var_20]
		cmp	ebx, eax
		jl	loc_6B285AF7

loc_6B285CD8:				; CODE XREF: _pango_win32_font_description_from_logfontw+E1j
		mov	ebx, [ebp+var_48]
		cmp	ebx, 0FFFFFFFFh
		jz	loc_6B285F0B
		mov	ebx, [ebp+var_48]

loc_6B285CE7:				; CODE XREF: _pango_win32_font_description_from_logfontw+507j
					; _pango_win32_font_description_from_logfontw+541j
		mov	[esp+78h+dwOffset], edi	; PVOID
		mov	eax, [ebp+var_48]
		mov	[esp+78h+h], eax ; int
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+78h+Str], eax ; HDC
		call	__pango_win32_get_name_record
		test	eax, eax
		jz	loc_6B285B84
		movzx	eax, word ptr [ebp+var_28+2]
		inc	eax
		mov	[esp+78h+Str], eax
		call	_g_malloc
		mov	edx, eax
		mov	edi, eax
		movzx	eax, word ptr [ebp+var_28+2]
		mov	[esp+78h+cjBuffer], eax	; cjBuffer
		mov	[esp+78h+pvBuffer], edx	; pvBuffer
		movzx	ecx, [ebp+var_24]
		movzx	eax, [ebp+var_1E]
		lea	eax, [ecx+eax]
		mov	[esp+78h+dwOffset], eax	; dwOffset
		mov	[esp+78h+h], 656D616Eh ; dwTable
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+78h+Str], eax ; hdc
		mov	[ebp+var_54], edx
		call	_GetFontData@20	; GetFontData(x,x,x,x,x)
		sub	esp, 14h
		movzx	ecx, word ptr [ebp+var_28+2]
		cmp	eax, ecx
		mov	edx, [ebp+var_54]
		jnz	loc_6B285B86
		mov	byte ptr [edx+ecx], 0
		cmp	ebx, [ebp+var_48]
		jz	loc_6B285F56
		mov	eax, [ebp+var_48]
		cmp	[ebp+var_50], eax
		jz	loc_6B285F81
		mov	eax, offset aUcs4be ; "UCS-4BE"

loc_6B285D7B:				; CODE XREF: _pango_win32_font_description_from_logfontw+552j
					; _pango_win32_font_description_from_logfontw+561j ...
		mov	[esp+78h+var_60], 0
		lea	ebx, [ebp+var_1C]
		mov	[esp+78h+var_64], ebx
		mov	[esp+78h+cjBuffer], 0
		mov	[esp+78h+pvBuffer], eax
		mov	[esp+78h+dwOffset], offset aUtf8 ; "UTF-8"
		mov	[esp+78h+h], ecx
		mov	[esp+78h+Str], edx
		mov	[ebp+var_54], edx
		call	_g_convert
		mov	ebx, eax
		test	eax, eax
		mov	edx, [ebp+var_54]
		jz	loc_6B285B86
		mov	[esp+78h+Str], edx
		call	_g_free
		mov	edx, ds:__pango_win32_debug
		test	edx, edx
		jz	short loc_6B285E04
		mov	[esp+78h+dwOffset], 406h
		mov	[esp+78h+h], offset ___PRETTY_FUNCTION___42355 ; "get_family_nameW"
		mov	[esp+78h+Str], offset aSD_1 ; "%s:%d "
		call	_g_print
		mov	[esp+78h+h], ebx
		mov	[esp+78h+Str], offset aS ; "%s"
		call	_g_print
		mov	[esp+78h+Str], offset asc_6B28B7A1 ; "\n"
		call	_g_print

loc_6B285E04:				; CODE XREF: _pango_win32_font_description_from_logfontw+3BAj
		mov	eax, [ebp+var_44]
		mov	[esp+78h+h], eax ; h
		mov	eax, ds:__pango_win32_hdc
		mov	[esp+78h+Str], eax ; hdc
		call	_SelectObject@8	; SelectObject(x,x)
		sub	esp, 8
		mov	eax, [ebp+ho]
		mov	[esp+78h+Str], eax ; ho
		call	_DeleteObject@4	; DeleteObject(x)
		push	eax
		jmp	loc_6B285BDE
; ---------------------------------------------------------------------------

loc_6B285E2C:				; CODE XREF: _pango_win32_font_description_from_logfontw+118j
		mov	[esp+78h+dwOffset], 3CFh
		mov	[esp+78h+h], offset ___PRETTY_FUNCTION___42355 ; "get_family_nameW"
		mov	[esp+78h+Str], offset aSD_1 ; "%s:%d "
		call	_g_print
		movzx	eax, word ptr [ebp+var_28]
		mov	[esp+78h+cjBuffer], eax
		movzx	eax, word ptr [ebp+var_2C+2]
		mov	[esp+78h+pvBuffer], eax
		movzx	eax, word ptr [ebp+var_2C]
		mov	[esp+78h+dwOffset], eax
		movzx	eax, [ebp+var_2E]
		mov	[esp+78h+h], eax
		mov	[esp+78h+Str], offset aPlatformDEnc_0 ;	"platform:%d encoding:%d language:%04x n"...
		call	_g_print
		mov	[esp+78h+Str], offset asc_6B28B7A1 ; "\n"
		call	_g_print
		jmp	loc_6B285B2E
; ---------------------------------------------------------------------------
		align 4

loc_6B285E88:				; CODE XREF: _pango_win32_font_description_from_logfontw+1DAj
		cmp	byte ptr [esi+14h], 0
		jz	short loc_6B285E98
		mov	edi, 2
		jmp	loc_6B285BFD
; ---------------------------------------------------------------------------

loc_6B285E98:				; CODE XREF: _pango_win32_font_description_from_logfontw+47Cj
		xor	eax, eax
		jmp	loc_6B285BF3
; ---------------------------------------------------------------------------
		align 10h

loc_6B285EA0:				; CODE XREF: _pango_win32_font_description_from_logfontw+204j
		mov	esi, 12Ch
		jmp	loc_6B285C55
; ---------------------------------------------------------------------------
		align 4

loc_6B285EAC:				; CODE XREF: _pango_win32_font_description_from_logfontw+A6j
		mov	[esp+78h+dwOffset], 3C4h
		mov	[esp+78h+h], offset ___PRETTY_FUNCTION___42355 ; "get_family_nameW"
		mov	[esp+78h+Str], offset aSD_1 ; "%s:%d "
		call	_g_print
		movzx	eax, [ebp+var_20]
		mov	[esp+78h+h], eax
		mov	[esp+78h+Str], offset aDNameRecords ; "%d name records"
		call	_g_print
		mov	[esp+78h+Str], offset asc_6B28B7A1 ; "\n"
		call	_g_print
		jmp	loc_6B285ABC
; ---------------------------------------------------------------------------

loc_6B285EED:				; CODE XREF: _pango_win32_font_description_from_logfontw+139j
		cmp	word ptr [ebp+var_2C], 0
		jnz	loc_6B285AEA
		cmp	word ptr [ebp+var_2C+2], 0
		jnz	loc_6B285AEA
		mov	[ebp+var_50], ebx
		jmp	loc_6B285AEA
; ---------------------------------------------------------------------------

loc_6B285F0B:				; CODE XREF: _pango_win32_font_description_from_logfontw+2CEj
		cmp	[ebp+var_50], 0FFFFFFFFh
		jz	short loc_6B285F41
		mov	eax, [ebp+var_50]
		mov	[ebp+var_48], eax
		jmp	loc_6B285CE7
; ---------------------------------------------------------------------------

loc_6B285F1C:				; CODE XREF: _pango_win32_font_description_from_logfontw+21Aj
		mov	esi, 258h
		jmp	loc_6B285C55
; ---------------------------------------------------------------------------

loc_6B285F26:				; CODE XREF: _pango_win32_font_description_from_logfontw+230j
		mov	esi, 320h
		jmp	loc_6B285C55
; ---------------------------------------------------------------------------

loc_6B285F30:				; CODE XREF: _pango_win32_font_description_from_logfontw+1Cj
		xor	edx, edx
		jmp	loc_6B285A57
; ---------------------------------------------------------------------------

loc_6B285F37:				; CODE XREF: _pango_win32_font_description_from_logfontw+225j
		mov	esi, 2BCh
		jmp	loc_6B285C55
; ---------------------------------------------------------------------------

loc_6B285F41:				; CODE XREF: _pango_win32_font_description_from_logfontw+4FFj
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_48], eax
		inc	eax
		jz	loc_6B285B84
		mov	ebx, [ebp+var_50]
		jmp	loc_6B285CE7
; ---------------------------------------------------------------------------

loc_6B285F56:				; CODE XREF: _pango_win32_font_description_from_logfontw+354j
		mov	ebx, [ebp+var_2C]
		mov	eax, offset aUtf16be ; "UTF-16BE"
		cmp	bx, 1
		jbe	loc_6B285D7B
		mov	eax, offset aUcs4be ; "UCS-4BE"
		cmp	bx, 0Ah
		jnz	loc_6B285D7B
		mov	eax, offset aUtf16be ; "UTF-16BE"
		jmp	loc_6B285D7B
; ---------------------------------------------------------------------------

loc_6B285F81:				; CODE XREF: _pango_win32_font_description_from_logfontw+360j
		mov	eax, offset aMacroman ;	"MacRoman"
		jmp	loc_6B285D7B
_pango_win32_font_description_from_logfontw endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_pango_win32_insert_font proc near	; CODE XREF: _synthesize_foreach+129p
					; _synthesize_foreach+152p ...

Dest		= dword	ptr -58h
Format		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_30		= dword	ptr -30h
lplf		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	[ebp+var_20], eax
		mov	ebx, edx
		mov	[ebp+var_24], ecx
		mov	edi, ds:__pango_win32_debug
		test	edi, edi
		jnz	short loc_6B285FE0

loc_6B285FA7:				; CODE XREF: _pango_win32_insert_font+1EAj
		cmp	byte ptr [ebx+17h], 2
		jz	short loc_6B285FD5
		mov	[esp+58h+Format], ebx
		mov	edx, [ebp+var_20]
		mov	eax, [edx+18h]
		mov	[esp+58h+Dest],	eax
		call	_g_hash_table_lookup
		test	eax, eax
		jz	loc_6B2861BC
		mov	ebx, ds:__pango_win32_debug
		test	ebx, ebx
		jnz	loc_6B286090

loc_6B285FD5:				; CODE XREF: _pango_win32_insert_font+1Fj
					; _pango_win32_insert_font+369j ...
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6B285FE0:				; CODE XREF: _pango_win32_insert_font+19j
		mov	[esp+58h+var_50], 4ACh
		mov	[esp+58h+Format], offset ___PRETTY_FUNCTION___42414 ; "pango_win32_insert_font"
		mov	[esp+58h+Dest],	offset aSD_1 ; "%s:%d "
		call	_g_print
		mov	esi, [ebp+var_24]
		test	esi, esi
		jnz	loc_6B2860CC
		mov	edi, offset byte_6B28B791

loc_6B28600C:				; CODE XREF: _pango_win32_insert_font+145j
		movzx	eax, byte ptr [ebx+1Bh]
		and	eax, 0F0h
		cmp	eax, 20h
		jz	loc_6B2863D0
		jg	loc_6B28617C
		test	eax, eax
		jnz	loc_6B28634C
		mov	[ebp+var_1C], offset aDontcare ; "DONTCARE"
		nop

loc_6B286034:				; CODE XREF: _pango_win32_insert_font+22Aj
					; _pango_win32_insert_font+3D0j ...
		mov	esi, [ebx]
		mov	edx, [ebx+10h]
		cmp	byte ptr [ebx+14h], 0
		jz	loc_6B2860D8
		mov	ecx, offset aYes_0 ; "yes"

loc_6B286048:				; CODE XREF: _pango_win32_insert_font+151j
		mov	al, [ebx+17h]
		cmp	al, 0A1h
		jz	loc_6B286478
		ja	loc_6B2860E4
		cmp	al, 80h
		jz	loc_6B2864DC
		jbe	loc_6B286384
		cmp	al, 82h
		jz	loc_6B2864A4
		jb	loc_6B286498
		cmp	al, 86h
		jz	loc_6B28648E
		cmp	al, 88h
		jnz	loc_6B286110
		mov	eax, offset aChinesebig5 ; "CHINESEBIG5"
		jmp	loc_6B28613C
; ---------------------------------------------------------------------------
		align 10h

loc_6B286090:				; CODE XREF: _pango_win32_insert_font+43j
		mov	[esp+58h+var_50], 4B8h
		mov	[esp+58h+Format], offset ___PRETTY_FUNCTION___42414 ; "pango_win32_insert_font"
		mov	[esp+58h+Dest],	offset aSD_1 ; "%s:%d "
		call	_g_print
		mov	[esp+54h+Format], offset aAlreadyHaveIt	; "already have	it"
		call	_g_print
		mov	[esp+54h+Format], offset asc_6B28B7A1 ;	"\n"
		call	_g_print
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6B2860CC:				; CODE XREF: _pango_win32_insert_font+75j
		mov	edi, offset aSynthetic ; " synthetic"
		jmp	loc_6B28600C
; ---------------------------------------------------------------------------
		align 4

loc_6B2860D8:				; CODE XREF: _pango_win32_insert_font+B1j
		mov	ecx, offset aNo	; "no"
		jmp	loc_6B286048
; ---------------------------------------------------------------------------
		align 4

loc_6B2860E4:				; CODE XREF: _pango_win32_insert_font+C7j
		cmp	al, 0BAh
		jz	loc_6B286484
		ja	loc_6B286364
		cmp	al, 0A3h
		jz	loc_6B2864D0
		jb	loc_6B2864C4
		cmp	al, 0B1h
		jz	loc_6B2864B8
		cmp	al, 0B2h
		jz	loc_6B2864AE

loc_6B286110:				; CODE XREF: _pango_win32_insert_font+F3j
					; _pango_win32_insert_font+3E8j ...
		movzx	eax, al
		mov	[esp+58h+var_50], eax
		mov	[esp+58h+Format], offset Format	; "%d"
		mov	[esp+58h+Dest],	offset _num_42372 ; Dest
		mov	[ebp+var_30], edx
		mov	[ebp+lplf], ecx
		call	_sprintf
		mov	eax, offset _num_42372
		mov	edx, [ebp+var_30]
		mov	ecx, [ebp+lplf]

loc_6B28613C:				; CODE XREF: _pango_win32_insert_font+FEj
					; _pango_win32_insert_font+3F3j ...
		mov	[esp+58h+var_3C], edi
		mov	edi, [ebp+var_1C]
		mov	[esp+58h+var_40], edi
		mov	[esp+58h+var_44], esi
		mov	[esp+58h+var_48], edx
		mov	[esp+58h+var_4C], ecx
		mov	[esp+58h+var_50], eax
		lea	eax, [ebx+1Ch]
		mov	[esp+58h+Format], eax
		mov	[esp+58h+Dest],	offset aFaceSCharsetSI ; "face=%S,charset=%s,it=%s,wt=%ld,ht=%ld,"...
		call	_g_print
		mov	[esp+58h+Dest],	offset asc_6B28B7A1 ; "\n"
		call	_g_print
		jmp	loc_6B285FA7
; ---------------------------------------------------------------------------
		align 4

loc_6B28617C:				; CODE XREF: _pango_win32_insert_font+92j
		cmp	eax, 40h
		jz	loc_6B2863C4
		cmp	eax, 50h
		jz	loc_6B2863B8
		cmp	eax, 30h
		jz	loc_6B2863AC

loc_6B286197:				; CODE XREF: _pango_win32_insert_font+3C3j
		mov	[esp+58h+var_50], eax
		mov	[esp+58h+Format], offset Format	; "%d"
		mov	[esp+58h+Dest],	offset _num_42396 ; Dest
		call	_sprintf
		mov	[ebp+var_1C], offset _num_42396
		jmp	loc_6B286034
; ---------------------------------------------------------------------------
		align 4

loc_6B2861BC:				; CODE XREF: _pango_win32_insert_font+35j
		mov	ecx, ds:__pango_win32_debug
		test	ecx, ecx
		jnz	loc_6B2863DC

loc_6B2861CA:				; CODE XREF: _pango_win32_insert_font+484j
		mov	[esp+58h+Dest],	5Ch
		call	_g_malloc
		mov	ecx, 17h
		mov	edi, eax
		mov	esi, ebx
		rep movsd
		mov	[esp+58h+var_50], eax
		mov	[esp+58h+Format], eax
		mov	ecx, [ebp+var_20]
		mov	edx, [ecx+18h]
		mov	[esp+58h+Dest],	edx
		mov	[ebp+lplf], eax
		call	_g_hash_table_insert
		mov	eax, [ebp+lplf]
		mov	[esp+58h+Dest],	eax ; lplf
		call	_pango_win32_font_description_from_logfontw
		mov	[ebp+var_28], eax
		mov	[esp+58h+Dest],	eax
		call	_pango_font_description_get_family
		test	eax, eax
		jz	loc_6B286528
		call	_pango_win32_face_get_type
		mov	[esp+58h+Format], 0
		mov	[esp+58h+Dest],	eax
		call	_g_object_new
		mov	[ebp+var_1C], eax
		mov	edx, ds:__pango_win32_debug
		test	edx, edx
		jnz	loc_6B286418

loc_6B28623E:				; CODE XREF: _pango_win32_insert_font+4CEj
		mov	edi, [ebp+var_1C]
		add	edi, 0Ch
		mov	ecx, 17h
		mov	esi, ebx
		rep movsd
		mov	ecx, [ebp+var_28]
		mov	edx, [ebp+var_1C]
		mov	[edx+68h], ecx
		mov	dword ptr [edx+6Ch], 0
		mov	dword ptr [edx+70h], 0
		mov	dword ptr [edx+74h], 0
		mov	dword ptr [edx+78h], 0
		mov	dword ptr [edx+7Ch], 0
		mov	dword ptr [edx+80h], 0
		mov	edi, [ebp+var_24]
		mov	[edx+88h], edi
		mov	dword ptr [edx+8Ch], 1
		mov	word ptr [edx+90h], 0
		mov	dword ptr [edx+94h], 0
		mov	dword ptr [edx+98h], 0
		mov	[esp+58h+Dest],	ecx
		call	_pango_font_description_get_family
		mov	edx, eax
		mov	eax, [ebp+var_20]
		call	_pango_win32_get_font_family
		mov	esi, eax
		movzx	eax, byte ptr [ebx+1Bh]
		and	eax, 0F0h
		cmp	eax, 30h
		jz	loc_6B286460

loc_6B2862D9:				; CODE XREF: _pango_win32_insert_font+4DBj
		mov	eax, [ebp+var_1C]
		mov	[esp+58h+Format], eax
		mov	eax, [esi+10h]
		mov	[esp+58h+Dest],	eax
		call	_g_slist_append
		mov	[esi+10h], eax
		mov	eax, ds:__pango_win32_debug
		test	eax, eax
		jz	loc_6B285FD5
		mov	[esp+58h+var_50], 4E7h
		mov	[esp+58h+Format], offset ___PRETTY_FUNCTION___42414 ; "pango_win32_insert_font"
		mov	[esp+58h+Dest],	offset aSD_1 ; "%s:%d "
		call	_g_print
		mov	eax, [esi+10h]
		mov	[esp+58h+Dest],	eax
		call	_g_slist_length
		mov	[esp+58h+var_50], eax
		mov	eax, [esi+0Ch]
		mov	[esp+58h+Format], eax
		mov	[esp+58h+Dest],	offset aNameSLengthFac ; "name=%s, length(faces)=%d"
		call	_g_print
		mov	[esp+58h+Dest],	offset asc_6B28B7A1 ; "\n"
		call	_g_print
		jmp	loc_6B285FD5
; ---------------------------------------------------------------------------
		align 4

loc_6B28634C:				; CODE XREF: _pango_win32_insert_font+9Aj
		cmp	eax, 10h
		jnz	loc_6B286197
		mov	[ebp+var_1C], offset aRoman ; "ROMAN"
		jmp	loc_6B286034
; ---------------------------------------------------------------------------
		align 4

loc_6B286364:				; CODE XREF: _pango_win32_insert_font+160j
		cmp	al, 0DEh
		jz	loc_6B28646C
		ja	loc_6B286508
		cmp	al, 0CCh
		jnz	loc_6B286110
		mov	eax, offset aRussian ; "RUSSIAN"
		jmp	loc_6B28613C
; ---------------------------------------------------------------------------

loc_6B286384:				; CODE XREF: _pango_win32_insert_font+D5j
		cmp	al, 1
		jz	loc_6B2864FC
		jb	loc_6B2864F0
		cmp	al, 2
		jz	loc_6B2864E6
		cmp	al, 4Dh
		jnz	loc_6B286110
		mov	eax, offset aMac ; "MAC"
		jmp	loc_6B28613C
; ---------------------------------------------------------------------------

loc_6B2863AC:				; CODE XREF: _pango_win32_insert_font+205j
		mov	[ebp+var_1C], offset aModern ; "MODERN"
		jmp	loc_6B286034
; ---------------------------------------------------------------------------

loc_6B2863B8:				; CODE XREF: _pango_win32_insert_font+1FCj
		mov	[ebp+var_1C], offset aDecorative ; "DECORATIVE"
		jmp	loc_6B286034
; ---------------------------------------------------------------------------

loc_6B2863C4:				; CODE XREF: _pango_win32_insert_font+1F3j
		mov	[ebp+var_1C], offset aScript ; "SCRIPT"
		jmp	loc_6B286034
; ---------------------------------------------------------------------------

loc_6B2863D0:				; CODE XREF: _pango_win32_insert_font+8Cj
		mov	[ebp+var_1C], offset aSwiss ; "SWISS"
		jmp	loc_6B286034
; ---------------------------------------------------------------------------

loc_6B2863DC:				; CODE XREF: _pango_win32_insert_font+238j
		mov	[esp+58h+var_50], 4BCh
		mov	[esp+58h+Format], offset ___PRETTY_FUNCTION___42414 ; "pango_win32_insert_font"
		mov	[esp+58h+Dest],	offset aSD_1 ; "%s:%d "
		call	_g_print
		mov	[esp+58h+Dest],	offset aNotFound ; "not	found"
		call	_g_print
		mov	[esp+58h+Dest],	offset asc_6B28B7A1 ; "\n"
		call	_g_print
		jmp	loc_6B2861CA
; ---------------------------------------------------------------------------
		align 4

loc_6B286418:				; CODE XREF: _pango_win32_insert_font+2ACj
		mov	[esp+58h+var_50], 4CEh
		mov	[esp+58h+Format], offset ___PRETTY_FUNCTION___42414 ; "pango_win32_insert_font"
		mov	[esp+58h+Dest],	offset aSD_1 ; "%s:%d "
		call	_g_print
		lea	eax, [ebx+1Ch]
		mov	[esp+58h+var_50], eax
		mov	eax, [ebp+var_1C]
		mov	[esp+58h+Format], eax
		mov	[esp+58h+Dest],	offset aWin32faceCreat ; "win32face created: %p	for %S"
		call	_g_print
		mov	[esp+58h+Dest],	offset asc_6B28B7A1 ; "\n"
		call	_g_print
		jmp	loc_6B28623E
; ---------------------------------------------------------------------------
		align 10h

loc_6B286460:				; CODE XREF: _pango_win32_insert_font+347j
		mov	dword ptr [esi+14h], 1
		jmp	loc_6B2862D9
; ---------------------------------------------------------------------------

loc_6B28646C:				; CODE XREF: _pango_win32_insert_font+3DAj
		mov	eax, offset aThai ; "THAI"
		jmp	loc_6B28613C
; ---------------------------------------------------------------------------
		align 4

loc_6B286478:				; CODE XREF: _pango_win32_insert_font+C1j
		mov	eax, offset aGreek ; "GREEK"
		jmp	loc_6B28613C
; ---------------------------------------------------------------------------
		align 4

loc_6B286484:				; CODE XREF: _pango_win32_insert_font+15Aj
		mov	eax, offset aBaltic ; "BALTIC"
		jmp	loc_6B28613C
; ---------------------------------------------------------------------------

loc_6B28648E:				; CODE XREF: _pango_win32_insert_font+EBj
		mov	eax, offset aGb2312 ; "GB2312"
		jmp	loc_6B28613C
; ---------------------------------------------------------------------------

loc_6B286498:				; CODE XREF: _pango_win32_insert_font+E3j
		mov	eax, offset aHangul ; "HANGUL"
		jmp	loc_6B28613C
; ---------------------------------------------------------------------------
		align 4

loc_6B2864A4:				; CODE XREF: _pango_win32_insert_font+DDj
		mov	eax, offset aJohab ; "JOHAB"
		jmp	loc_6B28613C
; ---------------------------------------------------------------------------

loc_6B2864AE:				; CODE XREF: _pango_win32_insert_font+17Ej
		mov	eax, offset aArabic ; "ARABIC"
		jmp	loc_6B28613C
; ---------------------------------------------------------------------------

loc_6B2864B8:				; CODE XREF: _pango_win32_insert_font+176j
		mov	eax, offset aHebrew ; "HEBREW"
		jmp	loc_6B28613C
; ---------------------------------------------------------------------------
		align 4

loc_6B2864C4:				; CODE XREF: _pango_win32_insert_font+16Ej
		mov	eax, offset aTurkish ; "TURKISH"
		jmp	loc_6B28613C
; ---------------------------------------------------------------------------
		align 10h

loc_6B2864D0:				; CODE XREF: _pango_win32_insert_font+168j
		mov	eax, offset aVietnamese	; "VIETNAMESE"
		jmp	loc_6B28613C
; ---------------------------------------------------------------------------
		align 4

loc_6B2864DC:				; CODE XREF: _pango_win32_insert_font+CFj
		mov	eax, offset aShiftjis ;	"SHIFTJIS"
		jmp	loc_6B28613C
; ---------------------------------------------------------------------------

loc_6B2864E6:				; CODE XREF: _pango_win32_insert_font+408j
		mov	eax, offset aSymbol ; "SYMBOL"
		jmp	loc_6B28613C
; ---------------------------------------------------------------------------

loc_6B2864F0:				; CODE XREF: _pango_win32_insert_font+400j
		mov	eax, offset aAnsi ; "ANSI"
		jmp	loc_6B28613C
; ---------------------------------------------------------------------------
		align 4

loc_6B2864FC:				; CODE XREF: _pango_win32_insert_font+3FAj
		mov	eax, offset aDefault ; "DEFAULT"
		jmp	loc_6B28613C
; ---------------------------------------------------------------------------
		align 4

loc_6B286508:				; CODE XREF: _pango_win32_insert_font+3E0j
		cmp	al, 0EEh
		jz	short loc_6B28651E
		cmp	al, 0FFh
		jnz	loc_6B286110
		mov	eax, offset aOem ; "OEM"
		jmp	loc_6B28613C
; ---------------------------------------------------------------------------

loc_6B28651E:				; CODE XREF: _pango_win32_insert_font+57Ej
		mov	eax, offset aEasteurope	; "EASTEUROPE"
		jmp	loc_6B28613C
; ---------------------------------------------------------------------------

loc_6B286528:				; CODE XREF: _pango_win32_insert_font+286j
		mov	edi, [ebp+var_28]
		mov	[esp+58h+Dest],	edi
		call	_pango_font_description_free
		jmp	loc_6B285FD5
_pango_win32_insert_font endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_synthesize_foreach proc near		; DATA XREF: __pango_win32_font_map_init+87o

var_98		= dword	ptr -98h
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_74		= byte ptr -74h
var_64		= dword	ptr -64h
var_60		= byte ptr -60h
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 8Ch
		mov	eax, [ebp+arg_4]
		mov	esi, [eax+10h]
		test	esi, esi
		jz	loc_6B28661F
		xor	ebx, ebx
		mov	[ebp+var_84], 0
		mov	[ebp+var_88], 0
		mov	[ebp+var_7C], 0
		mov	[ebp+var_80], ebx
		jmp	short loc_6B286590
; ---------------------------------------------------------------------------

loc_6B286574:				; CODE XREF: _synthesize_foreach+82j
		jbe	short loc_6B286589
		mov	[esp+98h+var_98], ebx
		call	_pango_font_description_get_style
		test	eax, eax
		jnz	loc_6B28662C
		mov	[ebp+var_7C], edi

loc_6B286589:				; CODE XREF: _synthesize_foreach:loc_6B286574j
					; _synthesize_foreach+F7j ...
		mov	esi, [esi+4]
		test	esi, esi
		jz	short loc_6B2865D8

loc_6B286590:				; CODE XREF: _synthesize_foreach+3Aj
					; _synthesize_foreach+9Bj
		mov	edi, [esi]
		movzx	eax, byte ptr [edi+27h]
		and	eax, 0F0h
		cmp	eax, 30h
		jz	short loc_6B2865AA
		cmp	eax, 10h
		jz	short loc_6B2865AA
		cmp	eax, 20h
		jnz	short loc_6B28661F

loc_6B2865AA:				; CODE XREF: _synthesize_foreach+66j
					; _synthesize_foreach+6Bj
		mov	ebx, [edi+68h]
		mov	[esp+98h+var_98], ebx
		call	_pango_font_description_get_weight
		cmp	eax, 190h
		jnz	short loc_6B286574
		mov	[esp+98h+var_98], ebx
		call	_pango_font_description_get_style
		test	eax, eax
		jnz	short loc_6B286634
		mov	[ebp+var_88], edi
		mov	esi, [esi+4]
		test	esi, esi
		jnz	short loc_6B286590
		lea	esi, [esi+0]

loc_6B2865D8:				; CODE XREF: _synthesize_foreach+56j
		mov	ebx, [ebp+var_80]
		mov	edi, [ebp+var_88]
		test	edi, edi
		jz	short loc_6B286602
		mov	esi, [ebp+var_7C]
		test	esi, esi
		jz	short loc_6B286668

loc_6B2865EC:				; CODE XREF: _synthesize_foreach+157j
		mov	eax, [ebp+var_84]
		test	eax, eax
		jz	loc_6B286694

loc_6B2865FA:				; CODE XREF: _synthesize_foreach+180j
		test	ebx, ebx
		jz	loc_6B2866BD

loc_6B286602:				; CODE XREF: _synthesize_foreach+ABj
		mov	ecx, [ebp+var_7C]
		test	ecx, ecx
		jz	short loc_6B286611
		test	ebx, ebx
		jz	loc_6B2866ED

loc_6B286611:				; CODE XREF: _synthesize_foreach+CFj
		mov	edx, [ebp+var_84]
		test	edx, edx
		jz	short loc_6B28661F
		test	ebx, ebx
		jz	short loc_6B28663F

loc_6B28661F:				; CODE XREF: _synthesize_foreach+14j
					; _synthesize_foreach+70j ...
		add	esp, 8Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B28662C:				; CODE XREF: _synthesize_foreach+48j
		mov	[ebp+var_80], edi
		jmp	loc_6B286589
; ---------------------------------------------------------------------------

loc_6B286634:				; CODE XREF: _synthesize_foreach+8Ej
		mov	[ebp+var_84], edi
		jmp	loc_6B286589
; ---------------------------------------------------------------------------

loc_6B28663F:				; CODE XREF: _synthesize_foreach+E5j
		lea	edi, [ebp+var_74]
		mov	esi, [ebp+var_84]
		add	esi, 0Ch
		mov	ecx, 17h
		rep movsd
		mov	[ebp+var_64], 2BCh
		lea	edx, [ebp+var_74]
		mov	cl, 1
		mov	eax, [ebp+arg_8]
		call	_pango_win32_insert_font
		jmp	short loc_6B28661F
; ---------------------------------------------------------------------------

loc_6B286668:				; CODE XREF: _synthesize_foreach+B2j
		lea	edi, [ebp+var_74]
		mov	esi, [ebp+var_88]
		add	esi, 0Ch
		mov	ecx, 17h
		rep movsd
		mov	[ebp+var_64], 2BCh
		lea	edx, [ebp+var_74]
		mov	cl, 1
		mov	eax, [ebp+arg_8]
		call	_pango_win32_insert_font
		jmp	loc_6B2865EC
; ---------------------------------------------------------------------------

loc_6B286694:				; CODE XREF: _synthesize_foreach+BCj
		lea	edi, [ebp+var_74]
		mov	esi, [ebp+var_88]
		add	esi, 0Ch
		mov	ecx, 17h
		rep movsd
		mov	[ebp+var_60], 0FFh
		lea	edx, [ebp+var_74]
		mov	cl, 1
		mov	eax, [ebp+arg_8]
		call	_pango_win32_insert_font
		jmp	loc_6B2865FA
; ---------------------------------------------------------------------------

loc_6B2866BD:				; CODE XREF: _synthesize_foreach+C4j
		lea	edi, [ebp+var_74]
		mov	esi, [ebp+var_88]
		add	esi, 0Ch
		mov	ecx, 17h
		rep movsd
		mov	[ebp+var_64], 2BCh

loc_6B2866D7:				; CODE XREF: _synthesize_foreach+1C5j
		mov	[ebp+var_60], 0FFh
		lea	edx, [ebp+var_74]
		mov	cl, 1
		mov	eax, [ebp+arg_8]
		call	_pango_win32_insert_font
		jmp	loc_6B28661F
; ---------------------------------------------------------------------------

loc_6B2866ED:				; CODE XREF: _synthesize_foreach+D3j
		lea	edi, [ebp+var_74]
		mov	esi, [ebp+var_7C]
		add	esi, 0Ch
		mov	ecx, 17h
		rep movsd
		jmp	short loc_6B2866D7
_synthesize_foreach endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	pango_win32_inner_enum_proc(const LOGFONTW *, const TEXTMETRICW	*, DWORD, LPARAM)
_pango_win32_inner_enum_proc@16	proc near ; DATA XREF: pango_win32_enum_proc(x,x,x,x)+4Eo

arg_0		= dword	ptr  8
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 8
		mov	edx, [ebp+arg_0]
		cmp	word ptr [edx+1Ch], 40h
		jz	short loc_6B28671A
		xor	ecx, ecx
		mov	eax, [ebp+arg_C]
		call	_pango_win32_insert_font

loc_6B28671A:				; CODE XREF: pango_win32_inner_enum_proc(x,x,x,x)+Ej
		mov	eax, 1
		leave
		retn	10h
_pango_win32_inner_enum_proc@16	endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry   5. _pango_win32_make_matching_logfontw

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public __pango_win32_make_matching_logfontw
__pango_win32_make_matching_logfontw proc near
					; CODE XREF: _pango_win32_font_map_real_find_font+1B0p

var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= word ptr -20h
var_1E		= word ptr -1Eh
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	ebx, [ebp+arg_0]
		mov	esi, [ebp+arg_4]
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_24], eax
		mov	edx, [ebp+arg_C]
		mov	ecx, ds:__pango_win32_debug
		test	ecx, ecx
		jnz	short loc_6B2867BC

loc_6B286746:				; CODE XREF: __pango_win32_make_matching_logfontw+EDj
		mov	[ebp+var_28], edx
		call	__pango_win32_font_map_get_type
		mov	[esp+48h+var_44], eax
		mov	[esp+48h+var_48], ebx
		call	_g_type_check_instance_cast
		mov	ebx, eax
		mov	[esp+48h+var_44], esi
		mov	eax, [eax+18h]
		mov	[esp+48h+var_48], eax
		call	_g_hash_table_lookup
		mov	esi, eax
		test	eax, eax
		mov	edx, [ebp+var_28]
		jz	loc_6B286818
		mov	ecx, 17h
		mov	edi, edx
		rep movsd
		fild	[ebp+var_24]
		fdiv	qword ptr [ebx+20h]
		fadd	ds:flt_6B28BBFC
		fnstcw	[ebp+var_1E]
		mov	ax, [ebp+var_1E]
		mov	ah, 0Ch
		mov	[ebp+var_20], ax
		fldcw	[ebp+var_20]
		fistp	[ebp+var_1C]
		fldcw	[ebp+var_1E]
		mov	eax, [ebp+var_1C]
		neg	eax
		mov	[edx], eax
		mov	dword ptr [edx+4], 0

loc_6B2867B1:				; CODE XREF: __pango_win32_make_matching_logfontw+FBj
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B2867BC:				; CODE XREF: __pango_win32_make_matching_logfontw+20j
		mov	[esp+48h+var_40], 4F7h
		mov	[esp+48h+var_44], offset ___PRETTY_FUNCTION___42430 ; "_pango_win32_make_matching_logfontw"
		mov	[esp+48h+var_48], offset aSD_1 ; "%s:%d	"
		mov	[ebp+var_28], edx
		call	_g_print
		mov	eax, [ebp+var_24]
		mov	[esp+48h+var_38], eax
		mov	eax, [esi]
		mov	[esp+48h+var_3C], eax
		mov	eax, [esi+10h]
		mov	[esp+48h+var_40], eax
		lea	eax, [esi+1Ch]
		mov	[esp+48h+var_44], eax
		mov	[esp+48h+var_48], offset aLfp_faceSWtLdH ; "lfp.face=%S,wt=%ld,ht=%ld,size:%d"
		call	_g_print
		mov	[esp+48h+var_48], offset asc_6B28B7A1 ;	"\n"
		call	_g_print
		mov	edx, [ebp+var_28]
		jmp	loc_6B286746
; ---------------------------------------------------------------------------
		align 4

loc_6B286818:				; CODE XREF: __pango_win32_make_matching_logfontw+4Ej
		mov	eax, ds:__pango_win32_debug
		test	eax, eax
		jz	short loc_6B2867B1
		mov	[esp+48h+var_40], 4FEh
		mov	[esp+48h+var_44], offset ___PRETTY_FUNCTION___42430 ; "_pango_win32_make_matching_logfontw"
		mov	[esp+48h+var_48], offset aSD_1 ; "%s:%d	"
		call	_g_print
		mov	[esp+44h+var_44], offset aNotFound ; "not found"
		call	_g_print
		mov	[ebp+arg_0], offset asc_6B28B7A1 ; "\n"
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		jmp	_g_print
__pango_win32_make_matching_logfontw endp

; Exported entry  19. pango_win32_font_map_get_font_cache

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _pango_win32_font_map_get_font_cache
_pango_win32_font_map_get_font_cache proc near ; CODE XREF: _pango_win32_font_finalize+11p
					; __pango_win32_font_get_hfont+32p

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	ebx, [ebp+arg_0]
		test	ebx, ebx
		jz	short loc_6B2868CC
		call	__pango_win32_font_map_get_type
		mov	esi, eax
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_6B28687C
		cmp	[eax], esi
		jz	short loc_6B2868B4

loc_6B28687C:				; CODE XREF: _pango_win32_font_map_get_font_cache+1Aj
		mov	[esp+18h+var_14], esi
		mov	[esp+18h+var_18], ebx
		call	_g_type_check_instance_is_a
		test	eax, eax
		jnz	short loc_6B2868B4
		mov	[esp+18h+var_10], offset aPango_win32__0 ; "PANGO_WIN32_IS_FONT_MAP (font_map)"
		mov	[esp+18h+var_14], offset ___PRETTY_FUNCTION___42464 ; "pango_win32_font_map_get_font_cache"
		mov	[esp+18h+var_18], offset aPango_1 ; "Pango"
		call	_g_return_if_fail_warning
		xor	eax, eax
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B2868B4:				; CODE XREF: _pango_win32_font_map_get_font_cache+1Ej
					; _pango_win32_font_map_get_font_cache+2Ej
		mov	[esp+18h+var_14], esi
		mov	[esp+18h+var_18], ebx
		call	_g_type_check_instance_cast
		mov	eax, [eax+0Ch]
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B2868CC:				; CODE XREF: _pango_win32_font_map_get_font_cache+Dj
		mov	[esp+18h+var_10], offset aFont_mapNull ; "font_map != NULL"
		mov	[esp+18h+var_14], offset ___PRETTY_FUNCTION___42464 ; "pango_win32_font_map_get_font_cache"
		mov	[esp+18h+var_18], offset aPango_1 ; "Pango"
		call	_g_return_if_fail_warning
		xor	eax, eax
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		retn
_pango_win32_font_map_get_font_cache endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry   4. _pango_win32_fontmap_cache_remove

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public __pango_win32_fontmap_cache_remove
__pango_win32_fontmap_cache_remove proc	near
					; CODE XREF: _pango_win32_font_map_real_find_font+166p

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	ebx, [ebp+arg_4]
		call	__pango_win32_font_map_get_type
		mov	[esp+18h+var_14], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_18], eax
		call	_g_type_check_instance_cast
		mov	esi, eax
		mov	[esp+18h+var_14], ebx
		mov	eax, [eax+10h]
		mov	[esp+18h+var_18], eax
		call	_g_queue_find
		test	eax, eax
		jz	short loc_6B286937
		mov	[esp+18h+var_14], eax
		mov	eax, [esi+10h]
		mov	[esp+18h+var_18], eax
		call	_g_queue_delete_link

loc_6B286937:				; CODE XREF: __pango_win32_fontmap_cache_remove+32j
		mov	dword ptr [ebx+7Ch], 0
		mov	[ebp+arg_0], ebx
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		jmp	_g_object_unref
__pango_win32_fontmap_cache_remove endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_pango_win32_font_map_real_find_font proc near
					; DATA XREF: __pango_win32_font_map_class_intern_init+3Bo

var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= word ptr -20h
var_1E		= word ptr -1Eh
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  8
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	edi, [ebp+arg_C]
		call	_pango_font_map_get_type
		mov	[esp+48h+var_44], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+48h+var_48], eax
		call	_g_type_check_instance_cast
		mov	[ebp+var_24], eax
		mov	edx, [ebp+arg_8]
		mov	ebx, [edx+98h]
		mov	[esp+48h+var_48], edi
		call	_pango_font_description_get_size
		mov	esi, eax
		mov	[esp+48h+var_48], edi
		call	_pango_font_description_get_size_is_absolute
		test	eax, eax
		jz	short loc_6B2869BF
		mov	[ebp+var_1C], esi
		fild	[ebp+var_1C]
		mov	eax, [ebp+arg_0]
		fmul	qword ptr [eax+20h]
		fmul	ds:flt_6B28BC00
		fadd	ds:flt_6B28BC04
		fnstcw	[ebp+var_1E]
		mov	ax, [ebp+var_1E]
		mov	ah, 0Ch
		mov	[ebp+var_20], ax
		fldcw	[ebp+var_20]
		fistp	[ebp+var_1C]
		fldcw	[ebp+var_1E]
		mov	esi, [ebp+var_1C]

loc_6B2869BF:				; CODE XREF: _pango_win32_font_map_real_find_font+40j
		mov	ecx, ds:__pango_win32_debug
		test	ecx, ecx
		jz	short loc_6B2869DA
		jmp	loc_6B286A5F
; ---------------------------------------------------------------------------
		align 10h

loc_6B2869D0:				; CODE XREF: _pango_win32_font_map_real_find_font+90j
		mov	edi, [ebx]
		cmp	[edi+68h], esi
		jz	short loc_6B286A38
		mov	ebx, [ebx+4]

loc_6B2869DA:				; CODE XREF: _pango_win32_font_map_real_find_font+7Bj
					; _pango_win32_font_map_real_find_font+155j
		test	ebx, ebx
		jnz	short loc_6B2869D0
		mov	edi, [ebp+var_24]
		test	edi, edi
		jz	loc_6B286B27
		call	__pango_win32_font_get_type
		mov	[esp+48h+var_44], 0
		mov	[esp+48h+var_48], eax
		call	_g_object_new
		mov	edi, eax
		mov	ebx, [eax+70h]
		test	ebx, ebx
		jz	loc_6B286AB9
		mov	[esp+48h+var_38], offset aResultFontmapN ; "result->fontmap == NULL"
		mov	[esp+48h+var_3C], offset ___PRETTY_FUNCTION___42276 ; "pango_win32_font_neww"
		mov	[esp+48h+var_40], 2A0h
		mov	[esp+48h+var_44], offset aPangowin32Font ; "pangowin32-fontmap.c"
		mov	[esp+48h+var_48], offset aPango_1 ; "Pango"
		call	_g_assertion_message_expr
		nop

loc_6B286A38:				; CODE XREF: _pango_win32_font_map_real_find_font+89j
		mov	edx, ds:__pango_win32_debug
		test	edx, edx
		jnz	loc_6B286B4C

loc_6B286A46:				; CODE XREF: _pango_win32_font_map_real_find_font+234j
		mov	[esp+48h+var_48], edi
		call	_g_object_ref
		mov	eax, [edi+7Ch]
		test	eax, eax
		jnz	short loc_6B286AA8

loc_6B286A55:				; CODE XREF: _pango_win32_font_map_real_find_font+16Bj
					; _pango_win32_font_map_real_find_font+1D6j
		mov	eax, edi

loc_6B286A57:				; CODE XREF: _pango_win32_font_map_real_find_font+1F9j
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6B286A5F:				; CODE XREF: _pango_win32_font_map_real_find_font+7Dj
		mov	[esp+48h+var_40], 2B8h
		mov	[esp+48h+var_44], offset ___PRETTY_FUNCTION___42291 ; "pango_win32_font_map_real_find_font"
		mov	[esp+48h+var_48], offset aSD_1 ; "%s:%d	"
		call	_g_print
		mov	[esp+48h+var_40], esi
		mov	eax, [ebp+arg_8]
		add	eax, 28h
		mov	[esp+48h+var_44], eax
		mov	[esp+48h+var_48], offset aGotBestMatchSS ; "got	best match:%S size=%d"
		call	_g_print
		mov	[esp+48h+var_48], offset asc_6B28B7A1 ;	"\n"
		call	_g_print
		jmp	loc_6B2869DA
; ---------------------------------------------------------------------------
		align 4

loc_6B286AA8:				; CODE XREF: _pango_win32_font_map_real_find_font+107j
		mov	[esp+48h+var_44], edi
		mov	edx, [ebp+var_24]
		mov	[esp+48h+var_48], edx
		call	__pango_win32_fontmap_cache_remove
		jmp	short loc_6B286A55
; ---------------------------------------------------------------------------

loc_6B286AB9:				; CODE XREF: _pango_win32_font_map_real_find_font+B9j
		mov	eax, [ebp+var_24]
		mov	[edi+70h], eax
		mov	[esp+48h+var_44], 50h
		mov	[esp+48h+var_48], eax
		call	_g_type_check_instance_cast
		lea	edx, [edi+70h]
		mov	[esp+48h+var_44], edx
		mov	[esp+48h+var_48], eax
		call	_g_object_add_weak_pointer
		mov	[edi+68h], esi
		lea	eax, [edi+0Ch]
		mov	[esp+48h+var_3C], eax
		mov	[esp+48h+var_40], esi
		mov	eax, [ebp+arg_8]
		add	eax, 0Ch
		mov	[esp+48h+var_44], eax
		mov	edx, [ebp+var_24]
		mov	[esp+48h+var_48], edx
		call	__pango_win32_make_matching_logfontw
		mov	eax, [ebp+arg_8]
		mov	[edi+78h], eax
		mov	[esp+48h+var_44], edi
		mov	eax, [eax+98h]
		mov	[esp+48h+var_48], eax
		call	_g_slist_prepend
		mov	edx, [ebp+arg_8]
		mov	[edx+98h], eax
		jmp	loc_6B286A55
; ---------------------------------------------------------------------------

loc_6B286B27:				; CODE XREF: _pango_win32_font_map_real_find_font+97j
		mov	[esp+48h+var_40], offset aFontmapNull ;	"fontmap != NULL"
		mov	[esp+48h+var_44], offset ___PRETTY_FUNCTION___42276 ; "pango_win32_font_neww"
		mov	[esp+48h+var_48], offset aPango_1 ; "Pango"
		call	_g_return_if_fail_warning
		xor	eax, eax
		jmp	loc_6B286A57
; ---------------------------------------------------------------------------
		align 4

loc_6B286B4C:				; CODE XREF: _pango_win32_font_map_real_find_font+F4j
		mov	[esp+48h+var_40], 2BFh
		mov	[esp+48h+var_44], offset ___PRETTY_FUNCTION___42291 ; "pango_win32_font_map_real_find_font"
		mov	[esp+48h+var_48], offset aSD_1 ; "%s:%d	"
		call	_g_print
		mov	[esp+48h+var_48], offset aSizeMatches ;	"size matches"
		call	_g_print
		mov	[esp+48h+var_48], offset asc_6B28B7A1 ;	"\n"
		call	_g_print
		jmp	loc_6B286A46
_pango_win32_font_map_real_find_font endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_basic_engine_win32_class_init proc near ; DATA	XREF: .rdata:6B28C04Co

arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+44h], offset _basic_engine_shape
		leave
		retn
_basic_engine_win32_class_init endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_init_uniscribe	proc near		; CODE XREF: __pango_basic_win32_script_engine_init+8p
					; __pango_basic_win32_script_engine_list+6p

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	[esp+18h+var_14], offset _nscripts
		mov	[esp+18h+var_18], offset _scripts
		call	_ScriptGetProperties@8 ; ScriptGetProperties(x,x)
		sub	esp, 8
		call	_pango_win32_get_dc
		mov	ds:_hdc, eax
		leave
		retn
_init_uniscribe	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_swap_range_clone_0 proc near		; CODE XREF: _basic_engine_shape+310p
					; _basic_engine_shape+34Ap ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= byte ptr -20h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 30h
		mov	esi, edx
		mov	edx, ecx
		mov	ebx, [ebp+arg_0]
		dec	ebx
		cmp	ebx, ecx
		jle	short loc_6B286C3C
		mov	ecx, [eax]
		mov	eax, [esi]
		lea	esi, [edx+edx*4]
		lea	esi, [ecx+esi*4]
		mov	[ebp+var_30], esi
		lea	esi, [ebx+ebx*4]
		lea	esi, [ecx+esi*4]
		mov	[ebp+var_34], esi
		lea	ecx, [ebp+var_20]
		mov	[ebp+var_38], ecx
		mov	[ebp+var_3C], ecx

loc_6B286BF8:				; CODE XREF: _swap_range_clone_0+76j
		mov	edi, [ebp+var_38]
		mov	esi, [ebp+var_30]
		mov	ecx, 5
		rep movsd
		mov	edi, [ebp+var_30]
		mov	esi, [ebp+var_34]
		mov	cl, 5
		rep movsd
		lea	ecx, [ebp+var_20]
		mov	[ebp+var_38], ecx
		mov	edi, [ebp+var_34]
		mov	esi, [ebp+var_3C]
		mov	ecx, 5
		rep movsd
		mov	ecx, [eax+edx*4]
		mov	esi, [eax+ebx*4]
		mov	[eax+edx*4], esi
		mov	[eax+ebx*4], ecx
		inc	edx
		dec	ebx
		add	[ebp+var_30], 14h
		sub	[ebp+var_34], 14h
		cmp	edx, ebx
		jl	short loc_6B286BF8

loc_6B286C3C:				; CODE XREF: _swap_range_clone_0+13j
		add	esp, 30h
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
_swap_range_clone_0 endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_set_glyph_clone_1 proc	near		; CODE XREF: _basic_engine_shape+168p
					; _basic_engine_shape+1EDp

var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	ebx, edx
		mov	esi, [ebp+arg_0]
		lea	edi, [esi+esi*4]
		shl	edi, 2
		mov	[ebp+var_2C], edi
		mov	edx, [edx]
		add	edx, edi
		mov	edi, [ebp+arg_8]
		mov	[edx], edi
		mov	dword ptr [edx+8], 0
		mov	dword ptr [edx+0Ch], 0
		mov	edi, [ebp+arg_4]
		mov	[ecx+esi*4], edi
		lea	ecx, [ebp+var_28]
		mov	[esp+48h+var_3C], ecx
		mov	[esp+48h+var_40], 0
		mov	edx, [edx]
		mov	[esp+48h+var_44], edx
		mov	[esp+48h+var_48], eax
		call	_pango_font_get_glyph_extents
		mov	eax, [ebx]
		mov	edx, [ebp+var_20]
		mov	ecx, [ebp+var_2C]
		mov	[eax+ecx+4], edx
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
_set_glyph_clone_1 endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_itemize_shape_and_place_clone_2 proc near ; CODE XREF:	_basic_engine_shape+3E8p

var_4A30	= dword	ptr -4A30h
var_4A2C	= dword	ptr -4A2Ch
var_4A1C	= dword	ptr -4A1Ch
var_4A18	= dword	ptr -4A18h
var_4A14	= dword	ptr -4A14h
var_4A10	= dword	ptr -4A10h
var_4A0C	= dword	ptr -4A0Ch
var_4A08	= dword	ptr -4A08h
var_4A04	= dword	ptr -4A04h
var_4A00	= dword	ptr -4A00h
var_49FC	= dword	ptr -49FCh
var_49F8	= dword	ptr -49F8h
var_49F4	= dword	ptr -49F4h
var_49F0	= dword	ptr -49F0h
var_49EC	= dword	ptr -49ECh
var_49E8	= dword	ptr -49E8h
var_49E4	= dword	ptr -49E4h
var_49E0	= dword	ptr -49E0h
var_49DC	= dword	ptr -49DCh
var_49D8	= qword	ptr -49D8h
var_49D0	= dword	ptr -49D0h
var_49CC	= word ptr -49CCh
var_49CA	= word ptr -49CAh
var_49BC	= byte ptr -49BCh
var_2A7C	= dword	ptr -2A7Ch
var_1ADC	= byte ptr -1ADCh
var_130E	= word ptr -130Eh
var_130C	= dword	ptr -130Ch
var_B3C		= word ptr -0B3Ch
var_36C		= dword	ptr -36Ch
var_368		= dword	ptr -368h
var_364		= dword	ptr -364h
var_4C		= byte ptr -4Ch
var_44		= dword	ptr -44h
var_3C		= byte ptr -3Ch
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1A		= word ptr -1Ah
Locale		= dword	ptr -10h
lpLCData	= dword	ptr -8
cchData		= dword	ptr -4
var_s0		= dword	ptr  0
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch
arg_18		= dword	ptr  20h
arg_1C		= dword	ptr  24h
arg_20		= dword	ptr  28h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		push	eax		; Size
		mov	eax, 4A68h
		call	__alloca
		mov	eax, [ebp+Locale]
		mov	[ebp+var_49E8],	eax
		mov	[ebp+var_4A14],	edx
		mov	[ebp+var_4A10],	ecx
		mov	ebx, [ebp+arg_C]
		mov	[esp+10h+Locale], eax
		call	_pango_win32_font_get_metrics_factor
		fstp	[ebp+var_49D8]
		mov	eax, [ebp+var_49E8]
		mov	[esp+10h+Locale], eax
		call	__pango_win32_font_get_hfont
		mov	[ebp+var_4A18],	eax
		mov	edi, ds:_script_cache_hash_42454
		test	edi, edi
		jz	loc_6B2881AE

loc_6B286D05:				; CODE XREF: _itemize_shape_and_place_clone_2+151Bj
		mov	[ebp+var_28], 0
		mov	[ebp+var_1A], 0
		mov	eax, [ebp+arg_8]
		mov	esi, [eax]
		mov	[esp+10h+Locale+4], offset aAr ; "ar"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		test	eax, eax
		jnz	loc_6B2880AF
		mov	[esp+10h+Locale+4], offset aHy ; "hy"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		test	eax, eax
		jnz	loc_6B2880CE
		mov	[esp+10h+Locale+4], offset aAs ; "as"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 4Dh
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aAz ; "az"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 2Ch
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aBn ; "bn"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 45h
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aZhTw_0 ; "zh-tw"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 404h
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aZhCn_0 ; "zh-cn"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 804h
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aZhHk ; "zh-hk"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 0C04h
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aZhSg ; "zh-sg"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 1004h
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aZhMo ; "zh-mo"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 1404h
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aDib	; "dib"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 65h
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aFa ; "fa"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 29h
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aKa ; "ka"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 37h
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aGu ; "gu"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 47h
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aHe ; "he"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 0Dh
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aHi ; "hi"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 39h
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aJa_0 ; "ja"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 11h
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aKn ; "kn"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 4Bh
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aKsIn ; "ks-in"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 860h
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aKs ; "ks"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 60h
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aKk ; "kk"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 3Fh
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aKok	; "kok"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 57h
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aKo_0 ; "ko"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 12h
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aKy ; "ky"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 40h
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aMl ; "ml"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 4Ch
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aMni	; "mni"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 58h
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aMr ; "mr"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 4Eh
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aMn ; "mn"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 50h
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aNeIn ; "ne-in"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 861h
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aNe ; "ne"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 61h
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aOr ; "or"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 48h
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aPa ; "pa"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 46h
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aSa ; "sa"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 4Fh
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aSd ; "sd"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 59h
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aSyr	; "syr"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 5Ah
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aTa ; "ta"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 49h
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aTt ; "tt"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 44h
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aTe ; "te"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 4Ah
		test	edx, edx
		jnz	loc_6B287229
		mov	[esp+10h+Locale+4], offset aTh ; "th"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 1Eh
		test	edx, edx
		jnz	short loc_6B287229
		mov	[esp+10h+Locale+4], offset aUrPk ; "ur-pk"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 420h
		test	edx, edx
		jnz	short loc_6B287229
		mov	[esp+10h+Locale+4], offset aUrIn ; "ur-in"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 820h
		test	edx, edx
		jnz	short loc_6B287229
		mov	[esp+10h+Locale+4], offset aUr ; "ur"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		mov	eax, 20h
		test	edx, edx
		jnz	short loc_6B287229
		mov	[esp+10h+Locale+4], offset aUz ; "uz"
		mov	[esp+10h+Locale], esi
		call	_pango_language_matches
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_6B287229
		mov	al, 43h

loc_6B287229:				; CODE XREF: _itemize_shape_and_place_clone_2+B4j
					; _itemize_shape_and_place_clone_2+D3j	...
		mov	word ptr [ebp+var_28], ax
		mov	edx, [ebp+arg_4]
		mov	cl, [edx]
		and	ecx, 1Fh
		mov	dl, byte ptr [ebp+var_1A]
		and	edx, 0FFFFFFE0h
		or	edx, ecx
		mov	byte ptr [ebp+var_1A], dl
		mov	esi, ds:_pango_win32_debug
		test	esi, esi
		jnz	loc_6B288090

loc_6B28724E:				; CODE XREF: _itemize_shape_and_place_clone_2+13FEj
		lea	eax, [ebp+var_20]
		mov	[esp+10h+arg_0], eax
		lea	ecx, [ebp+var_36C]
		mov	[esp+14h], ecx
		mov	[esp+10h+var_s0], 0
		lea	eax, [ebp+var_28]
		mov	[esp+10h+cchData], eax
		mov	[esp+10h+lpLCData], 64h
		mov	eax, [ebp+arg_0]
		mov	[esp+10h+Locale+4], eax
		mov	eax, [ebp+var_4A10]
		mov	[esp+10h+Locale], eax
		call	_ScriptItemize@28 ; ScriptItemize(x,x,x,x,x,x,x)
		sub	esp, 1Ch
		test	eax, eax
		jz	short loc_6B2872AC
		mov	ebx, ds:_pango_win32_debug
		test	ebx, ebx
		jnz	loc_6B287A15
		xor	esi, esi

loc_6B2872A2:				; CODE XREF: _itemize_shape_and_place_clone_2+D77j
					; _itemize_shape_and_place_clone_2+1448j ...
		mov	eax, esi
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6B2872AC:				; CODE XREF: _itemize_shape_and_place_clone_2+5E4j
		mov	ecx, ds:_pango_win32_debug
		test	ecx, ecx
		jnz	loc_6B2879FD

loc_6B2872BA:				; CODE XREF: _itemize_shape_and_place_clone_2+D64j
		mov	edx, [ebp+arg_4]
		test	byte ptr [edx],	1
		jnz	loc_6B2879E4
		mov	[ebp+var_4A1C],	1
		mov	[ebp+var_49F4],	0

loc_6B2872DA:				; CODE XREF: _itemize_shape_and_place_clone_2+D4Cj
		mov	edx, [ebp+var_20]
		test	edx, edx
		jle	loc_6B288111
		mov	[ebp+var_4A0C],	0
		lea	ecx, [ebp+var_2A7C]
		mov	[ebp+var_4A2C],	ecx
		lea	esi, [ebp+var_49BC]
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_4A30],	eax
		mov	[ebp+var_49DC],	ebx

loc_6B287310:				; CODE XREF: _itemize_shape_and_place_clone_2+D33j
		mov	edx, [ebp+var_49F4]
		mov	eax, [ebp+edx*8+var_368]
		mov	ecx, eax
		and	ecx, 3FFh
		mov	[ebp+var_49D0],	ecx
		mov	ecx, 0FA0h
		mov	edi, [ebp+var_4A2C]
		xor	eax, eax
		rep stosb
		mov	cx, 1F40h
		mov	edi, esi
		rep stosb
		mov	cl, 0Ch
		mov	edi, [ebp+var_4A30]
		rep stosb
		mov	edi, [ebp+edx*8+var_364]
		mov	ecx, [ebp+edx*8+var_36C]
		mov	edx, edi
		sub	edx, ecx
		mov	[ebp+var_49F0],	edx
		test	ecx, ecx
		jle	loc_6B288006
		mov	[ebp+var_49F8],	0
		xor	eax, eax
		mov	[ebp+var_49E0],	edi
		xor	edx, edx
		mov	edi, [ebp+var_4A10]
		xchg	ax, ax

loc_6B287388:				; CODE XREF: _itemize_shape_and_place_clone_2+6F1j
		mov	bx, [edi+eax*2]
		add	ebx, 2400h
		cmp	bx, 400h
		sbb	edx, 0FFFFFFFFh
		inc	eax
		cmp	eax, ecx
		jnz	short loc_6B287388
		mov	edi, [ebp+var_49E0]
		mov	[ebp+var_49F8],	edx

loc_6B2873AB:				; CODE XREF: _itemize_shape_and_place_clone_2+1364j
		mov	eax, ds:_pango_win32_debug
		test	eax, eax
		jz	loc_6B287516
		dec	edi
		mov	[ebp+var_49E0],	edi
		mov	ecx, [ebp+var_49F4]
		mov	al, byte ptr [ebp+ecx*8+var_368+1]
		test	al, al
		jns	loc_6B287E71
		mov	[ebp+var_4A08],	offset aFnoglyphindex ;	" fNoGlyphIndex"

loc_6B2873DE:				; CODE XREF: _itemize_shape_and_place_clone_2+11CFj
		test	al, 40h
		jz	loc_6B287E62
		mov	[ebp+var_4A04],	offset aFlogicalorder ;	" fLogicalOrder"

loc_6B2873F0:				; CODE XREF: _itemize_shape_and_place_clone_2+11C0j
		test	al, 20h
		jz	loc_6B287E53
		mov	[ebp+var_4A00],	offset aFlinkafter ; " fLinkAfter"

loc_6B287402:				; CODE XREF: _itemize_shape_and_place_clone_2+11B1j
		test	al, 10h
		jz	loc_6B287E44
		mov	[ebp+var_49FC],	offset aFlinkbefore ; "	fLinkBefore"

loc_6B287414:				; CODE XREF: _itemize_shape_and_place_clone_2+11A2j
		test	al, 8
		jz	loc_6B287E35
		mov	[ebp+var_49EC],	offset aFlayoutrtl ; " fLayoutRTL"

loc_6B287426:				; CODE XREF: _itemize_shape_and_place_clone_2+1193j
		test	al, 4
		jz	loc_6B287E26
		mov	[ebp+var_49E4],	offset aFrtl ; " fRTL"

loc_6B287438:				; CODE XREF: _itemize_shape_and_place_clone_2+1184j
		mov	eax, ds:_scripts
		mov	ebx, [ebp+var_49D0]
		mov	eax, [eax+ebx*4]
		test	byte ptr [eax+2], 2
		jz	loc_6B287E1C
		mov	ebx, offset aComplex ; "complex"

loc_6B287455:				; CODE XREF: _itemize_shape_and_place_clone_2+1175j
		movzx	eax, word ptr [eax]
		mov	[esp+10h+cchData], 0Ah ; cchData
		mov	[esp+10h+lpLCData], offset _retval_42330 ; lpLCData
		mov	[esp+10h+Locale+4], 59h	; LCType
		mov	edi, eax
		mov	[esp+10h+Locale], eax ;	Locale
		call	_GetLocaleInfoA@16 ; GetLocaleInfoA(x,x,x,x)
		sub	esp, 10h
		test	eax, eax
		jz	loc_6B287FE9

loc_6B287485:				; CODE XREF: _itemize_shape_and_place_clone_2+1355j
		mov	edx, [ebp+var_49F4]
		mov	eax, [ebp+edx*8+var_36C]
		mov	ecx, [ebp+var_49F0]
		mov	[esp+10h+arg_20], ecx
		mov	edx, [ebp+var_49E0]
		mov	[esp+10h+arg_1C], edx
		mov	[esp+10h+arg_18], eax
		mov	ecx, [ebp+var_4A08]
		mov	[esp+10h+arg_14], ecx
		mov	edx, [ebp+var_4A04]
		mov	[esp+10h+arg_10], edx
		mov	ecx, [ebp+var_4A00]
		mov	[esp+10h+arg_C], ecx
		mov	edx, [ebp+var_49FC]
		mov	[esp+10h+arg_8], edx
		mov	ecx, [ebp+var_49EC]
		mov	[esp+10h+arg_4], ecx
		mov	edx, [ebp+var_49E4]
		mov	[esp+10h+arg_0], edx
		mov	[esp+14h], ebx
		mov	[esp+10h+var_s0], offset _retval_42330
		mov	ecx, [ebp+var_49D0]
		mov	[esp+10h+cchData], ecx
		mov	[esp+10h+lpLCData], eax
		mov	ebx, [ebp+var_49F4]
		mov	[esp+10h+Locale+4], ebx
		mov	[esp+10h+Locale], offset aItemDIcharposD ; "  Item %d: iCharPos=%d eScript=%d (%s) "...
		call	_g_print

loc_6B287516:				; CODE XREF: _itemize_shape_and_place_clone_2+706j
		mov	ecx, [ebp+var_49D0]
		mov	ebx, ecx
		sar	ebx, 1Fh
		mov	edx, ebx
		mov	ebx, [ebp+var_49D0]
		mov	[ebp+var_30], ebx
		mov	eax, [ebp+var_4A18]
		or	eax, edx
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_30]
		mov	[esp+10h+Locale+4], eax
		mov	eax, ds:_script_cache_hash_42454
		mov	[esp+10h+Locale], eax
		call	_g_hash_table_lookup
		mov	[ebp+var_4A04],	eax
		test	eax, eax
		jz	loc_6B288024

loc_6B287559:				; CODE XREF: _itemize_shape_and_place_clone_2+13BFj
					; _itemize_shape_and_place_clone_2+13DFj
		mov	ecx, [ebp+arg_4]
		mov	al, [ecx]
		and	eax, 1
		lea	edx, ds:0[eax*4]
		mov	ebx, [ebp+var_49F4]
		mov	al, byte ptr [ebp+ebx*8+var_368+1]
		and	eax, 0FFFFFFFBh
		or	eax, edx
		mov	byte ptr [ebp+ebx*8+var_368+1],	al
		lea	eax, [ebp+ebx*8+var_368]
		mov	[ebp+var_4A08],	eax
		lea	edx, [ebp+var_24]
		mov	[esp+10h+arg_C], edx
		lea	ecx, [ebp+var_1ADC]
		mov	[esp+10h+arg_8], ecx
		lea	ebx, [ebp+var_130C]
		mov	[esp+10h+arg_4], ebx
		lea	eax, [ebp+var_B3C]
		mov	[esp+10h+arg_0], eax
		mov	edx, [ebp+var_4A08]
		mov	[esp+14h], edx
		mov	[esp+10h+var_s0], 3E8h
		mov	ecx, [ebp+var_49F0]
		mov	[esp+10h+cchData], ecx
		mov	ebx, [ebp+var_49F4]
		mov	eax, [ebp+ebx*8+var_36C]
		mov	edx, [ebp+var_4A10]
		lea	eax, [edx+eax*2]
		mov	[esp+10h+lpLCData], eax
		mov	ecx, [ebp+var_4A04]
		mov	[esp+10h+Locale+4], ecx
		mov	ebx, [ebp+var_4A14]
		mov	[esp+10h+Locale], ebx
		call	_ScriptShape@40	; ScriptShape(x,x,x,x,x,x,x,x,x,x)
		sub	esp, 28h
		test	eax, eax
		jnz	loc_6B2880EB
		mov	eax, [ebp+var_24]
		mov	[ebp+var_49EC],	eax
		mov	edx, [ebp+var_49F4]
		mov	edx, [ebp+edx*8+var_36C]
		mov	[ebp+var_49FC],	edx
		mov	ecx, [ebp+var_49F4]
		mov	cl, byte ptr [ebp+ecx*8+var_368+1]
		shr	cl, 2
		and	ecx, 1
		mov	byte ptr [ebp+var_49D0], cl
		mov	ebx, ds:_pango_win32_debug
		test	ebx, ebx
		jnz	loc_6B287BC0

loc_6B28764F:				; CODE XREF: _itemize_shape_and_place_clone_2+1160j
					; _itemize_shape_and_place_clone_2+1328j ...
		mov	eax, [ebp+var_49DC]
		mov	eax, [eax]
		mov	[ebp+var_4A00],	eax
		mov	eax, [ebp+var_49EC]
		add	eax, [ebp+var_4A00]
		mov	[esp+10h+Locale+4], eax
		mov	edx, [ebp+var_49DC]
		mov	[esp+10h+Locale], edx
		call	_pango_glyph_string_set_size
		mov	ecx, [ebp+var_4A00]
		lea	edx, ds:0[ecx*4]
		mov	ebx, [ebp+var_49DC]
		add	edx, [ebx+8]
		mov	eax, [ebp+var_24]
		mov	[ebp+var_49E0],	eax
		mov	ecx, [ebp+var_49F4]
		mov	eax, [ebp+ecx*8+var_36C]
		mov	ebx, [ebp+var_4A10]
		lea	edi, [ebx+eax*2]
		test	byte ptr [ebp+ecx*8+var_368+1],	4
		jnz	loc_6B287A28
		mov	ecx, [ebp+var_49F0]
		test	ecx, ecx
		jle	loc_6B2877E8
		mov	eax, [ebp+var_49F0]
		dec	eax
		mov	[ebp+var_49EC],	eax
		mov	ecx, [ebp+var_130C]
		mov	word ptr [ebp+var_49D0], cx
		xor	ecx, ecx
		mov	[ebp+var_49E4],	0

loc_6B2876F2:				; CODE XREF: _itemize_shape_and_place_clone_2+AB4j
		cmp	ecx, [ebp+var_49EC]
		jz	loc_6B2877A7

loc_6B2876FE:				; CODE XREF: _itemize_shape_and_place_clone_2+AF5j
		mov	bx, word ptr [ebp+ecx*2+var_130C+2]
		cmp	bx, word ptr [ebp+var_49D0]
		jz	short loc_6B28773C
		movzx	eax, word ptr [ebp+var_49D0]
		movzx	ebx, bx
		mov	[ebp+var_49D0],	ebx
		cmp	ebx, eax
		jle	short loc_6B28773C
		mov	ebx, [ebp+var_49E4]
		add	ebx, [ebp+var_49F8]
		nop

loc_6B287730:				; CODE XREF: _itemize_shape_and_place_clone_2+A8Ej
		mov	[edx+eax*4], ebx
		inc	eax
		cmp	[ebp+var_49D0],	eax
		jg	short loc_6B287730

loc_6B28773C:				; CODE XREF: _itemize_shape_and_place_clone_2+A61j
					; _itemize_shape_and_place_clone_2+A75j ...
		inc	ecx
		cmp	ecx, [ebp+var_49F0]
		jz	loc_6B2877DD

loc_6B287749:				; CODE XREF: _itemize_shape_and_place_clone_2+B2Bj
		mov	ax, word ptr [ebp+ecx*2+var_130C]
		mov	word ptr [ebp+var_49D0], ax
		cmp	[ebp+ecx*2+var_130E], ax
		jz	short loc_6B2876F2
		mov	[ebp+var_49E4],	0
		xor	eax, eax
		mov	[ebp+var_49FC],	edx
		xor	edx, edx
		xchg	ax, ax

loc_6B287778:				; CODE XREF: _itemize_shape_and_place_clone_2+AE1j
		mov	bx, [edi+eax*2]
		add	ebx, 2400h
		cmp	bx, 400h
		sbb	edx, 0FFFFFFFFh
		inc	eax
		cmp	eax, ecx
		jl	short loc_6B287778
		mov	[ebp+var_49E4],	edx
		mov	edx, [ebp+var_49FC]
		cmp	ecx, [ebp+var_49EC]
		jnz	loc_6B2876FE

loc_6B2877A7:				; CODE XREF: _itemize_shape_and_place_clone_2+A4Cj
		movzx	eax, word ptr [ebp+var_49D0]
		cmp	[ebp+var_49E0],	eax
		jle	short loc_6B28773C
		mov	ebx, [ebp+var_49E4]
		add	ebx, [ebp+var_49F8]
		xchg	ax, ax

loc_6B2877C4:				; CODE XREF: _itemize_shape_and_place_clone_2+B22j
		mov	[edx+eax*4], ebx
		inc	eax
		cmp	[ebp+var_49E0],	eax
		jg	short loc_6B2877C4
		inc	ecx
		cmp	ecx, [ebp+var_49F0]
		jnz	loc_6B287749

loc_6B2877DD:				; CODE XREF: _itemize_shape_and_place_clone_2+A97j
		mov	edx, [ebp+var_24]
		mov	[ebp+var_49E0],	edx
		xchg	ax, ax

loc_6B2877E8:				; CODE XREF: _itemize_shape_and_place_clone_2+A1Aj
					; _itemize_shape_and_place_clone_2+E15j ...
		lea	ecx, [ebp+var_3C]
		mov	[esp+10h+arg_8], ecx
		mov	[esp+10h+arg_4], esi
		lea	ebx, [ebp+var_2A7C]
		mov	[esp+10h+arg_0], ebx
		mov	eax, [ebp+var_4A08]
		mov	[esp+14h], eax
		lea	edx, [ebp+var_1ADC]
		mov	[esp+10h+var_s0], edx
		mov	ecx, [ebp+var_49E0]
		mov	[esp+10h+cchData], ecx
		lea	ebx, [ebp+var_B3C]
		mov	[esp+10h+lpLCData], ebx
		mov	eax, [ebp+var_4A04]
		mov	[esp+10h+Locale+4], eax
		mov	edx, [ebp+var_4A14]
		mov	[esp+10h+Locale], edx
		call	_ScriptPlace@36	; ScriptPlace(x,x,x,x,x,x,x,x,x)
		sub	esp, 24h
		test	eax, eax
		jnz	loc_6B288172
		mov	eax, [ebp+var_24]
		test	eax, eax
		jle	loc_6B2879BE
		mov	ecx, [ebp+var_4A00]
		lea	eax, [ecx+ecx*4]
		shl	eax, 2
		mov	[ebp+var_49D0],	eax
		xor	edi, edi
		jmp	loc_6B287946
; ---------------------------------------------------------------------------

loc_6B28786C:				; CODE XREF: _itemize_shape_and_place_clone_2+CA5j
		mov	ebx, [ebp+var_49D0]
		mov	edx, [ebp+var_49DC]
		add	ebx, [edx+4]
		movzx	eax, ax
		mov	[ebx], eax
		fld	[ebp+var_49D8]
		fimul	[ebp+edi*4+var_2A7C]
		fadd	ds:dbl_6B28C0A8
		fstp	qword ptr [esp+10h+Locale]
		call	_floor
		fnstcw	[ebp+var_49CA]
		mov	ax, [ebp+var_49CA]
		mov	ah, 0Ch
		mov	[ebp+var_49CC],	ax
		fldcw	[ebp+var_49CC]
		fistp	dword ptr [ebx+4]
		fldcw	[ebp+var_49CA]
		fld	[ebp+var_49D8]
		fimul	dword ptr [esi+edi*8]
		fadd	ds:dbl_6B28C0A8
		fstp	qword ptr [esp+10h+Locale]
		call	_floor
		fnstcw	[ebp+var_49CA]
		mov	ax, [ebp+var_49CA]
		mov	ah, 0Ch
		mov	[ebp+var_49CC],	ax
		fldcw	[ebp+var_49CC]
		fistp	dword ptr [ebx+8]
		fldcw	[ebp+var_49CA]
		fld	[ebp+var_49D8]
		fimul	dword ptr [esi+edi*8+4]
		fadd	ds:dbl_6B28C0A8
		fstp	qword ptr [esp+10h+Locale]
		call	_floor
		fnstcw	[ebp+var_49CA]
		mov	ax, [ebp+var_49CA]
		mov	ah, 0Ch
		mov	[ebp+var_49CC],	ax
		fldcw	[ebp+var_49CC]
		fistp	dword ptr [ebx+0Ch]
		fldcw	[ebp+var_49CA]
		inc	edi
		add	[ebp+var_49D0],	14h
		cmp	edi, [ebp+var_24]
		jge	short loc_6B2879BE

loc_6B287946:				; CODE XREF: _itemize_shape_and_place_clone_2+BBBj
					; _itemize_shape_and_place_clone_2+D10j
		mov	ax, [ebp+edi*2+var_B3C]
		test	ax, ax
		jnz	loc_6B28786C
		mov	ecx, [ebp+var_49DC]
		mov	eax, [ecx+4]
		mov	ebx, [ebp+var_49D0]
		mov	dword ptr [eax+ebx], 10000000h
		lea	eax, [ebp+var_4C]
		mov	[esp+10h+cchData], eax
		mov	[esp+10h+lpLCData], 0
		mov	[esp+10h+Locale+4], 10000000h
		mov	edx, [ebp+var_49E8]
		mov	[esp+10h+Locale], edx
		call	_pango_font_get_glyph_extents
		mov	eax, ebx
		mov	ecx, [ebp+var_49DC]
		add	eax, [ecx+4]
		mov	edx, [ebp+var_44]
		mov	[eax+4], edx
		mov	dword ptr [eax+8], 0
		mov	dword ptr [eax+0Ch], 0
		inc	edi
		add	[ebp+var_49D0],	14h
		cmp	edi, [ebp+var_24]
		jl	short loc_6B287946

loc_6B2879BE:				; CODE XREF: _itemize_shape_and_place_clone_2+BA1j
					; _itemize_shape_and_place_clone_2+C98j
		inc	[ebp+var_4A0C]
		mov	ebx, [ebp+var_4A0C]
		cmp	ebx, [ebp+var_20]
		jge	loc_6B28810B
		mov	eax, [ebp+var_4A1C]
		add	[ebp+var_49F4],	eax
		jmp	loc_6B287310
; ---------------------------------------------------------------------------

loc_6B2879E4:				; CODE XREF: _itemize_shape_and_place_clone_2+614j
		mov	eax, [ebp+var_20]
		dec	eax
		mov	[ebp+var_49F4],	eax
		mov	[ebp+var_4A1C],	0FFFFFFFFh
		jmp	loc_6B2872DA
; ---------------------------------------------------------------------------

loc_6B2879FD:				; CODE XREF: _itemize_shape_and_place_clone_2+608j
		mov	eax, [ebp+var_20]
		mov	[esp+10h+Locale+4], eax
		mov	[esp+10h+Locale], offset aDItems ; "%d items:\n"
		call	_g_print
		jmp	loc_6B2872BA
; ---------------------------------------------------------------------------

loc_6B287A15:				; CODE XREF: _itemize_shape_and_place_clone_2+5EEj
		mov	[esp+10h+Locale], offset aScriptitemizeF ; "ScriptItemize failed\n"
		call	_g_print
		xor	esi, esi
		jmp	loc_6B2872A2
; ---------------------------------------------------------------------------

loc_6B287A28:				; CODE XREF: _itemize_shape_and_place_clone_2+A0Cj
		mov	ebx, [ebp+var_49F0]
		dec	ebx
		mov	[ebp+var_49E4],	ebx
		cmp	ebx, 0
		jle	loc_6B2880B9
		mov	[ebp+var_49D0],	0
		xor	eax, eax
		mov	ebx, edx
		xor	edx, edx
		xchg	ax, ax

loc_6B287A50:				; CODE XREF: _itemize_shape_and_place_clone_2+DBDj
		mov	cx, [edi+eax*2]
		add	ecx, 2400h
		cmp	cx, 400h
		sbb	edx, 0FFFFFFFFh
		inc	eax
		cmp	[ebp+var_49E4],	eax
		jg	short loc_6B287A50
		mov	[ebp+var_49D0],	edx
		mov	edx, ebx

loc_6B287A73:				; CODE XREF: _itemize_shape_and_place_clone_2+141Dj
		mov	ecx, [ebp+var_49F0]
		sub	ecx, 2
		xor	eax, eax
		mov	[ebp+var_49F0],	edx

loc_6B287A84:				; CODE XREF: _itemize_shape_and_place_clone_2+EC8j
					; _itemize_shape_and_place_clone_2+1338j
		cmp	ecx, 0FFFFFFFFh
		jnz	short loc_6B287AC8
		mov	edx, [ebp+var_49F0]
		cmp	[ebp+var_49E0],	eax
		jle	loc_6B2881CC
		mov	ecx, [ebp+var_49D0]
		add	ecx, [ebp+var_49F8]
		mov	edi, [ebp+var_49E0]
		lea	esi, [esi+0]

loc_6B287AB0:				; CODE XREF: _itemize_shape_and_place_clone_2+E0Aj
		mov	[edx+eax*4], ecx
		inc	eax
		cmp	edi, eax
		jg	short loc_6B287AB0
		mov	ecx, [ebp+var_24]
		mov	[ebp+var_49E0],	ecx
		jmp	loc_6B2877E8
; ---------------------------------------------------------------------------
		align 4

loc_6B287AC8:				; CODE XREF: _itemize_shape_and_place_clone_2+DDBj
		mov	dx, word ptr [ebp+ecx*2+var_130C+2]
		cmp	word ptr [ebp+ecx*2+var_130C], dx
		jz	loc_6B287B79
		movzx	ebx, dx
		cmp	eax, ebx
		jg	short loc_6B287B0E
		mov	edx, [ebp+var_49D0]
		add	edx, [ebp+var_49F8]
		mov	[ebp+var_49EC],	edi
		mov	edi, [ebp+var_49F0]
		lea	esi, [esi+0]

loc_6B287B00:				; CODE XREF: _itemize_shape_and_place_clone_2+E5Aj
		mov	[edi+eax*4], edx
		inc	eax
		cmp	eax, ebx
		jle	short loc_6B287B00
		mov	edi, [ebp+var_49EC]

loc_6B287B0E:				; CODE XREF: _itemize_shape_and_place_clone_2+E37j
		lea	eax, [ebx+1]

loc_6B287B11:				; CODE XREF: _itemize_shape_and_place_clone_2+1373j
		test	ecx, ecx
		js	loc_6B2881CC

loc_6B287B19:				; CODE XREF: _itemize_shape_and_place_clone_2+F0Fj
		cmp	[ebp+var_49E4],	ecx
		jle	short loc_6B287B73
		mov	dx, word ptr [ebp+ecx*2+var_130C]
		cmp	word ptr [ebp+ecx*2+var_130C+2], dx
		jz	short loc_6B287B73
		test	ecx, ecx
		jle	loc_6B287FD9
		mov	[ebp+var_49D0],	0
		xor	edx, edx
		mov	[ebp+var_49EC],	eax
		xor	eax, eax
		nop

loc_6B287B50:				; CODE XREF: _itemize_shape_and_place_clone_2+EB9j
		mov	bx, [edi+edx*2]
		add	ebx, 2400h
		cmp	bx, 400h
		sbb	eax, 0FFFFFFFFh
		inc	edx
		cmp	edx, ecx
		jnz	short loc_6B287B50
		mov	[ebp+var_49D0],	eax
		mov	eax, [ebp+var_49EC]

loc_6B287B73:				; CODE XREF: _itemize_shape_and_place_clone_2+E73j
					; _itemize_shape_and_place_clone_2+E85j
		dec	ecx
		jmp	loc_6B287A84
; ---------------------------------------------------------------------------

loc_6B287B79:				; CODE XREF: _itemize_shape_and_place_clone_2+E2Cj
		test	ecx, ecx
		jle	loc_6B288015
		mov	[ebp+var_49D0],	0
		xor	edx, edx
		mov	[ebp+var_49EC],	eax
		xor	eax, eax
		lea	esi, [esi+0]

loc_6B287B98:				; CODE XREF: _itemize_shape_and_place_clone_2+F01j
		mov	bx, [edi+edx*2]
		add	ebx, 2400h
		cmp	bx, 400h
		sbb	eax, 0FFFFFFFFh
		inc	edx
		cmp	ecx, edx
		jg	short loc_6B287B98
		mov	[ebp+var_49D0],	eax
		mov	eax, [ebp+var_49EC]
		jmp	loc_6B287B19
; ---------------------------------------------------------------------------

loc_6B287BC0:				; CODE XREF: _itemize_shape_and_place_clone_2+99Dj
		mov	[esp+10h+Locale+4], eax
		mov	[esp+10h+Locale], offset aScriptshapeNgl ; "  ScriptShape: nglyphs=%d: "
		call	_g_print
		mov	ecx, [ebp+var_49EC]
		test	ecx, ecx
		jle	short loc_6B287C29
		mov	ebx, [ebp+var_49EC]
		dec	ebx
		mov	[ebp+var_49E0],	ebx
		xor	edi, edi
		mov	ebx, [ebp+var_49EC]
		jmp	short loc_6B287C1A
; ---------------------------------------------------------------------------
		align 4

loc_6B287BF4:				; CODE XREF: _itemize_shape_and_place_clone_2+F74j
		mov	eax, offset asc_6B28BC79 ; ","

loc_6B287BF9:				; CODE XREF: _itemize_shape_and_place_clone_2+F7Bj
		mov	[esp+10h+lpLCData], eax
		movzx	eax, [ebp+edi*2+var_B3C]
		mov	[esp+10h+Locale+4], eax
		mov	[esp+10h+Locale], offset aDS ; "%d%s"
		call	_g_print
		inc	edi
		cmp	ebx, edi
		jle	short loc_6B287C29

loc_6B287C1A:				; CODE XREF: _itemize_shape_and_place_clone_2+F43j
		cmp	edi, [ebp+var_49E0]
		jl	short loc_6B287BF4
		mov	eax, offset byte_6B28BC2F
		jmp	short loc_6B287BF9
; ---------------------------------------------------------------------------

loc_6B287C29:				; CODE XREF: _itemize_shape_and_place_clone_2+F2Cj
					; _itemize_shape_and_place_clone_2+F6Cj
		mov	[esp+10h+Locale], offset asc_6B28BE50 ;	"\n"
		call	_g_print
		mov	[esp+10h+Locale], offset aLog_clusters ; "  log_clusters: "
		call	_g_print
		mov	edx, [ebp+var_49F0]
		test	edx, edx
		jle	loc_6B2880D8
		xor	edi, edi
		mov	ebx, [ebp+var_49F0]
		nop

loc_6B287C58:				; CODE XREF: _itemize_shape_and_place_clone_2+FC7j
		movzx	eax, word ptr [ebp+edi*2+var_130C]
		mov	[esp+10h+Locale+4], eax
		mov	[esp+10h+Locale], offset aD_0 ;	"%d "
		call	_g_print
		inc	edi
		cmp	ebx, edi
		jg	short loc_6B287C58
		mov	[esp+10h+Locale], offset asc_6B28BE50 ;	"\n"
		call	_g_print
		xor	edx, edx
		xor	eax, eax
		mov	ecx, [ebp+var_49F0]
		nop

loc_6B287C8C:				; CODE XREF: _itemize_shape_and_place_clone_2+FFAj
		test	eax, eax
		jz	short loc_6B287CA2
		mov	bx, word ptr [ebp+eax*2+var_130C]
		cmp	[ebp+eax*2+var_130E], bx
		jz	short loc_6B287CA3

loc_6B287CA2:				; CODE XREF: _itemize_shape_and_place_clone_2+FE2j
		inc	edx

loc_6B287CA3:				; CODE XREF: _itemize_shape_and_place_clone_2+FF4j
		inc	eax
		cmp	eax, ecx
		jnz	short loc_6B287C8C

loc_6B287CA8:				; CODE XREF: _itemize_shape_and_place_clone_2+143Aj
		mov	[esp+10h+Locale+4], edx
		mov	[esp+10h+Locale], offset aDClusters ; "	 %d clusters:\n"
		call	_g_print
		cmp	byte ptr [ebp+var_49D0], 0
		jnz	loc_6B287E80
		mov	eax, [ebp+var_49F0]
		test	eax, eax
		jle	loc_6B2881A0
		mov	ecx, [ebp+var_49F0]
		dec	ecx
		mov	[ebp+var_4A00],	ecx
		mov	[ebp+var_49E4],	0
		mov	[ebp+var_49D0],	0

loc_6B287CF4:				; CODE XREF: _itemize_shape_and_place_clone_2+1151j
		mov	ebx, [ebp+var_49D0]
		add	ebx, [ebp+var_49FC]
		mov	edi, [ebp+var_49D0]
		test	edi, edi
		jz	short loc_6B287D22
		mov	edx, [ebp+var_49D0]
		mov	ax, word ptr [ebp+edx*2+var_130C]
		cmp	[ebp+edx*2+var_130E], ax
		jz	short loc_6B287D4A

loc_6B287D22:				; CODE XREF: _itemize_shape_and_place_clone_2+105Cj
		mov	[esp+10h+lpLCData], ebx
		mov	ecx, [ebp+var_49E4]
		mov	[esp+10h+Locale+4], ecx
		mov	[esp+10h+Locale], offset aClusterDWchar_ ; "  Cluster %d: wchar_t %d--"
		call	_g_print
		mov	edx, [ebp+var_49D0]
		mov	ax, word ptr [ebp+edx*2+var_130C]

loc_6B287D4A:				; CODE XREF: _itemize_shape_and_place_clone_2+1074j
		mov	ecx, [ebp+var_4A00]
		cmp	[ebp+var_49D0],	ecx
		jz	loc_6B287E11
		mov	edx, [ebp+var_49D0]
		mov	di, word ptr [ebp+edx*2+var_130C+2]
		cmp	di, ax
		jz	short loc_6B287DEB
		movzx	edi, di

loc_6B287D72:				; CODE XREF: _itemize_shape_and_place_clone_2+116Bj
		movzx	eax, ax
		mov	ecx, edi
		sub	ecx, eax
		mov	[esp+10h+lpLCData], ecx
		mov	[esp+10h+Locale+4], ebx
		mov	[esp+10h+Locale], offset aDDGlyphs ; "%d: %d glyphs: "
		call	_g_print
		mov	eax, [ebp+var_49D0]
		movzx	ebx, word ptr [ebp+eax*2+var_130C]
		cmp	edi, ebx
		jle	short loc_6B287DD9
		lea	edx, [edi-1]
		mov	[ebp+var_49E0],	edx

loc_6B287DA8:				; CODE XREF: _itemize_shape_and_place_clone_2+112Bj
		movzx	eax, [ebp+ebx*2+var_B3C]
		mov	[esp+10h+Locale+4], eax
		mov	[esp+10h+Locale], offset aD_1 ;	"%d"
		call	_g_print
		cmp	ebx, [ebp+var_49E0]
		jz	short loc_6B287DD4
		mov	[esp+10h+Locale], offset asc_6B28BC79 ;	","
		call	_g_print

loc_6B287DD4:				; CODE XREF: _itemize_shape_and_place_clone_2+111Aj
		inc	ebx
		cmp	edi, ebx
		jg	short loc_6B287DA8

loc_6B287DD9:				; CODE XREF: _itemize_shape_and_place_clone_2+10F1j
		inc	[ebp+var_49E4]
		mov	[esp+10h+Locale], offset asc_6B28BE50 ;	"\n"
		call	_g_print

loc_6B287DEB:				; CODE XREF: _itemize_shape_and_place_clone_2+10C1j
		inc	[ebp+var_49D0]
		mov	ecx, [ebp+var_49D0]
		cmp	[ebp+var_49F0],	ecx
		jg	loc_6B287CF4
		mov	ebx, [ebp+var_24]
		mov	[ebp+var_49EC],	ebx
		jmp	loc_6B28764F
; ---------------------------------------------------------------------------

loc_6B287E11:				; CODE XREF: _itemize_shape_and_place_clone_2+10AAj
		mov	edi, [ebp+var_49EC]
		jmp	loc_6B287D72
; ---------------------------------------------------------------------------

loc_6B287E1C:				; CODE XREF: _itemize_shape_and_place_clone_2+79Ej
		mov	ebx, offset aSimple ; "simple"
		jmp	loc_6B287455
; ---------------------------------------------------------------------------

loc_6B287E26:				; CODE XREF: _itemize_shape_and_place_clone_2+77Cj
		mov	[ebp+var_49E4],	offset byte_6B28BC2F
		jmp	loc_6B287438
; ---------------------------------------------------------------------------

loc_6B287E35:				; CODE XREF: _itemize_shape_and_place_clone_2+76Aj
		mov	[ebp+var_49EC],	offset byte_6B28BC2F
		jmp	loc_6B287426
; ---------------------------------------------------------------------------

loc_6B287E44:				; CODE XREF: _itemize_shape_and_place_clone_2+758j
		mov	[ebp+var_49FC],	offset byte_6B28BC2F
		jmp	loc_6B287414
; ---------------------------------------------------------------------------

loc_6B287E53:				; CODE XREF: _itemize_shape_and_place_clone_2+746j
		mov	[ebp+var_4A00],	offset byte_6B28BC2F
		jmp	loc_6B287402
; ---------------------------------------------------------------------------

loc_6B287E62:				; CODE XREF: _itemize_shape_and_place_clone_2+734j
		mov	[ebp+var_4A04],	offset byte_6B28BC2F
		jmp	loc_6B2873F0
; ---------------------------------------------------------------------------

loc_6B287E71:				; CODE XREF: _itemize_shape_and_place_clone_2+722j
		mov	[ebp+var_4A08],	offset byte_6B28BC2F
		jmp	loc_6B2873DE
; ---------------------------------------------------------------------------

loc_6B287E80:				; CODE XREF: _itemize_shape_and_place_clone_2+1013j
		mov	edx, [ebp+var_49F0]
		dec	edx
		mov	[ebp+var_49EC],	edx
		js	loc_6B288192
		mov	ebx, [ebp+var_49EC]
		add	ebx, [ebp+var_49FC]
		mov	[ebp+var_49D0],	ebx
		mov	ebx, [ebp+var_49EC]
		xor	edi, edi
		mov	[ebp+var_49E4],	0
		nop

loc_6B287EB8:				; CODE XREF: _itemize_shape_and_place_clone_2+130Bj
		cmp	[ebp+var_49EC],	ebx
		jz	short loc_6B287ED2
		mov	ax, word ptr [ebp+ebx*2+var_130C]
		cmp	ax, word ptr [ebp+ebx*2+var_130C+2]
		jz	short loc_6B287EFA

loc_6B287ED2:				; CODE XREF: _itemize_shape_and_place_clone_2+1212j
		mov	eax, [ebp+var_49D0]
		mov	[esp+10h+lpLCData], eax
		mov	edx, [ebp+var_49E4]
		mov	[esp+10h+Locale+4], edx
		mov	[esp+10h+Locale], offset aClusterDCharsD ; "  Cluster %d: chars	%d--"
		call	_g_print
		mov	ax, word ptr [ebp+ebx*2+var_130C]

loc_6B287EFA:				; CODE XREF: _itemize_shape_and_place_clone_2+1224j
		test	ebx, ebx
		jz	loc_6B287FBC
		lea	ecx, [ebx-1]
		mov	[ebp+var_49E0],	ecx
		cmp	word ptr [ebp+ecx*2+var_130C], ax
		jz	loc_6B287FA7

loc_6B287F19:				; CODE XREF: _itemize_shape_and_place_clone_2+131Aj
		mov	edx, 1
		sub	edx, edi
		movzx	eax, ax
		lea	eax, [edx+eax]
		mov	[esp+10h+lpLCData], eax
		mov	eax, [ebp+var_49D0]
		mov	[esp+10h+Locale+4], eax
		mov	[esp+10h+Locale], offset aDDGlyphs ; "%d: %d glyphs: "
		call	_g_print
		movzx	eax, word ptr [ebp+ebx*2+var_130C]
		cmp	eax, edi
		jge	short loc_6B287F55
		jmp	short loc_6B287F92
; ---------------------------------------------------------------------------
		align 10h

loc_6B287F50:				; CODE XREF: _itemize_shape_and_place_clone_2+12CBj
		inc	edi
		cmp	edi, eax
		jg	short loc_6B287F92

loc_6B287F55:				; CODE XREF: _itemize_shape_and_place_clone_2+129Ej
					; _itemize_shape_and_place_clone_2+12E4j
		movzx	eax, [ebp+edi*2+var_B3C]
		mov	[esp+10h+Locale+4], eax
		mov	[esp+10h+Locale], offset aD_1 ;	"%d"
		call	_g_print
		movzx	eax, word ptr [ebp+ebx*2+var_130C]
		cmp	edi, eax
		jge	short loc_6B287F50
		mov	[esp+10h+Locale], offset asc_6B28BC79 ;	","
		call	_g_print
		movzx	eax, word ptr [ebp+ebx*2+var_130C]
		inc	edi
		cmp	edi, eax
		jle	short loc_6B287F55

loc_6B287F92:				; CODE XREF: _itemize_shape_and_place_clone_2+12A0j
					; _itemize_shape_and_place_clone_2+12A7j
		lea	edi, [eax+1]
		inc	[ebp+var_49E4]
		mov	[esp+10h+Locale], offset asc_6B28BE50 ;	"\n"
		call	_g_print

loc_6B287FA7:				; CODE XREF: _itemize_shape_and_place_clone_2+1267j
		mov	ebx, [ebp+var_49E0]
		test	ebx, ebx
		js	short loc_6B287FCB
		dec	[ebp+var_49D0]
		jmp	loc_6B287EB8
; ---------------------------------------------------------------------------

loc_6B287FBC:				; CODE XREF: _itemize_shape_and_place_clone_2+1250j
		mov	[ebp+var_49E0],	0FFFFFFFFh
		jmp	loc_6B287F19
; ---------------------------------------------------------------------------

loc_6B287FCB:				; CODE XREF: _itemize_shape_and_place_clone_2+1303j
		mov	edx, [ebp+var_24]
		mov	[ebp+var_49EC],	edx
		jmp	loc_6B28764F
; ---------------------------------------------------------------------------

loc_6B287FD9:				; CODE XREF: _itemize_shape_and_place_clone_2+E89j
		mov	[ebp+var_49D0],	0
		dec	ecx
		jmp	loc_6B287A84
; ---------------------------------------------------------------------------

loc_6B287FE9:				; CODE XREF: _itemize_shape_and_place_clone_2+7D3j
		mov	[esp+10h+lpLCData], edi
		mov	[esp+10h+Locale+4], offset a02x	; "%#02x"
		mov	[esp+10h+Locale], offset _retval_42330 ; Dest
		call	_sprintf
		jmp	loc_6B287485
; ---------------------------------------------------------------------------

loc_6B288006:				; CODE XREF: _itemize_shape_and_place_clone_2+6BAj
		mov	[ebp+var_49F8],	0
		jmp	loc_6B2873AB
; ---------------------------------------------------------------------------

loc_6B288015:				; CODE XREF: _itemize_shape_and_place_clone_2+ECFj
		mov	[ebp+var_49D0],	0
		jmp	loc_6B287B11
; ---------------------------------------------------------------------------

loc_6B288024:				; CODE XREF: _itemize_shape_and_place_clone_2+8A7j
		mov	[esp+10h+Locale], 8
		call	_g_malloc
		mov	edi, eax
		mov	eax, [ebp+var_30]
		mov	edx, [ebp+var_2C]
		mov	[edi], eax
		mov	[edi+4], edx
		mov	[esp+10h+Locale], 4
		call	_g_malloc0
		mov	[ebp+var_4A04],	eax
		mov	[esp+10h+lpLCData], eax
		mov	[esp+10h+Locale+4], edi
		mov	eax, ds:_script_cache_hash_42454
		mov	[esp+10h+Locale], eax
		call	_g_hash_table_insert
		cmp	ds:_pango_win32_debug, 0
		jz	loc_6B287559
		mov	[esp+10h+lpLCData], ebx
		mov	edx, [ebp+var_4A18]
		mov	[esp+10h+Locale+4], edx
		mov	[esp+10h+Locale], offset aNewScript_cach ; "  New SCRIPT_CACHE for font	%p and scri"...
		call	_g_print
		jmp	loc_6B287559
; ---------------------------------------------------------------------------

loc_6B288090:				; CODE XREF: _itemize_shape_and_place_clone_2+59Cj
		movzx	edx, cl
		mov	[esp+10h+lpLCData], edx
		movzx	eax, ax
		mov	[esp+10h+Locale+4], eax
		mov	[esp+10h+Locale], offset aBasicWin32_c48 ; "basic-win32.c:481: ScriptItemize: uDefa"...
		call	_g_print
		jmp	loc_6B28724E
; ---------------------------------------------------------------------------

loc_6B2880AF:				; CODE XREF: _itemize_shape_and_place_clone_2+7Dj
		mov	eax, 1
		jmp	loc_6B287229
; ---------------------------------------------------------------------------

loc_6B2880B9:				; CODE XREF: _itemize_shape_and_place_clone_2+D8Cj
		jnz	loc_6B2877E8
		mov	[ebp+var_49D0],	0
		jmp	loc_6B287A73
; ---------------------------------------------------------------------------

loc_6B2880CE:				; CODE XREF: _itemize_shape_and_place_clone_2+95j
		mov	eax, 2Bh
		jmp	loc_6B287229
; ---------------------------------------------------------------------------

loc_6B2880D8:				; CODE XREF: _itemize_shape_and_place_clone_2+F9Dj
		mov	[esp+10h+Locale], offset asc_6B28BE50 ;	"\n"
		call	_g_print
		xor	edx, edx
		jmp	loc_6B287CA8
; ---------------------------------------------------------------------------

loc_6B2880EB:				; CODE XREF: _itemize_shape_and_place_clone_2+95Aj
		xor	esi, esi
		cmp	ds:_pango_win32_debug, 0
		jz	loc_6B2872A2
		mov	[esp+10h+Locale], offset aPangoBasicWin3 ; "pango-basic-win32: ScriptShape failed\n"
		call	_g_print
		jmp	loc_6B2872A2
; ---------------------------------------------------------------------------

loc_6B28810B:				; CODE XREF: _itemize_shape_and_place_clone_2+D21j
		mov	ebx, [ebp+var_49DC]

loc_6B288111:				; CODE XREF: _itemize_shape_and_place_clone_2+633j
		mov	esi, 1
		cmp	ds:_pango_win32_debug, 0
		jz	loc_6B2872A2
		mov	edx, [ebp+arg_4]
		movzx	eax, byte ptr [edx]
		mov	[esp+10h+Locale+4], eax
		mov	[esp+10h+Locale], offset aPangoLog_clust ; "  Pango log_clusters (level:%d), char i"...
		call	_g_print
		cmp	dword ptr [ebx], 0
		jle	short loc_6B28815C
		xor	si, si

loc_6B288141:				; CODE XREF: _itemize_shape_and_place_clone_2+14AEj
		mov	eax, [ebx+8]
		mov	eax, [eax+esi*4]
		mov	[esp+10h+Locale+4], eax
		mov	[esp+10h+Locale], offset aD_0 ;	"%d "
		call	_g_print
		inc	esi
		cmp	esi, [ebx]
		jl	short loc_6B288141

loc_6B28815C:				; CODE XREF: _itemize_shape_and_place_clone_2+1490j
		mov	[esp+10h+Locale], offset asc_6B28BE50 ;	"\n"
		call	_g_print
		mov	esi, 1
		jmp	loc_6B2872A2
; ---------------------------------------------------------------------------

loc_6B288172:				; CODE XREF: _itemize_shape_and_place_clone_2+B96j
		xor	esi, esi
		cmp	ds:_pango_win32_debug, 0
		jz	loc_6B2872A2
		mov	[esp+10h+Locale], offset aPangoBasicWi_0 ; "pango-basic-win32: ScriptPlace failed\n"
		call	_g_print
		jmp	loc_6B2872A2
; ---------------------------------------------------------------------------

loc_6B288192:				; CODE XREF: _itemize_shape_and_place_clone_2+11E1j
		mov	ecx, [ebp+var_24]
		mov	[ebp+var_49EC],	ecx
		jmp	loc_6B28764F
; ---------------------------------------------------------------------------

loc_6B2881A0:				; CODE XREF: _itemize_shape_and_place_clone_2+1021j
		mov	eax, [ebp+var_24]
		mov	[ebp+var_49EC],	eax
		jmp	loc_6B28764F
; ---------------------------------------------------------------------------

loc_6B2881AE:				; CODE XREF: _itemize_shape_and_place_clone_2+53j
		mov	[esp+10h+Locale+4], offset _g_int64_equal
		mov	[esp+10h+Locale], offset _g_int64_hash
		call	_g_hash_table_new
		mov	ds:_script_cache_hash_42454, eax
		jmp	loc_6B286D05
; ---------------------------------------------------------------------------

loc_6B2881CC:				; CODE XREF: _itemize_shape_and_place_clone_2+DE9j
					; _itemize_shape_and_place_clone_2+E67j
		mov	ebx, [ebp+var_24]
		mov	[ebp+var_49E0],	ebx
		jmp	loc_6B2877E8
_itemize_shape_and_place_clone_2 endp ;	sp-analysis failed

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_basic_engine_shape proc near		; DATA XREF: _basic_engine_win32_class_init+6o

var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_40		= dword	ptr -40h
var_38		= dword	ptr -38h
var_30		= byte ptr -30h
var_28		= dword	ptr -28h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 7Ch
		mov	edi, [ebp+arg_4]
		test	edi, edi
		jz	loc_6B2886C9
		mov	esi, [ebp+arg_8]
		test	esi, esi
		jz	loc_6B2886A8
		mov	ebx, [ebp+arg_C]
		test	ebx, ebx
		js	loc_6B288545
		mov	ecx, [ebp+arg_10]
		test	ecx, ecx
		jz	loc_6B2886EA
		mov	[esp+88h+var_78], 0
		lea	edi, [ebp+var_20]
		mov	[esp+88h+var_7C], edi
		mov	[esp+88h+var_80], 0
		mov	eax, [ebp+arg_C]
		mov	[esp+88h+var_84], eax
		mov	edx, [ebp+arg_8]
		mov	[esp+88h+var_88], edx
		call	_g_utf8_to_utf16
		mov	ebx, eax
		test	eax, eax
		jz	loc_6B2882D6
		mov	[esp+88h+var_80], 1
		mov	eax, [ebp+var_20]
		mov	[esp+88h+var_84], eax
		mov	[esp+88h+var_88], ebx
		call	_ScriptIsComplex@12 ; ScriptIsComplex(x,x,x)
		sub	esp, 0Ch
		xor	ecx, ecx
		cmp	eax, 1
		setz	cl
		mov	esi, ecx
		mov	[esp+88h+var_88], ebx
		call	_g_free
		mov	edx, ds:_pango_win32_debug
		test	edx, edx
		jz	short loc_6B2882B6
		test	esi, esi
		jnz	loc_6B288697
		mov	eax, offset aNo_0 ; "NO"

loc_6B288287:				; CODE XREF: _basic_engine_shape+4C0j
		mov	[esp+88h+var_78], eax
		mov	eax, [ebp+var_20]
		mov	[esp+88h+var_7C], eax
		mov	ebx, [ebp+arg_8]
		mov	[esp+88h+var_80], ebx
		mov	eax, [ebp+arg_C]
		cmp	eax, 0Ah
		jle	short loc_6B2882A6
		mov	eax, 0Ah

loc_6B2882A6:				; CODE XREF: _basic_engine_shape+C3j
		mov	[esp+88h+var_84], eax
		mov	[esp+88h+var_88], offset aText_is_simple ; "text_is_simple: %.*s (%ld wchar_t):	%s\"...
		call	_g_print

loc_6B2882B6:				; CODE XREF: _basic_engine_shape+9Cj
		test	esi, esi
		jnz	short loc_6B2882D6
		mov	eax, ds:_hdc
		mov	[esp+88h+var_84], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+88h+var_88], eax
		call	_pango_win32_font_select_font
		test	eax, eax
		jnz	loc_6B288566

loc_6B2882D6:				; CODE XREF: _basic_engine_shape+62j
					; _basic_engine_shape+DCj ...
		mov	edx, [ebp+arg_C]
		mov	[esp+88h+var_84], edx
		mov	ecx, [ebp+arg_8]
		mov	[esp+88h+var_88], ecx
		call	_g_utf8_strlen
		mov	[ebp+var_50], eax
		mov	[esp+88h+var_84], eax
		mov	ebx, [ebp+arg_14]
		mov	[esp+88h+var_88], ebx
		call	_pango_glyph_string_set_size
		mov	esi, [ebp+var_50]
		test	esi, esi
		jle	loc_6B2884C0
		mov	esi, [ebp+arg_8]
		mov	[ebp+var_4C], 0
		xor	edi, edi
		mov	eax, ds:__imp__g_utf8_skip
		mov	[ebp+var_58], eax
		lea	edx, [ebx+4]
		mov	[ebp+var_54], edx
		jmp	short loc_6B288367
; ---------------------------------------------------------------------------
		align 4

loc_6B288324:				; CODE XREF: _basic_engine_shape+1B8j
		mov	edx, [ebp+arg_14]
		mov	ecx, [edx+8]
		mov	[esp+88h+var_80], 0FFFFFFFh

loc_6B288332:				; CODE XREF: _basic_engine_shape+2DCj
		mov	eax, esi
		sub	eax, [ebp+arg_8]
		mov	[esp+88h+var_84], eax
		mov	[esp+88h+var_88], edi
		mov	edx, [ebp+var_54]
		mov	eax, [ebp+arg_4]
		call	_set_glyph_clone_1

loc_6B288349:				; CODE XREF: _basic_engine_shape+1FDj
					; _basic_engine_shape+205j ...
		movzx	eax, byte ptr [esi]
		mov	ecx, [ebp+var_58]
		mov	edx, [ecx]
		mov	al, [edx+eax]
		inc	edi
		add	[ebp+var_4C], 14h
		cmp	[ebp+var_50], edi
		jle	loc_6B2884C0
		movsx	eax, al
		add	esi, eax

loc_6B288367:				; CODE XREF: _basic_engine_shape+143j
		mov	[esp+88h+var_88], esi
		call	_g_utf8_get_char
		mov	ebx, eax
		mov	ecx, [ebp+arg_10]
		test	byte ptr [ecx+0Ch], 1
		jnz	loc_6B288478

loc_6B28837E:				; CODE XREF: _basic_engine_shape+2ADj
		cmp	ebx, 0A0h
		jz	loc_6B2884A0

loc_6B28838A:				; CODE XREF: _basic_engine_shape+2BCj
					; _basic_engine_shape+2C6j
		mov	[esp+88h+var_88], ebx
		call	_pango_is_zero_width
		test	eax, eax
		jnz	short loc_6B288324
		mov	[esp+88h+var_84], ebx
		mov	ecx, [ebp+arg_4]
		mov	[esp+88h+var_88], ecx
		call	_pango_win32_font_get_glyph_index
		test	eax, eax
		jz	loc_6B2884A8
		mov	edx, [ebp+arg_14]
		mov	ecx, [edx+8]
		mov	[esp+88h+var_80], eax
		mov	eax, esi
		sub	eax, [ebp+arg_8]
		mov	[esp+88h+var_84], eax
		mov	[esp+88h+var_88], edi
		mov	edx, [ebp+var_54]
		mov	eax, [ebp+arg_4]
		call	_set_glyph_clone_1
		mov	[esp+88h+var_88], ebx
		call	_g_unichar_type
		cmp	eax, 0Ch
		jnz	loc_6B288349
		test	edi, edi
		jz	loc_6B288349
		mov	ecx, [ebp+arg_14]
		mov	edx, [ecx+4]
		mov	eax, [ebp+var_4C]
		lea	eax, [edx+eax]
		mov	ebx, [ebp+var_4C]
		lea	ecx, [edx+ebx-14h]
		mov	ebx, [eax+4]
		mov	edx, [ecx+4]
		cmp	edx, ebx
		jl	loc_6B2886A1

loc_6B288408:				; CODE XREF: _basic_engine_shape+4C7j
		mov	[eax+4], edx
		mov	dword ptr [ecx+4], 0
		mov	ecx, [ebp+arg_14]
		mov	edx, [ecx+8]
		mov	ecx, [edx+edi*4-4]
		mov	[edx+edi*4], ecx
		lea	ebx, [ebp+var_30]
		mov	[esp+88h+var_7C], ebx
		lea	edx, [ebp+var_40]
		mov	[esp+88h+var_80], edx
		mov	eax, [eax]
		mov	[esp+88h+var_84], eax
		mov	ecx, [ebp+arg_4]
		mov	[esp+88h+var_88], ecx
		call	_pango_font_get_glyph_extents
		mov	ebx, [ebp+var_28]
		test	ebx, ebx
		jnz	loc_6B288349
		mov	ecx, [ebp+var_40]
		test	ecx, ecx
		jnz	loc_6B288349
		mov	edx, [ebp+var_4C]
		mov	ebx, [ebp+arg_14]
		add	edx, [ebx+4]
		mov	eax, [edx+4]
		sub	eax, [ebp+var_38]
		mov	ecx, eax
		shr	ecx, 1Fh
		lea	eax, [ecx+eax]
		sar	eax, 1
		mov	[edx+8], eax
		jmp	loc_6B288349
; ---------------------------------------------------------------------------
		align 4

loc_6B288478:				; CODE XREF: _basic_engine_shape+19Cj
		lea	eax, [ebp+var_1C]
		mov	[esp+88h+var_84], eax
		mov	[esp+88h+var_88], ebx
		call	_pango_get_mirror_char
		test	eax, eax
		jz	loc_6B28837E
		mov	ebx, [ebp+var_1C]
		cmp	ebx, 0A0h
		jnz	loc_6B28838A
		xchg	ax, ax

loc_6B2884A0:				; CODE XREF: _basic_engine_shape+1A8j
		mov	bl, 20h
		jmp	loc_6B28838A
; ---------------------------------------------------------------------------
		align 4

loc_6B2884A8:				; CODE XREF: _basic_engine_shape+1CBj
		mov	eax, [ebp+arg_14]
		mov	ecx, [eax+8]
		or	ebx, 10000000h
		mov	[esp+88h+var_80], ebx
		jmp	loc_6B288332
; ---------------------------------------------------------------------------
		align 10h

loc_6B2884C0:				; CODE XREF: _basic_engine_shape+123j
					; _basic_engine_shape+180j
		mov	ebx, [ebp+arg_10]
		test	byte ptr [ebx+0Ch], 1
		jnz	short loc_6B2884D4

loc_6B2884C9:				; CODE XREF: _basic_engine_shape+31Aj
					; _basic_engine_shape+385j ...
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B2884D4:				; CODE XREF: _basic_engine_shape+2EBj
		mov	edi, [ebp+arg_14]
		add	edi, 4
		mov	esi, [ebp+arg_14]
		add	esi, 8
		mov	eax, [ebp+var_50]
		mov	[esp+88h+var_88], eax
		xor	ecx, ecx
		mov	edx, esi
		mov	eax, edi
		call	_swap_range_clone_0
		mov	edx, [ebp+var_50]
		test	edx, edx
		jle	short loc_6B2884C9
		xor	ecx, ecx
		mov	[ebp+var_4C], edi
		mov	edi, esi
		mov	esi, [ebp+var_50]

loc_6B288502:				; CODE XREF: _basic_engine_shape+367j
		mov	edx, [ebp+arg_14]
		mov	eax, [edx+8]
		mov	edx, [eax+ecx*4]
		mov	ebx, ecx
		jmp	short loc_6B288515
; ---------------------------------------------------------------------------
		align 10h

loc_6B288510:				; CODE XREF: _basic_engine_shape+33Cj
		cmp	edx, [eax+ebx*4]
		jnz	short loc_6B288534

loc_6B288515:				; CODE XREF: _basic_engine_shape+331j
		inc	ebx
		cmp	esi, ebx
		jg	short loc_6B288510
		mov	esi, edi
		mov	edi, [ebp+var_4C]
		mov	[esp+88h+var_88], ebx
		mov	edx, esi
		mov	eax, edi
		call	_swap_range_clone_0
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B288534:				; CODE XREF: _basic_engine_shape+337j
		mov	[esp+88h+var_88], ebx
		mov	edx, edi
		mov	eax, [ebp+var_4C]
		call	_swap_range_clone_0
		mov	ecx, ebx
		jmp	short loc_6B288502
; ---------------------------------------------------------------------------

loc_6B288545:				; CODE XREF: _basic_engine_shape+24j
		mov	[esp+88h+var_80], offset aLength0 ; "length >= 0"
		mov	[esp+88h+var_84], offset ___PRETTY_FUNCTION___42521 ; "basic_engine_shape"
		mov	[esp+88h+var_88], offset aPango_2 ; "Pango"
		call	_g_return_if_fail_warning
		jmp	loc_6B2884C9
; ---------------------------------------------------------------------------

loc_6B288566:				; CODE XREF: _basic_engine_shape+F4j
		mov	[esp+88h+var_78], 0
		mov	[esp+88h+var_7C], edi
		mov	[esp+88h+var_80], 0
		mov	edx, [ebp+arg_C]
		mov	[esp+88h+var_84], edx
		mov	ecx, [ebp+arg_8]
		mov	[esp+88h+var_88], ecx
		call	_g_utf8_to_utf16
		mov	[ebp+var_50], eax
		test	eax, eax
		jz	loc_6B28870B
		mov	ebx, [ebp+arg_14]
		mov	[esp+88h+var_7C], ebx
		mov	eax, [ebp+arg_10]
		add	eax, 10h
		mov	[esp+88h+var_80], eax
		mov	eax, [ebp+arg_10]
		add	eax, 0Ch
		mov	[esp+88h+var_84], eax
		mov	eax, [ebp+var_20]
		mov	[esp+88h+var_88], eax
		mov	ecx, [ebp+var_50]
		mov	edx, ds:_hdc
		mov	eax, [ebp+arg_4]
		call	_itemize_shape_and_place_clone_2
		test	eax, eax
		jz	loc_6B28870B
		add	ebx, 8
		mov	[ebp+var_5C], ebx
		mov	eax, [ebp+arg_C]
		mov	[esp+88h+var_84], eax
		mov	edx, [ebp+arg_8]
		mov	[esp+88h+var_88], edx
		call	_g_utf8_strlen
		mov	edi, eax
		mov	[esp+88h+var_84], 4
		mov	[esp+88h+var_88], eax
		call	_g_malloc_n
		mov	ebx, eax
		mov	ecx, [ebp+arg_8]
		add	ecx, [ebp+arg_C]
		mov	[ebp+var_54], ecx
		cmp	[ebp+arg_8], ecx
		jnb	short loc_6B288630
		mov	eax, ds:__imp__g_utf8_skip
		mov	esi, [eax]
		mov	ecx, ebx
		mov	eax, [ebp+arg_8]
		nop

loc_6B288618:				; CODE XREF: _basic_engine_shape+452j
		mov	edx, eax
		sub	edx, [ebp+arg_8]
		mov	[ecx], edx
		movzx	edx, byte ptr [eax]
		movsx	edx, byte ptr [esi+edx]
		add	eax, edx
		add	ecx, 4
		cmp	eax, [ebp+var_54]
		jb	short loc_6B288618

loc_6B288630:				; CODE XREF: _basic_engine_shape+42Dj
		mov	edx, [ebp+arg_14]
		mov	eax, [edx]
		test	eax, eax
		jle	loc_6B288726
		mov	eax, [edx+8]
		mov	edx, [eax]
		cmp	edi, edx
		jle	short loc_6B28866B
		xor	ecx, ecx
		mov	esi, [ebp+arg_14]

loc_6B28864B:				; CODE XREF: _basic_engine_shape+48Dj
		mov	edx, [ebx+edx*4]
		mov	[eax], edx
		inc	ecx
		cmp	ecx, [esi]
		jge	loc_6B288726
		lea	eax, ds:0[ecx*4]
		mov	edx, [ebp+var_5C]
		add	eax, [edx]
		mov	edx, [eax]
		cmp	edi, edx
		jg	short loc_6B28864B

loc_6B28866B:				; CODE XREF: _basic_engine_shape+468j
		mov	[esp+88h+var_78], offset aGlyphsLog_clus ; "glyphs->log_clusters[glyphix] < n_chars"
		mov	[esp+88h+var_7C], offset ___PRETTY_FUNCTION___42430_0 ;	"convert_log_clusters_to_byte_offsets"
		mov	[esp+88h+var_80], 1BDh
		mov	[esp+88h+var_84], offset aBasicWin32_c ; "basic-win32.c"
		mov	[esp+88h+var_88], offset aPango_2 ; "Pango"
		call	_g_assertion_message_expr

loc_6B288697:				; CODE XREF: _basic_engine_shape+A0j
		mov	eax, offset aYes ; "YES"
		jmp	loc_6B288287
; ---------------------------------------------------------------------------

loc_6B2886A1:				; CODE XREF: _basic_engine_shape+226j
		mov	edx, ebx
		jmp	loc_6B288408
; ---------------------------------------------------------------------------

loc_6B2886A8:				; CODE XREF: _basic_engine_shape+19j
		mov	[esp+88h+var_80], offset aTextNull ; "text != NULL"
		mov	[esp+88h+var_84], offset ___PRETTY_FUNCTION___42521 ; "basic_engine_shape"
		mov	[esp+88h+var_88], offset aPango_2 ; "Pango"
		call	_g_return_if_fail_warning
		jmp	loc_6B2884C9
; ---------------------------------------------------------------------------

loc_6B2886C9:				; CODE XREF: _basic_engine_shape+Ej
		mov	[esp+88h+var_80], offset aFontNull_0 ; "font !=	NULL"
		mov	[esp+88h+var_84], offset ___PRETTY_FUNCTION___42521 ; "basic_engine_shape"
		mov	[esp+88h+var_88], offset aPango_2 ; "Pango"
		call	_g_return_if_fail_warning
		jmp	loc_6B2884C9
; ---------------------------------------------------------------------------

loc_6B2886EA:				; CODE XREF: _basic_engine_shape+2Fj
		mov	[esp+88h+var_80], offset aAnalysisNull ; "analysis != NULL"
		mov	[esp+88h+var_84], offset ___PRETTY_FUNCTION___42521 ; "basic_engine_shape"
		mov	[esp+88h+var_88], offset aPango_2 ; "Pango"
		call	_g_return_if_fail_warning
		jmp	loc_6B2884C9
; ---------------------------------------------------------------------------

loc_6B28870B:				; CODE XREF: _basic_engine_shape+3B5j
					; _basic_engine_shape+3EFj
		mov	ebx, [ebp+arg_4]
		mov	[esp+88h+var_88], ebx
		call	_pango_win32_font_done_font
		mov	eax, [ebp+var_50]
		mov	[esp+88h+var_88], eax
		call	_g_free
		jmp	loc_6B2882D6
; ---------------------------------------------------------------------------

loc_6B288726:				; CODE XREF: _basic_engine_shape+45Bj
					; _basic_engine_shape+477j
		mov	[esp+88h+var_88], ebx
		call	_g_free
		mov	edi, ds:_pango_win32_debug
		test	edi, edi
		jnz	short loc_6B288760

loc_6B288738:				; CODE XREF: _basic_engine_shape+5C3j
		mov	ecx, [ebp+arg_4]
		mov	[esp+88h+var_88], ecx
		call	_pango_win32_font_done_font
		mov	ebx, [ebp+var_50]
		mov	[esp+88h+var_88], ebx
		call	_g_free
		mov	eax, [ebp+arg_14]
		mov	eax, [eax]
		test	eax, eax
		jg	loc_6B2884C9
		jmp	loc_6B2882D6
; ---------------------------------------------------------------------------

loc_6B288760:				; CODE XREF: _basic_engine_shape+55Aj
		mov	[esp+88h+var_88], offset aPangoLog_clu_0 ; "  Pango log_clusters, byte offsets:"
		call	_g_print
		mov	ecx, [ebp+arg_14]
		cmp	dword ptr [ecx], 0
		jle	short loc_6B288793
		xor	ebx, ebx
		mov	esi, ecx

loc_6B288778:				; CODE XREF: _basic_engine_shape+5B5j
		mov	eax, [esi+8]
		mov	eax, [eax+ebx*4]
		mov	[esp+88h+var_84], eax
		mov	[esp+88h+var_88], offset aD_0 ;	"%d "
		call	_g_print
		inc	ebx
		cmp	ebx, [esi]
		jl	short loc_6B288778

loc_6B288793:				; CODE XREF: _basic_engine_shape+596j
		mov	[esp+88h+var_88], offset asc_6B28BE50 ;	"\n"
		call	_g_print
		jmp	short loc_6B288738
_basic_engine_shape endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public __pango_basic_win32_script_engine_init
__pango_basic_win32_script_engine_init proc near ; DATA	XREF: .data:6B28A004o

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_2C		= byte ptr -2Ch
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		sub	esp, 50h
		call	_init_uniscribe
		call	_pango_win32_get_debug_flag
		test	eax, eax
		jz	short loc_6B2887C4
		mov	ds:_pango_win32_debug, 1

loc_6B2887C4:				; CODE XREF: __pango_basic_win32_script_engine_init+14j
		lea	edi, [ebp+var_2C]
		mov	esi, offset _C_2_50105 ; "L"
		mov	ecx, 9
		rep movsd
		call	_pango_engine_shape_get_type
		mov	[esp+58h+var_48], 0
		lea	edx, [ebp+var_2C]
		mov	[esp+58h+var_4C], edx
		mov	[esp+58h+var_50], offset aBasicenginewin ; "BasicEngineWin32"
		mov	[esp+58h+var_54], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+58h+var_58], eax
		call	_g_type_module_register_type
		mov	ds:_basic_engine_win32_type, eax
		add	esp, 50h
		pop	esi
		pop	edi
		leave
		retn
__pango_basic_win32_script_engine_init endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public __pango_basic_win32_script_engine_exit
__pango_basic_win32_script_engine_exit proc near ; DATA	XREF: .data:6B28A008o
		push	ebp
		mov	ebp, esp
		leave
		retn
__pango_basic_win32_script_engine_exit endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public __pango_basic_win32_script_engine_list
__pango_basic_win32_script_engine_list proc near
					; DATA XREF: .data:__pango_included_win32_moduleso

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 8
		call	_init_uniscribe
		mov	dword_6B28A02C,	offset _uniscribe_scripts
		mov	dword_6B28A030,	1
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	_script_engines
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax], 1
		leave
		retn
__pango_basic_win32_script_engine_list endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public __pango_basic_win32_script_engine_create
__pango_basic_win32_script_engine_create proc near ; DATA XREF:	.data:6B28A00Co

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		sub	esp, 10h
		mov	edi, offset aBasicscripteng ; "BasicScriptEngineWin32"
		mov	ecx, 17h
		mov	esi, [ebp+arg_0]
		repe cmpsb
		jz	short loc_6B28886C
		xor	eax, eax
		add	esp, 10h
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6B28886C:				; CODE XREF: __pango_basic_win32_script_engine_create+17j
		mov	[esp+18h+var_14], 0
		mov	eax, ds:_basic_engine_win32_type
		mov	[esp+18h+var_18], eax
		call	_g_object_new
		add	esp, 10h
		pop	esi
		pop	edi
		leave
		retn
__pango_basic_win32_script_engine_create endp

; [00000006 BYTES: COLLAPSED FUNCTION _pango_find_map]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_script_for_unichar]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_map_get_engine]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_language_matches]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_get_type]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_metrics_unref]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_map_create_context]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_description_copy]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_description_set_absolute_size]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_description_set_size]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_layout_line_get_extents]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_glyph_string_extents]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_layout_get_type]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_layout_get_iter]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_layout_iter_get_line_readonly]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_layout_iter_get_line_extents]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_layout_iter_get_baseline]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_layout_iter_next_line]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_layout_iter_free]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_coverage_ref]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_coverage_new]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_describe]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_description_to_string]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_description_free]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_coverage_set]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_language_get_sample_string]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_metrics_ref]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_metrics_new]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_coverage_get]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_coverage_unref]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_context_set_language]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_describe_with_absolute_size]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_context_set_font_description]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_layout_new]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_layout_set_text]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_layout_get_lines_readonly]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_map_get_type]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_module_register]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_description_get_family]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_description_better_match]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_family_get_type]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_face_get_type]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_lookup_aliases]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_description_copy_static]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_description_set_family_static]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_face_describe]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_description_unset_fields]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_description_new]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_description_set_family]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_description_set_style]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_description_set_weight]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_description_set_stretch]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_description_set_variant]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_description_get_style]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_description_get_weight]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_description_get_size]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_description_get_size_is_absolute]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_font_get_glyph_extents]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_glyph_string_set_size]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_is_zero_width]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_get_mirror_char]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_engine_shape_get_type]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION ScriptGetProperties(x,x)]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION ScriptItemize(x,x,x,x,x,x,x)]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION ScriptShape(x,x,x,x,x,x,x,x,x,x)]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION ScriptPlace(x,x,x,x,x,x,x,x,x)]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION ScriptIsComplex(x,x,x)]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_type_check_instance_cast]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_object_remove_weak_pointer]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_type_check_class_cast]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_type_register_static_simple]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_object_ref]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_object_unref]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_type_class_peek_parent]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_type_check_instance_is_a]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_type_register_static]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_object_new]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_type_init]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_object_add_weak_pointer]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_type_module_register_type]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_malloc]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_free]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_quark_from_static_string]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_slist_foreach]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_slist_free]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_slist_remove]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_hash_table_destroy]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_assertion_message_expr]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_hash_table_new_full]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_utf16_to_utf8]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_log]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_hash_table_lookup]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_malloc0]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_hash_table_insert]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_win32_error_message]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_once_init_enter_impl]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_intern_static_string]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_once_init_leave]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_queue_push_head]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_queue_pop_tail]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_print]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_malloc_n]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_return_if_fail_warning]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_assertion_message]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_slist_prepend]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_slice_free1]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_atomic_int_exchange_and_add]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_hash_table_remove]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_hash_table_foreach]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_list_free]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_direct_equal]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_direct_hash]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_slice_alloc]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_hash_table_new]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_atomic_int_add]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_list_prepend]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_list_free_1]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_ascii_strcasecmp]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_slist_length]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_strdup]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_slist_append]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_queue_new]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_list_foreach]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_queue_free]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_locale_to_utf8]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_convert]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_queue_find]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_queue_delete_link]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_int64_equal]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_int64_hash]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_utf8_to_utf16]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_utf8_strlen]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _g_utf8_get_char]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _g_unichar_type]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION GetFontData(x,x,x,x,x)]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION SelectObject(x,x)]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION GetGlyphOutlineA(x,x,x,x,x,x,x)]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION GetTextMetricsA(x,x)]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION CreateDCA(x,x,x,x)]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION ExtTextOutW(x,x,x,x,x,x,x,x)]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION GetGraphicsMode(x)]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION SetGraphicsMode(x,x)]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION GetWorldTransform(x,x)]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION SetWorldTransform(x,x)]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION CreateSolidBrush(x)]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION Rectangle(x,x,x,x,x)]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION DeleteObject(x)]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION Polyline(x,x,x)]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION GetGlyphIndicesW(x,x,x,x,x)]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION GetFontUnicodeRanges(x,x)]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION CreateFontIndirectW(x)]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION EnumFontFamiliesExW(x,x,x,x,x)]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION GetDeviceCaps(x,x)]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION CreateFontIndirectA(x)]
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public ___tlregdtor
___tlregdtor	proc near
		push	ebp
		xor	eax, eax
		mov	ebp, esp
		pop	ebp
		retn
___tlregdtor	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; __stdcall __dyn_tls_dtor(x, x, x)
		public ___dyn_tls_dtor@12
___dyn_tls_dtor@12 proc	near		; DATA XREF: .CRT:___xl_do

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+arg_4]
		test	eax, eax
		jnz	short loc_6B288DA0

loc_6B288D7D:				; CODE XREF: __dyn_tls_dtor(x,x,x)+33j
		mov	edx, [ebp+arg_8]
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_10], edx
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_18], eax
		call	___mingw_TLScallback
		mov	eax, 1
		leave
		retn	0Ch
; ---------------------------------------------------------------------------
		align 10h

loc_6B288DA0:				; CODE XREF: __dyn_tls_dtor(x,x,x)+Bj
		cmp	eax, 3
		jz	short loc_6B288D7D
		mov	eax, 1
		leave
		retn	0Ch
___dyn_tls_dtor@12 endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; __stdcall __dyn_tls_init(x, x, x)
		public ___dyn_tls_init@12
___dyn_tls_init@12 proc	near		; CODE XREF: DllMainCRTStartup(x,x,x)+98p
					; DATA XREF: .rdata:___dyn_tls_init_callbacko ...

lpLibFileName	= dword	ptr -18h
lpProcName	= dword	ptr -14h
var_10		= dword	ptr -10h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	edx, ds:__imp___winmajor
		mov	eax, [ebp+arg_4]
		cmp	dword ptr [edx], 3
		jbe	short loc_6B288DF6
		cmp	ds:__CRT_MT, 2
		jz	short loc_6B288DD8
		mov	ds:__CRT_MT, 2

loc_6B288DD8:				; CODE XREF: __dyn_tls_init(x,x,x)+1Cj
		cmp	eax, 2
		jz	loc_6B288EE6
		cmp	eax, 1
		jz	loc_6B288E88

loc_6B288DEA:				; CODE XREF: __dyn_tls_init(x,x,x)+F2j
					; __dyn_tls_init(x,x,x)+141j
		mov	eax, 1
		mov	ebx, [ebp+var_4]
		leave
		retn	0Ch
; ---------------------------------------------------------------------------

loc_6B288DF6:				; CODE XREF: __dyn_tls_init(x,x,x)+13j
		mov	ds:___mingw_usemthread_dll, 1
		mov	[esp+18h+lpLibFileName], offset	LibFileName ; "mingwm10.dll"
		call	_LoadLibraryA@4	; LoadLibraryA(x)
		sub	esp, 4
		test	eax, eax
		mov	ds:___mingw_mthread_hdll, eax
		jz	loc_6B288F16
		mov	[esp+18h+lpProcName], offset a__mingwthr_rem ; "__mingwthr_remove_key_dtor"
		mov	[esp+18h+lpLibFileName], eax ; hModule
		call	_GetProcAddress@8 ; GetProcAddress(x,x)
		sub	esp, 8
		mov	ds:___mingw_gMTRemoveKeyDtor, eax
		mov	[esp+18h+lpProcName], offset a__mingwthr_key ; "__mingwthr_key_dtor"
		mov	eax, ds:___mingw_mthread_hdll
		mov	[esp+18h+lpLibFileName], eax ; hModule
		call	_GetProcAddress@8 ; GetProcAddress(x,x)
		mov	ds:___mingw_gMTKeyDtor,	eax
		mov	eax, ds:___mingw_mthread_hdll
		sub	esp, 8
		test	eax, eax
		jz	loc_6B288F16
		mov	ecx, ds:___mingw_gMTRemoveKeyDtor
		test	ecx, ecx
		jz	short loc_6B288EA7
		mov	edx, ds:___mingw_gMTKeyDtor
		test	edx, edx
		jz	short loc_6B288EA7
		mov	ds:__CRT_MT, 1
		mov	eax, 1
		mov	ebx, [ebp+var_4]
		leave
		retn	0Ch
; ---------------------------------------------------------------------------

loc_6B288E88:				; CODE XREF: __dyn_tls_init(x,x,x)+34j
		mov	eax, [ebp+arg_8]
		mov	[esp+18h+lpProcName], 1
		mov	[esp+18h+var_10], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+lpLibFileName], eax
		call	___mingw_TLScallback
		jmp	loc_6B288DEA
; ---------------------------------------------------------------------------

loc_6B288EA7:				; CODE XREF: __dyn_tls_init(x,x,x)+B6j
					; __dyn_tls_init(x,x,x)+C0j
		mov	ds:___mingw_gMTKeyDtor,	0
		mov	ds:___mingw_gMTRemoveKeyDtor, 0
		mov	[esp+18h+lpLibFileName], eax ; hLibModule
		call	_FreeLibrary@4	; FreeLibrary(x)
		sub	esp, 4

loc_6B288EC6:				; CODE XREF: __dyn_tls_init(x,x,x)+17Aj
		mov	ds:___mingw_mthread_hdll, 0
		mov	eax, 1
		mov	ds:__CRT_MT, 0
		mov	ebx, [ebp+var_4]
		leave
		retn	0Ch
; ---------------------------------------------------------------------------

loc_6B288EE6:				; CODE XREF: __dyn_tls_init(x,x,x)+2Bj
		mov	ebx, offset ___xd_z
		cmp	ebx, offset ___xd_z
		jz	loc_6B288DEA

loc_6B288EF7:				; CODE XREF: __dyn_tls_init(x,x,x)+158j
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_6B288EFF
		call	eax

loc_6B288EFF:				; CODE XREF: __dyn_tls_init(x,x,x)+14Bj
		add	ebx, 4
		cmp	ebx, offset ___xd_z
		jnz	short loc_6B288EF7
		mov	eax, 1
		mov	ebx, [ebp+var_4]
		leave
		retn	0Ch
; ---------------------------------------------------------------------------

loc_6B288F16:				; CODE XREF: __dyn_tls_init(x,x,x)+66j
					; __dyn_tls_init(x,x,x)+A8j
		mov	ds:___mingw_gMTKeyDtor,	0
		mov	ds:___mingw_gMTRemoveKeyDtor, 0
		jmp	short loc_6B288EC6
___dyn_tls_init@12 endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn bp-based	frame

; int __cdecl __report_error(char *Format, char	ArgList)
___report_error	proc near		; CODE XREF: ___write_memory+CDp
					; __pei386_runtime_relocator+CDp ...

Str		= dword	ptr -18h
Size		= dword	ptr -14h
Count		= dword	ptr -10h
File		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
Format		= dword	ptr  8
ArgList		= byte ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	[ebp+var_8], ebx
		mov	ebx, ds:__imp___iob
		mov	[ebp+var_4], esi
		lea	esi, [ebp+ArgList]
		mov	[esp+18h+Count], 17h ; Count
		mov	[esp+18h+Size],	1 ; Size
		add	ebx, 40h
		mov	[esp+18h+File],	ebx ; File
		mov	[esp+18h+Str], offset aMingwRuntimeFa ;	"Mingw runtime failure:\n"
		call	_fwrite
		mov	eax, [ebp+Format]
		mov	[esp+18h+Count], esi ; ArgList
		mov	[esp+18h+Str], ebx ; File
		mov	[esp+18h+Size],	eax ; Format
		call	_vfprintf
		call	_abort
___report_error	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __fastcall __write_memory(size_t Size, void *Src)
___write_memory	proc near		; CODE XREF: __pei386_runtime_relocator+FCp
					; __pei386_runtime_relocator+128p ...

lpAddress	= dword	ptr -48h
lpBuffer	= dword	ptr -44h
dwLength	= dword	ptr -40h
lpflOldProtect	= dword	ptr -3Ch
Buffer		= _MEMORY_BASIC_INFORMATION ptr	-38h
flOldProtect	= dword	ptr -1Ch
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		sub	esp, 48h
		test	ecx, ecx
		mov	[ebp+var_C], ebx
		mov	ebx, eax
		mov	[ebp+var_8], esi
		mov	esi, edx
		mov	[ebp+var_4], edi
		mov	edi, ecx
		jnz	short loc_6B288FA6

loc_6B288F99:				; CODE XREF: ___write_memory+8Bj
					; ___write_memory+90j ...
		mov	ebx, [ebp+var_C]
		mov	esi, [ebp+var_8]
		mov	edi, [ebp+var_4]
		mov	esp, ebp
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6B288FA6:				; CODE XREF: ___write_memory+17j
		lea	eax, [ebp+Buffer]
		mov	[esp+48h+dwLength], 1Ch	; dwLength
		mov	[esp+48h+lpBuffer], eax	; lpBuffer
		mov	[esp+48h+lpAddress], ebx ; lpAddress
		call	_VirtualQuery@12 ; VirtualQuery(x,x,x)
		sub	esp, 0Ch
		test	eax, eax
		jz	short loc_6B28903A
		mov	eax, [ebp+Buffer.Protect]
		cmp	eax, 4
		jz	short loc_6B288FF5
		cmp	eax, 40h
		jz	short loc_6B288FF5
		lea	eax, [ebp+flOldProtect]
		mov	[esp+48h+lpflOldProtect], eax ;	lpflOldProtect
		mov	eax, [ebp+Buffer.RegionSize]
		mov	[esp+48h+dwLength], 40h	; flNewProtect
		mov	[esp+48h+lpBuffer], eax	; dwSize
		mov	eax, [ebp+Buffer.BaseAddress]
		mov	[esp+48h+lpAddress], eax ; lpAddress
		call	_VirtualProtect@16 ; VirtualProtect(x,x,x,x)
		sub	esp, 10h

loc_6B288FF5:				; CODE XREF: ___write_memory+4Aj
					; ___write_memory+4Fj
		mov	[esp+48h+dwLength], edi	; Size
		mov	[esp+48h+lpBuffer], esi	; Src
		mov	[esp+48h+lpAddress], ebx ; Dst
		call	_memcpy
		mov	eax, [ebp+Buffer.Protect]
		cmp	eax, 4
		jz	short loc_6B288F99
		cmp	eax, 40h
		jz	short loc_6B288F99
		lea	eax, [ebp+flOldProtect]
		mov	[esp+48h+lpflOldProtect], eax ;	lpflOldProtect
		mov	eax, [ebp+flOldProtect]
		mov	[esp+48h+dwLength], eax	; flNewProtect
		mov	eax, [ebp+Buffer.RegionSize]
		mov	[esp+48h+lpBuffer], eax	; dwSize
		mov	eax, [ebp+Buffer.BaseAddress]
		mov	[esp+48h+lpAddress], eax ; lpAddress
		call	_VirtualProtect@16 ; VirtualProtect(x,x,x,x)
		sub	esp, 10h
		jmp	loc_6B288F99
; ---------------------------------------------------------------------------

loc_6B28903A:				; CODE XREF: ___write_memory+42j
		mov	[esp+48h+dwLength], ebx
		mov	[esp+48h+lpBuffer], 1Ch	; ArgList
		mov	[esp+48h+lpAddress], offset aVirtualqueryFa ; "	 VirtualQuery failed for %d bytes at a"...
		call	___report_error
___write_memory	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public __pei386_runtime_relocator
__pei386_runtime_relocator proc	near	; CODE XREF: DllMainCRTStartup(x,x,x):loc_6B28115Dp

Format		= dword	ptr -38h
ArgList		= byte ptr -34h
Src		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		sub	esp, 38h
		mov	eax, ds:_was_init_31087
		mov	[ebp+var_C], ebx
		mov	[ebp+var_8], esi
		mov	[ebp+var_4], edi
		test	eax, eax
		jz	short loc_6B289085

loc_6B289078:				; CODE XREF: __pei386_runtime_relocator+3Cj
					; __pei386_runtime_relocator+92j ...
		mov	ebx, [ebp+var_C]
		mov	esi, [ebp+var_8]
		mov	edi, [ebp+var_4]
		mov	esp, ebp
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6B289085:				; CODE XREF: __pei386_runtime_relocator+16j
		mov	eax, offset __RUNTIME_PSEUDO_RELOC_LIST_END__
		sub	eax, offset __RUNTIME_PSEUDO_RELOC_LIST_END__
		cmp	eax, 7
		mov	ds:_was_init_31087, 1
		jle	short loc_6B289078
		cmp	eax, 0Bh
		mov	ebx, offset __RUNTIME_PSEUDO_RELOC_LIST_END__
		jle	short loc_6B2890D0
		mov	edi, ds:__RUNTIME_PSEUDO_RELOC_LIST_END__
		test	edi, edi
		jnz	short loc_6B2890D0
		mov	esi, ds:dword_6B28C1B0
		test	esi, esi
		jnz	short loc_6B2890D0
		mov	ecx, ds:dword_6B28C1B4
		test	ecx, ecx
		jnz	short loc_6B2890D0
		mov	ebx, offset dword_6B28C1B8
		nop
		lea	esi, [esi+0]

loc_6B2890D0:				; CODE XREF: __pei386_runtime_relocator+46j
					; __pei386_runtime_relocator+50j ...
		mov	edx, [ebx]
		test	edx, edx
		jnz	short loc_6B289132
		mov	eax, [ebx+4]
		test	eax, eax
		jnz	short loc_6B289132
		mov	eax, [ebx+8]
		cmp	eax, 1
		jnz	loc_6B2891F6
		add	ebx, 0Ch
		cmp	ebx, offset __RUNTIME_PSEUDO_RELOC_LIST_END__
		jnb	short loc_6B289078
		mov	esi, 6B280000h

loc_6B2890F9:				; CODE XREF: __pei386_runtime_relocator+16Dj
		mov	eax, [ebx+4]
		mov	ecx, [ebx]
		movzx	edx, byte ptr [ebx+8]
		add	eax, esi
		add	ecx, esi
		cmp	edx, 10h
		mov	edi, [ecx]
		jz	short loc_6B289170
		cmp	edx, 20h
		jz	loc_6B2891B0
		cmp	edx, 8
		jz	short loc_6B289190
		mov	[ebp+var_1C], 0
		mov	dword ptr [esp+38h+ArgList], edx ; ArgList
		mov	[esp+38h+Format], offset aUnknownPseudoR ; "  Unknown pseudo relocation	bit size %d"...
		call	___report_error
; ---------------------------------------------------------------------------

loc_6B289132:				; CODE XREF: __pei386_runtime_relocator+74j
					; __pei386_runtime_relocator+7Bj
		cmp	ebx, offset __RUNTIME_PSEUDO_RELOC_LIST_END__
		jnb	loc_6B289078
		mov	esi, 6B280000h
		lea	edi, [ebp+Src]

loc_6B289146:				; CODE XREF: __pei386_runtime_relocator+107j
		mov	eax, [ebx+4]
		mov	ecx, 4		; Size
		add	eax, esi
		mov	edx, [eax]
		add	edx, [ebx]
		add	ebx, 8
		mov	[ebp+Src], edx
		mov	edx, edi	; Src
		call	___write_memory
		cmp	ebx, offset __RUNTIME_PSEUDO_RELOC_LIST_END__
		jb	short loc_6B289146
		jmp	loc_6B289078
; ---------------------------------------------------------------------------
		align 10h

loc_6B289170:				; CODE XREF: __pei386_runtime_relocator+ABj
		movzx	edx, word ptr [eax]
		test	dx, dx
		js	short loc_6B2891E7
		sub	edx, ecx
		lea	edi, [edx+edi]
		mov	[ebp+var_1C], edi

loc_6B289180:				; CODE XREF: __pei386_runtime_relocator+194j
		mov	ecx, 2		; Size
		lea	edx, [ebp+var_1C] ; Src
		call	___write_memory
		jmp	short loc_6B2891C4
; ---------------------------------------------------------------------------
		align 10h

loc_6B289190:				; CODE XREF: __pei386_runtime_relocator+B9j
		movzx	edx, byte ptr [eax]
		test	dl, dl
		js	short loc_6B2891D8
		sub	edx, ecx
		lea	edi, [edx+edi]
		mov	[ebp+var_1C], edi

loc_6B28919F:				; CODE XREF: __pei386_runtime_relocator+185j
		mov	ecx, 1		; Size
		lea	edx, [ebp+var_1C] ; Src
		call	___write_memory
		jmp	short loc_6B2891C4
; ---------------------------------------------------------------------------
		align 10h

loc_6B2891B0:				; CODE XREF: __pei386_runtime_relocator+B0j
		add	edi, [eax]
		lea	edx, [ebp+var_1C] ; Src
		sub	edi, ecx
		mov	ecx, 4		; Size
		mov	[ebp+var_1C], edi
		call	___write_memory

loc_6B2891C4:				; CODE XREF: __pei386_runtime_relocator+12Dj
					; __pei386_runtime_relocator+14Cj
		add	ebx, 0Ch
		cmp	ebx, offset __RUNTIME_PSEUDO_RELOC_LIST_END__
		jb	loc_6B2890F9
		jmp	loc_6B289078
; ---------------------------------------------------------------------------

loc_6B2891D8:				; CODE XREF: __pei386_runtime_relocator+135j
		or	edx, 0FFFFFF00h
		sub	edx, ecx
		add	edx, edi
		mov	[ebp+var_1C], edx
		jmp	short loc_6B28919F
; ---------------------------------------------------------------------------

loc_6B2891E7:				; CODE XREF: __pei386_runtime_relocator+116j
		or	edx, 0FFFF0000h
		sub	edx, ecx
		add	edx, edi
		mov	[ebp+var_1C], edx
		jmp	short loc_6B289180
; ---------------------------------------------------------------------------

loc_6B2891F6:				; CODE XREF: __pei386_runtime_relocator+83j
		mov	dword ptr [esp+38h+ArgList], eax ; ArgList
		mov	[esp+38h+Format], offset aUnknownPseud_0 ; "  Unknown pseudo relocation	protocol ve"...
		call	___report_error
__pei386_runtime_relocator endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __cdecl __do_global_dtors()
		public ___do_global_dtors
___do_global_dtors proc	near		; DATA XREF: ___do_global_ctors:loc_6B28926Ao
		push	ebp
		mov	ebp, esp
		sub	esp, 8
		mov	eax, _p_1653
		mov	eax, [eax]
		test	eax, eax
		jz	short locret_6B289238

loc_6B289221:				; CODE XREF: ___do_global_dtors+26j
		call	eax
		mov	eax, _p_1653
		lea	edx, [eax+4]
		mov	eax, [eax+4]
		mov	_p_1653, edx
		test	eax, eax
		jnz	short loc_6B289221

locret_6B289238:			; CODE XREF: ___do_global_dtors+Fj
		leave
		retn
___do_global_dtors endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public ___do_global_ctors
___do_global_ctors proc	near		; CODE XREF: ___main+1Dj

var_18		= dword	ptr -18h

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	ebx, ds:___CTOR_LIST__
		cmp	ebx, 0FFFFFFFFh
		jz	short loc_6B289280

loc_6B289253:				; CODE XREF: ___do_global_ctors+54j
		test	ebx, ebx
		jz	short loc_6B28926A
		lea	esi, ___CTOR_LIST__[ebx*4]
		xchg	ax, ax

loc_6B289260:				; CODE XREF: ___do_global_ctors+28j
		call	dword ptr [esi]
		sub	esi, 4
		sub	ebx, 1
		jnz	short loc_6B289260

loc_6B28926A:				; CODE XREF: ___do_global_ctors+15j
		mov	[esp+18h+var_18], offset ___do_global_dtors ; void (__cdecl *)()
		call	_atexit
		add	esp, 10h
		pop	ebx
		pop	esi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6B289280:				; CODE XREF: ___do_global_ctors+11j
		xor	ebx, ebx
		jmp	short loc_6B289286
; ---------------------------------------------------------------------------

loc_6B289284:				; CODE XREF: ___do_global_ctors+52j
		mov	ebx, eax

loc_6B289286:				; CODE XREF: ___do_global_ctors+42j
		lea	eax, [ebx+1]
		mov	edx, ds:___CTOR_LIST__[eax*4]
		test	edx, edx
		jnz	short loc_6B289284
		jmp	short loc_6B289253
___do_global_ctors endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public ___main
___main		proc near		; CODE XREF: DllMainCRTStartup(x,x,x)+A2p
		push	ebp
		mov	ebp, esp
		sub	esp, 8
		mov	ecx, ds:_initialized
		test	ecx, ecx
		jz	short loc_6B2892B2
		leave
		retn
; ---------------------------------------------------------------------------

loc_6B2892B2:				; CODE XREF: ___main+Ej
		mov	ds:_initialized, 1
		leave
		jmp	short ___do_global_ctors
___main		endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; BOOL __stdcall DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved)
		public _DllMain@12
_DllMain@12	proc near		; CODE XREF: DllMainCRTStartup(x,x,x)+28p
					; DllMainCRTStartup(x,x,x)+B6p

hinstDLL	= dword	ptr  8
fdwReason	= dword	ptr  0Ch
lpvReserved	= dword	ptr  10h

		push	ebp
		mov	eax, 1
		mov	ebp, esp
		pop	ebp
		retn	0Ch
_DllMain@12	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

___mingwthr_run_key_dtors proc near	; CODE XREF: ___mingw_TLScallback+15p
					; ___mingw_TLScallback:loc_6B289371p

lpCriticalSection= dword ptr -18h

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	eax, ds:___mingwthr_cs_init
		test	eax, eax
		jnz	short loc_6B2892E8
		lea	esp, [ebp-8]
		pop	ebx
		pop	esi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6B2892E8:				; CODE XREF: ___mingwthr_run_key_dtors+Fj
		mov	[esp+18h+lpCriticalSection], offset ___mingwthr_cs ; lpCriticalSection
		call	_EnterCriticalSection@4	; EnterCriticalSection(x)
		mov	ebx, ds:_key_dtor_list
		sub	esp, 4
		test	ebx, ebx
		jz	short loc_6B28932C

loc_6B289301:				; CODE XREF: ___mingwthr_run_key_dtors+5Aj
		mov	eax, [ebx]
		mov	[esp+18h+lpCriticalSection], eax ; dwTlsIndex
		call	_TlsGetValue@4	; TlsGetValue(x)
		sub	esp, 4
		mov	esi, eax
		call	_GetLastError@0	; GetLastError()
		test	eax, eax
		jnz	short loc_6B289325
		test	esi, esi
		jz	short loc_6B289325
		mov	eax, [ebx+4]
		mov	[esp+18h+lpCriticalSection], esi
		call	eax

loc_6B289325:				; CODE XREF: ___mingwthr_run_key_dtors+47j
					; ___mingwthr_run_key_dtors+4Bj
		mov	ebx, [ebx+8]
		test	ebx, ebx
		jnz	short loc_6B289301

loc_6B28932C:				; CODE XREF: ___mingwthr_run_key_dtors+2Fj
		mov	[esp+18h+lpCriticalSection], offset ___mingwthr_cs ; lpCriticalSection
		call	_LeaveCriticalSection@4	; LeaveCriticalSection(x)
		sub	esp, 4
		lea	esp, [ebp-8]
		pop	ebx
		pop	esi
		pop	ebp
		retn
___mingwthr_run_key_dtors endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public ___mingw_TLScallback
___mingw_TLScallback proc near		; CODE XREF: __dyn_tls_dtor(x,x,x)+1Ep
					; __dyn_tls_init(x,x,x)+EDp

lpCriticalSection= dword ptr -18h
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+arg_4]
		cmp	eax, 1
		jz	short loc_6B2893A0
		jb	short loc_6B289371
		cmp	eax, 3
		jnz	short loc_6B28936A
		call	___mingwthr_run_key_dtors

loc_6B28936A:				; CODE XREF: ___mingw_TLScallback+13j
					; ___mingw_TLScallback+2Ej ...
		mov	eax, 1
		leave
		retn
; ---------------------------------------------------------------------------

loc_6B289371:				; CODE XREF: ___mingw_TLScallback+Ej
		call	___mingwthr_run_key_dtors
		mov	eax, ds:___mingwthr_cs_init
		cmp	eax, 1
		jnz	short loc_6B28936A
		mov	ds:___mingwthr_cs_init,	0
		mov	[esp+18h+lpCriticalSection], offset ___mingwthr_cs ; lpCriticalSection
		call	_DeleteCriticalSection@4 ; DeleteCriticalSection(x)
		sub	esp, 4
		jmp	short loc_6B28936A
; ---------------------------------------------------------------------------
		align 10h

loc_6B2893A0:				; CODE XREF: ___mingw_TLScallback+Cj
		mov	eax, ds:___mingwthr_cs_init
		test	eax, eax
		jz	short loc_6B2893C0

loc_6B2893A9:				; CODE XREF: ___mingw_TLScallback+7Fj
		mov	ds:___mingwthr_cs_init,	1
		mov	eax, 1
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6B2893C0:				; CODE XREF: ___mingw_TLScallback+57j
		mov	[esp+18h+lpCriticalSection], offset ___mingwthr_cs ; lpCriticalSection
		call	_InitializeCriticalSection@4 ; InitializeCriticalSection(x)
		sub	esp, 4
		jmp	short loc_6B2893A9
___mingw_TLScallback endp

; ---------------------------------------------------------------------------
		jmp	short ____w64_mingwthr_remove_key_dtor
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public ____w64_mingwthr_remove_key_dtor
____w64_mingwthr_remove_key_dtor proc near ; CODE XREF:	.text:6B2893D1j

lpCriticalSection= dword ptr -18h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	eax, ds:___mingwthr_cs_init
		mov	ebx, [ebp+arg_0]
		test	eax, eax
		jnz	short loc_6B289400
		xor	eax, eax
		mov	ebx, [ebp+var_4]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6B289400:				; CODE XREF: ____w64_mingwthr_remove_key_dtor+11j
		mov	[esp+18h+lpCriticalSection], offset ___mingwthr_cs ; lpCriticalSection
		call	_EnterCriticalSection@4	; EnterCriticalSection(x)
		mov	eax, ds:_key_dtor_list
		sub	esp, 4
		test	eax, eax
		jz	short loc_6B28942F
		mov	edx, [eax]
		cmp	edx, ebx
		jnz	short loc_6B289426
		jmp	short loc_6B289464
; ---------------------------------------------------------------------------

loc_6B289420:				; CODE XREF: ____w64_mingwthr_remove_key_dtor+4Dj
		mov	edx, [eax]
		cmp	edx, ebx
		jz	short loc_6B289445

loc_6B289426:				; CODE XREF: ____w64_mingwthr_remove_key_dtor+3Cj
		mov	ecx, eax
		mov	eax, [eax+8]
		test	eax, eax
		jnz	short loc_6B289420

loc_6B28942F:				; CODE XREF: ____w64_mingwthr_remove_key_dtor+36j
		mov	[esp+18h+lpCriticalSection], offset ___mingwthr_cs ; lpCriticalSection
		call	_LeaveCriticalSection@4	; LeaveCriticalSection(x)
		sub	esp, 4

loc_6B28943E:				; CODE XREF: ____w64_mingwthr_remove_key_dtor+82j
		xor	eax, eax
		mov	ebx, [ebp+var_4]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6B289445:				; CODE XREF: ____w64_mingwthr_remove_key_dtor+44j
		mov	edx, [eax+8]
		mov	[ecx+8], edx

loc_6B28944B:				; CODE XREF: ____w64_mingwthr_remove_key_dtor+8Dj
		mov	[esp+18h+lpCriticalSection], eax ; Memory
		call	_free
		mov	[esp+18h+lpCriticalSection], offset ___mingwthr_cs ; lpCriticalSection
		call	_LeaveCriticalSection@4	; LeaveCriticalSection(x)
		sub	esp, 4
		jmp	short loc_6B28943E
; ---------------------------------------------------------------------------

loc_6B289464:				; CODE XREF: ____w64_mingwthr_remove_key_dtor+3Ej
		mov	edx, [eax+8]
		mov	ds:_key_dtor_list, edx
		jmp	short loc_6B28944B
____w64_mingwthr_remove_key_dtor endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public ____w64_mingwthr_add_key_dtor
____w64_mingwthr_add_key_dtor proc near

NumOfElements	= dword	ptr -18h
SizeOfElements	= dword	ptr -14h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	eax, ds:___mingwthr_cs_init
		test	eax, eax
		jnz	short loc_6B289485

loc_6B289480:				; CODE XREF: ____w64_mingwthr_add_key_dtor+32j
					; ____w64_mingwthr_add_key_dtor+6Dj
		mov	ebx, [ebp+var_4]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6B289485:				; CODE XREF: ____w64_mingwthr_add_key_dtor+Ej
		mov	[esp+18h+SizeOfElements], 0Ch ;	SizeOfElements
		mov	[esp+18h+NumOfElements], 1 ; NumOfElements
		call	_calloc
		mov	ebx, eax
		mov	eax, 0FFFFFFFFh
		test	ebx, ebx
		jz	short loc_6B289480
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+NumOfElements], offset	___mingwthr_cs ; lpCriticalSection
		mov	[ebx], eax
		mov	eax, [ebp+arg_4]
		mov	[ebx+4], eax
		call	_EnterCriticalSection@4	; EnterCriticalSection(x)
		mov	eax, ds:_key_dtor_list
		mov	ds:_key_dtor_list, ebx
		mov	[ebx+8], eax
		sub	esp, 4
		mov	[esp+18h+NumOfElements], offset	___mingwthr_cs ; lpCriticalSection
		call	_LeaveCriticalSection@4	; LeaveCriticalSection(x)
		xor	eax, eax
		sub	esp, 4
		jmp	short loc_6B289480
____w64_mingwthr_add_key_dtor endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; void *__cdecl	_alloca(size_t Size)
		public __alloca
__alloca	proc near		; CODE XREF: _itemize_shape_and_place_clone_2+Cp

Size		= dword	ptr  4

		push	ecx
		lea	ecx, [esp+4+Size]
		cmp	eax, 1000h
		jb	short loc_6B289501

loc_6B2894EC:				; CODE XREF: __alloca+1Fj
		sub	ecx, 1000h
		or	dword ptr [ecx], 0
		sub	eax, 1000h
		cmp	eax, 1000h
		ja	short loc_6B2894EC

loc_6B289501:				; CODE XREF: __alloca+Aj
		sub	ecx, eax
		or	dword ptr [ecx], 0
		mov	eax, esp
		mov	esp, ecx
		mov	ecx, [eax]
		mov	eax, [eax+4]
		push	eax
		retn
__alloca	endp

; ---------------------------------------------------------------------------
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION ___dllonexit]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _free]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _fflush]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _malloc]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION __errno]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _getenv]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _wcscmp]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _wcscpy]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _wcslen]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _sprintf]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _floor]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _fwrite]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _vfprintf]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _abort]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _memcpy]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _calloc]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION SystemParametersInfoA(x,x,x,x)]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION GetModuleHandleA(x)]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION GetProcAddress(x,x)]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION GetLastError()]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION GetVersionExA(x)]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION WideCharToMultiByte(x,x,x,x,x,x,x,x)]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION MultiByteToWideChar(x,x,x,x,x,x)]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION GetLocaleInfoA(x,x,x,x)]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION LoadLibraryA(x)]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION FreeLibrary(x)]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION VirtualQuery(x,x,x)]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION VirtualProtect(x,x,x,x)]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION TlsGetValue(x)]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION DeleteCriticalSection(x)]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION InitializeCriticalSection(x)]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION EnterCriticalSection(x)]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION LeaveCriticalSection(x)]
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_register_frame_ctor proc near		; DATA XREF: .text:6B28963Co

var_18		= dword	ptr -18h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		call	___gcc_register_frame
		mov	[esp+18h+var_18], offset ___gcc_deregister_frame ; void	(__cdecl *)()
		call	_atexit
		leave
		retn
_register_frame_ctor endp

; ---------------------------------------------------------------------------
		align 4
		public ___CTOR_LIST__
___CTOR_LIST__	dd 0FFFFFFFFh		; DATA XREF: ___do_global_ctors+8r
					; ___do_global_ctors+17o ...
		dd offset _register_frame_ctor
		dd 0
		public __DTOR_LIST__
__DTOR_LIST__	dd 0FFFFFFFFh
dword_6B289648	dd 6Eh dup(0)		; DATA XREF: .data:_p_1653o
		dd 200h	dup(?)
_text		ends

; Section 2. (virtual address 0000A000)
; Virtual size			: 00000044 (	 68.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 00008C00
; Flags	C0600040: Data Readable	Writable
; Alignment	: 32 bytes
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
; Segment alignment '32byte' can not be represented in assembly
_data		segment	para public 'DATA' use32
		assume cs:_data
		;org 6B28A000h
		public __pango_included_win32_modules
__pango_included_win32_modules dd offset __pango_basic_win32_script_engine_list
					; DATA XREF: __pango_win32_font_map_class_intern_init+63r
					; __pango_win32_font_map_class_intern_init+79o
		dd offset __pango_basic_win32_script_engine_init
		dd offset __pango_basic_win32_script_engine_exit
		dd offset __pango_basic_win32_script_engine_create
dword_6B28A010	dd 4 dup(0)		; DATA XREF: __pango_win32_font_map_class_intern_init+6Co
_script_engines	dd offset aBasicscripteng
					; DATA XREF: __pango_basic_win32_script_engine_list+22o
					; "BasicScriptEngineWin32"
		dd offset aPangoengines_0 ; "PangoEngineShape"
		dd offset aPangorenderw_1 ; "PangoRenderWin32"
dword_6B28A02C	dd 0			; DATA XREF: __pango_basic_win32_script_engine_list+Bw
dword_6B28A030	dd 0			; DATA XREF: __pango_basic_win32_script_engine_list+15w
_uniscribe_scripts dd 0			; DATA XREF: __pango_basic_win32_script_engine_list+Bo
		dd offset byte_6B28BC2F
_p_1653		dd offset dword_6B289648 ; DATA	XREF: ___do_global_dtors+6r
					; ___do_global_dtors+13r ...
___JCR_END__	dd 0			; DATA XREF: ___gcc_register_frame:loc_6B2811EFr
					; ___gcc_register_frame+71o
		public __data_end__
__data_end__	dd 6Fh dup(0)
		align 1000h
_data		ends

; Section 3. (virtual address 0000B000)
; Virtual size			: 000011AC (   4524.)
; Section size in file		: 00001200 (   4608.)
; Offset to raw	data for section: 00008E00
; Flags	40600040: Data Readable
; Alignment	: 32 bytes
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment '32byte' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 6B28B000h
; CHAR ModuleName[]
ModuleName	db 'libgcc_s_dw2-1.dll',0 ; DATA XREF: ___gcc_register_frame+6o
					; ___gcc_deregister_frame+6o
; CHAR ProcName[]
ProcName	db '__register_frame_info',0 ; DATA XREF: ___gcc_register_frame+17o
; CHAR aLibgcj11_dll[]
aLibgcj11_dll	db 'libgcj-11.dll',0    ; DATA XREF: ___gcc_register_frame+49o
; CHAR a_jv_registercl[]
a_jv_registercl	db '_Jv_RegisterClasses',0 ; DATA XREF: ___gcc_register_frame+5Ao
; CHAR a__deregister_f[]
a__deregister_f	db '__deregister_frame_info',0 ; DATA XREF: ___gcc_deregister_frame+17o
		align 20h
aPangoenginesha	db 'PangoEngineShape',0 ; DATA XREF: _pango_win32_font_find_shaper:loc_6B2813DCo
aPangorenderwin	db 'PangoRenderWin32',0 ; DATA XREF: _pango_win32_font_find_shaper+59o
aZhTw		db 'zh-tw',0            ; DATA XREF: _pango_win32_coverage_language_classify+9o
aZhCn		db 'zh-cn',0            ; DATA XREF: _pango_win32_coverage_language_classify+1Do
aJa		db 'ja',0               ; DATA XREF: _pango_win32_coverage_language_classify+31o
aKo		db 'ko',0               ; DATA XREF: _pango_win32_coverage_language_classify+45o
aVi		db 'vi',0               ; DATA XREF: _pango_win32_coverage_language_classify+59o
aWin32fontFontm	db 'win32font->fontmap != NULL',0
					; DATA XREF: _pango_win32_font_finalize:loc_6B281590o
aPangowin32_c	db 'pangowin32.c',0     ; DATA XREF: _pango_win32_font_finalize+F8o
					; _pango_win32_font_get_glyph_index+27Do ...
aPango		db 'Pango',0            ; DATA XREF: _pango_win32_font_finalize+100o
					; __pango_win32_font_get_hfont+90o ...
aCannotLoadFont	db 'Cannot load font ',27h,'%s',0Ah,0
					; DATA XREF: __pango_win32_font_get_hfont+80o
		align 4
aPango_win32_fo	db 'pango_win32_font_real_select_font: Cannot select font',0Ah,0
					; DATA XREF: _pango_win32_font_real_select_font:loc_6B28170Co
		align 4
aGetglyphoutlin	db 'GetGlyphOutline(%04X) failed: %s',0Ah,0
					; DATA XREF: _pango_win32_font_get_glyph_extents+221o
aPangowin32font	db 'PangoWin32Font',0   ; DATA XREF: __pango_win32_font_get_type+2Co
; CHAR pwszDriver[]
pwszDriver	db 'DISPLAY',0          ; DATA XREF: _pango_win32_get_dc+30o
; char VarName[]
VarName		db 'PANGO_WIN32_DEBUG',0 ; DATA XREF: _pango_win32_get_dc+67o
aSD		db '%s:%d ',0           ; DATA XREF: _pango_win32_render+4Ao
					; _pango_win32_font_get_coverage+335o ...
aNum_glyphsD	db 'num_glyphs:%d',0    ; DATA XREF: _pango_win32_render+5Fo
asc_6B28B194	db 0Ah,0		; DATA XREF: _pango_win32_render+6Bo
					; _pango_win32_render:loc_6B281D9Fo ...
aDD		db ' %d:%d',0           ; DATA XREF: _pango_win32_render+C1o
aDD_0		db ':%d,%d',0           ; DATA XREF: _pango_win32_render+9Bo
aExttextoutwAtD	db 'ExtTextOutW at %d,%d deltas:',0 ; DATA XREF: _pango_win32_render+327o
aD		db ' %d',0              ; DATA XREF: _pango_win32_render+347o
aGlyphsNull	db 'glyphs != NULL',0   ; DATA XREF: _pango_win32_render:loc_6B28205Ao
aSetgraphicsmod	db 'SetGraphicsMode() failed',0
					; DATA XREF: _pango_win32_render_transformed:loc_6B2821CCo
aGetworldtransf	db 'GetWorldTransform() failed',0
					; DATA XREF: _pango_win32_render_transformed:loc_6B28218Co
aFontNull	db 'font != NULL',0     ; DATA XREF: _pango_win32_font_logfont:loc_6B2822CCo
					; _pango_win32_font_logfontw:loc_6B282368o
aPango_win32_is	db 'PANGO_WIN32_IS_FONT (font)',0 ; DATA XREF: _pango_win32_font_logfont+39o
					; _pango_win32_font_logfontw+2Eo ...
aHdcNull	db 'hdc != NULL',0      ; DATA XREF: _pango_win32_render_layout:loc_6B282D8Co
aPango_is_layou	db 'PANGO_IS_LAYOUT (layout)',0
					; DATA XREF: _pango_win32_render_layout:loc_6B282CE6o
aFontSLangS	db 'font:%s lang:%s',0  ; DATA XREF: _pango_win32_font_get_coverage+352o
		align 4
aPlatformDEncod	db 'platform:%d encoding:%d language:%04x name_id:%d',0
					; DATA XREF: _pango_win32_font_get_coverage+7D4o
aYepD04x	db 'yep:%d:%04x',0      ; DATA XREF: _pango_win32_font_get_coverage+763o
aHidingUnihanCh	db 'hiding UniHan chars',0 ; DATA XREF: _pango_win32_font_get_coverage+886o
aCoverage	db 'coverage:',0        ; DATA XREF: _pango_win32_font_get_coverage+38Eo
a04x		db '%04x ',0            ; DATA XREF: _pango_win32_font_get_coverage+314o
					; _pango_win32_font_get_coverage+608o ...
a04x04x		db '%04x:%04x ',0       ; DATA XREF: _pango_win32_font_get_coverage+245o
					; _pango_win32_font_get_coverage+426o ...
a0123456789	db '0123456789',0       ; DATA XREF: _pango_win32_font_get_metrics+19Ao
		align 10h
___PRETTY_FUNCTION___42410 db 'pango_win32_font_get_glyph_index',0
					; DATA XREF: _pango_win32_font_get_glyph_index+26Do
___PRETTY_FUNCTION___42219 db 'pango_win32_render_layout',0
					; DATA XREF: _pango_win32_render_layout+42o
					; _pango_win32_render_layout+E8o
		align 10h
___PRETTY_FUNCTION___42103 db 'pango_win32_font_get_metrics_factor',0
					; DATA XREF: _pango_win32_font_get_metrics_factor+36o
___PRETTY_FUNCTION___42093 db 'pango_win32_font_done_font',0
					; DATA XREF: _pango_win32_font_done_font+36o
___PRETTY_FUNCTION___42083 db 'pango_win32_font_select_font',0
					; DATA XREF: _pango_win32_font_select_font+3Ao
___PRETTY_FUNCTION___42062 db 'pango_win32_font_logfontw',0
					; DATA XREF: _pango_win32_font_logfontw+36o
					; _pango_win32_font_logfontw+7Co
___PRETTY_FUNCTION___42044 db 'pango_win32_font_logfont',0
					; DATA XREF: _pango_win32_font_logfont+41o
					; _pango_win32_font_logfont+E4o
		align 10h
_C_29_50587	dd 3F800000h, 2	dup(0)	; DATA XREF: _pango_win32_render_transformed+12o
		dd 3F800000h, 2	dup(0)
___PRETTY_FUNCTION___41931 db 'pango_win32_render',0 ; DATA XREF: _pango_win32_render+42o
					; _pango_win32_render+3A5o
		align 4
_C_47_50822	dd 10000h, 2 dup(0)	; DATA XREF: _pango_win32_font_get_glyph_extents+18o
		dd 10000h
___PRETTY_FUNCTION___42490 db 'pango_win32_font_calc_coverage',0
					; DATA XREF: _pango_win32_font_get_coverage+32Do
					; _pango_win32_font_get_coverage+37Ao ...
___PRETTY_FUNCTION___42455 db 'font_has_name_in',0
					; DATA XREF: _pango_win32_font_get_coverage+740o
					; _pango_win32_font_get_coverage+7A0o
___PRETTY_FUNCTION___42128 db 'pango_win32_font_finalize',0
					; DATA XREF: _pango_win32_font_finalize+E8o
		align 4
flt_6B28B438	dd 1024.0		; DATA XREF: _pango_win32_font_real_get_metrics_factor+3r
					; _pango_win32_font_describe+48r
		align 10h
aSD_0		db '%s:%d ',0           ; DATA XREF: _free_cache_entry+48o
					; _cache_entry_unref+84o ...
		align 4
aDeleteobjectFo	db 'DeleteObject for hfont %p failed',0 ; DATA XREF: _free_cache_entry+5Bo
asc_6B28B469	db 0Ah,0		; DATA XREF: _free_cache_entry+67o
					; _cache_entry_unref+A3o ...
aRemovingCacheE	db 'removing cache entry %p',0 ; DATA XREF: _cache_entry_unref+97o
aCacheNull	db 'cache != NULL',0    ; DATA XREF: _pango_win32_font_cache_free:loc_6B283F40o
					; _pango_win32_font_cache_loadw:loc_6B2840C4o ...
aPango_0	db 'Pango',0            ; DATA XREF: _pango_win32_font_cache_free+6Co
					; _pango_win32_font_cache_loadw+110o ...
aStrikeout	db 'strikeout,',0       ; DATA XREF: _pango_win32_font_cache_loadw+30Co
byte_6B28B4A2	db 0			; DATA XREF: _pango_win32_font_cache_loadw:loc_6B2843E6o
					; _pango_win32_font_cache_loadw:loc_6B2843F5o ...
aUnderline	db 'underline,',0       ; DATA XREF: _pango_win32_font_cache_loadw+320o
aItalic		db 'italic,',0          ; DATA XREF: _pango_win32_font_cache_loadw+334o
		align 4
aIncreasedRefco	db 'increased refcount for cache entry %p: %d',0
					; DATA XREF: _pango_win32_font_cache_loadw+D6o
		align 4
a___TryingCreat	db '... trying CreateFontIndirect height=%ld,width=%ld,escapement=%ld'
					; DATA XREF: _pango_win32_font_cache_loadw+3A3o
		db ',orientation=%ld,weight=%ld,%s%s%scharset=%d,outprecision=%d,clip'
		db 'precision=%d,quality=%d,pitchandfamily=%#.02x,facename="%S")',0
aSuccessHfontP	db 'Success! hfont=%p',0 ; DATA XREF: _pango_win32_font_cache_loadw+574o
aHelvetica	db 'helvetica',0        ; DATA XREF: _pango_win32_font_cache_loadw+3EEo
					; _pango_win32_font_cache_loadw:loc_6B28463Do
		align 10h
; wchar_t Source
Source:					; DATA XREF: _pango_win32_font_cache_loadw+402o
		unicode	0, <arial>,0
aNewCenturyScho	db 'new century schoolbook',0
					; DATA XREF: _pango_win32_font_cache_loadw:loc_6B284413o
		align 4
; wchar_t aCenturySchoolb
aCenturySchoolb:			; DATA XREF: _pango_win32_font_cache_loadw+463o
		unicode	0, <century schoolbook>,0
aCourier	db 'courier',0          ; DATA XREF: _pango_win32_font_cache_loadw:loc_6B284439o
					; _pango_win32_font_cache_loadw+61Fo
; wchar_t aC
aC		db 'c',0                ; DATA XREF: _pango_win32_font_cache_loadw+48Do
aOurierNew:
		unicode	0, <ourier new>,0
aLucida		db 'lucida',0           ; DATA XREF: _pango_win32_font_cache_loadw:loc_6B2844E3o
					; _pango_win32_font_cache_loadw+68Do
		align 4
; wchar_t aLucidaSansUnic
aLucidaSansUnic:			; DATA XREF: _pango_win32_font_cache_loadw+533o
		unicode	0, <lucida sans	unicode>,0
aLucidatypewrit	db 'lucidatypewriter',0 ; DATA XREF: _pango_win32_font_cache_loadw:loc_6B28455Bo
		align 2
; wchar_t asc_6B28B66E
asc_6B28B66E	db 'l',0                ; DATA XREF: _pango_win32_font_cache_loadw+5ABo
aUcidaConsole:
		unicode	0, <ucida console>,0
aTimes		db 'times',0            ; DATA XREF: _pango_win32_font_cache_loadw:loc_6B284584o
		align 4
; wchar_t aTimesNewRoman
aTimesNewRoman:				; DATA XREF: _pango_win32_font_cache_loadw+5D8o
		unicode	0, <times new roman>,0
; wchar_t word_6B28B6B4
word_6B28B6B4	dw 0			; DATA XREF: _pango_win32_font_cache_loadw+633o
					; _pango_win32_font_cache_loadw+660o ...
aTimesNewRoma_0	db 'times new roman',0  ; DATA XREF: _pango_win32_font_cache_loadw:loc_6B284610o
aLfpNull	db 'lfp != NULL',0      ; DATA XREF: _pango_win32_font_cache_loadw:loc_6B2840ECo
aHfontNull	db 'hfont != NULL',0    ; DATA XREF: _pango_win32_font_cache_unload:loc_6B28476Co
aEntryNull	db 'entry != NULL',0    ; DATA XREF: _pango_win32_font_cache_unload:loc_6B284790o
___PRETTY_FUNCTION___41595 db 'pango_win32_font_cache_unload',0
					; DATA XREF: _pango_win32_font_cache_unload+40o
					; _pango_win32_font_cache_unload+64o ...
___PRETTY_FUNCTION___41562 db 'cache_entry_unref',0 ; DATA XREF: _cache_entry_unref+7Co
___PRETTY_FUNCTION___41529 db 'free_cache_entry',0 ; DATA XREF: _free_cache_entry+40o
___PRETTY_FUNCTION___41578 db 'pango_win32_font_cache_loadw',0
					; DATA XREF: _pango_win32_font_cache_loadw+B4o
					; _pango_win32_font_cache_loadw+108o ...
___PRETTY_FUNCTION___41535 db 'pango_win32_font_cache_free',0
					; DATA XREF: _pango_win32_font_cache_free+64o
		align 20h
aPangorenderw_0	db 'PangoRenderWin32',0 ; DATA XREF: __pango_win32_font_map_class_intern_init+57o
byte_6B28B791	db 0			; DATA XREF: _pango_win32_font_map_load_font:loc_6B284D20o
					; _pango_win32_insert_font+7Bo
aSD_1		db '%s:%d ',0           ; DATA XREF: _pango_win32_font_map_load_font+F4o
					; _pango_win32_font_map_load_font+13Co	...
aNameS		db 'name=%s',0          ; DATA XREF: _pango_win32_font_map_load_font+10Ao
asc_6B28B7A1	db 0Ah,0		; DATA XREF: _pango_win32_font_map_load_font+116o
					; _pango_win32_font_map_load_font+157o	...
aGotWin32family	db 'got win32family',0  ; DATA XREF: _pango_win32_font_map_load_font+14Bo
aNoBestMatch	db 'no best match!',0   ; DATA XREF: _pango_win32_font_map_load_font+187o
aDescriptionNul	db 'description != NULL',0
					; DATA XREF: _pango_win32_font_map_load_font:loc_6B284CF8o
aPango_1	db 'Pango',0            ; DATA XREF: _pango_win32_font_map_load_font+1B8o
					; _pango_win32_font_map_get_font_cache+40o ...
aSLuLx		db '%S: %lu %lx',0      ; DATA XREF: pango_win32_enum_proc(x,x,x,x)+AAo
aPangowin32fami	db 'PangoWin32Family',0 ; DATA XREF: _pango_win32_family_get_type+2Do
aPangowin32face	db 'PangoWin32Face',0   ; DATA XREF: _pango_win32_face_get_type+10o
aSans		db 'Sans',0             ; DATA XREF: __pango_win32_font_map_init+9Ao
aSerif		db 'Serif',0            ; DATA XREF: __pango_win32_font_map_init+A6o
aMonospace	db 'Monospace',0        ; DATA XREF: __pango_win32_font_map_init+B2o
aPangowin32fo_0	db 'PangoWin32FontMap',0 ; DATA XREF: __pango_win32_font_map_get_type+2Co
aUtf16be	db 'UTF-16BE',0         ; DATA XREF: _pango_win32_font_description_from_logfont+535o
					; _pango_win32_font_description_from_logfont+553o ...
aUcs4be		db 'UCS-4BE',0          ; DATA XREF: _pango_win32_font_description_from_logfont+356o
					; _pango_win32_font_description_from_logfont+544o ...
aMacroman	db 'MacRoman',0         ; DATA XREF: _pango_win32_font_description_from_logfont:loc_6B285A05o
					; _pango_win32_font_description_from_logfontw:loc_6B285F81o
aDNameRecords	db '%d name records',0  ; DATA XREF: _pango_win32_font_description_from_logfont+4ACo
					; _pango_win32_font_description_from_logfontw+4C0o
		align 4
aPlatformDEnc_0	db 'platform:%d encoding:%d language:%04x name_id:%d',0
					; DATA XREF: _pango_win32_font_description_from_logfont+448o
					; _pango_win32_font_description_from_logfontw+458o
aUtf8		db 'UTF-8',0            ; DATA XREF: _pango_win32_font_description_from_logfont+376o
					; _pango_win32_font_description_from_logfontw+386o
aS		db '%s',0               ; DATA XREF: _pango_win32_font_description_from_logfont+3CBo
					; _pango_win32_font_description_from_logfontw+3DCo
aSynthetic	db ' synthetic',0       ; DATA XREF: _pango_win32_insert_font:loc_6B2860CCo
aDecorative	db 'DECORATIVE',0       ; DATA XREF: _pango_win32_insert_font:loc_6B2863B8o
aDontcare	db 'DONTCARE',0         ; DATA XREF: _pango_win32_insert_font+A0o
aModern		db 'MODERN',0           ; DATA XREF: _pango_win32_insert_font:loc_6B2863ACo
aRoman		db 'ROMAN',0            ; DATA XREF: _pango_win32_insert_font+3C9o
aScript		db 'SCRIPT',0           ; DATA XREF: _pango_win32_insert_font:loc_6B2863C4o
aSwiss		db 'SWISS',0            ; DATA XREF: _pango_win32_insert_font:loc_6B2863D0o
aYes_0		db 'yes',0              ; DATA XREF: _pango_win32_insert_font+B7o
aNo		db 'no',0               ; DATA XREF: _pango_win32_insert_font:loc_6B2860D8o
aAnsi		db 'ANSI',0             ; DATA XREF: _pango_win32_insert_font:loc_6B2864F0o
aDefault	db 'DEFAULT',0          ; DATA XREF: _pango_win32_insert_font:loc_6B2864FCo
aSymbol		db 'SYMBOL',0           ; DATA XREF: _pango_win32_insert_font:loc_6B2864E6o
aShiftjis	db 'SHIFTJIS',0         ; DATA XREF: _pango_win32_insert_font:loc_6B2864DCo
aHangul		db 'HANGUL',0           ; DATA XREF: _pango_win32_insert_font:loc_6B286498o
aGb2312		db 'GB2312',0           ; DATA XREF: _pango_win32_insert_font:loc_6B28648Eo
aChinesebig5	db 'CHINESEBIG5',0      ; DATA XREF: _pango_win32_insert_font+F9o
aGreek		db 'GREEK',0            ; DATA XREF: _pango_win32_insert_font:loc_6B286478o
aTurkish	db 'TURKISH',0          ; DATA XREF: _pango_win32_insert_font:loc_6B2864C4o
aHebrew		db 'HEBREW',0           ; DATA XREF: _pango_win32_insert_font:loc_6B2864B8o
aArabic		db 'ARABIC',0           ; DATA XREF: _pango_win32_insert_font:loc_6B2864AEo
aBaltic		db 'BALTIC',0           ; DATA XREF: _pango_win32_insert_font:loc_6B286484o
aRussian	db 'RUSSIAN',0          ; DATA XREF: _pango_win32_insert_font+3EEo
aThai		db 'THAI',0             ; DATA XREF: _pango_win32_insert_font:loc_6B28646Co
aEasteurope	db 'EASTEUROPE',0       ; DATA XREF: _pango_win32_insert_font:loc_6B28651Eo
aOem		db 'OEM',0              ; DATA XREF: _pango_win32_insert_font+588o
aJohab		db 'JOHAB',0            ; DATA XREF: _pango_win32_insert_font:loc_6B2864A4o
aVietnamese	db 'VIETNAMESE',0       ; DATA XREF: _pango_win32_insert_font:loc_6B2864D0o
aMac		db 'MAC',0              ; DATA XREF: _pango_win32_insert_font+416o
; char Format[]
Format		db '%d',0               ; DATA XREF: _pango_win32_insert_font+18Bo
					; _pango_win32_insert_font+20Fo
aFaceSCharsetSI	db 'face=%S,charset=%s,it=%s,wt=%ld,ht=%ld,ff=%s%s',0
					; DATA XREF: _pango_win32_insert_font+1D2o
aAlreadyHaveIt	db 'already have it',0  ; DATA XREF: _pango_win32_insert_font+120o
aNotFound	db 'not found',0        ; DATA XREF: _pango_win32_insert_font+46Co
					; __pango_win32_make_matching_logfontw+119o
aWin32faceCreat	db 'win32face created: %p for %S',0
					; DATA XREF: _pango_win32_insert_font+4B6o
aNameSLengthFac	db 'name=%s, length(faces)=%d',0 ; DATA XREF: _pango_win32_insert_font+3A1o
aLfp_faceSWtLdH	db 'lfp.face=%S,wt=%ld,ht=%ld,size:%d',0
					; DATA XREF: __pango_win32_make_matching_logfontw+D2o
aFont_mapNull	db 'font_map != NULL',0 ; DATA XREF: _pango_win32_font_map_get_font_cache:loc_6B2868CCo
		align 4
aPango_win32__0	db 'PANGO_WIN32_IS_FONT_MAP (font_map)',0
					; DATA XREF: _pango_win32_font_map_get_font_cache+30o
aGotBestMatchSS	db 'got best match:%S size=%d',0
					; DATA XREF: _pango_win32_font_map_real_find_font+13Do
aSizeMatches	db 'size matches',0     ; DATA XREF: _pango_win32_font_map_real_find_font+21Co
aFontmapNull	db 'fontmap != NULL',0  ; DATA XREF: _pango_win32_font_map_real_find_font:loc_6B286B27o
aResultFontmapN	db 'result->fontmap == NULL',0
					; DATA XREF: _pango_win32_font_map_real_find_font+BFo
aPangowin32Font	db 'pangowin32-fontmap.c',0
					; DATA XREF: _pango_win32_font_map_real_find_font+D7o
		align 10h
___PRETTY_FUNCTION___42464 db 'pango_win32_font_map_get_font_cache',0
					; DATA XREF: _pango_win32_font_map_get_font_cache+38o
					; _pango_win32_font_map_get_font_cache+78o
		align 20h
___PRETTY_FUNCTION___42430 db '_pango_win32_make_matching_logfontw',0
					; DATA XREF: __pango_win32_make_matching_logfontw+A0o
					; __pango_win32_make_matching_logfontw+105o
___PRETTY_FUNCTION___42355 db 'get_family_nameW',0
					; DATA XREF: _pango_win32_font_description_from_logfontw+3C4o
					; _pango_win32_font_description_from_logfontw+424o ...
___PRETTY_FUNCTION___42318 db 'get_family_nameA',0
					; DATA XREF: _pango_win32_font_description_from_logfont+3B3o
					; _pango_win32_font_description_from_logfont+414o ...
		align 4
___PRETTY_FUNCTION___42262 db 'pango_win32_font_map_load_font',0
					; DATA XREF: _pango_win32_font_map_load_font+ECo
					; _pango_win32_font_map_load_font+134o	...
		align 20h
___PRETTY_FUNCTION___42291 db 'pango_win32_font_map_real_find_font',0
					; DATA XREF: _pango_win32_font_map_real_find_font+11Bo
					; _pango_win32_font_map_real_find_font+208o
___PRETTY_FUNCTION___42276 db 'pango_win32_font_neww',0
					; DATA XREF: _pango_win32_font_map_real_find_font+C7o
					; _pango_win32_font_map_real_find_font+1E3o
		align 10h
_object_info_42458 db '\',0             ; DATA XREF: _pango_win32_face_get_type+2Bo
		align 4
		dd 2 dup(0)
		dd offset _pango_win32_face_class_init
		dd 2 dup(0)
		dd 9Ch,	2 dup(0)
___PRETTY_FUNCTION___42414 db 'pango_win32_insert_font',0
					; DATA XREF: _pango_win32_insert_font+5Co
					; _pango_win32_insert_font+10Co ...
___PRETTY_FUNCTION___42122 db 'pango_win32_enum_proc',0
					; DATA XREF: pango_win32_enum_proc(x,x,x,x)+84o
		align 4
flt_6B28BBF4	dd 1024.0		; DATA XREF: __pango_win32_font_map_init+D6r
flt_6B28BBF8	dd 72.0			; DATA XREF: __pango_win32_font_map_init+E3r
flt_6B28BBFC	dd 0.5			; DATA XREF: __pango_win32_make_matching_logfontw+63r
flt_6B28BC00	dd 0.0009765625		; DATA XREF: _pango_win32_font_map_real_find_font+4Er
flt_6B28BC04	dd 0.0			; DATA XREF: _pango_win32_font_map_real_find_font+54r
		align 20h
aFnoglyphindex	db ' fNoGlyphIndex',0   ; DATA XREF: _itemize_shape_and_place_clone_2+728o
byte_6B28BC2F	db 0			; DATA XREF: _itemize_shape_and_place_clone_2+F76o
					; _itemize_shape_and_place_clone_2:loc_6B287E26o ...
aFlogicalorder	db ' fLogicalOrder',0   ; DATA XREF: _itemize_shape_and_place_clone_2+73Ao
aFlinkafter	db ' fLinkAfter',0      ; DATA XREF: _itemize_shape_and_place_clone_2+74Co
aFlinkbefore	db ' fLinkBefore',0     ; DATA XREF: _itemize_shape_and_place_clone_2+75Eo
aFlayoutrtl	db ' fLayoutRTL',0      ; DATA XREF: _itemize_shape_and_place_clone_2+770o
aFrtl		db ' fRTL',0            ; DATA XREF: _itemize_shape_and_place_clone_2+782o
aComplex	db 'complex',0          ; DATA XREF: _itemize_shape_and_place_clone_2+7A4o
aSimple		db 'simple',0           ; DATA XREF: _itemize_shape_and_place_clone_2:loc_6B287E1Co
asc_6B28BC79	db ',',0                ; DATA XREF: _itemize_shape_and_place_clone_2:loc_6B287BF4o
					; _itemize_shape_and_place_clone_2+111Co ...
aAr		db 'ar',0               ; DATA XREF: _itemize_shape_and_place_clone_2+6Bo
aHy		db 'hy',0               ; DATA XREF: _itemize_shape_and_place_clone_2+83o
aAs		db 'as',0               ; DATA XREF: _itemize_shape_and_place_clone_2+9Bo
aAz		db 'az',0               ; DATA XREF: _itemize_shape_and_place_clone_2+BAo
aBn		db 'bn',0               ; DATA XREF: _itemize_shape_and_place_clone_2+D9o
aZhTw_0		db 'zh-tw',0            ; DATA XREF: _itemize_shape_and_place_clone_2+F8o
aZhCn_0		db 'zh-cn',0            ; DATA XREF: _itemize_shape_and_place_clone_2+117o
aZhHk		db 'zh-hk',0            ; DATA XREF: _itemize_shape_and_place_clone_2+136o
aZhSg		db 'zh-sg',0            ; DATA XREF: _itemize_shape_and_place_clone_2+155o
aZhMo		db 'zh-mo',0            ; DATA XREF: _itemize_shape_and_place_clone_2+174o
aDib		db 'dib',0              ; DATA XREF: _itemize_shape_and_place_clone_2+193o
aFa		db 'fa',0               ; DATA XREF: _itemize_shape_and_place_clone_2+1B2o
aKa		db 'ka',0               ; DATA XREF: _itemize_shape_and_place_clone_2+1D1o
aGu		db 'gu',0               ; DATA XREF: _itemize_shape_and_place_clone_2+1F0o
aHe		db 'he',0               ; DATA XREF: _itemize_shape_and_place_clone_2+20Fo
aHi		db 'hi',0               ; DATA XREF: _itemize_shape_and_place_clone_2+22Eo
aJa_0		db 'ja',0               ; DATA XREF: _itemize_shape_and_place_clone_2+24Do
aKn		db 'kn',0               ; DATA XREF: _itemize_shape_and_place_clone_2+26Co
aKsIn		db 'ks-in',0            ; DATA XREF: _itemize_shape_and_place_clone_2+28Bo
aKs		db 'ks',0               ; DATA XREF: _itemize_shape_and_place_clone_2+2AAo
aKk		db 'kk',0               ; DATA XREF: _itemize_shape_and_place_clone_2+2C9o
aKok		db 'kok',0              ; DATA XREF: _itemize_shape_and_place_clone_2+2E8o
aKo_0		db 'ko',0               ; DATA XREF: _itemize_shape_and_place_clone_2+307o
aKy		db 'ky',0               ; DATA XREF: _itemize_shape_and_place_clone_2+326o
aMl		db 'ml',0               ; DATA XREF: _itemize_shape_and_place_clone_2+345o
aMni		db 'mni',0              ; DATA XREF: _itemize_shape_and_place_clone_2+364o
aMr		db 'mr',0               ; DATA XREF: _itemize_shape_and_place_clone_2+383o
aMn		db 'mn',0               ; DATA XREF: _itemize_shape_and_place_clone_2+3A2o
aNeIn		db 'ne-in',0            ; DATA XREF: _itemize_shape_and_place_clone_2+3C1o
aNe		db 'ne',0               ; DATA XREF: _itemize_shape_and_place_clone_2+3E0o
aOr		db 'or',0               ; DATA XREF: _itemize_shape_and_place_clone_2+3FFo
aPa		db 'pa',0               ; DATA XREF: _itemize_shape_and_place_clone_2+41Eo
aSa		db 'sa',0               ; DATA XREF: _itemize_shape_and_place_clone_2+43Do
aSd		db 'sd',0               ; DATA XREF: _itemize_shape_and_place_clone_2+45Co
aSyr		db 'syr',0              ; DATA XREF: _itemize_shape_and_place_clone_2+47Bo
aTa		db 'ta',0               ; DATA XREF: _itemize_shape_and_place_clone_2+49Ao
aTt		db 'tt',0               ; DATA XREF: _itemize_shape_and_place_clone_2+4B9o
aTe		db 'te',0               ; DATA XREF: _itemize_shape_and_place_clone_2+4D8o
aTh		db 'th',0               ; DATA XREF: _itemize_shape_and_place_clone_2+4F7o
aUrPk		db 'ur-pk',0            ; DATA XREF: _itemize_shape_and_place_clone_2+512o
aUrIn		db 'ur-in',0            ; DATA XREF: _itemize_shape_and_place_clone_2+52Do
aUr		db 'ur',0               ; DATA XREF: _itemize_shape_and_place_clone_2+548o
aUz		db 'uz',0               ; DATA XREF: _itemize_shape_and_place_clone_2+563o
		align 4
aBasicWin32_c48	db 'basic-win32.c:481: ScriptItemize: uDefaultLanguage:%04x uBidiLeve'
					; DATA XREF: _itemize_shape_and_place_clone_2+13F2o
		db 'l:%d',0Ah,0
aScriptitemizeF	db 'ScriptItemize failed',0Ah,0
					; DATA XREF: _itemize_shape_and_place_clone_2:loc_6B287A15o
aDItems		db '%d items:',0Ah,0    ; DATA XREF: _itemize_shape_and_place_clone_2+D58o
; char a02x[]
a02x		db '%#02x',0            ; DATA XREF: _itemize_shape_and_place_clone_2+1341o
		align 4
aItemDIcharposD	db '  Item %d: iCharPos=%d eScript=%d (%s) %s%s%s%s%s%s%s wchar_t %d-'
					; DATA XREF: _itemize_shape_and_place_clone_2+85Eo
		db '-%d (%d)',0Ah,0
		align 4
aNewScript_cach	db '  New SCRIPT_CACHE for font %p and script %d',0Ah,0
					; DATA XREF: _itemize_shape_and_place_clone_2+13D3o
		align 4
aPangoBasicWin3	db 'pango-basic-win32: ScriptShape failed',0Ah,0
					; DATA XREF: _itemize_shape_and_place_clone_2+144Eo
aScriptshapeNgl	db '  ScriptShape: nglyphs=%d: ',0
					; DATA XREF: _itemize_shape_and_place_clone_2+F18o
aDS		db '%d%s',0             ; DATA XREF: _itemize_shape_and_place_clone_2+F5Do
asc_6B28BE50	db 0Ah,0		; DATA XREF: _itemize_shape_and_place_clone_2:loc_6B287C29o
					; _itemize_shape_and_place_clone_2+FC9o ...
aLog_clusters	db '  log_clusters: ',0 ; DATA XREF: _itemize_shape_and_place_clone_2+F89o
aD_0		db '%d ',0              ; DATA XREF: _itemize_shape_and_place_clone_2+FB8o
					; _itemize_shape_and_place_clone_2+149Fo ...
aDClusters	db '  %d clusters:',0Ah,0
					; DATA XREF: _itemize_shape_and_place_clone_2+1000o
aClusterDCharsD	db '  Cluster %d: chars %d--',0
					; DATA XREF: _itemize_shape_and_place_clone_2+123Ao
aDDGlyphs	db '%d: %d glyphs: ',0  ; DATA XREF: _itemize_shape_and_place_clone_2+10D5o
					; _itemize_shape_and_place_clone_2+1288o
aD_1		db '%d',0               ; DATA XREF: _itemize_shape_and_place_clone_2+1108o
					; _itemize_shape_and_place_clone_2+12B5o
aClusterDWchar_	db '  Cluster %d: wchar_t %d--',0
					; DATA XREF: _itemize_shape_and_place_clone_2+1084o
		align 10h
aPangoBasicWi_0	db 'pango-basic-win32: ScriptPlace failed',0Ah,0
					; DATA XREF: _itemize_shape_and_place_clone_2+14D5o
		align 4
aPangoLog_clust	db '  Pango log_clusters (level:%d), char index:',0
					; DATA XREF: _itemize_shape_and_place_clone_2+1481o
aYes		db 'YES',0              ; DATA XREF: _basic_engine_shape:loc_6B288697o
aNo_0		db 'NO',0               ; DATA XREF: _basic_engine_shape+A6o
aText_is_simple	db 'text_is_simple: %.*s (%ld wchar_t): %s',0Ah,0
					; DATA XREF: _basic_engine_shape+CEo
aPangoLog_clu_0	db '  Pango log_clusters, byte offsets:',0
					; DATA XREF: _basic_engine_shape:loc_6B288760o
aFontNull_0	db 'font != NULL',0     ; DATA XREF: _basic_engine_shape:loc_6B2886C9o
aPango_2	db 'Pango',0            ; DATA XREF: _basic_engine_shape+379o
					; _basic_engine_shape+4AFo ...
aTextNull	db 'text != NULL',0     ; DATA XREF: _basic_engine_shape:loc_6B2886A8o
aLength0	db 'length >= 0',0      ; DATA XREF: _basic_engine_shape:loc_6B288545o
aAnalysisNull	db 'analysis != NULL',0 ; DATA XREF: _basic_engine_shape:loc_6B2886EAo
		align 4
aGlyphsLog_clus	db 'glyphs->log_clusters[glyphix] < n_chars',0
					; DATA XREF: _basic_engine_shape:loc_6B28866Bo
aBasicWin32_c	db 'basic-win32.c',0    ; DATA XREF: _basic_engine_shape+4A7o
aBasicenginewin	db 'BasicEngineWin32',0 ; DATA XREF: __pango_basic_win32_script_engine_init+43o
aBasicscripteng	db 'BasicScriptEngineWin32',0
					; DATA XREF: __pango_basic_win32_script_engine_create+8o
					; .data:_script_engineso
aPangoengines_0	db 'PangoEngineShape',0 ; DATA XREF: .data:6B28A024o
aPangorenderw_1	db 'PangoRenderWin32',0 ; DATA XREF: .data:6B28A028o
		align 20h
_C_2_50105	db 'L',0                ; DATA XREF: __pango_basic_win32_script_engine_init+23o
		align 4
		dd 2 dup(0)
		dd offset _basic_engine_win32_class_init
		dd 2 dup(0)
		dd 0Ch,	2 dup(0)
___PRETTY_FUNCTION___42521 db 'basic_engine_shape',0 ; DATA XREF: _basic_engine_shape+371o
					; _basic_engine_shape+4D4o ...
		align 10h
___PRETTY_FUNCTION___42430_0 db	'convert_log_clusters_to_byte_offsets',0
					; DATA XREF: _basic_engine_shape+497o
		align 4
dbl_6B28C0A8	dq 0.5			; DATA XREF: _itemize_shape_and_place_clone_2+BE1r
					; _itemize_shape_and_place_clone_2+C1Dr ...
		align 20h
; CHAR LibFileName[]
LibFileName	db 'mingwm10.dll',0     ; DATA XREF: __dyn_tls_init(x,x,x)+50o
; CHAR a__mingwthr_rem[]
a__mingwthr_rem	db '__mingwthr_remove_key_dtor',0 ; DATA XREF: __dyn_tls_init(x,x,x)+6Co
; CHAR a__mingwthr_key[]
a__mingwthr_key	db '__mingwthr_key_dtor',0 ; DATA XREF: __dyn_tls_init(x,x,x)+84o
		public ___dyn_tls_init_callback
___dyn_tls_init_callback dd offset ___dyn_tls_init@12
					; DATA XREF: DllMainCRTStartup(x,x,x)+80r
					; __dyn_tls_init(x,x,x)
aMingwRuntimeFa	db 'Mingw runtime failure:',0Ah,0 ; DATA XREF: ___report_error+2Co
; char aVirtualqueryFa[]
aVirtualqueryFa	db '  VirtualQuery failed for %d bytes at address %p',0
					; DATA XREF: ___write_memory+C6o
		align 4
; char aUnknownPseud_0[]
aUnknownPseud_0	db '  Unknown pseudo relocation protocol version %d.',0Ah,0
					; DATA XREF: __pei386_runtime_relocator+19Ao
		align 10h
; char aUnknownPseudoR[]
aUnknownPseudoR	db '  Unknown pseudo relocation bit size %d.',0Ah,0
					; DATA XREF: __pei386_runtime_relocator+C6o
		align 4
		public __RUNTIME_PSEUDO_RELOC_LIST_END__
__RUNTIME_PSEUDO_RELOC_LIST_END__ dd 0	; DATA XREF: __pei386_runtime_relocator:loc_6B289085o
					; __pei386_runtime_relocator+2Ao ...
dword_6B28C1B0	dd 0			; DATA XREF: __pei386_runtime_relocator+52r
dword_6B28C1B4	dd 0			; DATA XREF: __pei386_runtime_relocator+5Cr
dword_6B28C1B8	dd 12h dup(0)		; DATA XREF: __pei386_runtime_relocator+66o
		align 1000h
_rdata		ends

; Section 4. (virtual address 0000D000)
; Virtual size			: 00000004 (	  4.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 0000A000
; Flags	C0300040: Data Readable	Writable
; Alignment	: 4 bytes
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_eh_fram	segment	dword public 'DATA' use32
		assume cs:_eh_fram
		;org 6B28D000h
___FRAME_END__	dd 80h dup(0)		; DATA XREF: ___gcc_register_frame+36o
					; ___gcc_deregister_frame+2Eo
		align 1000h
_eh_fram	ends

; Section 5. (virtual address 0000E000)
; Virtual size			: 00000218 (	536.)
; Section size in file		: 00000000 (	  0.)
; Offset to raw	data for section: 00000000
; Flags	C0600080: Bss Readable Writable
; Alignment	: 32 bytes
; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
; Segment alignment '32byte' can not be represented in assembly
_bss		segment	para public 'BSS' use32
		assume cs:_bss
		;org 6B28E000h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
		public __bss_start__
; void *_bss_start__
__bss_start__	dd ?			; DATA XREF: __onexit+11o _atexit+11o	...
		align 10h
_next_atexit	dd ?			; DATA XREF: __onexit+9o _atexit+9o ...
		align 10h
_obj		dd 6 dup(?)		; DATA XREF: ___gcc_register_frame+2Eo
		public __pango_win32_debug
__pango_win32_debug dd ?		; DATA XREF: _pango_win32_get_dc+77w
					; _pango_win32_get_debug_flag+3r ...
_last_42345	dd ?			; DATA XREF: _pango_win32_font_get_glyph_index+11Br
					; _pango_win32_font_get_glyph_index+1EBw ...
_g_define_type_id__volatile_41894 dd ?	; DATA XREF: __pango_win32_font_get_type+7r
					; __pango_win32_font_get_type:loc_6B2819A4r ...
__pango_win32_font_parent_class	dd ?	; DATA XREF: _pango_win32_font_finalize+C5r
					; _pango_win32_font_dispose+6Fr ...
_render_type_id_42143 dd ?		; DATA XREF: _pango_win32_font_find_shaper+18r
					; _pango_win32_font_find_shaper+65w
_engine_type_id_42142 dd ?		; DATA XREF: _pango_win32_font_find_shaper+Er
					; _pango_win32_font_find_shaper+54w ...
_default_fontmap dd ?			; DATA XREF: _pango_win32_font_map_for_display+Cr
					; _pango_win32_font_map_for_display+47w ...
_g_define_type_id__volatile_42069 dd ?	; DATA XREF: __pango_win32_font_map_get_type+7r
					; __pango_win32_font_map_get_type:loc_6B285304r ...
__pango_win32_font_map_parent_class dd ?
					; DATA XREF: __pango_win32_font_map_class_intern_init+13w
					; _pango_win32_font_map_finalize+59r
_object_type_42219 dd ?			; DATA XREF: _pango_win32_family_get_type+7r
					; _pango_win32_family_get_type+5Bw
_object_type_42455 dd ?			; DATA XREF: _pango_win32_face_get_type+7r
					; _pango_win32_face_get_type+3Fw
; char num_42396[10]
_num_42396	db 0Ah dup(?)		; DATA XREF: _pango_win32_insert_font+217o
					; _pango_win32_insert_font+223o
; char num_42372[10]
_num_42372	db 0Ah dup(?)		; DATA XREF: _pango_win32_insert_font+193o
					; _pango_win32_insert_font+1A5o
_basic_engine_win32_type dd ?		; DATA XREF: __pango_basic_win32_script_engine_init+5Aw
					; __pango_basic_win32_script_engine_create+2Cr
_scripts	dd ?			; DATA XREF: _init_uniscribe+Eo
					; _itemize_shape_and_place_clone_2:loc_6B287438r
_nscripts	dd ?			; DATA XREF: _init_uniscribe+6o
_hdc		dd ?			; DATA XREF: _init_uniscribe+22w
					; _basic_engine_shape+DEr ...
_pango_win32_debug dd ?			; DATA XREF: _itemize_shape_and_place_clone_2+594r
					; _itemize_shape_and_place_clone_2+5E6r ...
_script_cache_hash_42454 dd ?		; DATA XREF: _itemize_shape_and_place_clone_2+4Br
					; _itemize_shape_and_place_clone_2+892r ...
; CHAR retval_42330[12]
_retval_42330	db 0Ch dup(?)		; DATA XREF: _itemize_shape_and_place_clone_2+7B4o
					; _itemize_shape_and_place_clone_2+83Eo ...
_bss		dd ?
		public __tls_index
__tls_index	dd ?			; DATA XREF: .tls:TlsIndex_ptro
		public _mingw_initltsdrot_force
_mingw_initltsdrot_force dd ?
		public _mingw_initltsdyn_force
_mingw_initltsdyn_force	dd ?
		public _mingw_initltssuo_force
_mingw_initltssuo_force	dd ?
; HMODULE __mingw_mthread_hdll
___mingw_mthread_hdll dd ?		; DATA XREF: __dyn_tls_init(x,x,x)+61w
					; __dyn_tls_init(x,x,x)+8Cr ...
		align 10h
_was_init_31087	dd ?			; DATA XREF: __pei386_runtime_relocator+6r
					; __pei386_runtime_relocator+32w
		align 10h
_initialized	dd ?			; DATA XREF: ___main+6r
					; ___main:loc_6B2892B2w
		align 10h
		public __CRT_MT
__CRT_MT	dd ?			; DATA XREF: __dyn_tls_init(x,x,x)+15r
					; __dyn_tls_init(x,x,x)+1Ew ...
		align 8
___mingwthr_cs_init dd ?		; DATA XREF: ___mingwthr_run_key_dtors+8r
					; ___mingw_TLScallback+26r ...
		dd 3 dup(?)
; struct _RTL_CRITICAL_SECTION __mingwthr_cs
___mingwthr_cs	_RTL_CRITICAL_SECTION <?>
					; DATA XREF: ___mingwthr_run_key_dtors:loc_6B2892E8o
					; ___mingwthr_run_key_dtors:loc_6B28932Co ...
		dd 2 dup(?)
_key_dtor_list	dd ?			; DATA XREF: ___mingwthr_run_key_dtors+24r
					; ____w64_mingwthr_remove_key_dtor+2Cr	...
		dd 4 dup(?)
_bss_0		dd 5 dup(?)
		public __pango_win32_os_version_info
; struct _OSVERSIONINFOA _pango_win32_os_version_info
__pango_win32_os_version_info _OSVERSIONINFOA <?> ; DATA XREF: _pango_win32_get_dc+44o
					; _pango_win32_get_dc+54w ...
		public __pango_win32_hdc
; HDC _pango_win32_hdc
__pango_win32_hdc dd ?			; DATA XREF: _pango_win32_font_get_glyph_extents+124r
					; _pango_win32_font_get_glyph_extents+161r ...
		public ___mingw_gMTKeyDtor
___mingw_gMTKeyDtor dd ?		; DATA XREF: __dyn_tls_init(x,x,x)+99w
					; __dyn_tls_init(x,x,x)+B8r ...
		dd 3 dup(?)
		public ___mingw_gMTRemoveKeyDtor
___mingw_gMTRemoveKeyDtor dd ?		; DATA XREF: __dyn_tls_init(x,x,x)+7Fw
					; __dyn_tls_init(x,x,x)+AEr ...
		dd 3 dup(?)
		public ___mingw_usemthread_dll
___mingw_usemthread_dll	dd ?		; DATA XREF: __dyn_tls_init(x,x,x):loc_6B288DF6w
		dd 7 dup(?)
		public __bss_end__
__bss_end__	dd 37Ah	dup(?)
_bss		ends

;
; Imports from libpango-1.0-0.dll
;
; Section 7. (virtual address 00010000)
; Virtual size			: 00001B54 (   6996.)
; Section size in file		: 00001C00 (   7168.)
; Offset to raw	data for section: 0000A800
; Flags	C0300040: Data Readable	Writable
; Alignment	: 4 bytes
; ===========================================================================

; Segment type:	Externs
; _idata
		extrn __imp__pango_context_set_font_description:dword
					; DATA XREF: _pango_context_set_font_descriptionr
		extrn __imp__pango_context_set_language:dword
					; DATA XREF: _pango_context_set_languager
		extrn __imp__pango_coverage_get:dword ;	DATA XREF: _pango_coverage_getr
		extrn __imp__pango_coverage_new:dword ;	DATA XREF: _pango_coverage_newr
		extrn __imp__pango_coverage_ref:dword ;	DATA XREF: _pango_coverage_refr
		extrn __imp__pango_coverage_set:dword ;	DATA XREF: _pango_coverage_setr
		extrn __imp__pango_coverage_unref:dword	; DATA XREF: _pango_coverage_unrefr
		extrn __imp__pango_engine_shape_get_type:dword
					; DATA XREF: _pango_engine_shape_get_typer
		extrn __imp__pango_find_map:dword ; DATA XREF: _pango_find_mapr
		extrn __imp__pango_font_describe:dword ; DATA XREF: _pango_font_describer
		extrn __imp__pango_font_describe_with_absolute_size:dword
					; DATA XREF: _pango_font_describe_with_absolute_sizer
		extrn __imp__pango_font_description_better_match:dword
					; DATA XREF: _pango_font_description_better_matchr
		extrn __imp__pango_font_description_copy:dword
					; DATA XREF: _pango_font_description_copyr
		extrn __imp__pango_font_description_copy_static:dword
					; DATA XREF: _pango_font_description_copy_staticr
		extrn __imp__pango_font_description_free:dword
					; DATA XREF: _pango_font_description_freer
		extrn __imp__pango_font_description_get_family:dword
					; DATA XREF: _pango_font_description_get_familyr
		extrn __imp__pango_font_description_get_size:dword
					; DATA XREF: _pango_font_description_get_sizer
		extrn __imp__pango_font_description_get_size_is_absolute:dword
					; DATA XREF: _pango_font_description_get_size_is_absoluter
		extrn __imp__pango_font_description_get_style:dword
					; DATA XREF: _pango_font_description_get_styler
		extrn __imp__pango_font_description_get_weight:dword
					; DATA XREF: _pango_font_description_get_weightr
		extrn __imp__pango_font_description_new:dword
					; DATA XREF: _pango_font_description_newr
		extrn __imp__pango_font_description_set_absolute_size:dword
					; DATA XREF: _pango_font_description_set_absolute_sizer
		extrn __imp__pango_font_description_set_family:dword
					; DATA XREF: _pango_font_description_set_familyr
		extrn __imp__pango_font_description_set_family_static:dword
					; DATA XREF: _pango_font_description_set_family_staticr
		extrn __imp__pango_font_description_set_size:dword
					; DATA XREF: _pango_font_description_set_sizer
		extrn __imp__pango_font_description_set_stretch:dword
					; DATA XREF: _pango_font_description_set_stretchr
		extrn __imp__pango_font_description_set_style:dword
					; DATA XREF: _pango_font_description_set_styler
		extrn __imp__pango_font_description_set_variant:dword
					; DATA XREF: _pango_font_description_set_variantr
		extrn __imp__pango_font_description_set_weight:dword
					; DATA XREF: _pango_font_description_set_weightr
		extrn __imp__pango_font_description_to_string:dword
					; DATA XREF: _pango_font_description_to_stringr
		extrn __imp__pango_font_description_unset_fields:dword
					; DATA XREF: _pango_font_description_unset_fieldsr
		extrn __imp__pango_font_face_describe:dword
					; DATA XREF: _pango_font_face_describer
		extrn __imp__pango_font_face_get_type:dword
					; DATA XREF: _pango_font_face_get_typer
		extrn __imp__pango_font_family_get_type:dword
					; DATA XREF: _pango_font_family_get_typer
		extrn __imp__pango_font_get_glyph_extents:dword
					; DATA XREF: _pango_font_get_glyph_extentsr
		extrn __imp__pango_font_get_type:dword ; DATA XREF: _pango_font_get_typer
		extrn __imp__pango_font_map_create_context:dword
					; DATA XREF: _pango_font_map_create_contextr
		extrn __imp__pango_font_map_get_type:dword
					; DATA XREF: _pango_font_map_get_typer
		extrn __imp__pango_font_metrics_new:dword
					; DATA XREF: _pango_font_metrics_newr
		extrn __imp__pango_font_metrics_ref:dword
					; DATA XREF: _pango_font_metrics_refr
		extrn __imp__pango_font_metrics_unref:dword
					; DATA XREF: _pango_font_metrics_unrefr
		extrn __imp__pango_get_mirror_char:dword
					; DATA XREF: _pango_get_mirror_charr
		extrn __imp__pango_glyph_string_extents:dword
					; DATA XREF: _pango_glyph_string_extentsr
		extrn __imp__pango_glyph_string_set_size:dword
					; DATA XREF: _pango_glyph_string_set_sizer
		extrn __imp__pango_is_zero_width:dword ; DATA XREF: _pango_is_zero_widthr
		extrn __imp__pango_language_get_sample_string:dword
					; DATA XREF: _pango_language_get_sample_stringr
		extrn __imp__pango_language_matches:dword
					; DATA XREF: _pango_language_matchesr
		extrn __imp__pango_layout_get_iter:dword
					; DATA XREF: _pango_layout_get_iterr
		extrn __imp__pango_layout_get_lines_readonly:dword
					; DATA XREF: _pango_layout_get_lines_readonlyr
		extrn __imp__pango_layout_get_type:dword
					; DATA XREF: _pango_layout_get_typer
		extrn __imp__pango_layout_iter_free:dword
					; DATA XREF: _pango_layout_iter_freer
		extrn __imp__pango_layout_iter_get_baseline:dword
					; DATA XREF: _pango_layout_iter_get_baseliner
		extrn __imp__pango_layout_iter_get_line_extents:dword
					; DATA XREF: _pango_layout_iter_get_line_extentsr
		extrn __imp__pango_layout_iter_get_line_readonly:dword
					; DATA XREF: _pango_layout_iter_get_line_readonlyr
		extrn __imp__pango_layout_iter_next_line:dword
					; DATA XREF: _pango_layout_iter_next_liner
		extrn __imp__pango_layout_line_get_extents:dword
					; DATA XREF: _pango_layout_line_get_extentsr
		extrn __imp__pango_layout_new:dword ; DATA XREF: _pango_layout_newr
		extrn __imp__pango_layout_set_text:dword
					; DATA XREF: _pango_layout_set_textr
		extrn __imp__pango_lookup_aliases:dword	; DATA XREF: _pango_lookup_aliasesr
		extrn __imp__pango_map_get_engine:dword	; DATA XREF: _pango_map_get_enginer
		extrn __imp__pango_module_register:dword
					; DATA XREF: _pango_module_registerr
		extrn __imp__pango_script_for_unichar:dword
					; DATA XREF: _pango_script_for_unicharr

;
; Imports from libglib-2.0-0.dll
;
		extrn __imp__g_ascii_strcasecmp:dword ;	DATA XREF: _g_ascii_strcasecmpr
		extrn __imp__g_assertion_message:dword ; DATA XREF: _g_assertion_messager
		extrn __imp__g_assertion_message_expr:dword
					; DATA XREF: _g_assertion_message_exprr
		extrn __imp__g_atomic_int_add:dword ; DATA XREF: _g_atomic_int_addr
		extrn __imp__g_atomic_int_exchange_and_add:dword
					; DATA XREF: _g_atomic_int_exchange_and_addr
		extrn __imp__g_convert:dword ; DATA XREF: _g_convertr
		extrn __imp__g_direct_equal:dword ; DATA XREF: _g_direct_equalr
		extrn __imp__g_direct_hash:dword ; DATA	XREF: _g_direct_hashr
		extrn __imp__g_free:dword ; DATA XREF: _g_freer
		extrn __imp__g_hash_table_destroy:dword	; DATA XREF: _g_hash_table_destroyr
		extrn __imp__g_hash_table_foreach:dword	; DATA XREF: _g_hash_table_foreachr
		extrn __imp__g_hash_table_insert:dword ; DATA XREF: _g_hash_table_insertr
		extrn __imp__g_hash_table_lookup:dword ; DATA XREF: _g_hash_table_lookupr
		extrn __imp__g_hash_table_new:dword ; DATA XREF: _g_hash_table_newr
		extrn __imp__g_hash_table_new_full:dword
					; DATA XREF: _g_hash_table_new_fullr
		extrn __imp__g_hash_table_remove:dword ; DATA XREF: _g_hash_table_remover
		extrn __imp__g_int64_equal:dword ; DATA	XREF: _g_int64_equalr
		extrn __imp__g_int64_hash:dword	; DATA XREF: _g_int64_hashr
		extrn __imp__g_intern_static_string:dword
					; DATA XREF: _g_intern_static_stringr
		extrn __imp__g_list_foreach:dword ; DATA XREF: _g_list_foreachr
		extrn __imp__g_list_free:dword ; DATA XREF: _g_list_freer
		extrn __imp__g_list_free_1:dword ; DATA	XREF: _g_list_free_1r
		extrn __imp__g_list_prepend:dword ; DATA XREF: _g_list_prependr
		extrn __imp__g_locale_to_utf8:dword ; DATA XREF: _g_locale_to_utf8r
		extrn __imp__g_log:dword ; DATA	XREF: _g_logr
		extrn __imp__g_malloc:dword ; DATA XREF: _g_mallocr
		extrn __imp__g_malloc0:dword ; DATA XREF: _g_malloc0r
		extrn __imp__g_malloc_n:dword ;	DATA XREF: _g_malloc_nr
		extrn __imp__g_once_init_enter_impl:dword
					; DATA XREF: _g_once_init_enter_implr
		extrn __imp__g_once_init_leave:dword ; DATA XREF: _g_once_init_leaver
		extrn __imp__g_print:dword ; DATA XREF:	_g_printr
		extrn __imp__g_quark_from_static_string:dword
					; DATA XREF: _g_quark_from_static_stringr
		extrn __imp__g_queue_delete_link:dword ; DATA XREF: _g_queue_delete_linkr
		extrn __imp__g_queue_find:dword	; DATA XREF: _g_queue_findr
		extrn __imp__g_queue_free:dword	; DATA XREF: _g_queue_freer
		extrn __imp__g_queue_new:dword ; DATA XREF: _g_queue_newr
		extrn __imp__g_queue_pop_tail:dword ; DATA XREF: _g_queue_pop_tailr
		extrn __imp__g_queue_push_head:dword ; DATA XREF: _g_queue_push_headr
		extrn __imp__g_return_if_fail_warning:dword
					; DATA XREF: _g_return_if_fail_warningr
		extrn __imp__g_slice_alloc:dword ; DATA	XREF: _g_slice_allocr
		extrn __imp__g_slice_free1:dword ; DATA	XREF: _g_slice_free1r
		extrn __imp__g_slist_append:dword ; DATA XREF: _g_slist_appendr
		extrn __imp__g_slist_foreach:dword ; DATA XREF:	_g_slist_foreachr
		extrn __imp__g_slist_free:dword	; DATA XREF: _g_slist_freer
		extrn __imp__g_slist_length:dword ; DATA XREF: _g_slist_lengthr
		extrn __imp__g_slist_prepend:dword ; DATA XREF:	_g_slist_prependr
		extrn __imp__g_slist_remove:dword ; DATA XREF: _g_slist_remover
		extrn __imp__g_strdup:dword ; DATA XREF: _g_strdupr
		extrn __imp__g_unichar_type:dword ; DATA XREF: _g_unichar_typer
		extrn __imp__g_utf16_to_utf8:dword ; DATA XREF:	_g_utf16_to_utf8r
		extrn __imp__g_utf8_get_char:dword ; DATA XREF:	_g_utf8_get_charr
		extrn __imp__g_utf8_skip:dword ; DATA XREF: _basic_engine_shape+135r
					; _basic_engine_shape+42Fr
		extrn __imp__g_utf8_strlen:dword ; DATA	XREF: _g_utf8_strlenr
		extrn __imp__g_utf8_to_utf16:dword ; DATA XREF:	_g_utf8_to_utf16r
		extrn __imp__g_win32_error_message:dword
					; DATA XREF: _g_win32_error_messager

;
; Imports from libgobject-2.0-0.dll
;
		extrn __imp__g_object_add_weak_pointer:dword
					; DATA XREF: _g_object_add_weak_pointerr
		extrn __imp__g_object_new:dword	; DATA XREF: _g_object_newr
		extrn __imp__g_object_ref:dword	; DATA XREF: _g_object_refr
		extrn __imp__g_object_remove_weak_pointer:dword
					; DATA XREF: _g_object_remove_weak_pointerr
		extrn __imp__g_object_unref:dword ; DATA XREF: _g_object_unrefr
		extrn __imp__g_type_check_class_cast:dword
					; DATA XREF: _g_type_check_class_castr
		extrn __imp__g_type_check_instance_cast:dword
					; DATA XREF: _g_type_check_instance_castr
		extrn __imp__g_type_check_instance_is_a:dword
					; DATA XREF: _g_type_check_instance_is_ar
		extrn __imp__g_type_class_peek_parent:dword
					; DATA XREF: _g_type_class_peek_parentr
		extrn __imp__g_type_init:dword ; DATA XREF: _g_type_initr
		extrn __imp__g_type_module_register_type:dword
					; DATA XREF: _g_type_module_register_typer
		extrn __imp__g_type_register_static:dword
					; DATA XREF: _g_type_register_staticr
		extrn __imp__g_type_register_static_simple:dword
					; DATA XREF: _g_type_register_static_simpler

;
; Imports from GDI32.dll
;
; HDC __stdcall	CreateDCA(LPCSTR pwszDriver, LPCSTR pwszDevice,	LPCSTR pszPort,	const DEVMODEA *pdm)
		extrn __imp__CreateDCA@16:dword	; DATA XREF: CreateDCA(x,x,x,x)r
; HFONT	__stdcall CreateFontIndirectA(const LOGFONTA *lplf)
		extrn __imp__CreateFontIndirectA@4:dword
					; DATA XREF: CreateFontIndirectA(x)r
; HFONT	__stdcall CreateFontIndirectW(const LOGFONTW *lplf)
		extrn __imp__CreateFontIndirectW@4:dword
					; DATA XREF: CreateFontIndirectW(x)r
; HBRUSH __stdcall CreateSolidBrush(COLORREF color)
		extrn __imp__CreateSolidBrush@4:dword ;	DATA XREF: CreateSolidBrush(x)r
; BOOL __stdcall DeleteObject(HGDIOBJ ho)
		extrn __imp__DeleteObject@4:dword ; DATA XREF: DeleteObject(x)r
; int __stdcall	EnumFontFamiliesExW(HDC	hdc, LPLOGFONTW	lpLogfont, FONTENUMPROCW lpProc, LPARAM	lParam,	DWORD dwFlags)
		extrn __imp__EnumFontFamiliesExW@20:dword
					; DATA XREF: EnumFontFamiliesExW(x,x,x,x,x)r
; BOOL __stdcall ExtTextOutW(HDC hdc, int x, int y, UINT options, const	RECT *lprect, LPCWSTR lpString,	UINT c,	const INT *lpDx)
		extrn __imp__ExtTextOutW@32:dword ; DATA XREF: ExtTextOutW(x,x,x,x,x,x,x,x)r
; int __stdcall	GetDeviceCaps(HDC hdc, int index)
		extrn __imp__GetDeviceCaps@8:dword ; DATA XREF:	GetDeviceCaps(x,x)r
; DWORD	__stdcall GetFontData(HDC hdc, DWORD dwTable, DWORD dwOffset, PVOID pvBuffer, DWORD cjBuffer)
		extrn __imp__GetFontData@20:dword ; DATA XREF: GetFontData(x,x,x,x,x)r
; DWORD	__stdcall GetFontUnicodeRanges(HDC hdc,	LPGLYPHSET lpgs)
		extrn __imp__GetFontUnicodeRanges@8:dword
					; DATA XREF: GetFontUnicodeRanges(x,x)r
; DWORD	__stdcall GetGlyphIndicesW(HDC hdc, LPCWSTR lpstr, int c, LPWORD pgi, DWORD fl)
		extrn __imp__GetGlyphIndicesW@20:dword
					; DATA XREF: GetGlyphIndicesW(x,x,x,x,x)r
; DWORD	__stdcall GetGlyphOutlineA(HDC hdc, UINT uChar,	UINT fuFormat, LPGLYPHMETRICS lpgm, DWORD cjBuffer, LPVOID pvBuffer, const MAT2	*lpmat2)
		extrn __imp__GetGlyphOutlineA@28:dword
					; DATA XREF: GetGlyphOutlineA(x,x,x,x,x,x,x)r
; int __stdcall	GetGraphicsMode(HDC hdc)
		extrn __imp__GetGraphicsMode@4:dword ; DATA XREF: GetGraphicsMode(x)r
; BOOL __stdcall GetTextMetricsA(HDC hdc, LPTEXTMETRICA	lptm)
		extrn __imp__GetTextMetricsA@8:dword ; DATA XREF: GetTextMetricsA(x,x)r
; BOOL __stdcall GetWorldTransform(HDC hdc, LPXFORM lpxf)
		extrn __imp__GetWorldTransform@8:dword ; DATA XREF: GetWorldTransform(x,x)r
; BOOL __stdcall Polyline(HDC hdc, const POINT *apt, int cpt)
		extrn __imp__Polyline@12:dword ; DATA XREF: Polyline(x,x,x)r
; BOOL __stdcall Rectangle(HDC hdc, int	left, int top, int right, int bottom)
		extrn __imp__Rectangle@20:dword	; DATA XREF: Rectangle(x,x,x,x,x)r
; HGDIOBJ __stdcall SelectObject(HDC hdc, HGDIOBJ h)
		extrn __imp__SelectObject@8:dword ; DATA XREF: SelectObject(x,x)r
; int __stdcall	SetGraphicsMode(HDC hdc, int iMode)
		extrn __imp__SetGraphicsMode@8:dword ; DATA XREF: SetGraphicsMode(x,x)r
; BOOL __stdcall SetWorldTransform(HDC hdc, const XFORM	*lpxf)
		extrn __imp__SetWorldTransform@8:dword ; DATA XREF: SetWorldTransform(x,x)r

;
; Imports from KERNEL32.dll
;
; void __stdcall DeleteCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
		extrn __imp__DeleteCriticalSection@4:dword
					; DATA XREF: DeleteCriticalSection(x)r
; void __stdcall EnterCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
		extrn __imp__EnterCriticalSection@4:dword
					; DATA XREF: EnterCriticalSection(x)r
; BOOL __stdcall FreeLibrary(HMODULE hLibModule)
		extrn __imp__FreeLibrary@4:dword ; DATA	XREF: FreeLibrary(x)r
; DWORD	__stdcall GetLastError()
		extrn __imp__GetLastError@0:dword ; DATA XREF: GetLastError()r
; int __stdcall	GetLocaleInfoA(LCID Locale, LCTYPE LCType, LPSTR lpLCData, int cchData)
		extrn __imp__GetLocaleInfoA@16:dword ; DATA XREF: GetLocaleInfoA(x,x,x,x)r
; HMODULE __stdcall GetModuleHandleA(LPCSTR lpModuleName)
		extrn __imp__GetModuleHandleA@4:dword ;	DATA XREF: GetModuleHandleA(x)r
; FARPROC __stdcall GetProcAddress(HMODULE hModule, LPCSTR lpProcName)
		extrn __imp__GetProcAddress@8:dword ; DATA XREF: GetProcAddress(x,x)r
; BOOL __stdcall GetVersionExA(LPOSVERSIONINFOA	lpVersionInformation)
		extrn __imp__GetVersionExA@4:dword ; DATA XREF:	GetVersionExA(x)r
; void __stdcall InitializeCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
		extrn __imp__InitializeCriticalSection@4:dword
					; DATA XREF: InitializeCriticalSection(x)r
; void __stdcall LeaveCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
		extrn __imp__LeaveCriticalSection@4:dword
					; DATA XREF: LeaveCriticalSection(x)r
; HMODULE __stdcall LoadLibraryA(LPCSTR	lpLibFileName)
		extrn __imp__LoadLibraryA@4:dword ; DATA XREF: LoadLibraryA(x)r
; int __stdcall	MultiByteToWideChar(UINT CodePage, DWORD dwFlags, LPCSTR lpMultiByteStr, int cbMultiByte, LPWSTR lpWideCharStr,	int cchWideChar)
		extrn __imp__MultiByteToWideChar@24:dword
					; DATA XREF: MultiByteToWideChar(x,x,x,x,x,x)r
; LPVOID __stdcall TlsGetValue(DWORD dwTlsIndex)
		extrn __imp__TlsGetValue@4:dword ; DATA	XREF: TlsGetValue(x)r
; BOOL __stdcall VirtualProtect(LPVOID lpAddress, SIZE_T dwSize, DWORD flNewProtect, PDWORD lpflOldProtect)
		extrn __imp__VirtualProtect@16:dword ; DATA XREF: VirtualProtect(x,x,x,x)r
; SIZE_T __stdcall VirtualQuery(LPCVOID	lpAddress, PMEMORY_BASIC_INFORMATION lpBuffer, SIZE_T dwLength)
		extrn __imp__VirtualQuery@12:dword ; DATA XREF:	VirtualQuery(x,x,x)r
; int __stdcall	WideCharToMultiByte(UINT CodePage, DWORD dwFlags, LPCWSTR lpWideCharStr, int cchWideChar, LPSTR	lpMultiByteStr,	int cbMultiByte, LPCSTR	lpDefaultChar, LPBOOL lpUsedDefaultChar)
		extrn __imp__WideCharToMultiByte@32:dword
					; DATA XREF: WideCharToMultiByte(x,x,x,x,x,x,x,x)r

;
; Imports from msvcrt.dll
;
		extrn __imp____dllonexit:dword ; DATA XREF: ___dllonexitr
; int *__cdecl __errno()
		extrn __imp___errno:dword ; DATA XREF: __errnor
		extrn __imp___iob:dword	; DATA XREF: ___report_error+9r
		extrn __imp___winmajor:dword ; DATA XREF: __dyn_tls_init(x,x,x)+7r
; void __cdecl _abort()
		extrn __imp__abort:dword ; DATA	XREF: _abortr
; void *__cdecl	_calloc(size_t NumOfElements, size_t SizeOfElements)
		extrn __imp__calloc:dword ; DATA XREF: _callocr
; int __cdecl _fflush(FILE *File)
		extrn __imp__fflush:dword ; DATA XREF: _fflushr
		extrn __imp__floor:dword ; DATA	XREF: _floorr
; void __cdecl _free(void *Memory)
		extrn __imp__free:dword	; DATA XREF: _freer
; size_t __cdecl _fwrite(const void *Str, size_t Size, size_t Count, FILE *File)
		extrn __imp__fwrite:dword ; DATA XREF: _fwriter
; char *__cdecl	_getenv(const char *VarName)
		extrn __imp__getenv:dword ; DATA XREF: _getenvr
; void *__cdecl	_malloc(size_t Size)
		extrn __imp__malloc:dword ; DATA XREF: _mallocr
; void *__cdecl	_memcpy(void *Dst, const void *Src, size_t Size)
		extrn __imp__memcpy:dword ; DATA XREF: _memcpyr
; int _sprintf(char *Dest, const char *Format, ...)
		extrn __imp__sprintf:dword ; DATA XREF:	_sprintfr
; int __cdecl _vfprintf(FILE *File, const char *Format,	va_list	ArgList)
		extrn __imp__vfprintf:dword ; DATA XREF: _vfprintfr
; int __cdecl _wcscmp(const wchar_t *Str1, const wchar_t *Str2)
		extrn __imp__wcscmp:dword ; DATA XREF: _wcscmpr
; wchar_t *__cdecl _wcscpy(wchar_t *Dest, const	wchar_t	*Source)
		extrn __imp__wcscpy:dword ; DATA XREF: _wcscpyr
; size_t __cdecl _wcslen(const wchar_t *Str)
		extrn __imp__wcslen:dword ; DATA XREF: _wcslenr

;
; Imports from USER32.dll
;
; BOOL __stdcall SystemParametersInfoA(UINT uiAction, UINT uiParam, PVOID pvParam, UINT	fWinIni)
		extrn __imp__SystemParametersInfoA@16:dword
					; DATA XREF: SystemParametersInfoA(x,x,x,x)r

;
; Imports from USP10.DLL
;
; __declspec(dllimport)	__stdcall ScriptGetProperties(x, x)
		extrn __imp__ScriptGetProperties@8:dword
					; DATA XREF: ScriptGetProperties(x,x)r
; __declspec(dllimport)	__stdcall ScriptIsComplex(x, x,	x)
		extrn __imp__ScriptIsComplex@12:dword ;	DATA XREF: ScriptIsComplex(x,x,x)r
; __declspec(dllimport)	__stdcall ScriptItemize(x, x, x, x, x, x, x)
		extrn __imp__ScriptItemize@28:dword
					; DATA XREF: ScriptItemize(x,x,x,x,x,x,x)r
; __declspec(dllimport)	__stdcall ScriptPlace(x, x, x, x, x, x,	x, x, x)
		extrn __imp__ScriptPlace@36:dword
					; DATA XREF: ScriptPlace(x,x,x,x,x,x,x,x,x)r
; __declspec(dllimport)	__stdcall ScriptShape(x, x, x, x, x, x,	x, x, x, x)
		extrn __imp__ScriptShape@40:dword
					; DATA XREF: ScriptShape(x,x,x,x,x,x,x,x,x,x)r


; Section 8. (virtual address 00012000)
; Virtual size			: 00000018 (	 24.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 0000C400
; Flags	C0300040: Data Readable	Writable
; Alignment	: 4 bytes
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_CRT		segment	dword public 'DATA' use32
		assume cs:_CRT
		;org 6B292000h
		public ___crt_xc_start__
___crt_xc_start__ dd 0
		public ___xl_c
___xl_c		dd offset ___dyn_tls_init@12 ; DATA XREF: .tls:TlsCallbacks_ptro
					; __dyn_tls_init(x,x,x)
		public ___xl_d
___xl_d		dd offset ___dyn_tls_dtor@12 ; __dyn_tls_dtor(x,x,x)
		public ___xl_z
___xl_z		dd 0
		public ___crt_xt_end__
___crt_xt_end__	dd 0
___xd_z		dd 7Bh dup(0)		; DATA XREF: __dyn_tls_init(x,x,x):loc_6B288EE6o
					; __dyn_tls_init(x,x,x)+13Bo ...
		align 1000h
_CRT		ends

; Section 9. (virtual address 00013000)
; Virtual size			: 00000020 (	 32.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 0000C600
; Flags	C0300040: Data Readable	Writable
; Alignment	: 4 bytes
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_tls		segment	dword public 'DATA' use32
		assume cs:_tls
		;org 6B293000h
		public __tls_used
__tls_used	dd offset TlsStart
TlsEnd_ptr	dd offset __tls_end
TlsIndex_ptr	dd offset __tls_index
TlsCallbacks_ptr dd offset ___xl_c
TlsSizeOfZeroFill dd 0
TlsCharacteristics dd 0
		public __tls_start
__tls_start	db 0
TlsStart	db 3 dup(0)		; DATA XREF: .tls:__tls_usedo
		public __tls_end
__tls_end	dd 0			; DATA XREF: .tls:TlsEnd_ptro
		public ___tls_end__
___tls_end__	dd 78h dup(0)
		align 1000h
_tls		ends


		end _DllMainCRTStartup@12

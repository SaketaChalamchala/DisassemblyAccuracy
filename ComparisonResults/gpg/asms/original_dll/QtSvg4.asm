;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	EBFF5BFAD5ACFF66BFD2B97FFEECBC18
; Input	CRC32 :	77DAE12B

; File Name   :	C:\compspace\compare\gpg\dlls\original\QtSvg4.dll
; Format      :	Portable executable for	80386 (PE)
; Imagebase   :	71000000
; Section 1. (virtual address 00001000)
; Virtual size			: 00052D90 ( 339344.)
; Section size in file		: 00052E00 ( 339456.)
; Offset to raw	data for section: 00000400
; Flags	60500060: Text Data Executable Readable
; Alignment	: 16 bytes

		include	uni.inc	; see unicode subdir of	ida for	info on	unicode

		.686p
		.mmx
		.model flat
.intel_syntax noprefix

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 71001000h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


sub_71001000	proc near		; DATA XREF: .CRT:7106800Co

var_1C		= dword	ptr -1Ch

		push	ebx
		sub	esp, 18h
		mov	[esp+1Ch+var_1C], 80h ;	size_t
		call	malloc
		mov	ebx, eax
		mov	[esp+1Ch+var_1C], eax
		call	sub_71039DF0
		test	ebx, ebx
		mov	ds:dword_7105E3AC, eax
		mov	ds:dword_7105E3A8, eax
		mov	eax, 1
		jz	short loc_71001035
		mov	dword ptr [ebx], 0
		xor	al, al

loc_71001035:				; CODE XREF: sub_71001000+2Bj
		add	esp, 18h
		pop	ebx
		retn
sub_71001000	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71001040	proc near		; CODE XREF: sub_71001260+DAp
					; sub_71001260+128p ...

dwMilliseconds	= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	esi
		push	ebx
		sub	esp, 14h
		mov	edx, [esp+1Ch+arg_4]
		test	edx, edx
		jnz	short loc_710010C6
		mov	edx, ds:dword_7105E000
		xor	eax, eax
		test	edx, edx
		jle	short loc_710010BE
		sub	edx, 1
		mov	ebx, ds:Sleep
		mov	ds:dword_7105E000, edx
		jmp	short loc_7100107C
; ---------------------------------------------------------------------------
		align 10h

loc_71001070:				; CODE XREF: sub_71001040+5Dj
		mov	[esp+1Ch+dwMilliseconds], 3E8h ; dwMilliseconds
		call	ebx ; Sleep
		sub	esp, 4

loc_7100107C:				; CODE XREF: sub_71001040+28j
		mov	[esp+1Ch+var_14], 0
		mov	[esp+1Ch+var_18], 1
		mov	[esp+1Ch+dwMilliseconds], offset dword_7105E3B0
		call	sub_7103B010
		sub	esp, 0Ch
		test	eax, eax
		jnz	short loc_71001070
		mov	eax, ds:dword_7105E3B4
		cmp	eax, 2
		jz	loc_71001170
		mov	[esp+1Ch+dwMilliseconds], 1Fh
		call	_amsg_exit
		mov	eax, 1

loc_710010BE:				; CODE XREF: sub_71001040+17j
					; sub_71001040+8Ej
		add	esp, 14h
		pop	ebx
		pop	esi
		retn	0Ch
; ---------------------------------------------------------------------------

loc_710010C6:				; CODE XREF: sub_71001040+Bj
		cmp	edx, 1
		mov	eax, 1
		jnz	short loc_710010BE
		mov	eax, large fs:18h
		mov	esi, ds:Sleep
		mov	ebx, [eax+4]
		jmp	short loc_710010F5
; ---------------------------------------------------------------------------

loc_710010E1:				; CODE XREF: sub_71001040+D2j
		cmp	eax, ebx
		jz	loc_71001238
		mov	[esp+1Ch+dwMilliseconds], 3E8h ; dwMilliseconds
		call	esi ; Sleep
		sub	esp, 4

loc_710010F5:				; CODE XREF: sub_71001040+9Fj
		mov	[esp+1Ch+var_14], 0
		mov	[esp+1Ch+var_18], ebx
		mov	[esp+1Ch+dwMilliseconds], offset dword_7105E3B0
		call	sub_7103B010
		sub	esp, 0Ch
		test	eax, eax
		jnz	short loc_710010E1
		xor	ebx, ebx

loc_71001116:				; CODE XREF: sub_71001040+1FDj
		mov	eax, ds:dword_7105E3B4
		test	eax, eax
		jz	loc_710011F7
		mov	[esp+1Ch+dwMilliseconds], 1Fh
		call	_amsg_exit

loc_7100112F:				; CODE XREF: sub_71001040+1F3j
		test	ebx, ebx
		jz	loc_71001242

loc_71001137:				; CODE XREF: sub_71001040+219j
		mov	eax, ds:off_7105CA40
		test	eax, eax
		jz	short loc_7100115C
		mov	edx, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_18], 2
		mov	[esp+1Ch+var_14], edx
		mov	edx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+dwMilliseconds], edx
		call	eax ; TlsCallback_0
		sub	esp, 0Ch

loc_7100115C:				; CODE XREF: sub_71001040+FEj
		add	ds:dword_7105E000, 1
		mov	eax, 1
		add	esp, 14h
		pop	ebx
		pop	esi
		retn	0Ch
; ---------------------------------------------------------------------------

loc_71001170:				; CODE XREF: sub_71001040+67j
		mov	eax, ds:dword_7105E3AC
		mov	[esp+1Ch+dwMilliseconds], eax
		call	sub_71039DE0
		test	eax, eax
		mov	ebx, eax
		jz	short loc_710011C9
		mov	eax, ds:dword_7105E3A8
		mov	[esp+1Ch+dwMilliseconds], eax
		call	sub_71039DE0
		mov	esi, eax

loc_71001192:				; CODE XREF: sub_71001040+15Dj
		sub	esi, 4
		cmp	ebx, esi
		ja	short loc_710011A8

loc_71001199:				; CODE XREF: sub_71001040+166j
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_71001192
		sub	esi, 4
		call	eax
		cmp	ebx, esi
		jbe	short loc_71001199

loc_710011A8:				; CODE XREF: sub_71001040+157j
		mov	[esp+1Ch+dwMilliseconds], ebx ;	void *
		nop
		lea	esi, [esi+0]
		call	free
		mov	ds:dword_7105E3A8, 0
		mov	ds:dword_7105E3AC, 0

loc_710011C9:				; CODE XREF: sub_71001040+141j
		mov	ds:dword_7105E3B4, 0
		mov	[esp+1Ch+var_18], 0
		mov	[esp+1Ch+dwMilliseconds], offset dword_7105E3B0
		call	sub_7103B040
		mov	eax, 1
		sub	esp, 8
		add	esp, 14h
		pop	ebx
		pop	esi
		retn	0Ch
; ---------------------------------------------------------------------------

loc_710011F7:				; CODE XREF: sub_71001040+DDj
		mov	ds:dword_7105E3B4, 1
		mov	[esp+1Ch+var_18], offset dword_71068010
		mov	[esp+1Ch+dwMilliseconds], offset dword_71068008
		call	_initterm
		mov	[esp+1Ch+var_18], offset dword_71068004
		mov	[esp+1Ch+dwMilliseconds], offset dword_71068000
		call	_initterm
		mov	ds:dword_7105E3B4, 2
		jmp	loc_7100112F
; ---------------------------------------------------------------------------

loc_71001238:				; CODE XREF: sub_71001040+A3j
		mov	ebx, 1
		jmp	loc_71001116
; ---------------------------------------------------------------------------

loc_71001242:				; CODE XREF: sub_71001040+F1j
		mov	[esp+1Ch+var_18], 0
		mov	[esp+1Ch+dwMilliseconds], offset dword_7105E3B0
		call	sub_7103B040
		sub	esp, 8
		jmp	loc_71001137
sub_71001040	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71001260	proc near		; CODE XREF: DllEntryPoint+1Ep

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 2Ch
		test	edx, edx
		mov	[esp+2Ch+var_10], ebx
		mov	ebx, eax
		mov	[esp+2Ch+var_C], esi
		mov	esi, edx
		mov	[esp+2Ch+var_4], ebp
		mov	ebp, ecx
		mov	[esp+2Ch+var_8], edi
		mov	dword_71054030,	edx
		jnz	short loc_710012E0
		mov	eax, ds:dword_7105E000
		test	eax, eax
		jz	loc_710013B7
		call	sub_71039FB0

loc_71001295:				; CODE XREF: sub_71001260+90j
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], esi
		mov	[esp+2Ch+var_2C], ebx
		call	sub_7103A2E0
		sub	esp, 0Ch
		cmp	esi, 3
		mov	edi, eax
		jz	loc_710013A0
		test	esi, esi
		jz	loc_710013A0

loc_710012BB:				; CODE XREF: sub_71001260+B2j
					; sub_71001260+F9j ...
		mov	eax, edi
		mov	ebx, [esp+2Ch+var_10]
		mov	dword_71054030,	0FFFFFFFFh
		mov	esi, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_8]
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_710012E0:				; CODE XREF: sub_71001260+21j
		lea	eax, [edx-1]
		cmp	eax, 1
		jbe	short loc_71001360

loc_710012E8:				; CODE XREF: sub_71001260+134j
		call	sub_71039FB0
		cmp	esi, 1
		jnz	short loc_71001295
		call	sub_7103A2C0
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], 1
		mov	[esp+2Ch+var_2C], ebx
		call	sub_7103A2E0
		sub	esp, 0Ch
		test	eax, eax
		mov	edi, eax
		jnz	short loc_710012BB
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], ebx
		call	sub_7103A2E0
		sub	esp, 0Ch
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], ebx
		call	sub_71001040
		sub	esp, 0Ch
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], ebx
		call	sub_7103A2F0
		sub	esp, 0Ch
		jmp	loc_710012BB
; ---------------------------------------------------------------------------
		align 10h

loc_71001360:				; CODE XREF: sub_71001260+86j
		mov	[esp+2Ch+var_24], ecx
		mov	[esp+2Ch+var_28], edx
		mov	[esp+2Ch+var_2C], ebx
		call	sub_7103A2F0
		sub	esp, 0Ch
		test	eax, eax
		mov	edi, eax
		jz	loc_710012BB
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], esi
		mov	[esp+2Ch+var_2C], ebx
		call	sub_71001040
		sub	esp, 0Ch
		test	eax, eax
		mov	edi, eax
		jnz	loc_710012E8
		jmp	loc_710012BB
; ---------------------------------------------------------------------------
		align 10h

loc_710013A0:				; CODE XREF: sub_71001260+4Dj
					; sub_71001260+55j
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], esi
		mov	[esp+2Ch+var_2C], ebx
		call	sub_71001040
		sub	esp, 0Ch
		test	eax, eax
		jnz	short loc_710013C0

loc_710013B7:				; CODE XREF: sub_71001260+2Aj
		xor	edi, edi
		jmp	loc_710012BB
; ---------------------------------------------------------------------------
		align 10h

loc_710013C0:				; CODE XREF: sub_71001260+155j
		test	edi, edi
		jz	loc_710012BB
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], esi
		mov	[esp+2Ch+var_2C], ebx
		call	sub_7103A2F0
		sub	esp, 0Ch
		mov	edi, eax
		jmp	loc_710012BB
sub_71001260	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; BOOL __stdcall DllEntryPoint(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpReserved)
		public DllEntryPoint
DllEntryPoint	proc near

var_10		= dword	ptr -10h
hinstDLL	= dword	ptr  4
fdwReason	= dword	ptr  8
lpReserved	= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+fdwReason]
		mov	ds:dword_7105E014, 0
		cmp	edx, 1
		jz	short loc_71001420

loc_71001406:				; CODE XREF: DllEntryPoint+3Dj
		mov	ecx, [esp+1Ch+lpReserved]
		mov	eax, [esp+1Ch+hinstDLL]
		call	sub_71001260
		add	esp, 1Ch
		retn	0Ch
; ---------------------------------------------------------------------------
		align 10h

loc_71001420:				; CODE XREF: DllEntryPoint+14j
		mov	[esp+1Ch+var_10], edx
		call	sub_7103A390
		mov	edx, [esp+1Ch+var_10]
		jmp	short loc_71001406
DllEntryPoint	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71001430	proc near		; CODE XREF: sub_7103B1F0+6p
		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, dword_71058A88
		test	eax, eax
		jz	short locret_7100147B
		mov	dword ptr [esp], offset	ModuleName ; "libgcj_s.dll"
		call	ds:GetModuleHandleA
		mov	edx, eax
		sub	esp, 4
		test	edx, edx
		mov	eax, 0
		jz	short loc_7100146E
		mov	dword ptr [esp+4], offset ProcName ; "_Jv_RegisterClasses"
		mov	[esp], edx	; hModule
		call	ds:GetProcAddress
		sub	esp, 8

loc_7100146E:				; CODE XREF: sub_71001430+28j
		test	eax, eax
		jz	short locret_7100147B
		mov	dword ptr [esp], offset	dword_71058A88
		call	eax

locret_7100147B:			; CODE XREF: sub_71001430+Dj
					; sub_71001430+40j
		leave
		retn
sub_71001430	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_71001480()
sub_71001480	proc near		; DATA XREF: sub_7103B1F0+Bo
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_71001480	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71001490	proc near		; CODE XREF: sub_7100D060+16Ep

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	ecx, [edx]
		mov	dword ptr [eax+94h], 0Fh
		mov	[eax+98h], ecx
		mov	ecx, [edx+4]
		mov	[eax+9Ch], ecx
		mov	ecx, [edx+8]
		mov	[eax+0A0h], ecx
		mov	edx, [edx+0Ch]
		mov	[eax+0A4h], edx
		retn
sub_71001490	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710014D0	proc near		; DATA XREF: .rdata:7105D694o
		mov	eax, 4
		retn
sub_710014D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710014E0	proc near		; DATA XREF: .rdata:7105DB94o
		mov	eax, 5
		retn
sub_710014E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710014F0	proc near		; DATA XREF: .rdata:7105D494o
		mov	eax, 6
		retn
sub_710014F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71001500	proc near		; DATA XREF: .rdata:7105D5F4o
		mov	eax, 7
		retn
sub_71001500	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71001510	proc near		; DATA XREF: .rdata:7105DCB4o
		mov	eax, 8
		retn
sub_71001510	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71001520	proc near		; DATA XREF: .rdata:7105DC14o
		mov	eax, 9
		retn
sub_71001520	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71001530	proc near		; DATA XREF: .rdata:7105DC54o
		mov	eax, 0Ah
		retn
sub_71001530	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71001540	proc near		; DATA XREF: .rdata:7105D614o
		mov	eax, 0Bh
		retn
sub_71001540	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71001550	proc near		; DATA XREF: .rdata:7105D634o
		mov	eax, 0Ch
		retn
sub_71001550	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71001560	proc near		; DATA XREF: .rdata:7105DC74o
		mov	eax, 0Dh
		retn
sub_71001560	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71001570	proc near		; DATA XREF: .rdata:7105DC94o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+94h]
		retn
sub_71001570	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71001580	proc near		; DATA XREF: .rdata:7105DBB4o
		mov	eax, 11h
		retn
sub_71001580	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71001590	proc near		; DATA XREF: .rdata:7105DCF4o
		mov	eax, 12h
		retn
sub_71001590	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710015A0	proc near		; DATA XREF: .rdata:7105DB98o

var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_59		= byte ptr -59h
var_58		= qword	ptr -58h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
var_14		= byte ptr -14h
var_10		= byte ptr -10h
var_C		= byte ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71052C0C
		mov	[ebp+var_28], offset sub_7100175B
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_8]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_710225F0
		fst	[ebp+var_58]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_710015F6
		fchs

loc_710015F6:				; CODE XREF: sub_710015A0+52j
		fld	ds:dbl_71059050
		fucompp
		fnstsw	ax
		mov	[ebp+var_59], 0
		sahf
		jb	short loc_71001680
		mov	edx, [ebp+arg_4]
		mov	ecx, [ebp+arg_8]
		mov	[ebp+var_48], 4
		sub	edx, 0FFFFFF80h
		mov	[ebp+var_64], edx
		mov	[esp], ecx
		call	ds:_ZNK8QPainter9transformEv
		mov	ecx, [ebp+var_64]
		lea	edx, [ebp+var_C]
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[esp+8], ecx
		call	ds:_ZNK10QTransform3mapERK12QPainterPath
		sub	esp, 4
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_59], 1
		mov	[esp], eax
		call	ds:_ZNK12QPainterPath12boundingRectEv
		sub	esp, 4
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN12QPainterPathD1Ev

loc_7100166A:				; CODE XREF: sub_710015A0+1B6j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_71001680:				; CODE XREF: sub_710015A0+65j
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 4
		sub	edx, 0FFFFFF80h
		mov	[ebp+var_60], edx
		call	ds:_ZN19QPainterPathStrokerC1Ev
		fld	[ebp+var_58]
		lea	eax, [ebp+var_10]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	ds:_ZN19QPainterPathStroker8setWidthEd
		mov	edx, [ebp+var_60]
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[esp+8], edx
		lea	edx, [ebp+var_10]
		mov	[esp+4], edx
		call	ds:_ZNK19QPainterPathStroker12createStrokeERK12QPainterPath
		mov	ecx, [ebp+arg_8]
		sub	esp, 4
		mov	[ebp+var_48], 2
		mov	[esp], ecx
		call	ds:_ZNK8QPainter9transformEv
		lea	edx, [ebp+var_18]
		lea	ecx, [ebp+var_14]
		mov	[esp+8], ecx
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZNK10QTransform3mapERK12QPainterPath
		sub	esp, 4
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	ds:_ZNK12QPainterPath12boundingRectEv
		sub	esp, 4
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN12QPainterPathD1Ev
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	ds:_ZN12QPainterPathD1Ev
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 4
		call	ds:_ZN19QPainterPathStrokerD1Ev
		jmp	loc_7100166A
sub_710015A0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7100175B	proc near		; DATA XREF: sub_710015A0+23o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-6Ch], edx
		jz	short loc_71001789
		cmp	eax, 2
		jz	short loc_7100179C
		cmp	eax, 3
		jz	short loc_710017AF
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN12QPainterPathD1Ev

loc_71001789:				; CODE XREF: sub_7100175B+Fj
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN12QPainterPathD1Ev

loc_7100179C:				; CODE XREF: sub_7100175B+14j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN19QPainterPathStrokerD1Ev

loc_710017AF:				; CODE XREF: sub_7100175B+19j
		mov	ecx, [ebp-6Ch]
		cmp	byte ptr [ebp-59h], 0
		mov	[ebp-68h], ecx
		jz	short loc_710017CE
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN12QPainterPathD1Ev

loc_710017CE:				; CODE XREF: sub_7100175B+5Ej
		mov	eax, [ebp-68h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7100175B	endp


; =============== S U B	R O U T	I N E =======================================


sub_710017E0	proc near		; DATA XREF: .rdata:7105DCB8o

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 38h
		mov	eax, [esp+3Ch+arg_8]
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_3C], eax
		call	ds:_ZNK8QPainter9transformEv
		mov	ecx, [esp+38h+arg_8]
		lea	edx, [esp+38h+var_18]
		mov	[esp+38h+var_38], edx
		add	ecx, 8Ch
		mov	[esp+38h+var_30], ecx
		mov	[esp+38h+var_34], eax
		call	ds:_ZNK10QTransform7mapRectERK5QRect
		sub	esp, 4
		mov	ecx, [esp+3Ch+var_1C]
		mov	edx, [esp+3Ch+var_18]
		mov	eax, [esp+3Ch+var_14]
		mov	[esp+3Ch+var_20], ecx
		fild	[esp+3Ch+var_20]
		fstp	qword ptr [ebx]
		add	eax, 1
		mov	[esp+3Ch+var_20], edx
		sub	eax, ecx
		fild	[esp+3Ch+var_20]
		fstp	qword ptr [ebx+8]
		mov	[esp+3Ch+var_20], eax
		mov	eax, [esp+3Ch+var_10]
		fild	[esp+3Ch+var_20]
		fstp	qword ptr [ebx+10h]
		add	eax, 1
		sub	eax, edx
		mov	[esp+3Ch+var_20], eax
		mov	eax, ebx
		fild	[esp+3Ch+var_20]
		fstp	qword ptr [ebx+18h]
		add	esp, 38h
		pop	ebx
		retn	4
sub_710017E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71001870	proc near		; DATA XREF: .rdata:7105DBB8o

var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= qword	ptr -30h
var_28		= qword	ptr -28h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 5Ch
		mov	[esp+5Ch+var_10], ebx
		mov	ebx, [esp+5Ch+arg_0]
		fldz
		mov	[esp+5Ch+var_C], esi
		mov	esi, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_8], edi
		mov	edi, [esp+5Ch+arg_8]
		mov	[esp+5Ch+var_4], ebp
		fst	qword ptr [ebx+8]
		mov	eax, [esi+80h]
		fst	qword ptr [ebx]
		test	eax, eax
		fst	qword ptr [ebx+18h]
		fstp	qword ptr [ebx+10h]
		jz	loc_71001946
		lea	eax, [esi+88h]
		mov	ebp, ds:_ZN8QPainter9translateERK7QPointF
		mov	[esp+5Ch+var_58], eax
		mov	[esp+5Ch+var_5C], edi
		call	ebp ; _ZN8QPainter9translateERK7QPointF
		mov	eax, [esi+80h]
		lea	ecx, [esp+5Ch+var_4C]
		mov	edx, [eax]
		mov	eax, [esp+5Ch+arg_C]
		mov	[esp+5Ch+var_54], edi
		mov	[esp+5Ch+var_50], eax
		mov	eax, [esi+80h]
		mov	[esp+5Ch+var_5C], ecx
		mov	[esp+5Ch+var_58], eax
		call	dword ptr [edx+14h]
		sub	esp, 4
		mov	eax, [esp+60h+var_50]
		mov	[ebx], eax
		mov	eax, [esp+60h+var_4C]
		mov	[ebx+4], eax
		mov	eax, [esp+60h+var_48]
		mov	[ebx+8], eax
		mov	eax, [esp+60h+var_44]
		mov	[ebx+0Ch], eax
		mov	eax, [esp+60h+var_40]
		mov	[ebx+10h], eax
		mov	eax, [esp+60h+var_3C]
		mov	[ebx+14h], eax
		mov	eax, [esp+60h+var_38]
		mov	[ebx+18h], eax
		mov	eax, [esp+60h+var_34]
		mov	[ebx+1Ch], eax
		lea	eax, [esp+60h+var_30]
		fld	qword ptr [esi+90h]
		fchs
		fld	qword ptr [esi+88h]
		fchs
		fstp	[esp+60h+var_30]
		fstp	[esp+60h+var_28]
		mov	[esp+60h+var_5C], eax
		mov	[esp+60h+var_60], edi
		call	ebp ; _ZN8QPainter9translateERK7QPointF

loc_71001946:				; CODE XREF: sub_71001870+34j
		mov	eax, ebx
		mov	esi, [esp+5Ch+var_C]
		mov	ebx, [esp+5Ch+var_10]
		mov	edi, [esp+5Ch+var_8]
		mov	ebp, [esp+5Ch+var_4]
		add	esp, 5Ch
		retn	4
sub_71001870	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71001960	proc near		; DATA XREF: .rdata:7105DCF0o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	[esp+1Ch+var_C], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_8], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_4], edi
		mov	edi, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], esi
		mov	[esp+1Ch+var_14], edi
		call	sub_710227B0
		mov	[esp+1Ch+arg_8], edi
		mov	edi, [esp+1Ch+var_4]
		mov	[esp+1Ch+arg_4], esi
		mov	esi, [esp+1Ch+var_8]
		mov	[esp+1Ch+arg_0], ebx
		mov	ebx, [esp+1Ch+var_C]
		add	esp, 1Ch
		jmp	sub_71022790
sub_71001960	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710019B0	proc near		; DATA XREF: .rdata:7105DBB0o

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_2C		= qword	ptr -2Ch
var_24		= qword	ptr -24h
var_1C		= qword	ptr -1Ch
var_14		= qword	ptr -14h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 3Ch
		mov	[esp+3Ch+var_C], ebx
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_8], esi
		mov	esi, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_4], edi
		mov	edi, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_3C], ebx
		mov	[esp+3Ch+var_38], esi
		mov	[esp+3Ch+var_34], edi
		call	sub_710227B0
		mov	eax, [ebx+8Ch]
		or	eax, [ebx+88h]
		jnz	short loc_71001A60
		mov	eax, [ebx+94h]
		or	eax, [ebx+90h]
		jnz	short loc_71001A60

loc_710019F7:				; CODE XREF: sub_710019B0+C3j
		mov	eax, [ebx+80h]
		mov	edx, [eax]
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_34], edi
		mov	[esp+3Ch+var_38], esi
		call	dword ptr [edx+8]
		fld	qword ptr [ebx+88h]
		fstp	[esp+3Ch+var_2C]
		mov	eax, dword ptr [esp+3Ch+var_2C]
		mov	edx, dword ptr [esp+3Ch+var_2C+4]
		or	edx, eax
		jnz	short loc_71001A75
		fld	qword ptr [ebx+90h]
		fstp	[esp+3Ch+var_24]
		mov	eax, dword ptr [esp+3Ch+var_24]
		mov	edx, dword ptr [esp+3Ch+var_24+4]
		or	edx, eax
		jnz	short loc_71001A7F

loc_71001A39:				; CODE XREF: sub_710019B0+F4j
		mov	[esp+3Ch+var_34], edi
		mov	[esp+3Ch+var_38], esi
		mov	[esp+3Ch+var_3C], ebx
		call	sub_71022790
		mov	ebx, [esp+3Ch+var_C]
		mov	esi, [esp+3Ch+var_8]
		mov	edi, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71001A60:				; CODE XREF: sub_710019B0+37j
					; sub_710019B0+45j
		lea	eax, [ebx+88h]
		mov	[esp+3Ch+var_38], eax
		mov	[esp+3Ch+var_3C], esi
		call	ds:_ZN8QPainter9translateERK7QPointF
		jmp	short loc_710019F7
; ---------------------------------------------------------------------------

loc_71001A75:				; CODE XREF: sub_710019B0+71j
		fld	qword ptr [ebx+90h]
		fstp	[esp+3Ch+var_24]

loc_71001A7F:				; CODE XREF: sub_710019B0+87j
		fld	[esp+3Ch+var_2C]
		lea	eax, [esp+3Ch+var_1C]
		fchs
		fstp	[esp+3Ch+var_1C]
		fld	[esp+3Ch+var_24]
		fchs
		fstp	[esp+3Ch+var_14]
		mov	[esp+3Ch+var_38], eax
		mov	[esp+3Ch+var_3C], esi
		call	ds:_ZN8QPainter9translateERK7QPointF
		jmp	short loc_71001A39
sub_710019B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71001AB0	proc near		; CODE XREF: sub_7100E020+323p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_18], eax
		mov	[esp+1Ch+var_1C], ebx
		call	sub_71022420
		mov	eax, [esp+1Ch+arg_C]
		mov	dword ptr [ebx], offset	off_7105DBA8
		mov	[ebx+80h], eax
		mov	eax, [esi]
		mov	[ebx+88h], eax
		mov	eax, [esi+4]
		mov	[ebx+8Ch], eax
		mov	eax, [esi+8]
		mov	[ebx+90h], eax
		mov	eax, [esi+0Ch]
		mov	[ebx+94h], eax
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_71001AB0	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 1Ch
		mov	eax, [esp+28h]
		mov	[esp+14h], ebx
		mov	ebx, [esp+20h]
		mov	[esp+18h], esi
		mov	esi, [esp+24h]
		mov	[esp+4], eax
		mov	[esp], ebx
		call	sub_71022420
		mov	eax, [esp+2Ch]
		mov	dword ptr [ebx], offset	off_7105DBA8
		mov	[ebx+80h], eax
		mov	eax, [esi]
		mov	[ebx+88h], eax
		mov	eax, [esi+4]
		mov	[ebx+8Ch], eax
		mov	eax, [esi+8]
		mov	[ebx+90h], eax
		mov	eax, [esi+0Ch]
		mov	[ebx+94h], eax
		mov	ebx, [esp+14h]
		mov	esi, [esp+18h]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71001B90	proc near		; CODE XREF: sub_7100C260+12Fp

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	esi
		push	ebx
		sub	esp, 14h
		mov	ebx, [esp+1Ch+arg_0]
		mov	esi, [esp+1Ch+arg_8]
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_71022420
		mov	eax, [esi]
		mov	dword ptr [ebx], offset	off_7105DC88
		mov	[ebx+80h], eax
		mov	eax, [esi+4]
		mov	[ebx+84h], eax
		mov	eax, [esi+8]
		mov	[ebx+88h], eax
		mov	eax, [esi+0Ch]
		mov	[ebx+8Ch], eax
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	[ebx+90h], eax
		lock inc dword ptr [eax]
		setnz	dl
		fldz
		fst	qword ptr [ebx+98h]
		mov	dword ptr [ebx+94h], 0Eh
		fstp	qword ptr [ebx+0A0h]
		mov	dword ptr [ebx+0A8h], 0
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
sub_71001B90	endp

; ---------------------------------------------------------------------------
		align 10h
		push	esi
		push	ebx
		sub	esp, 14h
		mov	ebx, [esp+20h]
		mov	esi, [esp+28h]
		mov	eax, [esp+24h]
		mov	[esp], ebx
		mov	[esp+4], eax
		call	sub_71022420
		mov	eax, [esi]
		mov	dword ptr [ebx], offset	off_7105DC88
		mov	[ebx+80h], eax
		mov	eax, [esi+4]
		mov	[ebx+84h], eax
		mov	eax, [esi+8]
		mov	[ebx+88h], eax
		mov	eax, [esi+0Ch]
		mov	[ebx+8Ch], eax
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	[ebx+90h], eax
		lock inc dword ptr [eax]
		setnz	dl
		fldz
		fst	qword ptr [ebx+98h]
		mov	dword ptr [ebx+94h], 0Eh
		fstp	qword ptr [ebx+0A0h]
		mov	dword ptr [ebx+0A8h], 0
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71001C90	proc near		; CODE XREF: sub_7100C470+3DCp

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	esi
		push	ebx
		sub	esp, 14h
		mov	ebx, [esp+1Ch+arg_0]
		mov	esi, [esp+1Ch+arg_8]
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_71022420
		mov	eax, [esi]
		mov	dword ptr [ebx], offset	off_7105DC68
		mov	[ebx+80h], eax
		mov	eax, [esi+4]
		mov	[ebx+84h], eax
		mov	eax, [esi+8]
		mov	[ebx+88h], eax
		mov	eax, [esi+0Ch]
		mov	[ebx+8Ch], eax
		mov	eax, [esi+10h]
		mov	[ebx+90h], eax
		mov	eax, [esi+14h]
		mov	[ebx+94h], eax
		mov	eax, [esi+18h]
		mov	[ebx+98h], eax
		mov	eax, [esi+1Ch]
		mov	[ebx+9Ch], eax
		mov	eax, [esp+1Ch+arg_C]
		mov	[ebx+0A0h], eax
		mov	eax, [esp+1Ch+arg_10]
		mov	[ebx+0A4h], eax
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
sub_71001C90	endp

; ---------------------------------------------------------------------------
		align 10h
		push	esi
		push	ebx
		sub	esp, 14h
		mov	ebx, [esp+20h]
		mov	esi, [esp+28h]
		mov	eax, [esp+24h]
		mov	[esp], ebx
		mov	[esp+4], eax
		call	sub_71022420
		mov	eax, [esi]
		mov	dword ptr [ebx], offset	off_7105DC68
		mov	[ebx+80h], eax
		mov	eax, [esi+4]
		mov	[ebx+84h], eax
		mov	eax, [esi+8]
		mov	[ebx+88h], eax
		mov	eax, [esi+0Ch]
		mov	[ebx+8Ch], eax
		mov	eax, [esi+10h]
		mov	[ebx+90h], eax
		mov	eax, [esi+14h]
		mov	[ebx+94h], eax
		mov	eax, [esi+18h]
		mov	[ebx+98h], eax
		mov	eax, [esi+1Ch]
		mov	[ebx+9Ch], eax
		mov	eax, [esp+2Ch]
		mov	[ebx+0A0h], eax
		mov	eax, [esp+30h]
		mov	[ebx+0A4h], eax
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71001DB0	proc near		; CODE XREF: sub_7100BA30+211p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	esi
		push	ebx
		sub	esp, 14h
		mov	ebx, [esp+1Ch+arg_0]
		mov	esi, [esp+1Ch+arg_8]
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_71022420
		mov	eax, [esi]
		mov	dword ptr [ebx], offset	off_7105DC08
		mov	[ebx+80h], eax
		mov	eax, [esi+4]
		mov	[ebx+84h], eax
		mov	eax, [esi+8]
		mov	[ebx+88h], eax
		mov	eax, [esi+0Ch]
		mov	[ebx+8Ch], eax
		mov	eax, [esi+10h]
		mov	[ebx+90h], eax
		mov	eax, [esi+14h]
		mov	[ebx+94h], eax
		mov	eax, [esi+18h]
		mov	[ebx+98h], eax
		mov	eax, [esi+1Ch]
		mov	[ebx+9Ch], eax
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
sub_71001DB0	endp

; ---------------------------------------------------------------------------
		push	esi
		push	ebx
		sub	esp, 14h
		mov	ebx, [esp+20h]
		mov	esi, [esp+28h]
		mov	eax, [esp+24h]
		mov	[esp], ebx
		mov	[esp+4], eax
		call	sub_71022420
		mov	eax, [esi]
		mov	dword ptr [ebx], offset	off_7105DC08
		mov	[ebx+80h], eax
		mov	eax, [esi+4]
		mov	[ebx+84h], eax
		mov	eax, [esi+8]
		mov	[ebx+88h], eax
		mov	eax, [esi+0Ch]
		mov	[ebx+8Ch], eax
		mov	eax, [esi+10h]
		mov	[ebx+90h], eax
		mov	eax, [esi+14h]
		mov	[ebx+94h], eax
		mov	eax, [esi+18h]
		mov	[ebx+98h], eax
		mov	eax, [esi+1Ch]
		mov	[ebx+9Ch], eax
		add	esp, 14h
		pop	ebx
		pop	esi
		retn

; =============== S U B	R O U T	I N E =======================================


sub_71001E90	proc near		; CODE XREF: sub_7100AD80+21Dp

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	esi
		push	ebx
		sub	esp, 14h
		mov	ebx, [esp+1Ch+arg_0]
		mov	esi, [esp+1Ch+arg_8]
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_71022420
		mov	eax, [esi]
		mov	dword ptr [ebx], offset	off_7105D5E8
		mov	[ebx+80h], eax
		mov	eax, [esi+4]
		mov	[ebx+84h], eax
		mov	eax, [esi+8]
		mov	[ebx+88h], eax
		mov	eax, [esi+0Ch]
		mov	[ebx+8Ch], eax
		mov	eax, [esi+10h]
		mov	[ebx+90h], eax
		mov	eax, [esi+14h]
		mov	[ebx+94h], eax
		mov	eax, [esi+18h]
		mov	[ebx+98h], eax
		mov	eax, [esi+1Ch]
		mov	[ebx+9Ch], eax
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
sub_71001E90	endp


; =============== S U B	R O U T	I N E =======================================


sub_71001F00	proc near		; CODE XREF: sub_7100B130+1A9p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	esi
		push	ebx
		sub	esp, 14h
		mov	ebx, [esp+1Ch+arg_0]
		mov	esi, [esp+1Ch+arg_8]
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_71022420
		mov	eax, [esi]
		mov	dword ptr [ebx], offset	off_7105D5E8
		mov	[ebx+80h], eax
		mov	eax, [esi+4]
		mov	[ebx+84h], eax
		mov	eax, [esi+8]
		mov	[ebx+88h], eax
		mov	eax, [esi+0Ch]
		mov	[ebx+8Ch], eax
		mov	eax, [esi+10h]
		mov	[ebx+90h], eax
		mov	eax, [esi+14h]
		mov	[ebx+94h], eax
		mov	eax, [esi+18h]
		mov	[ebx+98h], eax
		mov	eax, [esi+1Ch]
		mov	[ebx+9Ch], eax
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
sub_71001F00	endp

; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	dword ptr [ebp-24h], offset sub_710525B0
		mov	dword ptr [ebp-20h], offset dword_71052C38
		mov	dword ptr [ebp-18h], offset loc_71002021
		mov	[ebp-14h], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+0Ch]
		mov	[esp+4], eax
		mov	edx, [ebp+8]
		mov	[esp], edx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	sub_71022420
		mov	eax, [ebp+8]
		mov	edx, [ebp+8]
		mov	dword ptr [eax], offset	off_7105D608
		mov	eax, [ebp+10h]
		mov	eax, [eax]
		mov	[edx+80h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+8]
		mov	eax, [edx+80h]
		test	byte ptr [eax+0Ch], 1
		jz	short loc_71001FF1
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71001FF1:				; CODE XREF: .text:71001FE2j
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		sub	eax, 0FFFFFF80h
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 1
		call	sub_71048E90
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71002021:				; DATA XREF: .text:71001F8Do
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	[ebp-40h], eax
		mov	[esp], edx
		mov	dword ptr [ebp-38h], 0
		call	sub_71023D40
		mov	eax, [ebp-40h]
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71002050	proc near		; CODE XREF: sub_7101D820+42Ep

var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_71052C3E
		mov	[ebp+var_18], offset sub_71002229
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 90h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_710517F0
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 1
		mov	[esp+4], edx
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	sub_71022420
		mov	ecx, [ebp+var_40]
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	dword ptr [ecx], offset	off_7105DCC8
		mov	[ecx+80h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [ecx+84h], 0
		mov	byte ptr [ecx+88h], 0
		add	eax, 90h
		mov	[ebp+var_44], eax
		mov	eax, [edx+90h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_71002218
		mov	edx, [eax+8]

loc_710020F8:				; CODE XREF: sub_71002050+1D4j
		add	edx, 1
		mov	[esp+4], edx
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 4
		mov	dword ptr [esp], 14h
		mov	[ebp+var_38], 0FFFFFFFFh
		call	ds:_ZN11QVectorData4growEiiib
		mov	ecx, [ebp+arg_0]
		mov	[esp+8], eax
		mov	eax, [ecx+90h]
		mov	eax, [eax+8]
		mov	[esp+4], eax
		mov	eax, [ebp+var_44]
		mov	[esp], eax
		call	sub_7104EA30
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+90h]
		mov	edx, [eax+8]

loc_7100214E:				; CODE XREF: sub_71002050+1CEj
		mov	ecx, [ebp+var_40]
		mov	[eax+edx*4+10h], ecx
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+90h]
		mov	ecx, [edx+0A8h]
		add	dword ptr [eax+8], 1
		mov	[ebp+var_48], ecx
		mov	eax, [edx+90h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_71002198
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+4], eax
		mov	eax, [ebp+var_44]
		mov	[esp], eax
		call	sub_7104EA30

loc_71002198:				; CODE XREF: sub_71002050+126j
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_48]
		mov	eax, [edx+90h]
		mov	edx, [eax+8]
		mov	eax, [eax+edx*4+0Ch]
		mov	edx, [ebp+arg_0]
		mov	[eax+84h], ecx
		mov	eax, [edx+90h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_710021E1
		mov	edx, [eax+4]
		mov	ecx, [ebp+var_44]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_7104EA30

loc_710021E1:				; CODE XREF: sub_71002050+16Fj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+90h]
		mov	edx, [ebp+arg_4]
		mov	[esp+4], edx
		mov	edx, [eax+8]
		mov	eax, [eax+edx*4+0Ch]
		mov	[ebp+var_38], 0FFFFFFFFh
		sub	eax, 0FFFFFF80h
		mov	[esp], eax
		call	ds:_ZN7QString6appendERKS_
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71002218:				; CODE XREF: sub_71002050+9Fj
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jl	loc_7100214E
		jmp	loc_710020F8
sub_71002050	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71002229	proc near		; DATA XREF: sub_71002050+20o
		add	ebp, 8
		mov	ecx, [ebp-34h]
		mov	eax, [ebp-40h]
		mov	[ebp-4Ch], ecx
		mov	[esp+0], eax
		call	sub_710517D0
		mov	edx, [ebp-4Ch]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_71002229	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71002250	proc near		; DATA XREF: .rdata:7105DC70o

var_6C		= dword	ptr -6Ch
var_68		= qword	ptr -68h
var_5C		= dword	ptr -5Ch
var_58		= qword	ptr -58h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= byte ptr -10h
var_C		= byte ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 98h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71052C44
		mov	[ebp+var_28], offset sub_710025F9
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_8]
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+8], edx
		mov	edx, [ebp+arg_0]
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_710227B0
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+0A0h]
		test	ecx, ecx
		jnz	short loc_710022BD
		mov	edx, [eax+0A4h]
		test	edx, edx
		jz	loc_71002490

loc_710022BD:				; CODE XREF: sub_71002250+5Dj
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], edx
		call	ds:_ZNK8QPainter7opacityEv
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		fstp	[ebp+var_58]
		call	ds:_ZNK8QPainter5brushEv
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZN6QBrushC1ERKS_
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_48], 4
		mov	[esp], edx
		call	ds:_ZNK8QPainter3penEv
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	ds:_ZN4QPenC1ERKS_
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+4], 0
		mov	[ebp+var_48], 3
		mov	[esp], eax
		call	ds:_ZN8QPainter6setPenEN2Qt8PenStyleE
		mov	edx, [ebp+arg_8]
		fld	[ebp+var_58]
		mov	eax, [ebp+arg_4]
		fmul	qword ptr [edx]
		mov	[esp], eax
		fstp	qword ptr [esp+4]
		call	ds:_ZN8QPainter10setOpacityEd
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+18h], 1
		fild	dword ptr [eax+0A4h]
		sub	edx, 0FFFFFF80h
		fstp	qword ptr [esp+10h]
		fild	dword ptr [eax+0A0h]
		mov	[ebp+var_5C], edx
		fstp	qword ptr [esp+8]
		mov	[esp+4], edx
		mov	edx, [ebp+arg_4]
		mov	[esp], edx
		call	ds:_ZN8QPainter15drawRoundedRectERK6QRectFddN2Qt8SizeModeE
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		call	ds:_ZN8QPainter6setPenERK4QPen
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	ds:_ZNK4QPen6widthFEv
		fldz
		fxch	st(1)
		fucompp
		fnstsw	ax
		sahf
		jp	short loc_710023A9
		jz	short loc_71002422

loc_710023A9:				; CODE XREF: sub_71002250+155j
		mov	edx, [ebp+arg_8]
		fld	[ebp+var_58]
		mov	eax, [ebp+arg_4]
		fmul	qword ptr [edx+8]
		mov	[ebp+var_48], 3
		mov	[esp], eax
		fstp	qword ptr [esp+4]
		call	ds:_ZN8QPainter10setOpacityEd
		mov	edx, [ebp+arg_4]
		mov	dword ptr [esp+4], 0
		mov	[esp], edx
		call	ds:_ZN8QPainter8setBrushEN2Qt10BrushStyleE
		mov	eax, [ebp+arg_0]
		mov	dword ptr [esp+18h], 1
		mov	edx, [ebp+var_5C]
		fild	dword ptr [eax+0A4h]
		fstp	qword ptr [esp+10h]
		fild	dword ptr [eax+0A0h]
		mov	eax, [ebp+arg_4]
		fstp	qword ptr [esp+8]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN8QPainter15drawRoundedRectERK6QRectFddN2Qt8SizeModeE
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZN8QPainter8setBrushERK6QBrush

loc_71002422:				; CODE XREF: sub_71002250+157j
		mov	eax, [ebp+arg_4]
		fld	[ebp+var_58]
		fstp	qword ptr [esp+4]
		mov	[ebp+var_48], 3
		mov	[esp], eax
		call	ds:_ZN8QPainter10setOpacityEd
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 4
		call	ds:_ZN4QPenD1Ev

loc_7100244F:				; CODE XREF: sub_71002250+3A4j
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN6QBrushD1Ev
		mov	edx, [ebp+arg_8]
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+8], edx
		mov	edx, [ebp+arg_0]
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_71022790
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71002490:				; CODE XREF: sub_71002250+67j
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZNK8QPainter7opacityEv
		mov	edx, [ebp+arg_4]
		mov	[esp], edx
		fstp	[ebp+var_68]
		call	ds:_ZNK8QPainter5brushEv
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZN6QBrushC1ERKS_
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_48], 2
		mov	[esp], eax
		call	ds:_ZNK8QPainter3penEv
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	ds:_ZN4QPenC1ERKS_
		mov	edx, [ebp+arg_4]
		mov	dword ptr [esp+4], 0
		mov	[ebp+var_48], 1
		mov	[esp], edx
		call	ds:_ZN8QPainter6setPenEN2Qt8PenStyleE
		mov	eax, [ebp+arg_8]
		fld	[ebp+var_68]
		mov	edx, [ebp+arg_4]
		fmul	qword ptr [eax]
		mov	[esp], edx
		fstp	qword ptr [esp+4]
		call	ds:_ZN8QPainter10setOpacityEd
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	dword ptr [esp+8], 1
		sub	eax, 0FFFFFF80h
		mov	[ebp+var_6C], eax
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZN8QPainter9drawRectsEPK6QRectFi
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		call	ds:_ZN8QPainter6setPenERK4QPen
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	ds:_ZNK4QPen6widthFEv
		fldz
		fxch	st(1)
		fucompp
		fnstsw	ax
		sahf
		jp	short loc_71002565
		jz	short loc_710025C7

loc_71002565:				; CODE XREF: sub_71002250+311j
		mov	edx, [ebp+arg_8]
		fld	[ebp+var_68]
		mov	eax, [ebp+arg_4]
		fmul	qword ptr [edx+8]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		fstp	qword ptr [esp+4]
		call	ds:_ZN8QPainter10setOpacityEd
		mov	edx, [ebp+arg_4]
		mov	dword ptr [esp+4], 0
		mov	[esp], edx
		call	ds:_ZN8QPainter8setBrushEN2Qt10BrushStyleE
		mov	eax, [ebp+var_6C]
		mov	edx, [ebp+arg_4]
		mov	dword ptr [esp+8], 1
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZN8QPainter9drawRectsEPK6QRectFi
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		call	ds:_ZN8QPainter8setBrushERK6QBrush

loc_710025C7:				; CODE XREF: sub_71002250+313j
		mov	eax, [ebp+arg_4]
		fld	[ebp+var_68]
		fstp	qword ptr [esp+4]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	ds:_ZN8QPainter10setOpacityEd
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN4QPenD1Ev
		jmp	loc_7100244F
sub_71002250	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710025F9	proc near		; DATA XREF: sub_71002250+23o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-70h], edx
		jz	short loc_71002627
		cmp	eax, 2
		jz	short loc_7100264C
		cmp	eax, 3
		jz	short loc_7100265F
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN4QPenD1Ev

loc_71002627:				; CODE XREF: sub_710025F9+Fj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN6QBrushD1Ev
		mov	eax, [ebp-70h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7100264C:				; CODE XREF: sub_710025F9+14j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN4QPenD1Ev

loc_7100265F:				; CODE XREF: sub_710025F9+19j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN6QBrushD1Ev
		mov	edx, [ebp-70h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_710025F9	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71002690	proc near		; DATA XREF: .rdata:7105D610o

var_58		= qword	ptr -58h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= byte ptr -10h
var_C		= byte ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71052C50
		mov	[ebp+var_28], offset sub_71002893
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	ecx, [ebp+arg_4]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_8]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	[esp+8], edx
		call	sub_710227B0
		mov	edx, [ebp+arg_4]
		mov	[esp], edx
		call	ds:_ZNK8QPainter7opacityEv
		mov	ecx, [ebp+arg_4]
		mov	[esp], ecx
		fstp	[ebp+var_58]
		call	ds:_ZNK8QPainter5brushEv
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZN6QBrushC1ERKS_
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_48], 2
		mov	[esp], eax
		call	ds:_ZNK8QPainter3penEv
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	ds:_ZN4QPenC1ERKS_
		mov	edx, [ebp+arg_4]
		mov	dword ptr [esp+4], 0
		mov	[ebp+var_48], 1
		mov	[esp], edx
		call	ds:_ZN8QPainter6setPenEN2Qt8PenStyleE
		mov	ecx, [ebp+arg_8]
		fld	[ebp+var_58]
		mov	eax, [ebp+arg_4]
		fmul	qword ptr [ecx]
		mov	[esp], eax
		fstp	qword ptr [esp+4]
		call	ds:_ZN8QPainter10setOpacityEd
		mov	edx, [ebp+arg_8]
		mov	ecx, [ebp+arg_0]
		mov	eax, [edx+1Ch]
		mov	[esp+0Ch], eax
		mov	eax, [ecx+80h]
		mov	edx, [eax+8]
		add	eax, 10h
		mov	[esp+4], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+8], edx
		mov	[esp], eax
		call	ds:_ZN8QPainter11drawPolygonEPK7QPointFiN2Qt8FillRuleE
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZN8QPainter6setPenERK4QPen
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	ds:_ZNK4QPen6widthFEv
		fldz
		fxch	st(1)
		fucompp
		fnstsw	ax
		sahf
		jp	short loc_710027B9
		jz	short loc_7100282D

loc_710027B9:				; CODE XREF: sub_71002690+125j
		mov	edx, [ebp+arg_8]
		fld	[ebp+var_58]
		mov	ecx, [ebp+arg_4]
		fmul	qword ptr [edx+8]
		mov	[ebp+var_48], 1
		mov	[esp], ecx
		fstp	qword ptr [esp+4]
		call	ds:_ZN8QPainter10setOpacityEd
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+4], 0
		mov	[esp], eax
		call	ds:_ZN8QPainter8setBrushEN2Qt10BrushStyleE
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_8]
		mov	eax, [edx+80h]
		mov	edx, [ecx+1Ch]
		mov	[esp+0Ch], edx
		mov	edx, [eax+8]
		add	eax, 10h
		mov	[esp+4], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+8], edx
		mov	[esp], eax
		call	ds:_ZN8QPainter11drawPolygonEPK7QPointFiN2Qt8FillRuleE
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZN8QPainter8setBrushERK6QBrush

loc_7100282D:				; CODE XREF: sub_71002690+127j
		mov	eax, [ebp+arg_4]
		fld	[ebp+var_58]
		fstp	qword ptr [esp+4]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	ds:_ZN8QPainter10setOpacityEd
		mov	edx, [ebp+arg_8]
		mov	ecx, [ebp+arg_4]
		mov	eax, [ebp+arg_0]
		mov	[esp+8], edx
		mov	[esp+4], ecx
		mov	[esp], eax
		call	sub_71022790
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN4QPenD1Ev
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN6QBrushD1Ev
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71002690	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71002893	proc near		; DATA XREF: sub_71002690+20o
		add	ebp, 8
		mov	edx, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-5Ch], edx
		jz	short loc_710028B5
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN4QPenD1Ev

loc_710028B5:				; CODE XREF: sub_71002893+Dj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN6QBrushD1Ev
		mov	ecx, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
sub_71002893	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710028E0	proc near		; DATA XREF: .rdata:7105D630o

var_58		= qword	ptr -58h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= byte ptr -10h
var_C		= byte ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71052C58
		mov	[ebp+var_28], offset sub_71002AD8
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_8]
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+8], edx
		mov	edx, [ebp+arg_0]
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_710227B0
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		call	ds:_ZNK8QPainter7opacityEv
		mov	edx, [ebp+arg_4]
		mov	[esp], edx
		fstp	[ebp+var_58]
		call	ds:_ZNK8QPainter5brushEv
		mov	eax, [eax]
		mov	eax, [eax+4]
		test	eax, eax
		jz	loc_71002A26
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		call	ds:_ZNK8QPainter3penEv
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZN4QPenC1ERKS_
		lea	eax, [ebp+var_10]
		mov	dword ptr [esp+4], 0
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN4QPenC1EN2Qt8PenStyleE
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	[ebp+var_48], 1
		mov	[esp], edx
		call	ds:_ZN8QPainter6setPenERK4QPen
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN4QPenD1Ev
		mov	edx, [ebp+arg_8]
		fld	[ebp+var_58]
		mov	eax, [ebp+arg_4]
		fmul	qword ptr [edx]
		mov	[esp], eax
		fstp	qword ptr [esp+4]
		call	ds:_ZN8QPainter10setOpacityEd
		mov	edx, [ebp+arg_8]
		mov	eax, [edx+1Ch]
		mov	edx, [ebp+arg_0]
		mov	[esp+0Ch], eax
		mov	eax, [edx+80h]
		mov	edx, [eax+8]
		add	eax, 10h
		mov	[esp+4], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+8], edx
		mov	[esp], eax
		call	ds:_ZN8QPainter11drawPolygonEPK7QPointFiN2Qt8FillRuleE
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZN8QPainter6setPenERK4QPen
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN4QPenD1Ev

loc_71002A26:				; CODE XREF: sub_710028E0+71j
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], edx
		call	ds:_ZNK8QPainter3penEv
		mov	[esp], eax
		call	ds:_ZNK4QPen6widthFEv
		fldz
		fxch	st(1)
		fucompp
		fnstsw	ax
		sahf
		jp	short loc_71002A90
		jnz	short loc_71002A90

loc_71002A4F:				; CODE XREF: sub_710028E0+1F3j
		mov	eax, [ebp+arg_4]
		fld	[ebp+var_58]
		fstp	qword ptr [esp+4]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN8QPainter10setOpacityEd
		mov	edx, [ebp+arg_8]
		mov	eax, [ebp+arg_4]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_0]
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_71022790
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71002A90:				; CODE XREF: sub_710028E0+16Bj
					; sub_710028E0+16Dj
		mov	edx, [ebp+arg_8]
		fld	[ebp+var_58]
		mov	eax, [ebp+arg_4]
		fmul	qword ptr [edx+8]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		fstp	qword ptr [esp+4]
		call	ds:_ZN8QPainter10setOpacityEd
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+80h]
		mov	edx, [eax+8]
		add	eax, 10h
		mov	[esp+4], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+8], edx
		mov	[esp], eax
		call	ds:_ZN8QPainter12drawPolylineEPK7QPointFi
		jmp	loc_71002A4F
sub_710028E0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71002AD8	proc near		; DATA XREF: sub_710028E0+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-5Ch], eax
		jz	short loc_71002AFA
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN4QPenD1Ev

loc_71002AFA:				; CODE XREF: sub_71002AD8+Dj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN4QPenD1Ev
		mov	eax, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71002AD8	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71002B20	proc near		; DATA XREF: .rdata:7105DC50o

var_5C		= dword	ptr -5Ch
var_58		= qword	ptr -58h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= byte ptr -10h
var_C		= byte ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71052C60
		mov	[ebp+var_28], offset sub_71002D0E
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_8]
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+8], edx
		mov	edx, [ebp+arg_0]
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_710227B0
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_8]
		sub	eax, 0FFFFFF80h
		mov	[ebp+var_5C], eax
		mov	eax, [edx+1Ch]
		mov	[esp+4], eax
		mov	eax, [ebp+var_5C]
		mov	[esp], eax
		call	ds:_ZN12QPainterPath11setFillRuleEN2Qt8FillRuleE
		mov	edx, [ebp+arg_4]
		mov	[esp], edx
		call	ds:_ZNK8QPainter7opacityEv
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		fstp	[ebp+var_58]
		call	ds:_ZNK8QPainter5brushEv
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZN6QBrushC1ERKS_
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_48], 2
		mov	[esp], edx
		call	ds:_ZNK8QPainter3penEv
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	ds:_ZN4QPenC1ERKS_
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+4], 0
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	ds:_ZN8QPainter6setPenEN2Qt8PenStyleE
		mov	edx, [ebp+arg_8]
		fld	[ebp+var_58]
		mov	eax, [ebp+arg_4]
		fmul	qword ptr [edx]
		mov	[esp], eax
		fstp	qword ptr [esp+4]
		call	ds:_ZN8QPainter10setOpacityEd
		mov	edx, [ebp+var_5C]
		mov	eax, [ebp+arg_4]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN8QPainter8drawPathERK12QPainterPath
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZN8QPainter6setPenERK4QPen
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	ds:_ZNK4QPen6widthFEv
		fldz
		fxch	st(1)
		fucompp
		fnstsw	ax
		sahf
		jp	short loc_71002C4E
		jz	short loc_71002CA8

loc_71002C4E:				; CODE XREF: sub_71002B20+12Aj
		mov	edx, [ebp+arg_8]
		fld	[ebp+var_58]
		mov	eax, [ebp+arg_4]
		fmul	qword ptr [edx+8]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		fstp	qword ptr [esp+4]
		call	ds:_ZN8QPainter10setOpacityEd
		mov	edx, [ebp+arg_4]
		mov	dword ptr [esp+4], 0
		mov	[esp], edx
		call	ds:_ZN8QPainter8setBrushEN2Qt10BrushStyleE
		mov	eax, [ebp+var_5C]
		mov	edx, [ebp+arg_4]
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZN8QPainter8drawPathERK12QPainterPath
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		call	ds:_ZN8QPainter8setBrushERK6QBrush

loc_71002CA8:				; CODE XREF: sub_71002B20+12Cj
		mov	eax, [ebp+arg_4]
		fld	[ebp+var_58]
		fstp	qword ptr [esp+4]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	ds:_ZN8QPainter10setOpacityEd
		mov	edx, [ebp+arg_8]
		mov	eax, [ebp+arg_4]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_0]
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_71022790
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN4QPenD1Ev
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN6QBrushD1Ev
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71002B20	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71002D0E	proc near		; DATA XREF: sub_71002B20+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-60h], eax
		jz	short loc_71002D30
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN4QPenD1Ev

loc_71002D30:				; CODE XREF: sub_71002D0E+Dj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN6QBrushD1Ev
		mov	edx, [ebp-60h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_71002D0E	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71002D60	proc near		; DATA XREF: .rdata:7105DB90o

var_3C		= dword	ptr -3Ch
var_38		= qword	ptr -38h
var_2C		= qword	ptr -2Ch
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 3Ch
		mov	[esp+3Ch+var_10], ebx
		mov	ebx, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_C], esi
		mov	esi, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_8], edi
		mov	edi, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_4], ebp
		mov	dword ptr [esp+3Ch+var_38], ebx
		mov	[esp+3Ch+var_3C], esi
		mov	dword ptr [esp+3Ch+var_38+4], edi
		call	sub_710227B0
		mov	[esp+3Ch+var_3C], ebx
		call	ds:_ZNK8QPainter3penEv
		mov	[esp+3Ch+var_3C], eax
		call	ds:_ZNK4QPen6widthFEv
		fldz
		fxch	st(1)
		fucompp
		fnstsw	ax
		sahf
		jp	short loc_71002DD2
		jnz	short loc_71002DD2

loc_71002DAE:				; CODE XREF: sub_71002D60+B3j
		mov	[esp+3Ch+arg_8], edi
		mov	ebp, [esp+3Ch+var_4]
		mov	[esp+3Ch+arg_4], ebx
		mov	edi, [esp+3Ch+var_8]
		mov	[esp+3Ch+arg_0], esi
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		add	esp, 3Ch
		jmp	sub_71022790
; ---------------------------------------------------------------------------

loc_71002DD2:				; CODE XREF: sub_71002D60+4Aj
					; sub_71002D60+4Cj
		mov	[esp+3Ch+var_3C], ebx
		call	ds:_ZNK8QPainter7opacityEv
		mov	ebp, ds:_ZN8QPainter10setOpacityEd
		fld	qword ptr [edi+8]
		fmul	st, st(1)
		mov	[esp+3Ch+var_3C], ebx
		fstp	[esp+3Ch+var_38]
		fstp	[esp+3Ch+var_2C]
		call	ebp ; _ZN8QPainter10setOpacityEd
		lea	eax, [esi+80h]
		mov	dword ptr [esp+3Ch+var_38], eax
		mov	[esp+3Ch+var_3C], ebx
		call	ds:_ZN8QPainter8drawPathERK12QPainterPath
		mov	[esp+3Ch+var_3C], ebx
		fld	[esp+3Ch+var_2C]
		fstp	[esp+3Ch+var_38]
		call	ebp ; _ZN8QPainter10setOpacityEd
		jmp	short loc_71002DAE
sub_71002D60	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71002E20	proc near		; CODE XREF: sub_71009870+BDp

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71052C68
		mov	[ebp+var_18], offset sub_71002E9B
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_71022420
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105DC48
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		sub	eax, 0FFFFFF80h
		mov	[esp], eax
		call	ds:_ZN12QPainterPathC1ERKS_
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71002E20	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71002E9B	proc near		; DATA XREF: sub_71002E20+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		mov	[esp+0], eax
		call	sub_71023D40
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71002E9B	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_710525B0
		mov	dword ptr [ebp-20h], offset word_71052C6E
		mov	dword ptr [ebp-18h], offset loc_71002F4B
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+0Ch]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		mov	[esp], eax
		call	sub_71022420
		mov	eax, [ebp+8]
		mov	dword ptr [eax], offset	off_7105DC48
		mov	eax, [ebp+10h]
		mov	dword ptr [ebp-38h], 1
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		sub	eax, 0FFFFFF80h
		mov	[esp], eax
		call	ds:_ZN12QPainterPathC1ERKS_
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71002F4B:				; DATA XREF: .text:71002EF0o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		mov	[esp], eax
		call	sub_71023D40
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_710525B0
		mov	dword ptr [ebp-20h], offset dword_71052C74
		mov	dword ptr [ebp-18h], offset loc_71002FFB
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+0Ch]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		mov	[esp], eax
		call	sub_71022420
		mov	eax, [ebp+8]
		mov	dword ptr [eax], offset	off_7105DB88
		mov	eax, [ebp+10h]
		mov	dword ptr [ebp-38h], 1
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		sub	eax, 0FFFFFF80h
		mov	[esp], eax
		call	ds:_ZN12QPainterPathC1ERKS_
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71002FFB:				; DATA XREF: .text:71002FA0o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		mov	[esp], eax
		call	sub_71023D40
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_710525B0
		mov	dword ptr [ebp-20h], offset word_71052C7A
		mov	dword ptr [ebp-18h], offset loc_710030AB
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+0Ch]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		mov	[esp], eax
		call	sub_71022420
		mov	eax, [ebp+8]
		mov	dword ptr [eax], offset	off_7105DB88
		mov	eax, [ebp+10h]
		mov	dword ptr [ebp-38h], 1
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		sub	eax, 0FFFFFF80h
		mov	[esp], eax
		call	ds:_ZN12QPainterPathC1ERKS_
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_710030AB:				; DATA XREF: .text:71003050o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		mov	[esp], eax
		call	sub_71023D40
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710030E0	proc near		; DATA XREF: .rdata:7105DC10o

var_3C		= dword	ptr -3Ch
var_38		= qword	ptr -38h
var_2C		= qword	ptr -2Ch
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 3Ch
		mov	[esp+3Ch+var_10], ebx
		mov	ebx, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_C], esi
		mov	esi, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_8], edi
		mov	edi, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_4], ebp
		mov	dword ptr [esp+3Ch+var_38], ebx
		mov	[esp+3Ch+var_3C], esi
		mov	dword ptr [esp+3Ch+var_38+4], edi
		call	sub_710227B0
		mov	[esp+3Ch+var_3C], ebx
		call	ds:_ZNK8QPainter3penEv
		mov	[esp+3Ch+var_3C], eax
		call	ds:_ZNK4QPen6widthFEv
		fldz
		fxch	st(1)
		fucompp
		fnstsw	ax
		sahf
		jp	short loc_71003152
		jnz	short loc_71003152

loc_7100312E:				; CODE XREF: sub_710030E0+BBj
		mov	[esp+3Ch+arg_8], edi
		mov	ebp, [esp+3Ch+var_4]
		mov	[esp+3Ch+arg_4], ebx
		mov	edi, [esp+3Ch+var_8]
		mov	[esp+3Ch+arg_0], esi
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		add	esp, 3Ch
		jmp	sub_71022790
; ---------------------------------------------------------------------------

loc_71003152:				; CODE XREF: sub_710030E0+4Aj
					; sub_710030E0+4Cj
		mov	[esp+3Ch+var_3C], ebx
		call	ds:_ZNK8QPainter7opacityEv
		mov	ebp, ds:_ZN8QPainter10setOpacityEd
		fld	qword ptr [edi+8]
		fmul	st, st(1)
		mov	[esp+3Ch+var_3C], ebx
		fstp	[esp+3Ch+var_38]
		fstp	[esp+3Ch+var_2C]
		call	ebp ; _ZN8QPainter10setOpacityEd
		lea	eax, [esi+80h]
		mov	dword ptr [esp+3Ch+var_38+4], 1
		mov	dword ptr [esp+3Ch+var_38], eax
		mov	[esp+3Ch+var_3C], ebx
		call	ds:_ZN8QPainter9drawLinesEPK6QLineFi
		mov	[esp+3Ch+var_3C], ebx
		fld	[esp+3Ch+var_2C]
		fstp	[esp+3Ch+var_38]
		call	ebp ; _ZN8QPainter10setOpacityEd
		jmp	short loc_7100312E
sub_710030E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710031A0	proc near		; DATA XREF: .rdata:7105DCB0o

var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_64		= qword	ptr -64h
var_5C		= qword	ptr -5Ch
var_54		= qword	ptr -54h
var_4C		= qword	ptr -4Ch
var_44		= qword	ptr -44h
var_3C		= qword	ptr -3Ch
var_34		= qword	ptr -34h
var_2C		= qword	ptr -2Ch
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 9Ch
		mov	[esp+9Ch+var_10], ebx
		mov	ebx, [esp+9Ch+arg_0]
		mov	[esp+9Ch+var_C], esi
		mov	esi, [esp+9Ch+arg_4]
		mov	[esp+9Ch+var_4], ebp
		mov	ebp, [esp+9Ch+arg_8]
		mov	[esp+9Ch+var_8], edi
		lea	edi, [ebx+80h]
		mov	[esp+9Ch+var_98], esi
		mov	[esp+9Ch+var_94], ebp
		mov	[esp+9Ch+var_9C], ebx
		call	sub_710227B0
		mov	[esp+9Ch+var_9C], edi
		mov	[esp+9Ch+var_20], 0
		call	ds:_ZNK6QImage6heightEv
		mov	[esp+9Ch+var_9C], edi
		mov	[esp+9Ch+var_74], eax
		call	ds:_ZNK6QImage5widthEv
		mov	edx, [esp+9Ch+var_74]
		fldz
		fst	[esp+9Ch+var_64]
		mov	[esp+9Ch+var_70], eax
		fstp	[esp+9Ch+var_5C]
		fild	[esp+9Ch+var_70]
		mov	[esp+9Ch+var_70], edx
		mov	ecx, [ebx+8Ch]
		fstp	[esp+9Ch+var_54]
		fild	[esp+9Ch+var_70]
		fstp	[esp+9Ch+var_4C]
		mov	[esp+9Ch+var_70], ecx
		mov	edx, [ebx+90h]
		fild	[esp+9Ch+var_70]
		fstp	[esp+9Ch+var_44]
		mov	[esp+9Ch+var_70], edx
		mov	eax, [ebx+94h]
		fild	[esp+9Ch+var_70]
		fstp	[esp+9Ch+var_3C]
		add	eax, 1
		sub	eax, ecx
		mov	[esp+9Ch+var_70], eax
		mov	eax, [ebx+98h]
		fild	[esp+9Ch+var_70]
		fstp	[esp+9Ch+var_34]
		mov	[esp+9Ch+var_94], edi
		add	eax, 1
		sub	eax, edx
		mov	[esp+9Ch+var_70], eax
		lea	eax, [esp+9Ch+var_20]
		mov	[esp+9Ch+var_8C], eax
		lea	eax, [esp+9Ch+var_64]
		fild	[esp+9Ch+var_70]
		mov	[esp+9Ch+var_90], eax
		lea	eax, [esp+9Ch+var_44]
		fstp	[esp+9Ch+var_2C]
		mov	[esp+9Ch+var_98], eax
		mov	[esp+9Ch+var_9C], esi
		call	ds:_ZN8QPainter9drawImageERK6QRectFRK6QImageS2_6QFlagsIN2Qt19ImageConversionFlagEE
		mov	[esp+9Ch+var_94], ebp
		mov	[esp+9Ch+var_98], esi
		mov	[esp+9Ch+var_9C], ebx
		call	sub_71022790
		mov	ebx, [esp+9Ch+var_10]
		mov	esi, [esp+9Ch+var_C]
		mov	edi, [esp+9Ch+var_8]
		mov	ebp, [esp+9Ch+var_4]
		add	esp, 9Ch
		retn
sub_710031A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710032E0	proc near		; CODE XREF: sub_710212A0+79Ap

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 54h
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71052C80
		mov	[ebp+var_18], offset sub_710033FD
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_71022420
		mov	ecx, [ebp+arg_0]
		mov	eax, [ebp+arg_8]
		mov	dword ptr [ecx], offset	off_7105DCA8
		sub	ecx, 0FFFFFF80h
		mov	[ebp+var_40], ecx
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	[ebp+var_38], 2
		call	ds:_ZN6QImageC1ERKS_
		mov	ebx, [ebp+arg_C]
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_0]
		mov	eax, [ebx]
		mov	[edx+8Ch], eax
		mov	edx, [ebx+4]
		mov	[ecx+90h], edx
		mov	edx, [ebx+8]
		mov	[ecx+94h], edx
		mov	ecx, [ebx+0Ch]
		sub	edx, eax
		mov	ebx, [ebp+arg_0]
		cmp	edx, 0FFFFFFFFh
		mov	[ebx+98h], ecx
		jz	short loc_710033D8

loc_71003385:				; CODE XREF: sub_710032E0+11Bj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+98h]
		sub	eax, [edx+90h]
		cmp	eax, 0FFFFFFFFh
		jz	short loc_710033B0

loc_71003399:				; CODE XREF: sub_710032E0+F6j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 54h
		pop	ebx
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_710033B0:				; CODE XREF: sub_710032E0+B7j
		mov	ecx, [ebp+var_40]
		mov	[ebp+var_38], 1
		mov	[esp], ecx
		call	ds:_ZNK6QImage6heightEv
		mov	ebx, [ebp+arg_0]
		mov	edx, [ebx+90h]
		lea	eax, [eax+edx-1]
		mov	[ebx+98h], eax
		jmp	short loc_71003399
; ---------------------------------------------------------------------------

loc_710033D8:				; CODE XREF: sub_710032E0+A3j
		mov	eax, [ebp+var_40]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZNK6QImage5widthEv
		mov	edx, [ebx+8Ch]
		lea	eax, [eax+edx-1]
		mov	[ebx+94h], eax
		jmp	short loc_71003385
sub_710032E0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710033FD	proc near		; DATA XREF: sub_710032E0+21o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], eax
		jz	short loc_7100341F
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], edx
		call	ds:_ZN6QImageD1Ev

loc_7100341F:				; CODE XREF: sub_710033FD+Dj
		mov	ecx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], ecx
		call	sub_71023D40
		mov	ebx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], ebx
		call	_Unwind_SjLj_Resume
sub_710033FD	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		lea	eax, [ebp-8]
		push	ebx
		sub	esp, 54h
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_710525B0
		mov	dword ptr [ebp-20h], offset dword_71052C88
		mov	dword ptr [ebp-18h], offset loc_7100356D
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+0Ch]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_71022420
		mov	ecx, [ebp+8]
		mov	eax, [ebp+10h]
		mov	dword ptr [ecx], offset	off_7105DCA8
		sub	ecx, 0FFFFFF80h
		mov	[ebp-40h], ecx
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	dword ptr [ebp-38h], 2
		call	ds:_ZN6QImageC1ERKS_
		mov	ebx, [ebp+14h]
		mov	edx, [ebp+8]
		mov	ecx, [ebp+8]
		mov	eax, [ebx]
		mov	[edx+8Ch], eax
		mov	edx, [ebx+4]
		mov	[ecx+90h], edx
		mov	edx, [ebx+8]
		mov	[ecx+94h], edx
		mov	ecx, [ebx+0Ch]
		sub	edx, eax
		mov	ebx, [ebp+8]
		cmp	edx, 0FFFFFFFFh
		mov	[ebx+98h], ecx
		jz	short loc_71003548

loc_710034F5:				; CODE XREF: .text:7100356Bj
		mov	edx, [ebp+8]
		mov	eax, [edx+98h]
		sub	eax, [edx+90h]
		cmp	eax, 0FFFFFFFFh
		jz	short loc_71003520

loc_71003509:				; CODE XREF: .text:71003546j
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 54h
		pop	ebx
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71003520:				; CODE XREF: .text:71003507j
		mov	ecx, [ebp-40h]
		mov	dword ptr [ebp-38h], 1
		mov	[esp], ecx
		call	ds:_ZNK6QImage6heightEv
		mov	ebx, [ebp+8]
		mov	edx, [ebx+90h]
		lea	eax, [eax+edx-1]
		mov	[ebx+98h], eax
		jmp	short loc_71003509
; ---------------------------------------------------------------------------

loc_71003548:				; CODE XREF: .text:710034F3j
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 1
		mov	[esp], eax
		call	ds:_ZNK6QImage5widthEv
		mov	edx, [ebx+8Ch]
		lea	eax, [eax+edx-1]
		mov	[ebx+94h], eax
		jmp	short loc_710034F5
; ---------------------------------------------------------------------------

loc_7100356D:				; DATA XREF: .text:71003471o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], eax
		jz	short loc_7100358F
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], edx
		call	ds:_ZN6QImageD1Ev

loc_7100358F:				; CODE XREF: .text:7100357Aj
		mov	ecx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], ecx
		call	sub_71023D40
		mov	ebx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], ebx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710035C0	proc near		; DATA XREF: .rdata:7105D490o
					; .rdata:7105D5F0o

var_5C		= dword	ptr -5Ch
var_58		= qword	ptr -58h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= byte ptr -10h
var_C		= byte ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71052C90
		mov	[ebp+var_28], offset sub_71003795
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_710227B0
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		call	ds:_ZNK8QPainter7opacityEv
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		fstp	[ebp+var_58]
		call	ds:_ZNK8QPainter5brushEv
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZN6QBrushC1ERKS_
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_48], 2
		mov	[esp], eax
		call	ds:_ZNK8QPainter3penEv
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	ds:_ZN4QPenC1ERKS_
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+4], 0
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	ds:_ZN8QPainter6setPenEN2Qt8PenStyleE
		mov	eax, [ebp+arg_8]
		fld	[ebp+var_58]
		fmul	qword ptr [eax]
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		fstp	qword ptr [esp+4]
		call	ds:_ZN8QPainter10setOpacityEd
		mov	eax, [ebp+arg_0]
		sub	eax, 0FFFFFF80h
		mov	[ebp+var_5C], eax
		mov	[esp+4], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		call	ds:_ZN8QPainter11drawEllipseERK6QRectF
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		call	ds:_ZN8QPainter6setPenERK4QPen
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	ds:_ZNK4QPen6widthFEv
		fldz
		fxch	st(1)
		fucompp
		fnstsw	ax
		sahf
		jp	short loc_710036D5
		jz	short loc_7100372F

loc_710036D5:				; CODE XREF: sub_710035C0+111j
		mov	eax, [ebp+arg_8]
		fld	[ebp+var_58]
		fmul	qword ptr [eax+8]
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		fstp	qword ptr [esp+4]
		call	ds:_ZN8QPainter10setOpacityEd
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+4], 0
		mov	[esp], eax
		call	ds:_ZN8QPainter8setBrushEN2Qt10BrushStyleE
		mov	eax, [ebp+var_5C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		call	ds:_ZN8QPainter11drawEllipseERK6QRectF
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		call	ds:_ZN8QPainter8setBrushERK6QBrush

loc_7100372F:				; CODE XREF: sub_710035C0+113j
		mov	eax, [ebp+arg_4]
		fld	[ebp+var_58]
		fstp	qword ptr [esp+4]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	ds:_ZN8QPainter10setOpacityEd
		mov	eax, [ebp+arg_8]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_71022790
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN4QPenD1Ev
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN6QBrushD1Ev
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_710035C0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71003795	proc near		; DATA XREF: sub_710035C0+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-60h], eax
		jz	short loc_710037B7
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN4QPenD1Ev

loc_710037B7:				; CODE XREF: sub_71003795+Dj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN6QBrushD1Ev
		mov	eax, [ebp-60h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71003795	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710037E0	proc near		; DATA XREF: .rdata:7105D690o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, ds:_Z8qWarningPKcz
		mov	[esp+0Ch+arg_0], offset	aAnimationNoImp	; "<animation> no implemented"
		add	esp, 0Ch
		jmp	eax
sub_710037E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71003800	proc near		; CODE XREF: sub_7100B430+1D6p

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71052C98
		mov	[ebp+var_18], offset sub_710038B1
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_71022420
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D628
		mov	eax, [ebp+arg_8]
		mov	eax, [eax]
		mov	[edx+80h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+80h]
		test	byte ptr [eax+0Ch], 1
		jz	short loc_71003881
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71003881:				; CODE XREF: sub_71003800+72j
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		sub	eax, 0FFFFFF80h
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	sub_71048E90
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71003800	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710038B1	proc near		; DATA XREF: sub_71003800+1Do
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	[ebp-40h], eax
		mov	[esp+0], edx
		mov	dword ptr [ebp-38h], 0
		call	sub_71023D40
		mov	eax, [ebp-40h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_710038B1	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	dword ptr [ebp-24h], offset sub_710525B0
		mov	dword ptr [ebp-20h], offset word_71052C9E
		mov	dword ptr [ebp-18h], offset loc_71003991
		mov	[ebp-14h], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+0Ch]
		mov	[esp+4], eax
		mov	edx, [ebp+8]
		mov	[esp], edx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	sub_71022420
		mov	eax, [ebp+8]
		mov	edx, [ebp+8]
		mov	dword ptr [eax], offset	off_7105D628
		mov	eax, [ebp+10h]
		mov	eax, [eax]
		mov	[edx+80h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+8]
		mov	eax, [edx+80h]
		test	byte ptr [eax+0Ch], 1
		jz	short loc_71003961
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71003961:				; CODE XREF: .text:71003952j
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp+4], eax
		mov	eax, [ebp+8]
		sub	eax, 0FFFFFF80h
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 1
		call	sub_71048E90
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71003991:				; DATA XREF: .text:710038FDo
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	[ebp-40h], eax
		mov	[esp], edx
		mov	dword ptr [ebp-38h], 0
		call	sub_71023D40
		mov	eax, [ebp-40h]
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710039C0	proc near		; CODE XREF: sub_7100B730+1D6p

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71052CA4
		mov	[ebp+var_18], offset sub_71003A71
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_71022420
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D608
		mov	eax, [ebp+arg_8]
		mov	eax, [eax]
		mov	[edx+80h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+80h]
		test	byte ptr [eax+0Ch], 1
		jz	short loc_71003A41
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71003A41:				; CODE XREF: sub_710039C0+72j
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		sub	eax, 0FFFFFF80h
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	sub_71048E90
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_710039C0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71003A71	proc near		; DATA XREF: sub_710039C0+1Do
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	[ebp-40h], eax
		mov	[esp+0], edx
		mov	dword ptr [ebp-38h], 0
		call	sub_71023D40
		mov	eax, [ebp-40h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_71003A71	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_710525B0
		mov	dword ptr [ebp-20h], offset word_71052CCE
		mov	dword ptr [ebp-18h], offset loc_71003BF3
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+8]
		mov	eax, [edx+90h]
		mov	dword ptr [edx], offset	off_7105DC88
		mov	edx, [eax+8]
		test	edx, edx
		jle	loc_71003BA9
		mov	ecx, [ebp+8]
		mov	dword ptr [ebp-40h], 0
		add	ecx, 90h
		mov	[ebp-44h], ecx
		lea	esi, [esi+0]

loc_71003B00:				; CODE XREF: .text:71003BA3j
		mov	ecx, [ebp-44h]
		mov	[ebp-4Ch], ecx
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_71003B2A
		mov	eax, [eax+4]
		mov	[esp+4], edx
		mov	dword ptr [ebp-38h], 1
		mov	[esp+8], eax
		mov	eax, [ebp-44h]
		mov	[esp], eax
		call	sub_7104EA30

loc_71003B2A:				; CODE XREF: .text:71003B0Bj
		mov	edx, [ebp-40h]
		mov	ecx, [ebp+8]
		mov	[ebp-48h], edx
		mov	edx, [ecx+90h]
		mov	ecx, [ebp-40h]
		mov	eax, [edx+ecx*4+10h]
		test	eax, eax
		jz	short loc_71003B90
		mov	ecx, [edx]
		cmp	ecx, 1
		jz	short loc_71003B7F
		mov	eax, [edx+4]
		mov	[esp+8], eax
		mov	eax, [edx+8]
		mov	dword ptr [ebp-38h], 1
		mov	[esp+4], eax
		mov	eax, [ebp-44h]
		mov	[esp], eax
		call	sub_7104EA30
		mov	edx, [ebp+8]
		mov	ecx, [ebp-48h]
		mov	eax, [edx+90h]
		mov	eax, [eax+ecx*4+10h]
		test	eax, eax
		jz	short loc_71003B90

loc_71003B7F:				; CODE XREF: .text:71003B49j
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 1
		call	eax

loc_71003B90:				; CODE XREF: .text:71003B42j
					; .text:71003B7Dj
		mov	edx, [ebp+8]
		add	dword ptr [ebp-40h], 1
		mov	eax, [edx+90h]
		mov	edx, [eax+8]
		cmp	[ebp-40h], edx
		jl	loc_71003B00

loc_71003BA9:				; CODE XREF: .text:71003AE3j
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71003BD4
		mov	edx, [ebp+8]
		mov	dword ptr [esp+4], 4
		mov	eax, [edx+90h]
		mov	dword ptr [ebp-38h], 2
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_71003BD4:				; CODE XREF: .text:71003BB1j
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_71023D40
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71003BF3:				; DATA XREF: .text:71003AC0o
		add	ebp, 8
		mov	ecx, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-50h], ecx
		jz	short loc_71003C14
		mov	eax, [ebp-4Ch]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], eax
		call	sub_7104ECE0

loc_71003C14:				; CODE XREF: .text:71003C00j
		mov	ecx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], ecx
		call	sub_71023D40
		mov	eax, [ebp-50h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71003C40	proc near		; DATA XREF: .rdata:7105DC8Co

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_71052CD6
		mov	[ebp+var_18], offset sub_71003D9E
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+90h]
		mov	dword ptr [edx], offset	off_7105DC88
		mov	edx, [eax+8]
		test	edx, edx
		jle	loc_71003D49
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_40], 0
		add	ecx, 90h
		mov	[ebp+var_44], ecx
		lea	esi, [esi+0]

loc_71003CA0:				; CODE XREF: sub_71003C40+103j
		mov	ecx, [ebp+var_44]
		mov	[ebp+var_4C], ecx
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_71003CCA
		mov	eax, [eax+4]
		mov	[esp+4], edx
		mov	[ebp+var_38], 1
		mov	[esp+8], eax
		mov	eax, [ebp+var_44]
		mov	[esp], eax
		call	sub_7104EA30

loc_71003CCA:				; CODE XREF: sub_71003C40+6Bj
		mov	edx, [ebp+var_40]
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_48], edx
		mov	edx, [ecx+90h]
		mov	ecx, [ebp+var_40]
		mov	eax, [edx+ecx*4+10h]
		test	eax, eax
		jz	short loc_71003D30
		mov	ecx, [edx]
		cmp	ecx, 1
		jz	short loc_71003D1F
		mov	eax, [edx+4]
		mov	[esp+8], eax
		mov	eax, [edx+8]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	eax, [ebp+var_44]
		mov	[esp], eax
		call	sub_7104EA30
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_48]
		mov	eax, [edx+90h]
		mov	eax, [eax+ecx*4+10h]
		test	eax, eax
		jz	short loc_71003D30

loc_71003D1F:				; CODE XREF: sub_71003C40+A9j
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 1
		call	eax

loc_71003D30:				; CODE XREF: sub_71003C40+A2j
					; sub_71003C40+DDj
		mov	edx, [ebp+arg_0]
		add	[ebp+var_40], 1
		mov	eax, [edx+90h]
		mov	edx, [eax+8]
		cmp	[ebp+var_40], edx
		jl	loc_71003CA0

loc_71003D49:				; CODE XREF: sub_71003C40+43j
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71003D74
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], 4
		mov	eax, [edx+90h]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_71003D74:				; CODE XREF: sub_71003C40+111j
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_71023D40
		mov	ecx, [ebp+arg_0]
		mov	[esp], ecx
		call	sub_710517D0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71003C40	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71003D9E	proc near		; DATA XREF: sub_71003C40+20o
		add	ebp, 8
		mov	ecx, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-50h], ecx
		jz	short loc_71003DBF
		mov	eax, [ebp-4Ch]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_7104ECE0

loc_71003DBF:				; CODE XREF: sub_71003D9E+Dj
		mov	ecx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], ecx
		call	sub_71023D40
		mov	eax, [ebp-50h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71003D9E	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71003DF0	proc near		; DATA XREF: .rdata:off_7105DC88o

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_71052CDE
		mov	[ebp+var_18], offset sub_71003F43
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+90h]
		mov	dword ptr [edx], offset	off_7105DC88
		mov	edx, [eax+8]
		test	edx, edx
		jle	loc_71003EF9
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_40], 0
		add	ecx, 90h
		mov	[ebp+var_44], ecx
		lea	esi, [esi+0]

loc_71003E50:				; CODE XREF: sub_71003DF0+103j
		mov	ecx, [ebp+var_44]
		mov	[ebp+var_4C], ecx
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_71003E7A
		mov	eax, [eax+4]
		mov	[esp+4], edx
		mov	[ebp+var_38], 1
		mov	[esp+8], eax
		mov	eax, [ebp+var_44]
		mov	[esp], eax
		call	sub_7104EA30

loc_71003E7A:				; CODE XREF: sub_71003DF0+6Bj
		mov	edx, [ebp+var_40]
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_48], edx
		mov	edx, [ecx+90h]
		mov	ecx, [ebp+var_40]
		mov	eax, [edx+ecx*4+10h]
		test	eax, eax
		jz	short loc_71003EE0
		mov	ecx, [edx]
		cmp	ecx, 1
		jz	short loc_71003ECF
		mov	eax, [edx+4]
		mov	[esp+8], eax
		mov	eax, [edx+8]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	eax, [ebp+var_44]
		mov	[esp], eax
		call	sub_7104EA30
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_48]
		mov	eax, [edx+90h]
		mov	eax, [eax+ecx*4+10h]
		test	eax, eax
		jz	short loc_71003EE0

loc_71003ECF:				; CODE XREF: sub_71003DF0+A9j
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 1
		call	eax

loc_71003EE0:				; CODE XREF: sub_71003DF0+A2j
					; sub_71003DF0+DDj
		mov	edx, [ebp+arg_0]
		add	[ebp+var_40], 1
		mov	eax, [edx+90h]
		mov	edx, [eax+8]
		cmp	[ebp+var_40], edx
		jl	loc_71003E50

loc_71003EF9:				; CODE XREF: sub_71003DF0+43j
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71003F24
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], 4
		mov	eax, [edx+90h]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_71003F24:				; CODE XREF: sub_71003DF0+111j
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_71023D40
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71003DF0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71003F43	proc near		; DATA XREF: sub_71003DF0+20o
		add	ebp, 8
		mov	ecx, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-50h], ecx
		jz	short loc_71003F64
		mov	eax, [ebp-4Ch]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_7104ECE0

loc_71003F64:				; CODE XREF: sub_71003F43+Dj
		mov	ecx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], ecx
		call	sub_71023D40
		mov	eax, [ebp-50h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71003F43	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71003F90	proc near		; DATA XREF: .rdata:7105DC90o

var_230		= qword	ptr -230h
var_228		= qword	ptr -228h
var_220		= qword	ptr -220h
var_214		= dword	ptr -214h
var_210		= dword	ptr -210h
var_20C		= dword	ptr -20Ch
var_208		= dword	ptr -208h
var_201		= byte ptr -201h
var_200		= dword	ptr -200h
var_1FC		= dword	ptr -1FCh
var_1F8		= qword	ptr -1F8h
var_1EC		= dword	ptr -1ECh
var_1E8		= qword	ptr -1E8h
var_1E0		= qword	ptr -1E0h
var_1D5		= byte ptr -1D5h
var_1D4		= dword	ptr -1D4h
var_1D0		= dword	ptr -1D0h
var_1C9		= byte ptr -1C9h
var_1C8		= dword	ptr -1C8h
var_1C1		= byte ptr -1C1h
var_1C0		= dword	ptr -1C0h
var_1BC		= dword	ptr -1BCh
var_1B5		= byte ptr -1B5h
var_1B4		= dword	ptr -1B4h
var_1B0		= dword	ptr -1B0h
var_1AC		= dword	ptr -1ACh
var_1A8		= qword	ptr -1A8h
var_1A0		= qword	ptr -1A0h
var_194		= dword	ptr -194h
var_190		= dword	ptr -190h
var_18C		= dword	ptr -18Ch
var_188		= dword	ptr -188h
var_184		= dword	ptr -184h
var_180		= dword	ptr -180h
var_17C		= dword	ptr -17Ch
var_178		= dword	ptr -178h
var_174		= dword	ptr -174h
var_170		= word ptr -170h
var_16E		= word ptr -16Eh
var_16C		= byte ptr -16Ch
var_168		= dword	ptr -168h
var_154		= dword	ptr -154h
var_150		= dword	ptr -150h
var_14C		= dword	ptr -14Ch
var_148		= dword	ptr -148h
var_144		= dword	ptr -144h
var_138		= byte ptr -138h
var_108		= qword	ptr -108h
var_100		= qword	ptr -100h
var_F8		= qword	ptr -0F8h
var_F0		= word ptr -0F0h
var_EC		= dword	ptr -0ECh
var_E8		= byte ptr -0E8h
var_E7		= byte ptr -0E7h
var_C8		= qword	ptr -0C8h
var_C0		= qword	ptr -0C0h
var_B8		= qword	ptr -0B8h
var_B0		= qword	ptr -0B0h
var_A8		= byte ptr -0A8h
var_98		= byte ptr -98h
var_88		= qword	ptr -88h
var_80		= qword	ptr -80h
var_78		= qword	ptr -78h
var_70		= qword	ptr -70h
var_68		= dword	ptr -68h
var_60		= qword	ptr -60h
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= byte ptr -50h
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= byte ptr -40h
var_38		= dword	ptr -38h
var_34		= byte ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= byte ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 274h
		mov	[ebp+var_14C], eax
		lea	eax, [ebp+var_16C]
		mov	[esp], eax
		mov	[ebp+var_154], offset sub_710525B0
		mov	[ebp+var_150], offset dword_71052D64
		mov	[ebp+var_148], offset sub_71005587
		mov	[ebp+var_144], esp
		call	_Unwind_SjLj_Register
		mov	ecx, [ebp+arg_4]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_8]
		mov	[ebp+var_168], 0FFFFFFFFh
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	[esp+8], edx
		call	sub_710227B0
		mov	edx, [ebp+arg_4]
		mov	[esp], edx
		call	ds:_ZNK8QPainter7opacityEv
		mov	ecx, [ebp+arg_8]
		mov	eax, [ebp+arg_4]
		fst	[ebp+var_230]
		fmul	qword ptr [ecx]
		mov	[esp], eax
		fstp	qword ptr [esp+4]
		call	ds:_ZN8QPainter10setOpacityEd
		mov	edx, [ebp+arg_4]
		mov	[esp], edx
		call	ds:_ZNK8QPainter4fontEv
		mov	[esp], eax
		call	ds:_ZNK5QFont10pointSizeFEv
		mov	ecx, [ebp+arg_8]
		mov	eax, [ebp+arg_4]
		mov	ecx, [ecx+14h]
		mov	[esp], eax
		fdivr	ds:flt_71059058
		mov	[ebp+var_1B4], ecx
		fstp	[ebp+var_1E0]
		call	ds:_ZNK8QPainter14worldTransformEv
		mov	[ebp+var_20C], eax
		mov	[esp+4], eax
		lea	eax, [ebp+var_138]
		mov	[esp], eax
		call	ds:_ZN7QMatrixC1ERKS_
		mov	edx, [ebp+var_20C]
		movzx	eax, byte ptr [ebp+var_F0]
		mov	ecx, edx
		and	eax, 0FFFFFFE0h
		fld	qword ptr [edx+30h]
		fstp	[ebp+var_108]
		fld	qword ptr [edx+38h]
		fstp	[ebp+var_100]
		fld	qword ptr [edx+40h]
		fstp	[ebp+var_F8]
		movzx	edx, byte ptr [edx+48h]
		fld	[ebp+var_1E0]
		fdivr	ds:flt_7105905C
		and	edx, 1Fh
		or	eax, edx
		mov	byte ptr [ebp+var_F0], al
		movzx	edx, word ptr [ecx+48h]
		movzx	eax, [ebp+var_F0]
		and	dx, 3E0h
		and	ax, 0FC1Fh
		or	eax, edx
		mov	[ebp+var_F0], ax
		mov	eax, [ecx+4Ch]
		mov	[ebp+var_EC], eax
		mov	eax, [ebp+arg_4]
		fst	qword ptr [esp+0Ch]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	ds:_ZN8QPainter5scaleEdd
		mov	edx, [ebp+arg_0]
		cmp	dword ptr [edx+94h], 0Fh
		fld	[ebp+var_1E0]
		fmul	qword ptr [edx+80h]
		fstp	[ebp+var_228]
		fld	[ebp+var_1E0]
		fmul	qword ptr [edx+88h]
		fstp	[ebp+var_220]
		fld	[ebp+var_1E0]
		fmul	qword ptr [edx+0A0h]
		fstp	[ebp+var_1F8]
		fld	[ebp+var_1E0]
		fmul	qword ptr [edx+98h]
		fst	[ebp+var_1E8]
		jz	loc_71004FC0
		fstp	st

loc_7100414D:				; CODE XREF: sub_71003F90+1046j
					; sub_71003F90+105Ej ...
		fldz
		mov	eax, [ebp+arg_0]
		fst	[ebp+var_C0]
		fst	[ebp+var_C8]
		fst	[ebp+var_B0]
		fst	[ebp+var_B8]
		fld	qword ptr [eax+0A0h]
		fucompp
		fnstsw	ax
		sahf
		jp	short loc_71004179
		jz	short loc_71004199

loc_71004179:				; CODE XREF: sub_71003F90+1E5j
		fld	[ebp+var_1F8]
		fstp	[ebp+var_B0]
		fld1
		fstp	[ebp+var_B8]
		fld	[ebp+var_220]
		fstp	[ebp+var_C0]

loc_71004199:				; CODE XREF: sub_71003F90+1E7j
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	[ebp+var_184], eax
		mov	edx, eax
		mov	[ebp+var_10], eax
		mov	[ebp+var_188], eax
		lock inc dword ptr [eax]
		setnz	al
		lock inc dword ptr [edx]
		setnz	al
		mov	[ebp+var_14], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	ecx, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_17C], ecx
		mov	[ebp+var_18], ecx
		mov	[ebp+var_180], ecx
		lock inc dword ptr [ecx]
		setnz	al
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_168], 10h
		call	sub_710491E0
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71004F8A

loc_7100420C:				; CODE XREF: sub_71003F90+1010j
		mov	ecx, ds:_ZN9QListData11shared_nullE
		mov	[ebp+var_174], ecx
		mov	[ebp+var_1C], ecx
		mov	[ebp+var_178], ecx
		lock inc dword ptr [ecx]
		setnz	al
		lea	eax, [ebp+var_1C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_168], 0Fh
		call	sub_710483A0
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_168], 11h
		call	sub_71046490
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+90h]
		mov	edx, [eax+8]
		test	edx, edx
		jle	loc_71004CC1
		add	ecx, 90h
		mov	[ebp+var_1C0], ecx
		mov	[ebp+var_1AC], 0
		mov	[ebp+var_1C1], 0
		jmp	loc_710045BF
; ---------------------------------------------------------------------------
		align 10h

loc_71004290:				; CODE XREF: sub_71003F90+8E9j
		mov	ecx, [ebp+var_1D0]
		test	ecx, ecx
		jz	loc_71004C00

loc_7100429E:				; CODE XREF: sub_71003F90+8F7j
					; sub_71003F90+960j
		mov	[ebp+var_1C9], 0

loc_710042A5:				; CODE XREF: sub_71003F90+95Aj
		lea	eax, [ebp+var_50]
		mov	[esp], eax
		mov	[ebp+var_168], 9
		call	ds:_ZN15QTextCharFormatC1Ev
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_710042E8
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_168], 7
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	sub_71049320

loc_710042E8:				; CODE XREF: sub_71003F90+333j
		mov	eax, [ebp+var_10]
		mov	edx, [eax+8]
		mov	eax, [eax+edx*4+0Ch]
		mov	eax, [eax+8]
		mov	[ebp+var_58], eax
		mov	eax, [ebp+var_2C]
		mov	eax, [eax+8]
		mov	[ebp+var_168], 7
		mov	[ebp+var_54], eax
		lea	eax, [ebp+var_40]
		mov	[esp+4], eax
		lea	eax, [ebp+var_50]
		mov	[esp], eax
		call	ds:_ZN15QTextCharFormat7setFontERK5QFont
		mov	edx, [ebp+arg_4]
		mov	[esp], edx
		call	ds:_ZNK8QPainter3penEv
		lea	edx, [ebp+var_98]
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZNK4QPencv8QVariantEv
		sub	esp, 4
		lea	eax, [ebp+var_98]
		mov	[esp+8], eax
		lea	eax, [ebp+var_50]
		mov	dword ptr [esp+4], 2022h
		mov	[esp], eax
		mov	[ebp+var_168], 2
		call	ds:_ZN11QTextFormat11setPropertyEiRK8QVariant
		lea	eax, [ebp+var_98]
		mov	[esp], eax
		mov	[ebp+var_168], 7
		call	ds:_ZN8QVariantD1Ev
		mov	ecx, [ebp+arg_4]
		mov	[esp], ecx
		call	ds:_ZNK8QPainter5brushEv
		lea	edx, [ebp+var_A8]
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZNK6QBrushcv8QVariantEv
		sub	esp, 4
		lea	eax, [ebp+var_A8]
		mov	[esp+8], eax
		lea	eax, [ebp+var_50]
		mov	dword ptr [esp+4], 821h
		mov	[esp], eax
		mov	[ebp+var_168], 1
		call	ds:_ZN11QTextFormat11setPropertyEiRK8QVariant
		lea	eax, [ebp+var_A8]
		mov	[esp], eax
		mov	[ebp+var_168], 7
		call	ds:_ZN8QVariantD1Ev
		cmp	[ebp+var_1C1], 0
		jz	loc_710048F5
		mov	eax, [ebp+var_14]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_71004414
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		call	sub_71048570

loc_71004414:				; CODE XREF: sub_71003F90+469j
		mov	eax, [ebp+var_14]
		mov	edx, [eax+8]
		lea	edx, [eax+edx*4+10h]
		mov	[ebp+var_1D4], edx
		mov	eax, [edx-4]
		mov	ecx, edx
		sub	ecx, 4
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_7100444C
		mov	eax, [eax+4]
		mov	[esp], ecx
		mov	[ebp+var_168], 7
		mov	[esp+4], eax
		call	sub_71045C10

loc_7100444C:				; CODE XREF: sub_71003F90+4A1j
		mov	ecx, [ebp+var_1D4]
		mov	eax, [ecx-4]
		mov	edx, [eax+0Ch]
		mov	eax, [eax+edx*4+10h]
		add	dword ptr [eax+4], 1

loc_71004460:				; CODE XREF: sub_71003F90+96Cj
					; sub_71003F90+97Aj
		mov	eax, [ebp+var_14]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_7100448D
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_168], 7
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		call	sub_71048570

loc_7100448D:				; CODE XREF: sub_71003F90+4D8j
		mov	eax, [ebp+var_14]
		lea	edx, [ebp+var_58]
		mov	[esp+4], edx
		mov	edx, [eax+8]
		mov	[ebp+var_168], 7
		lea	eax, [eax+edx*4+0Ch]
		mov	[esp], eax
		call	sub_71045E80
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_710044D3
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	sub_71049320

loc_710044D3:				; CODE XREF: sub_71003F90+528j
		mov	eax, [ebp+var_10]
		lea	edx, [ebp+var_2C]
		mov	[esp+4], edx
		mov	edx, [eax+8]
		mov	[ebp+var_168], 7
		lea	eax, [eax+edx*4+0Ch]
		mov	[esp], eax
		call	ds:_ZN7QString6appendERKS_
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+90h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_71004523
		mov	edx, [eax+4]
		mov	ecx, [ebp+var_1C0]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[esp+4], eax
		call	sub_7104EA30

loc_71004523:				; CODE XREF: sub_71003F90+575j
		mov	eax, [ebp+arg_8]
		mov	edx, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		mov	[esp+8], eax
		mov	[esp+4], edx
		mov	edx, [ebp+var_1B0]
		mov	eax, [ecx+90h]
		mov	eax, [eax+edx*4+10h]
		mov	[ebp+var_168], 7
		mov	[esp], eax
		call	sub_71022790
		lea	eax, [ebp+var_50]
		mov	[esp], eax
		mov	[ebp+var_168], 9
		call	ds:_ZN11QTextFormatD2Ev
		mov	eax, [ebp+var_2C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71004B60

loc_7100457D:				; CODE XREF: sub_71003F90+BE6j
		lea	ecx, [ebp+var_40]
		mov	[esp], ecx
		mov	[ebp+var_168], 11h
		call	ds:_ZN5QFontD1Ev
		movzx	eax, [ebp+var_1C9]
		mov	[ebp+var_1C1], al

loc_710045A0:				; CODE XREF: sub_71003F90+98Aj
					; sub_71003F90+BC5j
		mov	edx, [ebp+arg_0]
		add	[ebp+var_1AC], 1
		mov	eax, [edx+90h]
		mov	edx, [eax+8]
		cmp	[ebp+var_1AC], edx
		jge	loc_71004CC1

loc_710045BF:				; CODE XREF: sub_71003F90+2F9j
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_710045E9
		mov	eax, [eax+4]
		mov	[esp+4], edx
		mov	[ebp+var_168], 11h
		mov	[esp+8], eax
		mov	eax, [ebp+var_1C0]
		mov	[esp], eax
		call	sub_7104EA30

loc_710045E9:				; CODE XREF: sub_71003F90+634j
		mov	edx, [ebp+var_1AC]
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_1B0], edx
		mov	edx, [ecx+90h]
		mov	ecx, [ebp+var_1AC]
		mov	eax, [edx+ecx*4+10h]
		test	eax, eax
		jz	loc_71004910
		mov	ebx, [edx]
		mov	ecx, edx
		cmp	ebx, 1
		jz	short loc_71004652
		mov	eax, [edx+4]
		mov	ecx, [ebp+var_1C0]
		mov	[esp+8], eax
		mov	eax, [edx+8]
		mov	[esp], ecx
		mov	[ebp+var_168], 11h
		mov	[esp+4], eax
		call	sub_7104EA30
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_1B0]
		mov	ecx, [eax+90h]
		mov	eax, [ecx+edx*4+10h]

loc_71004652:				; CODE XREF: sub_71003F90+687j
		mov	edx, [eax+84h]
		mov	[ebp+var_1D0], edx
		mov	edx, [ecx]
		cmp	edx, 1
		jz	short loc_7100469E
		mov	eax, [ecx+4]
		mov	[esp+8], eax
		mov	eax, [ecx+8]
		mov	ecx, [ebp+var_1C0]
		mov	[ebp+var_168], 11h
		mov	[esp+4], eax
		mov	[esp], ecx
		call	sub_7104EA30
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_1B0]
		mov	eax, [edx+90h]
		mov	eax, [eax+ecx*4+10h]

loc_7100469E:				; CODE XREF: sub_71003F90+6D3j
		mov	edx, [ebp+arg_8]
		mov	ecx, [ebp+arg_4]
		mov	[esp], eax
		mov	[ebp+var_168], 11h
		mov	[esp+8], edx
		mov	[esp+4], ecx
		call	sub_710227B0
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		call	ds:_ZNK8QPainter4fontEv
		lea	edx, [ebp+var_40]
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZN5QFontC1ERKS_
		lea	ecx, [ebp+var_40]
		mov	[esp], ecx
		mov	[ebp+var_168], 0Ah
		call	ds:_ZNK5QFont10pointSizeFEv
		fnstcw	[ebp+var_16E]
		fmul	[ebp+var_1E0]
		movzx	eax, [ebp+var_16E]
		mov	ah, 0Ch
		mov	[ebp+var_170], ax
		lea	eax, [ebp+var_40]
		fldcw	[ebp+var_170]
		fistp	dword ptr [esp+4]
		fldcw	[ebp+var_16E]
		mov	[esp], eax
		call	ds:_ZN5QFont12setPixelSizeEi
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+90h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_71004754
		mov	edx, [eax+4]
		mov	ecx, [ebp+var_1C0]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[esp+4], eax
		call	sub_7104EA30

loc_71004754:				; CODE XREF: sub_71003F90+7A6j
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_1B0]
		mov	eax, [edx+90h]
		mov	eax, [eax+ecx*4+10h]
		mov	eax, [eax+80h]
		mov	[ebp+var_2C], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_2C]
		mov	dword ptr [esp+0Ch], 1
		mov	word ptr [esp+8], 20h
		mov	word ptr [esp+4], 9
		mov	[esp], eax
		mov	[ebp+var_168], 9
		call	ds:_ZN7QString7replaceE5QCharS0_N2Qt15CaseSensitivityE
		lea	eax, [ebp+var_2C]
		mov	dword ptr [esp+0Ch], 1
		mov	word ptr [esp+8], 20h
		mov	word ptr [esp+4], 0Ah
		mov	[esp], eax
		call	ds:_ZN7QString7replaceE5QCharS0_N2Qt15CaseSensitivityE
		cmp	[ebp+var_1C1], 0
		mov	[ebp+var_1D5], 0
		jz	loc_71004B80

loc_710047D8:				; CODE XREF: sub_71003F90+D2Cj
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_71004805
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_168], 9
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	sub_71049320

loc_71004805:				; CODE XREF: sub_71003F90+850j
		mov	eax, [ebp+var_10]
		mov	edx, [eax+8]
		mov	word ptr [esp+4], 20h
		mov	[ebp+var_168], 9
		lea	eax, [eax+edx*4+0Ch]
		mov	[esp], eax
		call	ds:_ZN7QString6appendE5QChar

loc_71004829:				; CODE XREF: sub_71003F90+C49j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+90h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_7100485F
		mov	edx, [eax+4]
		mov	ecx, [ebp+var_1C0]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_168], 9
		mov	[esp+4], eax
		call	sub_7104EA30

loc_7100485F:				; CODE XREF: sub_71003F90+8A7j
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_1B0]
		mov	eax, [edx+90h]
		mov	eax, [eax+ecx*4+10h]
		cmp	byte ptr [eax+88h], 0
		jz	loc_71004290
		mov	edx, [ebp+var_1D0]
		test	edx, edx
		jnz	loc_7100429E
		mov	[ebp+var_1C9], 0

loc_71004894:				; CODE XREF: sub_71003F90+CA4j
		lea	eax, [ebp+var_28]
		lea	edx, [ebp+var_2C]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_168], 9
		call	ds:_ZNK7QString10simplifiedEv
		sub	esp, 4
		lea	eax, [ebp+var_28]
		mov	[esp+4], eax
		lea	eax, [ebp+var_2C]
		mov	[esp], eax
		mov	[ebp+var_168], 8
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_28]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71004BE0

loc_710048E2:				; CODE XREF: sub_71003F90+C66j
		mov	eax, [ebp+var_2C]
		mov	eax, [eax+8]
		test	eax, eax
		jnz	loc_710042A5
		jmp	loc_7100429E
; ---------------------------------------------------------------------------

loc_710048F5:				; CODE XREF: sub_71003F90+45Bj
		cmp	[ebp+var_1D5], 0
		jz	loc_71004460
		sub	[ebp+var_58], 1
		add	[ebp+var_54], 1
		jmp	loc_71004460
; ---------------------------------------------------------------------------
		align 10h

loc_71004910:				; CODE XREF: sub_71003F90+67Aj
		mov	eax, [ebp+arg_0]
		cmp	dword ptr [eax+94h], 0Fh
		jnz	loc_710045A0
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_7100494D
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_168], 11h
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	sub_71049320

loc_7100494D:				; CODE XREF: sub_71003F90+998j
		mov	edx, [ebp+var_10]
		mov	eax, [edx+8]
		mov	eax, [edx+eax*4+0Ch]
		mov	edx, [eax+8]
		test	edx, edx
		jnz	loc_71004AC6
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_168], 11h
		mov	[esp], edx
		call	ds:_ZNK8QPainter4fontEv
		lea	ecx, [ebp+var_40]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	ds:_ZN5QFontC1ERKS_
		lea	eax, [ebp+var_40]
		mov	[esp], eax
		mov	[ebp+var_168], 0Eh
		call	ds:_ZNK5QFont10pointSizeFEv
		fnstcw	[ebp+var_16E]
		lea	edx, [ebp+var_40]
		fmul	[ebp+var_1E0]
		mov	[esp], edx
		movzx	eax, [ebp+var_16E]
		mov	ah, 0Ch
		mov	[ebp+var_170], ax
		fldcw	[ebp+var_170]
		fistp	dword ptr [esp+4]
		fldcw	[ebp+var_16E]
		call	ds:_ZN5QFont12setPixelSizeEi
		lea	eax, [ebp+var_50]
		mov	[esp], eax
		call	ds:_ZN15QTextCharFormatC1Ev
		lea	ecx, [ebp+var_40]
		lea	eax, [ebp+var_50]
		mov	[ebp+var_58], 0
		mov	[ebp+var_54], 1
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	[ebp+var_168], 0Dh
		call	ds:_ZN15QTextCharFormat7setFontERK5QFont
		mov	eax, [ebp+var_14]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_71004A30
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		call	sub_71048570

loc_71004A30:				; CODE XREF: sub_71003F90+A85j
		mov	edx, [ebp+var_14]
		lea	eax, [ebp+var_58]
		mov	[esp+4], eax
		mov	eax, [edx+8]
		mov	[ebp+var_168], 0Dh
		lea	eax, [edx+eax*4+0Ch]
		mov	[esp], eax
		call	sub_71045E80
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_71004A76
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	sub_71049320

loc_71004A76:				; CODE XREF: sub_71003F90+ACBj
		mov	edx, [ebp+var_10]
		mov	eax, [edx+8]
		mov	word ptr [esp+4], 20h
		mov	[ebp+var_168], 0Dh
		lea	eax, [edx+eax*4+0Ch]
		mov	[esp], eax
		call	ds:_ZN7QString6appendE5QChar
		lea	eax, [ebp+var_50]
		mov	[esp], eax
		mov	[ebp+var_168], 0Eh
		call	ds:_ZN11QTextFormatD2Ev
		lea	eax, [ebp+var_40]
		mov	[esp], eax
		mov	[ebp+var_168], 11h
		call	ds:_ZN5QFontD1Ev

loc_71004AC6:				; CODE XREF: sub_71003F90+9CCj
		mov	edx, [ebp+var_17C]
		mov	ecx, [ebp+var_180]
		mov	[ebp+var_20], edx
		lock inc dword ptr [ecx]
		setnz	al
		lea	eax, [ebp+var_20]
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_168], 0Ch
		call	sub_710491E0
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71004F6F

loc_71004B08:				; CODE XREF: sub_71003F90+FF5j
		mov	eax, [ebp+var_174]
		mov	edx, [ebp+var_178]
		mov	[ebp+var_24], eax
		lock inc dword ptr [edx]
		setnz	al
		lea	eax, [ebp+var_24]
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_168], 0Bh
		call	sub_710483A0
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		mov	[ebp+var_168], 11h
		call	sub_71046490
		mov	[ebp+var_1C1], 0
		jmp	loc_710045A0
; ---------------------------------------------------------------------------
		align 10h

loc_71004B60:				; CODE XREF: sub_71003F90+5E7j
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_168], 0Ah
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7100457D
; ---------------------------------------------------------------------------
		align 10h

loc_71004B80:				; CODE XREF: sub_71003F90+842j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+90h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_71004BAC
		mov	edx, [eax+4]
		mov	ecx, [ebp+var_1C0]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[esp+4], eax
		call	sub_7104EA30

loc_71004BAC:				; CODE XREF: sub_71003F90+BFEj
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_1B0]
		mov	eax, [edx+90h]
		mov	eax, [eax+ecx*4+10h]
		cmp	byte ptr [eax+88h], 0
		jnz	short loc_71004BD2
		mov	eax, [ebp+var_1D0]
		test	eax, eax
		jz	short loc_71004C40

loc_71004BD2:				; CODE XREF: sub_71003F90+C36j
					; sub_71003F90+CECj ...
		mov	[ebp+var_1D5], 0
		jmp	loc_71004829
; ---------------------------------------------------------------------------
		align 10h

loc_71004BE0:				; CODE XREF: sub_71003F90+94Cj
		mov	eax, [ebp+var_28]
		mov	[ebp+var_168], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_710048E2
; ---------------------------------------------------------------------------
		align 10h

loc_71004C00:				; CODE XREF: sub_71003F90+308j
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_2C]
		mov	[ebp+var_C], 20h
		mov	dword ptr [esp+8], 1
		mov	[esp], eax
		mov	[ebp+var_168], 9
		call	ds:_ZNK7QString8endsWithERK5QCharN2Qt15CaseSensitivityE
		test	al, al
		setnz	[ebp+var_1C9]
		jmp	loc_71004894
; ---------------------------------------------------------------------------
		align 10h

loc_71004C40:				; CODE XREF: sub_71003F90+C40j
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_71004C6D
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_168], 9
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	sub_71049320

loc_71004C6D:				; CODE XREF: sub_71003F90+CB8j
		mov	edx, [ebp+var_10]
		mov	eax, [edx+8]
		mov	eax, [edx+eax*4+0Ch]
		mov	ebx, [eax+8]
		test	ebx, ebx
		jz	loc_71004BD2
		lea	eax, [ebp+var_A]
		mov	[esp+4], eax
		lea	eax, [ebp+var_2C]
		mov	[ebp+var_A], 20h
		mov	dword ptr [esp+8], 1
		mov	[esp], eax
		mov	[ebp+var_168], 9
		call	ds:_ZNK7QString10startsWithERK5QCharN2Qt15CaseSensitivityE
		test	al, al
		jz	loc_71004BD2
		mov	[ebp+var_1D5], 1
		jmp	loc_710047D8
; ---------------------------------------------------------------------------

loc_71004CC1:				; CODE XREF: sub_71003F90+2D6j
					; sub_71003F90+629j
		mov	ecx, [ebp+arg_8]
		mov	ebx, [ecx+10h]
		test	ebx, ebx
		jz	loc_71005014
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_71004CFC
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_168], 11h
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	sub_71049320

loc_71004CFC:				; CODE XREF: sub_71003F90+D47j
		mov	eax, [ebp+var_10]
		mov	eax, [eax+10h]
		mov	[ebp+var_2C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_10]
		cmp	dword ptr [eax+8], 1
		jle	loc_71004DAF
		mov	eax, ds:_ZN7QString6appendE5QChar
		mov	[ebp+var_1BC], 1
		mov	[ebp+var_18C], eax
		lea	esi, [esi+0]

loc_71004D30:				; CODE XREF: sub_71003F90+E1Dj
		lea	edx, [ebp+var_2C]
		mov	word ptr [esp+4], 0Ah
		mov	[esp], edx
		mov	[ebp+var_168], 6
		call	[ebp+var_18C]
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_71004D70
		mov	edx, [eax+4]
		lea	ecx, [ebp+var_10]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[esp+4], eax
		call	sub_71049320

loc_71004D70:				; CODE XREF: sub_71003F90+DC5j
		mov	edx, [ebp+var_1BC]
		lea	ecx, [ebp+var_2C]
		mov	[esp], ecx
		mov	[ebp+var_168], 6
		lea	eax, ds:10h[edx*4]
		add	eax, [ebp+var_10]
		mov	[esp+4], eax
		call	ds:_ZN7QString6appendERKS_
		mov	eax, [ebp+var_10]
		add	[ebp+var_1BC], 1
		mov	edx, [ebp+var_1BC]
		cmp	edx, [eax+8]
		jl	short loc_71004D30

loc_71004DAF:				; CODE XREF: sub_71003F90+D82j
		mov	ecx, [ebp+arg_8]
		mov	eax, [ecx+14h]
		mov	[ebp+var_168], 6
		mov	[ebp+var_30], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		call	ds:_ZNK8QPainter4fontEv
		mov	[esp], eax
		call	ds:_ZNK5QFont10pointSizeFEv
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_30]
		fld	[ebp+var_1E0]
		mov	ecx, [ebp+arg_4]
		fmul	qword ptr [edx+88h]
		fld	[ebp+var_1E0]
		fmul	qword ptr [edx+80h]
		mov	edx, [ebp+arg_8]
		mov	[esp+18h], eax	; int
		lea	eax, [ebp+var_2C]
		mov	[esp+0Ch], eax	; int
		lea	eax, [ebp+var_68]
		mov	[esp+8], eax	; int
		mov	[esp+4], ecx	; int
		fstp	qword ptr [ebp+var_68]
		fstp	[ebp+var_60]
		fmul	[ebp+var_1E0]
		fstp	qword ptr [esp+10h] ; double
		mov	eax, [edx+10h]
		mov	[esp], eax	; int
		call	sub_71029D00
		mov	eax, [ebp+var_2C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71004FA5

loc_71004E3D:				; CODE XREF: sub_71003F90+102Bj
					; sub_71003F90+108Cj ...
		mov	ecx, [ebp+arg_4]
		lea	eax, [ebp+var_138]
		mov	dword ptr [esp+8], 0
		mov	[esp+4], eax
		mov	[ebp+var_168], 11h
		mov	[esp], ecx
		call	ds:_ZN8QPainter17setWorldTransformERK10QTransformb
		mov	eax, [ebp+arg_4]
		fld	[ebp+var_230]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	ds:_ZN8QPainter10setOpacityEd
		mov	edx, [ebp+arg_8]
		mov	ecx, [ebp+arg_4]
		mov	eax, [ebp+arg_0]
		mov	[esp+8], edx
		mov	[esp+4], ecx
		mov	[esp], eax
		call	sub_71022790
		mov	eax, [ebp+var_14]
		test	eax, eax
		jz	short loc_71004EA9
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71004FF3

loc_71004EA9:				; CODE XREF: sub_71003F90+F09j
					; sub_71003F90+107Fj
		mov	edx, [ebp+var_184]
		lock dec dword ptr [edx]
		setnz	al
		test	al, al
		jnz	short loc_71004F2F
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		add	edx, 10h
		mov	ecx, [ebp+var_184]
		mov	[ebp+var_214], edx
		mov	eax, [eax+8]
		lea	eax, [ecx+eax*8+10h]
		mov	[ebp+var_1FC], eax
		jmp	short loc_71004F00
; ---------------------------------------------------------------------------
		align 10h

loc_71004EE0:				; CODE XREF: sub_71003F90+F7Cj
		sub	[ebp+var_1FC], 8
		mov	eax, [ebp+var_1FC]
		mov	[ebp+var_168], 13h
		mov	[esp], eax
		call	ds:_ZN11QTextFormatD2Ev

loc_71004F00:				; CODE XREF: sub_71003F90+F4Aj
		mov	edx, [ebp+var_1FC]
		cmp	[ebp+var_214], edx
		jnz	short loc_71004EE0
		mov	ecx, [ebp+var_184]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_168], 13h
		mov	[esp], ecx
		call	ds:_ZN11QVectorData4freeEPS_i

loc_71004F2F:				; CODE XREF: sub_71003F90+F27j
		mov	eax, [ebp+var_10]
		test	eax, eax
		jz	short loc_71004F5C
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71004F5C
		mov	eax, [ebp+var_10]
		mov	[ebp+var_168], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	sub_71049180

loc_71004F5C:				; CODE XREF: sub_71003F90+FA4j
					; sub_71003F90+FAEj
		lea	eax, [ebp+var_16C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	ebx, [ebp+var_4]
		leave
		retn
; ---------------------------------------------------------------------------

loc_71004F6F:				; CODE XREF: sub_71003F90+B72j
		mov	eax, [ebp+var_20]
		mov	[ebp+var_168], 11h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71004B08
; ---------------------------------------------------------------------------

loc_71004F8A:				; CODE XREF: sub_71003F90+276j
		mov	eax, [ebp+var_18]
		mov	[ebp+var_168], 11h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7100420C
; ---------------------------------------------------------------------------

loc_71004FA5:				; CODE XREF: sub_71003F90+EA7j
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_168], 11h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71004E3D
; ---------------------------------------------------------------------------

loc_71004FC0:				; CODE XREF: sub_71003F90+1B5j
		cmp	[ebp+var_1B4], 4
		jz	loc_71005570
		fstp	st
		cmp	[ebp+var_1B4], 2
		jnz	loc_7100414D
		fld	[ebp+var_228]
		fadd	[ebp+var_1E8]
		fstp	[ebp+var_228]
		jmp	loc_7100414D
; ---------------------------------------------------------------------------

loc_71004FF3:				; CODE XREF: sub_71003F90+F13j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_168], 12h
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		call	sub_71048350
		jmp	loc_71004EA9
; ---------------------------------------------------------------------------

loc_71005014:				; CODE XREF: sub_71003F90+D39j
		mov	eax, [ebp+var_10]
		mov	edx, [eax+8]
		test	edx, edx
		jle	loc_71004E3D
		fldz
		mov	[ebp+var_200], 0
		fstp	[ebp+var_1A0]
		mov	[ebp+var_1B5], 1
		nop
		lea	esi, [esi+0]

loc_71005040:				; CODE XREF: sub_71003F90+14E8j
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_71005067
		mov	eax, [eax+4]
		mov	[esp+4], edx
		mov	[ebp+var_168], 11h
		mov	[esp+8], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	sub_71049320

loc_71005067:				; CODE XREF: sub_71003F90+10B5j
		mov	edx, [ebp+var_200]
		lea	ecx, [ebp+var_34]
		mov	[esp], ecx
		mov	[ebp+var_168], 11h
		lea	eax, ds:10h[edx*4]
		add	eax, [ebp+var_10]
		mov	[ebp+var_210], edx
		mov	[esp+4], eax
		call	ds:_ZN11QTextLayoutC1ERK7QString
		lea	eax, [ebp+var_E8]
		lea	edx, [ebp+var_34]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_168], 5
		call	ds:_ZNK11QTextLayout10textOptionEv
		movzx	eax, [ebp+var_E7]
		sub	esp, 4
		lea	ecx, [ebp+var_34]
		mov	[esp], ecx
		mov	[ebp+var_168], 4
		and	eax, 0FFFFFFF0h
		or	eax, 4
		mov	[ebp+var_E7], al
		lea	eax, [ebp+var_E8]
		mov	[esp+4], eax
		call	ds:_ZN11QTextLayout13setTextOptionERK11QTextOption
		mov	eax, [ebp+var_14]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_71005110
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		call	sub_71048570

loc_71005110:				; CODE XREF: sub_71003F90+1165j
		mov	edx, [ebp+var_210]
		lea	ecx, [ebp+var_34]
		mov	[esp], ecx
		mov	[ebp+var_168], 4
		lea	eax, ds:10h[edx*4]
		add	eax, [ebp+var_14]
		mov	[esp+4], eax
		call	ds:_ZN11QTextLayout20setAdditionalFormatsERK5QListINS_11FormatRangeEE
		lea	eax, [ebp+var_34]
		mov	[esp], eax
		call	ds:_ZN11QTextLayout11beginLayoutEv

loc_71005146:				; CODE XREF: sub_71003F90+11EDj
					; sub_71003F90+120Fj
		lea	edx, [ebp+var_34]
		mov	[esp], edx
		mov	[ebp+var_168], 4
		call	ds:_ZN11QTextLayout10createLineEv
		mov	[ebp+var_44], edx
		mov	ecx, [ebp+var_44]
		mov	[ebp+var_48], eax
		test	ecx, ecx
		jz	short loc_710051A1
		mov	ecx, [ebp+arg_0]
		fld	qword ptr [ecx+98h]
		fldz
		fxch	st(1)
		fucompp
		fnstsw	ax
		sahf
		jp	short loc_7100517F
		jz	short loc_71005146

loc_7100517F:				; CODE XREF: sub_71003F90+11EBj
		fld	[ebp+var_1E8]
		lea	eax, [ebp+var_48]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		mov	[ebp+var_168], 4
		call	ds:_ZN9QTextLine12setLineWidthEd
		jmp	short loc_71005146
; ---------------------------------------------------------------------------

loc_710051A1:				; CODE XREF: sub_71003F90+11D7j
		lea	edx, [ebp+var_34]
		mov	[esp], edx
		mov	[ebp+var_168], 4
		call	ds:_ZN11QTextLayout9endLayoutEv
		mov	ecx, ds:_ZNK11QTextLayout9lineCountEv
		mov	[ebp+var_194], 0
		mov	[ebp+var_190], ecx
		lea	esi, [esi+0]

loc_710051D0:				; CODE XREF: sub_71003F90+135Cj
		lea	eax, [ebp+var_34]
		mov	[esp], eax
		mov	[ebp+var_168], 4
		call	[ebp+var_190]
		cmp	[ebp+var_194], eax
		jge	loc_71005530
		mov	eax, [ebp+var_194]
		lea	edx, [ebp+var_34]
		mov	[esp], edx
		mov	[ebp+var_168], 4
		mov	[esp+4], eax
		call	ds:_ZNK11QTextLayout6lineAtEi
		cmp	[ebp+var_1B4], 4
		mov	[ebp+var_48], eax
		mov	[ebp+var_44], edx
		jz	loc_710054B7
		cmp	[ebp+var_1B4], 2
		jz	loc_710054E0
		fldz
		fstp	[ebp+var_1A8]

loc_7100523A:				; CODE XREF: sub_71003F90+1545j
					; sub_71003F90+1572j
		cmp	[ebp+var_1B5], 0
		jz	short loc_71005253
		mov	edx, [ebp+arg_0]
		cmp	dword ptr [edx+94h], 0Eh
		jz	loc_71005507

loc_71005253:				; CODE XREF: sub_71003F90+12B1j
					; sub_71003F90+1599j
		fld	[ebp+var_1A8]
		lea	eax, [ebp+var_78]
		fstp	[ebp+var_78]
		fld	[ebp+var_1A0]
		mov	[esp+4], eax
		lea	eax, [ebp+var_48]
		fstp	[ebp+var_70]
		mov	[esp], eax
		mov	[ebp+var_168], 4
		call	ds:_ZN9QTextLine11setPositionERK7QPointF
		mov	edx, [ebp+arg_0]
		fld	qword ptr [edx+98h]
		fldz
		fxch	st(1)
		fucompp
		fnstsw	ax
		sahf
		jp	short loc_710052F1
		jnz	short loc_710052F1

loc_71005298:				; CODE XREF: sub_71003F90+1384j
		mov	eax, [ebp+arg_0]
		fld	qword ptr [eax+0A0h]
		fldz
		fxch	st(1)
		fucompp
		fnstsw	ax
		sahf
		jp	loc_71005483
		jnz	loc_71005483

loc_710052B6:				; CODE XREF: sub_71003F90+151Cj
		lea	ecx, [ebp+var_48]
		mov	[esp], ecx
		mov	[ebp+var_168], 4
		call	ds:_ZNK9QTextLine6heightEv
		fmul	ds:dbl_71059068
		add	[ebp+var_194], 1
		mov	[ebp+var_1B5], 0
		fadd	[ebp+var_1A0]
		fstp	[ebp+var_1A0]
		jmp	loc_710051D0
; ---------------------------------------------------------------------------

loc_710052F1:				; CODE XREF: sub_71003F90+1304j
					; sub_71003F90+1306j
		lea	edx, [ebp+var_48]
		mov	[esp], edx
		mov	[ebp+var_168], 4
		call	ds:_ZNK9QTextLine16naturalTextWidthEv
		fld	[ebp+var_1E8]
		fxch	st(1)
		fucompp
		fnstsw	ax
		sahf
		jbe	short loc_71005298

loc_71005316:				; CODE XREF: sub_71003F90+1522j
		fld	[ebp+var_1A0]
		fsub	ds:flt_7105905C
		mov	[ebp+var_1B5], 0
		mov	[ebp+var_201], 1
		fstp	[ebp+var_B0]

loc_71005336:				; CODE XREF: sub_71003F90+15A7j
		mov	edx, [ebp+var_184]
		mov	ecx, [ebp+var_188]
		mov	[ebp+var_38], edx
		lock inc dword ptr [ecx]
		setnz	al
		lea	eax, [ebp+var_C8]
		fld	[ebp+var_228]
		mov	[esp+10h], eax
		lea	eax, [ebp+var_38]
		mov	[esp+0Ch], eax
		lea	eax, [ebp+var_88]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		fstp	[ebp+var_88]
		fld	[ebp+var_220]
		lea	edx, [ebp+var_34]
		fstp	[ebp+var_80]
		mov	[esp], edx
		mov	[esp+4], eax
		mov	[ebp+var_168], 3
		call	ds:_ZNK11QTextLayout4drawEP8QPainterRK7QPointFRK7QVectorINS_11FormatRangeEERK6QRectF
		mov	eax, [ebp+var_38]
		test	eax, eax
		jz	loc_71005429
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71005429
		mov	ecx, [ebp+var_38]
		mov	[ebp+var_208], ecx
		mov	edx, [ebp+var_208]
		add	ecx, 10h
		mov	[ebp+var_1EC], ecx
		mov	eax, [edx+8]
		shl	eax, 4
		lea	eax, [eax+edx+10h]
		mov	[ebp+var_1C8], eax
		jmp	short loc_710053FA
; ---------------------------------------------------------------------------

loc_710053D7:				; CODE XREF: sub_71003F90+1476j
		sub	[ebp+var_1C8], 10h
		mov	eax, [ebp+var_1C8]
		mov	[ebp+var_168], 4
		add	eax, 8
		mov	[esp], eax
		call	ds:_ZN11QTextFormatD2Ev

loc_710053FA:				; CODE XREF: sub_71003F90+1445j
		mov	ecx, [ebp+var_1C8]
		cmp	[ebp+var_1EC], ecx
		jnz	short loc_710053D7
		mov	eax, [ebp+var_208]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_168], 4
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_71005429:				; CODE XREF: sub_71003F90+140Dj
					; sub_71003F90+141Bj
		cmp	[ebp+var_201], 0
		jnz	loc_7100553C
		lea	eax, [ebp+var_E8]
		mov	[esp], eax
		mov	[ebp+var_168], 5
		call	ds:_ZN11QTextOptionD1Ev
		lea	edx, [ebp+var_34]
		mov	[esp], edx
		mov	[ebp+var_168], 11h
		call	ds:_ZN11QTextLayoutD1Ev
		mov	eax, [ebp+var_10]
		add	[ebp+var_200], 1
		mov	edx, [eax+8]
		cmp	[ebp+var_200], edx
		jl	loc_71005040
		jmp	loc_71004E3D
; ---------------------------------------------------------------------------

loc_71005483:				; CODE XREF: sub_71003F90+131Aj
					; sub_71003F90+1320j
		lea	edx, [ebp+var_48]
		mov	[esp], edx
		mov	[ebp+var_168], 4
		call	ds:_ZNK9QTextLine6heightEv
		fadd	[ebp+var_1A0]
		fld	[ebp+var_1F8]
		fxch	st(1)
		fucompp
		fnstsw	ax
		sahf
		jbe	loc_710052B6
		jmp	loc_71005316
; ---------------------------------------------------------------------------

loc_710054B7:				; CODE XREF: sub_71003F90+128Fj
		lea	ecx, [ebp+var_48]
		mov	[esp], ecx
		call	ds:_ZNK9QTextLine16naturalTextWidthEv
		fmul	ds:flt_71059064
		fadd	ds:flt_71059048
		fstp	[ebp+var_1A8]
		jmp	loc_7100523A
; ---------------------------------------------------------------------------
		align 10h

loc_710054E0:				; CODE XREF: sub_71003F90+129Cj
		lea	eax, [ebp+var_48]
		mov	[esp], eax
		mov	[ebp+var_168], 4
		call	ds:_ZNK9QTextLine16naturalTextWidthEv
		fsubr	ds:flt_71059048
		fstp	[ebp+var_1A8]
		jmp	loc_7100523A
; ---------------------------------------------------------------------------

loc_71005507:				; CODE XREF: sub_71003F90+12BDj
		lea	ecx, [ebp+var_48]
		mov	[esp], ecx
		mov	[ebp+var_168], 4
		call	ds:_ZNK9QTextLine6ascentEv
		fsubr	[ebp+var_1A0]
		fstp	[ebp+var_1A0]
		jmp	loc_71005253
; ---------------------------------------------------------------------------
		align 10h

loc_71005530:				; CODE XREF: sub_71003F90+125Cj
		mov	[ebp+var_201], 0
		jmp	loc_71005336
; ---------------------------------------------------------------------------

loc_7100553C:				; CODE XREF: sub_71003F90+14A0j
		lea	eax, [ebp+var_E8]
		mov	[esp], eax
		mov	[ebp+var_168], 5
		call	ds:_ZN11QTextOptionD1Ev
		lea	eax, [ebp+var_34]
		mov	[esp], eax
		mov	[ebp+var_168], 11h
		call	ds:_ZN11QTextLayoutD1Ev
		jmp	loc_71004E3D
; ---------------------------------------------------------------------------

loc_71005570:				; CODE XREF: sub_71003F90+1037j
		fmul	ds:flt_71059060
		fadd	[ebp+var_228]
		fstp	[ebp+var_228]
		jmp	loc_7100414D
sub_71003F90	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71005587	proc near		; DATA XREF: sub_71003F90+30o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-168h]
		mov	edx, [ebp-164h]
		cmp	eax, 1
		mov	[ebp-244h], edx
		jz	loc_71005808
		cmp	eax, 2
		jz	loc_710058A1
		cmp	eax, 3
		jz	loc_7100586D
		cmp	eax, 4
		jz	loc_71005886
		cmp	eax, 5
		jz	loc_71005826
		cmp	eax, 6
		lea	esi, [esi+0]
		jz	loc_7100565F
		cmp	eax, 7
		jz	loc_71005756
		cmp	eax, 8
		jz	loc_71005675
		cmp	eax, 9
		nop
		lea	esi, [esi+0]
		jz	loc_7100568A
		cmp	eax, 0Ah
		jz	loc_71005770
		cmp	eax, 0Bh
		jz	loc_7100596C
		cmp	eax, 0Ch
		nop
		lea	esi, [esi+0]
		jz	loc_71005951
		cmp	eax, 0Dh
		jz	short loc_7100568A
		cmp	eax, 0Eh
		xchg	ax, ax
		jz	loc_71005937
		cmp	eax, 0Fh
		jz	loc_7100591D
		cmp	eax, 10h
		jz	short loc_710056A0
		cmp	eax, 11h
		jz	loc_710056E5
		cmp	eax, 12h
		jz	loc_710057B7
		lea	eax, [ebp-0A8h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-168h], 0
		call	ds:_ZN8QVariantD1Ev

loc_7100565F:				; CODE XREF: sub_71005587+49j
					; sub_71005587+29Aj
		lea	eax, [ebp-50h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-168h], 0
		call	ds:_ZN11QTextFormatD2Ev

loc_71005675:				; CODE XREF: sub_71005587+5Bj
					; sub_71005587+1E4j
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-168h], 0
		call	sub_710477B0

loc_7100568A:				; CODE XREF: sub_71005587+69j
					; sub_71005587+92j ...
		lea	eax, [ebp-40h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-168h], 0
		call	ds:_ZN5QFontD1Ev

loc_710056A0:				; CODE XREF: sub_71005587+ABj
					; sub_71005587+1FEj ...
		mov	eax, [ebp-14h]
		mov	edx, [ebp-244h]
		test	eax, eax
		mov	[ebp-23Ch], edx
		jz	short loc_710056D9
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710056D9
		mov	eax, [ebp-14h]
		mov	dword ptr [ebp-168h], 0
		mov	[esp+arg_0], eax
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		call	sub_71048350

loc_710056D9:				; CODE XREF: sub_71005587+12Aj
					; sub_71005587+134j
		mov	ecx, [ebp-23Ch]
		mov	[ebp-244h], ecx

loc_710056E5:				; CODE XREF: sub_71005587+B0j
		mov	eax, [ebp-244h]
		mov	edx, [ebp-184h]
		mov	[ebp-238h], eax
		lock dec dword ptr [edx]
		setnz	al
		test	al, al
		jnz	loc_710057AB
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		add	edx, 10h
		mov	ecx, [ebp-184h]
		mov	[ebp-254h], edx
		mov	eax, [eax+8]
		lea	eax, [ecx+eax*8+10h]
		mov	[ebp-248h], eax

loc_71005726:				; CODE XREF: sub_71005587+1CDj
		mov	edx, [ebp-248h]
		cmp	[ebp-254h], edx
		jz	short loc_7100578A
		sub	dword ptr [ebp-248h], 8
		mov	eax, [ebp-248h]
		mov	dword ptr [ebp-168h], 0
		mov	[esp+0], eax
		call	ds:_ZN11QTextFormatD2Ev
		jmp	short loc_71005726
; ---------------------------------------------------------------------------

loc_71005756:				; CODE XREF: sub_71005587+52j
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-168h], 0
		call	sub_710477B0
		jmp	loc_71005675
; ---------------------------------------------------------------------------

loc_71005770:				; CODE XREF: sub_71005587+72j
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-168h], 0
		call	sub_71046490
		jmp	loc_710056A0
; ---------------------------------------------------------------------------

loc_7100578A:				; CODE XREF: sub_71005587+1ABj
		mov	ecx, [ebp-184h]
		mov	[esp+arg_0], 4
		mov	dword ptr [ebp-168h], 0
		mov	[esp+0], ecx
		call	ds:_ZN11QVectorData4freeEPS_i

loc_710057AB:				; CODE XREF: sub_71005587+178j
		mov	eax, [ebp-238h]
		mov	[ebp-244h], eax

loc_710057B7:				; CODE XREF: sub_71005587+B9j
		mov	eax, [ebp-244h]
		mov	[ebp-234h], eax
		mov	eax, [ebp-10h]
		test	eax, eax
		jz	short loc_710057F0
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710057F0
		mov	eax, [ebp-10h]
		mov	dword ptr [ebp-168h], 0
		mov	[esp+arg_0], eax
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		call	sub_71049180

loc_710057F0:				; CODE XREF: sub_71005587+241j
					; sub_71005587+24Bj
		mov	edx, [ebp-234h]
		mov	dword ptr [ebp-168h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71005808:				; CODE XREF: sub_71005587+18j
		lea	eax, [ebp-98h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-168h], 0
		call	ds:_ZN8QVariantD1Ev
		jmp	loc_7100565F
; ---------------------------------------------------------------------------

loc_71005826:				; CODE XREF: sub_71005587+3Cj
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-168h], 0
		call	sub_710477B0
		jmp	loc_710056A0
; ---------------------------------------------------------------------------

loc_71005840:				; CODE XREF: sub_71005587+36Bj
		mov	eax, [ebp-24Ch]
		mov	[esp+arg_0], 4
		mov	dword ptr [ebp-168h], 0
		mov	[esp+0], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_71005861:				; CODE XREF: sub_71005587+32Bj
					; sub_71005587+335j
		mov	edx, [ebp-240h]
		mov	[ebp-244h], edx

loc_7100586D:				; CODE XREF: sub_71005587+2Aj
		lea	eax, [ebp-0E8h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-168h], 0
		call	ds:_ZN11QTextOptionD1Ev

loc_71005886:				; CODE XREF: sub_71005587+33j
		lea	eax, [ebp-34h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-168h], 0
		call	ds:_ZN11QTextLayoutD1Ev
		jmp	loc_710056A0
; ---------------------------------------------------------------------------

loc_710058A1:				; CODE XREF: sub_71005587+21j
		mov	eax, [ebp-38h]
		mov	ecx, [ebp-244h]
		test	eax, eax
		mov	[ebp-240h], ecx
		jz	short loc_71005861
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71005861
		mov	eax, [ebp-38h]
		mov	[ebp-24Ch], eax
		mov	edx, [ebp-24Ch]
		add	eax, 10h
		mov	[ebp-258h], eax
		mov	eax, [edx+8]
		shl	eax, 4
		lea	eax, [eax+edx+10h]
		mov	[ebp-250h], eax

loc_710058E6:				; CODE XREF: sub_71005587+394j
		mov	ecx, [ebp-250h]
		cmp	[ebp-258h], ecx
		jz	loc_71005840
		sub	dword ptr [ebp-250h], 10h
		mov	eax, [ebp-250h]
		mov	dword ptr [ebp-168h], 0
		add	eax, 8
		mov	[esp+0], eax
		call	ds:_ZN11QTextFormatD2Ev
		jmp	short loc_710058E6
; ---------------------------------------------------------------------------

loc_7100591D:				; CODE XREF: sub_71005587+A2j
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-168h], 0
		call	sub_710477B0
		jmp	loc_710056A0
; ---------------------------------------------------------------------------

loc_71005937:				; CODE XREF: sub_71005587+99j
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-168h], 0
		call	sub_71046490
		jmp	loc_710056A0
; ---------------------------------------------------------------------------

loc_71005951:				; CODE XREF: sub_71005587+89j
		lea	eax, [ebp-50h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-168h], 0
		call	ds:_ZN11QTextFormatD2Ev
		jmp	loc_7100568A
; ---------------------------------------------------------------------------

loc_7100596C:				; CODE XREF: sub_71005587+7Bj
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-168h], 0
		call	sub_710477B0
		jmp	loc_710056A0
sub_71005587	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71005990	proc near		; DATA XREF: .rdata:7105DC78o

var_58		= qword	ptr -58h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
var_14		= byte ptr -14h
var_10		= byte ptr -10h
var_C		= byte ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset word_71052D8E
		mov	[ebp+var_28], offset sub_71005B42
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_8]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_710225F0
		fst	[ebp+var_58]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_710059E3
		fchs

loc_710059E3:				; CODE XREF: sub_71005990+4Fj
		fld	ds:dbl_71059050
		fucompp
		fnstsw	ax
		sahf
		jnb	loc_71005B10
		lea	edx, [ebp+var_C]
		mov	[esp], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN12QPainterPathC1Ev
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_48], 4
		sub	eax, 0FFFFFF80h
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZN12QPainterPath7addRectERK6QRectF
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	ds:_ZN19QPainterPathStrokerC1Ev
		fld	[ebp+var_58]
		lea	eax, [ebp+var_10]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	ds:_ZN19QPainterPathStroker8setWidthEd
		lea	edx, [ebp+var_C]
		lea	eax, [ebp+var_14]
		mov	[esp+8], edx
		lea	edx, [ebp+var_10]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK19QPainterPathStroker12createStrokeERK12QPainterPath
		mov	eax, [ebp+arg_8]
		sub	esp, 4
		mov	[ebp+var_48], 2
		mov	[esp], eax
		call	ds:_ZNK8QPainter9transformEv
		lea	edx, [ebp+var_18]
		lea	ecx, [ebp+var_14]
		mov	[esp+8], ecx
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZNK10QTransform3mapERK12QPainterPath
		mov	edx, [ebp+arg_0]
		sub	esp, 4
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		mov	[ebp+var_48], 1
		mov	[esp], edx
		call	ds:_ZNK12QPainterPath12boundingRectEv
		sub	esp, 4
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN12QPainterPathD1Ev
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	ds:_ZN12QPainterPathD1Ev
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 4
		call	ds:_ZN19QPainterPathStrokerD1Ev
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN12QPainterPathD1Ev

loc_71005AFD:				; CODE XREF: sub_71005990+1B0j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_71005B10:				; CODE XREF: sub_71005990+5Ej
		mov	edx, [ebp+arg_8]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], edx
		call	ds:_ZNK8QPainter9transformEv
		mov	edx, [ebp+arg_4]
		sub	edx, 0FFFFFF80h
		mov	[esp+8], edx
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	ds:_ZNK10QTransform7mapRectERK6QRectF
		sub	esp, 4
		jmp	short loc_71005AFD
sub_71005990	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71005B42	proc near		; DATA XREF: sub_71005990+20o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-5Ch], edx
		jz	short loc_71005B70
		cmp	eax, 2
		jz	short loc_71005B83
		cmp	eax, 3
		jz	short loc_71005B96
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN12QPainterPathD1Ev

loc_71005B70:				; CODE XREF: sub_71005B42+Fj
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN12QPainterPathD1Ev

loc_71005B83:				; CODE XREF: sub_71005B42+14j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN19QPainterPathStrokerD1Ev

loc_71005B96:				; CODE XREF: sub_71005B42+19j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN12QPainterPathD1Ev
		mov	eax, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71005B42	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71005BC0	proc near		; DATA XREF: .rdata:7105D618o

var_68		= qword	ptr -68h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_1C		= byte ptr -1Ch
var_18		= byte ptr -18h
var_14		= byte ptr -14h
var_10		= byte ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_710525B0
		mov	[ebp+var_40], offset word_71052D9A
		mov	[ebp+var_38], offset sub_71005DC0
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_8]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_710225F0
		fst	[ebp+var_68]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_71005C16
		fchs

loc_71005C16:				; CODE XREF: sub_71005BC0+52j
		fld	ds:dbl_71059050
		fucompp
		fnstsw	ax
		sahf
		jb	loc_71005CB2
		mov	edx, [ebp+arg_8]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], edx
		call	ds:_ZNK8QPainter9transformEv
		mov	edx, [ebp+arg_4]
		sub	edx, 0FFFFFF80h
		mov	[esp+8], edx
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZNK10QTransform3mapERK9QPolygonF
		mov	eax, [ebp+arg_0]
		lea	edx, [ebp+var_C]
		mov	[ebp+var_58], 5
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK9QPolygonF12boundingRectEv
		mov	eax, [ebp+var_C]
		sub	esp, 4
		test	eax, eax
		jz	short loc_71005CA0
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71005CA0
		mov	eax, [ebp+var_C]
		mov	dword ptr [esp+4], 8
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_71005CA0:				; CODE XREF: sub_71005BC0+B9j
					; sub_71005BC0+C3j ...
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------

loc_71005CB2:				; CODE XREF: sub_71005BC0+61j
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN12QPainterPathC1Ev
		mov	eax, [ebp+arg_4]
		lea	edx, [ebp+var_10]
		mov	[esp], edx
		mov	[ebp+var_58], 4
		sub	eax, 0FFFFFF80h
		mov	[esp+4], eax
		call	ds:_ZN12QPainterPath10addPolygonERK9QPolygonF
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		call	ds:_ZN19QPainterPathStrokerC1Ev
		fld	[ebp+var_68]
		lea	eax, [ebp+var_14]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		mov	[ebp+var_58], 3
		call	ds:_ZN19QPainterPathStroker8setWidthEd
		lea	edx, [ebp+var_10]
		lea	eax, [ebp+var_18]
		mov	[esp+8], edx
		lea	edx, [ebp+var_14]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK19QPainterPathStroker12createStrokeERK12QPainterPath
		mov	eax, [ebp+arg_8]
		sub	esp, 4
		mov	[ebp+var_58], 2
		mov	[esp], eax
		call	ds:_ZNK8QPainter9transformEv
		lea	edx, [ebp+var_1C]
		lea	ecx, [ebp+var_18]
		mov	[esp+8], ecx
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZNK10QTransform3mapERK12QPainterPath
		mov	edx, [ebp+arg_0]
		sub	esp, 4
		lea	eax, [ebp+var_1C]
		mov	[esp+4], eax
		mov	[ebp+var_58], 1
		mov	[esp], edx
		call	ds:_ZNK12QPainterPath12boundingRectEv
		sub	esp, 4
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_58], 2
		call	ds:_ZN12QPainterPathD1Ev
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_58], 3
		call	ds:_ZN12QPainterPathD1Ev
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_58], 4
		call	ds:_ZN19QPainterPathStrokerD1Ev
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN12QPainterPathD1Ev
		jmp	loc_71005CA0
sub_71005BC0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71005DC0	proc near		; DATA XREF: sub_71005BC0+23o
		add	ebp, 8
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-6Ch], edx
		jz	short loc_71005DF5
		cmp	eax, 2
		jz	short loc_71005E08
		cmp	eax, 3
		jz	short loc_71005E1B
		cmp	eax, 4
		xchg	ax, ax
		jz	short loc_71005E40
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	ds:_ZN12QPainterPathD1Ev

loc_71005DF5:				; CODE XREF: sub_71005DC0+Fj
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	ds:_ZN12QPainterPathD1Ev

loc_71005E08:				; CODE XREF: sub_71005DC0+14j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	ds:_ZN19QPainterPathStrokerD1Ev

loc_71005E1B:				; CODE XREF: sub_71005DC0+19j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	ds:_ZN12QPainterPathD1Ev
		mov	eax, [ebp-6Ch]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71005E40:				; CODE XREF: sub_71005DC0+20j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_7104F7B0
		mov	edx, [ebp-6Ch]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_71005DC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71005E70	proc near		; DATA XREF: .rdata:7105DC58o

var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_59		= byte ptr -59h
var_58		= qword	ptr -58h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
var_14		= byte ptr -14h
var_10		= byte ptr -10h
var_C		= byte ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71052DA8
		mov	[ebp+var_28], offset sub_7100602B
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_8]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_710225F0
		fst	[ebp+var_58]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_71005EC6
		fchs

loc_71005EC6:				; CODE XREF: sub_71005E70+52j
		fld	ds:dbl_71059050
		fucompp
		fnstsw	ax
		mov	[ebp+var_59], 0
		sahf
		jb	short loc_71005F50
		mov	edx, [ebp+arg_4]
		mov	ecx, [ebp+arg_8]
		mov	[ebp+var_48], 4
		sub	edx, 0FFFFFF80h
		mov	[ebp+var_64], edx
		mov	[esp], ecx
		call	ds:_ZNK8QPainter9transformEv
		mov	ecx, [ebp+var_64]
		lea	edx, [ebp+var_C]
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[esp+8], ecx
		call	ds:_ZNK10QTransform3mapERK12QPainterPath
		sub	esp, 4
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_59], 1
		mov	[esp], eax
		call	ds:_ZNK12QPainterPath12boundingRectEv
		sub	esp, 4
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN12QPainterPathD1Ev

loc_71005F3A:				; CODE XREF: sub_71005E70+1B6j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_71005F50:				; CODE XREF: sub_71005E70+65j
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 4
		sub	edx, 0FFFFFF80h
		mov	[ebp+var_60], edx
		call	ds:_ZN19QPainterPathStrokerC1Ev
		fld	[ebp+var_58]
		lea	eax, [ebp+var_10]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	ds:_ZN19QPainterPathStroker8setWidthEd
		mov	edx, [ebp+var_60]
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[esp+8], edx
		lea	edx, [ebp+var_10]
		mov	[esp+4], edx
		call	ds:_ZNK19QPainterPathStroker12createStrokeERK12QPainterPath
		mov	ecx, [ebp+arg_8]
		sub	esp, 4
		mov	[ebp+var_48], 2
		mov	[esp], ecx
		call	ds:_ZNK8QPainter9transformEv
		lea	edx, [ebp+var_18]
		lea	ecx, [ebp+var_14]
		mov	[esp+8], ecx
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZNK10QTransform3mapERK12QPainterPath
		sub	esp, 4
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	ds:_ZNK12QPainterPath12boundingRectEv
		sub	esp, 4
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN12QPainterPathD1Ev
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	ds:_ZN12QPainterPathD1Ev
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 4
		call	ds:_ZN19QPainterPathStrokerD1Ev
		jmp	loc_71005F3A
sub_71005E70	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7100602B	proc near		; DATA XREF: sub_71005E70+23o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-6Ch], edx
		jz	short loc_71006059
		cmp	eax, 2
		jz	short loc_7100606C
		cmp	eax, 3
		jz	short loc_7100607F
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN12QPainterPathD1Ev

loc_71006059:				; CODE XREF: sub_7100602B+Fj
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN12QPainterPathD1Ev

loc_7100606C:				; CODE XREF: sub_7100602B+14j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN19QPainterPathStrokerD1Ev

loc_7100607F:				; CODE XREF: sub_7100602B+19j
		mov	ecx, [ebp-6Ch]
		cmp	byte ptr [ebp-59h], 0
		mov	[ebp-68h], ecx
		jz	short loc_7100609E
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN12QPainterPathD1Ev

loc_7100609E:				; CODE XREF: sub_7100602B+5Ej
		mov	eax, [ebp-68h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7100602B	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710060B0	proc near		; DATA XREF: .rdata:7105D638o

var_68		= qword	ptr -68h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_1C		= byte ptr -1Ch
var_18		= byte ptr -18h
var_14		= byte ptr -14h
var_10		= byte ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_710525B0
		mov	[ebp+var_40], offset dword_71052DB4
		mov	[ebp+var_38], offset sub_710062B0
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_8]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_710225F0
		fst	[ebp+var_68]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_71006106
		fchs

loc_71006106:				; CODE XREF: sub_710060B0+52j
		fld	ds:dbl_71059050
		fucompp
		fnstsw	ax
		sahf
		jb	loc_710061A2
		mov	edx, [ebp+arg_8]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], edx
		call	ds:_ZNK8QPainter9transformEv
		mov	edx, [ebp+arg_4]
		sub	edx, 0FFFFFF80h
		mov	[esp+8], edx
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZNK10QTransform3mapERK9QPolygonF
		mov	eax, [ebp+arg_0]
		lea	edx, [ebp+var_C]
		mov	[ebp+var_58], 5
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK9QPolygonF12boundingRectEv
		mov	eax, [ebp+var_C]
		sub	esp, 4
		test	eax, eax
		jz	short loc_71006190
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71006190
		mov	eax, [ebp+var_C]
		mov	dword ptr [esp+4], 8
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_71006190:				; CODE XREF: sub_710060B0+B9j
					; sub_710060B0+C3j ...
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------

loc_710061A2:				; CODE XREF: sub_710060B0+61j
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN12QPainterPathC1Ev
		mov	eax, [ebp+arg_4]
		lea	edx, [ebp+var_10]
		mov	[esp], edx
		mov	[ebp+var_58], 4
		sub	eax, 0FFFFFF80h
		mov	[esp+4], eax
		call	ds:_ZN12QPainterPath10addPolygonERK9QPolygonF
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		call	ds:_ZN19QPainterPathStrokerC1Ev
		fld	[ebp+var_68]
		lea	eax, [ebp+var_14]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		mov	[ebp+var_58], 3
		call	ds:_ZN19QPainterPathStroker8setWidthEd
		lea	edx, [ebp+var_10]
		lea	eax, [ebp+var_18]
		mov	[esp+8], edx
		lea	edx, [ebp+var_14]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK19QPainterPathStroker12createStrokeERK12QPainterPath
		mov	eax, [ebp+arg_8]
		sub	esp, 4
		mov	[ebp+var_58], 2
		mov	[esp], eax
		call	ds:_ZNK8QPainter9transformEv
		lea	edx, [ebp+var_1C]
		lea	ecx, [ebp+var_18]
		mov	[esp+8], ecx
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZNK10QTransform3mapERK12QPainterPath
		mov	edx, [ebp+arg_0]
		sub	esp, 4
		lea	eax, [ebp+var_1C]
		mov	[esp+4], eax
		mov	[ebp+var_58], 1
		mov	[esp], edx
		call	ds:_ZNK12QPainterPath12boundingRectEv
		sub	esp, 4
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_58], 2
		call	ds:_ZN12QPainterPathD1Ev
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_58], 3
		call	ds:_ZN12QPainterPathD1Ev
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_58], 4
		call	ds:_ZN19QPainterPathStrokerD1Ev
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN12QPainterPathD1Ev
		jmp	loc_71006190
sub_710060B0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710062B0	proc near		; DATA XREF: sub_710060B0+23o
		add	ebp, 8
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-6Ch], edx
		jz	short loc_710062E5
		cmp	eax, 2
		jz	short loc_710062F8
		cmp	eax, 3
		jz	short loc_7100630B
		cmp	eax, 4
		xchg	ax, ax
		jz	short loc_71006330
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	ds:_ZN12QPainterPathD1Ev

loc_710062E5:				; CODE XREF: sub_710062B0+Fj
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	ds:_ZN12QPainterPathD1Ev

loc_710062F8:				; CODE XREF: sub_710062B0+14j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	ds:_ZN19QPainterPathStrokerD1Ev

loc_7100630B:				; CODE XREF: sub_710062B0+19j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	ds:_ZN12QPainterPathD1Ev
		mov	eax, [ebp-6Ch]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71006330:				; CODE XREF: sub_710062B0+20j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_7104F7B0
		mov	edx, [ebp-6Ch]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_710062B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71006360	proc near		; DATA XREF: .rdata:7105D498o
					; .rdata:7105D5F8o

var_69		= byte ptr -69h
var_68		= qword	ptr -68h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_1C		= byte ptr -1Ch
var_18		= byte ptr -18h
var_14		= byte ptr -14h
var_10		= byte ptr -10h
var_C		= byte ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_710525B0
		mov	[ebp+var_40], offset word_71052DC2
		mov	[ebp+var_38], offset sub_71006545
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		lea	edx, [ebp+var_C]
		mov	[esp], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN12QPainterPathC1Ev
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_58], 5
		sub	eax, 0FFFFFF80h
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZN12QPainterPath10addEllipseERK6QRectF
		mov	edx, [ebp+arg_8]
		mov	[esp], edx
		call	sub_710225F0
		fst	[ebp+var_68]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_710063DF
		fchs

loc_710063DF:				; CODE XREF: sub_71006360+7Bj
		fld	ds:dbl_71059050
		fucompp
		fnstsw	ax
		mov	[ebp+var_69], 0
		sahf
		jb	loc_71006473
		mov	edx, [ebp+arg_8]
		mov	[ebp+var_58], 4
		mov	[esp], edx
		call	ds:_ZNK8QPainter9transformEv
		lea	edx, [ebp+var_10]
		lea	ecx, [ebp+var_C]
		mov	[esp+8], ecx
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZNK10QTransform3mapERK12QPainterPath
		sub	esp, 4
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_69], 1
		mov	[esp], eax
		call	ds:_ZNK12QPainterPath12boundingRectEv
		sub	esp, 4
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_58], 5
		call	ds:_ZN12QPainterPathD1Ev

loc_7100644E:				; CODE XREF: sub_71006360+1E0j
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN12QPainterPathD1Ev
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------

loc_71006473:				; CODE XREF: sub_71006360+8Ej
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_58], 4
		call	ds:_ZN19QPainterPathStrokerC1Ev
		fld	[ebp+var_68]
		lea	eax, [ebp+var_14]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		mov	[ebp+var_58], 3
		call	ds:_ZN19QPainterPathStroker8setWidthEd
		lea	edx, [ebp+var_C]
		lea	eax, [ebp+var_18]
		mov	[esp+8], edx
		lea	edx, [ebp+var_14]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK19QPainterPathStroker12createStrokeERK12QPainterPath
		mov	eax, [ebp+arg_8]
		sub	esp, 4
		mov	[ebp+var_58], 2
		mov	[esp], eax
		call	ds:_ZNK8QPainter9transformEv
		lea	edx, [ebp+var_1C]
		lea	ecx, [ebp+var_18]
		mov	[esp+8], ecx
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZNK10QTransform3mapERK12QPainterPath
		mov	edx, [ebp+arg_0]
		sub	esp, 4
		lea	eax, [ebp+var_1C]
		mov	[esp+4], eax
		mov	[ebp+var_58], 1
		mov	[esp], edx
		call	ds:_ZNK12QPainterPath12boundingRectEv
		sub	esp, 4
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_58], 2
		call	ds:_ZN12QPainterPathD1Ev
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_58], 3
		call	ds:_ZN12QPainterPathD1Ev
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_58], 4
		call	ds:_ZN19QPainterPathStrokerD1Ev
		jmp	loc_7100644E
sub_71006360	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71006545	proc near		; DATA XREF: sub_71006360+23o
		add	ebp, 8
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-74h], edx
		jz	short loc_71006578
		cmp	eax, 2
		jz	short loc_7100658B
		cmp	eax, 3
		jz	short loc_7100659E
		cmp	eax, 4
		jz	short loc_710065C3
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	ds:_ZN12QPainterPathD1Ev

loc_71006578:				; CODE XREF: sub_71006545+Fj
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	ds:_ZN12QPainterPathD1Ev

loc_7100658B:				; CODE XREF: sub_71006545+14j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	ds:_ZN19QPainterPathStrokerD1Ev

loc_7100659E:				; CODE XREF: sub_71006545+19j
		mov	eax, [ebp-74h]
		cmp	byte ptr [ebp-69h], 0
		mov	[ebp-70h], eax
		jz	short loc_710065BD
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	ds:_ZN12QPainterPathD1Ev

loc_710065BD:				; CODE XREF: sub_71006545+63j
		mov	edx, [ebp-70h]
		mov	[ebp-74h], edx

loc_710065C3:				; CODE XREF: sub_71006545+1Ej
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	ds:_ZN12QPainterPathD1Ev
		mov	eax, [ebp-74h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71006545	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710065F0	proc near		; DATA XREF: .rdata:7105DC18o

var_D0		= qword	ptr -0D0h
var_C8		= qword	ptr -0C8h
var_C0		= qword	ptr -0C0h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= byte ptr -0ACh
var_A8		= dword	ptr -0A8h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= qword	ptr -48h
var_40		= qword	ptr -40h
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= qword	ptr -28h
var_20		= qword	ptr -20h
var_18		= byte ptr -18h
var_14		= byte ptr -14h
var_10		= byte ptr -10h
var_C		= byte ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0E8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_8C], eax
		lea	eax, [ebp+var_AC]
		mov	[esp], eax
		mov	[ebp+var_94], offset sub_710525B0
		mov	[ebp+var_90], offset dword_71052DD0
		mov	[ebp+var_88], offset sub_7100697B
		mov	[ebp+var_84], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_8]
		mov	[ebp+var_A8], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_710225F0
		fst	[ebp+var_C0]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_7100665E
		fchs

loc_7100665E:				; CODE XREF: sub_710065F0+6Aj
		fld	ds:dbl_71059050
		fucompp
		fnstsw	ax
		sahf
		jb	loc_710067D3
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+80h]
		mov	[ebp+var_38], eax
		mov	eax, [edx+84h]
		mov	[ebp+var_34], eax
		mov	eax, [edx+88h]
		mov	[ebp+var_30], eax
		mov	eax, [edx+8Ch]
		mov	edx, ds:_ZNK8QPainter9transformEv
		mov	[ebp+var_A8], 0FFFFFFFFh
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_B0], edx
		mov	[esp], eax
		call	edx ; _ZNK8QPainter9transformEv
		lea	ecx, [ebp+var_38]
		lea	edx, [ebp+var_28]
		mov	[esp+8], ecx
		mov	[esp], edx
		mov	[esp+4], eax
		mov	eax, ds:_ZNK10QTransform3mapERK7QPointF
		mov	[ebp+var_B4], eax
		call	eax ; _ZNK10QTransform3mapERK7QPointF
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+90h]
		fld	[ebp+var_20]
		sub	esp, 4
		fstp	[ebp+var_C8]
		mov	[ebp+var_58], eax
		mov	eax, [edx+94h]
		fld	[ebp+var_28]
		fstp	[ebp+var_D0]
		mov	[ebp+var_54], eax
		mov	eax, [edx+98h]
		mov	[ebp+var_50], eax
		mov	eax, [edx+9Ch]
		mov	[ebp+var_4C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp], eax
		call	[ebp+var_B0]
		lea	edx, [ebp+var_48]
		lea	ecx, [ebp+var_58]
		mov	[esp], edx
		mov	[esp+8], ecx
		mov	[esp+4], eax
		call	[ebp+var_B4]
		fld	[ebp+var_40]
		sub	esp, 4
		fld	[ebp+var_48]
		fld	[ebp+var_D0]
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		sahf
		fld	st
		setnbe	dl
		test	dl, dl
		jz	short loc_71006756
		fstp	st
		fxch	st(1)
		jmp	short loc_7100675A
; ---------------------------------------------------------------------------

loc_71006756:				; CODE XREF: sub_710065F0+15Ej
		fstp	st(2)
		fxch	st(1)

loc_7100675A:				; CODE XREF: sub_710065F0+164j
		fld	[ebp+var_C8]
		fxch	st(3)
		fucom	st(3)
		fnstsw	ax
		fstp	st(3)
		sahf
		fld	st(2)
		setnbe	al
		test	al, al
		jz	short loc_7100677A
		fstp	st
		fld	[ebp+var_C8]

loc_7100677A:				; CODE XREF: sub_710065F0+180j
		test	dl, dl
		jz	loc_71006960
		test	al, al
		jnz	short loc_710067A0
		fstp	st(3)
		fxch	st(1)
		fxch	st(2)
		jmp	short loc_71006792
; ---------------------------------------------------------------------------
		align 10h

loc_71006790:				; CODE XREF: sub_710065F0+37Cj
		fstp	st(3)

loc_71006792:				; CODE XREF: sub_710065F0+19Cj
		fld	[ebp+var_C8]
		fxch	st(2)
		jmp	short loc_710067A8
; ---------------------------------------------------------------------------
		align 10h

loc_710067A0:				; CODE XREF: sub_710065F0+194j
		fxch	st(1)
		fxch	st(2)
		fxch	st(3)
		fxch	st(2)

loc_710067A8:				; CODE XREF: sub_710065F0+1AAj
					; sub_710065F0+386j
		mov	eax, [ebp+arg_0]
		fst	qword ptr [eax]
		fxch	st(1)
		fst	qword ptr [eax+8]
		fxch	st(3)
		fsubrp	st(1), st
		fstp	qword ptr [eax+10h]
		fsubrp	st(1), st
		fstp	qword ptr [eax+18h]

loc_710067BE:				; CODE XREF: sub_710065F0+368j
		lea	eax, [ebp+var_AC]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------

loc_710067D3:				; CODE XREF: sub_710065F0+79j
		lea	edx, [ebp+var_C]
		mov	[esp], edx
		mov	[ebp+var_A8], 0FFFFFFFFh
		call	ds:_ZN12QPainterPathC1Ev
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+80h]
		mov	[ebp+var_68], eax
		mov	eax, [edx+84h]
		mov	[ebp+var_64], eax
		mov	eax, [edx+88h]
		mov	[ebp+var_60], eax
		mov	eax, [edx+8Ch]
		mov	[ebp+var_A8], 4
		mov	[ebp+var_5C], eax
		lea	eax, [ebp+var_68]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZN12QPainterPath6moveToERK7QPointF
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+90h]
		mov	[ebp+var_78], eax
		mov	eax, [edx+94h]
		mov	[ebp+var_74], eax
		mov	eax, [edx+98h]
		mov	[ebp+var_70], eax
		mov	eax, [edx+9Ch]
		mov	[ebp+var_6C], eax
		lea	eax, [ebp+var_78]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZN12QPainterPath6lineToERK7QPointF
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	ds:_ZN19QPainterPathStrokerC1Ev
		fld	[ebp+var_C0]
		lea	eax, [ebp+var_10]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		mov	[ebp+var_A8], 3
		call	ds:_ZN19QPainterPathStroker8setWidthEd
		lea	edx, [ebp+var_C]
		lea	eax, [ebp+var_14]
		mov	[esp+8], edx
		lea	edx, [ebp+var_10]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK19QPainterPathStroker12createStrokeERK12QPainterPath
		mov	eax, [ebp+arg_8]
		sub	esp, 4
		mov	[ebp+var_A8], 2
		mov	[esp], eax
		call	ds:_ZNK8QPainter9transformEv
		lea	edx, [ebp+var_18]
		lea	ecx, [ebp+var_14]
		mov	[esp+8], ecx
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZNK10QTransform3mapERK12QPainterPath
		mov	edx, [ebp+arg_0]
		sub	esp, 4
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		mov	[ebp+var_A8], 1
		mov	[esp], edx
		call	ds:_ZNK12QPainterPath12boundingRectEv
		sub	esp, 4
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_A8], 2
		call	ds:_ZN12QPainterPathD1Ev
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_A8], 3
		call	ds:_ZN12QPainterPathD1Ev
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_A8], 4
		call	ds:_ZN19QPainterPathStrokerD1Ev
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_A8], 0FFFFFFFFh
		call	ds:_ZN12QPainterPathD1Ev
		jmp	loc_710067BE
; ---------------------------------------------------------------------------
		align 10h

loc_71006960:				; CODE XREF: sub_710065F0+18Cj
		fstp	st(2)
		fxch	st(1)
		test	al, al
		fld	[ebp+var_D0]
		jz	loc_71006790
		fxch	st(3)
		fxch	st(2)
		jmp	loc_710067A8
sub_710065F0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7100697B	proc near		; DATA XREF: sub_710065F0+2Fo
		add	ebp, 8
		mov	eax, [ebp-0A8h]
		mov	edx, [ebp-0A4h]
		cmp	eax, 1
		mov	[ebp-0D4h], edx
		jz	short loc_710069B5
		cmp	eax, 2
		jz	short loc_710069CB
		cmp	eax, 3
		jz	short loc_710069E1
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	ds:_ZN12QPainterPathD1Ev

loc_710069B5:				; CODE XREF: sub_7100697B+18j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	ds:_ZN12QPainterPathD1Ev

loc_710069CB:				; CODE XREF: sub_7100697B+1Dj
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	ds:_ZN19QPainterPathStrokerD1Ev

loc_710069E1:				; CODE XREF: sub_7100697B+22j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	ds:_ZN12QPainterPathD1Ev
		mov	eax, [ebp-0D4h]
		mov	dword ptr [ebp-0A8h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7100697B	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71006A10	proc near		; CODE XREF: sub_71008080+112p
					; sub_71008080+120p ...
		push	ebx
		movzx	edx, byte ptr [eax]
		lea	ecx, [edx-30h]
		movsx	ebx, dl
		cmp	cl, 9
		ja	short loc_71006A50
		lea	ecx, [ebx-30h]
		shl	ecx, 4

loc_71006A25:				; CODE XREF: sub_71006A10+6Fj
					; sub_71006A10+77j
		movzx	eax, byte ptr [eax+1]
		lea	edx, [eax-30h]
		movsx	ebx, al
		cmp	dl, 9
		jbe	short loc_71006A6D

loc_71006A34:				; CODE XREF: sub_71006A10+5Bj
		lea	edx, [eax-61h]
		cmp	dl, 5
		jbe	short loc_71006A90
		lea	edx, [eax-41h]
		mov	eax, 0FFFFFFFFh
		cmp	dl, 5
		ja	short loc_71006A4E
		lea	eax, [ebx-37h]
		or	eax, ecx

loc_71006A4E:				; CODE XREF: sub_71006A10+37j
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_71006A50:				; CODE XREF: sub_71006A10+Dj
		lea	ecx, [edx-61h]
		cmp	cl, 5
		ja	short loc_71006A74
		movzx	eax, byte ptr [eax+1]
		lea	ecx, [ebx-57h]
		shl	ecx, 4
		lea	edx, [eax-30h]
		movsx	ebx, al
		cmp	dl, 9
		ja	short loc_71006A34

loc_71006A6D:				; CODE XREF: sub_71006A10+22j
		lea	eax, [ebx-30h]
		or	eax, ecx
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_71006A74:				; CODE XREF: sub_71006A10+46j
		sub	edx, 41h
		mov	ecx, 0FFFFFFF0h
		cmp	dl, 5
		ja	short loc_71006A25
		lea	ecx, [ebx-37h]
		shl	ecx, 4
		jmp	short loc_71006A25
; ---------------------------------------------------------------------------
		align 10h

loc_71006A90:				; CODE XREF: sub_71006A10+2Aj
		lea	eax, [ebx-57h]
		or	eax, ecx
		pop	ebx
		retn
sub_71006A10	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_71006AA0(double)
sub_71006AA0	proc near		; CODE XREF: sub_7100C470+248p
					; sub_7100C470+273p ...

arg_0		= qword	ptr  4

		cmp	edx, 4
		fld	[esp+arg_0]
		jz	short loc_71006AD0
		jle	short loc_71006AB7
		cmp	edx, 5
		jz	short loc_71006AD7
		cmp	edx, 6
		jz	short loc_71006AC3

locret_71006AB5:			; CODE XREF: sub_71006AA0+1Aj
		rep retn
; ---------------------------------------------------------------------------

loc_71006AB7:				; CODE XREF: sub_71006AA0+9j
		cmp	edx, 3
		jnz	short locret_71006AB5
		fmul	ds:flt_71059D28
		retn
; ---------------------------------------------------------------------------

loc_71006AC3:				; CODE XREF: sub_71006AA0+13j
		fmul	ds:flt_71059D40
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71006AD0:				; CODE XREF: sub_71006AA0+7j
		fmul	ds:dbl_71059D30
		retn
; ---------------------------------------------------------------------------

loc_71006AD7:				; CODE XREF: sub_71006AA0+Ej
		fmul	ds:dbl_71059D38
		retn
sub_71006AA0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71006AE0	proc near		; DATA XREF: sub_7101E100+15ADo
		mov	eax, 1
		retn
sub_71006AE0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71006AF0	proc near		; DATA XREF: sub_7101E100+15ECo
		mov	eax, 1
		retn
sub_71006AF0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71006B00	proc near		; DATA XREF: sub_7101E100+166Ao
		mov	eax, 1
		retn
sub_71006B00	endp

; ---------------------------------------------------------------------------
		align 10h

loc_71006B10:				; DATA XREF: sub_7101E100+106Fo
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71006B20:				; DATA XREF: sub_7101E100+16E8o
		mov	eax, 1
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71006B30:				; DATA XREF: sub_7101E100+172Co
		mov	eax, 1
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71006B40:				; DATA XREF: sub_7101E100+176Bo
		mov	eax, 1
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71006B50:				; DATA XREF: sub_7101E100+1D44o
		mov	eax, 1
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71006B60:				; DATA XREF: sub_7101E100+1D7Eo
		mov	eax, 1
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71006B70:				; DATA XREF: sub_7101E100+1596o
		mov	eax, 1
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71006B80:				; DATA XREF: sub_7101E100+1513o
		mov	eax, 1
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71006B90:				; DATA XREF: sub_7101E100+1552o
		mov	eax, 1
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71006BA0:				; DATA XREF: sub_7101E100+1490o
		mov	eax, 1
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71006BB0:				; DATA XREF: sub_7101E100+14CFo
		mov	eax, 1
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71006BC0:				; DATA XREF: sub_7101E100+144Co
		mov	eax, 1
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71006BD0:				; DATA XREF: sub_7101E100+1382o
		mov	eax, 1
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71006BE0:				; DATA XREF: sub_7101E100+13C1o
		mov	eax, 1
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71006BF0:				; DATA XREF: sub_7101E100+1336o
		mov	eax, 1
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71006C00:				; DATA XREF: sub_7101E100+CEEo
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71006C10	proc near		; CODE XREF: _ZN16QSvgTinyDocument4loadEP16QXmlStreamReader+61p
					; _ZN16QSvgTinyDocument4loadEP16QXmlStreamReader+B6p ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax]
		retn
sub_71006C10	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		mov	eax, [eax+18h]
		retn
; ---------------------------------------------------------------------------
		align 10h
		mov	edx, [esp+8]
		mov	eax, [esp+4]
		mov	[eax+18h], edx
		retn
; ---------------------------------------------------------------------------
		align 10h
		mov	edx, [esp+8]
		mov	eax, [esp+4]
		mov	[eax+24h], dl
		retn
; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		movzx	eax, byte ptr [eax+24h]
		retn
; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		mov	eax, [eax+28h]
		retn
; ---------------------------------------------------------------------------
		align 10h
		mov	edx, [esp+4]
		mov	eax, [esp+0Ch]
		mov	ecx, [edx+2Ch]
		cmp	eax, ecx
		jge	short loc_71006C81
		mov	eax, ecx

loc_71006C81:				; CODE XREF: .text:71006C7Dj
		mov	[edx+2Ch], eax
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71006C90	proc near		; CODE XREF: _ZN16QSvgTinyDocument4loadEP16QXmlStreamReader+C7p
					; _ZN16QSvgTinyDocument4loadERK10QByteArray+187p ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+2Ch]
		retn
sub_71006C90	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71006CA0	proc near		; CODE XREF: sub_7100D500+323p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 28h
		mov	eax, [esp+2Ch+arg_4]
		mov	ebx, [esp+2Ch+arg_0]
		mov	eax, [eax+1Ch]
		mov	edx, [eax+8]
		test	edx, edx
		jz	short loc_71006CE0
		shl	edx, 4
		mov	ecx, [edx+eax]
		mov	[ebx], ecx
		mov	ecx, [edx+eax+4]
		mov	[ebx+4], ecx
		mov	ecx, [edx+eax+8]
		mov	[ebx+8], ecx
		movzx	eax, word ptr [edx+eax+0Ch]
		mov	[ebx+0Ch], ax
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_71006CE0:				; CODE XREF: sub_71006CA0+14j
		mov	[esp+2Ch+var_2C], ebx
		mov	[esp+2Ch+var_1C], 0FFh
		mov	[esp+2Ch+var_20], 0
		mov	[esp+2Ch+var_24], 0
		mov	[esp+2Ch+var_28], 0
		call	ds:_ZN6QColor6setRgbEiiii
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		retn	4
sub_71006CA0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71006D20	proc near		; DATA XREF: sub_7101E100+12F7o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [ebx]
		mov	[esp+1Ch+var_1C], ebx
		call	dword ptr [eax+0Ch]
		mov	edx, eax
		xor	eax, eax
		cmp	edx, 0Fh
		jz	short loc_71006D40
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71006D40:				; CODE XREF: sub_71006D20+17j
		add	ebx, 90h
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], offset dword_71059044
		call	sub_7104E990
		mov	eax, 1
		add	esp, 18h
		pop	ebx
		retn
sub_71006D20	endp


; =============== S U B	R O U T	I N E =======================================


sub_71006D60	proc near		; CODE XREF: sub_7100AAB0+F7p
					; sub_7100E900+208p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 2Ch
		mov	[esp+2Ch+var_10], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_C], esi
		mov	[esp+2Ch+var_8], edi
		mov	[esp+2Ch+var_4], ebp
		mov	eax, [ebx+20h]
		mov	edx, [eax+8]
		test	edx, edx
		jnz	short loc_71006D95

loc_71006D81:				; CODE XREF: sub_71006D60+86j
					; sub_71006D60+169j
		mov	ebx, [esp+2Ch+var_10]
		mov	esi, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_8]
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_71006D95:				; CODE XREF: sub_71006D60+1Fj
		mov	ecx, [eax]
		lea	esi, [ebx+20h]
		cmp	ecx, 1
		jz	short loc_71006DB5
		mov	eax, [eax+4]
		mov	[esp+2Ch+var_28], edx
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_24], eax
		call	sub_7104F0C0
		mov	eax, [ebx+20h]

loc_71006DB5:				; CODE XREF: sub_71006D60+3Dj
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_71006DD2
		mov	edx, [eax+4]
		mov	[esp+2Ch+var_24], edx
		mov	eax, [eax+8]
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_28], eax
		call	sub_7104F0C0

loc_71006DD2:				; CODE XREF: sub_71006D60+5Aj
		mov	eax, [ebx+20h]
		mov	ecx, [eax+8]
		add	ecx, 3
		mov	edx, [eax+ecx*4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+ecx*4], edx
		jnz	short loc_71006D81
		mov	edx, [ebx+1Ch]
		lea	ebp, [ebx+1Ch]
		mov	eax, [edx]
		cmp	eax, 1
		jz	short loc_71006E0E
		mov	eax, [edx+4]
		mov	[esp+2Ch+var_24], eax
		mov	eax, [edx+8]
		mov	[esp+2Ch+var_2C], ebp
		mov	[esp+2Ch+var_28], eax
		call	sub_71048C10
		mov	edx, [ebx+1Ch]

loc_71006E0E:				; CODE XREF: sub_71006D60+93j
		mov	edi, [edx+8]
		mov	eax, [edx+4]
		sub	edi, 1
		cmp	edi, eax
		jg	short loc_71006E29
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_71006E4A
		mov	edx, eax
		sar	edx, 1
		cmp	edi, edx
		jge	short loc_71006E4A

loc_71006E29:				; CODE XREF: sub_71006D60+B9j
		mov	[esp+2Ch+var_20], 1
		mov	[esp+2Ch+var_24], 10h
		mov	[esp+2Ch+var_28], edi
		mov	[esp+2Ch+var_2C], 20h
		call	ds:_ZN11QVectorData4growEiiib

loc_71006E4A:				; CODE XREF: sub_71006D60+BFj
					; sub_71006D60+C7j
		mov	[esp+2Ch+var_24], eax
		mov	[esp+2Ch+var_28], edi
		mov	[esp+2Ch+var_2C], ebp
		call	sub_71048C10
		mov	edx, [ebx+20h]
		mov	eax, [edx]
		cmp	eax, 1
		jz	short loc_71006E7D
		mov	eax, [edx+4]
		mov	[esp+2Ch+var_24], eax
		mov	eax, [edx+8]
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_28], eax
		call	sub_7104F0C0
		mov	edx, [ebx+20h]

loc_71006E7D:				; CODE XREF: sub_71006D60+102j
		mov	ebx, [edx+8]
		mov	eax, [edx+4]
		sub	ebx, 1
		cmp	ebx, eax
		jg	short loc_71006E98
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_71006EB9
		mov	edx, eax
		sar	edx, 1
		cmp	ebx, edx
		jge	short loc_71006EB9

loc_71006E98:				; CODE XREF: sub_71006D60+128j
		mov	[esp+2Ch+var_20], 0
		mov	[esp+2Ch+var_24], 4
		mov	[esp+2Ch+var_28], ebx
		mov	[esp+2Ch+var_2C], 14h
		call	ds:_ZN11QVectorData4growEiiib

loc_71006EB9:				; CODE XREF: sub_71006D60+12Ej
					; sub_71006D60+136j
		mov	[esp+2Ch+var_24], eax
		mov	[esp+2Ch+var_28], ebx
		mov	[esp+2Ch+var_2C], esi
		call	sub_7104F0C0
		jmp	loc_71006D81
sub_71006D60	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71006ED0	proc near		; CODE XREF: sub_71009C20+35p
					; sub_7100E900+21Ap ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= word ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	edx, [esp+2Ch+arg_4]
		mov	eax, [ebx+1Ch]
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	loc_71006FE0
		mov	ecx, [eax+8]

loc_71006EEE:				; CODE XREF: sub_71006ED0+116j
		mov	eax, [edx+4]
		add	ecx, 1
		mov	esi, [edx]
		mov	[esp+2Ch+var_18], eax
		mov	eax, [edx+8]
		mov	[esp+2Ch+var_14], eax
		movzx	eax, word ptr [edx+0Ch]
		mov	[esp+2Ch+var_28], ecx
		mov	[esp+2Ch+var_20], 1
		mov	[esp+2Ch+var_24], 10h
		mov	[esp+2Ch+var_10], ax
		mov	[esp+2Ch+var_2C], 20h
		call	ds:_ZN11QVectorData4growEiiib
		mov	[esp+2Ch+var_24], eax
		mov	eax, [ebx+1Ch]
		mov	eax, [eax+8]
		mov	[esp+2Ch+var_28], eax
		lea	eax, [ebx+1Ch]
		mov	[esp+2Ch+var_2C], eax
		call	sub_71048C10
		mov	edx, [ebx+1Ch]
		mov	ecx, [esp+2Ch+var_18]
		mov	eax, [edx+8]
		add	eax, 1
		shl	eax, 4
		mov	[eax+edx+4], ecx
		mov	ecx, [esp+2Ch+var_14]
		mov	[eax+edx], esi
		mov	[eax+edx+8], ecx
		movzx	ecx, [esp+2Ch+var_10]
		mov	[eax+edx+0Ch], cx
		mov	eax, [ebx+1Ch]
		add	dword ptr [eax+8], 1
		mov	eax, [ebx+20h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_71007020

loc_71006F82:				; CODE XREF: sub_71006ED0+14Aj
		mov	edx, [eax+8]

loc_71006F85:				; CODE XREF: sub_71006ED0+156j
		add	edx, 1
		mov	[esp+2Ch+var_28], edx
		mov	[esp+2Ch+var_20], 0
		mov	[esp+2Ch+var_24], 4
		mov	[esp+2Ch+var_2C], 14h
		call	ds:_ZN11QVectorData4growEiiib
		mov	[esp+2Ch+var_24], eax
		mov	eax, [ebx+20h]
		mov	eax, [eax+8]
		mov	[esp+2Ch+var_28], eax
		lea	eax, [ebx+20h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_7104F0C0
		mov	eax, [ebx+20h]
		mov	edx, [eax+8]
		mov	dword ptr [eax+edx*4+10h], 1
		mov	eax, [ebx+20h]
		add	dword ptr [eax+8], 1
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71006FE0:				; CODE XREF: sub_71006ED0+15j
		mov	ecx, [eax+8]
		cmp	ecx, [eax+4]
		jge	loc_71006EEE
		mov	esi, [edx]
		add	ecx, 1
		shl	ecx, 4
		mov	[ecx+eax], esi
		mov	esi, [edx+4]
		mov	[ecx+eax+4], esi
		mov	esi, [edx+8]
		mov	[ecx+eax+8], esi
		movzx	edx, word ptr [edx+0Ch]
		mov	[ecx+eax+0Ch], dx
		add	dword ptr [eax+8], 1
		mov	eax, [ebx+20h]
		mov	edx, [eax]
		cmp	edx, 1
		jnz	loc_71006F82

loc_71007020:				; CODE XREF: sub_71006ED0+ACj
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jge	loc_71006F85
		mov	dword ptr [eax+edx*4+10h], 1
		add	dword ptr [eax+8], 1
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
sub_71006ED0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71007040	proc near		; DATA XREF: sub_7101E100+932o

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_71052E5A
		mov	[ebp+var_18], offset sub_710070AE
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 98h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_710517F0
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+4], eax
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_710246E0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_40]
		leave
		retn
sub_71007040	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710070AE	proc near		; DATA XREF: sub_71007040+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	[ebp-44h], eax
		mov	eax, [ebp-40h]
		mov	[esp+0], eax
		call	sub_710517D0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_710070AE	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710070E0	proc near		; CODE XREF: sub_71007460+13p
					; sub_71007490+21p ...

var_14C		= dword	ptr -14Ch
var_148		= dword	ptr -148h
var_144		= dword	ptr -144h
var_134		= dword	ptr -134h
var_130		= dword	ptr -130h
var_11D		= byte ptr -11Dh
var_11C		= byte ptr -11Ch
var_1D		= byte ptr -1Dh

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 13Ch
		mov	edx, [eax]
		movzx	esi, word ptr [edx]
		cmp	si, 2Dh
		jz	loc_71007390
		xor	ebx, ebx
		cmp	si, 2Bh
		jz	loc_710073BC

loc_71007105:				; CODE XREF: sub_710070E0+2C5j
					; sub_710070E0+2E7j
		movzx	ecx, si
		mov	edi, ecx
		sar	edi, 4
		cmp	edi, 3
		jz	loc_7100732E

loc_71007116:				; CODE XREF: sub_710070E0+25Ej
					; sub_710070E0+287j ...
		cmp	si, 2Eh
		mov	ecx, edx
		jz	loc_7100730E

loc_71007122:				; CODE XREF: sub_710070E0+234j
					; sub_710070E0+249j
		movzx	esi, word ptr [ecx]
		movzx	ecx, si
		mov	edi, ecx
		sar	edi, 4
		cmp	edi, 3
		jz	loc_710072A1

loc_71007136:				; CODE XREF: sub_710070E0+1CCj
					; sub_710070E0+1DCj ...
		cmp	si, 65h
		jz	loc_71007200
		cmp	si, 45h
		jz	loc_71007200
		lea	ebp, [esp+14Ch+var_11D]
		cmp	ebx, 9
		mov	[esp+ebx+14Ch+var_11D],	0
		mov	[esp+14Ch+var_134], ebp
		jg	loc_7100724B
		cmp	[esp+14Ch+var_11D], 2Dh
		mov	ebx, 1
		lea	ecx, [esp+14Ch+var_11C]
		jz	short loc_71007176
		xor	ebx, ebx
		lea	ecx, [esp+14Ch+var_11D]

loc_71007176:				; CODE XREF: sub_710070E0+8Ej
		movzx	eax, byte ptr [ecx]
		test	al, al
		jz	loc_7100743C
		xor	edx, edx
		cmp	al, 2Eh
		jnz	short loc_71007198
		jmp	loc_7100743C
; ---------------------------------------------------------------------------
		align 10h

loc_71007190:				; CODE XREF: sub_710070E0+CAj
		test	al, al
		jz	loc_7100743E

loc_71007198:				; CODE XREF: sub_710070E0+A5j
		movsx	eax, al
		add	ecx, 1
		lea	edx, [edx+edx*4]
		lea	edx, [eax+edx*2-30h]
		movzx	eax, byte ptr [ecx]
		cmp	al, 2Eh
		jnz	short loc_71007190

loc_710071AC:				; CODE XREF: sub_710070E0+360j
		lea	esi, [ecx+1]
		movzx	ecx, byte ptr [ecx+1]
		mov	eax, 1
		test	cl, cl
		jz	short loc_710071D9
		lea	esi, [esi+0]

loc_710071C0:				; CODE XREF: sub_710070E0+F7j
		movsx	ecx, cl
		add	esi, 1
		lea	edx, [edx+edx*4]
		lea	edx, [ecx+edx*2-30h]
		movzx	ecx, byte ptr [esi]
		lea	eax, [eax+eax*4]
		add	eax, eax
		test	cl, cl
		jnz	short loc_710071C0

loc_710071D9:				; CODE XREF: sub_710070E0+DAj
		mov	[esp+14Ch+var_130], edx
		fild	[esp+14Ch+var_130]
		mov	[esp+14Ch+var_130], eax
		fild	[esp+14Ch+var_130]
		fdivp	st(1), st

loc_710071EB:				; CODE XREF: sub_710070E0+36Ej
		test	bl, bl
		jz	loc_71007273
		add	esp, 13Ch
		fchs
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_71007200:				; CODE XREF: sub_710070E0+5Aj
					; sub_710070E0+64j
		cmp	ebx, 0FEh
		jg	loc_710073AA
		mov	esi, edx
		mov	[esp+ebx+14Ch+var_11D],	65h
		movzx	esi, word ptr [esi+2]
		lea	ecx, [edx+2]
		add	ebx, 1
		mov	edx, ecx
		mov	[eax], ecx
		cmp	si, 2Dh
		jz	short loc_7100727E
		cmp	si, 2Bh
		jz	short loc_7100727E

loc_7100722D:				; CODE XREF: sub_710070E0+1A4j
					; sub_710070E0+1BFj
		movzx	ecx, si
		mov	edi, ecx
		sar	edi, 4
		lea	ebp, [esp+14Ch+var_11D]
		cmp	edi, 3
		mov	[esp+14Ch+var_134], ebp
		jz	loc_710073CC

loc_71007246:				; CODE XREF: sub_710070E0+2F7j
					; sub_710070E0+303j ...
		mov	[esp+ebx+14Ch+var_11D],	0

loc_7100724B:				; CODE XREF: sub_710070E0+7Aj
					; sub_710070E0+2D7j
		lea	eax, [esp+14Ch+var_1D]
		mov	[esp+14Ch+var_144], eax
		mov	eax, [esp+14Ch+var_134]
		mov	[esp+14Ch+var_1D], 0
		mov	[esp+14Ch+var_148], 0
		mov	[esp+14Ch+var_14C], eax
		call	ds:_Z7qstrtodPKcPS0_Pb

loc_71007273:				; CODE XREF: sub_710070E0+10Dj
		add	esp, 13Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_7100727E:				; CODE XREF: sub_710070E0+145j
					; sub_710070E0+14Bj
		cmp	ebx, 0FFh
		jz	short loc_7100722D
		cmp	si, 100h
		sbb	edx, edx
		and	edx, esi
		mov	[esp+ebx+14Ch+var_11D],	dl
		lea	edx, [ecx+2]
		add	ebx, 1
		mov	[eax], edx
		movzx	esi, word ptr [ecx+2]
		jmp	short loc_7100722D
; ---------------------------------------------------------------------------

loc_710072A1:				; CODE XREF: sub_710070E0+50j
		and	ecx, 0Fh
		mov	di, 3FFh
		sar	edi, cl
		test	edi, edi
		jz	loc_71007136
		cmp	ebx, 0FEh
		lea	edi, [esp+ebx+14Ch+var_11D]
		jg	loc_71007136

loc_710072C2:				; CODE XREF: sub_710070E0+22Cj
		cmp	si, 100h
		sbb	ecx, ecx
		add	edx, 2
		and	esi, ecx
		add	ebx, 1
		mov	ecx, esi
		mov	[edi], cl
		movzx	esi, word ptr [edx]
		mov	[eax], edx
		movzx	ecx, si
		mov	ebp, ecx
		sar	ebp, 4
		cmp	ebp, 3
		jnz	loc_71007136
		and	ecx, 0Fh
		mov	ebp, 3FFh
		sar	ebp, cl
		test	ebp, ebp
		jz	loc_71007136
		add	edi, 1
		cmp	ebx, 0FEh
		jg	loc_71007136
		jmp	short loc_710072C2
; ---------------------------------------------------------------------------

loc_7100730E:				; CODE XREF: sub_710070E0+3Cj
		cmp	ebx, 0FEh
		jg	loc_71007122
		lea	ecx, [edx+2]
		mov	[esp+ebx+14Ch+var_11D],	2Eh
		mov	edx, ecx
		add	ebx, 1
		mov	[eax], ecx
		jmp	loc_71007122
; ---------------------------------------------------------------------------

loc_7100732E:				; CODE XREF: sub_710070E0+30j
		and	ecx, 0Fh
		mov	ebp, 3FFh
		sar	ebp, cl
		test	ebp, ebp
		lea	edi, [esp+ebx+14Ch+var_11D]
		jz	loc_71007116

loc_71007344:				; CODE XREF: sub_710070E0+2AEj
		cmp	si, 100h
		sbb	ecx, ecx
		add	edx, 2
		and	esi, ecx
		add	ebx, 1
		mov	ecx, esi
		mov	[edi], cl
		movzx	esi, word ptr [edx]
		mov	[eax], edx
		movzx	ecx, si
		mov	ebp, ecx
		sar	ebp, 4
		cmp	ebp, 3
		jnz	loc_71007116
		and	ecx, 0Fh
		mov	ebp, 3FFh
		sar	ebp, cl
		test	ebp, ebp
		jz	loc_71007116
		add	edi, 1
		cmp	ebx, 0FEh
		jg	loc_71007116
		jmp	short loc_71007344
; ---------------------------------------------------------------------------

loc_71007390:				; CODE XREF: sub_710070E0+13j
		lea	ecx, [edx+2]
		mov	ebx, 1
		mov	[esp+14Ch+var_11D], 2Dh
		movzx	esi, word ptr [edx+2]
		mov	edx, ecx
		mov	[eax], ecx
		jmp	loc_71007105
; ---------------------------------------------------------------------------

loc_710073AA:				; CODE XREF: sub_710070E0+126j
		lea	ecx, [esp+14Ch+var_11D]
		mov	[esp+ebx+14Ch+var_11D],	0
		mov	[esp+14Ch+var_134], ecx
		jmp	loc_7100724B
; ---------------------------------------------------------------------------

loc_710073BC:				; CODE XREF: sub_710070E0+1Fj
		lea	ecx, [edx+2]
		movzx	esi, word ptr [edx+2]
		mov	[eax], ecx
		mov	edx, ecx
		jmp	loc_71007105
; ---------------------------------------------------------------------------

loc_710073CC:				; CODE XREF: sub_710070E0+160j
		and	ecx, 0Fh
		mov	di, 3FFh
		sar	edi, cl
		test	edi, edi
		jz	loc_71007246
		cmp	ebx, 0FFh
		jz	loc_71007246
		mov	edi, ebp
		add	edi, ebx
		lea	esi, [esi+0]

loc_710073F0:				; CODE XREF: sub_710070E0+35Aj
		cmp	si, 100h
		sbb	ecx, ecx
		add	edx, 2
		and	esi, ecx
		add	ebx, 1
		mov	ecx, esi
		mov	[edi], cl
		movzx	esi, word ptr [edx]
		mov	[eax], edx
		movzx	ecx, si
		mov	ebp, ecx
		sar	ebp, 4
		cmp	ebp, 3
		jnz	loc_71007246
		and	ecx, 0Fh
		mov	ebp, 3FFh
		sar	ebp, cl
		test	ebp, ebp
		jz	loc_71007246
		add	edi, 1
		cmp	ebx, 0FEh
		jg	loc_71007246
		jmp	short loc_710073F0
; ---------------------------------------------------------------------------

loc_7100743C:				; CODE XREF: sub_710070E0+9Bj
					; sub_710070E0+A7j
		xor	edx, edx

loc_7100743E:				; CODE XREF: sub_710070E0+B2j
		cmp	al, 2Eh
		jz	loc_710071AC
		mov	[esp+14Ch+var_130], edx
		fild	[esp+14Ch+var_130]
		jmp	loc_710071EB
sub_710070E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71007460	proc near		; CODE XREF: sub_7100AD80+18Bp
					; sub_7100AD80+19Bp ...

var_10		= dword	ptr -10h

		push	ebx
		mov	ebx, edx
		sub	esp, 18h
		mov	eax, [eax]
		mov	eax, [eax+0Ch]
		mov	[esp+1Ch+var_10], eax
		lea	eax, [esp+1Ch+var_10]
		call	sub_710070E0
		test	ebx, ebx
		jz	short loc_71007487
		mov	eax, [esp+1Ch+var_10]
		cmp	word ptr [eax],	0
		setz	byte ptr [ebx]

loc_71007487:				; CODE XREF: sub_71007460+1Aj
		add	esp, 18h
		pop	ebx
		retn
sub_71007460	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71007490	proc near		; CODE XREF: sub_710099A0+19Cp
					; sub_7100DDD0+4Bp ...

var_10		= dword	ptr -10h

		push	esi
		mov	esi, edx
		push	ebx
		mov	ebx, eax
		sub	esp, 14h
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_710074E0
		mov	edx, [eax]
		mov	eax, [ebx+4]
		add	eax, eax
		add	eax, [edx+0Ch]

loc_710074A9:				; CODE XREF: sub_71007490+58j
		mov	[esp+1Ch+var_10], eax
		lea	eax, [esp+1Ch+var_10]
		call	sub_710070E0
		test	esi, esi
		jz	short loc_710074D7
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_710074F0
		mov	edx, [eax]
		mov	eax, [ebx+4]
		add	eax, eax
		add	eax, [edx+0Ch]

loc_710074CA:				; CODE XREF: sub_71007490+68j
		mov	edx, [ebx+8]
		lea	eax, [eax+edx*2]
		cmp	[esp+1Ch+var_10], eax
		setz	byte ptr [esi]

loc_710074D7:				; CODE XREF: sub_71007490+28j
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_710074E0:				; CODE XREF: sub_71007490+Dj
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	eax, [eax+0Ch]
		jmp	short loc_710074A9
; ---------------------------------------------------------------------------
		align 10h

loc_710074F0:				; CODE XREF: sub_71007490+2Ej
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	eax, [eax+0Ch]
		jmp	short loc_710074CA
sub_71007490	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71007500	proc near		; DATA XREF: sub_7101E100+952o

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71052E60
		mov	[ebp+var_18], offset sub_7100756E
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 90h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_710517F0
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+4], eax
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_71024340
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_40]
		leave
		retn
sub_71007500	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7100756E	proc near		; DATA XREF: sub_71007500+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	[ebp-44h], eax
		mov	eax, [ebp-40h]
		mov	[esp+0], eax
		call	sub_710517D0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7100756E	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710075A0	proc near		; DATA XREF: sub_7101E100+999o

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_71052E66
		mov	[ebp+var_18], offset sub_7100760E
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 90h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_710517F0
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+4], eax
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_710242E0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_40]
		leave
		retn
sub_710075A0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7100760E	proc near		; DATA XREF: sub_710075A0+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	[ebp-44h], eax
		mov	eax, [ebp-40h]
		mov	[esp+0], eax
		call	sub_710517D0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7100760E	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71007640	proc near		; DATA XREF: sub_7101E100+E04o

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71052E6C
		mov	[ebp+var_18], offset sub_710076DF
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 90h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_710517F0
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_40]
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_71022420
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+var_40]
		mov	dword ptr [eax], offset	off_7105DCC8
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[edx+80h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_40]
		mov	dword ptr [eax+84h], 0
		mov	byte ptr [eax+88h], 1
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_40]
		leave
		retn
sub_71007640	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710076DF	proc near		; DATA XREF: sub_71007640+20o
		add	ebp, 8
		mov	edx, [ebp-34h]
		mov	eax, [ebp-40h]
		mov	[ebp-44h], edx
		mov	[esp+0], eax
		call	sub_710517D0
		mov	edx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_710076DF	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71007710	proc near		; CODE XREF: sub_71009CC0+44p
					; sub_7100B430+8Fp ...

var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= qword	ptr -10h
var_8		= byte ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		mov	[ebp+var_5C], eax
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_54], edx
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset word_71052E72
		mov	[ebp+var_28], offset sub_710078B4
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+var_5C]
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	[ebp+var_60], edx
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+var_54]
		mov	eax, [ecx]
		test	eax, eax
		jz	short loc_710077D7
		mov	ecx, [ebp+var_5C]
		mov	edx, [ecx]
		cmp	dword ptr [edx+4], 1Fh
		jle	loc_71007887

loc_71007770:				; CODE XREF: sub_71007710+19Fj
		mov	ecx, [edx]
		cmp	ecx, 1
		jnz	short loc_7100777B
		or	byte ptr [edx+0Ch], 2

loc_7100777B:				; CODE XREF: sub_71007710+65j
		mov	ecx, ds:_ZNK5QChar7isSpaceEv
		mov	[ebp+var_50], ecx
		jmp	short loc_71007790
; ---------------------------------------------------------------------------

loc_71007786:				; CODE XREF: sub_71007710+8Fj
		mov	edx, [ebp+var_54]
		mov	eax, [edx]
		add	eax, 2
		mov	[edx], eax

loc_71007790:				; CODE XREF: sub_71007710+74j
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	[ebp+var_50]
		test	al, al
		jnz	short loc_71007786
		mov	eax, ds:_ZNK5QChar7isSpaceEv
		mov	[ebp+var_58], eax
		lea	esi, [esi+0]

loc_710077B0:				; CODE XREF: sub_71007710+158j
		mov	edx, [ebp+var_54]
		mov	eax, [edx]
		movzx	eax, word ptr [eax]
		movzx	edx, ax
		mov	ecx, edx
		sar	ecx, 4
		cmp	ecx, 3
		jz	short loc_710077E7

loc_710077C5:				; CODE XREF: sub_71007710+E5j
		cmp	ax, 2Dh
		jz	short loc_710077F7
		cmp	ax, 2Bh
		jz	short loc_710077F7
		cmp	ax, 2Eh
		jz	short loc_710077F7

loc_710077D7:				; CODE XREF: sub_71007710+4Fj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_5C]
		leave
		retn
; ---------------------------------------------------------------------------

loc_710077E7:				; CODE XREF: sub_71007710+B3j
		mov	ecx, edx
		mov	edx, 3FFh
		and	ecx, 0Fh
		sar	edx, cl
		test	edx, edx
		jz	short loc_710077C5

loc_710077F7:				; CODE XREF: sub_71007710+B9j
					; sub_71007710+BFj ...
		mov	eax, [ebp+var_54]
		mov	[ebp+var_48], 1
		call	sub_710070E0
		mov	eax, [ebp+var_60]
		lea	ecx, [ebp+var_10]
		fstp	[ebp+var_10]
		mov	[esp+4], ecx
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	sub_7104ED10
		mov	edx, [ebp+var_54]
		mov	eax, [edx]
		jmp	short loc_7100783A
; ---------------------------------------------------------------------------
		align 10h

loc_71007830:				; CODE XREF: sub_71007710+13Cj
		mov	ecx, [ebp+var_54]
		mov	eax, [ecx]
		add	eax, 2
		mov	[ecx], eax

loc_7100783A:				; CODE XREF: sub_71007710+117j
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZNK5QChar7isSpaceEv
		test	al, al
		jnz	short loc_71007830
		mov	edx, [ebp+var_54]
		mov	eax, [edx]
		cmp	word ptr [eax],	2Ch
		jz	short loc_71007880

loc_71007859:				; CODE XREF: sub_71007710+168j
					; sub_71007710+175j
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	[ebp+var_58]
		test	al, al
		jz	loc_710077B0
		mov	ecx, [ebp+var_54]
		mov	eax, [ecx]
		add	eax, 2
		mov	[ecx], eax
		jmp	short loc_71007859
; ---------------------------------------------------------------------------
		align 10h

loc_71007880:				; CODE XREF: sub_71007710+147j
		add	eax, 2
		mov	[edx], eax
		jmp	short loc_71007859
; ---------------------------------------------------------------------------

loc_71007887:				; CODE XREF: sub_71007710+5Aj
		mov	dword ptr [esp+8], 20h
		mov	eax, [edx+8]
		mov	[esp], ecx
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		call	sub_7104EDA0
		mov	eax, [ebp+var_5C]
		mov	ecx, [ebp+var_54]
		mov	edx, [eax]
		mov	eax, [ecx]
		jmp	loc_71007770
sub_71007710	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710078B4	proc near		; DATA XREF: sub_71007710+26o
		add	ebp, 8
		mov	edx, [ebp-44h]
		mov	ecx, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-64h], edx
		mov	[esp+0], ecx
		call	sub_7104F050
		mov	eax, [ebp-64h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_710078B4	endp

; ---------------------------------------------------------------------------
		jmp	short sub_710078F0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_710078F0(double, double, double, double, double, double, double)
sub_710078F0	proc near		; CODE XREF: .text:710078E1j
					; sub_71008500+E7Ap ...

var_13C		= qword	ptr -13Ch
var_134		= qword	ptr -134h
var_11C		= qword	ptr -11Ch
var_10C		= qword	ptr -10Ch
var_FC		= qword	ptr -0FCh
var_EC		= qword	ptr -0ECh
var_DC		= tbyte	ptr -0DCh
var_CC		= qword	ptr -0CCh
var_B4		= qword	ptr -0B4h
var_AC		= qword	ptr -0ACh
var_A4		= qword	ptr -0A4h
var_9C		= qword	ptr -9Ch
var_94		= qword	ptr -94h
var_8C		= qword	ptr -8Ch
var_84		= qword	ptr -84h
var_7C		= qword	ptr -7Ch
var_74		= qword	ptr -74h
var_6C		= qword	ptr -6Ch
var_64		= qword	ptr -64h
var_5C		= qword	ptr -5Ch
var_54		= word ptr -54h
var_52		= word ptr -52h
var_50		= dword	ptr -50h
var_4C		= qword	ptr -4Ch
var_44		= qword	ptr -44h
var_3C		= qword	ptr -3Ch
var_34		= qword	ptr -34h
var_2C		= qword	ptr -2Ch
var_24		= qword	ptr -24h
arg_0		= qword	ptr  4
arg_8		= qword	ptr  0Ch
arg_10		= qword	ptr  14h
arg_18		= qword	ptr  1Ch
arg_20		= qword	ptr  24h
arg_28		= qword	ptr  2Ch
arg_30		= qword	ptr  34h

		push	ebp
		push	edi
		mov	edi, ecx
		push	esi
		mov	esi, edx
		push	ebx
		mov	ebx, eax
		sub	esp, 12Ch
		fld	[esp+13Ch+arg_0]
		fstp	[esp+13Ch+var_A4]
		fld	[esp+13Ch+arg_8]
		fstp	[esp+13Ch+var_9C]
		fld	[esp+13Ch+arg_10]
		fld	[esp+13Ch+arg_18]
		fstp	[esp+13Ch+var_AC]
		fld	[esp+13Ch+arg_20]
		fstp	[esp+13Ch+var_94]
		fld	[esp+13Ch+arg_28]
		fld	[esp+13Ch+arg_30]
		fldz
		fld	[esp+13Ch+var_A4]
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_71007970
		fchs
		fstp	[esp+13Ch+var_A4]
		jmp	short loc_71007972
; ---------------------------------------------------------------------------
		align 10h

loc_71007970:				; CODE XREF: sub_710078F0+6Dj
		fstp	st

loc_71007972:				; CODE XREF: sub_710078F0+78j
		fldz
		fld	[esp+13Ch+var_9C]
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_71007991
		fchs
		fstp	[esp+13Ch+var_9C]
		fxch	st(2)
		jmp	short loc_71007995
; ---------------------------------------------------------------------------

loc_71007991:				; CODE XREF: sub_710078F0+92j
		fstp	st
		fxch	st(2)

loc_71007995:				; CODE XREF: sub_710078F0+9Fj
		fmul	ds:dbl_71059D48
		fst	[esp+13Ch+var_13C] ; double
		fstp	[esp+13Ch+var_11C]
		fstp	[esp+13Ch+var_FC]
		fstp	[esp+13Ch+var_10C]
		call	sin
		fstp	[esp+13Ch+var_5C]
		fld	[esp+13Ch+var_11C]
		fstp	[esp+13Ch+var_13C] ; double
		call	cos
		fstp	[esp+13Ch+var_B4]
		fld	[esp+13Ch+var_FC]
		fld	[esp+13Ch+var_AC]
		fsubr	st, st(1)
		fld	ds:flt_71059D50
		fmul	st(1), st
		fld	[esp+13Ch+var_10C]
		fld	[esp+13Ch+var_94]
		fsubr	st, st(1)
		fmulp	st(2), st
		fld	[esp+13Ch+var_B4]
		fmul	st, st(3)
		fld	[esp+13Ch+var_5C]
		fmul	st, st(3)
		faddp	st(1), st
		fld	[esp+13Ch+var_5C]
		fchs
		fst	[esp+13Ch+var_8C]
		fmulp	st(4), st
		fxch	st(2)
		fmul	[esp+13Ch+var_B4]
		faddp	st(3), st
		fxch	st(1)
		fmul	st, st
		fld	[esp+13Ch+var_A4]
		fmul	st, st
		fdivp	st(1), st
		fxch	st(2)
		fmul	st, st
		fld	[esp+13Ch+var_9C]
		fmul	st, st
		fdivp	st(1), st
		faddp	st(2), st
		fld1
		fxch	st(2)
		fucom	st(2)
		fnstsw	ax
		fstp	st(2)
		sahf
		ja	loc_71007FB8
		fstp	st(1)

loc_71007A51:				; CODE XREF: sub_710078F0+700j
					; sub_710078F0+740j
		fld	[esp+13Ch+var_B4]
		fdiv	[esp+13Ch+var_A4]
		fld	[esp+13Ch+var_5C]
		fdiv	[esp+13Ch+var_A4]
		fld	[esp+13Ch+var_8C]
		fdiv	[esp+13Ch+var_9C]
		fld	[esp+13Ch+var_B4]
		fdiv	[esp+13Ch+var_9C]
		fld	st(3)
		fmul	st, st(6)
		fld	st(3)
		fmul	st, st(6)
		faddp	st(1), st
		fxch	st(6)
		fmul	st, st(2)
		fxch	st(5)
		fmul	st, st(1)
		faddp	st(5), st
		fxch	st(3)
		fmul	[esp+13Ch+var_AC]
		fxch	st(2)
		fmul	[esp+13Ch+var_94]
		faddp	st(2), st
		fxch	st(1)
		fst	[esp+13Ch+var_84]
		fxch	st(1)
		fmul	[esp+13Ch+var_AC]
		fxch	st(2)
		fmul	[esp+13Ch+var_94]
		faddp	st(2), st
		fsub	st, st(3)
		fld	st(1)
		fsub	st, st(3)
		fld	st(1)
		fmul	st, st(2)
		fld	st(1)
		fmul	st, st(2)
		faddp	st(1), st
		fdivr	ds:flt_71059D54
		fsub	ds:flt_71059D58
		fldz
		fld	st
		fucomp	st(2)
		fnstsw	ax
		sahf
		jbe	loc_71007B00
		fstp	st(1)
		jmp	short loc_71007B02
; ---------------------------------------------------------------------------
		align 10h

loc_71007B00:				; CODE XREF: sub_710078F0+203j
		fstp	st

loc_71007B02:				; CODE XREF: sub_710078F0+20Bj
		fld	st
		fsqrt
		fucom	st
		fnstsw	ax
		sahf
		jp	short loc_71007B13
		jz	short loc_71007B60
		fstp	st
		jmp	short loc_71007B15
; ---------------------------------------------------------------------------

loc_71007B13:				; CODE XREF: sub_710078F0+21Bj
		fstp	st

loc_71007B15:				; CODE XREF: sub_710078F0+221j
		fstp	[esp+13Ch+var_13C] ; double
		fxch	st(2)
		fstp	[esp+13Ch+var_11C]
		fxch	st(2)
		fstp	[esp+13Ch+var_FC]
		fxch	st(2)
		fstp	[esp+13Ch+var_EC]
		fstp	[esp+13Ch+var_10C]
		fstp	[esp+13Ch+var_CC]
		call	sqrt
		fld	[esp+13Ch+var_CC]
		fld	[esp+13Ch+var_10C]
		fld	[esp+13Ch+var_EC]
		fld	[esp+13Ch+var_FC]
		fld	[esp+13Ch+var_11C]
		fxch	st(3)
		fxch	st(2)
		fxch	st(5)
		fxch	st(1)
		fxch	st(4)
		fxch	st(1)
		jmp	short loc_71007B62
; ---------------------------------------------------------------------------
		align 10h

loc_71007B60:				; CODE XREF: sub_710078F0+21Dj
		fstp	st(1)

loc_71007B62:				; CODE XREF: sub_710078F0+267j
		cmp	edi, esi
		jz	loc_71007FF5

loc_71007B6A:				; CODE XREF: sub_710078F0+707j
		fld	[esp+13Ch+var_84]
		fadd	st, st(6)
		fld	ds:dbl_71059D78
		fmulp	st(1), st
		fxch	st(2)
		fmul	st, st(1)
		fsubp	st(2), st
		fxch	st(1)
		fstp	[esp+13Ch+var_64]
		fld	st(3)
		fadd	st, st(3)
		fld	ds:dbl_71059D78
		fmulp	st(1), st
		fxch	st(1)
		fmulp	st(2), st
		faddp	st(1), st
		fst	[esp+13Ch+var_6C]
		fxch	st(3)
		fsub	[esp+13Ch+var_64]
		fstp	[esp+13Ch+var_134] ; double
		fxch	st(1)
		fsubrp	st(2), st
		fxch	st(1)
		fstp	[esp+13Ch+var_13C] ; double
		fstp	[esp+13Ch+var_11C]
		call	atan2
		fstp	[esp+13Ch+var_7C]
		fld	[esp+13Ch+var_84]
		fsub	[esp+13Ch+var_64]
		fstp	[esp+13Ch+var_134] ; double
		fld	[esp+13Ch+var_11C]
		fsub	[esp+13Ch+var_6C]
		fstp	[esp+13Ch+var_13C] ; double
		call	atan2
		fsub	[esp+13Ch+var_7C]
		fstp	[esp+13Ch+var_84]
		fldz
		fld	[esp+13Ch+var_84]
		fxch	st(1)
		fucomp	st(1)
		fnstsw	ax
		sahf
		jbe	loc_71007F80
		test	edi, edi
		jz	loc_71007F84
		fld	ds:dbl_71059D60
		faddp	st(1), st
		fstp	[esp+13Ch+var_84]
		jmp	short loc_71007C36
; ---------------------------------------------------------------------------
		align 10h

loc_71007C30:				; CODE XREF: sub_710078F0+6A6j
		fstp	st
		jmp	short loc_71007C36
; ---------------------------------------------------------------------------

loc_71007C34:				; CODE XREF: sub_710078F0+6AEj
		fstp	st

loc_71007C36:				; CODE XREF: sub_710078F0+339j
					; sub_710078F0+342j ...
		fld	[esp+13Ch+var_84]
		fdiv	ds:dbl_71059D68
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_71007C52
		fchs

loc_71007C52:				; CODE XREF: sub_710078F0+35Ej
		fstp	[esp+13Ch+var_13C] ; double
		call	ceil
		fnstcw	[esp+13Ch+var_52]
		movzx	eax, [esp+13Ch+var_52]
		mov	ah, 0Ch
		mov	[esp+13Ch+var_54], ax
		fldcw	[esp+13Ch+var_54]
		fistp	[esp+13Ch+var_50]
		fldcw	[esp+13Ch+var_52]
		mov	edi, [esp+13Ch+var_50]
		test	edi, edi
		jle	loc_71007F73
		fld	[esp+13Ch+var_84]
		lea	ebp, [esp+13Ch+var_4C]
		fmul	ds:flt_71059D44
		mov	[esp+13Ch+var_50], edi
		fild	[esp+13Ch+var_50]
		fst	[esp+13Ch+var_74]
		fdivp	st(1), st
		fadd	[esp+13Ch+var_7C]
		fst	[esp+13Ch+var_13C] ; double
		fstp	[esp+13Ch+var_11C]
		call	cos
		fstp	[esp+13Ch+var_AC]
		fld	[esp+13Ch+var_11C]
		fstp	[esp+13Ch+var_13C] ; double
		call	sin
		xor	eax, eax
		fld	st
		fld	[esp+13Ch+var_A4]
		fmul	[esp+13Ch+var_B4]
		fstp	[esp+13Ch+var_94]
		fld	[esp+13Ch+var_8C]
		fmul	[esp+13Ch+var_9C]
		fstp	[esp+13Ch+var_8C]
		fld	[esp+13Ch+var_A4]
		fmul	[esp+13Ch+var_5C]
		fstp	[esp+13Ch+var_A4]
		fld	[esp+13Ch+var_9C]
		fmul	[esp+13Ch+var_B4]
		fstp	[esp+13Ch+var_9C]
		fld	[esp+13Ch+var_64]
		fadd	[esp+13Ch+var_AC]
		fstp	[esp+13Ch+var_B4]
		fld	[esp+13Ch+var_6C]
		faddp	st(2), st
		jmp	loc_71007D65
; ---------------------------------------------------------------------------

loc_71007D63:				; CODE XREF: sub_710078F0+679j
		mov	eax, esi

loc_71007D65:				; CODE XREF: sub_710078F0+46Ej
		lea	esi, [eax+1]
		mov	[esp+13Ch+var_50], esi
		fild	[esp+13Ch+var_50]
		fmul	[esp+13Ch+var_84]
		mov	[esp+13Ch+var_50], eax
		fdiv	[esp+13Ch+var_74]
		fadd	[esp+13Ch+var_7C]
		fild	[esp+13Ch+var_50]
		fmul	[esp+13Ch+var_84]
		fdiv	[esp+13Ch+var_74]
		fadd	[esp+13Ch+var_7C]
		fsubr	st, st(1)
		fmul	ds:dbl_71059D78
		fld	ds:dbl_71059D78
		fmul	st, st(1)
		fstp	[esp+13Ch+var_13C] ; double
		fxch	st(1)
		fstp	[esp+13Ch+var_11C]
		fstp	qword ptr [esp+13Ch+var_DC]
		fxch	st(1)
		fstp	[esp+13Ch+var_FC]
		fstp	[esp+13Ch+var_10C]
		call	sin
		fld	qword ptr [esp+13Ch+var_DC]
		fstp	[esp+13Ch+var_13C] ; double
		fstp	[esp+13Ch+var_EC]
		call	sin
		fld	[esp+13Ch+var_EC]
		fld	ds:dbl_71059D70
		fmul	st, st(1)
		fmulp	st(1), st
		fdivrp	st(1), st
		fld	[esp+13Ch+var_10C]
		fmul	st, st(1)
		fld	[esp+13Ch+var_B4]
		fsubrp	st(1), st
		fld	[esp+13Ch+var_AC]
		fmul	st, st(2)
		fld	[esp+13Ch+var_FC]
		faddp	st(1), st
		fld	[esp+13Ch+var_11C]
		fstp	[esp+13Ch+var_13C] ; double
		fxch	st(2)
		fstp	qword ptr [esp+13Ch+var_DC]
		fxch	st(1)
		fstp	[esp+13Ch+var_EC]
		fstp	[esp+13Ch+var_CC]
		call	cos
		fst	[esp+13Ch+var_AC]
		fld	[esp+13Ch+var_64]
		faddp	st(1), st
		fstp	[esp+13Ch+var_B4]
		fld	[esp+13Ch+var_11C]
		fstp	[esp+13Ch+var_13C] ; double
		call	sin
		lea	eax, [esp+13Ch+var_2C]
		lea	edx, [esp+13Ch+var_3C]
		fld	st
		fld	[esp+13Ch+var_6C]
		faddp	st(2), st
		fld	qword ptr [esp+13Ch+var_DC]
		fld	st
		fmul	st, st(2)
		fadd	[esp+13Ch+var_B4]
		fxch	st(1)
		fmul	[esp+13Ch+var_AC]
		fsubr	st, st(3)
		fld	[esp+13Ch+var_94]
		fmul	[esp+13Ch+var_B4]
		fld	[esp+13Ch+var_8C]
		fmul	st, st(5)
		faddp	st(1), st
		fstp	[esp+13Ch+var_2C]
		fld	[esp+13Ch+var_A4]
		fmul	[esp+13Ch+var_B4]
		mov	dword ptr [esp+13Ch+var_134+4],	eax
		mov	dword ptr [esp+13Ch+var_134], edx
		mov	dword ptr [esp+13Ch+var_13C+4],	ebp
		mov	dword ptr [esp+13Ch+var_13C], ebx
		fld	[esp+13Ch+var_9C]
		fmul	st, st(5)
		faddp	st(1), st
		fstp	[esp+13Ch+var_24]
		fld	[esp+13Ch+var_94]
		fmul	st, st(2)
		fld	[esp+13Ch+var_8C]
		fmul	st, st(2)
		faddp	st(1), st
		fstp	[esp+13Ch+var_3C]
		fxch	st(1)
		fmul	[esp+13Ch+var_A4]
		fxch	st(1)
		fmul	[esp+13Ch+var_9C]
		faddp	st(1), st
		fstp	[esp+13Ch+var_34]
		fld	[esp+13Ch+var_CC]
		fld	[esp+13Ch+var_94]
		fmul	st, st(1)
		fld	[esp+13Ch+var_EC]
		fld	[esp+13Ch+var_8C]
		fmul	st, st(1)
		faddp	st(2), st
		fxch	st(1)
		fstp	[esp+13Ch+var_4C]
		fxch	st(1)
		fmul	[esp+13Ch+var_A4]
		fxch	st(1)
		fmul	[esp+13Ch+var_9C]
		faddp	st(1), st
		fstp	[esp+13Ch+var_44]
		fxch	st(1)
		fstp	[esp+13Ch+var_FC]
		fstp	[esp+13Ch+var_10C]
		call	ds:_ZN12QPainterPath7cubicToERK7QPointFS2_S2_
		cmp	esi, edi
		fld	[esp+13Ch+var_FC]
		fld	[esp+13Ch+var_10C]
		jl	loc_71007D63
		fstp	st
		fstp	st

loc_71007F73:				; CODE XREF: sub_710078F0+3A1j
		add	esp, 12Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71007F80:				; CODE XREF: sub_710078F0+31Cj
		fstp	st
		jmp	short loc_71007F86
; ---------------------------------------------------------------------------

loc_71007F84:				; CODE XREF: sub_710078F0+324j
		fstp	st

loc_71007F86:				; CODE XREF: sub_710078F0+692j
		fldz
		fld	[esp+13Ch+var_84]
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jbe	loc_71007C30
		test	edi, edi
		jnz	loc_71007C34
		fld	ds:dbl_71059D60
		fsubp	st(1), st
		fstp	[esp+13Ch+var_84]
		jmp	loc_71007C36
; ---------------------------------------------------------------------------

loc_71007FB8:				; CODE XREF: sub_710078F0+159j
		fld	st(1)
		fsqrt
		fld	st
		fucom	st
		fnstsw	ax
		sahf
		jp	short loc_71008035
		jnz	short loc_71008040

loc_71007FC7:				; CODE XREF: sub_710078F0+77Cj
		fmul	[esp+13Ch+var_A4]
		fstp	[esp+13Ch+var_A4]
		fucom	st
		fnstsw	ax
		sahf
		jp	short loc_71007FFC
		jnz	short loc_71008002
		fstp	st(2)
		fxch	st(1)
		fmul	[esp+13Ch+var_9C]
		fstp	[esp+13Ch+var_9C]
		jmp	loc_71007A51
; ---------------------------------------------------------------------------

loc_71007FF5:				; CODE XREF: sub_710078F0+274j
		fchs
		jmp	loc_71007B6A
; ---------------------------------------------------------------------------

loc_71007FFC:				; CODE XREF: sub_710078F0+6EAj
		fstp	st
		fxch	st(1)
		jmp	short loc_71008006
; ---------------------------------------------------------------------------

loc_71008002:				; CODE XREF: sub_710078F0+6ECj
		fstp	st
		fxch	st(1)

loc_71008006:				; CODE XREF: sub_710078F0+710j
		fstp	[esp+13Ch+var_13C] ; double
		fxch	st(1)
		fstp	[esp+13Ch+var_FC]
		fstp	[esp+13Ch+var_10C]
		call	sqrt
		fld	[esp+13Ch+var_10C]
		fld	[esp+13Ch+var_FC]
		fxch	st(2)
		fmul	[esp+13Ch+var_9C]
		fstp	[esp+13Ch+var_9C]
		jmp	loc_71007A51
; ---------------------------------------------------------------------------

loc_71008035:				; CODE XREF: sub_710078F0+6D3j
		fstp	st
		fstp	st(3)
		fstp	st
		jmp	short loc_71008046
; ---------------------------------------------------------------------------
		align 10h

loc_71008040:				; CODE XREF: sub_710078F0+6D5j
		fstp	st
		fstp	st(3)
		fstp	st

loc_71008046:				; CODE XREF: sub_710078F0+74Bj
		fst	[esp+13Ch+var_13C] ; double
		fstp	[esp+13Ch+var_11C]
		fstp	[esp+13Ch+var_DC]
		call	sqrt
		fld	[esp+13Ch+var_10C]
		fld	[esp+13Ch+var_FC]
		fld	[esp+13Ch+var_DC]
		fld	[esp+13Ch+var_11C]
		fxch	st(3)
		fxch	st(2)
		fxch	st(4)
		jmp	loc_71007FC7
sub_710078F0	endp

; ---------------------------------------------------------------------------
		jmp	short sub_71008080
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71008080	proc near		; CODE XREF: .text:71008071j
					; sub_71008300+47p

var_4C		= dword	ptr -4Ch
var_2D		= byte ptr -2Dh
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 4Ch
		xor	eax, eax
		mov	edx, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_10], ebx
		mov	ebx, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_C], esi
		mov	[esp+4Ch+var_8], edi
		mov	[esp+4Ch+var_4], ebp
		cmp	byte ptr [edx],	23h
		jz	short loc_710080B6

loc_710080A2:				; CODE XREF: sub_71008080+108j
					; sub_71008080+180j
		mov	ebx, [esp+4Ch+var_10]
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------

loc_710080B6:				; CODE XREF: sub_71008080+20j
		mov	esi, edx
		add	esi, 1
		jz	loc_71008180
		mov	[esp+4Ch+var_4C], esi ;	char *
		mov	[esp+4Ch+var_24], edx
		call	strlen
		mov	edx, [esp+4Ch+var_24]
		cmp	eax, 0Ch
		jz	loc_71008190
		cmp	eax, 9
		jz	loc_71008238
		cmp	eax, 6
		jz	loc_71008205
		cmp	eax, 3
		nop
		jnz	loc_71008180
		movzx	eax, byte ptr [edx+1]
		lea	edx, [eax-30h]
		movsx	ecx, al
		cmp	dl, 9
		jbe	loc_71008230
		lea	edx, [eax-61h]
		cmp	dl, 5
		ja	loc_71008291
		sub	ecx, 57h

loc_71008118:				; CODE XREF: sub_71008080+1B3j
					; sub_71008080+229j
		mov	ebp, ecx
		shl	ebp, 4
		or	ebp, ecx
		cmp	ebp, 0FFh
		setnbe	[esp+4Ch+var_2D]

loc_7100812A:				; CODE XREF: sub_71008080+220j
		movzx	ecx, byte ptr [esi+1]
		lea	edi, [ecx-30h]
		movsx	edx, cl
		mov	eax, edi
		cmp	al, 9
		ja	loc_71008280
		lea	eax, [edx-30h]

loc_71008141:				; CODE XREF: sub_71008080+20Cj
					; sub_71008080+26Ej
		mov	edi, eax
		shl	edi, 4
		or	edi, eax
		cmp	edi, 0FFh
		setnbe	cl

loc_71008151:				; CODE XREF: sub_71008080+265j
		movzx	edx, byte ptr [esi+2]
		movsx	esi, dl
		mov	[esp+4Ch+var_20], esi
		lea	esi, [edx-30h]
		mov	eax, esi
		cmp	al, 9
		ja	loc_71008260
		mov	esi, [esp+4Ch+var_20]
		sub	esi, 30h
		mov	eax, esi
		shl	eax, 4
		or	eax, esi
		jmp	short loc_710081C7
; ---------------------------------------------------------------------------
		align 10h

loc_71008180:				; CODE XREF: sub_71008080+3Bj
					; sub_71008080+70j ...
		mov	dword ptr [ebx], 0
		xor	eax, eax
		jmp	loc_710080A2
; ---------------------------------------------------------------------------
		align 10h

loc_71008190:				; CODE XREF: sub_71008080+54j
		mov	eax, esi
		call	sub_71006A10
		mov	edx, [esp+4Ch+var_24]
		mov	ebp, eax
		lea	eax, [edx+5]
		call	sub_71006A10
		mov	edx, [esp+4Ch+var_24]
		mov	edi, eax
		lea	eax, [edx+9]

loc_710081AE:				; CODE XREF: sub_71008080+1A7j
					; sub_71008080+1DAj
		call	sub_71006A10
		cmp	ebp, 0FFh
		setnbe	[esp+4Ch+var_2D]
		cmp	edi, 0FFh
		setnbe	cl

loc_710081C7:				; CODE XREF: sub_71008080+F7j
					; sub_71008080+1F7j ...
		test	cl, cl
		jnz	short loc_71008180
		cmp	[esp+4Ch+var_2D], 0
		jnz	short loc_71008180
		cmp	eax, 0FFh
		ja	short loc_71008180
		and	eax, 0FFh
		and	ebp, 0FFh
		or	eax, 0FF000000h
		shl	ebp, 10h
		shl	edi, 8
		or	eax, ebp
		and	edi, 0FFFFh
		or	eax, edi
		mov	[ebx], eax
		mov	eax, 1
		jmp	loc_710080A2
; ---------------------------------------------------------------------------

loc_71008205:				; CODE XREF: sub_71008080+66j
		mov	eax, esi
		mov	[esp+4Ch+var_24], edx
		call	sub_71006A10
		mov	edx, [esp+4Ch+var_24]
		mov	ebp, eax
		lea	eax, [edx+3]
		call	sub_71006A10
		mov	edx, [esp+4Ch+var_24]
		mov	edi, eax
		lea	eax, [edx+5]
		jmp	short loc_710081AE
; ---------------------------------------------------------------------------
		align 10h

loc_71008230:				; CODE XREF: sub_71008080+83j
		sub	ecx, 30h
		jmp	loc_71008118
; ---------------------------------------------------------------------------

loc_71008238:				; CODE XREF: sub_71008080+5Dj
		mov	eax, esi
		mov	[esp+4Ch+var_24], edx
		call	sub_71006A10
		mov	edx, [esp+4Ch+var_24]
		mov	ebp, eax
		lea	eax, [edx+4]
		call	sub_71006A10
		mov	edx, [esp+4Ch+var_24]
		mov	edi, eax
		lea	eax, [edx+7]
		jmp	loc_710081AE
; ---------------------------------------------------------------------------
		align 10h

loc_71008260:				; CODE XREF: sub_71008080+E3j
		lea	esi, [edx-61h]
		mov	eax, esi
		cmp	al, 5
		ja	short loc_710082B0
		mov	esi, [esp+4Ch+var_20]
		sub	esi, 57h
		mov	eax, esi
		shl	eax, 4
		or	eax, esi
		jmp	loc_710081C7
; ---------------------------------------------------------------------------
		align 10h

loc_71008280:				; CODE XREF: sub_71008080+B8j
		lea	edi, [ecx-61h]
		mov	eax, edi
		cmp	al, 5
		ja	short loc_710082D6
		lea	eax, [edx-57h]
		jmp	loc_71008141
; ---------------------------------------------------------------------------

loc_71008291:				; CODE XREF: sub_71008080+8Fj
		sub	eax, 41h
		mov	ebp, 0FFFFFFFFh
		cmp	al, 5
		mov	[esp+4Ch+var_2D], 1
		ja	loc_7100812A
		sub	ecx, 37h
		jmp	loc_71008118
; ---------------------------------------------------------------------------
		align 10h

loc_710082B0:				; CODE XREF: sub_71008080+1E7j
		lea	esi, [edx-41h]
		mov	eax, 0FFFFFFFFh
		mov	edx, esi
		cmp	dl, 5
		ja	loc_710081C7
		mov	esi, [esp+4Ch+var_20]
		sub	esi, 37h
		mov	eax, esi
		shl	eax, 4
		or	eax, esi
		jmp	loc_710081C7
; ---------------------------------------------------------------------------

loc_710082D6:				; CODE XREF: sub_71008080+207j
		lea	eax, [ecx-41h]
		mov	edi, 0FFFFFFFFh
		cmp	al, 5
		mov	ecx, 1
		ja	loc_71008151
		lea	eax, [edx-37h]
		jmp	loc_71008141
sub_71008080	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71008300	proc near		; CODE XREF: sub_7100D500+35Dp

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	edi
		xor	eax, eax
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+2Ch+arg_4]
		mov	edi, [esp+2Ch+arg_0]
		cmp	ebx, 0Dh
		jg	short loc_7100834C
		test	ebx, ebx
		lea	esi, [esp+2Ch+var_1C]
		jle	short loc_71008337
		xor	eax, eax
		nop

loc_71008320:				; CODE XREF: sub_71008300+35j
		movzx	edx, word ptr [edi+eax*2]
		cmp	dx, 100h
		sbb	ecx, ecx
		and	edx, ecx
		mov	[esi+eax], dl
		add	eax, 1
		cmp	eax, ebx
		jnz	short loc_71008320

loc_71008337:				; CODE XREF: sub_71008300+1Bj
		mov	eax, [esp+2Ch+arg_8]
		mov	[esp+ebx+2Ch+var_1C], 0
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_28], eax
		call	sub_71008080

loc_7100834C:				; CODE XREF: sub_71008300+13j
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
sub_71008300	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71008360	proc near		; CODE XREF: sub_7100D410+54p
					; sub_71010720+4F0p ...

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4A		= word ptr -4Ah
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 74h
		mov	[ebp+var_54], eax
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_58], edx
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71052EAC
		mov	[ebp+var_18], offset sub_710084CB
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+var_58]
		mov	ebx, ds:_ZNK5QChar7isSpaceEv
		mov	eax, [edx]
		mov	[ebp+var_44], ebx
		mov	eax, [eax+0Ch]
		mov	[ebp+var_48], eax
		jmp	short loc_710083B4
; ---------------------------------------------------------------------------
		align 10h

loc_710083B0:				; CODE XREF: sub_71008360+66j
		add	[ebp+var_48], 2

loc_710083B4:				; CODE XREF: sub_71008360+4Aj
		mov	eax, [ebp+var_48]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	[ebp+var_44]
		test	al, al
		jnz	short loc_710083B0
		mov	edx, [ebp+var_48]
		cmp	word ptr [edx],	28h
		jz	loc_710084B4

loc_710083D5:				; CODE XREF: sub_71008360+15Aj
		mov	ebx, ds:_ZNK5QChar7isSpaceEv
		mov	[ebp+var_40], ebx
		jmp	short loc_710083E4
; ---------------------------------------------------------------------------

loc_710083E0:				; CODE XREF: sub_71008360+96j
		add	[ebp+var_48], 2

loc_710083E4:				; CODE XREF: sub_71008360+7Ej
		mov	eax, [ebp+var_48]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	[ebp+var_40]
		test	al, al
		jnz	short loc_710083E0
		mov	edx, [ebp+var_48]
		cmp	word ptr [edx],	23h
		jz	loc_710084C0

loc_71008405:				; CODE XREF: sub_71008360+166j
		mov	ebx, [ebp+var_54]
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_50], ebx
		mov	[ebx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_48]
		movzx	eax, word ptr [eax]
		cmp	ax, 29h
		mov	[ebp+var_4A], ax
		jz	short loc_710084A0
		mov	eax, [ebx]
		jmp	short loc_71008489
; ---------------------------------------------------------------------------
		align 10h

loc_71008430:				; CODE XREF: sub_71008360+12Ej
		mov	edx, [eax+8]

loc_71008433:				; CODE XREF: sub_71008360+138j
		add	edx, 1
		mov	[esp], edx
		mov	[ebp+var_38], 1
		call	ds:_ZN7QString4growEi
		mov	edx, [ebp+var_50]
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZN7QString7reallocEi
		mov	ebx, [ebp+var_50]
		mov	eax, [ebx]
		mov	edx, [eax+8]

loc_7100845E:				; CODE XREF: sub_71008360+136j
		mov	ecx, [eax+0Ch]
		movzx	ebx, [ebp+var_4A]
		add	[ebp+var_48], 2
		mov	[ecx+edx*2], bx
		add	edx, 1
		mov	word ptr [ecx+edx*2], 0
		mov	[eax+8], edx
		mov	edx, [ebp+var_48]
		movzx	edx, word ptr [edx]
		cmp	dx, 29h
		mov	[ebp+var_4A], dx
		jz	short loc_710084A0

loc_71008489:				; CODE XREF: sub_71008360+CAj
		mov	edx, [eax]
		cmp	edx, 1
		jnz	short loc_71008430
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jl	short loc_7100845E
		jmp	short loc_71008433
; ---------------------------------------------------------------------------
		align 10h

loc_710084A0:				; CODE XREF: sub_71008360+C6j
					; sub_71008360+127j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_54]
		add	esp, 74h
		pop	ebx
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_710084B4:				; CODE XREF: sub_71008360+6Fj
		add	edx, 2
		mov	[ebp+var_48], edx
		jmp	loc_710083D5
; ---------------------------------------------------------------------------
		align 10h

loc_710084C0:				; CODE XREF: sub_71008360+9Fj
		add	edx, 2
		mov	[ebp+var_48], edx
		jmp	loc_71008405
sub_71008360	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710084CB	proc near		; DATA XREF: sub_71008360+27o
		add	ebp, 8
		mov	ebx, [ebp-34h]
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_710477B0
		mov	[esp+0], ebx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_710084CB	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71008500	proc near		; CODE XREF: sub_71009870+8Ep
					; sub_710099A0+138p

var_20C		= dword	ptr -20Ch
var_200		= qword	ptr -200h
var_1F8		= qword	ptr -1F8h
var_1F0		= qword	ptr -1F0h
var_1E8		= qword	ptr -1E8h
var_1E0		= dword	ptr -1E0h
var_1DC		= dword	ptr -1DCh
var_1D8		= dword	ptr -1D8h
var_1D1		= byte ptr -1D1h
var_1D0		= dword	ptr -1D0h
var_1CA		= word ptr -1CAh
var_1C8		= qword	ptr -1C8h
var_1C0		= qword	ptr -1C0h
var_1B8		= qword	ptr -1B8h
var_1B0		= qword	ptr -1B0h
var_1A4		= dword	ptr -1A4h
var_1A0		= dword	ptr -1A0h
var_19C		= dword	ptr -19Ch
var_198		= dword	ptr -198h
var_194		= dword	ptr -194h
var_190		= qword	ptr -190h
var_184		= dword	ptr -184h
var_180		= qword	ptr -180h
var_178		= qword	ptr -178h
var_16B		= byte ptr -16Bh
var_16A		= word ptr -16Ah
var_168		= dword	ptr -168h
var_164		= dword	ptr -164h
var_160		= dword	ptr -160h
var_15C		= dword	ptr -15Ch
var_158		= dword	ptr -158h
var_154		= dword	ptr -154h
var_150		= word ptr -150h
var_14E		= word ptr -14Eh
var_14C		= byte ptr -14Ch
var_148		= dword	ptr -148h
var_134		= dword	ptr -134h
var_130		= dword	ptr -130h
var_12C		= dword	ptr -12Ch
var_128		= dword	ptr -128h
var_124		= dword	ptr -124h
var_118		= dword	ptr -118h
var_114		= dword	ptr -114h
var_110		= dword	ptr -110h
var_108		= byte ptr -108h
var_C0		= qword	ptr -0C0h
var_B8		= qword	ptr -0B8h
var_B0		= qword	ptr -0B0h
var_A8		= qword	ptr -0A8h
var_A0		= qword	ptr -0A0h
var_98		= qword	ptr -98h
var_90		= qword	ptr -90h
var_88		= qword	ptr -88h
var_80		= qword	ptr -80h
var_78		= qword	ptr -78h
var_70		= qword	ptr -70h
var_68		= qword	ptr -68h
var_60		= qword	ptr -60h
var_58		= qword	ptr -58h
var_50		= qword	ptr -50h
var_48		= qword	ptr -48h
var_40		= qword	ptr -40h
var_38		= qword	ptr -38h
var_30		= qword	ptr -30h
var_28		= qword	ptr -28h
var_20		= qword	ptr -20h
var_18		= qword	ptr -18h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 250h
		mov	[ebp+var_1D0], eax
		lea	eax, [ebp+var_8]
		mov	[ebp+var_12C], eax
		lea	eax, [ebp+var_14C]
		mov	[ebp+var_198], edx
		mov	[esp], eax
		mov	[ebp+var_134], offset sub_710525B0
		mov	[ebp+var_130], offset word_71052EB2
		mov	[ebp+var_128], offset sub_7100981E
		mov	[ebp+var_124], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+var_1D0]
		mov	eax, [edx]
		test	eax, eax
		jz	loc_710097D5
		mov	ecx, [ebp+var_1D0]
		mov	edx, [eax]
		mov	eax, [ecx+4]
		add	eax, eax
		add	eax, [edx+0Ch]

loc_71008572:				; CODE XREF: sub_71008500+12DDj
		fldz
		mov	esi, [ebp+var_1D0]
		fst	[ebp+var_1B0]
		mov	[ebp+var_C], eax
		fst	[ebp+var_1B8]
		mov	edx, [esi+8]
		mov	[ebp+var_16B], 0
		fst	[ebp+var_178]
		lea	edx, [eax+edx*2]
		fst	[ebp+var_180]
		mov	[ebp+var_1A4], edx
		mov	edx, ds:_ZNK5QChar7isSpaceEv
		fst	[ebp+var_1C0]
		fstp	[ebp+var_1C8]
		mov	[ebp+var_15C], edx

loc_710085C0:				; CODE XREF: sub_71008500+3F2j
		cmp	[ebp+var_1A4], eax
		jnz	short loc_710085D9
		jmp	loc_710097E2
; ---------------------------------------------------------------------------
		align 10h

loc_710085D0:				; CODE XREF: sub_71008500+EEj
		mov	eax, [ebp+var_C]
		add	eax, 2
		mov	[ebp+var_C], eax

loc_710085D9:				; CODE XREF: sub_71008500+C6j
		mov	[esp], eax
		mov	[ebp+var_148], 0FFFFFFFFh
		call	ds:_ZNK5QChar7isSpaceEv
		test	al, al
		jnz	short loc_710085D0
		mov	eax, [ebp+var_C]
		mov	edx, [ebp+var_1A4]
		mov	esi, [ebp+var_1A4]
		mov	[ebp+var_114], 0
		movzx	ecx, word ptr [eax]
		add	eax, 2
		mov	[ebp+var_C], eax
		movzx	esi, word ptr [esi]
		mov	word ptr [edx],	0
		mov	edx, ds:_ZNK5QChar7isSpaceEv
		mov	[ebp+var_16A], cx
		lea	ecx, [ebp+var_108]
		mov	[ebp+var_20C], ecx
		mov	[ebp+var_1CA], si
		mov	[ebp+var_110], ecx
		mov	[ebp+var_118], 8
		mov	[ebp+var_158], edx
		jmp	short loc_7100865B
; ---------------------------------------------------------------------------

loc_71008652:				; CODE XREF: sub_71008500+170j
		mov	eax, [ebp+var_C]
		add	eax, 2
		mov	[ebp+var_C], eax

loc_7100865B:				; CODE XREF: sub_71008500+150j
		mov	[esp], eax
		mov	[ebp+var_148], 1
		call	[ebp+var_158]
		test	al, al
		jnz	short loc_71008652

loc_71008672:				; CODE XREF: sub_71008500+96Ej
		mov	eax, [ebp+var_C]
		movzx	eax, word ptr [eax]
		movzx	edx, ax
		mov	ecx, edx
		sar	ecx, 4
		cmp	ecx, 3
		jz	loc_71008DC3

loc_71008689:				; CODE XREF: sub_71008500+8D1j
		cmp	ax, 2Dh
		jz	loc_71008DD7
		cmp	ax, 2Bh
		jz	loc_71008DD7
		cmp	ax, 2Eh
		jz	loc_71008DD7
		movzx	edx, [ebp+var_1CA]
		mov	eax, [ebp+var_1A4]
		cmp	[ebp+var_16A], 7Ah
		mov	[eax], dx
		jz	loc_71009685
		cmp	[ebp+var_16A], 5Ah
		jz	loc_71009685

loc_710086D3:				; CODE XREF: sub_71008500+11B9j
		mov	edx, [ebp+var_114]
		mov	eax, [ebp+var_110]
		test	edx, edx
		mov	[ebp+var_164], eax
		mov	[ebp+var_168], edx
		jle	loc_710088CE
		mov	ecx, ds:_ZN12QPainterPath6quadToERK7QPointFS2_
		mov	[ebp+var_19C], ecx
		mov	[ebp+var_1A0], ecx

loc_71008705:				; CODE XREF: sub_71008500+2D8j
		movzx	eax, [ebp+var_16A]
		sub	eax, 41h
		cmp	ax, 39h		; switch 58 cases
		jbe	short loc_71008763

loc_71008715:				; CODE XREF: sub_71008500+266j
					; DATA XREF: .rdata:off_71059080o
		mov	eax, [ebp+var_110] ; jumptable 71008766	default	case
		cmp	eax, [ebp+var_20C]
		mov	[ebp+var_1D1], 0
		jz	short loc_71008744
		mov	[esp], eax
		mov	[ebp+var_148], 0FFFFFFFFh
		call	ds:_Z5qFreePv
		mov	[ebp+var_1D1], 0

loc_71008744:				; CODE XREF: sub_71008500+228j
					; sub_71008500+12E9j
		lea	eax, [ebp+var_14C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_1D1]
		add	esp, 250h
		pop	ebx
		pop	esi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_71008763:				; CODE XREF: sub_71008500+213j
		movzx	eax, ax
		jmp	ds:off_71059080[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_7100876D:				; CODE XREF: sub_71008500+266j
					; DATA XREF: .rdata:off_71059080o
		mov	edx, [ebp+var_164] ; jumptable 71008766	case 53
		lea	eax, [ebp+var_B0]
		fld	[ebp+var_178]
		sub	[ebp+var_168], 1
		fadd	qword ptr [edx]
		add	edx, 8
		mov	[esp+4], eax
		mov	eax, [ebp+var_198]
		mov	[ebp+var_164], edx
		mov	[ebp+var_148], 1
		fst	[ebp+var_178]
		fld	[ebp+var_180]
		fstp	[ebp+var_B0]
		fstp	[ebp+var_A8]
		mov	[esp], eax
		call	ds:_ZN12QPainterPath6lineToERK7QPointF
		mov	[ebp+var_16B], 76h
		lea	esi, [esi+0]

loc_710087D0:				; CODE XREF: sub_71008500+3A9j
					; sub_71008500+49Dj ...
		mov	eax, [ebp+var_168]
		test	eax, eax
		jg	loc_71008705
		mov	eax, [ebp+var_110]
		mov	[ebp+var_164], eax
		jmp	loc_710088CE
; ---------------------------------------------------------------------------
		align 10h

loc_710087F0:				; CODE XREF: sub_71008500+266j
					; DATA XREF: .rdata:off_71059080o
		cmp	[ebp+var_168], 1 ; jumptable 71008766 case 51
		jz	loc_710096BE
		mov	eax, [ebp+var_164]
		fld	[ebp+var_178]
		cmp	[ebp+var_16B], 51h
		fadd	qword ptr [eax+8]
		fld	[ebp+var_180]
		fadd	qword ptr [eax]
		fstp	[ebp+var_40]
		fstp	[ebp+var_38]
		jnz	loc_7100911D

loc_71008827:				; CODE XREF: sub_71008500+C24j
					; sub_71008500+C31j ...
		fld	[ebp+var_178]
		fadd	st, st
		fsub	[ebp+var_1B8]
		fstp	[ebp+var_28]
		fld	[ebp+var_180]
		fadd	st, st
		fsub	[ebp+var_1B0]
		fstp	[ebp+var_30]

loc_71008849:				; CODE XREF: sub_71008500+C56j
		mov	ecx, [ebp+var_198]
		lea	eax, [ebp+var_40]
		lea	edx, [ebp+var_30]
		mov	[esp+8], eax
		mov	[esp+4], edx
		mov	[esp], ecx
		mov	[ebp+var_148], 1
		call	[ebp+var_19C]
		fld	[ebp+var_28]
		fstp	[ebp+var_1B8]
		fld	[ebp+var_30]
		fstp	[ebp+var_1B0]
		fld	[ebp+var_40]
		fstp	[ebp+var_180]
		fld	[ebp+var_38]
		add	[ebp+var_164], 10h
		sub	[ebp+var_168], 2
		fstp	[ebp+var_178]
		mov	[ebp+var_16B], 74h
		jmp	loc_710087D0
; ---------------------------------------------------------------------------

loc_710088AE:				; CODE XREF: sub_71008500+266j
					; DATA XREF: .rdata:off_71059080o
		cmp	[ebp+var_168], 3 ; jumptable 71008766 case 50
		jg	loc_7100900D
		mov	[ebp+var_16B], 73h

loc_710088C2:				; CODE XREF: sub_71008500+40Bj
					; sub_71008500+58Fj ...
		mov	ecx, [ebp+var_110]
		mov	[ebp+var_164], ecx

loc_710088CE:				; CODE XREF: sub_71008500+1EDj
					; sub_71008500+2EAj
		mov	esi, [ebp+var_164]
		cmp	[ebp+var_20C], esi
		jz	short loc_710088EF
		mov	[esp], esi
		mov	[ebp+var_148], 0FFFFFFFFh
		call	ds:_Z5qFreePv

loc_710088EF:				; CODE XREF: sub_71008500+3DAj
		mov	eax, [ebp+var_C]
		jmp	loc_710085C0
; ---------------------------------------------------------------------------

loc_710088F7:				; CODE XREF: sub_71008500+266j
					; DATA XREF: .rdata:off_71059080o
		cmp	[ebp+var_168], 3 ; jumptable 71008766 case 48
		jg	loc_71009207
		mov	[ebp+var_16B], 71h
		jmp	short loc_710088C2
; ---------------------------------------------------------------------------

loc_7100890D:				; CODE XREF: sub_71008500+266j
					; DATA XREF: .rdata:off_71059080o
		cmp	[ebp+var_168], 1 ; jumptable 71008766 case 44
		jz	loc_710091E3
		mov	esi, [ebp+var_164]
		lea	eax, [ebp+var_50]
		fld	[ebp+var_180]
		sub	[ebp+var_168], 2
		fadd	qword ptr [esi]
		fst	[ebp+var_1C8]
		fld	[ebp+var_178]
		fadd	qword ptr [esi+8]
		add	esi, 10h
		mov	[esp+4], eax
		mov	eax, [ebp+var_198]
		mov	[ebp+var_164], esi
		mov	[ebp+var_148], 1
		fst	[ebp+var_1C0]
		fxch	st(1)
		fstp	[ebp+var_50]
		fstp	[ebp+var_48]
		mov	[esp], eax
		call	ds:_ZN12QPainterPath6moveToERK7QPointF
		fld	[ebp+var_1C0]
		fstp	[ebp+var_178]
		fld	[ebp+var_1C8]
		fstp	[ebp+var_180]
		mov	[ebp+var_16B], 6Ch
		mov	[ebp+var_16A], 6Ch
		jmp	loc_710087D0
; ---------------------------------------------------------------------------

loc_710089A2:				; CODE XREF: sub_71008500+266j
					; DATA XREF: .rdata:off_71059080o
		cmp	[ebp+var_168], 1 ; jumptable 71008766 case 43
		jz	loc_710091D7
		mov	eax, [ebp+var_164]
		fld	[ebp+var_180]
		sub	[ebp+var_168], 2
		fadd	qword ptr [eax]
		fst	[ebp+var_180]
		fld	[ebp+var_178]
		fadd	qword ptr [eax+8]
		add	eax, 10h
		mov	[ebp+var_164], eax
		lea	eax, [ebp+var_70]
		mov	[esp+4], eax
		mov	eax, [ebp+var_198]
		mov	[ebp+var_148], 1
		fst	[ebp+var_178]
		fxch	st(1)
		fstp	[ebp+var_70]
		fstp	[ebp+var_68]
		mov	[esp], eax
		call	ds:_ZN12QPainterPath6lineToERK7QPointF
		mov	[ebp+var_16B], 6Ch
		jmp	loc_710087D0
; ---------------------------------------------------------------------------

loc_71008A16:				; CODE XREF: sub_71008500+266j
					; DATA XREF: .rdata:off_71059080o
		mov	edx, [ebp+var_164] ; jumptable 71008766	case 39
		lea	eax, [ebp+var_90]
		fld	[ebp+var_180]
		sub	[ebp+var_168], 1
		fadd	qword ptr [edx]
		add	edx, 8
		mov	[esp+4], eax
		mov	eax, [ebp+var_198]
		mov	[ebp+var_164], edx
		mov	[ebp+var_148], 1
		fst	[ebp+var_180]
		fstp	[ebp+var_90]
		fld	[ebp+var_178]
		fstp	[ebp+var_88]
		mov	[esp], eax
		call	ds:_ZN12QPainterPath6lineToERK7QPointF
		mov	[ebp+var_16B], 68h
		jmp	loc_710087D0
; ---------------------------------------------------------------------------

loc_71008A7B:				; CODE XREF: sub_71008500+266j
					; DATA XREF: .rdata:off_71059080o
		cmp	[ebp+var_168], 5 ; jumptable 71008766 case 34
		jg	loc_710095CA
		mov	[ebp+var_16B], 63h
		jmp	loc_710088C2
; ---------------------------------------------------------------------------

loc_71008A94:				; CODE XREF: sub_71008500+266j
					; DATA XREF: .rdata:off_71059080o
		cmp	[ebp+var_168], 6 ; jumptable 71008766 case 32
		jg	loc_710094BE
		mov	[ebp+var_16B], 61h
		jmp	loc_710088C2
; ---------------------------------------------------------------------------

loc_71008AAD:				; CODE XREF: sub_71008500+266j
					; DATA XREF: .rdata:off_71059080o
		mov	eax, [ebp+var_198] ; jumptable 71008766	cases 25,57
		sub	[ebp+var_168], 1
		add	[ebp+var_164], 8
		mov	[esp], eax
		mov	[ebp+var_148], 1
		call	ds:_ZN12QPainterPath12closeSubpathEv
		movzx	edx, byte ptr [ebp+var_16A]
		fld	[ebp+var_1C0]
		fstp	[ebp+var_178]
		fld	[ebp+var_1C8]
		mov	[ebp+var_16B], dl
		fstp	[ebp+var_180]
		jmp	loc_710087D0
; ---------------------------------------------------------------------------

loc_71008AFE:				; CODE XREF: sub_71008500+266j
					; DATA XREF: .rdata:off_71059080o
		mov	edx, [ebp+var_164] ; jumptable 71008766	case 21
		lea	eax, [ebp+var_C0]
		sub	[ebp+var_168], 1
		fld	qword ptr [edx]
		add	edx, 8
		mov	[esp+4], eax
		mov	eax, [ebp+var_198]
		fst	[ebp+var_178]
		fld	[ebp+var_180]
		fstp	[ebp+var_C0]
		mov	[ebp+var_164], edx
		fstp	[ebp+var_B8]
		mov	[esp], eax
		mov	[ebp+var_148], 1
		call	ds:_ZN12QPainterPath6lineToERK7QPointF
		mov	[ebp+var_16B], 56h
		jmp	loc_710087D0
; ---------------------------------------------------------------------------

loc_71008B5D:				; CODE XREF: sub_71008500+266j
					; DATA XREF: .rdata:off_71059080o
		cmp	[ebp+var_168], 1 ; jumptable 71008766 case 19
		jz	loc_710096CA
		mov	eax, [ebp+var_164]
		cmp	[ebp+var_16B], 51h
		fld	qword ptr [eax+8]
		fld	qword ptr [eax]
		fstp	[ebp+var_30]
		fstp	[ebp+var_28]
		jnz	loc_710090DF

loc_71008B88:				; CODE XREF: sub_71008500+BE6j
					; sub_71008500+BF3j ...
		fld	[ebp+var_178]
		fadd	st, st
		fsub	[ebp+var_1B8]
		fstp	[ebp+var_38]
		fld	[ebp+var_180]
		fadd	st, st
		fsub	[ebp+var_1B0]
		fstp	[ebp+var_40]

loc_71008BAA:				; CODE XREF: sub_71008500+C18j
		mov	ecx, [ebp+var_198]
		lea	eax, [ebp+var_30]
		lea	edx, [ebp+var_40]
		mov	[esp+8], eax
		mov	[esp+4], edx
		mov	[esp], ecx
		mov	[ebp+var_148], 1
		call	ds:_ZN12QPainterPath6quadToERK7QPointFS2_
		fld	[ebp+var_38]
		fstp	[ebp+var_1B8]
		fld	[ebp+var_40]
		fstp	[ebp+var_1B0]
		fld	[ebp+var_30]
		fstp	[ebp+var_180]
		fld	[ebp+var_28]
		add	[ebp+var_164], 10h
		sub	[ebp+var_168], 2
		fstp	[ebp+var_178]
		mov	[ebp+var_16B], 54h
		jmp	loc_710087D0
; ---------------------------------------------------------------------------

loc_71008C0F:				; CODE XREF: sub_71008500+266j
					; DATA XREF: .rdata:off_71059080o
		cmp	[ebp+var_168], 3 ; jumptable 71008766 case 18
		jg	loc_71008F53
		mov	[ebp+var_16B], 53h
		jmp	loc_710088C2
; ---------------------------------------------------------------------------

loc_71008C28:				; CODE XREF: sub_71008500+266j
					; DATA XREF: .rdata:off_71059080o
		cmp	[ebp+var_168], 3 ; jumptable 71008766 case 16
		jg	loc_7100943A
		mov	[ebp+var_16B], 51h
		jmp	loc_710088C2
; ---------------------------------------------------------------------------

loc_71008C41:				; CODE XREF: sub_71008500+266j
					; DATA XREF: .rdata:off_71059080o
		cmp	[ebp+var_168], 5 ; jumptable 71008766 case 2
		jg	loc_710093A3
		mov	[ebp+var_16B], 43h
		jmp	loc_710088C2
; ---------------------------------------------------------------------------

loc_71008C5A:				; CODE XREF: sub_71008500+266j
					; DATA XREF: .rdata:off_71059080o
		cmp	[ebp+var_168], 6 ; jumptable 71008766 case 0
		jg	loc_710092A3
		mov	[ebp+var_16B], 41h
		jmp	loc_710088C2
; ---------------------------------------------------------------------------

loc_71008C73:				; CODE XREF: sub_71008500+266j
					; DATA XREF: .rdata:off_71059080o
		cmp	[ebp+var_168], 1 ; jumptable 71008766 case 11
		jz	loc_710091FB
		mov	edx, [ebp+var_164]
		lea	eax, [ebp+var_80]
		sub	[ebp+var_168], 2
		fld	qword ptr [edx]
		fst	[ebp+var_180]
		fld	qword ptr [edx+8]
		add	edx, 10h
		mov	[esp+4], eax
		mov	eax, [ebp+var_198]
		fst	[ebp+var_178]
		fxch	st(1)
		fstp	[ebp+var_80]
		mov	[ebp+var_164], edx
		fstp	[ebp+var_78]
		mov	[ebp+var_148], 1
		mov	[esp], eax
		call	ds:_ZN12QPainterPath6lineToERK7QPointF
		mov	[ebp+var_16B], 4Ch
		jmp	loc_710087D0
; ---------------------------------------------------------------------------

loc_71008CDB:				; CODE XREF: sub_71008500+266j
					; DATA XREF: .rdata:off_71059080o
		mov	edx, [ebp+var_164] ; jumptable 71008766	case 7
		lea	eax, [ebp+var_A0]
		sub	[ebp+var_168], 1
		fld	qword ptr [edx]
		add	edx, 8
		mov	[esp+4], eax
		mov	eax, [ebp+var_198]
		fst	[ebp+var_180]
		fstp	[ebp+var_A0]
		fld	[ebp+var_178]
		mov	[ebp+var_164], edx
		fstp	[ebp+var_98]
		mov	[esp], eax
		mov	[ebp+var_148], 1
		call	ds:_ZN12QPainterPath6lineToERK7QPointF
		mov	[ebp+var_16B], 48h
		jmp	loc_710087D0
; ---------------------------------------------------------------------------

loc_71008D3A:				; CODE XREF: sub_71008500+266j
					; DATA XREF: .rdata:off_71059080o
		cmp	[ebp+var_168], 1 ; jumptable 71008766 case 12
		jz	loc_710091EF
		mov	edx, [ebp+var_164]
		lea	eax, [ebp+var_60]
		sub	[ebp+var_168], 2
		fld	qword ptr [edx]
		fst	[ebp+var_1C8]
		fld	qword ptr [edx+8]
		add	edx, 10h
		mov	[esp+4], eax
		mov	eax, [ebp+var_198]
		fst	[ebp+var_1C0]
		fxch	st(1)
		fstp	[ebp+var_60]
		mov	[ebp+var_164], edx
		fstp	[ebp+var_58]
		mov	[ebp+var_148], 1
		mov	[esp], eax
		call	ds:_ZN12QPainterPath6moveToERK7QPointF
		fld	[ebp+var_1C0]
		fstp	[ebp+var_178]
		fld	[ebp+var_1C8]
		fstp	[ebp+var_180]
		mov	[ebp+var_16B], 4Ch
		mov	[ebp+var_16A], 4Ch
		jmp	loc_710087D0
; ---------------------------------------------------------------------------

loc_71008DC3:				; CODE XREF: sub_71008500+183j
		mov	ecx, edx
		mov	edx, 3FFh
		and	ecx, 0Fh
		sar	edx, cl
		test	edx, edx
		jz	loc_71008689

loc_71008DD7:				; CODE XREF: sub_71008500+18Dj
					; sub_71008500+197j ...
		lea	eax, [ebp+var_C]
		mov	[ebp+var_148], 1
		call	sub_710070E0
		mov	eax, [ebp+var_114]
		fstp	[ebp+var_190]
		cmp	eax, [ebp+var_118]
		mov	[ebp+var_160], eax
		jz	short loc_71008E7F

loc_71008E03:				; CODE XREF: sub_71008500+A29j
					; sub_71008500+A35j ...
		mov	eax, [ebp+var_160]
		mov	ecx, [ebp+var_160]
		fld	[ebp+var_190]
		add	eax, 1
		mov	[ebp+var_114], eax
		mov	eax, [ebp+var_110]
		fstp	qword ptr [eax+ecx*8]
		mov	eax, [ebp+var_C]
		jmp	short loc_71008E39
; ---------------------------------------------------------------------------
		align 10h

loc_71008E30:				; CODE XREF: sub_71008500+94Ej
		mov	eax, [ebp+var_C]
		add	eax, 2
		mov	[ebp+var_C], eax

loc_71008E39:				; CODE XREF: sub_71008500+92Aj
		mov	[esp], eax
		mov	[ebp+var_148], 1
		call	[ebp+var_15C]
		test	al, al
		jnz	short loc_71008E30
		mov	eax, [ebp+var_C]
		cmp	word ptr [eax],	2Ch
		jz	short loc_71008E77

loc_71008E59:				; CODE XREF: sub_71008500+97Dj
		mov	[esp], eax
		mov	[ebp+var_148], 1
		call	ds:_ZNK5QChar7isSpaceEv
		test	al, al
		jz	loc_71008672
		mov	eax, [ebp+var_C]

loc_71008E77:				; CODE XREF: sub_71008500+957j
		add	eax, 2
		mov	[ebp+var_C], eax
		jmp	short loc_71008E59
; ---------------------------------------------------------------------------

loc_71008E7F:				; CODE XREF: sub_71008500+901j
		mov	ecx, [ebp+var_160]
		mov	esi, [ebp+var_110]
		add	ecx, ecx
		cmp	[ebp+var_160], ecx
		mov	[ebp+var_194], ecx
		mov	[ebp+var_184], esi
		jz	short loc_71008F11
		mov	eax, [ebp+var_160]
		mov	[ebp+var_148], 1
		shl	eax, 4
		mov	[esp], eax
		call	ds:_Z7qMallocj
		test	eax, eax
		mov	[ebp+var_110], eax
		jz	loc_710097A4

loc_71008ECB:				; CODE XREF: sub_71008500+12B2j
		mov	eax, [ebp+var_194]
		mov	edx, [ebp+var_184]
		mov	[ebp+var_114], 0
		mov	[ebp+var_148], 1
		mov	[ebp+var_118], eax
		mov	eax, [ebp+var_160]
		mov	[esp+4], edx
		shl	eax, 3
		mov	[esp+8], eax
		mov	eax, [ebp+var_110]
		mov	[esp], eax
		call	ds:_Z8qMemCopyPvPKvj

loc_71008F11:				; CODE XREF: sub_71008500+99Fj
		mov	eax, [ebp+var_160]
		mov	edx, [ebp+var_184]
		cmp	[ebp+var_20C], edx
		mov	[ebp+var_114], eax
		jz	loc_71008E03
		cmp	edx, [ebp+var_110]
		jz	loc_71008E03
		mov	[esp], edx
		mov	[ebp+var_148], 1
		call	ds:_Z5qFreePv
		jmp	loc_71008E03
; ---------------------------------------------------------------------------

loc_71008F53:				; CODE XREF: sub_71008500+716j
		cmp	[ebp+var_16B], 43h
		jnz	loc_7100915B

loc_71008F60:				; CODE XREF: sub_71008500+C62j
					; sub_71008500+C6Fj ...
		fld	[ebp+var_178]
		fadd	st, st
		fsub	[ebp+var_1B8]
		fstp	[ebp+var_18]
		fld	[ebp+var_180]
		fadd	st, st
		fsub	[ebp+var_1B0]
		fstp	[ebp+var_20]

loc_71008F82:				; CODE XREF: sub_71008500+C94j
		mov	eax, [ebp+var_164]
		lea	edx, [ebp+var_40]
		mov	esi, [ebp+var_198]
		lea	ecx, [ebp+var_30]
		sub	[ebp+var_168], 4
		fld	qword ptr [eax+8]
		fld	qword ptr [eax]
		fstp	[ebp+var_30]
		fstp	[ebp+var_28]
		fld	qword ptr [eax+18h]
		fld	qword ptr [eax+10h]
		add	eax, 20h
		fstp	[ebp+var_40]
		mov	[ebp+var_164], eax
		lea	eax, [ebp+var_20]
		fstp	[ebp+var_38]
		mov	[esp+0Ch], edx
		mov	[esp+8], ecx
		mov	[esp+4], eax
		mov	[esp], esi
		mov	[ebp+var_148], 1
		call	ds:_ZN12QPainterPath7cubicToERK7QPointFS2_S2_
		fld	[ebp+var_28]
		fstp	[ebp+var_1B8]
		fld	[ebp+var_30]
		fstp	[ebp+var_1B0]
		fld	[ebp+var_40]
		fstp	[ebp+var_180]
		fld	[ebp+var_38]
		fstp	[ebp+var_178]
		mov	[ebp+var_16B], 53h
		jmp	loc_710087D0
; ---------------------------------------------------------------------------

loc_7100900D:				; CODE XREF: sub_71008500+3B5j
		cmp	[ebp+var_16B], 43h
		jnz	loc_71009199

loc_7100901A:				; CODE XREF: sub_71008500+CA0j
					; sub_71008500+CADj ...
		fld	[ebp+var_178]
		fadd	st, st
		fsub	[ebp+var_1B8]
		fstp	[ebp+var_38]
		fld	[ebp+var_180]
		fadd	st, st
		fsub	[ebp+var_1B0]
		fstp	[ebp+var_40]

loc_7100903C:				; CODE XREF: sub_71008500+CD2j
		mov	eax, [ebp+var_164]
		lea	edx, [ebp+var_30]
		fld	[ebp+var_178]
		lea	ecx, [ebp+var_40]
		mov	esi, [ebp+var_198]
		sub	[ebp+var_168], 4
		fadd	qword ptr [eax+8]
		fld	[ebp+var_180]
		fadd	qword ptr [eax]
		fstp	[ebp+var_30]
		fstp	[ebp+var_28]
		fld	[ebp+var_178]
		fadd	qword ptr [eax+18h]
		fld	[ebp+var_180]
		fadd	qword ptr [eax+10h]
		add	eax, 20h
		mov	[ebp+var_164], eax
		lea	eax, [ebp+var_20]
		mov	[esp+0Ch], eax
		mov	[esp+8], edx
		fstp	[ebp+var_20]
		fstp	[ebp+var_18]
		mov	[esp+4], ecx
		mov	[esp], esi
		mov	[ebp+var_148], 1
		call	ds:_ZN12QPainterPath7cubicToERK7QPointFS2_S2_
		fld	[ebp+var_28]
		fstp	[ebp+var_1B8]
		fld	[ebp+var_30]
		fstp	[ebp+var_1B0]
		fld	[ebp+var_20]
		fstp	[ebp+var_180]
		fld	[ebp+var_18]
		fstp	[ebp+var_178]
		mov	[ebp+var_16B], 73h
		jmp	loc_710087D0
; ---------------------------------------------------------------------------

loc_710090DF:				; CODE XREF: sub_71008500+682j
		cmp	[ebp+var_16B], 71h
		jz	loc_71008B88
		cmp	[ebp+var_16B], 54h
		jz	loc_71008B88
		cmp	[ebp+var_16B], 74h
		jz	loc_71008B88
		fld	[ebp+var_178]
		fstp	[ebp+var_38]
		fld	[ebp+var_180]
		fstp	[ebp+var_40]
		jmp	loc_71008BAA
; ---------------------------------------------------------------------------

loc_7100911D:				; CODE XREF: sub_71008500+321j
		cmp	[ebp+var_16B], 71h
		jz	loc_71008827
		cmp	[ebp+var_16B], 54h
		jz	loc_71008827
		cmp	[ebp+var_16B], 74h
		jz	loc_71008827
		fld	[ebp+var_178]
		fstp	[ebp+var_28]
		fld	[ebp+var_180]
		fstp	[ebp+var_30]
		jmp	loc_71008849
; ---------------------------------------------------------------------------

loc_7100915B:				; CODE XREF: sub_71008500+A5Aj
		cmp	[ebp+var_16B], 63h
		jz	loc_71008F60
		cmp	[ebp+var_16B], 53h
		jz	loc_71008F60
		cmp	[ebp+var_16B], 73h
		jz	loc_71008F60
		fld	[ebp+var_178]
		fstp	[ebp+var_18]
		fld	[ebp+var_180]
		fstp	[ebp+var_20]
		jmp	loc_71008F82
; ---------------------------------------------------------------------------

loc_71009199:				; CODE XREF: sub_71008500+B14j
		cmp	[ebp+var_16B], 63h
		jz	loc_7100901A
		cmp	[ebp+var_16B], 53h
		jz	loc_7100901A
		cmp	[ebp+var_16B], 73h
		jz	loc_7100901A
		fld	[ebp+var_178]
		fstp	[ebp+var_38]
		fld	[ebp+var_180]
		fstp	[ebp+var_40]
		jmp	loc_7100903C
; ---------------------------------------------------------------------------

loc_710091D7:				; CODE XREF: sub_71008500+4A9j
		mov	[ebp+var_16B], 6Ch
		jmp	loc_710088C2
; ---------------------------------------------------------------------------

loc_710091E3:				; CODE XREF: sub_71008500+414j
		mov	[ebp+var_16B], 6Dh
		jmp	loc_710088C2
; ---------------------------------------------------------------------------

loc_710091EF:				; CODE XREF: sub_71008500+841j
		mov	[ebp+var_16B], 4Dh
		jmp	loc_710088C2
; ---------------------------------------------------------------------------

loc_710091FB:				; CODE XREF: sub_71008500+77Aj
		mov	[ebp+var_16B], 4Ch
		jmp	loc_710088C2
; ---------------------------------------------------------------------------

loc_71009207:				; CODE XREF: sub_71008500+3FEj
		mov	eax, [ebp+var_164]
		lea	edx, [ebp+var_30]
		fld	[ebp+var_178]
		lea	ecx, [ebp+var_40]
		mov	esi, [ebp+var_198]
		sub	[ebp+var_168], 4
		fadd	qword ptr [eax+8]
		fld	[ebp+var_180]
		fadd	qword ptr [eax]
		fstp	[ebp+var_40]
		fstp	[ebp+var_38]
		fld	[ebp+var_178]
		fadd	qword ptr [eax+18h]
		fld	[ebp+var_180]
		fadd	qword ptr [eax+10h]
		add	eax, 20h
		mov	[ebp+var_164], eax
		mov	[esp+8], edx
		mov	[esp+4], ecx
		mov	[esp], esi
		fstp	[ebp+var_30]
		fstp	[ebp+var_28]
		mov	[ebp+var_148], 1
		call	ds:_ZN12QPainterPath6quadToERK7QPointFS2_
		fld	[ebp+var_38]
		fstp	[ebp+var_1B8]
		fld	[ebp+var_40]
		fstp	[ebp+var_1B0]
		fld	[ebp+var_30]
		fstp	[ebp+var_180]
		fld	[ebp+var_28]
		fstp	[ebp+var_178]
		mov	[ebp+var_16B], 71h
		jmp	loc_710087D0
; ---------------------------------------------------------------------------

loc_710092A3:				; CODE XREF: sub_71008500+761j
		mov	eax, [ebp+var_164]
		mov	esi, [ebp+var_164]
		sub	[ebp+var_168], 7
		fld	qword ptr [eax]
		mov	ecx, eax
		mov	edx, eax
		fld	qword ptr [esi+28h]
		mov	ebx, eax
		add	eax, 20h
		fstp	[ebp+var_1F0]
		add	ebx, 18h
		fld	qword ptr [esi+30h]
		add	edx, 10h
		add	ecx, 8
		fstp	[ebp+var_1E8]
		add	esi, 38h
		fld	qword ptr [eax]
		fnstcw	[ebp+var_14E]
		mov	[ebp+var_164], esi
		movzx	eax, [ebp+var_14E]
		mov	ah, 0Ch
		mov	[ebp+var_150], ax
		fldcw	[ebp+var_150]
		fistp	[ebp+var_154]
		fldcw	[ebp+var_14E]
		mov	eax, [ebp+var_154]
		fld	qword ptr [ebx]
		fldcw	[ebp+var_150]
		fistp	[ebp+var_154]
		fldcw	[ebp+var_14E]
		mov	ebx, [ebp+var_154]
		fld	[ebp+var_178]
		fstp	qword ptr [esp+30h] ; double
		fld	[ebp+var_180]
		fstp	qword ptr [esp+28h] ; double
		fld	[ebp+var_1E8]
		fstp	qword ptr [esp+20h] ; double
		fld	[ebp+var_1F0]
		fstp	qword ptr [esp+18h] ; double
		fld	qword ptr [edx]
		mov	edx, ebx
		fstp	qword ptr [esp+10h] ; double
		fld	qword ptr [ecx]
		mov	ecx, eax
		fstp	qword ptr [esp+8] ; double
		mov	eax, [ebp+var_198]
		fstp	qword ptr [esp]	; double
		mov	[ebp+var_148], 1
		call	sub_710078F0
		fld	[ebp+var_1E8]
		fstp	[ebp+var_178]
		fld	[ebp+var_1F0]
		fstp	[ebp+var_180]
		mov	[ebp+var_16B], 41h
		jmp	loc_710087D0
; ---------------------------------------------------------------------------

loc_710093A3:				; CODE XREF: sub_71008500+748j
		mov	eax, [ebp+var_164]
		lea	edx, [ebp+var_40]
		mov	esi, [ebp+var_198]
		lea	ecx, [ebp+var_30]
		sub	[ebp+var_168], 6
		fld	qword ptr [eax+8]
		fld	qword ptr [eax]
		fstp	[ebp+var_20]
		fstp	[ebp+var_18]
		fld	qword ptr [eax+18h]
		fld	qword ptr [eax+10h]
		fstp	[ebp+var_30]
		fstp	[ebp+var_28]
		fld	qword ptr [eax+28h]
		fld	qword ptr [eax+20h]
		add	eax, 30h
		fstp	[ebp+var_40]
		mov	[ebp+var_164], eax
		lea	eax, [ebp+var_20]
		fstp	[ebp+var_38]
		mov	[esp+0Ch], edx
		mov	[esp+8], ecx
		mov	[esp+4], eax
		mov	[esp], esi
		mov	[ebp+var_148], 1
		call	ds:_ZN12QPainterPath7cubicToERK7QPointFS2_S2_
		fld	[ebp+var_28]
		fstp	[ebp+var_1B8]
		fld	[ebp+var_30]
		fstp	[ebp+var_1B0]
		fld	[ebp+var_40]
		fstp	[ebp+var_180]
		fld	[ebp+var_38]
		fstp	[ebp+var_178]
		mov	[ebp+var_16B], 43h
		jmp	loc_710087D0
; ---------------------------------------------------------------------------

loc_7100943A:				; CODE XREF: sub_71008500+72Fj
		mov	eax, [ebp+var_164]
		lea	edx, [ebp+var_40]
		mov	esi, [ebp+var_198]
		lea	ecx, [ebp+var_30]
		sub	[ebp+var_168], 4
		fld	qword ptr [eax+8]
		fld	qword ptr [eax]
		fstp	[ebp+var_30]
		fstp	[ebp+var_28]
		fld	qword ptr [eax+18h]
		fld	qword ptr [eax+10h]
		add	eax, 20h
		fstp	[ebp+var_40]
		fstp	[ebp+var_38]
		mov	[ebp+var_164], eax
		mov	[esp+8], edx
		mov	[esp+4], ecx
		mov	[esp], esi
		mov	[ebp+var_148], 1
		call	[ebp+var_1A0]
		fld	[ebp+var_28]
		fstp	[ebp+var_1B8]
		fld	[ebp+var_30]
		fstp	[ebp+var_1B0]
		fld	[ebp+var_40]
		fstp	[ebp+var_180]
		fld	[ebp+var_38]
		fstp	[ebp+var_178]
		mov	[ebp+var_16B], 51h
		jmp	loc_710087D0
; ---------------------------------------------------------------------------

loc_710094BE:				; CODE XREF: sub_71008500+59Bj
		mov	eax, [ebp+var_164]
		mov	esi, [ebp+var_164]
		sub	[ebp+var_168], 7
		fld	qword ptr [eax]
		mov	ecx, eax
		mov	edx, eax
		fld	[ebp+var_180]
		mov	ebx, eax
		add	eax, 20h
		fadd	qword ptr [esi+28h]
		add	ebx, 18h
		add	edx, 10h
		add	ecx, 8
		fstp	[ebp+var_200]
		fld	[ebp+var_178]
		fadd	qword ptr [esi+30h]
		add	esi, 38h
		mov	[ebp+var_164], esi
		fstp	[ebp+var_1F8]
		fld	qword ptr [eax]
		fnstcw	[ebp+var_14E]
		movzx	eax, [ebp+var_14E]
		mov	ah, 0Ch
		mov	[ebp+var_150], ax
		fldcw	[ebp+var_150]
		fistp	[ebp+var_154]
		fldcw	[ebp+var_14E]
		mov	eax, [ebp+var_154]
		fld	qword ptr [ebx]
		fldcw	[ebp+var_150]
		fistp	[ebp+var_154]
		fldcw	[ebp+var_14E]
		mov	ebx, [ebp+var_154]
		fld	[ebp+var_178]
		fstp	qword ptr [esp+30h] ; double
		fld	[ebp+var_180]
		fstp	qword ptr [esp+28h] ; double
		fld	[ebp+var_1F8]
		fstp	qword ptr [esp+20h] ; double
		fld	[ebp+var_200]
		fstp	qword ptr [esp+18h] ; double
		fld	qword ptr [edx]
		mov	edx, ebx
		fstp	qword ptr [esp+10h] ; double
		fld	qword ptr [ecx]
		mov	ecx, eax
		mov	eax, [ebp+var_198]
		fstp	qword ptr [esp+8] ; double
		fstp	qword ptr [esp]	; double
		mov	[ebp+var_148], 1
		call	sub_710078F0
		fld	[ebp+var_1F8]
		fstp	[ebp+var_178]
		fld	[ebp+var_200]
		fstp	[ebp+var_180]
		mov	[ebp+var_16B], 61h
		jmp	loc_710087D0
; ---------------------------------------------------------------------------

loc_710095CA:				; CODE XREF: sub_71008500+582j
		mov	edx, [ebp+var_164]
		lea	eax, [ebp+var_20]
		fld	[ebp+var_178]
		lea	ecx, [ebp+var_30]
		lea	esi, [ebp+var_40]
		sub	[ebp+var_168], 6
		fadd	qword ptr [edx+8]
		fld	[ebp+var_180]
		fadd	qword ptr [edx]
		fstp	[ebp+var_40]
		fstp	[ebp+var_38]
		fld	[ebp+var_178]
		fadd	qword ptr [edx+18h]
		fld	[ebp+var_180]
		fadd	qword ptr [edx+10h]
		fstp	[ebp+var_30]
		fstp	[ebp+var_28]
		fld	[ebp+var_178]
		fadd	qword ptr [edx+28h]
		fld	[ebp+var_180]
		fadd	qword ptr [edx+20h]
		add	edx, 30h
		mov	[esp+0Ch], eax
		mov	eax, [ebp+var_198]
		mov	[ebp+var_164], edx
		mov	[esp+8], ecx
		mov	[esp+4], esi
		fstp	[ebp+var_20]
		fstp	[ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_148], 1
		call	ds:_ZN12QPainterPath7cubicToERK7QPointFS2_S2_
		fld	[ebp+var_28]
		fstp	[ebp+var_1B8]
		fld	[ebp+var_30]
		fstp	[ebp+var_1B0]
		fld	[ebp+var_20]
		fstp	[ebp+var_180]
		fld	[ebp+var_18]
		fstp	[ebp+var_178]
		mov	[ebp+var_16B], 63h
		jmp	loc_710087D0
; ---------------------------------------------------------------------------

loc_71009685:				; CODE XREF: sub_71008500+1BFj
					; sub_71008500+1CDj
		mov	edx, [ebp+var_114]
		cmp	edx, [ebp+var_118]
		mov	[ebp+var_1D8], edx
		jz	short loc_710096D6

loc_71009699:				; CODE XREF: sub_71008500+127Aj
					; sub_71008500+1286j ...
		mov	eax, [ebp+var_1D8]
		fldz
		mov	edx, [ebp+var_1D8]
		add	eax, 1
		mov	[ebp+var_114], eax
		mov	eax, [ebp+var_110]
		fstp	qword ptr [eax+edx*8]
		jmp	loc_710086D3
; ---------------------------------------------------------------------------

loc_710096BE:				; CODE XREF: sub_71008500+2F7j
		mov	[ebp+var_16B], 74h
		jmp	loc_710088C2
; ---------------------------------------------------------------------------

loc_710096CA:				; CODE XREF: sub_71008500+664j
		mov	[ebp+var_16B], 54h
		jmp	loc_710088C2
; ---------------------------------------------------------------------------

loc_710096D6:				; CODE XREF: sub_71008500+1197j
		mov	ecx, [ebp+var_110]
		add	edx, edx
		cmp	[ebp+var_1D8], edx
		mov	[ebp+var_1E0], edx
		mov	[ebp+var_1DC], ecx
		jz	short loc_71009762
		mov	eax, [ebp+var_1D8]
		mov	[ebp+var_148], 1
		shl	eax, 4
		mov	[esp], eax
		call	ds:_Z7qMallocj
		test	eax, eax
		mov	[ebp+var_110], eax
		jz	loc_710097EE

loc_7100971C:				; CODE XREF: sub_71008500+12FBj
		mov	eax, [ebp+var_1D8]
		mov	esi, [ebp+var_1E0]
		mov	[ebp+var_114], 0
		mov	[ebp+var_148], 1
		shl	eax, 3
		mov	[esp+8], eax
		mov	eax, [ebp+var_1DC]
		mov	[ebp+var_118], esi
		mov	[esp+4], eax
		mov	eax, [ebp+var_110]
		mov	[esp], eax
		call	ds:_Z8qMemCopyPvPKvj

loc_71009762:				; CODE XREF: sub_71008500+11F0j
		mov	esi, [ebp+var_1D8]
		mov	eax, [ebp+var_1DC]
		cmp	[ebp+var_20C], eax
		mov	[ebp+var_114], esi
		jz	loc_71009699
		cmp	eax, [ebp+var_110]
		jz	loc_71009699
		mov	[esp], eax
		mov	[ebp+var_148], 1
		call	ds:_Z5qFreePv
		jmp	loc_71009699
; ---------------------------------------------------------------------------

loc_710097A4:				; CODE XREF: sub_71008500+9C5j
		call	ds:_Z9qBadAllocv
		mov	edx, [ebp+var_110]
		test	edx, edx
		jnz	loc_71008ECB
		mov	ecx, [ebp+var_184]
		mov	esi, [ebp+var_114]
		mov	[ebp+var_110], ecx
		mov	[ebp+var_160], esi
		jmp	loc_71008E03
; ---------------------------------------------------------------------------

loc_710097D5:				; CODE XREF: sub_71008500+5Cj
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	eax, [eax+0Ch]
		jmp	loc_71008572
; ---------------------------------------------------------------------------

loc_710097E2:				; CODE XREF: sub_71008500+C8j
		mov	[ebp+var_1D1], 1
		jmp	loc_71008744
; ---------------------------------------------------------------------------

loc_710097EE:				; CODE XREF: sub_71008500+1216j
		call	ds:_Z9qBadAllocv
		cmp	[ebp+var_110], 0
		jnz	loc_7100971C
		mov	edx, [ebp+var_1DC]
		mov	ecx, [ebp+var_114]
		mov	[ebp+var_110], edx
		mov	[ebp+var_1D8], ecx
		jmp	loc_71009699
sub_71008500	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7100981E	proc near		; DATA XREF: sub_71008500+3Do
		add	ebp, 8
		mov	edx, [ebp-144h]
		mov	eax, [ebp-110h]
		cmp	eax, [ebp-20Ch]
		mov	[ebp-204h], edx
		jz	short loc_7100984E
		mov	[esp+0], eax
		mov	dword ptr [ebp-148h], 0
		call	ds:_Z5qFreePv

loc_7100984E:				; CODE XREF: sub_7100981E+1Bj
		mov	ecx, [ebp-204h]
		mov	dword ptr [ebp-148h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
sub_7100981E	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71009870	proc near		; DATA XREF: sub_7101E100+E93o

var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_1C		= byte ptr -1Ch
var_10		= byte ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_34], esp
		mov	[ebp+var_44], offset sub_710525B0
		mov	[ebp+var_40], offset dword_71052EB8
		mov	[ebp+var_38], offset sub_71009955
		call	_Unwind_SjLj_Register
		lea	edx, [ebp+var_C]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_C], offset byte_71059168
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		lea	eax, [ebp+var_10]
		mov	[ebp+var_58], 3
		sub	esp, 4
		mov	[esp], eax
		call	ds:_ZN12QPainterPathC1Ev
		lea	eax, [ebp+var_10]
		mov	dword ptr [esp+4], 1
		mov	[esp], eax
		mov	[ebp+var_58], 2
		call	ds:_ZN12QPainterPath11setFillRuleEN2Qt8FillRuleE
		lea	edx, [ebp+var_10]
		lea	eax, [ebp+var_1C]
		call	sub_71008500
		mov	dword ptr [esp], 88h ; size_t
		call	sub_710517F0
		mov	[ebp+var_60], eax
		lea	eax, [ebp+var_10]
		mov	edx, [ebp+var_60]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_58], 1
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_71002E20
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_58], 3
		call	ds:_ZN12QPainterPathD1Ev
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_60]
		leave
		retn
sub_71009870	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71009955	proc near		; DATA XREF: sub_71009870+23o
		add	ebp, 8
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-64h], edx
		jz	short loc_71009976
		cmp	eax, 2
		jz	short loc_71009989
		mov	eax, [ebp-60h]
		mov	[esp+0], eax
		call	sub_710517D0

loc_71009976:				; CODE XREF: sub_71009955+Fj
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	ds:_ZN12QPainterPathD1Ev

loc_71009989:				; CODE XREF: sub_71009955+14j
		mov	edx, [ebp-64h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_71009955	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710099A0	proc near		; CODE XREF: sub_71009BA0+27p
					; sub_71009BE0+27p

var_94		= dword	ptr -94h
var_90		= qword	ptr -90h
var_86		= word ptr -86h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= byte ptr -7Ch
var_78		= dword	ptr -78h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_3C		= byte ptr -3Ch
var_30		= byte ptr -30h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0B8h
		mov	[ebp+var_94], eax
		lea	eax, [ebp+var_8]
		mov	[ebp+var_5C], eax
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		mov	[ebp+var_84], edx
		mov	[ebp+var_54], esp
		mov	[ebp+var_64], offset sub_710525B0
		mov	[ebp+var_60], offset word_71052EC2
		mov	[ebp+var_58], offset sub_71009B4C
		call	_Unwind_SjLj_Register
		lea	eax, [ebp+var_24]
		lea	edx, [ebp+var_C]
		mov	[esp+8], edx
		mov	edx, [ebp+var_84]
		mov	[esp], eax
		mov	eax, ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		mov	[ebp+var_C], offset aUnicode ; "unicode"
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+4], edx
		mov	[ebp+var_80], eax
		call	eax ; _ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		lea	edx, [ebp+var_10]
		lea	eax, [ebp+var_30]
		mov	[ebp+var_10], offset aHorizAdvX	; "horiz-adv-x"
		mov	[ebp+var_78], 4
		sub	esp, 4
		mov	[esp+8], edx
		mov	edx, [ebp+var_84]
		mov	[esp], eax
		mov	[esp+4], edx
		call	[ebp+var_80]
		sub	esp, 4
		lea	edx, [ebp+var_14]
		mov	[esp+8], edx
		mov	edx, [ebp+var_84]
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_14], offset byte_71059168
		mov	[esp], eax
		mov	[ebp+var_78], 3
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		mov	eax, [ebp+var_1C]
		sub	esp, 4
		mov	[ebp+var_86], 0
		test	eax, eax
		jz	short loc_71009A8F
		mov	eax, [ebp+var_24]
		mov	edx, [ebp+var_20]
		mov	eax, [eax]
		mov	eax, [eax+0Ch]
		movzx	eax, word ptr [eax+edx*2]
		mov	[ebp+var_86], ax

loc_71009A8F:				; CODE XREF: sub_710099A0+D7j
		mov	ecx, [ebp+var_28]
		test	ecx, ecx
		jnz	loc_71009B30
		fld1
		fchs
		fstp	[ebp+var_90]

loc_71009AA4:				; CODE XREF: sub_710099A0+1A7j
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_78], 2
		call	ds:_ZN12QPainterPathC1Ev
		lea	eax, [ebp+var_18]
		mov	dword ptr [esp+4], 1
		mov	[esp], eax
		mov	[ebp+var_78], 1
		call	ds:_ZN12QPainterPath11setFillRuleEN2Qt8FillRuleE
		lea	edx, [ebp+var_18]
		lea	eax, [ebp+var_3C]
		call	sub_71008500
		lea	eax, [ebp+var_18]
		mov	edx, [ebp+var_94]
		mov	[esp+8], eax	; int
		movzx	eax, [ebp+var_86]
		fld	[ebp+var_90]
		fstp	qword ptr [esp+0Ch] ; double
		mov	[esp], edx	; int
		mov	[esp+4], ax	; __int16
		call	sub_71029A80
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_78], 2
		call	ds:_ZN12QPainterPathD1Ev
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, 1
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71009B30:				; CODE XREF: sub_710099A0+F4j
		lea	eax, [ebp+var_30]
		xor	edx, edx
		mov	[ebp+var_78], 2
		call	sub_71007490
		fstp	[ebp+var_90]
		jmp	loc_71009AA4
sub_710099A0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71009B4C	proc near		; DATA XREF: sub_710099A0+32o
		add	ebp, 8
		mov	eax, [ebp-78h]
		mov	edx, [ebp-74h]
		cmp	eax, 1
		mov	[ebp-98h], edx
		jz	short loc_71009B7D
		cmp	eax, 2
		jz	short loc_71009B7D
		cmp	eax, 3
		jz	short loc_71009B7D
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	ds:_ZN12QPainterPathD1Ev

loc_71009B7D:				; CODE XREF: sub_71009B4C+12j
					; sub_71009B4C+17j ...
		mov	eax, [ebp-98h]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71009B4C	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71009BA0	proc near		; DATA XREF: sub_7101E100+1B46o

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [ebx]
		mov	[esp+1Ch+var_1C], ebx
		call	dword ptr [eax+10h]
		mov	edx, eax
		xor	eax, eax
		cmp	edx, 3
		jz	short loc_71009BC0
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71009BC0:				; CODE XREF: sub_71009BA0+17j
		mov	eax, [ebx+8]
		mov	edx, [esp+1Ch+arg_4]
		call	sub_710099A0
		mov	eax, 1
		add	esp, 18h
		pop	ebx
		retn
sub_71009BA0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71009BE0	proc near		; DATA XREF: sub_7101E100+1B82o

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [ebx]
		mov	[esp+1Ch+var_1C], ebx
		call	dword ptr [eax+10h]
		mov	edx, eax
		xor	eax, eax
		cmp	edx, 3
		jz	short loc_71009C00
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71009C00:				; CODE XREF: sub_71009BE0+17j
		mov	eax, [ebx+8]
		mov	edx, [esp+1Ch+arg_4]
		call	sub_710099A0
		mov	eax, 1
		add	esp, 18h
		pop	ebx
		retn
sub_71009BE0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71009C20	proc near		; CODE XREF: sub_7101E100+54p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_1C		= byte ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 2Ch
		mov	[esp+2Ch+var_8], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_4], esi
		mov	eax, [ebx+20h]
		mov	edx, [eax+8]
		test	edx, edx
		jnz	short loc_71009C66
		lea	esi, [esp+2Ch+var_1C]
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_28], 2
		call	ds:_ZN6QColorC1EN2Qt11GlobalColorE
		mov	[esp+2Ch+var_28], esi
		mov	[esp+2Ch+var_2C], ebx
		call	sub_71006ED0
		mov	ebx, [esp+2Ch+var_8]
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_71009C66:				; CODE XREF: sub_71009C20+17j
		mov	ecx, [eax]
		lea	esi, [ebx+20h]
		cmp	ecx, 1
		jz	short loc_71009C86
		mov	eax, [eax+4]
		mov	[esp+2Ch+var_28], edx
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_24], eax
		call	sub_7104F0C0
		mov	eax, [ebx+20h]

loc_71009C86:				; CODE XREF: sub_71009C20+4Ej
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_71009CA3
		mov	edx, [eax+4]
		mov	[esp+2Ch+var_24], edx
		mov	eax, [eax+8]
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_28], eax
		call	sub_7104F0C0

loc_71009CA3:				; CODE XREF: sub_71009C20+6Bj
		mov	eax, [ebx+20h]
		mov	edx, [eax+8]
		add	dword ptr [eax+edx*4+0Ch], 1
		mov	ebx, [esp+2Ch+var_8]
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
sub_71009C20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71009CC0	proc near		; CODE XREF: sub_7101A880+474p
					; sub_7101A880+A55p ...

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= qword	ptr -18h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 70h
		mov	[ebp+var_54], eax
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_5C], edx
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset word_71052ECE
		mov	[ebp+var_28], offset sub_71009DE7
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+var_5C]
		lea	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_71007710
		mov	edx, [ebp+var_54]
		mov	esi, [ebp+var_54]
		mov	eax, [edx]
		mov	edx, [ebp+var_C]
		mov	eax, [eax+8]
		mov	edx, [edx+8]
		mov	[esp], esi
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		add	edx, eax
		mov	[ebp+var_58], edx
		mov	[esp+8], edx
		call	sub_7104EDA0
		mov	ecx, [ebp+var_C]
		mov	edx, [esi]
		mov	eax, [ecx+8]
		lea	ebx, [ecx+10h]
		lea	eax, [ecx+eax*8+10h]
		cmp	eax, ebx
		jz	short loc_71009D5E
		mov	esi, [ebp+var_58]
		lea	edx, [edx+esi*8+10h]

loc_71009D50:				; CODE XREF: sub_71009CC0+9Cj
		sub	eax, 8
		sub	edx, 8
		fld	qword ptr [eax]
		cmp	ebx, eax
		fstp	qword ptr [edx]
		jnz	short loc_71009D50

loc_71009D5E:				; CODE XREF: sub_71009CC0+87j
		mov	edx, [ebp+var_54]
		mov	esi, [ebp+var_58]
		mov	eax, [edx]
		mov	[ebp+var_50], 3
		mov	[eax+8], esi
		mov	eax, [ecx+8]
		sub	[ebp+var_50], eax
		mov	ecx, [ebp+var_50]
		test	ecx, ecx
		jle	short loc_71009DA9
		lea	esi, [esi+0]

loc_71009D80:				; CODE XREF: sub_71009CC0+E7j
		mov	edx, [ebp+var_54]
		fldz
		lea	eax, [ebp+var_18]
		fstp	[ebp+var_18]
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_48], 1
		call	sub_7104ED10
		sub	[ebp+var_50], 1
		mov	edx, [ebp+var_50]
		test	edx, edx
		jg	short loc_71009D80

loc_71009DA9:				; CODE XREF: sub_71009CC0+BBj
		mov	eax, [ebp+var_C]
		test	eax, eax
		jz	short loc_71009DD5
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71009DD5
		mov	eax, [ebp+var_C]
		mov	dword ptr [esp+4], 8
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_71009DD5:				; CODE XREF: sub_71009CC0+EEj
					; sub_71009CC0+F8j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 70h
		pop	ebx
		pop	esi
		pop	ebp
		retn
sub_71009CC0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71009DE7	proc near		; DATA XREF: sub_71009CC0+28o
		add	ebp, 8
		mov	esi, [ebp-44h]
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_7104F050
		mov	[esp+0], esi
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_71009DE7	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71009E10	proc near		; CODE XREF: sub_7100A6C0+11Fp
					; sub_7100E900+273p

var_16C		= dword	ptr -16Ch
var_15C		= dword	ptr -15Ch
var_158		= dword	ptr -158h
var_154		= dword	ptr -154h
var_150		= dword	ptr -150h
var_14C		= dword	ptr -14Ch
var_148		= qword	ptr -148h
var_13C		= dword	ptr -13Ch
var_138		= dword	ptr -138h
var_134		= dword	ptr -134h
var_130		= dword	ptr -130h
var_12C		= byte ptr -12Ch
var_128		= dword	ptr -128h
var_114		= dword	ptr -114h
var_110		= dword	ptr -110h
var_10C		= dword	ptr -10Ch
var_108		= dword	ptr -108h
var_104		= dword	ptr -104h
var_F8		= dword	ptr -0F8h
var_F4		= dword	ptr -0F4h
var_F0		= dword	ptr -0F0h
var_E8		= byte ptr -0E8h
var_A0		= byte ptr -0A0h
var_70		= byte ptr -70h
var_40		= byte ptr -40h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 1B0h
		mov	[ebp+var_15C], eax
		lea	eax, [ebp+var_8]
		mov	[ebp+var_10C], eax
		lea	eax, [ebp+var_12C]
		mov	[ebp+var_158], edx
		mov	[esp], eax
		mov	[ebp+var_114], offset sub_710525B0
		mov	[ebp+var_110], offset dword_71052ED4
		mov	[ebp+var_108], offset sub_7100A677
		mov	[ebp+var_104], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+var_158]
		mov	eax, [edx+8]
		test	eax, eax
		jz	loc_7100A474
		lea	eax, [ebp+var_40]
		mov	[esp], eax
		mov	[ebp+var_128], 0FFFFFFFFh
		call	ds:_ZN7QMatrixC1Ev
		mov	edx, [ebp+var_158]
		mov	eax, [edx]
		test	eax, eax
		jz	loc_7100A608
		mov	ecx, [ebp+var_158]
		mov	edx, [eax]
		mov	eax, [ecx+4]
		add	eax, eax
		add	eax, [edx+0Ch]

loc_71009EA9:				; CODE XREF: sub_71009E10+800j
		mov	ecx, [ebp+var_158]
		mov	[ebp+var_C], eax
		mov	edx, [ecx+8]
		lea	edx, [eax+edx*2]
		mov	[ebp+var_150], edx
		mov	edx, ds:_ZNK5QChar7isSpaceEv
		mov	[ebp+var_134], edx
		jmp	short loc_71009EDC
; ---------------------------------------------------------------------------
		align 10h

loc_71009ED0:				; CODE XREF: sub_71009E10+EDj
		mov	eax, [ebp+var_C]

loc_71009ED3:				; CODE XREF: sub_71009E10+F9j
		add	eax, 2
		mov	[ebp+var_C], eax

loc_71009ED9:				; CODE XREF: sub_71009E10+378j
					; sub_71009E10+391j
		mov	eax, [ebp+var_C]

loc_71009EDC:				; CODE XREF: sub_71009E10+BAj
		cmp	[ebp+var_150], eax
		jbe	loc_71009FD1
		mov	[esp], eax
		mov	[ebp+var_128], 0FFFFFFFFh
		call	ds:_ZNK5QChar7isSpaceEv
		test	al, al
		jnz	short loc_71009ED0
		mov	eax, [ebp+var_C]
		movzx	ecx, word ptr [eax]
		cmp	cx, 2Ch
		jz	short loc_71009ED3
		cmp	cx, 6Dh
		mov	edx, offset aAtrix ; "atrix"
		mov	ebx, (offset aAtrix+5) ; ""
		jz	loc_7100A010
		cmp	cx, 74h
		jz	loc_7100A43C
		cmp	cx, 72h
		jz	loc_7100A492
		cmp	cx, 73h
		jnz	loc_71009FD1
		lea	edx, [eax+2]
		mov	[ebp+var_C], edx
		movzx	edx, word ptr [eax+2]
		cmp	dx, 63h
		jz	loc_7100A541
		cmp	dx, 6Bh
		jnz	short loc_71009FD1
		cmp	word ptr [eax+4], 65h
		lea	edx, [eax+4]
		mov	[ebp+var_C], edx
		jnz	short loc_71009FD1
		cmp	word ptr [edx+2], 77h
		lea	eax, [edx+2]
		mov	[ebp+var_C], eax
		jnz	short loc_71009FD1
		lea	eax, [edx+4]
		movzx	edx, word ptr [edx+4]
		mov	[ebp+var_C], eax
		mov	[ebp+var_154], 4
		cmp	dx, 58h
		jz	short loc_71009F9B
		cmp	dx, 59h
		jnz	short loc_71009FD1
		mov	[ebp+var_154], 5

loc_71009F9B:				; CODE XREF: sub_71009E10+179j
		add	eax, 2
		mov	[ebp+var_C], eax

loc_71009FA1:				; CODE XREF: sub_71009E10+52Cj
		cmp	[ebp+var_150], eax
		jbe	loc_7100A041

loc_71009FAD:				; CODE XREF: sub_71009E10+22Bj
		mov	[esp], eax
		mov	[ebp+var_128], 0FFFFFFFFh
		call	ds:_ZNK5QChar7isSpaceEv
		test	al, al
		jnz	loc_7100A333
		mov	eax, [ebp+var_C]
		cmp	word ptr [eax],	28h
		jz	short loc_7100A047

loc_71009FD1:				; CODE XREF: sub_71009E10+D2j
					; sub_71009E10+127j ...
		mov	ecx, [ebp+var_15C]
		lea	eax, [ebp+var_40]
		mov	[esp+4], eax
		mov	[ebp+var_128], 0FFFFFFFFh
		mov	[esp], ecx
		call	ds:_ZN7QMatrixC1ERKS_

loc_71009FF1:				; CODE XREF: sub_71009E10+67Dj
		lea	eax, [ebp+var_12C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_15C]
		lea	esp, [ebp-8]
		pop	ebx
		pop	esi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7100A010:				; CODE XREF: sub_71009E10+109j
					; sub_71009E10+213j
		movzx	ecx, byte ptr [edx]
		add	eax, 2
		cmp	cx, [eax]
		mov	[ebp+var_C], eax
		jnz	short loc_71009FD1
		add	edx, 1
		cmp	edx, ebx
		jnz	short loc_7100A010
		add	eax, 2
		mov	[ebp+var_C], eax
		mov	[ebp+var_154], 0

loc_7100A035:				; CODE XREF: sub_71009E10+65Fj
					; sub_71009E10+6B5j ...
		cmp	[ebp+var_150], eax
		ja	loc_71009FAD

loc_7100A041:				; CODE XREF: sub_71009E10+197j
		cmp	word ptr [eax],	28h
		jnz	short loc_71009FD1

loc_7100A047:				; CODE XREF: sub_71009E10+1BFj
		lea	ecx, [ebp+var_E8]
		add	eax, 2
		mov	[ebp+var_16C], ecx
		mov	[ebp+var_F0], ecx
		mov	ecx, ds:_ZNK5QChar7isSpaceEv
		mov	[ebp+var_C], eax
		mov	[ebp+var_F4], 0
		mov	[ebp+var_F8], 8
		mov	[ebp+var_130], ecx
		jmp	short loc_7100A08A
; ---------------------------------------------------------------------------

loc_7100A081:				; CODE XREF: sub_71009E10+28Fj
		mov	eax, [ebp+var_C]
		add	eax, 2
		mov	[ebp+var_C], eax

loc_7100A08A:				; CODE XREF: sub_71009E10+26Fj
		mov	[esp], eax
		mov	[ebp+var_128], 1
		call	[ebp+var_130]
		test	al, al
		jnz	short loc_7100A081

loc_7100A0A1:				; CODE XREF: sub_71009E10+43Ej
		mov	edx, [ebp+var_C]
		movzx	eax, word ptr [edx]
		movzx	ecx, ax
		mov	ebx, ecx
		sar	ebx, 4
		cmp	ebx, 3
		jz	loc_7100A1A6

loc_7100A0B8:				; CODE XREF: sub_71009E10+3A1j
		cmp	ax, 2Dh
		jz	loc_7100A1B7
		cmp	ax, 2Bh
		jz	loc_7100A1B7
		cmp	ax, 2Eh
		jz	loc_7100A1B7
		cmp	ax, 29h
		jnz	loc_7100A615
		mov	ebx, [ebp+var_154]
		add	edx, 2
		mov	[ebp+var_C], edx
		test	ebx, ebx
		jnz	loc_7100A341
		cmp	[ebp+var_F4], 6
		jnz	loc_7100A615
		mov	eax, [ebp+var_F0]
		fld	qword ptr [eax+28h]
		fstp	qword ptr [esp+2Ch]
		fld	qword ptr [eax+20h]
		fstp	qword ptr [esp+24h]
		fld	qword ptr [eax+18h]
		fstp	qword ptr [esp+1Ch]
		fld	qword ptr [eax+10h]
		fstp	qword ptr [esp+14h]
		fld	qword ptr [eax+8]
		fstp	qword ptr [esp+0Ch]
		fld	qword ptr [eax]
		lea	eax, [ebp+var_70]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		mov	[ebp+var_128], 1
		call	ds:_ZN7QMatrixC1Edddddd
		lea	edx, [ebp+var_70]
		lea	eax, [ebp+var_A0]
		mov	[esp+8], edx
		lea	edx, [ebp+var_40]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK7QMatrixmlERKS_
		sub	esp, 4
		lea	eax, [ebp+var_A0]
		mov	[esp+4], eax
		lea	eax, [ebp+var_40]
		mov	[esp], eax
		call	ds:_ZN7QMatrixaSERKS_

loc_7100A17C:				; CODE XREF: sub_71009E10+5A4j
					; sub_71009E10+627j ...
		mov	eax, [ebp+var_F0]
		cmp	eax, [ebp+var_16C]
		jz	loc_71009ED9
		mov	[esp], eax
		mov	[ebp+var_128], 0FFFFFFFFh
		call	ds:_Z5qFreePv
		jmp	loc_71009ED9
; ---------------------------------------------------------------------------

loc_7100A1A6:				; CODE XREF: sub_71009E10+2A2j
		and	ecx, 0Fh
		mov	bx, 3FFh
		sar	ebx, cl
		test	ebx, ebx
		jz	loc_7100A0B8

loc_7100A1B7:				; CODE XREF: sub_71009E10+2ACj
					; sub_71009E10+2B6j ...
		lea	eax, [ebp+var_C]
		mov	[ebp+var_128], 1
		call	sub_710070E0
		mov	eax, [ebp+var_F4]
		fstp	[ebp+var_148]
		cmp	eax, [ebp+var_F8]
		mov	[ebp+var_138], eax
		jz	short loc_7100A25F

loc_7100A1E3:				; CODE XREF: sub_71009E10+4F9j
					; sub_71009E10+505j ...
		mov	eax, [ebp+var_138]
		mov	ecx, [ebp+var_138]
		fld	[ebp+var_148]
		add	eax, 1
		mov	[ebp+var_F4], eax
		mov	eax, [ebp+var_F0]
		fstp	qword ptr [eax+ecx*8]
		mov	eax, [ebp+var_C]
		jmp	short loc_7100A219
; ---------------------------------------------------------------------------
		align 10h

loc_7100A210:				; CODE XREF: sub_71009E10+41Ej
		mov	eax, [ebp+var_C]
		add	eax, 2
		mov	[ebp+var_C], eax

loc_7100A219:				; CODE XREF: sub_71009E10+3FAj
		mov	[esp], eax
		mov	[ebp+var_128], 1
		call	[ebp+var_134]
		test	al, al
		jnz	short loc_7100A210
		mov	eax, [ebp+var_C]
		cmp	word ptr [eax],	2Ch
		jz	short loc_7100A257

loc_7100A239:				; CODE XREF: sub_71009E10+44Dj
		mov	[esp], eax
		mov	[ebp+var_128], 1
		call	ds:_ZNK5QChar7isSpaceEv
		test	al, al
		jz	loc_7100A0A1
		mov	eax, [ebp+var_C]

loc_7100A257:				; CODE XREF: sub_71009E10+427j
		add	eax, 2
		mov	[ebp+var_C], eax
		jmp	short loc_7100A239
; ---------------------------------------------------------------------------

loc_7100A25F:				; CODE XREF: sub_71009E10+3D1j
		mov	eax, [ebp+var_138]
		mov	edx, [ebp+var_F0]
		add	eax, eax
		cmp	[ebp+var_138], eax
		mov	[ebp+var_14C], eax
		mov	[ebp+var_13C], edx
		jz	short loc_7100A2F1
		mov	eax, [ebp+var_138]
		mov	[ebp+var_128], 1
		shl	eax, 4
		mov	[esp], eax
		call	ds:_Z7qMallocj
		test	eax, eax
		mov	[ebp+var_F0], eax
		jz	loc_7100A510

loc_7100A2AB:				; CODE XREF: sub_71009E10+70Ej
		mov	eax, [ebp+var_138]
		mov	ecx, [ebp+var_14C]
		mov	[ebp+var_F4], 0
		mov	[ebp+var_128], 1
		shl	eax, 3
		mov	[esp+8], eax
		mov	eax, [ebp+var_13C]
		mov	[ebp+var_F8], ecx
		mov	[esp+4], eax
		mov	eax, [ebp+var_F0]
		mov	[esp], eax
		call	ds:_Z8qMemCopyPvPKvj

loc_7100A2F1:				; CODE XREF: sub_71009E10+46Fj
		mov	eax, [ebp+var_138]
		mov	edx, [ebp+var_13C]
		cmp	[ebp+var_16C], edx
		mov	[ebp+var_F4], eax
		jz	loc_7100A1E3
		cmp	edx, [ebp+var_F0]
		jz	loc_7100A1E3
		mov	[esp], edx
		mov	[ebp+var_128], 1
		call	ds:_Z5qFreePv
		jmp	loc_7100A1E3
; ---------------------------------------------------------------------------

loc_7100A333:				; CODE XREF: sub_71009E10+1B2j
		mov	eax, [ebp+var_C]
		add	eax, 2
		mov	[ebp+var_C], eax
		jmp	loc_71009FA1
; ---------------------------------------------------------------------------

loc_7100A341:				; CODE XREF: sub_71009E10+2DEj
		cmp	[ebp+var_154], 1
		jz	loc_7100A4CA
		cmp	[ebp+var_154], 2
		jz	short loc_7100A3B9
		cmp	[ebp+var_154], 3
		jz	loc_7100A579
		cmp	[ebp+var_154], 4
		jz	loc_7100A5C4
		cmp	[ebp+var_F4], 1
		jnz	loc_7100A615
		mov	eax, [ebp+var_F0]
		fld	ds:dbl_71059D48
		fmul	qword ptr [eax]
		fstp	qword ptr [esp]	; double
		call	tan
		lea	eax, [ebp+var_40]
		mov	[esp], eax
		mov	[ebp+var_128], 1
		fstp	qword ptr [esp+0Ch]
		fldz
		fstp	qword ptr [esp+4]
		call	ds:_ZN7QMatrix5shearEdd
		jmp	loc_7100A17C
; ---------------------------------------------------------------------------

loc_7100A3B9:				; CODE XREF: sub_71009E10+545j
		mov	eax, [ebp+var_F4]
		cmp	eax, 1
		jz	loc_7100A650
		cmp	eax, 3
		jnz	loc_7100A615
		mov	eax, [ebp+var_F0]
		fld	qword ptr [eax+10h]
		fstp	qword ptr [esp+0Ch]
		fld	qword ptr [eax+8]
		lea	eax, [ebp+var_40]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		mov	[ebp+var_128], 1
		call	ds:_ZN7QMatrix9translateEdd
		mov	eax, [ebp+var_F0]
		fld	qword ptr [eax]
		lea	eax, [ebp+var_40]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	ds:_ZN7QMatrix6rotateEd
		mov	eax, [ebp+var_F0]
		fld	qword ptr [eax+10h]
		fchs
		fstp	qword ptr [esp+0Ch]
		fld	qword ptr [eax+8]
		lea	eax, [ebp+var_40]
		fchs
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	ds:_ZN7QMatrix9translateEdd
		jmp	loc_7100A17C
; ---------------------------------------------------------------------------

loc_7100A43C:				; CODE XREF: sub_71009E10+113j
		mov	edx, offset aRanslate ;	"ranslate"
		mov	ebx, (offset aRanslate+8) ; ""

loc_7100A446:				; CODE XREF: sub_71009E10+64Dj
		movzx	ecx, byte ptr [edx]
		add	eax, 2
		cmp	cx, [eax]
		mov	[ebp+var_C], eax
		jnz	loc_71009FD1
		add	edx, 1
		cmp	edx, ebx
		jnz	short loc_7100A446
		add	eax, 2
		mov	[ebp+var_C], eax
		mov	[ebp+var_154], 1
		jmp	loc_7100A035
; ---------------------------------------------------------------------------

loc_7100A474:				; CODE XREF: sub_71009E10+5Dj
		mov	ecx, [ebp+var_15C]
		mov	[ebp+var_128], 0FFFFFFFFh
		mov	[esp], ecx
		call	ds:_ZN7QMatrixC1Ev
		jmp	loc_71009FF1
; ---------------------------------------------------------------------------

loc_7100A492:				; CODE XREF: sub_71009E10+11Dj
		mov	edx, offset aOtate ; "otate"
		mov	ebx, (offset aOtate+5) ; ""

loc_7100A49C:				; CODE XREF: sub_71009E10+6A3j
		movzx	ecx, byte ptr [edx]
		add	eax, 2
		cmp	cx, [eax]
		mov	[ebp+var_C], eax
		jnz	loc_71009FD1
		add	edx, 1
		cmp	edx, ebx
		jnz	short loc_7100A49C
		add	eax, 2
		mov	[ebp+var_C], eax
		mov	[ebp+var_154], 2
		jmp	loc_7100A035
; ---------------------------------------------------------------------------

loc_7100A4CA:				; CODE XREF: sub_71009E10+538j
		mov	eax, [ebp+var_F4]
		cmp	eax, 1
		jz	loc_7100A63F
		cmp	eax, 2
		jnz	loc_7100A615
		mov	eax, [ebp+var_F0]
		fld	qword ptr [eax+8]
		fstp	qword ptr [esp+0Ch]

loc_7100A4EF:				; CODE XREF: sub_71009E10+83Bj
		fld	qword ptr [eax]
		lea	eax, [ebp+var_40]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		mov	[ebp+var_128], 1
		call	ds:_ZN7QMatrix9translateEdd
		jmp	loc_7100A17C
; ---------------------------------------------------------------------------

loc_7100A510:				; CODE XREF: sub_71009E10+495j
		call	ds:_Z9qBadAllocv
		mov	esi, [ebp+var_F0]
		test	esi, esi
		jnz	loc_7100A2AB
		mov	edx, [ebp+var_13C]
		mov	ecx, [ebp+var_F4]
		mov	[ebp+var_F0], edx
		mov	[ebp+var_138], ecx
		jmp	loc_7100A1E3
; ---------------------------------------------------------------------------

loc_7100A541:				; CODE XREF: sub_71009E10+13Bj
		add	eax, 4
		mov	edx, offset aAle ; "ale"
		mov	esi, (offset aAle+3) ; ""

loc_7100A54E:				; CODE XREF: sub_71009E10+755j
		movzx	ecx, byte ptr [edx]
		cmp	cx, [eax]
		mov	[ebp+var_C], eax
		jnz	loc_71009FD1
		add	edx, 1
		add	eax, 2
		cmp	edx, esi
		jnz	short loc_7100A54E
		mov	[ebp+var_C], eax
		mov	[ebp+var_154], 3
		jmp	loc_7100A035
; ---------------------------------------------------------------------------

loc_7100A579:				; CODE XREF: sub_71009E10+54Ej
		mov	eax, [ebp+var_F4]
		test	eax, eax
		jle	loc_7100A615
		cmp	eax, 2
		jg	loc_7100A615
		mov	eax, [ebp+var_F0]
		fld	qword ptr [eax]
		jz	short loc_7100A59E
		fld	st
		jmp	short loc_7100A5A1
; ---------------------------------------------------------------------------

loc_7100A59E:				; CODE XREF: sub_71009E10+788j
		fld	qword ptr [eax+8]

loc_7100A5A1:				; CODE XREF: sub_71009E10+78Cj
		fstp	qword ptr [esp+0Ch]
		lea	eax, [ebp+var_40]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		mov	[ebp+var_128], 1
		call	ds:_ZN7QMatrix5scaleEdd
		jmp	loc_7100A17C
; ---------------------------------------------------------------------------

loc_7100A5C4:				; CODE XREF: sub_71009E10+55Bj
		cmp	[ebp+var_F4], 1
		jnz	short loc_7100A615
		mov	eax, [ebp+var_F0]
		fld	ds:dbl_71059D48
		fmul	qword ptr [eax]
		fstp	qword ptr [esp]	; double
		call	tan
		lea	eax, [ebp+var_40]
		mov	[esp], eax
		mov	[ebp+var_128], 1
		fldz
		fstp	qword ptr [esp+0Ch]
		fstp	qword ptr [esp+4]
		call	ds:_ZN7QMatrix5shearEdd
		jmp	loc_7100A17C
; ---------------------------------------------------------------------------

loc_7100A608:				; CODE XREF: sub_71009E10+83j
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	eax, [eax+0Ch]
		jmp	loc_71009EA9
; ---------------------------------------------------------------------------

loc_7100A615:				; CODE XREF: sub_71009E10+2CAj
					; sub_71009E10+2EBj ...
		mov	eax, [ebp+var_F0]
		cmp	eax, [ebp+var_16C]
		jz	loc_71009FD1
		mov	[esp], eax
		mov	[ebp+var_128], 0FFFFFFFFh
		call	ds:_Z5qFreePv
		jmp	loc_71009FD1
; ---------------------------------------------------------------------------

loc_7100A63F:				; CODE XREF: sub_71009E10+6C3j
		fldz
		mov	eax, [ebp+var_F0]
		fstp	qword ptr [esp+0Ch]
		jmp	loc_7100A4EF
; ---------------------------------------------------------------------------

loc_7100A650:				; CODE XREF: sub_71009E10+5B2j
		mov	eax, [ebp+var_F0]
		fld	qword ptr [eax]
		lea	eax, [ebp+var_40]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		mov	[ebp+var_128], 1
		call	ds:_ZN7QMatrix6rotateEd
		jmp	loc_7100A17C
sub_71009E10	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7100A677	proc near		; DATA XREF: sub_71009E10+3Do
		add	ebp, 8
		mov	eax, [ebp-124h]
		mov	[ebp-160h], eax
		mov	eax, [ebp-0F0h]
		cmp	eax, [ebp-16Ch]
		jz	short loc_7100A6A7
		mov	[esp+0], eax
		mov	dword ptr [ebp-128h], 0
		call	ds:_Z5qFreePv

loc_7100A6A7:				; CODE XREF: sub_7100A677+1Bj
		mov	edx, [ebp-160h]
		mov	dword ptr [ebp-128h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_7100A677	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7100A6C0	proc near		; CODE XREF: sub_71011C90+23Bp

var_F8		= dword	ptr -0F8h
var_F4		= dword	ptr -0F4h
var_F0		= dword	ptr -0F0h
var_EC		= dword	ptr -0ECh
var_E8		= dword	ptr -0E8h
var_E4		= dword	ptr -0E4h
var_E0		= dword	ptr -0E0h
var_DC		= dword	ptr -0DCh
var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_D0		= dword	ptr -0D0h
var_CC		= byte ptr -0CCh
var_C8		= dword	ptr -0C8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_98		= byte ptr -98h
var_48		= qword	ptr -48h
var_40		= qword	ptr -40h
var_38		= qword	ptr -38h
var_30		= qword	ptr -30h
var_28		= qword	ptr -28h
var_20		= qword	ptr -20h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 114h
		mov	[ebp+var_E8], eax
		lea	eax, [ebp+var_8]
		mov	[ebp+var_AC], eax
		lea	eax, [ebp+var_CC]
		mov	[ebp+var_DC], edx
		mov	[esp], eax
		mov	[ebp+var_B4], offset sub_710525B0
		mov	[ebp+var_B0], offset word_71052EDA
		mov	[ebp+var_A8], offset sub_7100AA5A
		mov	[ebp+var_A4], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+var_DC]
		mov	eax, [edx+0FCh]
		test	eax, eax
		jnz	short loc_7100A738

loc_7100A721:				; CODE XREF: sub_7100A6C0+1EAj
					; sub_7100A6C0+26Aj
		lea	eax, [ebp+var_CC]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 114h
		pop	ebx
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_7100A738:				; CODE XREF: sub_7100A6C0+5Fj
		mov	ecx, edx
		mov	edx, [edx+0F4h]
		sub	eax, 1
		mov	ecx, [ecx+0F8h]
		mov	[ebp+var_E0], eax
		mov	eax, ds:_ZNK5QChar7isSpaceEv
		mov	edx, [edx]
		mov	[ebp+var_D0], eax
		mov	ebx, [edx+0Ch]
		mov	[ebp+var_C8], 0FFFFFFFFh
		lea	ecx, [ebx+ecx*2]
		mov	[ebp+var_EC], ecx
		mov	[esp], ecx
		call	eax ; _ZNK5QChar7isSpaceEv
		test	al, al
		jz	loc_7100A937

loc_7100A77F:				; CODE XREF: sub_7100A6C0+291j
		mov	edx, [ebp+var_E0]
		mov	[ebp+var_F4], 0
		test	edx, edx
		jns	loc_7100A980

loc_7100A797:				; CODE XREF: sub_7100A6C0+30Ej
					; sub_7100A6C0+322j ...
		mov	eax, [ebp+var_E0]
		add	eax, 1
		sub	eax, [ebp+var_F4]
		test	eax, eax
		jle	loc_7100AA40
		mov	ebx, [ebp+var_DC]
		mov	edx, [ebp+var_F4]
		mov	[ebp+var_C], eax
		mov	ecx, [ebx+0F4h]
		add	edx, [ebx+0F8h]
		mov	[ebp+var_14], ecx
		mov	[ebp+var_10], edx

loc_7100A7CF:				; CODE XREF: sub_7100A6C0+2B8j
					; sub_7100A6C0+395j
		lea	eax, [ebp+var_48]
		lea	edx, [ebp+var_14]
		mov	[ebp+var_C8], 2
		call	sub_71009E10
		fld1
		fsubr	[ebp+var_48]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_7100A7F8
		fchs

loc_7100A7F8:				; CODE XREF: sub_7100A6C0+134j
		fld	ds:dbl_71059D80
		fucompp
		fnstsw	ax
		sahf
		jb	loc_7100A8B0
		fld1
		fsubr	[ebp+var_30]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_7100A81D
		fchs

loc_7100A81D:				; CODE XREF: sub_7100A6C0+159j
		fld	ds:dbl_71059D80
		fucompp
		fnstsw	ax
		sahf
		jb	loc_7100A8B0
		fld	[ebp+var_40]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jb	loc_7100A930

loc_7100A842:				; CODE XREF: sub_7100A6C0+272j
		fld	ds:dbl_71059D80
		fucompp
		fnstsw	ax
		sahf
		jb	short loc_7100A8B0
		fld	[ebp+var_38]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_7100A861
		fchs

loc_7100A861:				; CODE XREF: sub_7100A6C0+19Dj
		fld	ds:dbl_71059D80
		fucompp
		fnstsw	ax
		sahf
		jb	short loc_7100A8B0
		fld	[ebp+var_28]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_7100A880
		fchs

loc_7100A880:				; CODE XREF: sub_7100A6C0+1BCj
		fld	ds:dbl_71059D80
		fucompp
		fnstsw	ax
		sahf
		jb	short loc_7100A8B0
		fld	[ebp+var_20]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_7100A89F
		fchs

loc_7100A89F:				; CODE XREF: sub_7100A6C0+1DBj
		fld	ds:dbl_71059D80
		fucompp
		fnstsw	ax
		sahf
		jnb	loc_7100A721

loc_7100A8B0:				; CODE XREF: sub_7100A6C0+143j
					; sub_7100A6C0+168j ...
		lea	eax, [ebp+var_48]
		mov	[esp+4], eax
		lea	eax, [ebp+var_98]
		mov	[esp], eax
		mov	[ebp+var_C8], 0FFFFFFFFh
		call	ds:_ZN10QTransformC1ERK7QMatrix
		mov	dword ptr [esp], 0A8h ;	size_t
		call	sub_710517F0
		lea	edx, [ebp+var_98]
		mov	[esp+4], edx
		mov	[ebp+var_C8], 1
		mov	[ebp+var_F0], eax
		mov	[esp], eax
		call	sub_71027760
		mov	eax, [ebp+var_DC]
		mov	edx, [ebp+var_F0]
		mov	ecx, [ebp+var_E8]
		mov	[ebp+var_C8], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	[esp+4], edx
		mov	[esp], ecx
		call	sub_71023700
		jmp	loc_7100A721
; ---------------------------------------------------------------------------
		align 10h

loc_7100A930:				; CODE XREF: sub_7100A6C0+17Cj
		fchs
		jmp	loc_7100A842
; ---------------------------------------------------------------------------

loc_7100A937:				; CODE XREF: sub_7100A6C0+B9j
		mov	edx, [ebp+var_E0]
		mov	ecx, [ebp+var_EC]
		lea	eax, [ecx+edx*2]
		mov	[esp], eax
		call	[ebp+var_D0]
		test	al, al
		jnz	loc_7100A77F
		mov	ebx, [ebp+var_DC]
		mov	eax, [ebx+0F4h]
		mov	[ebp+var_14], eax
		mov	eax, [ebx+0F8h]
		mov	[ebp+var_10], eax
		mov	eax, [ebx+0FCh]
		mov	[ebp+var_C], eax
		jmp	loc_7100A7CF
; ---------------------------------------------------------------------------
		align 10h

loc_7100A980:				; CODE XREF: sub_7100A6C0+D1j
		mov	ebx, [ebp+var_EC]
		mov	eax, ds:_ZNK5QChar7isSpaceEv
		mov	[ebp+var_F8], ebx
		mov	[ebp+var_D8], eax

loc_7100A997:				; CODE XREF: sub_7100A6C0+314j
		mov	eax, [ebp+var_F8]
		mov	[ebp+var_C8], 0FFFFFFFFh
		mov	[esp], eax
		call	[ebp+var_D8]
		test	al, al
		jz	short loc_7100A9D6
		add	[ebp+var_F4], 1
		mov	edx, [ebp+var_F4]
		add	[ebp+var_F8], 2
		cmp	[ebp+var_E0], edx
		jl	loc_7100A797
		jmp	short loc_7100A997
; ---------------------------------------------------------------------------

loc_7100A9D6:				; CODE XREF: sub_7100A6C0+2F2j
		mov	edx, [ebp+var_F4]
		cmp	[ebp+var_E0], edx
		jl	loc_7100A797
		mov	ebx, [ebp+var_EC]
		mov	ecx, [ebp+var_E0]
		lea	ecx, [ebx+ecx*2]
		mov	ebx, ds:_ZNK5QChar7isSpaceEv
		mov	[ebp+var_E4], ecx
		mov	[ebp+var_D4], ebx
		jmp	short loc_7100AA17
; ---------------------------------------------------------------------------
		align 10h

loc_7100AA10:				; CODE XREF: sub_7100A6C0+379j
		sub	[ebp+var_E0], 1

loc_7100AA17:				; CODE XREF: sub_7100A6C0+349j
		mov	ecx, [ebp+var_E4]
		mov	[ebp+var_C8], 0FFFFFFFFh
		mov	[esp], ecx
		call	[ebp+var_D4]
		sub	[ebp+var_E4], 2
		test	al, al
		jnz	short loc_7100AA10
		jmp	loc_7100A797
; ---------------------------------------------------------------------------

loc_7100AA40:				; CODE XREF: sub_7100A6C0+E8j
		mov	[ebp+var_14], 0
		mov	[ebp+var_10], 0
		mov	[ebp+var_C], 0
		jmp	loc_7100A7CF
sub_7100A6C0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7100AA5A	proc near		; DATA XREF: sub_7100A6C0+3Co
		add	ebp, 8
		mov	edx, [ebp-0C4h]
		cmp	dword ptr [ebp-0C8h], 1
		mov	[ebp-0FCh], edx
		jz	short loc_7100AA98
		mov	ecx, [ebp-0F0h]
		mov	[esp+0], ecx
		call	sub_710517D0
		mov	ebx, [ebp-0FCh]
		mov	dword ptr [ebp-0C8h], 0FFFFFFFFh
		mov	[esp+0], ebx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7100AA98:				; CODE XREF: sub_7100AA5A+16j
		mov	eax, [ebp-0FCh]
		mov	dword ptr [ebp-0C8h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7100AA5A	endp


; =============== S U B	R O U T	I N E =======================================


sub_7100AAB0	proc near		; CODE XREF: sub_7101FFE0+27Dp

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	ebx, [esp+4Ch+arg_0]
		mov	edx, [ebx+0Ch]
		lea	esi, [ebx+0Ch]
		mov	eax, [edx]
		cmp	eax, 1
		jz	short loc_7100AAE1
		mov	eax, [edx+4]
		mov	[esp+4Ch+var_44], eax
		mov	eax, [edx+8]
		mov	[esp+4Ch+var_4C], esi
		mov	[esp+4Ch+var_48], eax
		call	sub_71049630
		mov	edx, [ebx+0Ch]

loc_7100AAE1:				; CODE XREF: sub_7100AAB0+16j
		mov	eax, [edx]
		cmp	eax, 1
		jz	short loc_7100AB01
		mov	eax, [edx+4]
		mov	[esp+4Ch+var_44], eax
		mov	eax, [edx+8]
		mov	[esp+4Ch+var_4C], esi
		mov	[esp+4Ch+var_48], eax
		call	sub_71049630
		mov	edx, [ebx+0Ch]

loc_7100AB01:				; CODE XREF: sub_7100AAB0+36j
		mov	eax, [ebx+0Ch]
		mov	edi, [edx+8]
		mov	ebp, [eax+edi*4+0Ch]
		mov	eax, [edx]
		cmp	eax, 1
		jz	short loc_7100AB2B
		mov	eax, [edx+4]
		mov	[esp+4Ch+var_48], edi
		mov	[esp+4Ch+var_4C], esi
		mov	[esp+4Ch+var_44], eax
		call	sub_71049630
		mov	edx, [ebx+0Ch]
		mov	edi, [edx+8]

loc_7100AB2B:				; CODE XREF: sub_7100AAB0+60j
		mov	eax, [edx+4]
		sub	edi, 1
		cmp	edi, eax
		jg	loc_7100AC2C
		test	byte ptr [edx+0Ch], 2
		jz	loc_7100AC20

loc_7100AB43:				; CODE XREF: sub_7100AAB0+176j
					; sub_7100AAB0+19Dj
		mov	[esp+4Ch+var_44], eax
		mov	[esp+4Ch+var_48], edi
		mov	[esp+4Ch+var_4C], esi
		call	sub_71049630
		mov	ecx, [ebx+10h]
		lea	edx, [ebx+10h]
		mov	eax, [ecx]
		cmp	eax, 1
		jz	short loc_7100AB81
		mov	eax, [ecx+4]
		mov	[esp+4Ch+var_30], edx
		mov	[esp+4Ch+var_44], eax
		mov	eax, [ecx+8]
		mov	[esp+4Ch+var_4C], edx
		mov	[esp+4Ch+var_48], eax
		call	sub_7104E560
		mov	ecx, [ebx+10h]
		mov	edx, [esp+4Ch+var_30]

loc_7100AB81:				; CODE XREF: sub_7100AAB0+AEj
		mov	edi, [ecx+8]
		mov	eax, [ecx+4]
		sub	edi, 1
		cmp	edi, eax
		jg	short loc_7100ABF0
		test	byte ptr [ecx+0Ch], 2
		jz	short loc_7100ABE8

loc_7100AB94:				; CODE XREF: sub_7100AAB0+13Ej
					; sub_7100AAB0+169j
		mov	[esp+4Ch+var_44], eax
		mov	[esp+4Ch+var_4C], edx
		mov	[esp+4Ch+var_48], edi
		call	sub_7104E560
		mov	[esp+4Ch+var_4C], ebx
		call	sub_71006D60
		test	ebp, ebp
		jz	short loc_7100ABDB
		cmp	byte ptr [ebx+24h], 0
		jnz	loc_7100AC52

loc_7100ABBA:				; CODE XREF: sub_7100AAB0+1C1j
					; sub_7100AAB0+1CBj
		cmp	ebp, 1
		lea	esi, [esi+0]
		jz	loc_7100AC80
		mov	ecx, [ebx+14h]
		test	ecx, ecx
		jz	short loc_7100ABDB
		mov	eax, [ebx+0Ch]
		mov	edx, [eax+8]
		test	edx, edx
		jnz	loc_7100AD00

loc_7100ABDB:				; CODE XREF: sub_7100AAB0+FEj
					; sub_7100AAB0+11Bj ...
		add	esp, 3Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_7100ABE8:				; CODE XREF: sub_7100AAB0+E2j
		mov	ecx, eax
		sar	ecx, 1
		cmp	edi, ecx
		jge	short loc_7100AB94

loc_7100ABF0:				; CODE XREF: sub_7100AAB0+DCj
		mov	[esp+4Ch+var_30], edx
		mov	[esp+4Ch+var_40], 1
		mov	[esp+4Ch+var_44], 4
		mov	[esp+4Ch+var_48], edi
		mov	[esp+4Ch+var_4C], 14h
		call	ds:_ZN11QVectorData4growEiiib
		mov	edx, [esp+4Ch+var_30]
		jmp	loc_7100AB94
; ---------------------------------------------------------------------------
		align 10h

loc_7100AC20:				; CODE XREF: sub_7100AAB0+8Dj
		mov	edx, eax
		sar	edx, 1
		cmp	edi, edx
		jge	loc_7100AB43

loc_7100AC2C:				; CODE XREF: sub_7100AAB0+83j
		mov	[esp+4Ch+var_40], 1
		mov	[esp+4Ch+var_44], 4
		mov	[esp+4Ch+var_48], edi
		mov	[esp+4Ch+var_4C], 14h
		call	ds:_ZN11QVectorData4growEiiib
		jmp	loc_7100AB43
; ---------------------------------------------------------------------------

loc_7100AC52:				; CODE XREF: sub_7100AAB0+104j
		mov	eax, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_20], offset aStyle	; "style"
		mov	[esp+4Ch+var_48], eax
		lea	eax, [esp+4Ch+var_20]
		mov	[esp+4Ch+var_4C], eax
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_7100ABBA
		mov	byte ptr [ebx+24h], 0
		jmp	loc_7100ABBA
; ---------------------------------------------------------------------------

loc_7100AC80:				; CODE XREF: sub_7100AAB0+110j
		mov	edx, [ebx+4]
		lea	esi, [ebx+4]
		mov	eax, [edx]
		cmp	eax, 1
		jz	short loc_7100ACA6
		mov	eax, [edx+4]
		mov	[esp+4Ch+var_44], eax
		mov	eax, [edx+8]
		mov	[esp+4Ch+var_4C], esi
		mov	[esp+4Ch+var_48], eax
		call	sub_7104E6E0
		mov	edx, [ebx+4]

loc_7100ACA6:				; CODE XREF: sub_7100AAB0+1DBj
		mov	ebx, [edx+8]
		mov	eax, [edx+4]
		sub	ebx, 1
		cmp	ebx, eax
		jg	short loc_7100ACC1
		test	byte ptr [edx+0Ch], 2
		jnz	short loc_7100ACE2
		mov	edx, eax
		sar	edx, 1
		cmp	ebx, edx
		jge	short loc_7100ACE2

loc_7100ACC1:				; CODE XREF: sub_7100AAB0+201j
		mov	[esp+4Ch+var_40], 0
		mov	[esp+4Ch+var_44], 4
		mov	[esp+4Ch+var_48], ebx
		mov	[esp+4Ch+var_4C], 14h
		call	ds:_ZN11QVectorData4growEiiib

loc_7100ACE2:				; CODE XREF: sub_7100AAB0+207j
					; sub_7100AAB0+20Fj
		mov	[esp+4Ch+var_44], eax
		mov	[esp+4Ch+var_48], ebx
		mov	[esp+4Ch+var_4C], esi
		call	sub_7104E6E0
		add	esp, 3Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7100AD00:				; CODE XREF: sub_7100AAB0+125j
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_7100AD1D
		mov	eax, [eax+4]
		mov	[esp+4Ch+var_48], edx
		mov	[esp+4Ch+var_4C], esi
		mov	[esp+4Ch+var_44], eax
		call	sub_71049630
		mov	eax, [ebx+0Ch]

loc_7100AD1D:				; CODE XREF: sub_7100AAB0+255j
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_7100AD3A
		mov	edx, [eax+4]
		mov	[esp+4Ch+var_44], edx
		mov	eax, [eax+8]
		mov	[esp+4Ch+var_4C], esi
		mov	[esp+4Ch+var_48], eax
		call	sub_71049630

loc_7100AD3A:				; CODE XREF: sub_7100AAB0+272j
		mov	eax, [ebx+0Ch]
		mov	edx, [eax+8]
		cmp	dword ptr [eax+edx*4+0Ch], 2
		jz	loc_7100ABDB
		mov	eax, [ebx+14h]
		test	eax, eax
		jz	short loc_7100AD67
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_7100AD67
		mov	edx, [eax]
		mov	[esp+4Ch+var_4C], eax
		call	dword ptr [edx+4]

loc_7100AD67:				; CODE XREF: sub_7100AAB0+2A0j
					; sub_7100AAB0+2ADj
		mov	dword ptr [ebx+14h], 0
		mov	eax, 1
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_7100AAB0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7100AD80	proc near		; DATA XREF: sub_7101E100+FE3o

var_D0		= qword	ptr -0D0h
var_C8		= qword	ptr -0C8h
var_BC		= dword	ptr -0BCh
var_B8		= qword	ptr -0B8h
var_AC		= byte ptr -0ACh
var_A8		= dword	ptr -0A8h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_78		= qword	ptr -78h
var_70		= qword	ptr -70h
var_68		= qword	ptr -68h
var_60		= qword	ptr -60h
var_58		= byte ptr -58h
var_4C		= byte ptr -4Ch
var_40		= byte ptr -40h
var_34		= byte ptr -34h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0E8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_8C], eax
		lea	eax, [ebp+var_AC]
		mov	[esp], eax
		mov	[ebp+var_84], esp
		mov	[ebp+var_94], offset sub_710525B0
		mov	[ebp+var_90], offset word_71052F1E
		mov	[ebp+var_88], offset sub_7100B053
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_10]
		mov	[esp+8], eax
		lea	eax, [ebp+var_34]
		mov	[esp], eax
		mov	[ebp+var_10], offset aCx_0 ; "cx"
		mov	[esp+4], edx
		mov	[ebp+var_A8], 0FFFFFFFFh
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		lea	eax, [ebp+var_C]
		lea	edx, [ebp+var_34]
		mov	[ebp+var_A8], 9
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_18]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_40]
		mov	[ebp+var_18], offset aCy_0 ; "cy"
		mov	[esp], eax
		mov	[ebp+var_A8], 8
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_14]
		lea	edx, [ebp+var_40]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_A8], 7
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_20]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_20], offset aRx ; "rx"
		mov	[esp], eax
		mov	[ebp+var_A8], 6
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_1C]
		lea	edx, [ebp+var_4C]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_A8], 5
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_28]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_58]
		mov	[ebp+var_28], offset aRy ; "ry"
		mov	[esp], eax
		mov	[ebp+var_A8], 4
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_24]
		lea	edx, [ebp+var_58]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_A8], 3
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		xor	edx, edx
		lea	eax, [ebp+var_C]
		mov	[ebp+var_A8], 2
		call	sub_71007460
		fstp	[ebp+var_D0]
		xor	edx, edx
		lea	eax, [ebp+var_14]
		call	sub_71007460
		fstp	[ebp+var_C8]
		xor	edx, edx
		lea	eax, [ebp+var_1C]
		call	sub_71007460
		fstp	[ebp+var_B8]
		xor	edx, edx
		lea	eax, [ebp+var_24]
		call	sub_71007460
		fld	[ebp+var_D0]
		fsub	[ebp+var_B8]
		mov	dword ptr [esp], 0A0h ;	size_t
		fstp	[ebp+var_78]
		fld	[ebp+var_C8]
		fsub	st, st(1)
		fstp	[ebp+var_70]
		fld	[ebp+var_B8]
		fadd	st, st
		fstp	[ebp+var_68]
		fadd	st, st
		fstp	[ebp+var_60]
		call	sub_710517F0
		mov	[ebp+var_BC], eax
		lea	eax, [ebp+var_78]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_A8], 1
		mov	[esp+4], eax
		mov	eax, [ebp+var_BC]
		mov	[esp], eax
		call	sub_71001E90
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7100B038

loc_7100AFB3:				; CODE XREF: sub_7100AD80+2CEj
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7100B020

loc_7100AFC0:				; CODE XREF: sub_7100AD80+2B6j
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7100B006

loc_7100AFCD:				; CODE XREF: sub_7100AD80+29Cj
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7100AFF0
		mov	eax, [ebp+var_C]
		mov	[ebp+var_A8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7100AFF0:				; CODE XREF: sub_7100AD80+258j
		lea	eax, [ebp+var_AC]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_BC]
		leave
		retn
; ---------------------------------------------------------------------------

loc_7100B006:				; CODE XREF: sub_7100AD80+24Bj
		mov	eax, [ebp+var_14]
		mov	[ebp+var_A8], 8
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7100AFCD
; ---------------------------------------------------------------------------
		align 10h

loc_7100B020:				; CODE XREF: sub_7100AD80+23Ej
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_A8], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7100AFC0
; ---------------------------------------------------------------------------

loc_7100B038:				; CODE XREF: sub_7100AD80+22Dj
		mov	eax, [ebp+var_24]
		mov	[ebp+var_A8], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7100AFB3
sub_7100AD80	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7100B053	proc near		; DATA XREF: sub_7100AD80+35o
		add	ebp, 8
		mov	eax, [ebp-0A8h]
		mov	edx, [ebp-0A4h]
		cmp	eax, 1
		mov	[ebp-0D4h], edx
		jz	short loc_7100B0A0
		cmp	eax, 2
		jz	short loc_7100B0B5
		cmp	eax, 3
		jz	short loc_7100B0B5
		cmp	eax, 4
		jz	short loc_7100B0CA
		cmp	eax, 5
		nop
		jz	short loc_7100B0CA
		cmp	eax, 6
		jz	short loc_7100B0DF
		cmp	eax, 7
		jz	short loc_7100B0DF
		cmp	eax, 8
		nop
		jz	short loc_7100B10C
		mov	eax, [ebp-0BCh]
		mov	[esp+0], eax
		call	sub_710517D0

loc_7100B0A0:				; CODE XREF: sub_7100B053+18j
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_710477B0

loc_7100B0B5:				; CODE XREF: sub_7100B053+1Dj
					; sub_7100B053+22j
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_710477B0

loc_7100B0CA:				; CODE XREF: sub_7100B053+27j
					; sub_7100B053+2Dj
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_710477B0

loc_7100B0DF:				; CODE XREF: sub_7100B053+32j
					; sub_7100B053+37j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_710477B0
		mov	edx, [ebp-0D4h]
		mov	dword ptr [ebp-0A8h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7100B10C:				; CODE XREF: sub_7100B053+3Dj
		mov	eax, [ebp-0D4h]
		mov	dword ptr [ebp-0A8h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7100B053	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7100B130	proc near		; DATA XREF: sub_7101E100+1027o

var_B0		= qword	ptr -0B0h
var_A8		= qword	ptr -0A8h
var_A0		= dword	ptr -0A0h
var_9C		= byte ptr -9Ch
var_98		= dword	ptr -98h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_68		= qword	ptr -68h
var_60		= qword	ptr -60h
var_58		= qword	ptr -58h
var_50		= qword	ptr -50h
var_44		= byte ptr -44h
var_38		= byte ptr -38h
var_2C		= byte ptr -2Ch
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0C8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_7C], eax
		lea	eax, [ebp+var_9C]
		mov	[esp], eax
		mov	[ebp+var_74], esp
		mov	[ebp+var_84], offset sub_710525B0
		mov	[ebp+var_80], offset dword_71052F34
		mov	[ebp+var_78], offset sub_7100B370
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_10]
		mov	[esp+8], eax
		lea	eax, [ebp+var_2C]
		mov	[esp], eax
		mov	[ebp+var_10], offset aCx_0 ; "cx"
		mov	[esp+4], edx
		mov	[ebp+var_98], 0FFFFFFFFh
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		lea	eax, [ebp+var_C]
		lea	edx, [ebp+var_2C]
		mov	[ebp+var_98], 7
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_18]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_38]
		mov	[ebp+var_18], offset aCy_0 ; "cy"
		mov	[esp], eax
		mov	[ebp+var_98], 6
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_14]
		lea	edx, [ebp+var_38]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_98], 5
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_20]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_44]
		mov	[ebp+var_20], offset aR_0 ; "r"
		mov	[esp], eax
		mov	[ebp+var_98], 4
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_1C]
		lea	edx, [ebp+var_44]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_98], 3
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		xor	edx, edx
		lea	eax, [ebp+var_C]
		mov	[ebp+var_98], 2
		call	sub_71007460
		fstp	[ebp+var_B0]
		xor	edx, edx
		lea	eax, [ebp+var_14]
		call	sub_71007460
		fstp	[ebp+var_A8]
		xor	edx, edx
		lea	eax, [ebp+var_1C]
		call	sub_71007460
		fld	st
		fadd	st, st(1)
		mov	dword ptr [esp], 0A0h ;	size_t
		fld	[ebp+var_B0]
		fsub	st, st(2)
		fstp	[ebp+var_68]
		fxch	st(1)
		fsubr	[ebp+var_A8]
		fstp	[ebp+var_60]
		fst	[ebp+var_58]
		fstp	[ebp+var_50]
		call	sub_710517F0
		mov	[ebp+var_A0], eax
		lea	eax, [ebp+var_68]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_98], 1
		mov	[esp+4], eax
		mov	eax, [ebp+var_A0]
		mov	[esp], eax
		call	sub_71001F00
		mov	edx, [ebp+var_A0]
		mov	eax, [ebp+var_1C]
		mov	dword ptr [edx], offset	off_7105D488
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7100B358

loc_7100B2F7:				; CODE XREF: sub_7100B130+23Ej
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7100B340

loc_7100B304:				; CODE XREF: sub_7100B130+226j
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7100B327
		mov	eax, [ebp+var_C]
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7100B327:				; CODE XREF: sub_7100B130+1DFj
		lea	eax, [ebp+var_9C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_A0]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7100B340:				; CODE XREF: sub_7100B130+1D2j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_98], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7100B304
; ---------------------------------------------------------------------------

loc_7100B358:				; CODE XREF: sub_7100B130+1C5j
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_98], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7100B2F7
sub_7100B130	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7100B370	proc near		; DATA XREF: sub_7100B130+2Co
		add	ebp, 8
		mov	eax, [ebp-98h]
		mov	edx, [ebp-94h]
		cmp	eax, 1
		mov	[ebp-0B4h], edx
		jz	short loc_7100B3B5
		cmp	eax, 2
		jz	short loc_7100B3CA
		cmp	eax, 3
		jz	short loc_7100B3CA
		cmp	eax, 4
		jz	short loc_7100B3DF
		cmp	eax, 5
		lea	esi, [esi+0]
		jz	short loc_7100B3DF
		cmp	eax, 6
		jz	short loc_7100B40C
		mov	eax, [ebp-0A0h]
		mov	[esp+0], eax
		call	sub_710517D0

loc_7100B3B5:				; CODE XREF: sub_7100B370+18j
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0

loc_7100B3CA:				; CODE XREF: sub_7100B370+1Dj
					; sub_7100B370+22j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0

loc_7100B3DF:				; CODE XREF: sub_7100B370+27j
					; sub_7100B370+30j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0
		mov	edx, [ebp-0B4h]
		mov	dword ptr [ebp-98h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7100B40C:				; CODE XREF: sub_7100B370+35j
		mov	eax, [ebp-0B4h]
		mov	dword ptr [ebp-98h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7100B370	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7100B430	proc near		; DATA XREF: sub_7101E100+F11o

var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_28		= byte ptr -28h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		lea	eax, [ebp+var_8]
		add	esp, 0FFFFFF80h
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_34], esp
		mov	[ebp+var_44], offset sub_710525B0
		mov	[ebp+var_40], offset word_71052F46
		mov	[ebp+var_38], offset sub_7100B6A5
		call	_Unwind_SjLj_Register
		lea	eax, [ebp+var_10]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [ebp+var_28]
		mov	[ebp+var_10], offset aPoints ; "points"
		mov	[esp], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], eax
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		lea	eax, [ebp+var_C]
		lea	ecx, [ebp+var_28]
		mov	[ebp+var_58], 5
		sub	esp, 4
		mov	[esp+4], ecx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		mov	eax, [ebp+var_C]
		sub	esp, 4
		lea	edx, [ebp+var_14]
		mov	eax, [eax+0Ch]
		mov	[ebp+var_58], 4
		mov	[ebp+var_14], eax
		lea	eax, [ebp+var_18]
		call	sub_71007710
		mov	eax, [ebp+var_18]
		mov	eax, [eax+8]
		mov	dword ptr [esp+4], 8
		mov	[ebp+var_58], 3
		mov	edx, eax
		shr	edx, 1Fh
		add	edx, eax
		sar	edx, 1
		mov	eax, edx
		shl	eax, 4
		add	eax, 10h
		mov	[ebp+var_70], edx
		mov	[ebp+var_68], edx
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	[ebp+var_60], eax
		jz	loc_7100B698

loc_7100B504:				; CODE XREF: sub_7100B430+270j
		mov	edx, [ebp+var_60]
		mov	[ebp+var_1C], edx
		movzx	eax, byte ptr [edx+0Ch]
		mov	dword ptr [edx], 1
		mov	ecx, [ebp+var_70]
		or	eax, 1
		and	eax, 0FFFFFFFDh
		mov	[edx+0Ch], al
		mov	eax, ecx
		mov	[edx+8], ecx
		shl	eax, 4
		mov	[edx+4], ecx
		mov	edx, [ebp+var_60]
		mov	ecx, [ebp+var_60]
		add	edx, 10h
		lea	eax, [eax+ecx+10h]
		cmp	edx, eax
		jz	short loc_7100B55C
		fldz
		xchg	ax, ax

loc_7100B540:				; CODE XREF: sub_7100B430+11Cj
		sub	eax, 10h
		jz	short loc_7100B54A
		fst	qword ptr [eax]
		fst	qword ptr [eax+8]

loc_7100B54A:				; CODE XREF: sub_7100B430+113j
		cmp	edx, eax
		jnz	short loc_7100B540
		fstp	st
		mov	eax, [ebp+var_1C]
		mov	edx, [eax+8]
		mov	[ebp+var_60], eax
		mov	[ebp+var_68], edx

loc_7100B55C:				; CODE XREF: sub_7100B430+10Aj
		mov	ebx, [ebp+var_68]
		test	ebx, ebx
		jle	short loc_7100B5D5
		mov	[ebp+var_6C], 1
		mov	[ebp+var_64], 0

loc_7100B571:				; CODE XREF: sub_7100B430+1A3j
		mov	ecx, [ebp+var_60]
		mov	eax, [ecx]
		cmp	eax, 1
		jz	short loc_7100B59B
		mov	eax, [ecx+4]
		lea	edx, [ebp+var_1C]
		mov	[esp], edx
		mov	[ebp+var_58], 2
		mov	[esp+8], eax
		mov	eax, [ebp+var_68]
		mov	[esp+4], eax
		call	sub_71048E90

loc_7100B59B:				; CODE XREF: sub_7100B430+149j
		mov	esi, [ebp+var_64]
		mov	ebx, [ebp+var_18]
		mov	edx, [ebp+var_6C]
		mov	ecx, [ebp+var_1C]
		add	esi, 1
		mov	eax, esi
		shl	eax, 4
		add	edx, 2
		fld	qword ptr [eax+ebx]
		fld	qword ptr [ebx+edx*8]
		fstp	qword ptr [ecx+eax+8]
		fstp	qword ptr [eax+ecx]
		mov	ecx, [ebp+var_1C]
		mov	[ebp+var_64], esi
		mov	[ebp+var_6C], edx
		mov	eax, [ecx+8]
		mov	[ebp+var_60], ecx
		cmp	esi, eax
		mov	[ebp+var_68], eax
		jl	short loc_7100B571

loc_7100B5D5:				; CODE XREF: sub_7100B430+131j
		mov	dword ptr [esp], 88h ; size_t
		mov	[ebp+var_58], 2
		call	sub_710517F0
		mov	[ebp+var_74], eax
		lea	eax, [ebp+var_1C]
		mov	edx, [ebp+var_74]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_58], 1
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_71003800
		mov	eax, [ebp+var_1C]
		test	eax, eax
		jz	short loc_7100B637
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7100B637
		mov	eax, [ebp+var_1C]
		mov	dword ptr [esp+4], 8
		mov	[ebp+var_58], 3
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_7100B637:				; CODE XREF: sub_7100B430+1E0j
					; sub_7100B430+1EAj
		mov	eax, [ebp+var_18]
		test	eax, eax
		jz	short loc_7100B663
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7100B663
		mov	eax, [ebp+var_18]
		mov	dword ptr [esp+4], 8
		mov	[ebp+var_58], 4
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_7100B663:				; CODE XREF: sub_7100B430+20Cj
					; sub_7100B430+216j
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7100B683
		mov	eax, [ebp+var_C]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7100B683:				; CODE XREF: sub_7100B430+23Ej
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_74]
		lea	esp, [ebp-8]
		pop	ebx
		pop	esi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_7100B698:				; CODE XREF: sub_7100B430+CEj
		call	ds:_Z9qBadAllocv
		xchg	ax, ax
		jmp	loc_7100B504
sub_7100B430	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7100B6A5	proc near		; DATA XREF: sub_7100B430+25o
		add	ebp, 8
		mov	eax, [ebp-58h]
		mov	ecx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-78h], ecx
		jz	short loc_7100B6D0
		cmp	eax, 2
		jz	short loc_7100B6E2
		cmp	eax, 3
		jz	short loc_7100B6F4
		cmp	eax, 4
		jz	short loc_7100B718
		mov	eax, [ebp-74h]
		mov	[esp+0], eax
		call	sub_710517D0

loc_7100B6D0:				; CODE XREF: sub_7100B6A5+Fj
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_7104F7B0

loc_7100B6E2:				; CODE XREF: sub_7100B6A5+14j
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_7104F050

loc_7100B6F4:				; CODE XREF: sub_7100B6A5+19j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_710477B0
		mov	edx, [ebp-78h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7100B718:				; CODE XREF: sub_7100B6A5+1Ej
		mov	eax, [ebp-78h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7100B6A5	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7100B730	proc near		; DATA XREF: sub_7101E100+ED2o

var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_28		= byte ptr -28h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		lea	eax, [ebp+var_8]
		add	esp, 0FFFFFF80h
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_34], esp
		mov	[ebp+var_44], offset sub_710525B0
		mov	[ebp+var_40], offset dword_71052F54
		mov	[ebp+var_38], offset sub_7100B9A5
		call	_Unwind_SjLj_Register
		lea	eax, [ebp+var_10]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [ebp+var_28]
		mov	[ebp+var_10], offset aPoints ; "points"
		mov	[esp], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], eax
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		lea	eax, [ebp+var_C]
		lea	ecx, [ebp+var_28]
		mov	[ebp+var_58], 5
		sub	esp, 4
		mov	[esp+4], ecx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		mov	eax, [ebp+var_C]
		sub	esp, 4
		lea	edx, [ebp+var_14]
		mov	eax, [eax+0Ch]
		mov	[ebp+var_58], 4
		mov	[ebp+var_14], eax
		lea	eax, [ebp+var_18]
		call	sub_71007710
		mov	eax, [ebp+var_18]
		mov	eax, [eax+8]
		mov	dword ptr [esp+4], 8
		mov	[ebp+var_58], 3
		mov	edx, eax
		shr	edx, 1Fh
		add	edx, eax
		sar	edx, 1
		mov	eax, edx
		shl	eax, 4
		add	eax, 10h
		mov	[ebp+var_70], edx
		mov	[ebp+var_68], edx
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	[ebp+var_60], eax
		jz	loc_7100B998

loc_7100B804:				; CODE XREF: sub_7100B730+270j
		mov	edx, [ebp+var_60]
		mov	[ebp+var_1C], edx
		movzx	eax, byte ptr [edx+0Ch]
		mov	dword ptr [edx], 1
		mov	ecx, [ebp+var_70]
		or	eax, 1
		and	eax, 0FFFFFFFDh
		mov	[edx+0Ch], al
		mov	eax, ecx
		mov	[edx+8], ecx
		shl	eax, 4
		mov	[edx+4], ecx
		mov	edx, [ebp+var_60]
		mov	ecx, [ebp+var_60]
		add	edx, 10h
		lea	eax, [eax+ecx+10h]
		cmp	edx, eax
		jz	short loc_7100B85C
		fldz
		xchg	ax, ax

loc_7100B840:				; CODE XREF: sub_7100B730+11Cj
		sub	eax, 10h
		jz	short loc_7100B84A
		fst	qword ptr [eax]
		fst	qword ptr [eax+8]

loc_7100B84A:				; CODE XREF: sub_7100B730+113j
		cmp	edx, eax
		jnz	short loc_7100B840
		fstp	st
		mov	eax, [ebp+var_1C]
		mov	edx, [eax+8]
		mov	[ebp+var_60], eax
		mov	[ebp+var_68], edx

loc_7100B85C:				; CODE XREF: sub_7100B730+10Aj
		mov	esi, [ebp+var_68]
		test	esi, esi
		jle	short loc_7100B8D5
		mov	[ebp+var_6C], 1
		mov	[ebp+var_64], 0

loc_7100B871:				; CODE XREF: sub_7100B730+1A3j
		mov	ecx, [ebp+var_60]
		mov	eax, [ecx]
		cmp	eax, 1
		jz	short loc_7100B89B
		mov	eax, [ecx+4]
		lea	edx, [ebp+var_1C]
		mov	[esp], edx
		mov	[ebp+var_58], 2
		mov	[esp+8], eax
		mov	eax, [ebp+var_68]
		mov	[esp+4], eax
		call	sub_71048E90

loc_7100B89B:				; CODE XREF: sub_7100B730+149j
		mov	esi, [ebp+var_64]
		mov	ebx, [ebp+var_18]
		mov	edx, [ebp+var_6C]
		mov	ecx, [ebp+var_1C]
		add	esi, 1
		mov	eax, esi
		shl	eax, 4
		add	edx, 2
		fld	qword ptr [eax+ebx]
		fld	qword ptr [ebx+edx*8]
		fstp	qword ptr [ecx+eax+8]
		fstp	qword ptr [eax+ecx]
		mov	ecx, [ebp+var_1C]
		mov	[ebp+var_64], esi
		mov	[ebp+var_6C], edx
		mov	eax, [ecx+8]
		mov	[ebp+var_60], ecx
		cmp	esi, eax
		mov	[ebp+var_68], eax
		jl	short loc_7100B871

loc_7100B8D5:				; CODE XREF: sub_7100B730+131j
		mov	dword ptr [esp], 88h ; size_t
		mov	[ebp+var_58], 2
		call	sub_710517F0
		mov	[ebp+var_74], eax
		lea	eax, [ebp+var_1C]
		mov	edx, [ebp+var_74]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_58], 1
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_710039C0
		mov	eax, [ebp+var_1C]
		test	eax, eax
		jz	short loc_7100B937
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7100B937
		mov	eax, [ebp+var_1C]
		mov	dword ptr [esp+4], 8
		mov	[ebp+var_58], 3
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_7100B937:				; CODE XREF: sub_7100B730+1E0j
					; sub_7100B730+1EAj
		mov	eax, [ebp+var_18]
		test	eax, eax
		jz	short loc_7100B963
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7100B963
		mov	eax, [ebp+var_18]
		mov	dword ptr [esp+4], 8
		mov	[ebp+var_58], 4
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_7100B963:				; CODE XREF: sub_7100B730+20Cj
					; sub_7100B730+216j
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7100B983
		mov	eax, [ebp+var_C]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7100B983:				; CODE XREF: sub_7100B730+23Ej
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_74]
		lea	esp, [ebp-8]
		pop	ebx
		pop	esi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_7100B998:				; CODE XREF: sub_7100B730+CEj
		call	ds:_Z9qBadAllocv
		xchg	ax, ax
		jmp	loc_7100B804
sub_7100B730	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7100B9A5	proc near		; DATA XREF: sub_7100B730+25o
		add	ebp, 8
		mov	eax, [ebp-58h]
		mov	ecx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-78h], ecx
		jz	short loc_7100B9D0
		cmp	eax, 2
		jz	short loc_7100B9E2
		cmp	eax, 3
		jz	short loc_7100B9F4
		cmp	eax, 4
		jz	short loc_7100BA18
		mov	eax, [ebp-74h]
		mov	[esp+0], eax
		call	sub_710517D0

loc_7100B9D0:				; CODE XREF: sub_7100B9A5+Fj
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_7104F7B0

loc_7100B9E2:				; CODE XREF: sub_7100B9A5+14j
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_7104F050

loc_7100B9F4:				; CODE XREF: sub_7100B9A5+19j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_710477B0
		mov	edx, [ebp-78h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7100BA18:				; CODE XREF: sub_7100B9A5+1Ej
		mov	eax, [ebp-78h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7100B9A5	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7100BA30	proc near		; DATA XREF: sub_7101E100+F55o

var_C8		= qword	ptr -0C8h
var_C0		= qword	ptr -0C0h
var_B8		= qword	ptr -0B8h
var_B0		= dword	ptr -0B0h
var_AC		= byte ptr -0ACh
var_A8		= dword	ptr -0A8h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_78		= qword	ptr -78h
var_70		= qword	ptr -70h
var_68		= qword	ptr -68h
var_60		= qword	ptr -60h
var_58		= byte ptr -58h
var_4C		= byte ptr -4Ch
var_40		= byte ptr -40h
var_34		= byte ptr -34h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0E8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_8C], eax
		lea	eax, [ebp+var_AC]
		mov	[esp], eax
		mov	[ebp+var_84], esp
		mov	[ebp+var_94], offset sub_710525B0
		mov	[ebp+var_90], offset word_71052F62
		mov	[ebp+var_88], offset sub_7100BCFB
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_10]
		mov	[esp+8], eax
		lea	eax, [ebp+var_34]
		mov	[esp], eax
		mov	[ebp+var_10], offset aX1 ; "x1"
		mov	[esp+4], edx
		mov	[ebp+var_A8], 0FFFFFFFFh
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		lea	eax, [ebp+var_C]
		lea	edx, [ebp+var_34]
		mov	[ebp+var_A8], 9
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_18]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_40]
		mov	[ebp+var_18], offset aY1 ; "y1"
		mov	[esp], eax
		mov	[ebp+var_A8], 8
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_14]
		lea	edx, [ebp+var_40]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_A8], 7
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_20]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_20], offset aX2 ; "x2"
		mov	[esp], eax
		mov	[ebp+var_A8], 6
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_1C]
		lea	edx, [ebp+var_4C]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_A8], 5
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_28]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_58]
		mov	[ebp+var_28], offset aY2 ; "y2"
		mov	[esp], eax
		mov	[ebp+var_A8], 4
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_24]
		lea	edx, [ebp+var_58]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_A8], 3
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		xor	edx, edx
		lea	eax, [ebp+var_C]
		mov	[ebp+var_A8], 2
		call	sub_71007460
		fstp	[ebp+var_C8]
		xor	edx, edx
		lea	eax, [ebp+var_14]
		call	sub_71007460
		fstp	[ebp+var_C0]
		xor	edx, edx
		lea	eax, [ebp+var_1C]
		call	sub_71007460
		fstp	[ebp+var_B8]
		xor	edx, edx
		lea	eax, [ebp+var_24]
		call	sub_71007460
		fld	[ebp+var_C8]
		fstp	[ebp+var_78]
		fld	[ebp+var_C0]
		fstp	[ebp+var_70]
		fld	[ebp+var_B8]
		fstp	[ebp+var_68]
		fstp	[ebp+var_60]
		mov	dword ptr [esp], 0A0h ;	size_t
		call	sub_710517F0
		mov	[ebp+var_B0], eax
		lea	eax, [ebp+var_78]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_A8], 1
		mov	[esp+4], eax
		mov	eax, [ebp+var_B0]
		mov	[esp], eax
		call	sub_71001DB0
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7100BCE0

loc_7100BC57:				; CODE XREF: sub_7100BA30+2C6j
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7100BCC8

loc_7100BC64:				; CODE XREF: sub_7100BA30+2AEj
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7100BCB0

loc_7100BC71:				; CODE XREF: sub_7100BA30+296j
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7100BC94
		mov	eax, [ebp+var_C]
		mov	[ebp+var_A8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7100BC94:				; CODE XREF: sub_7100BA30+24Cj
		lea	eax, [ebp+var_AC]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_B0]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7100BCB0:				; CODE XREF: sub_7100BA30+23Fj
		mov	eax, [ebp+var_14]
		mov	[ebp+var_A8], 8
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7100BC71
; ---------------------------------------------------------------------------

loc_7100BCC8:				; CODE XREF: sub_7100BA30+232j
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_A8], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7100BC64
; ---------------------------------------------------------------------------

loc_7100BCE0:				; CODE XREF: sub_7100BA30+221j
		mov	eax, [ebp+var_24]
		mov	[ebp+var_A8], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7100BC57
sub_7100BA30	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7100BCFB	proc near		; DATA XREF: sub_7100BA30+35o
		add	ebp, 8
		mov	eax, [ebp-0A8h]
		mov	edx, [ebp-0A4h]
		cmp	eax, 1
		mov	[ebp-0CCh], edx
		jz	short loc_7100BD4A
		cmp	eax, 2
		jz	short loc_7100BD5F
		cmp	eax, 3
		jz	short loc_7100BD5F
		cmp	eax, 4
		jz	short loc_7100BD74
		cmp	eax, 5
		jz	short loc_7100BD74
		cmp	eax, 6
		lea	esi, [esi+0]
		jz	short loc_7100BD89
		cmp	eax, 7
		jz	short loc_7100BD89
		cmp	eax, 8
		jz	short loc_7100BDB6
		mov	eax, [ebp-0B0h]
		mov	[esp+0], eax
		call	sub_710517D0

loc_7100BD4A:				; CODE XREF: sub_7100BCFB+18j
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_710477B0

loc_7100BD5F:				; CODE XREF: sub_7100BCFB+1Dj
					; sub_7100BCFB+22j
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_710477B0

loc_7100BD74:				; CODE XREF: sub_7100BCFB+27j
					; sub_7100BCFB+2Cj
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_710477B0

loc_7100BD89:				; CODE XREF: sub_7100BCFB+35j
					; sub_7100BCFB+3Aj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_710477B0
		mov	edx, [ebp-0CCh]
		mov	dword ptr [ebp-0A8h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7100BDB6:				; CODE XREF: sub_7100BCFB+3Fj
		mov	eax, [ebp-0CCh]
		mov	dword ptr [ebp-0A8h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7100BCFB	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7100BDD0	proc near		; DATA XREF: sub_7101E100+1400o

var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_24		= byte ptr -24h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_34], esp
		mov	[ebp+var_44], offset sub_710525B0
		mov	[ebp+var_40], offset word_71052F7E
		mov	[ebp+var_38], offset sub_7100BF05
		call	_Unwind_SjLj_Register
		lea	eax, [ebp+var_10]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [ebp+var_24]
		mov	[esp], edx
		mov	[ebp+var_10], offset aType ; "type"
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], eax
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		lea	eax, [ebp+var_C]
		lea	edx, [ebp+var_24]
		mov	[ebp+var_58], 3
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_14]
		lea	edx, [ebp+var_C]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_58], 2
		call	ds:_ZNK7QString7toLowerEv
		sub	esp, 4
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_58], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7100BEF0

loc_7100BE8B:				; CODE XREF: sub_7100BDD0+133j
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[ebp+var_18], offset aTextCss ;	"text/css"
		mov	[esp], eax
		mov	[ebp+var_58], 2
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		jz	short loc_7100BEB7
		mov	eax, [ebp+arg_8]
		mov	byte ptr [eax+24h], 1

loc_7100BEB7:				; CODE XREF: sub_7100BDD0+DEj
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7100BED7
		mov	eax, [ebp+var_C]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7100BED7:				; CODE XREF: sub_7100BDD0+F2j
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, 1
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7100BEF0:				; CODE XREF: sub_7100BDD0+B9j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_58], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7100BE8B
sub_7100BDD0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7100BF05	proc near		; DATA XREF: sub_7100BDD0+23o
		add	ebp, 8
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-60h], edx
		jz	short loc_7100BF2D
		cmp	eax, 2
		jz	short loc_7100BF3F
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_710477B0

loc_7100BF2D:				; CODE XREF: sub_7100BF05+Fj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_710477B0

loc_7100BF3F:				; CODE XREF: sub_7100BF05+14j
		mov	eax, [ebp-60h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7100BF05	endp

; ---------------------------------------------------------------------------
		jmp	short sub_7100BF60
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7100BF60	proc near		; CODE XREF: .text:7100BF51j
					; sub_7100C260+D9p ...

var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= qword	ptr -68h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_A		= word ptr -0Ah
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		mov	[ebp+var_6C], eax
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_70], edx
		mov	[ebp+var_74], ecx
		mov	[ebp+var_34], esp
		mov	[ebp+var_44], offset sub_710525B0
		mov	[ebp+var_40], offset dword_71052F88
		mov	[ebp+var_38], offset sub_7100C231
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+var_6C]
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], edx
		call	ds:_ZNK7QString7trimmedEv
		lea	eax, [ebp+var_A]
		lea	edx, [ebp+var_10]
		mov	[ebp+var_A], 25h
		mov	[ebp+var_58], 1
		sub	esp, 4
		mov	dword ptr [esp+8], 1
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZNK7QString8endsWithERK5QCharN2Qt15CaseSensitivityE
		test	al, al
		jz	short loc_7100C046
		lea	eax, [ebp+var_10]
		mov	dword ptr [esp+4], 1
		mov	[esp], eax
		call	ds:_ZN7QString4chopEi
		mov	eax, [ebp+var_70]
		mov	dword ptr [eax], 0

loc_7100C001:				; CODE XREF: sub_7100BF60+130j
					; sub_7100BF60+1ACj ...
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_10]
		mov	[ebp+var_58], 1
		call	sub_71007460
		fstp	[ebp+var_68]
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7100C036
		mov	eax, [ebp+var_10]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7100C036:				; CODE XREF: sub_7100BF60+C1j
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		fld	[ebp+var_68]
		leave
		retn
; ---------------------------------------------------------------------------

loc_7100C046:				; CODE XREF: sub_7100BF60+82j
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[ebp+var_14], offset aPx ; "px"
		mov	dword ptr [esp+8], 1
		mov	[esp], eax
		mov	[ebp+var_58], 1
		call	ds:_ZNK7QString8endsWithERK13QLatin1StringN2Qt15CaseSensitivityE
		test	al, al
		jz	short loc_7100C095
		lea	eax, [ebp+var_10]
		mov	dword ptr [esp+4], 2
		mov	[esp], eax
		call	ds:_ZN7QString4chopEi
		mov	edx, [ebp+var_70]
		mov	dword ptr [edx], 1
		jmp	loc_7100C001
; ---------------------------------------------------------------------------

loc_7100C095:				; CODE XREF: sub_7100BF60+111j
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[ebp+var_18], offset aPc ; "pc"
		mov	dword ptr [esp+8], 1
		mov	[esp], eax
		mov	[ebp+var_58], 1
		call	ds:_ZNK7QString8endsWithERK13QLatin1StringN2Qt15CaseSensitivityE
		test	al, al
		jnz	short loc_7100C111
		lea	eax, [ebp+var_1C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[ebp+var_1C], offset aPt ; "pt"
		mov	dword ptr [esp+8], 1
		mov	[esp], eax
		mov	[ebp+var_58], 1
		call	ds:_ZNK7QString8endsWithERK13QLatin1StringN2Qt15CaseSensitivityE
		test	al, al
		jz	short loc_7100C133
		lea	eax, [ebp+var_10]
		mov	dword ptr [esp+4], 2
		mov	[esp], eax
		call	ds:_ZN7QString4chopEi
		mov	edx, [ebp+var_70]
		mov	dword ptr [edx], 3
		jmp	loc_7100C001
; ---------------------------------------------------------------------------

loc_7100C111:				; CODE XREF: sub_7100BF60+160j
		lea	eax, [ebp+var_10]
		mov	dword ptr [esp+4], 2
		mov	[esp], eax
		call	ds:_ZN7QString4chopEi
		mov	eax, [ebp+var_70]
		mov	dword ptr [eax], 2
		jmp	loc_7100C001
; ---------------------------------------------------------------------------

loc_7100C133:				; CODE XREF: sub_7100BF60+18Dj
		lea	eax, [ebp+var_20]
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[ebp+var_20], offset aMm ; "mm"
		mov	dword ptr [esp+8], 1
		mov	[esp], eax
		mov	[ebp+var_58], 1
		call	ds:_ZNK7QString8endsWithERK13QLatin1StringN2Qt15CaseSensitivityE
		test	al, al
		jnz	short loc_7100C1B0
		lea	eax, [ebp+var_24]
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[ebp+var_24], offset aCm ; "cm"
		mov	dword ptr [esp+8], 1
		mov	[esp], eax
		mov	[ebp+var_58], 1
		call	ds:_ZNK7QString8endsWithERK13QLatin1StringN2Qt15CaseSensitivityE
		test	al, al
		jz	short loc_7100C1D2
		lea	eax, [ebp+var_10]
		mov	dword ptr [esp+4], 2
		mov	[esp], eax
		call	ds:_ZN7QString4chopEi
		mov	edx, [ebp+var_70]
		mov	dword ptr [edx], 5
		jmp	loc_7100C001
; ---------------------------------------------------------------------------
		align 10h

loc_7100C1B0:				; CODE XREF: sub_7100BF60+1FEj
		lea	eax, [ebp+var_10]
		mov	dword ptr [esp+4], 2
		mov	[esp], eax
		call	ds:_ZN7QString4chopEi
		mov	eax, [ebp+var_70]
		mov	dword ptr [eax], 4
		jmp	loc_7100C001
; ---------------------------------------------------------------------------

loc_7100C1D2:				; CODE XREF: sub_7100BF60+22Bj
		lea	eax, [ebp+var_28]
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[ebp+var_28], offset aIn ; "in"
		mov	dword ptr [esp+8], 1
		mov	[esp], eax
		mov	[ebp+var_58], 1
		call	ds:_ZNK7QString8endsWithERK13QLatin1StringN2Qt15CaseSensitivityE
		test	al, al
		jnz	short loc_7100C20F
		mov	edx, [ebp+var_74]
		mov	eax, [edx+18h]
		mov	edx, [ebp+var_70]
		mov	[edx], eax
		jmp	loc_7100C001
; ---------------------------------------------------------------------------

loc_7100C20F:				; CODE XREF: sub_7100BF60+29Dj
		lea	eax, [ebp+var_10]
		mov	dword ptr [esp+4], 2
		mov	[esp], eax
		call	ds:_ZN7QString4chopEi
		mov	eax, [ebp+var_70]
		mov	dword ptr [eax], 6
		jmp	loc_7100C001
sub_7100BF60	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7100C231	proc near		; DATA XREF: sub_7100BF60+2Fo
		add	ebp, 8
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-58h], 0
		mov	[ebp-78h], eax
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		call	sub_710477B0
		mov	edx, [ebp-78h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_7100C231	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7100C260	proc near		; CODE XREF: sub_7100D060+4Dp
					; DATA XREF: sub_7101E100+D86o

var_88		= qword	ptr -88h
var_80		= dword	ptr -80h
var_7C		= byte ptr -7Ch
var_78		= dword	ptr -78h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_48		= qword	ptr -48h
var_40		= qword	ptr -40h
var_34		= byte ptr -34h
var_28		= byte ptr -28h
var_1C		= byte ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0A8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_5C], eax
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		mov	[ebp+var_54], esp
		mov	[ebp+var_64], offset sub_710525B0
		mov	[ebp+var_60], offset word_71052F9A
		mov	[ebp+var_58], offset sub_7100C3E6
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_10]
		mov	[esp+8], eax
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_10], offset asc_710591DE ; "x"
		mov	[esp+4], edx
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		lea	eax, [ebp+var_C]
		lea	edx, [ebp+var_28]
		mov	[ebp+var_78], 5
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_18]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_34]
		mov	[ebp+var_18], offset aY	; "y"
		mov	[esp], eax
		mov	[ebp+var_78], 4
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_14]
		lea	edx, [ebp+var_34]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_78], 3
		call	ds:_ZNK10QStringRef8toStringEv
		mov	ecx, [ebp+arg_8]
		sub	esp, 4
		lea	edx, [ebp+var_1C]
		lea	eax, [ebp+var_C]
		mov	dword ptr [esp], 0
		mov	[ebp+var_78], 2
		call	sub_7100BF60
		mov	ecx, [ebp+arg_8]
		fstp	[ebp+var_88]
		lea	edx, [ebp+var_1C]
		lea	eax, [ebp+var_14]
		mov	dword ptr [esp], 0
		call	sub_7100BF60
		fld	[ebp+var_88]
		fstp	[ebp+var_48]
		fstp	[ebp+var_40]
		mov	dword ptr [esp], 0B0h ;	size_t
		call	sub_710517F0
		mov	[ebp+var_80], eax
		lea	eax, [ebp+var_48]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_78], 1
		mov	[esp+4], eax
		mov	eax, [ebp+var_80]
		mov	[esp], eax
		call	sub_71001B90
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7100C3D1

loc_7100C3A1:				; CODE XREF: sub_7100C260+184j
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7100C3C1
		mov	eax, [ebp+var_C]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7100C3C1:				; CODE XREF: sub_7100C260+14Cj
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_80]
		leave
		retn
; ---------------------------------------------------------------------------

loc_7100C3D1:				; CODE XREF: sub_7100C260+13Fj
		mov	eax, [ebp+var_14]
		mov	[ebp+var_78], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7100C3A1
sub_7100C260	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7100C3E6	proc near		; DATA XREF: sub_7100C260+26o
		add	ebp, 8
		mov	eax, [ebp-78h]
		mov	edx, [ebp-74h]
		cmp	eax, 1
		mov	[ebp-8Ch], edx
		jz	short loc_7100C414
		cmp	eax, 2
		jz	short loc_7100C426
		cmp	eax, 3
		jz	short loc_7100C426
		cmp	eax, 4
		jz	short loc_7100C44D
		mov	eax, [ebp-80h]
		mov	[esp+0], eax
		call	sub_710517D0

loc_7100C414:				; CODE XREF: sub_7100C3E6+12j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_710477B0

loc_7100C426:				; CODE XREF: sub_7100C3E6+17j
					; sub_7100C3E6+1Cj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_710477B0
		mov	edx, [ebp-8Ch]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7100C44D:				; CODE XREF: sub_7100C3E6+21j
		mov	eax, [ebp-8Ch]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7100C3E6	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7100C470	proc near		; DATA XREF: sub_7101E100+E4Fo

var_120		= qword	ptr -120h
var_118		= qword	ptr -118h
var_110		= qword	ptr -110h
var_104		= dword	ptr -104h
var_100		= qword	ptr -100h
var_F8		= qword	ptr -0F8h
var_F0		= qword	ptr -0F0h
var_E8		= qword	ptr -0E8h
var_E0		= word ptr -0E0h
var_DE		= word ptr -0DEh
var_DC		= byte ptr -0DCh
var_D8		= dword	ptr -0D8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_A8		= qword	ptr -0A8h
var_A0		= qword	ptr -0A0h
var_98		= qword	ptr -98h
var_90		= qword	ptr -90h
var_84		= byte ptr -84h
var_78		= byte ptr -78h
var_6C		= byte ptr -6Ch
var_60		= byte ptr -60h
var_54		= byte ptr -54h
var_48		= byte ptr -48h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 148h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_BC], eax
		lea	eax, [ebp+var_DC]
		mov	[esp], eax
		mov	[ebp+var_B4], esp
		mov	[ebp+var_C4], offset sub_710525B0
		mov	[ebp+var_C0], offset dword_71052FA8
		mov	[ebp+var_B8], offset sub_7100C9AB
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_10]
		mov	[esp+8], eax
		lea	eax, [ebp+var_48]
		mov	[esp], eax
		mov	[ebp+var_10], offset asc_710591DE ; "x"
		mov	[esp+4], edx
		mov	[ebp+var_D8], 0FFFFFFFFh
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		lea	eax, [ebp+var_C]
		lea	edx, [ebp+var_48]
		mov	[ebp+var_D8], 0Dh
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_18]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_54]
		mov	[ebp+var_18], offset aY	; "y"
		mov	[esp], eax
		mov	[ebp+var_D8], 0Ch
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_14]
		lea	edx, [ebp+var_54]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_D8], 0Bh
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_20]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_60]
		mov	[ebp+var_20], offset aWidth ; "width"
		mov	[esp], eax
		mov	[ebp+var_D8], 0Ah
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_1C]
		lea	edx, [ebp+var_60]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_D8], 9
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_28]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_6C]
		mov	[ebp+var_28], offset aHeight ; "height"
		mov	[esp], eax
		mov	[ebp+var_D8], 8
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_24]
		lea	edx, [ebp+var_6C]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_D8], 7
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_30]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_78]
		mov	[ebp+var_30], offset aRx ; "rx"
		mov	[esp], eax
		mov	[ebp+var_D8], 6
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_2C]
		lea	edx, [ebp+var_78]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_D8], 5
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_38]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_84]
		mov	[ebp+var_38], offset aRy ; "ry"
		mov	[esp], eax
		mov	[ebp+var_D8], 4
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_34]
		lea	edx, [ebp+var_84]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_D8], 3
		call	ds:_ZNK10QStringRef8toStringEv
		mov	ecx, [ebp+arg_8]
		sub	esp, 4
		lea	edx, [ebp+var_3C]
		lea	eax, [ebp+var_1C]
		mov	dword ptr [esp], 0
		mov	[ebp+var_D8], 2
		call	sub_7100BF60
		mov	edx, [ebp+var_3C]
		mov	eax, 1
		fstp	qword ptr [esp]	; double
		call	sub_71006AA0
		mov	ecx, [ebp+arg_8]
		lea	edx, [ebp+var_3C]
		lea	eax, [ebp+var_24]
		mov	dword ptr [esp], 0
		fstp	[ebp+var_118]
		call	sub_7100BF60
		mov	edx, [ebp+var_3C]
		mov	eax, 1
		fstp	qword ptr [esp]	; double
		call	sub_71006AA0
		lea	eax, [ebp+var_2C]
		xor	edx, edx
		fstp	[ebp+var_110]
		call	sub_71007460
		fstp	[ebp+var_100]
		xor	edx, edx
		lea	eax, [ebp+var_34]
		call	sub_71007460
		fstp	[ebp+var_F8]
		xor	edx, edx
		lea	eax, [ebp+var_14]
		call	sub_71007460
		fstp	[ebp+var_120]
		xor	edx, edx
		lea	eax, [ebp+var_C]
		call	sub_71007460
		fstp	[ebp+var_A8]
		fld	[ebp+var_120]
		fstp	[ebp+var_A0]
		fld	[ebp+var_118]
		fst	[ebp+var_98]
		fld	[ebp+var_110]
		fstp	[ebp+var_90]
		fmul	ds:flt_71059D50
		fld	[ebp+var_100]
		fucomp	st(1)
		fnstsw	ax
		sahf
		jbe	short loc_7100C76B
		fst	[ebp+var_100]

loc_7100C76B:				; CODE XREF: sub_7100C470+2F3j
		fld	[ebp+var_110]
		fmul	ds:flt_71059D50
		fld	[ebp+var_F8]
		fucomp	st(1)
		fnstsw	ax
		sahf
		jbe	short loc_7100C78A
		fst	[ebp+var_F8]

loc_7100C78A:				; CODE XREF: sub_7100C470+312j
		mov	eax, [ebp+var_2C]
		mov	ecx, [eax+8]
		test	ecx, ecx
		jz	loc_7100C8E0
		mov	eax, [ebp+var_34]
		mov	edx, [eax+8]
		test	edx, edx
		jz	loc_7100C900

loc_7100C7A6:				; CODE XREF: sub_7100C470+478j
					; sub_7100C470+48Aj ...
		fld	ds:flt_71059D88
		fdivr	st(2), st
		fxch	st(2)
		mov	dword ptr [esp], 0A8h ;	size_t
		mov	[ebp+var_D8], 2
		fmul	[ebp+var_100]
		fstp	[ebp+var_F0]
		fdivp	st(1), st
		fmul	[ebp+var_F8]
		fstp	[ebp+var_E8]
		call	sub_710517F0
		fnstcw	[ebp+var_DE]
		fld	[ebp+var_E8]
		mov	[ebp+var_104], eax
		mov	[ebp+var_D8], 1
		movzx	eax, [ebp+var_DE]
		mov	ah, 0Ch
		mov	[ebp+var_E0], ax
		lea	eax, [ebp+var_A8]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		fldcw	[ebp+var_E0]
		fistp	dword ptr [esp+10h]
		fldcw	[ebp+var_DE]
		mov	[esp+4], eax
		mov	eax, [ebp+var_104]
		fld	[ebp+var_F0]
		fldcw	[ebp+var_E0]
		fistp	dword ptr [esp+0Ch]
		fldcw	[ebp+var_DE]
		mov	[esp], eax
		call	sub_71001C90
		mov	eax, [ebp+var_34]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7100C990

loc_7100C862:				; CODE XREF: sub_7100C470+536j
		mov	eax, [ebp+var_2C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7100C970

loc_7100C873:				; CODE XREF: sub_7100C470+516j
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7100C930

loc_7100C884:				; CODE XREF: sub_7100C470+4D6j
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7100C911

loc_7100C895:				; CODE XREF: sub_7100C470+4B7j
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7100C950

loc_7100C8A6:				; CODE XREF: sub_7100C470+4F6j
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7100C8C9
		mov	eax, [ebp+var_C]
		mov	[ebp+var_D8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7100C8C9:				; CODE XREF: sub_7100C470+441j
		lea	eax, [ebp+var_DC]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_104]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7100C8E0:				; CODE XREF: sub_7100C470+322j
		mov	eax, [ebp+var_34]
		mov	eax, [eax+8]
		test	eax, eax
		jz	loc_7100C7A6
		fld	[ebp+var_F8]
		fstp	[ebp+var_100]
		jmp	loc_7100C7A6
; ---------------------------------------------------------------------------
		align 10h

loc_7100C900:				; CODE XREF: sub_7100C470+330j
		fld	[ebp+var_100]
		fstp	[ebp+var_F8]
		jmp	loc_7100C7A6
; ---------------------------------------------------------------------------

loc_7100C911:				; CODE XREF: sub_7100C470+41Fj
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_D8], 0Ah
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7100C895
; ---------------------------------------------------------------------------
		align 10h

loc_7100C930:				; CODE XREF: sub_7100C470+40Ej
		mov	eax, [ebp+var_24]
		mov	[ebp+var_D8], 8
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7100C884
; ---------------------------------------------------------------------------
		align 10h

loc_7100C950:				; CODE XREF: sub_7100C470+430j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_D8], 0Ch
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7100C8A6
; ---------------------------------------------------------------------------
		align 10h

loc_7100C970:				; CODE XREF: sub_7100C470+3FDj
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_D8], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7100C873
; ---------------------------------------------------------------------------
		align 10h

loc_7100C990:				; CODE XREF: sub_7100C470+3ECj
		mov	eax, [ebp+var_34]
		mov	[ebp+var_D8], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7100C862
sub_7100C470	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7100C9AB	proc near		; DATA XREF: sub_7100C470+35o
		add	ebp, 8
		mov	eax, [ebp-0D8h]
		mov	edx, [ebp-0D4h]
		cmp	eax, 1
		mov	[ebp-124h], edx
		jz	short loc_7100CA1E
		cmp	eax, 2
		jz	short loc_7100CA33
		cmp	eax, 3
		jz	short loc_7100CA33
		cmp	eax, 4
		jz	short loc_7100CA48
		cmp	eax, 5
		jz	short loc_7100CA48
		cmp	eax, 6
		lea	esi, [esi+0]
		jz	short loc_7100CA5D
		cmp	eax, 7
		jz	short loc_7100CA5D
		cmp	eax, 8
		jz	loc_7100CA72
		cmp	eax, 9
		jz	short loc_7100CA72
		cmp	eax, 0Ah
		jz	loc_7100CA87
		cmp	eax, 0Bh
		jz	loc_7100CA87
		cmp	eax, 0Ch
		jz	loc_7100CAB4
		mov	eax, [ebp-104h]
		mov	[esp+0], eax
		call	sub_710517D0

loc_7100CA1E:				; CODE XREF: sub_7100C9AB+18j
		lea	eax, [ebp-34h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0

loc_7100CA33:				; CODE XREF: sub_7100C9AB+1Dj
					; sub_7100C9AB+22j
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0

loc_7100CA48:				; CODE XREF: sub_7100C9AB+27j
					; sub_7100C9AB+2Cj
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0

loc_7100CA5D:				; CODE XREF: sub_7100C9AB+35j
					; sub_7100C9AB+3Aj
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0

loc_7100CA72:				; CODE XREF: sub_7100C9AB+3Fj
					; sub_7100C9AB+48j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0

loc_7100CA87:				; CODE XREF: sub_7100C9AB+4Dj
					; sub_7100C9AB+56j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0
		mov	edx, [ebp-124h]
		mov	dword ptr [ebp-0D8h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7100CAB4:				; CODE XREF: sub_7100C9AB+5Fj
		mov	eax, [ebp-124h]
		mov	dword ptr [ebp-0D8h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7100C9AB	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7100CAD0	proc near		; CODE XREF: sub_7100CAD0+137p
					; sub_7101FFE0+22Ep

var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= byte ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_710525B0
		mov	[ebp+var_40], offset word_71052FC6
		mov	[ebp+var_38], offset sub_7100CF5D
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_4]
		test	eax, eax
		jz	loc_7100CDB7
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+0Ch]
		mov	[ebp+var_58], 0FFFFFFFFh
		call	eax
		test	eax, eax
		jnz	loc_7100CEC0

loc_7100CB29:				; CODE XREF: sub_7100CAD0+400j
					; sub_7100CAD0+414j ...
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+80h]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_C]
		test	byte ptr [eax+10h], 1
		jz	loc_7100CF38
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_7100CB64

loc_7100CB4F:				; CODE XREF: sub_7100CAD0+482j
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_58], 9
		call	sub_71046DE0
		mov	eax, [ebp+var_C]

loc_7100CB64:				; CODE XREF: sub_7100CAD0+7Dj
					; sub_7100CAD0+488j
		mov	edx, [ebp+var_C]
		mov	ecx, [ebp+arg_4]
		mov	[ebp+var_70], ecx
		mov	ecx, [edx+8]
		lea	ecx, [edx+ecx*4+14h]
		mov	[ebp+var_6C], ecx
		jmp	loc_7100CC13
; ---------------------------------------------------------------------------
		align 10h

loc_7100CB80:				; CODE XREF: sub_7100CAD0+196j
					; sub_7100CAD0+1A0j ...
		mov	edx, [ebp+var_60]
		mov	dword ptr [esp+4], 4
		mov	eax, [edx]
		mov	[ebp+var_58], 9
		mov	[esp], eax
		call	sub_710235E0
		test	eax, eax
		mov	[ebp+var_64], eax
		jz	short loc_7100CBF1
		test	byte ptr [eax+38h], 1
		jnz	short loc_7100CBF1
		mov	eax, [eax+34h]
		mov	[ebp+var_1C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+var_70]
		lea	eax, [ebp+var_1C]
		mov	[esp+4], eax
		mov	[ebp+var_58], 4
		mov	[esp], edx
		call	sub_71024020
		test	eax, eax
		jz	loc_7100CDC4
		mov	ecx, [ebp+var_64]
		or	byte ptr [ecx+38h], 8
		mov	[ecx+30h], eax

loc_7100CBE0:				; CODE XREF: sub_7100CAD0+3B6j
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7100CCD7

loc_7100CBF1:				; CODE XREF: sub_7100CAD0+D1j
					; sub_7100CAD0+D7j ...
		mov	ecx, [ebp+var_60]
		mov	eax, [ecx]
		mov	[ebp+var_58], 9
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_7100CAD0
		mov	eax, [ebp+var_C]
		add	[ebp+var_6C], 4

loc_7100CC13:				; CODE XREF: sub_7100CAD0+A7j
		mov	edx, [ebp+var_6C]
		mov	[ebp+var_60], edx
		mov	eax, [eax]
		cmp	eax, 1
		jz	short loc_7100CC32
		lea	ecx, [ebp+var_C]
		mov	[esp], ecx
		mov	[ebp+var_58], 9
		call	sub_71046DE0

loc_7100CC32:				; CODE XREF: sub_7100CAD0+14Ej
		mov	eax, [ebp+var_C]
		mov	edx, [eax+0Ch]
		lea	eax, [eax+edx*4+14h]
		cmp	[ebp+var_60], eax
		jz	loc_7100CDA5
		mov	edx, [ebp+var_60]
		mov	dword ptr [esp+4], 1
		mov	eax, [edx]
		mov	[ebp+var_58], 9
		mov	[esp], eax
		call	sub_710235E0
		test	eax, eax
		mov	[ebp+var_68], eax
		jz	loc_7100CB80
		test	byte ptr [eax+34h], 1
		jnz	loc_7100CB80
		mov	eax, [eax+30h]
		mov	[ebp+var_1C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+var_70]
		lea	eax, [ebp+var_1C]
		mov	[esp+4], eax
		mov	[ebp+var_58], 8
		mov	[esp], edx
		call	sub_71024020
		test	eax, eax
		jz	short loc_7100CCF0
		mov	ecx, [ebp+var_68]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	sub_71025360

loc_7100CCAE:				; CODE XREF: sub_7100CAD0+2D0j
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7100CB80
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_58], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7100CB80
; ---------------------------------------------------------------------------

loc_7100CCD7:				; CODE XREF: sub_7100CAD0+11Bj
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_58], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7100CBF1
; ---------------------------------------------------------------------------
		align 10h

loc_7100CCF0:				; CODE XREF: sub_7100CAD0+1CDj
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_10]
		lea	edx, [ebp+var_14]
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_58], 7
		call	ds:_ZNK7QString11toLocal8BitEv
		mov	eax, [ebp+var_14]
		sub	esp, 4
		mov	eax, [eax+0Ch]
		mov	dword ptr [esp], offset	aCouldNotResolv	; "Could not resolve property :	%s"
		mov	[ebp+var_58], 6
		mov	[esp+4], eax
		call	ds:_Z8qWarningPKcz
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7100CEA8

loc_7100CD48:				; CODE XREF: sub_7100CAD0+3EBj
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7100CE90

loc_7100CD59:				; CODE XREF: sub_7100CAD0+3D3j
		lea	eax, [ebp+var_18]
		mov	dword ptr [esp+4], 0
		mov	[esp], eax
		mov	[ebp+var_58], 8
		call	ds:_ZN6QBrushC1EN2Qt10BrushStyleE
		mov	ecx, [ebp+var_68]
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		mov	[ebp+var_58], 5
		mov	[esp], ecx
		call	sub_71025A40
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_58], 8
		call	ds:_ZN6QBrushD1Ev
		jmp	loc_7100CCAE
; ---------------------------------------------------------------------------

loc_7100CDA5:				; CODE XREF: sub_7100CAD0+16Fj
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_71047020

loc_7100CDB7:				; CODE XREF: sub_7100CAD0+37j
					; sub_7100CAD0+428j
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_7100CDC4:				; CODE XREF: sub_7100CAD0+100j
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_20], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	edx, [ebp+var_24]
		lea	eax, [ebp+var_20]
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_58], 3
		call	ds:_ZNK7QString11toLocal8BitEv
		mov	eax, [ebp+var_24]
		sub	esp, 4
		mov	eax, [eax+0Ch]
		mov	dword ptr [esp], offset	aCouldNotResolv	; "Could not resolve property :	%s"
		mov	[ebp+var_58], 2
		mov	[esp+4], eax
		call	ds:_Z8qWarningPKcz
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7100CF20

loc_7100CE1C:				; CODE XREF: sub_7100CAD0+463j
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7100CF05

loc_7100CE2D:				; CODE XREF: sub_7100CAD0+448j
		lea	eax, [ebp+var_28]
		mov	dword ptr [esp+4], 0
		mov	[esp], eax
		mov	[ebp+var_58], 4
		call	ds:_ZN6QBrushC1EN2Qt10BrushStyleE
		lea	eax, [ebp+var_28]
		mov	[esp+4], eax
		mov	eax, [ebp+var_64]
		mov	[ebp+var_58], 1
		add	eax, 8
		mov	[esp], eax
		call	ds:_ZN4QPen8setBrushERK6QBrush
		mov	eax, [ebp+var_64]
		mov	dword ptr [eax+30h], 0
		or	byte ptr [eax+38h], 8
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_58], 4
		call	ds:_ZN6QBrushD1Ev
		jmp	loc_7100CBE0
; ---------------------------------------------------------------------------
		align 10h

loc_7100CE90:				; CODE XREF: sub_7100CAD0+283j
		mov	eax, [ebp+var_10]
		mov	[ebp+var_58], 8
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7100CD59
; ---------------------------------------------------------------------------

loc_7100CEA8:				; CODE XREF: sub_7100CAD0+272j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_58], 7
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	loc_7100CD48
; ---------------------------------------------------------------------------

loc_7100CEC0:				; CODE XREF: sub_7100CAD0+53j
		mov	ecx, [ebp+arg_4]
		mov	eax, [ecx]
		mov	[esp], ecx
		call	dword ptr [eax+0Ch]
		cmp	eax, 1
		xchg	ax, ax
		jz	loc_7100CB29
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	[esp], edx
		call	dword ptr [eax+0Ch]
		cmp	eax, 2
		jz	loc_7100CB29
		mov	ecx, [ebp+arg_4]
		mov	eax, [ecx]
		mov	[esp], ecx
		call	dword ptr [eax+0Ch]
		cmp	eax, 3
		jnz	loc_7100CDB7
		xchg	ax, ax
		jmp	loc_7100CB29
; ---------------------------------------------------------------------------

loc_7100CF05:				; CODE XREF: sub_7100CAD0+357j
		mov	eax, [ebp+var_20]
		mov	[ebp+var_58], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7100CE2D
; ---------------------------------------------------------------------------
		align 10h

loc_7100CF20:				; CODE XREF: sub_7100CAD0+346j
		mov	eax, [ebp+var_24]
		mov	[ebp+var_58], 3
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	loc_7100CE1C
; ---------------------------------------------------------------------------

loc_7100CF38:				; CODE XREF: sub_7100CAD0+72j
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_71046DE0
		mov	eax, [ebp+var_C]
		mov	edx, [eax]
		cmp	edx, 1
		jnz	loc_7100CB4F
		jmp	loc_7100CB64
sub_7100CAD0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7100CF5D	proc near		; DATA XREF: sub_7100CAD0+23o
		add	ebp, 8
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-74h], edx
		jz	loc_7100D011
		cmp	eax, 2
		jz	loc_7100D023
		cmp	eax, 3
		jz	short loc_7100CFB5
		cmp	eax, 4
		jz	loc_7100D03A
		cmp	eax, 5
		lea	esi, [esi+0]
		jz	short loc_7100CFEB
		cmp	eax, 6
		jz	short loc_7100CFFD
		cmp	eax, 7
		jz	short loc_7100CFB5
		cmp	eax, 8
		nop
		jz	short loc_7100CFC7
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	ds:_ZN6QBrushD1Ev

loc_7100CFB5:				; CODE XREF: sub_7100CF5D+21j
					; sub_7100CF5D+3Dj ...
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_710477B0

loc_7100CFC7:				; CODE XREF: sub_7100CF5D+43j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_71047020
		mov	eax, [ebp-74h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7100CFEB:				; CODE XREF: sub_7100CF5D+33j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_7103B6E0

loc_7100CFFD:				; CODE XREF: sub_7100CF5D+38j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_710477B0
		jmp	short loc_7100CFB5
; ---------------------------------------------------------------------------

loc_7100D011:				; CODE XREF: sub_7100CF5D+Fj
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_7103B6E0

loc_7100D023:				; CODE XREF: sub_7100CF5D+18j
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_710477B0
		jmp	loc_7100CFB5
; ---------------------------------------------------------------------------

loc_7100D03A:				; CODE XREF: sub_7100CF5D+26j
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	ds:_ZN6QBrushD1Ev
		jmp	loc_7100CFB5
sub_7100CF5D	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7100D060	proc near		; DATA XREF: sub_7101E100+DC5o

var_90		= qword	ptr -90h
var_88		= qword	ptr -88h
var_80		= dword	ptr -80h
var_7C		= byte ptr -7Ch
var_78		= dword	ptr -78h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_48		= qword	ptr -48h
var_40		= qword	ptr -40h
var_34		= byte ptr -34h
var_28		= byte ptr -28h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= byte ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0A8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_5C], eax
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		mov	[ebp+var_64], offset sub_710525B0
		mov	[ebp+var_60], offset dword_71052FEC
		mov	[ebp+var_58], offset sub_7100D210
		mov	[ebp+var_54], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_8]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+8], edx
		mov	[esp], eax
		call	sub_7100C260
		test	eax, eax
		mov	[ebp+var_80], eax
		jz	loc_7100D1D3
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_10]
		mov	[esp+8], eax
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_10], offset aWidth ; "width"
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		lea	eax, [ebp+var_14]
		lea	edx, [ebp+var_28]
		mov	[ebp+var_78], 4
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		mov	ecx, [ebp+arg_8]
		sub	esp, 4
		lea	edx, [ebp+var_C]
		lea	eax, [ebp+var_14]
		mov	dword ptr [esp], 0
		mov	[ebp+var_78], 3
		call	sub_7100BF60
		fstp	[ebp+var_90]
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7100D1F8

loc_7100D131:				; CODE XREF: sub_7100D060+1ABj
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_18]
		mov	[esp+8], eax
		lea	eax, [ebp+var_34]
		mov	[esp], eax
		mov	[ebp+var_18], offset aHeight ; "height"
		mov	[esp+4], edx
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		lea	eax, [ebp+var_1C]
		lea	edx, [ebp+var_34]
		mov	[ebp+var_78], 2
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		mov	ecx, [ebp+arg_8]
		sub	esp, 4
		lea	edx, [ebp+var_C]
		lea	eax, [ebp+var_1C]
		mov	dword ptr [esp], 0
		mov	[ebp+var_78], 1
		call	sub_7100BF60
		fstp	[ebp+var_88]
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7100D1E3

loc_7100D1A8:				; CODE XREF: sub_7100D060+196j
		lea	eax, [ebp+var_48]
		fld	[ebp+var_90]
		mov	[esp+4], eax
		mov	eax, [ebp+var_80]
		fstp	[ebp+var_48]
		fld	[ebp+var_88]
		fstp	[ebp+var_40]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_71001490

loc_7100D1D3:				; CODE XREF: sub_7100D060+57j
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_80]
		leave
		retn
; ---------------------------------------------------------------------------

loc_7100D1E3:				; CODE XREF: sub_7100D060+146j
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_78], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7100D1A8
; ---------------------------------------------------------------------------

loc_7100D1F8:				; CODE XREF: sub_7100D060+CBj
		mov	eax, [ebp+var_14]
		mov	[ebp+var_78], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7100D131
sub_7100D060	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7100D210	proc near		; DATA XREF: sub_7100D060+23o
		add	ebp, 8
		mov	eax, [ebp-78h]
		mov	edx, [ebp-74h]
		cmp	eax, 1
		mov	[ebp-94h], edx
		jz	short loc_7100D240
		cmp	eax, 2
		jz	short loc_7100D255
		cmp	eax, 3
		jz	short loc_7100D240
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_710477B0

loc_7100D240:				; CODE XREF: sub_7100D210+12j
					; sub_7100D210+1Cj ...
		mov	eax, [ebp-94h]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7100D255:				; CODE XREF: sub_7100D210+17j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_710477B0
		jmp	short loc_7100D240
sub_7100D210	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7100D270	proc near		; CODE XREF: sub_7101E100+21Ap
					; sub_7101E100+18D7p

var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_2C		= byte ptr -2Ch
var_20		= byte ptr -20h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		mov	[ebp+var_70], eax
		lea	eax, [ebp+var_8]
		mov	[ebp+var_4C], eax
		lea	eax, [ebp+var_6C]
		mov	[ebp+var_74], edx
		mov	[ebp+var_44], esp
		mov	[ebp+var_54], offset sub_710525B0
		mov	[ebp+var_50], offset dword_71053034
		mov	[ebp+var_48], offset sub_7100D3A6
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		lea	eax, [ebp+var_C]
		mov	[ebp+var_C], offset aId	; "id"
		mov	[esp+8], eax
		mov	edx, [ebp+var_74]
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[esp+4], edx
		mov	[ebp+var_68], 0FFFFFFFFh
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		lea	edx, [ebp+var_20]
		sub	esp, 4
		mov	[esp+4], edx
		mov	eax, [ebp+var_70]
		mov	[esp], eax
		mov	[ebp+var_68], 4
		call	ds:_ZNK10QStringRef8toStringEv
		mov	edx, [ebp+var_70]
		sub	esp, 4
		mov	eax, [edx]
		mov	eax, [eax+8]
		test	eax, eax
		jz	short loc_7100D310

loc_7100D2FC:				; CODE XREF: sub_7100D270+10Dj
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_70]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7100D310:				; CODE XREF: sub_7100D270+8Aj
		lea	edx, [ebp+var_10]
		mov	[ebp+var_10], offset aXmlId ; "xml:id"
		lea	eax, [ebp+var_2C]
		mov	[esp+8], edx
		mov	edx, [ebp+var_74]
		mov	[esp], eax
		mov	[esp+4], edx
		mov	[ebp+var_68], 3
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_14]
		lea	edx, [ebp+var_2C]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_68], 2
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	eax, [ebp+var_70]
		mov	[esp], eax
		mov	[ebp+var_68], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7100D2FC
		mov	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_68], 2
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_70]
		leave
		retn
sub_7100D270	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7100D3A6	proc near		; DATA XREF: sub_7100D270+29o
		add	ebp, 8
		mov	eax, [ebp-68h]
		mov	edx, [ebp-64h]
		cmp	eax, 1
		mov	[ebp-78h], edx
		jz	short loc_7100D3D3
		cmp	eax, 2
		jz	short loc_7100D3D3
		cmp	eax, 3
		jz	short loc_7100D3F7
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_710477B0

loc_7100D3D3:				; CODE XREF: sub_7100D3A6+Fj
					; sub_7100D3A6+14j
		mov	eax, [ebp-70h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_710477B0
		mov	edx, [ebp-78h]
		mov	[esp+0], edx
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7100D3F7:				; CODE XREF: sub_7100D3A6+19j
		mov	eax, [ebp-78h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_7100D3A6	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7100D410	proc near		; CODE XREF: sub_71010720+369p
					; sub_71010F70+3A2p

var_5C		= dword	ptr -5Ch
var_55		= byte ptr -55h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		mov	[ebp+var_54], eax
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_5C], edx
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71053040
		mov	[ebp+var_28], offset sub_7100D4C3
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+var_54]
		mov	[ebp+var_55], 0
		mov	[ebp+var_50], 0
		test	edx, edx
		jz	short loc_7100D48F
		mov	edx, [ebp+var_5C]
		lea	eax, [ebp+var_C]
		mov	[ebp+var_48], 1
		call	sub_71008360
		lea	eax, [ebp+var_C]
		mov	[ebp+var_55], 1
		mov	[esp+4], eax
		mov	eax, [ebp+var_54]
		mov	[esp], eax
		call	sub_71024020
		mov	[ebp+var_50], eax
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7100D4A0

loc_7100D48F:				; CODE XREF: sub_7100D410+45j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_50]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7100D4A0:				; CODE XREF: sub_7100D410+7Dj
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_50]
		leave
		retn
sub_7100D410	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7100D4C3	proc near		; DATA XREF: sub_7100D410+23o
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	byte ptr [ebp-55h], 0
		mov	[ebp-60h], eax
		jz	short loc_7100D4E4
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_710477B0

loc_7100D4E4:				; CODE XREF: sub_7100D4C3+Dj
		mov	eax, [ebp-60h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_7100D4C3	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7100D500	proc near		; CODE XREF: sub_7100DDD0+15p
					; sub_71010720+27Ep ...

var_118		= qword	ptr -118h
var_110		= qword	ptr -110h
var_104		= dword	ptr -104h
var_100		= dword	ptr -100h
var_FC		= dword	ptr -0FCh
var_F8		= dword	ptr -0F8h
var_F4		= dword	ptr -0F4h
var_ED		= byte ptr -0EDh
var_EC		= dword	ptr -0ECh
var_E8		= dword	ptr -0E8h
var_E4		= dword	ptr -0E4h
var_E0		= dword	ptr -0E0h
var_DC		= dword	ptr -0DCh
var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_D0		= dword	ptr -0D0h
var_CC		= dword	ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_C0		= word ptr -0C0h
var_BE		= word ptr -0BEh
var_BC		= byte ptr -0BCh
var_B8		= dword	ptr -0B8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_88		= byte ptr -88h
var_78		= byte ptr -78h
var_68		= byte ptr -68h
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= qword	ptr -40h
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= byte ptr -18h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 13Ch
		mov	[ebp+var_E4], eax
		lea	eax, [ebp+var_18]
		mov	[ebp+var_9C], eax
		lea	eax, [ebp+var_BC]
		mov	[ebp+var_F4], edx
		mov	[esp], eax
		mov	[ebp+var_100], ecx
		mov	[ebp+var_A4], offset sub_710525B0
		mov	[ebp+var_A0], offset word_71053046
		mov	[ebp+var_98], offset sub_7100DD49
		mov	[ebp+var_94], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+var_E4]
		mov	eax, [edx+8]
		test	eax, eax
		jnz	short loc_7100D590

loc_7100D566:				; CODE XREF: sub_7100D500+F9j
					; sub_7100D500+2E2j ...
		mov	[ebp+var_ED], 0

loc_7100D56D:				; CODE XREF: sub_7100D500+1D1j
					; sub_7100D500+295j ...
		lea	eax, [ebp+var_BC]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_ED]
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7100D590:				; CODE XREF: sub_7100D500+64j
		mov	ecx, edx
		mov	edx, [edx]
		sub	eax, 1
		mov	ecx, [ecx+4]
		mov	[ebp+var_DC], eax
		mov	eax, ds:_ZNK5QChar7isSpaceEv
		mov	edx, [edx]
		mov	[ebp+var_C4], eax
		mov	ebx, [edx+0Ch]
		mov	[ebp+var_B8], 0FFFFFFFFh
		lea	ecx, [ebx+ecx*2]
		mov	[ebp+var_E8], ecx
		mov	[esp], ecx
		call	eax ; _ZNK5QChar7isSpaceEv
		test	al, al
		jz	loc_7100D895

loc_7100D5D0:				; CODE XREF: sub_7100D500+3AFj
		mov	ecx, [ebp+var_DC]
		mov	[ebp+var_EC], 0
		test	ecx, ecx
		jns	loc_7100D8E0

loc_7100D5E8:				; CODE XREF: sub_7100D500+42Fj
					; sub_7100D500+443j ...
		mov	ecx, [ebp+var_DC]
		add	ecx, 1
		sub	ecx, [ebp+var_EC]
		test	ecx, ecx
		jle	loc_7100D566
		mov	ebx, [ebp+var_E4]
		mov	eax, [ebp+var_EC]
		mov	[ebp+var_44], ecx
		mov	edx, [ebx]
		add	eax, [ebx+4]
		mov	[ebp+var_4C], edx
		mov	[ebp+var_48], eax

loc_7100D619:				; CODE XREF: sub_7100D500+3CEj
		mov	esi, [ebp+var_4C]
		mov	eax, [ebp+var_48]
		mov	edx, [esi]
		lea	edi, [eax+eax]
		mov	ebx, [edx+0Ch]
		movzx	edx, word ptr [ebx+eax*2]
		cmp	dx, 69h
		jz	loc_7100D7B5
		ja	loc_7100D6D6
		cmp	dx, 23h
		jz	loc_7100D84D
		cmp	dx, 63h
		lea	esi, [esi+0]
		jz	loc_7100D7E7

loc_7100D656:				; CODE XREF: sub_7100D500+1DAj
					; sub_7100D500+1E3j ...
		lea	eax, [ebp+var_38]
		lea	edx, [ebp+var_4C]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_B8], 6
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_38]
		mov	[esp+4], eax
		lea	eax, [ebp+var_88]
		mov	[esp], eax
		mov	[ebp+var_B8], 2
		call	ds:_ZN6QColor13setNamedColorERK7QString
		mov	ebx, [ebp+var_F4]
		lea	eax, [ebp+var_88]
		mov	[esp+4], eax
		mov	[esp], ebx
		call	ds:_ZN6QColoraSERKS_
		mov	eax, [ebp+var_38]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7100D79A

loc_7100D6C0:				; CODE XREF: sub_7100D500+2B0j
		mov	eax, [ebp+var_F4]
		mov	ebx, [eax]
		test	ebx, ebx
		setnz	[ebp+var_ED]
		jmp	loc_7100D56D
; ---------------------------------------------------------------------------

loc_7100D6D6:				; CODE XREF: sub_7100D500+135j
		cmp	dx, 72h
		jnz	loc_7100D656
		cmp	ecx, 6
		jle	loc_7100D656
		lea	edx, [ecx+eax-1]
		cmp	word ptr [ebx+edx*2], 29h
		jnz	loc_7100D656
		mov	[ebp+var_54], eax
		lea	eax, [ebp+var_58]
		mov	[esp+4], eax
		lea	eax, [ebp+var_20]
		mov	[ebp+var_20], offset aRgb ; "rgb("
		mov	[ebp+var_58], esi
		mov	[ebp+var_50], 4
		mov	[esp], eax
		mov	[ebp+var_B8], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_7100D656
		mov	eax, [ebp+var_4C]
		test	eax, eax
		jz	loc_7100DD2F
		mov	edx, [eax]
		mov	eax, [ebp+var_48]
		add	eax, eax
		add	eax, [edx+0Ch]

loc_7100D746:				; CODE XREF: sub_7100D500+837j
		add	eax, 8
		mov	[ebp+var_24], eax
		lea	edx, [ebp+var_24]
		lea	eax, [ebp+var_28]
		mov	[ebp+var_B8], 6
		call	sub_71007710
		mov	eax, [ebp+var_28]
		mov	edx, [eax+8]
		cmp	edx, 1
		jz	loc_7100D996

loc_7100D770:				; CODE XREF: sub_7100D500+6ECj
		cmp	edx, 3
		jz	loc_7100DBFC

loc_7100D779:				; CODE XREF: sub_7100D500+692j
		mov	[ebp+var_ED], 0

loc_7100D780:				; CODE XREF: sub_7100D500+82Aj
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_B8], 6
		call	sub_7104F050
		jmp	loc_7100D56D
; ---------------------------------------------------------------------------

loc_7100D79A:				; CODE XREF: sub_7100D500+1BAj
		mov	eax, [ebp+var_38]
		mov	[ebp+var_B8], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7100D6C0
; ---------------------------------------------------------------------------

loc_7100D7B5:				; CODE XREF: sub_7100D500+12Fj
		mov	eax, ds:off_71059C74
		mov	[ebp+var_B8], 6
		mov	[ebp+var_34], eax
		lea	eax, [ebp+var_4C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_34]
		mov	[esp], eax
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_7100D656
		jmp	loc_7100D566
; ---------------------------------------------------------------------------

loc_7100D7E7:				; CODE XREF: sub_7100D500+150j
		lea	eax, [ebp+var_4C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_30]
		mov	[ebp+var_30], offset aCurrentcolor ; "currentColor"
		mov	[esp], eax
		mov	[ebp+var_B8], 6
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_7100D656
		mov	edx, [ebp+var_100]
		lea	eax, [ebp+var_78]
		mov	[esp], eax
		mov	[esp+4], edx
		call	sub_71006CA0
		mov	ecx, [ebp+var_F4]
		sub	esp, 4
		lea	eax, [ebp+var_78]
		mov	[esp+4], eax
		mov	[esp], ecx
		call	ds:_ZN6QColoraSERKS_
		mov	[ebp+var_ED], 1
		jmp	loc_7100D56D
; ---------------------------------------------------------------------------

loc_7100D84D:				; CODE XREF: sub_7100D500+13Fj
		lea	eax, [ebp+var_1C]
		add	ebx, edi
		mov	[esp+8], eax
		mov	[esp+4], ecx
		mov	[esp], ebx
		call	sub_71008300
		test	al, al
		mov	[ebp+var_ED], al
		jz	loc_7100D56D
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_B8], 6
		mov	[esp+4], eax
		mov	eax, [ebp+var_F4]
		mov	[esp], eax
		call	ds:_ZN6QColor6setRgbEj
		jmp	loc_7100D56D
; ---------------------------------------------------------------------------

loc_7100D895:				; CODE XREF: sub_7100D500+CAj
		mov	edx, [ebp+var_DC]
		mov	ecx, [ebp+var_E8]
		lea	eax, [ecx+edx*2]
		mov	[esp], eax
		call	[ebp+var_C4]
		test	al, al
		jnz	loc_7100D5D0
		mov	ebx, [ebp+var_E4]
		mov	eax, [ebx]
		mov	ecx, [ebx+8]
		mov	[ebp+var_4C], eax
		mov	eax, [ebx+4]
		test	ecx, ecx
		mov	[ebp+var_44], ecx
		mov	[ebp+var_48], eax
		jnz	loc_7100D619
		jmp	loc_7100D566
; ---------------------------------------------------------------------------
		align 10h

loc_7100D8E0:				; CODE XREF: sub_7100D500+E2j
		mov	ecx, [ebp+var_E8]
		mov	ebx, ds:_ZNK5QChar7isSpaceEv
		mov	[ebp+var_F8], ecx
		mov	[ebp+var_D4], ebx

loc_7100D8F8:				; CODE XREF: sub_7100D500+435j
		mov	eax, [ebp+var_F8]
		mov	[ebp+var_B8], 0FFFFFFFFh
		mov	[esp], eax
		call	[ebp+var_D4]
		test	al, al
		jz	short loc_7100D937
		add	[ebp+var_EC], 1
		mov	edx, [ebp+var_EC]
		add	[ebp+var_F8], 2
		cmp	[ebp+var_DC], edx
		jl	loc_7100D5E8
		jmp	short loc_7100D8F8
; ---------------------------------------------------------------------------

loc_7100D937:				; CODE XREF: sub_7100D500+413j
		mov	eax, [ebp+var_DC]
		cmp	[ebp+var_EC], eax
		jg	loc_7100D5E8
		mov	edx, [ebp+var_E8]
		mov	ecx, ds:_ZNK5QChar7isSpaceEv
		lea	edx, [edx+eax*2]
		mov	[ebp+var_E0], edx
		mov	[ebp+var_D0], ecx
		jmp	short loc_7100D96D
; ---------------------------------------------------------------------------

loc_7100D966:				; CODE XREF: sub_7100D500+48Fj
		sub	[ebp+var_DC], 1

loc_7100D96D:				; CODE XREF: sub_7100D500+464j
		mov	ecx, [ebp+var_E0]
		mov	[ebp+var_B8], 0FFFFFFFFh
		mov	[esp], ecx
		call	[ebp+var_D0]
		sub	[ebp+var_E0], 2
		test	al, al
		jnz	short loc_7100D966
		jmp	loc_7100D5E8
; ---------------------------------------------------------------------------

loc_7100D996:				; CODE XREF: sub_7100D500+26Aj
		mov	eax, [ebp+var_4C]
		test	eax, eax
		jz	loc_7100DD3C
		mov	edx, [eax]
		mov	eax, [ebp+var_48]
		add	eax, eax
		add	eax, [edx+0Ch]

loc_7100D9AB:				; CODE XREF: sub_7100D500+844j
		add	eax, 8
		mov	[ebp+var_24], eax
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	[ebp+var_2C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_24]
		test	eax, eax
		jz	loc_7100DAFF
		mov	edx, ds:_ZNK5QChar7isSpaceEv
		mov	[ebp+var_CC], edx
		jmp	short loc_7100D9E1
; ---------------------------------------------------------------------------

loc_7100D9D8:				; CODE XREF: sub_7100D500+4F6j
		mov	eax, [ebp+var_24]
		add	eax, 2
		mov	[ebp+var_24], eax

loc_7100D9E1:				; CODE XREF: sub_7100D500+4D6j
		mov	[esp], eax
		mov	[ebp+var_B8], 1
		call	[ebp+var_CC]
		test	al, al
		jnz	short loc_7100D9D8
		mov	ebx, ds:_ZNK5QChar7isSpaceEv
		mov	[ebp+var_D8], ebx

loc_7100DA04:				; CODE XREF: sub_7100D500+5D0j
		mov	eax, [ebp+var_24]
		movzx	eax, word ptr [eax]
		cmp	ax, 2Fh
		jbe	loc_7100DAE1
		cmp	ax, 39h
		ja	loc_7100DAF5

loc_7100DA1E:				; CODE XREF: sub_7100D500+5E5j
					; sub_7100D500+5EFj ...
		lea	eax, [ebp+var_24]
		mov	[ebp+var_B8], 1
		call	sub_710070E0
		lea	eax, [ebp+var_40]
		mov	[esp+4], eax
		lea	eax, [ebp+var_2C]
		fstp	[ebp+var_40]
		mov	[esp], eax
		mov	[ebp+var_B8], 1
		call	sub_7104ED10
		mov	eax, [ebp+var_24]
		jmp	short loc_7100DA5D
; ---------------------------------------------------------------------------

loc_7100DA54:				; CODE XREF: sub_7100D500+572j
		mov	eax, [ebp+var_24]
		add	eax, 2
		mov	[ebp+var_24], eax

loc_7100DA5D:				; CODE XREF: sub_7100D500+552j
		mov	[esp], eax
		mov	[ebp+var_B8], 1
		call	ds:_ZNK5QChar7isSpaceEv
		test	al, al
		jnz	short loc_7100DA54
		mov	eax, [ebp+var_24]
		cmp	word ptr [eax],	25h
		jnz	short loc_7100DA8B
		lea	esi, [esi+0]
		jmp	short loc_7100DA85
; ---------------------------------------------------------------------------

loc_7100DA82:				; CODE XREF: sub_7100D500+5A0j
		mov	eax, [ebp+var_24]

loc_7100DA85:				; CODE XREF: sub_7100D500+580j
		add	eax, 2
		mov	[ebp+var_24], eax

loc_7100DA8B:				; CODE XREF: sub_7100D500+57Bj
		mov	[esp], eax
		mov	[ebp+var_B8], 1
		call	[ebp+var_D8]
		test	al, al
		jnz	short loc_7100DA82
		mov	eax, [ebp+var_24]
		cmp	word ptr [eax],	2Ch
		jz	loc_7100DBF1

loc_7100DAAF:				; CODE XREF: sub_7100D500+6F7j
		mov	ecx, ds:_ZNK5QChar7isSpaceEv
		mov	[ebp+var_C8], ecx

loc_7100DABB:				; CODE XREF: sub_7100D500+5DFj
		mov	[esp], eax
		mov	[ebp+var_B8], 1
		call	[ebp+var_C8]
		test	al, al
		jz	loc_7100DA04
		mov	eax, [ebp+var_24]
		add	eax, 2
		mov	[ebp+var_24], eax
		jmp	short loc_7100DABB
; ---------------------------------------------------------------------------

loc_7100DAE1:				; CODE XREF: sub_7100D500+50Ej
		cmp	ax, 2Dh
		jz	loc_7100DA1E
		cmp	ax, 2Bh
		jz	loc_7100DA1E

loc_7100DAF5:				; CODE XREF: sub_7100D500+518j
		cmp	ax, 2Eh
		jz	loc_7100DA1E

loc_7100DAFF:				; CODE XREF: sub_7100D500+4C4j
		mov	ecx, [ebp+var_2C]
		mov	[ebp+var_104], ecx
		lock inc dword ptr [ecx]
		setnz	al
		mov	eax, [ebp+var_28]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7100DB39
		mov	eax, [ebp+var_28]
		mov	dword ptr [esp+4], 8
		mov	[ebp+var_B8], 3
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_7100DB39:				; CODE XREF: sub_7100D500+619j
		mov	ebx, [ebp+var_104]
		mov	[ebp+var_28], ebx
		test	byte ptr [ebx+0Ch], 1
		jnz	short loc_7100DB6B
		mov	eax, [ebx+4]
		mov	[esp+8], eax
		mov	eax, [ebx+8]
		mov	[ebp+var_B8], 3
		mov	[esp+4], eax
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		call	sub_7104EDA0

loc_7100DB6B:				; CODE XREF: sub_7100D500+646j
		lea	eax, [ebp+var_2C]
		mov	[esp], eax
		mov	[ebp+var_B8], 4
		call	sub_7104F050
		mov	eax, [ebp+var_28]
		mov	[ebp+var_FC], 0
		mov	edx, [eax+8]
		test	edx, edx
		jle	loc_7100D779

loc_7100DB98:				; CODE XREF: sub_7100D500+6EAj
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_7100DBBF
		mov	eax, [eax+4]
		mov	[esp+4], edx
		mov	[ebp+var_B8], 4
		mov	[esp+8], eax
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		call	sub_7104EDA0

loc_7100DBBF:				; CODE XREF: sub_7100D500+69Dj
		mov	edx, [ebp+var_FC]
		mov	eax, [ebp+var_28]
		add	[ebp+var_FC], 1
		add	edx, 2
		fld	qword ptr [eax+edx*8]
		fmul	ds:dbl_71059D90
		fstp	qword ptr [eax+edx*8]
		mov	eax, [ebp+var_28]
		mov	edx, [eax+8]
		cmp	[ebp+var_FC], edx
		jl	short loc_7100DB98
		jmp	loc_7100D770
; ---------------------------------------------------------------------------

loc_7100DBF1:				; CODE XREF: sub_7100D500+5A9j
		add	eax, 2
		mov	[ebp+var_24], eax
		jmp	loc_7100DAAF
; ---------------------------------------------------------------------------

loc_7100DBFC:				; CODE XREF: sub_7100D500+273j
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_7100DC27
		mov	eax, [eax+4]
		mov	dword ptr [esp+4], 3
		mov	[ebp+var_B8], 4
		mov	[esp+8], eax
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		call	sub_7104EDA0

loc_7100DC27:				; CODE XREF: sub_7100D500+701j
		mov	eax, [ebp+var_28]
		fld	qword ptr [eax+20h]
		mov	edx, eax
		fstp	[ebp+var_118]
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_7100DC64
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_B8], 4
		mov	[esp+4], eax
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		call	sub_7104EDA0
		mov	eax, [ebp+var_28]
		mov	edx, eax

loc_7100DC64:				; CODE XREF: sub_7100D500+73Aj
		fld	qword ptr [eax+18h]
		fstp	[ebp+var_110]
		mov	ecx, [edx]
		cmp	ecx, 1
		jz	short loc_7100DC9A
		mov	eax, [edx+4]
		mov	[esp+8], eax
		mov	eax, [edx+8]
		mov	[ebp+var_B8], 4
		mov	[esp+4], eax
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		call	sub_7104EDA0
		mov	eax, [ebp+var_28]

loc_7100DC9A:				; CODE XREF: sub_7100D500+772j
		fnstcw	[ebp+var_BE]
		fld	[ebp+var_118]
		mov	dword ptr [esp+10h], 0FFh
		movzx	edx, [ebp+var_BE]
		mov	dh, 0Ch
		mov	[ebp+var_C0], dx
		fldcw	[ebp+var_C0]
		fistp	dword ptr [esp+0Ch]
		fldcw	[ebp+var_BE]
		fld	[ebp+var_110]
		fldcw	[ebp+var_C0]
		fistp	dword ptr [esp+8]
		fldcw	[ebp+var_BE]
		fld	qword ptr [eax+10h]
		lea	eax, [ebp+var_68]
		fldcw	[ebp+var_C0]
		fistp	dword ptr [esp+4]
		fldcw	[ebp+var_BE]
		mov	[esp], eax
		mov	[ebp+var_B8], 4
		call	ds:_ZN6QColor6setRgbEiiii
		lea	eax, [ebp+var_68]
		mov	[esp+4], eax
		mov	eax, [ebp+var_F4]
		mov	[esp], eax
		call	ds:_ZN6QColoraSERKS_
		mov	[ebp+var_ED], 1
		jmp	loc_7100D780
; ---------------------------------------------------------------------------

loc_7100DD2F:				; CODE XREF: sub_7100D500+236j
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	eax, [eax+0Ch]
		jmp	loc_7100D746
; ---------------------------------------------------------------------------

loc_7100DD3C:				; CODE XREF: sub_7100D500+49Bj
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	eax, [eax+0Ch]
		jmp	loc_7100D9AB
sub_7100D500	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7100DD49	proc near		; DATA XREF: sub_7100D500+44o
		add	ebp, 18h
		mov	eax, [ebp-0B8h]
		mov	edx, [ebp-0B4h]
		cmp	eax, 1
		mov	[ebp-11Ch], edx
		jz	short loc_7100DDB9
		cmp	eax, 2
		jz	short loc_7100DD77
		cmp	eax, 3
		jz	short loc_7100DD8C
		cmp	eax, 4
		jz	short loc_7100DDA1
		cmp	eax, 5
		jz	short loc_7100DDA1

loc_7100DD77:				; CODE XREF: sub_7100DD49+1Dj
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0B8h], 0
		call	sub_7104F050

loc_7100DD8C:				; CODE XREF: sub_7100DD49+22j
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0B8h], 0
		call	sub_7104F050

loc_7100DDA1:				; CODE XREF: sub_7100DD49+27j
					; sub_7100DD49+2Cj ...
		mov	edx, [ebp-11Ch]
		mov	dword ptr [ebp-0B8h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7100DDB9:				; CODE XREF: sub_7100DD49+18j
		lea	eax, [ebp-38h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0B8h], 0
		call	sub_710477B0
		jmp	short loc_7100DDA1
sub_7100DD49	endp


; =============== S U B	R O U T	I N E =======================================


sub_7100DDD0	proc near		; CODE XREF: sub_7100DE80+F0p
					; sub_7100E900+1FCp ...

var_2C		= dword	ptr -2Ch
var_28		= qword	ptr -28h
var_D		= byte ptr -0Dh
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 2Ch
		mov	[esp+2Ch+var_8], ebx
		mov	ebx, ecx
		mov	ecx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_4], esi
		mov	esi, edx
		mov	edx, ebx
		call	sub_7100D500
		mov	edx, eax
		xor	eax, eax
		test	dl, dl
		jz	short loc_7100DDFE
		mov	edx, [esi+8]
		mov	eax, 1
		test	edx, edx
		jnz	short loc_7100DE10

loc_7100DDFE:				; CODE XREF: sub_7100DDD0+20j
		mov	ebx, [esp+2Ch+var_8]
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7100DE10:				; CODE XREF: sub_7100DDD0+2Cj
		mov	eax, esi
		lea	edx, [esp+2Ch+var_D]
		mov	[esp+2Ch+var_D], 1
		call	sub_71007490
		fldz
		fld	st
		fxch	st(2)
		fucom	st(2)
		fnstsw	ax
		fstp	st(2)
		sahf
		ja	short loc_7100DE60
		fstp	st(1)
		jmp	short loc_7100DE35
; ---------------------------------------------------------------------------

loc_7100DE33:				; CODE XREF: sub_7100DDD0+9Fj
		fstp	st(1)

loc_7100DE35:				; CODE XREF: sub_7100DDD0+61j
					; sub_7100DDD0+A3j
		cmp	[esp+2Ch+var_D], 0
		jnz	short loc_7100DE40
		fstp	st
		fld1

loc_7100DE40:				; CODE XREF: sub_7100DDD0+6Aj
		mov	[esp+2Ch+var_2C], ebx
		fstp	[esp+2Ch+var_28]
		call	ds:_ZN6QColor9setAlphaFEd
		mov	eax, 1
		mov	ebx, [esp+2Ch+var_8]
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7100DE60:				; CODE XREF: sub_7100DDD0+5Dj
		fstp	st
		fld1
		fld	st
		fxch	st(2)
		fucom	st(2)
		fnstsw	ax
		fstp	st(2)
		sahf
		ja	short loc_7100DE33
		fstp	st
		jmp	short loc_7100DE35
sub_7100DDD0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7100DE80	proc near		; DATA XREF: sub_7101E100+1966o

var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= byte ptr -7Ch
var_78		= dword	ptr -78h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_48		= byte ptr -48h
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= byte ptr -20h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
var_4		= dword	ptr -4
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 0A4h
		mov	[ebp+var_5C], eax
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		mov	[ebp+var_54], esp
		mov	[ebp+var_64], offset sub_710525B0
		mov	[ebp+var_60], offset word_71053056
		mov	[ebp+var_58], offset sub_7100DFDC
		call	_Unwind_SjLj_Register
		lea	eax, [ebp+var_20]
		lea	edx, [ebp+var_C]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		mov	[esp], eax
		mov	eax, ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		mov	[ebp+var_C], offset aSolidColor	; "solid-color"
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+4], edx
		mov	[ebp+var_80], eax
		call	eax ; _ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		lea	edx, [ebp+var_10]
		lea	eax, [ebp+var_2C]
		mov	[ebp+var_10], offset aSolidOpacity ; "solid-opacity"
		mov	[ebp+var_78], 3
		sub	esp, 4
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		mov	[esp], eax
		mov	[esp+4], edx
		call	[ebp+var_80]
		mov	ecx, [ebp+var_24]
		sub	esp, 4
		test	ecx, ecx
		jnz	short loc_7100DF4E
		lea	edx, [ebp+var_14]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_38]
		mov	[ebp+var_14], offset aOpacity ;	"opacity"
		mov	[esp], eax
		mov	[ebp+var_78], 2
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		mov	eax, [ebp+var_38]
		sub	esp, 4
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_34]
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_30]
		mov	[ebp+var_24], eax

loc_7100DF4E:				; CODE XREF: sub_7100DE80+8Fj
		lea	eax, [ebp+var_48]
		mov	[esp], eax
		mov	[ebp+var_78], 2
		call	ds:_ZN6QColor10invalidateEv
		mov	ebx, [ebp+arg_8]
		lea	ecx, [ebp+var_48]
		lea	edx, [ebp+var_2C]
		lea	eax, [ebp+var_20]
		mov	[esp], ebx
		call	sub_7100DDD0
		test	al, al
		mov	[ebp+var_84], 0
		jnz	short loc_7100DFA0

loc_7100DF83:				; CODE XREF: sub_7100DE80+15Aj
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_84]
		mov	ebx, [ebp+var_4]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7100DFA0:				; CODE XREF: sub_7100DE80+101j
		mov	dword ptr [esp], 20h ; size_t
		call	sub_710517F0
		mov	[ebp+var_88], eax
		lea	eax, [ebp+var_48]
		mov	[esp+4], eax
		mov	eax, [ebp+var_88]
		mov	[ebp+var_78], 1
		mov	[esp], eax
		call	sub_710269E0
		mov	edx, [ebp+var_88]
		mov	[ebp+var_84], edx
		jmp	short loc_7100DF83
sub_7100DE80	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7100DFDC	proc near		; DATA XREF: sub_7100DE80+27o
		add	ebp, 8
		mov	eax, [ebp-78h]
		mov	edx, [ebp-74h]
		cmp	eax, 1
		mov	[ebp-8Ch], edx
		jz	short loc_7100E003
		cmp	eax, 2
		jz	short loc_7100E003
		mov	eax, [ebp-88h]
		mov	[esp+0], eax
		call	sub_710517D0

loc_7100E003:				; CODE XREF: sub_7100DFDC+12j
					; sub_7100DFDC+17j
		mov	eax, [ebp-8Ch]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7100DFDC	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7100E020	proc near		; DATA XREF: sub_7101E100+D3Ao

var_C0		= qword	ptr -0C0h
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= byte ptr -0ACh
var_A8		= dword	ptr -0A8h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_78		= qword	ptr -78h
var_70		= qword	ptr -70h
var_68		= byte ptr -68h
var_5C		= byte ptr -5Ch
var_50		= byte ptr -50h
var_44		= byte ptr -44h
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_8C], eax
		lea	eax, [ebp+var_AC]
		mov	[esp], eax
		mov	[ebp+var_84], esp
		mov	[ebp+var_94], offset sub_710525B0
		mov	[ebp+var_90], offset word_71053072
		mov	[ebp+var_88], offset sub_7100E4E6
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_10]
		mov	[esp+8], eax
		lea	eax, [ebp+var_44]
		mov	[esp], eax
		mov	[ebp+var_10], offset aXlinkHref	; "xlink:href"
		mov	[esp+4], edx
		mov	[ebp+var_A8], 0FFFFFFFFh
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		lea	eax, [ebp+var_14]
		lea	edx, [ebp+var_44]
		mov	[ebp+var_A8], 0Dh
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_14]
		mov	dword ptr [esp+8], 1
		mov	dword ptr [esp+4], 0
		mov	[esp], eax
		mov	[ebp+var_A8], 0Ch
		call	ds:_ZN7QString6removeEii
		mov	eax, [eax]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7100E3E0

loc_7100E0F4:				; CODE XREF: sub_7100E020+3D6j
		lea	edx, [ebp+var_1C]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_50]
		mov	[ebp+var_1C], offset asc_710591DE ; "x"
		mov	[esp], eax
		mov	[ebp+var_A8], 0Ah
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_18]
		lea	edx, [ebp+var_50]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_A8], 9
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_24]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_5C]
		mov	[ebp+var_24], offset aY	; "y"
		mov	[esp], eax
		mov	[ebp+var_A8], 8
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_20]
		lea	edx, [ebp+var_5C]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_A8], 7
		call	ds:_ZNK10QStringRef8toStringEv
		mov	eax, [ebp+var_C]
		sub	esp, 4
		mov	ecx, [eax+8]
		test	ecx, ecx
		jnz	loc_7100E233
		lea	edx, [ebp+var_28]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_68]
		mov	[ebp+var_28], offset aHref ; "href"
		mov	[esp], eax
		mov	[ebp+var_A8], 6
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_2C]
		lea	edx, [ebp+var_68]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_A8], 5
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_2C]
		mov	dword ptr [esp+8], 1
		mov	dword ptr [esp+4], 0
		mov	[esp], eax
		mov	[ebp+var_A8], 4
		call	ds:_ZN7QString6removeEii
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_2C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7100E4A0

loc_7100E233:				; CODE XREF: sub_7100E020+178j
					; sub_7100E020+496j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+0Ch]
		mov	[ebp+var_A8], 6
		call	eax
		cmp	eax, 4
		sbb	eax, eax
		and	eax, [ebp+arg_0]
		jz	loc_7100E400
		lea	edx, [ebp+var_C]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_A8], 6
		call	sub_710241E0
		test	eax, eax
		mov	[ebp+var_B0], eax
		jz	loc_7100E400
		fldz
		mov	eax, [ebp+var_18]
		fst	[ebp+var_78]
		cmp	eax, ds:_ZN7QString11shared_nullE
		fstp	[ebp+var_70]
		jz	loc_7100E4D8

loc_7100E296:				; CODE XREF: sub_7100E020+4BBj
		mov	ecx, [ebp+arg_8]
		lea	edx, [ebp+var_30]
		lea	eax, [ebp+var_18]
		mov	dword ptr [esp], 0
		mov	[ebp+var_A8], 6
		call	sub_7100BF60
		mov	edx, [ebp+var_30]
		mov	eax, 1
		fstp	qword ptr [esp]	; double
		call	sub_71006AA0
		mov	ecx, [ebp+arg_8]
		lea	edx, [ebp+var_30]
		lea	eax, [ebp+var_20]
		mov	dword ptr [esp], 0
		fstp	[ebp+var_C0]
		call	sub_7100BF60
		mov	edx, [ebp+var_30]
		fstp	qword ptr [esp]	; double
		mov	eax, 1
		call	sub_71006AA0
		fstp	[ebp+var_70]
		fld	[ebp+var_C0]
		fstp	[ebp+var_78]

loc_7100E2FC:				; CODE XREF: sub_7100E020+4C1j
		mov	dword ptr [esp], 98h ; size_t
		mov	[ebp+var_A8], 6
		call	sub_710517F0
		mov	[ebp+var_B4], eax
		mov	eax, [ebp+var_B0]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_A8], 3
		mov	[esp+0Ch], eax
		lea	eax, [ebp+var_78]
		mov	[esp+4], eax
		mov	eax, [ebp+var_B4]
		mov	[esp+8], edx
		mov	[esp], eax
		call	sub_71001AB0
		mov	eax, [ebp+var_B4]
		mov	[ebp+var_B8], eax

loc_7100E354:				; CODE XREF: sub_7100E020+44Fj
					; sub_7100E020+475j
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7100E3B0

loc_7100E365:				; CODE XREF: sub_7100E020+3A6j
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7100E3C8

loc_7100E372:				; CODE XREF: sub_7100E020+3BEj
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7100E395
		mov	eax, [ebp+var_C]
		mov	[ebp+var_A8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7100E395:				; CODE XREF: sub_7100E020+35Dj
		lea	eax, [ebp+var_AC]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_B8]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7100E3B0:				; CODE XREF: sub_7100E020+33Fj
		mov	eax, [ebp+var_20]
		mov	[ebp+var_A8], 8
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7100E365
; ---------------------------------------------------------------------------

loc_7100E3C8:				; CODE XREF: sub_7100E020+350j
		mov	eax, [ebp+var_18]
		mov	[ebp+var_A8], 0Ah
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7100E372
; ---------------------------------------------------------------------------

loc_7100E3E0:				; CODE XREF: sub_7100E020+CEj
		mov	eax, [ebp+var_14]
		mov	[ebp+var_A8], 0Bh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7100E0F4
; ---------------------------------------------------------------------------
		align 10h

loc_7100E400:				; CODE XREF: sub_7100E020+232j
					; sub_7100E020+259j
		mov	eax, [ebp+var_C]
		mov	[ebp+var_34], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_38]
		lea	edx, [ebp+var_34]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_A8], 2
		call	ds:_ZNK7QString11toLocal8BitEv
		mov	eax, [ebp+var_38]
		sub	esp, 4
		mov	eax, [eax+0Ch]
		mov	dword ptr [esp], offset	aLinkSHasnTBeen	; "link	%s hasn't been detected!"
		mov	[ebp+var_A8], 1
		mov	[esp+4], eax
		call	ds:_Z8qWarningPKcz
		mov	eax, [ebp+var_38]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7100E4C0

loc_7100E45A:				; CODE XREF: sub_7100E020+4B6j
		mov	eax, [ebp+var_34]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		mov	[ebp+var_B8], 0
		jnz	loc_7100E354
		mov	eax, [ebp+var_34]
		mov	[ebp+var_A8], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_B8], 0
		jmp	loc_7100E354
; ---------------------------------------------------------------------------
		align 10h

loc_7100E4A0:				; CODE XREF: sub_7100E020+20Dj
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_A8], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7100E233
; ---------------------------------------------------------------------------
		align 10h

loc_7100E4C0:				; CODE XREF: sub_7100E020+438j
		mov	eax, [ebp+var_38]
		mov	[ebp+var_A8], 2
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	short loc_7100E45A
; ---------------------------------------------------------------------------

loc_7100E4D8:				; CODE XREF: sub_7100E020+270j
		cmp	eax, [ebp+var_20]
		jnz	loc_7100E296
		jmp	loc_7100E2FC
sub_7100E020	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7100E4E6	proc near		; DATA XREF: sub_7100E020+35o
		add	ebp, 8
		mov	eax, [ebp-0A8h]
		mov	edx, [ebp-0A4h]
		cmp	eax, 1
		mov	[ebp-0C4h], edx
		jz	short loc_7100E55A
		cmp	eax, 2
		jz	loc_7100E5F7
		cmp	eax, 3
		jz	loc_7100E5DD
		cmp	eax, 4
		jz	short loc_7100E56F
		cmp	eax, 5
		jz	short loc_7100E56F
		cmp	eax, 6
		nop
		jz	short loc_7100E584
		cmp	eax, 7
		jz	short loc_7100E584
		cmp	eax, 8
		jz	short loc_7100E599
		cmp	eax, 9
		nop
		jz	short loc_7100E599
		cmp	eax, 0Ah
		jz	short loc_7100E599
		cmp	eax, 0Bh
		jz	loc_7100E5C6
		cmp	eax, 0Ch
		jz	short loc_7100E5AE
		lea	eax, [ebp-38h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_7103B6E0

loc_7100E55A:				; CODE XREF: sub_7100E4E6+18j
		lea	eax, [ebp-34h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_710477B0

loc_7100E56F:				; CODE XREF: sub_7100E4E6+2Fj
					; sub_7100E4E6+34j ...
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_710477B0

loc_7100E584:				; CODE XREF: sub_7100E4E6+3Aj
					; sub_7100E4E6+3Fj
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_710477B0

loc_7100E599:				; CODE XREF: sub_7100E4E6+44j
					; sub_7100E4E6+4Aj ...
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_710477B0

loc_7100E5AE:				; CODE XREF: sub_7100E4E6+5Dj
					; sub_7100E4E6+F5j
		mov	eax, [ebp-0C4h]
		mov	dword ptr [ebp-0A8h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7100E5C6:				; CODE XREF: sub_7100E4E6+54j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_710477B0
		jmp	short loc_7100E5AE
; ---------------------------------------------------------------------------

loc_7100E5DD:				; CODE XREF: sub_7100E4E6+26j
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_710477B0
		jmp	loc_7100E56F
; ---------------------------------------------------------------------------

loc_7100E5F7:				; CODE XREF: sub_7100E4E6+1Dj
		mov	edx, [ebp-0B4h]
		mov	[esp+0], edx
		call	sub_710517D0
		jmp	loc_7100E56F
sub_7100E4E6	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7100E610	proc near		; DATA XREF: sub_7101E100+1CD0o

var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= qword	ptr -80h
var_74		= dword	ptr -74h
var_6D		= byte ptr -6Dh
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_38		= byte ptr -38h
var_2C		= byte ptr -2Ch
var_20		= byte ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0A8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_4C], eax
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		mov	[ebp+var_54], offset sub_710525B0
		mov	[ebp+var_50], offset word_710530A2
		mov	[ebp+var_48], offset sub_7100E888
		mov	[ebp+var_44], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+10h]
		mov	[ebp+var_68], 0FFFFFFFFh
		call	eax
		mov	[ebp+var_6D], 0
		cmp	eax, 3
		jz	short loc_7100E670

loc_7100E65F:				; CODE XREF: sub_7100E610+20Fj
					; sub_7100E610+22Cj
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_6D]
		leave
		retn
; ---------------------------------------------------------------------------

loc_7100E670:				; CODE XREF: sub_7100E610+4Dj
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_10], offset aFontFamily ; "font-family"
		mov	eax, [eax+8]
		mov	[esp+4], edx
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[ebp+var_74], eax
		lea	eax, [ebp+var_10]
		mov	[esp+8], eax
		lea	eax, [ebp+var_2C]
		mov	[esp], eax
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		lea	eax, [ebp+var_C]
		lea	edx, [ebp+var_2C]
		mov	[ebp+var_68], 5
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_18]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_38]
		mov	[ebp+var_18], offset aUnitsPerEm ; "units-per-em"
		mov	[esp], eax
		mov	[ebp+var_68], 4
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_14]
		lea	edx, [ebp+var_38]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_68], 3
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		xor	edx, edx
		lea	eax, [ebp+var_14]
		mov	[ebp+var_68], 2
		call	sub_71007460
		fstp	[ebp+var_80]
		fldz
		fld	[ebp+var_80]
		fucompp
		fnstsw	ax
		sahf
		jnz	short loc_7100E734
		jp	short loc_7100E734
		fld	ds:flt_71059D98
		fstp	[ebp+var_80]

loc_7100E734:				; CODE XREF: sub_7100E610+117j
					; sub_7100E610+119j
		mov	eax, [ebp+var_C]
		mov	ecx, [eax+8]
		test	ecx, ecx
		jz	short loc_7100E757
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_74]
		mov	[ebp+var_68], 2
		mov	[esp], eax
		call	sub_710299E0

loc_7100E757:				; CODE XREF: sub_7100E610+12Cj
		mov	eax, [ebp+var_74]
		fld	[ebp+var_80]
		fstp	qword ptr [esp+4] ; double
		mov	[ebp+var_68], 2
		mov	[esp], eax	; int
		call	sub_710299D0
		mov	edx, [ebp+var_74]
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[esp+4], edx
		call	sub_710299B0
		mov	eax, [ebp+var_1C]
		sub	esp, 4
		mov	edx, [eax+8]
		mov	[ebp+var_84], edx
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7100E841

loc_7100E79F:				; CODE XREF: sub_7100E610+23Dj
		mov	edx, [ebp+var_84]
		test	edx, edx
		jz	short loc_7100E803
		mov	edx, [ebp+var_74]
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_68], 2
		mov	[esp+4], edx
		call	sub_710299B0
		mov	edx, [ebp+arg_0]
		sub	esp, 4
		lea	eax, [ebp+var_20]
		mov	[esp+4], eax
		mov	eax, [edx+0Ch]
		mov	[ebp+var_68], 1
		mov	[esp], eax
		call	_ZNK16QSvgTinyDocument7svgFontERK7QString
		mov	[ebp+var_88], eax
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_68], 2
		call	sub_710477B0
		mov	eax, [ebp+var_88]
		test	eax, eax
		jz	short loc_7100E867

loc_7100E803:				; CODE XREF: sub_7100E610+197j
					; sub_7100E610+273j
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7100E852

loc_7100E810:				; CODE XREF: sub_7100E610+255j
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		mov	[ebp+var_6D], 1
		jnz	loc_7100E65F
		mov	eax, [ebp+var_C]
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_6D], 1
		jmp	loc_7100E65F
; ---------------------------------------------------------------------------

loc_7100E841:				; CODE XREF: sub_7100E610+189j
		mov	eax, [ebp+var_1C]
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7100E79F
; ---------------------------------------------------------------------------

loc_7100E852:				; CODE XREF: sub_7100E610+1FEj
		mov	eax, [ebp+var_14]
		mov	[ebp+var_68], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7100E810
; ---------------------------------------------------------------------------

loc_7100E867:				; CODE XREF: sub_7100E610+1F1j
		mov	eax, [ebp+var_74]
		mov	edx, [ebp+arg_0]
		mov	[esp+4], eax
		mov	eax, [edx+0Ch]
		mov	[ebp+var_68], 2
		mov	[esp], eax
		call	_ZN16QSvgTinyDocument10addSvgFontEP8QSvgFont
		jmp	loc_7100E803
sub_7100E610	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7100E888	proc near		; DATA XREF: sub_7100E610+23o
		add	ebp, 8
		mov	eax, [ebp-68h]
		mov	edx, [ebp-64h]
		cmp	eax, 1
		mov	[ebp-8Ch], edx
		jz	short loc_7100E8BD
		cmp	eax, 2
		jz	short loc_7100E8CF
		cmp	eax, 3
		jz	short loc_7100E8CF
		cmp	eax, 4
		jz	short loc_7100E8E1
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_710477B0

loc_7100E8BD:				; CODE XREF: sub_7100E888+12j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_710477B0

loc_7100E8CF:				; CODE XREF: sub_7100E888+17j
					; sub_7100E888+1Cj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	sub_710477B0

loc_7100E8E1:				; CODE XREF: sub_7100E888+21j
		mov	eax, [ebp-8Ch]
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7100E888	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7100E900	proc near		; CODE XREF: sub_7100F140+334p
					; sub_7100F6F0+2F3p

var_184		= dword	ptr -184h
var_180		= dword	ptr -180h
var_17C		= dword	ptr -17Ch
var_178		= dword	ptr -178h
var_174		= dword	ptr -174h
var_170		= dword	ptr -170h
var_16C		= byte ptr -16Ch
var_168		= dword	ptr -168h
var_154		= dword	ptr -154h
var_150		= dword	ptr -150h
var_14C		= dword	ptr -14Ch
var_148		= dword	ptr -148h
var_144		= dword	ptr -144h
var_130		= byte ptr -130h
var_100		= byte ptr -100h
var_D0		= qword	ptr -0D0h
var_C8		= qword	ptr -0C8h
var_C0		= qword	ptr -0C0h
var_B8		= qword	ptr -0B8h
var_B0		= qword	ptr -0B0h
var_A8		= qword	ptr -0A8h
var_9C		= byte ptr -9Ch
var_8C		= byte ptr -8Ch
var_80		= byte ptr -80h
var_74		= byte ptr -74h
var_68		= byte ptr -68h
var_5C		= byte ptr -5Ch
var_54		= dword	ptr -54h
var_50		= byte ptr -50h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= byte ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 194h
		mov	[ebp+var_180], eax
		lea	eax, [ebp+var_8]
		mov	[ebp+var_14C], eax
		lea	eax, [ebp+var_16C]
		mov	[esp], eax
		lea	ebx, [ebp+var_50]
		mov	[ebp+var_170], edx
		mov	[ebp+var_174], ecx
		mov	[ebp+var_144], esp
		mov	[ebp+var_154], offset sub_710525B0
		mov	[ebp+var_150], offset dword_710530EC
		mov	[ebp+var_148], offset sub_7100F04E
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+var_170]
		lea	eax, [ebp+var_10]
		lea	ecx, [ebp+var_50]
		mov	[esp+8], eax
		mov	[ebp+var_10], offset aXlinkHref	; "xlink:href"
		mov	[esp+4], edx
		mov	[esp], ecx
		mov	[ebp+var_168], 0FFFFFFFFh
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		lea	eax, [ebp+var_C]
		mov	[ebp+var_168], 0Bh
		sub	esp, 4
		mov	[esp+4], ebx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_14]
		mov	[esp+8], edx
		mov	edx, [ebp+var_170]
		lea	eax, [ebp+var_5C]
		mov	[ebp+var_14], offset aGradienttransf ; "gradientTransform"
		mov	[esp], eax
		mov	[ebp+var_168], 0Ah
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		mov	ebx, [ebp+var_170]
		sub	esp, 4
		lea	eax, [ebp+var_68]
		lea	edx, [ebp+var_1C]
		mov	[ebp+var_1C], offset aSpreadmethod ; "spreadMethod"
		mov	[esp+8], edx
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	[ebp+var_168], 9
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_18]
		lea	edx, [ebp+var_68]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_168], 8
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_74]
		lea	edx, [ebp+var_24]
		mov	[ebp+var_24], offset aGradientunits ; "gradientUnits"
		mov	[esp+8], edx
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	[ebp+var_168], 7
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_20]
		lea	edx, [ebp+var_74]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_168], 6
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_80]
		lea	edx, [ebp+var_28]
		mov	[ebp+var_28], offset aColor ; "color"
		mov	[esp+8], edx
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	[ebp+var_168], 5
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_8C]
		lea	edx, [ebp+var_2C]
		mov	[ebp+var_2C], offset aColorOpacity ; "color-opacity"
		mov	[esp+8], edx
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	[ebp+var_168], 4
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_9C]
		mov	[esp], eax
		mov	[ebp+var_168], 3
		call	ds:_ZN6QColor10invalidateEv
		mov	ebx, [ebp+arg_0]
		lea	ecx, [ebp+var_9C]
		lea	edx, [ebp+var_8C]
		lea	eax, [ebp+var_80]
		mov	[esp], ebx
		call	sub_7100DDD0
		test	al, al
		jz	short loc_7100EB1F
		mov	[esp], ebx
		call	sub_71006D60
		lea	eax, [ebp+var_9C]
		mov	[esp+4], eax
		mov	[esp], ebx
		call	sub_71006ED0

loc_7100EB1F:				; CODE XREF: sub_7100E900+203j
		lea	eax, [ebp+var_D0]
		mov	[esp], eax
		mov	[ebp+var_168], 3
		call	ds:_ZN7QMatrixC1Ev
		mov	eax, [ebp+var_174]
		mov	eax, [eax+8]
		mov	[ebp+var_178], eax
		mov	eax, [ebp+var_C]
		mov	eax, [eax+8]
		test	eax, eax
		jnz	loc_7100EE10

loc_7100EB55:				; CODE XREF: sub_7100E900+566j
					; sub_7100E900+639j
		mov	ecx, [ebp+var_54]
		test	ecx, ecx
		jz	loc_7100EC40
		lea	eax, [ebp+var_130]
		lea	edx, [ebp+var_5C]
		mov	[ebp+var_168], 3
		call	sub_71009E10
		lea	eax, [ebp+var_130]
		mov	[esp+4], eax
		lea	eax, [ebp+var_D0]
		mov	[esp], eax
		call	ds:_ZN7QMatrixaSERKS_
		lea	eax, [ebp+var_D0]
		mov	[esp+4], eax
		mov	eax, [ebp+var_174]
		mov	[esp], eax
		call	sub_71027940

loc_7100EBA9:				; CODE XREF: sub_7100E900+41Cj
		mov	eax, [ebp+var_18]
		mov	edx, [eax+8]
		test	edx, edx
		jnz	loc_7100ED52

loc_7100EBB7:				; CODE XREF: sub_7100E900+44Cj
					; sub_7100E900+689j ...
		mov	eax, [ebp+var_20]
		mov	eax, [eax+8]
		test	eax, eax
		jnz	loc_7100ED99

loc_7100EBC5:				; CODE XREF: sub_7100E900+493j
					; sub_7100E900+4C5j
		mov	eax, [ebp+var_178]
		mov	dword ptr [esp+4], 2
		mov	[ebp+var_168], 3
		mov	[esp], eax
		call	ds:_ZN9QGradient17setCoordinateModeENS_14CoordinateModeE

loc_7100EBE6:				; CODE XREF: sub_7100E900+4BFj
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7100EDF2

loc_7100EBF7:				; CODE XREF: sub_7100E900+508j
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7100EDD7

loc_7100EC08:				; CODE XREF: sub_7100E900+4EDj
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7100EC2B
		mov	eax, [ebp+var_C]
		mov	[ebp+var_168], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7100EC2B:				; CODE XREF: sub_7100E900+313j
		lea	eax, [ebp+var_16C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	ebx, [ebp+var_4]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7100EC40:				; CODE XREF: sub_7100E900+25Aj
		fld1
		fsubr	[ebp+var_D0]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jb	loc_7100EDD0

loc_7100EC59:				; CODE XREF: sub_7100E900+4D2j
		fld	ds:dbl_71059D80
		fucompp
		fnstsw	ax
		sahf
		jb	loc_7100ED22
		fld1
		fsubr	[ebp+var_B8]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jb	loc_7100EE70

loc_7100EC83:				; CODE XREF: sub_7100E900+572j
		fld	ds:dbl_71059D80
		fucompp
		fnstsw	ax
		sahf
		jb	loc_7100ED22
		fld	[ebp+var_C8]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_7100ECA9
		fchs

loc_7100ECA9:				; CODE XREF: sub_7100E900+3A5j
		fld	ds:dbl_71059D80
		fucompp
		fnstsw	ax
		sahf
		jb	short loc_7100ED22
		fld	[ebp+var_C0]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jb	loc_7100F003

loc_7100ECCD:				; CODE XREF: sub_7100E900+705j
		fld	ds:dbl_71059D80
		fucompp
		fnstsw	ax
		sahf
		jb	short loc_7100ED22
		fld	[ebp+var_B0]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_7100ECEF
		fchs

loc_7100ECEF:				; CODE XREF: sub_7100E900+3EBj
		fld	ds:dbl_71059D80
		fucompp
		fnstsw	ax
		sahf
		jb	short loc_7100ED22
		fld	[ebp+var_A8]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_7100ED11
		fchs

loc_7100ED11:				; CODE XREF: sub_7100E900+40Dj
		fld	ds:dbl_71059D80
		fucompp
		fnstsw	ax
		sahf
		jnb	loc_7100EBA9

loc_7100ED22:				; CODE XREF: sub_7100E900+364j
					; sub_7100E900+38Ej ...
		lea	eax, [ebp+var_D0]
		mov	[esp+4], eax
		mov	eax, [ebp+var_174]
		mov	[ebp+var_168], 3
		mov	[esp], eax
		call	sub_71027940
		mov	eax, [ebp+var_18]
		mov	edx, [eax+8]
		test	edx, edx
		jz	loc_7100EBB7

loc_7100ED52:				; CODE XREF: sub_7100E900+2B1j
		lea	eax, [ebp+var_38]
		mov	[esp+4], eax
		lea	eax, [ebp+var_18]
		mov	[ebp+var_38], offset aPad ; "pad"
		mov	[esp], eax
		mov	[ebp+var_168], 3
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		jz	loc_7100EF50
		mov	eax, [ebp+var_20]
		mov	edx, [ebp+var_178]
		mov	eax, [eax+8]
		mov	dword ptr [edx+4], 0
		test	eax, eax
		jz	loc_7100EBC5

loc_7100ED99:				; CODE XREF: sub_7100E900+2BFj
		lea	eax, [ebp+var_44]
		mov	[esp+4], eax
		lea	eax, [ebp+var_20]
		mov	[ebp+var_44], offset aObjectbounding ; "objectBoundingBox"
		mov	[esp], eax
		mov	[ebp+var_168], 3
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		jz	loc_7100EBE6
		jmp	loc_7100EBC5
; ---------------------------------------------------------------------------
		align 10h

loc_7100EDD0:				; CODE XREF: sub_7100E900+353j
		fchs
		jmp	loc_7100EC59
; ---------------------------------------------------------------------------

loc_7100EDD7:				; CODE XREF: sub_7100E900+302j
		mov	eax, [ebp+var_18]
		mov	[ebp+var_168], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7100EC08
; ---------------------------------------------------------------------------

loc_7100EDF2:				; CODE XREF: sub_7100E900+2F1j
		mov	eax, [ebp+var_20]
		mov	[ebp+var_168], 7
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7100EBF7
; ---------------------------------------------------------------------------
		align 10h

loc_7100EE10:				; CODE XREF: sub_7100E900+24Fj
		mov	edx, [ebp+var_180]
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_71024020
		test	eax, eax
		mov	[ebp+var_17C], eax
		jz	short loc_7100EE3E
		mov	ecx, eax
		mov	eax, [eax]
		mov	[esp], ecx
		call	dword ptr [eax+10h]
		cmp	eax, 6
		jz	short loc_7100EE77

loc_7100EE3E:				; CODE XREF: sub_7100E900+52Dj
		mov	ecx, [ebp+arg_0]
		mov	ebx, [ebp+var_174]
		mov	eax, [ecx]
		mov	[esp], ebx
		mov	[ebp+var_168], 3
		mov	[esp+8], eax
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		call	sub_710256F0
		jmp	loc_7100EB55
; ---------------------------------------------------------------------------
		align 10h

loc_7100EE70:				; CODE XREF: sub_7100E900+37Dj
		fchs
		jmp	loc_7100EC83
; ---------------------------------------------------------------------------

loc_7100EE77:				; CODE XREF: sub_7100E900+53Cj
		mov	ebx, [ebp+var_17C]
		mov	eax, [ebx+44h]
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [eax+8]
		mov	[ebp+var_184], edx
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7100EF40

loc_7100EE9D:				; CODE XREF: sub_7100E900+649j
		mov	ebx, [ebp+var_184]
		test	ebx, ebx
		jz	loc_7100EF90
		mov	ebx, [ebp+var_17C]
		mov	ecx, [ebp+arg_0]
		mov	eax, [ebx+44h]
		mov	edx, [ecx]
		mov	[ebp+var_30], eax
		lock inc dword ptr [eax]
		setnz	cl
		lea	eax, [ebp+var_30]
		mov	[esp+4], eax
		mov	eax, [ebp+var_174]
		mov	[esp+8], edx
		mov	[ebp+var_168], 2
		mov	[esp], eax
		call	sub_710256F0
		lea	eax, [ebp+var_30]
		mov	[esp], eax
		mov	[ebp+var_168], 3
		call	sub_710477B0

loc_7100EEFA:				; CODE XREF: sub_7100E900+6FEj
		mov	eax, [ebp+var_17C]
		mov	[ebp+var_168], 3
		add	eax, 10h
		mov	[esp+4], eax
		lea	eax, [ebp+var_100]
		mov	[esp], eax
		call	ds:_ZN7QMatrixC1ERKS_
		lea	eax, [ebp+var_100]
		mov	[esp+4], eax
		lea	eax, [ebp+var_D0]
		mov	[esp], eax
		call	ds:_ZN7QMatrixaSERKS_
		jmp	loc_7100EB55
; ---------------------------------------------------------------------------
		align 10h

loc_7100EF40:				; CODE XREF: sub_7100E900+597j
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7100EE9D
; ---------------------------------------------------------------------------
		align 10h

loc_7100EF50:				; CODE XREF: sub_7100E900+478j
		lea	eax, [ebp+var_3C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_18]
		mov	[ebp+var_3C], offset aReflect ;	"reflect"
		mov	[esp], eax
		mov	[ebp+var_168], 3
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		jz	loc_7100F010
		mov	ecx, [ebp+var_178]
		mov	dword ptr [ecx+4], 1
		jmp	loc_7100EBB7
; ---------------------------------------------------------------------------
		align 10h

loc_7100EF90:				; CODE XREF: sub_7100E900+5A5j
		mov	ecx, [ebp+var_17C]
		lea	eax, [ebp+var_34]
		mov	edx, [ecx+8]
		mov	[esp], eax
		mov	[ebp+var_168], 3
		mov	[esp+4], edx
		call	ds:_ZNK9QGradient5stopsEv
		mov	ebx, [ebp+var_178]
		sub	esp, 4
		lea	eax, [ebp+var_34]
		mov	[esp+4], eax
		mov	[ebp+var_168], 1
		mov	[esp], ebx
		call	ds:_ZN9QGradient8setStopsERK7QVectorI5QPairId6QColorEE
		lea	eax, [ebp+var_34]
		mov	[esp], eax
		mov	[ebp+var_168], 3
		call	sub_71048BC0
		mov	ecx, [ebp+var_17C]
		mov	ebx, [ebp+var_174]
		movzx	eax, byte ptr [ecx+48h]
		mov	[ebx+48h], al
		jmp	loc_7100EEFA
; ---------------------------------------------------------------------------

loc_7100F003:				; CODE XREF: sub_7100E900+3C7j
		fchs
		jmp	loc_7100ECCD
; ---------------------------------------------------------------------------
		align 10h

loc_7100F010:				; CODE XREF: sub_7100E900+676j
		lea	eax, [ebp+var_40]
		mov	[esp+4], eax
		lea	eax, [ebp+var_18]
		mov	[ebp+var_40], offset aRepeat ; "repeat"
		mov	[esp], eax
		mov	[ebp+var_168], 3
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		jz	loc_7100EBB7
		mov	ebx, [ebp+var_178]
		mov	dword ptr [ebx+4], 2
		jmp	loc_7100EBB7
sub_7100E900	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7100F04E	proc near		; DATA XREF: sub_7100E900+4Bo
		add	ebp, 8
		mov	eax, [ebp-168h]
		mov	edx, [ebp-164h]
		cmp	eax, 1
		mov	[ebp-188h], edx
		jz	loc_7100F10C
		cmp	eax, 2
		jz	short loc_7100F0B5
		cmp	eax, 3
		jz	short loc_7100F0B5
		cmp	eax, 4
		jz	short loc_7100F0B5
		cmp	eax, 5
		xchg	ax, ax
		jz	short loc_7100F0CA
		cmp	eax, 6
		jz	short loc_7100F0CA
		cmp	eax, 7
		jz	short loc_7100F0DF
		cmp	eax, 8
		nop
		jz	short loc_7100F0DF
		cmp	eax, 9
		jz	short loc_7100F0DF
		cmp	eax, 0Ah
		jz	loc_7100F123
		lea	eax, [ebp-34h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-168h], 0
		call	sub_71048BC0

loc_7100F0B5:				; CODE XREF: sub_7100F04E+21j
					; sub_7100F04E+26j ...
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-168h], 0
		call	sub_710477B0

loc_7100F0CA:				; CODE XREF: sub_7100F04E+32j
					; sub_7100F04E+37j
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-168h], 0
		call	sub_710477B0

loc_7100F0DF:				; CODE XREF: sub_7100F04E+3Cj
					; sub_7100F04E+42j ...
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-168h], 0
		call	sub_710477B0
		mov	edx, [ebp-188h]
		mov	dword ptr [ebp-168h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7100F10C:				; CODE XREF: sub_7100F04E+18j
		lea	eax, [ebp-30h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-168h], 0
		call	sub_710477B0
		jmp	short loc_7100F0B5
; ---------------------------------------------------------------------------

loc_7100F123:				; CODE XREF: sub_7100F04E+4Cj
		mov	ecx, [ebp-188h]
		mov	dword ptr [ebp-168h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
sub_7100F04E	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7100F140	proc near		; DATA XREF: sub_7101E100+19F2o

var_E0		= qword	ptr -0E0h
var_D8		= qword	ptr -0D8h
var_D0		= qword	ptr -0D0h
var_C8		= qword	ptr -0C8h
var_C0		= qword	ptr -0C0h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= byte ptr -0ACh
var_A8		= dword	ptr -0A8h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_6C		= byte ptr -6Ch
var_60		= byte ptr -60h
var_54		= byte ptr -54h
var_48		= byte ptr -48h
var_3C		= byte ptr -3Ch
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 118h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_8C], eax
		lea	eax, [ebp+var_AC]
		mov	[esp], eax
		mov	[ebp+var_84], esp
		mov	[ebp+var_94], offset sub_710525B0
		mov	[ebp+var_90], offset word_71053106
		mov	[ebp+var_88], offset sub_7100F5DF
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_10]
		mov	[esp+8], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_10], offset aCx_0 ; "cx"
		mov	[esp+4], edx
		mov	[ebp+var_A8], 0FFFFFFFFh
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		lea	eax, [ebp+var_C]
		lea	edx, [ebp+var_3C]
		mov	[ebp+var_A8], 0Ch
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_18]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_48]
		mov	[ebp+var_18], offset aCy_0 ; "cy"
		mov	[esp], eax
		mov	[ebp+var_A8], 0Bh
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_14]
		lea	edx, [ebp+var_48]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_A8], 0Ah
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_20]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_54]
		mov	[ebp+var_20], offset aR_0 ; "r"
		mov	[esp], eax
		mov	[ebp+var_A8], 9
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_1C]
		lea	edx, [ebp+var_54]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_A8], 8
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_28]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_60]
		mov	[ebp+var_28], offset aFx ; "fx"
		mov	[esp], eax
		mov	[ebp+var_A8], 7
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_24]
		lea	edx, [ebp+var_60]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_A8], 6
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_30]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_6C]
		mov	[ebp+var_30], offset aFy ; "fy"
		mov	[esp], eax
		mov	[ebp+var_A8], 5
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_2C]
		lea	edx, [ebp+var_6C]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_A8], 4
		call	ds:_ZNK10QStringRef8toStringEv
		mov	eax, [ebp+var_C]
		sub	esp, 4
		mov	ecx, [eax+8]
		test	ecx, ecx
		jnz	loc_7100F5C0
		fld	ds:flt_71059D50
		fstp	[ebp+var_C8]

loc_7100F324:				; CODE XREF: sub_7100F140+49Aj
		mov	eax, [ebp+var_14]
		mov	edx, [eax+8]
		test	edx, edx
		jnz	loc_7100F5A0
		fld	ds:flt_71059D50
		fstp	[ebp+var_C0]

loc_7100F33E:				; CODE XREF: sub_7100F140+47Aj
		mov	eax, [ebp+var_1C]
		mov	eax, [eax+8]
		test	eax, eax
		jnz	loc_7100F580
		fld	ds:flt_71059D50
		fstp	[ebp+var_E0]

loc_7100F358:				; CODE XREF: sub_7100F140+45Aj
		mov	eax, [ebp+var_24]
		fld	[ebp+var_C8]
		fstp	[ebp+var_D8]
		mov	ecx, [eax+8]
		test	ecx, ecx
		jnz	loc_7100F560

loc_7100F372:				; CODE XREF: sub_7100F140+43Aj
		mov	eax, [ebp+var_2C]
		fld	[ebp+var_C0]
		fstp	[ebp+var_D0]
		mov	edx, [eax+8]
		test	edx, edx
		jz	short loc_7100F3A2
		lea	eax, [ebp+var_2C]
		xor	edx, edx
		mov	[ebp+var_A8], 3
		call	sub_71007460
		fstp	[ebp+var_D0]

loc_7100F3A2:				; CODE XREF: sub_7100F140+246j
		mov	dword ptr [esp], 40h ; size_t
		mov	[ebp+var_A8], 3
		call	sub_710517F0
		fld	[ebp+var_D0]
		fstp	qword ptr [esp+24h]
		fld	[ebp+var_D8]
		fstp	qword ptr [esp+1Ch]
		fld	[ebp+var_E0]
		fstp	qword ptr [esp+14h]
		fld	[ebp+var_C0]
		fstp	qword ptr [esp+0Ch]
		fld	[ebp+var_C8]
		mov	[ebp+var_B4], eax
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		mov	[ebp+var_A8], 2
		call	ds:_ZN15QRadialGradientC1Eddddd
		mov	edx, [ebp+var_B4]
		mov	dword ptr [esp+4], 1
		mov	[ebp+var_A8], 3
		mov	[esp], edx
		call	ds:_ZN9QGradient20setInterpolationModeENS_17InterpolationModeE
		mov	dword ptr [esp], 50h ; size_t
		call	sub_710517F0
		mov	[ebp+var_B0], eax
		mov	eax, [ebp+var_B4]
		mov	edx, [ebp+var_B0]
		mov	[ebp+var_A8], 1
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_71027960
		mov	eax, [ebp+arg_8]
		mov	ecx, [ebp+var_B0]
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_A8], 3
		mov	[esp], eax
		mov	eax, [ebp+arg_0]
		call	sub_7100E900
		mov	eax, [ebp+var_2C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7100F540

loc_7100F48A:				; CODE XREF: sub_7100F140+416j
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7100F520

loc_7100F49B:				; CODE XREF: sub_7100F140+3F6j
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7100F508

loc_7100F4A8:				; CODE XREF: sub_7100F140+3DEj
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7100F4F0

loc_7100F4B5:				; CODE XREF: sub_7100F140+3C6j
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7100F4D8
		mov	eax, [ebp+var_C]
		mov	[ebp+var_A8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7100F4D8:				; CODE XREF: sub_7100F140+380j
		lea	eax, [ebp+var_AC]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_B0]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7100F4F0:				; CODE XREF: sub_7100F140+373j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_A8], 0Bh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7100F4B5
; ---------------------------------------------------------------------------

loc_7100F508:				; CODE XREF: sub_7100F140+366j
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_A8], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7100F4A8
; ---------------------------------------------------------------------------

loc_7100F520:				; CODE XREF: sub_7100F140+355j
		mov	eax, [ebp+var_24]
		mov	[ebp+var_A8], 7
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7100F49B
; ---------------------------------------------------------------------------
		align 10h

loc_7100F540:				; CODE XREF: sub_7100F140+344j
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_A8], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7100F48A
; ---------------------------------------------------------------------------
		align 10h

loc_7100F560:				; CODE XREF: sub_7100F140+22Cj
		lea	eax, [ebp+var_24]
		xor	edx, edx
		mov	[ebp+var_A8], 3
		call	sub_71007460
		fstp	[ebp+var_D8]
		jmp	loc_7100F372
; ---------------------------------------------------------------------------
		align 10h

loc_7100F580:				; CODE XREF: sub_7100F140+206j
		lea	eax, [ebp+var_1C]
		xor	edx, edx
		mov	[ebp+var_A8], 3
		call	sub_71007460
		fstp	[ebp+var_E0]
		jmp	loc_7100F358
; ---------------------------------------------------------------------------
		align 10h

loc_7100F5A0:				; CODE XREF: sub_7100F140+1ECj
		lea	eax, [ebp+var_14]
		xor	edx, edx
		mov	[ebp+var_A8], 3
		call	sub_71007460
		fstp	[ebp+var_C0]
		jmp	loc_7100F33E
; ---------------------------------------------------------------------------
		align 10h

loc_7100F5C0:				; CODE XREF: sub_7100F140+1D2j
		lea	eax, [ebp+var_C]
		xor	edx, edx
		mov	[ebp+var_A8], 3
		call	sub_71007460
		fstp	[ebp+var_C8]
		jmp	loc_7100F324
sub_7100F140	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7100F5DF	proc near		; DATA XREF: sub_7100F140+35o
		add	ebp, 8
		mov	eax, [ebp-0A8h]
		mov	edx, [ebp-0A4h]
		cmp	eax, 1
		mov	[ebp-0E4h], edx
		jz	loc_7100F6C5
		cmp	eax, 2
		jz	short loc_7100F644
		cmp	eax, 3
		jz	short loc_7100F659
		cmp	eax, 4
		jz	short loc_7100F659
		cmp	eax, 5
		nop
		jz	short loc_7100F66E
		cmp	eax, 6
		jz	short loc_7100F66E
		cmp	eax, 7
		jz	short loc_7100F683
		cmp	eax, 8
		nop
		jz	short loc_7100F683
		cmp	eax, 9
		jz	short loc_7100F698
		cmp	eax, 0Ah
		jz	short loc_7100F698
		cmp	eax, 0Bh
		nop
		jz	loc_7100F6D8
		mov	eax, [ebp-0B0h]
		mov	[esp+0], eax
		call	sub_710517D0

loc_7100F644:				; CODE XREF: sub_7100F5DF+21j
					; sub_7100F5DF+F4j
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_710477B0

loc_7100F659:				; CODE XREF: sub_7100F5DF+26j
					; sub_7100F5DF+2Bj
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_710477B0

loc_7100F66E:				; CODE XREF: sub_7100F5DF+31j
					; sub_7100F5DF+36j
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_710477B0

loc_7100F683:				; CODE XREF: sub_7100F5DF+3Bj
					; sub_7100F5DF+41j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_710477B0

loc_7100F698:				; CODE XREF: sub_7100F5DF+46j
					; sub_7100F5DF+4Bj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_710477B0
		mov	edx, [ebp-0E4h]
		mov	dword ptr [ebp-0A8h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7100F6C5:				; CODE XREF: sub_7100F5DF+18j
		mov	eax, [ebp-0B4h]
		mov	[esp+0], eax
		call	sub_710517D0
		jmp	loc_7100F644
; ---------------------------------------------------------------------------

loc_7100F6D8:				; CODE XREF: sub_7100F5DF+51j
		mov	eax, [ebp-0E4h]
		mov	dword ptr [ebp-0A8h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7100F5DF	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7100F6F0	proc near		; DATA XREF: sub_7101E100+1AA9o

var_CC		= dword	ptr -0CCh
var_C8		= qword	ptr -0C8h
var_C0		= qword	ptr -0C0h
var_B8		= qword	ptr -0B8h
var_B0		= qword	ptr -0B0h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= byte ptr -9Ch
var_98		= dword	ptr -98h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_5C		= byte ptr -5Ch
var_50		= byte ptr -50h
var_44		= byte ptr -44h
var_38		= byte ptr -38h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 108h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_7C], eax
		lea	eax, [ebp+var_9C]
		mov	[esp], eax
		mov	[ebp+var_74], esp
		mov	[ebp+var_84], offset sub_710525B0
		mov	[ebp+var_80], offset word_71053122
		mov	[ebp+var_78], offset sub_7100FBA4
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_10]
		mov	[esp+8], eax
		lea	eax, [ebp+var_38]
		mov	[esp], eax
		mov	[ebp+var_10], offset aX1 ; "x1"
		mov	[esp+4], edx
		mov	[ebp+var_98], 0FFFFFFFFh
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		lea	eax, [ebp+var_C]
		lea	edx, [ebp+var_38]
		mov	[ebp+var_98], 0Ah
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_18]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_44]
		mov	[ebp+var_18], offset aY1 ; "y1"
		mov	[esp], eax
		mov	[ebp+var_98], 9
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_14]
		lea	edx, [ebp+var_44]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_98], 8
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_20]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_50]
		mov	[ebp+var_20], offset aX2 ; "x2"
		mov	[esp], eax
		mov	[ebp+var_98], 7
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_1C]
		lea	edx, [ebp+var_50]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_98], 6
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_28]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_5C]
		mov	[ebp+var_28], offset aY2 ; "y2"
		mov	[esp], eax
		mov	[ebp+var_98], 5
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_24]
		lea	edx, [ebp+var_5C]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_98], 4
		call	ds:_ZNK10QStringRef8toStringEv
		mov	eax, [ebp+var_C]
		sub	esp, 4
		mov	ecx, [eax+8]
		test	ecx, ecx
		jnz	loc_7100FB63
		fldz
		fstp	[ebp+var_C8]
		jmp	short loc_7100F880
; ---------------------------------------------------------------------------

loc_7100F878:				; CODE XREF: sub_7100F6F0+49Dj
		fstp	st
		lea	esi, [esi+0]

loc_7100F880:				; CODE XREF: sub_7100F6F0+186j
					; sub_7100F6F0+4AFj
		mov	eax, [ebp+var_14]
		mov	eax, [eax+8]
		test	eax, eax
		jnz	loc_7100FB22
		fldz
		fstp	[ebp+var_C0]
		jmp	short loc_7100F8A0
; ---------------------------------------------------------------------------

loc_7100F898:				; CODE XREF: sub_7100F6F0+45Cj
		fstp	st
		lea	esi, [esi+0]

loc_7100F8A0:				; CODE XREF: sub_7100F6F0+1A6j
					; sub_7100F6F0+46Ej
		mov	eax, [ebp+var_1C]
		mov	edx, [eax+8]
		test	edx, edx
		jnz	loc_7100FAE1
		fld1
		fstp	[ebp+var_B8]
		jmp	short loc_7100F8C0
; ---------------------------------------------------------------------------

loc_7100F8B8:				; CODE XREF: sub_7100F6F0+41Bj
		fstp	st
		lea	esi, [esi+0]

loc_7100F8C0:				; CODE XREF: sub_7100F6F0+1C6j
					; sub_7100F6F0+42Dj
		mov	eax, [ebp+var_24]
		mov	ecx, [eax+8]
		test	ecx, ecx
		jnz	loc_7100FAA0
		fldz
		fstp	[ebp+var_B0]
		jmp	short loc_7100F8E0
; ---------------------------------------------------------------------------

loc_7100F8D8:				; CODE XREF: sub_7100F6F0+3DAj
		fstp	st
		lea	esi, [esi+0]

loc_7100F8E0:				; CODE XREF: sub_7100F6F0+1E6j
					; sub_7100F6F0+3ECj
		mov	eax, [ebp+arg_0]
		test	eax, eax
		jz	short loc_7100F921
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_A0], eax

loc_7100F8F0:				; CODE XREF: sub_7100F6F0+22Fj
		mov	edx, [ebp+var_A0]
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+0Ch]
		mov	[ebp+var_98], 3
		call	eax
		test	eax, eax
		jz	short loc_7100F921
		mov	eax, [ebp+var_A0]
		mov	eax, [eax+34h]
		test	eax, eax
		mov	[ebp+var_A0], eax
		jnz	short loc_7100F8F0

loc_7100F921:				; CODE XREF: sub_7100F6F0+1F5j
					; sub_7100F6F0+21Cj
		mov	dword ptr [esp], 40h ; size_t
		mov	[ebp+var_98], 3
		call	sub_710517F0
		fld	[ebp+var_B0]
		fstp	qword ptr [esp+1Ch]
		fld	[ebp+var_B8]
		fstp	qword ptr [esp+14h]
		fld	[ebp+var_C0]
		fstp	qword ptr [esp+0Ch]
		fld	[ebp+var_C8]
		mov	[ebp+var_A4], eax
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		mov	[ebp+var_98], 2
		call	ds:_ZN15QLinearGradientC1Edddd
		mov	eax, [ebp+var_A4]
		mov	dword ptr [esp+4], 1
		mov	[ebp+var_98], 3
		mov	[esp], eax
		call	ds:_ZN9QGradient20setInterpolationModeENS_17InterpolationModeE
		mov	dword ptr [esp], 50h ; size_t
		call	sub_710517F0
		mov	edx, [ebp+var_A4]
		mov	[ebp+var_CC], eax
		mov	[esp], eax
		mov	[ebp+var_98], 1
		mov	[esp+4], edx
		call	sub_71027960
		mov	edx, [ebp+arg_8]
		mov	ecx, [ebp+var_CC]
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_98], 3
		mov	[esp], edx
		mov	edx, [ebp+arg_4]
		call	sub_7100E900
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7100FA80

loc_7100F9F9:				; CODE XREF: sub_7100F6F0+3A6j
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7100FA68

loc_7100FA06:				; CODE XREF: sub_7100F6F0+38Ej
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7100FA50

loc_7100FA13:				; CODE XREF: sub_7100F6F0+376j
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7100FA36
		mov	eax, [ebp+var_C]
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7100FA36:				; CODE XREF: sub_7100F6F0+32Ej
		lea	eax, [ebp+var_9C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_CC]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7100FA50:				; CODE XREF: sub_7100F6F0+321j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_98], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7100FA13
; ---------------------------------------------------------------------------

loc_7100FA68:				; CODE XREF: sub_7100F6F0+314j
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_98], 7
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7100FA06
; ---------------------------------------------------------------------------

loc_7100FA80:				; CODE XREF: sub_7100F6F0+303j
		mov	eax, [ebp+var_24]
		mov	[ebp+var_98], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7100F9F9
; ---------------------------------------------------------------------------
		align 10h

loc_7100FAA0:				; CODE XREF: sub_7100F6F0+1D8j
		mov	ecx, [ebp+arg_8]
		lea	edx, [ebp+var_2C]
		lea	eax, [ebp+var_24]
		mov	dword ptr [esp], 0
		mov	[ebp+var_98], 3
		call	sub_7100BF60
		mov	edx, [ebp+var_2C]
		fst	[ebp+var_B0]
		test	edx, edx
		jnz	loc_7100F8D8
		fdiv	ds:flt_71059D88
		fstp	[ebp+var_B0]
		jmp	loc_7100F8E0
; ---------------------------------------------------------------------------

loc_7100FAE1:				; CODE XREF: sub_7100F6F0+1B8j
		mov	ecx, [ebp+arg_8]
		lea	edx, [ebp+var_2C]
		lea	eax, [ebp+var_1C]
		mov	dword ptr [esp], 0
		mov	[ebp+var_98], 3
		call	sub_7100BF60
		mov	eax, [ebp+var_2C]
		fst	[ebp+var_B8]
		test	eax, eax
		jnz	loc_7100F8B8
		fdiv	ds:flt_71059D88
		fstp	[ebp+var_B8]
		jmp	loc_7100F8C0
; ---------------------------------------------------------------------------

loc_7100FB22:				; CODE XREF: sub_7100F6F0+198j
		mov	ecx, [ebp+arg_8]
		lea	edx, [ebp+var_2C]
		lea	eax, [ebp+var_14]
		mov	dword ptr [esp], 0
		mov	[ebp+var_98], 3
		call	sub_7100BF60
		mov	ecx, [ebp+var_2C]
		fst	[ebp+var_C0]
		test	ecx, ecx
		jnz	loc_7100F898
		fdiv	ds:flt_71059D88
		fstp	[ebp+var_C0]
		jmp	loc_7100F8A0
; ---------------------------------------------------------------------------

loc_7100FB63:				; CODE XREF: sub_7100F6F0+178j
		mov	ecx, [ebp+arg_8]
		lea	edx, [ebp+var_2C]
		lea	eax, [ebp+var_C]
		mov	dword ptr [esp], 0
		mov	[ebp+var_98], 3
		call	sub_7100BF60
		mov	edx, [ebp+var_2C]
		fst	[ebp+var_C8]
		test	edx, edx
		jnz	loc_7100F878
		fdiv	ds:flt_71059D88
		fstp	[ebp+var_C8]
		jmp	loc_7100F880
sub_7100F6F0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7100FBA4	proc near		; DATA XREF: sub_7100F6F0+2Co
		add	ebp, 8
		mov	eax, [ebp-98h]
		mov	edx, [ebp-94h]
		cmp	eax, 1
		mov	[ebp-0D0h], edx
		jz	loc_7100FC66
		cmp	eax, 2
		jz	short loc_7100FBFA
		cmp	eax, 3
		jz	short loc_7100FC0F
		cmp	eax, 4
		nop
		jz	short loc_7100FC0F
		cmp	eax, 5
		jz	short loc_7100FC24
		cmp	eax, 6
		jz	short loc_7100FC24
		cmp	eax, 7
		nop
		jz	short loc_7100FC39
		cmp	eax, 8
		jz	short loc_7100FC39
		cmp	eax, 9
		jz	short loc_7100FC4E
		mov	eax, [ebp-0CCh]
		mov	[esp+0], eax
		call	sub_710517D0

loc_7100FBFA:				; CODE XREF: sub_7100FBA4+21j
					; sub_7100FBA4+D0j
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0

loc_7100FC0F:				; CODE XREF: sub_7100FBA4+26j
					; sub_7100FBA4+2Cj
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0

loc_7100FC24:				; CODE XREF: sub_7100FBA4+31j
					; sub_7100FBA4+36j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0

loc_7100FC39:				; CODE XREF: sub_7100FBA4+3Cj
					; sub_7100FBA4+41j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0

loc_7100FC4E:				; CODE XREF: sub_7100FBA4+46j
		mov	eax, [ebp-0D0h]
		mov	dword ptr [ebp-98h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7100FC66:				; CODE XREF: sub_7100FBA4+18j
		mov	edx, [ebp-0A4h]
		mov	[esp+0], edx
		call	sub_710517D0
		jmp	short loc_7100FBFA
sub_7100FBA4	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7100FC80	proc near		; DATA XREF: sub_7101E100+8F9o

var_140		= qword	ptr -140h
var_138		= qword	ptr -138h
var_130		= qword	ptr -130h
var_124		= dword	ptr -124h
var_120		= dword	ptr -120h
var_11C		= dword	ptr -11Ch
var_118		= qword	ptr -118h
var_110		= qword	ptr -110h
var_104		= dword	ptr -104h
var_100		= word ptr -100h
var_FE		= word ptr -0FEh
var_FC		= byte ptr -0FCh
var_F8		= dword	ptr -0F8h
var_E4		= dword	ptr -0E4h
var_E0		= dword	ptr -0E0h
var_DC		= dword	ptr -0DCh
var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_C0		= qword	ptr -0C0h
var_B8		= qword	ptr -0B8h
var_B0		= qword	ptr -0B0h
var_A8		= qword	ptr -0A8h
var_A0		= qword	ptr -0A0h
var_98		= qword	ptr -98h
var_90		= qword	ptr -90h
var_88		= qword	ptr -88h
var_7C		= byte ptr -7Ch
var_70		= byte ptr -70h
var_64		= byte ptr -64h
var_58		= byte ptr -58h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_A		= word ptr -0Ah
var_8		= byte ptr -8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 168h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_DC], eax
		lea	eax, [ebp+var_FC]
		mov	[esp], eax
		mov	[ebp+var_D4], esp
		mov	[ebp+var_E4], offset sub_710525B0
		mov	[ebp+var_E0], offset word_71053146
		mov	[ebp+var_D8], offset sub_7101057B
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_14]
		mov	[esp+8], eax
		lea	eax, [ebp+var_58]
		mov	[esp], eax
		mov	[ebp+var_14], offset aBaseprofile ; "baseProfile"
		mov	[esp+4], edx
		mov	[ebp+var_F8], 0FFFFFFFFh
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		lea	eax, [ebp+var_10]
		lea	edx, [ebp+var_58]
		mov	[ebp+var_F8], 0Fh
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		mov	dword ptr [esp], 108h ;	size_t
		mov	[ebp+var_F8], 0Eh
		call	sub_710517F0
		mov	[ebp+var_104], eax
		mov	[esp], eax
		mov	[ebp+var_F8], 0Dh
		call	_ZN16QSvgTinyDocumentC1Ev
		lea	edx, [ebp+var_1C]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_64]
		mov	[ebp+var_1C], offset aWidth ; "width"
		mov	[esp], eax
		mov	[ebp+var_F8], 0Eh
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_18]
		lea	edx, [ebp+var_64]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_F8], 0Ch
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_24]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_70]
		mov	[ebp+var_24], offset aHeight ; "height"
		mov	[esp], eax
		mov	[ebp+var_F8], 0Bh
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_20]
		lea	edx, [ebp+var_70]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_F8], 0Ah
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_2C]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_7C]
		mov	[ebp+var_2C], offset aViewbox ;	"viewBox"
		mov	[esp], eax
		mov	[ebp+var_F8], 9
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_28]
		lea	edx, [ebp+var_7C]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_F8], 8
		call	ds:_ZNK10QStringRef8toStringEv
		mov	eax, [ebp+var_18]
		sub	esp, 4
		mov	[ebp+var_30], 1
		mov	ecx, [eax+8]
		test	ecx, ecx
		jnz	loc_710103F0
		fldz
		fstp	[ebp+var_110]

loc_7100FE47:				; CODE XREF: sub_7100FC80+816j
		mov	eax, [ebp+var_20]
		mov	edx, [eax+8]
		test	edx, edx
		jnz	loc_71010348
		fldz
		fstp	[ebp+var_118]

loc_7100FE5D:				; CODE XREF: sub_7100FC80+766j
		mov	eax, ds:_ZN9QListData11shared_nullE
		mov	[ebp+var_34], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_28]
		mov	eax, [eax+8]
		test	eax, eax
		jnz	loc_71010021

loc_7100FE79:				; CODE XREF: sub_7100FC80+4EBj
		mov	edx, [ebp+var_34]
		mov	ecx, [edx+8]
		mov	eax, [edx+0Ch]
		sub	eax, ecx
		cmp	eax, 4
		jz	loc_710101A1

loc_7100FE8D:				; CODE XREF: sub_7100FC80+51Bj
		fldz
		fld	[ebp+var_110]
		fucomp	st(1)
		fnstsw	ax
		sahf
		jp	loc_7100FF30
		jnz	loc_7100FF30
		fstp	st

loc_7100FEA8:				; CODE XREF: sub_7100FC80+2BDj
					; sub_7100FC80+315j ...
		mov	edx, [ebp+arg_8]
		mov	dword ptr [edx+18h], 1
		mov	eax, [ebp+var_34]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71010000

loc_7100FEC3:				; CODE XREF: sub_7100FC80+39Cj
		mov	eax, [ebp+var_28]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7100FFE0

loc_7100FED4:				; CODE XREF: sub_7100FC80+376j
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7100FFC0

loc_7100FEE5:				; CODE XREF: sub_7100FC80+356j
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7100FFA0

loc_7100FEF6:				; CODE XREF: sub_7100FC80+336j
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7100FF19
		mov	eax, [ebp+var_10]
		mov	[ebp+var_F8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7100FF19:				; CODE XREF: sub_7100FC80+281j
		lea	eax, [ebp+var_FC]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_104]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7100FF30:				; CODE XREF: sub_7100FC80+21Aj
					; sub_7100FC80+220j
		fld	[ebp+var_118]
		fucompp
		fnstsw	ax
		sahf
		jp	short loc_7100FF43
		jz	loc_7100FEA8

loc_7100FF43:				; CODE XREF: sub_7100FC80+2BBj
		cmp	[ebp+var_30], 3
		jz	loc_71010540

loc_7100FF4D:				; CODE XREF: sub_7100FC80+8F6j
		fldz
		fst	[ebp+var_C0]
		lea	eax, [ebp+var_C0]
		fstp	[ebp+var_B8]
		mov	[esp+4], eax
		mov	eax, [ebp+var_104]
		fld	[ebp+var_110]
		fstp	[ebp+var_B0]
		fld	[ebp+var_118]
		fstp	[ebp+var_A8]
		mov	[esp], eax
		mov	[ebp+var_F8], 6
		call	_ZN16QSvgTinyDocument10setViewBoxERK6QRectF
		jmp	loc_7100FEA8
; ---------------------------------------------------------------------------
		align 10h

loc_7100FFA0:				; CODE XREF: sub_7100FC80+270j
		mov	eax, [ebp+var_18]
		mov	[ebp+var_F8], 0Eh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7100FEF6
; ---------------------------------------------------------------------------
		align 10h

loc_7100FFC0:				; CODE XREF: sub_7100FC80+25Fj
		mov	eax, [ebp+var_20]
		mov	[ebp+var_F8], 0Bh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7100FEE5
; ---------------------------------------------------------------------------
		align 10h

loc_7100FFE0:				; CODE XREF: sub_7100FC80+24Ej
		mov	eax, [ebp+var_28]
		mov	[ebp+var_F8], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7100FED4
; ---------------------------------------------------------------------------
		align 10h

loc_71010000:				; CODE XREF: sub_7100FC80+23Dj
		mov	eax, [ebp+var_34]
		mov	[ebp+var_F8], 7
		mov	[esp+4], eax
		lea	eax, [ebp+var_34]
		mov	[esp], eax
		call	sub_710459F0
		jmp	loc_7100FEC3
; ---------------------------------------------------------------------------

loc_71010021:				; CODE XREF: sub_7100FC80+1F3j
		lea	eax, [ebp+var_28]
		mov	dword ptr [esp+0Ch], 1
		mov	word ptr [esp+8], 2Ch
		mov	word ptr [esp+4], 20h
		mov	[esp], eax
		mov	[ebp+var_F8], 6
		call	ds:_ZN7QString7replaceE5QCharS0_N2Qt15CaseSensitivityE
		mov	[esp+4], eax
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp+var_28]
		mov	dword ptr [esp+0Ch], 1
		mov	word ptr [esp+8], 2Ch
		mov	word ptr [esp+4], 0Dh
		mov	[esp], eax
		call	ds:_ZN7QString7replaceE5QCharS0_N2Qt15CaseSensitivityE
		mov	[esp+4], eax
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp+var_28]
		mov	dword ptr [esp+0Ch], 1
		mov	word ptr [esp+8], 2Ch
		mov	word ptr [esp+4], 0Ah
		mov	[esp], eax
		call	ds:_ZN7QString7replaceE5QCharS0_N2Qt15CaseSensitivityE
		mov	[esp+4], eax
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp+var_28]
		mov	dword ptr [esp+0Ch], 1
		mov	word ptr [esp+8], 2Ch
		mov	word ptr [esp+4], 9
		mov	[esp], eax
		call	ds:_ZN7QString7replaceE5QCharS0_N2Qt15CaseSensitivityE
		mov	[esp+4], eax
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		lea	edx, [ebp+var_A]
		lea	eax, [ebp+var_38]
		mov	[esp+8], edx
		lea	edx, [ebp+var_28]
		mov	[ebp+var_A], 2Ch
		mov	dword ptr [esp+10h], 1
		mov	dword ptr [esp+0Ch], 1
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK7QString5splitERK5QCharNS_13SplitBehaviorEN2Qt15CaseSensitivityE
		mov	edx, [ebp+var_38]
		sub	esp, 4
		mov	eax, [ebp+var_34]
		mov	[ebp+var_11C], edx
		cmp	eax, edx
		jz	short loc_71010163
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+var_34]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_710104C0

loc_7101014D:				; CODE XREF: sub_7100FC80+85Cj
		mov	eax, [ebp+var_11C]
		mov	[ebp+var_34], eax
		test	byte ptr [eax+10h], 1
		jz	loc_710104A0

loc_71010160:				; CODE XREF: sub_7100FC80+835j
		mov	eax, [ebp+var_38]

loc_71010163:				; CODE XREF: sub_7100FC80+4B4j
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7100FE79
		mov	eax, [ebp+var_38]
		mov	[ebp+var_F8], 6
		mov	[esp+4], eax
		lea	eax, [ebp+var_38]
		mov	[esp], eax
		call	sub_710459F0
		mov	edx, [ebp+var_34]
		mov	ecx, [edx+8]
		mov	eax, [edx+0Ch]
		sub	eax, ecx
		cmp	eax, 4
		jnz	loc_7100FE8D

loc_710101A1:				; CODE XREF: sub_7100FC80+207j
		lea	eax, [ebp+var_3C]
		lea	edx, [edx+ecx*4+14h]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_F8], 6
		call	ds:_ZNK7QString7trimmedEv
		mov	eax, [ebp+var_34]
		sub	esp, 4
		lea	edx, [ebp+var_40]
		mov	ecx, [eax+8]
		mov	[esp], edx
		mov	[ebp+var_F8], 4
		lea	eax, [eax+ecx*4+18h]
		mov	[esp+4], eax
		call	ds:_ZNK7QString7trimmedEv
		mov	eax, [ebp+var_34]
		sub	esp, 4
		lea	edx, [ebp+var_44]
		mov	ecx, [eax+8]
		mov	[esp], edx
		mov	[ebp+var_F8], 3
		lea	eax, [eax+ecx*4+1Ch]
		mov	[esp+4], eax
		call	ds:_ZNK7QString7trimmedEv
		mov	eax, [ebp+var_34]
		sub	esp, 4
		lea	edx, [ebp+var_48]
		mov	ecx, [eax+8]
		mov	[esp], edx
		mov	[ebp+var_F8], 2
		lea	eax, [eax+ecx*4+20h]
		mov	[esp+4], eax
		call	ds:_ZNK7QString7trimmedEv
		mov	ecx, [ebp+arg_8]
		sub	esp, 4
		lea	edx, [ebp+var_4C]
		lea	eax, [ebp+var_3C]
		mov	dword ptr [esp], 0
		mov	[ebp+var_F8], 1
		call	sub_7100BF60
		mov	ecx, [ebp+arg_8]
		fstp	[ebp+var_140]
		lea	edx, [ebp+var_4C]
		lea	eax, [ebp+var_40]
		mov	dword ptr [esp], 0
		call	sub_7100BF60
		mov	ecx, [ebp+arg_8]
		fstp	[ebp+var_138]
		lea	edx, [ebp+var_4C]
		lea	eax, [ebp+var_44]
		mov	dword ptr [esp], 0
		call	sub_7100BF60
		mov	ecx, [ebp+arg_8]
		fstp	[ebp+var_130]
		lea	edx, [ebp+var_4C]
		lea	eax, [ebp+var_48]
		mov	dword ptr [esp], 0
		call	sub_7100BF60
		fld	[ebp+var_140]
		lea	eax, [ebp+var_A0]
		fstp	[ebp+var_A0]
		fld	[ebp+var_138]
		mov	[esp+4], eax
		mov	eax, [ebp+var_104]
		fstp	[ebp+var_98]
		fld	[ebp+var_130]
		fstp	[ebp+var_90]
		fstp	[ebp+var_88]
		mov	[esp], eax
		call	_ZN16QSvgTinyDocument10setViewBoxERK6QRectF
		mov	eax, [ebp+var_48]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_710104E1

loc_710102FA:				; CODE XREF: sub_7100FC80+877j
		mov	eax, [ebp+var_44]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71010520

loc_7101030B:				; CODE XREF: sub_7100FC80+8B6j
		mov	eax, [ebp+var_40]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71010500

loc_7101031C:				; CODE XREF: sub_7100FC80+896j
		mov	eax, [ebp+var_3C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7100FEA8
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_F8], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7100FEA8
; ---------------------------------------------------------------------------

loc_71010348:				; CODE XREF: sub_7100FC80+1CFj
		mov	ecx, [ebp+arg_8]
		lea	edx, [ebp+var_30]
		lea	eax, [ebp+var_20]
		mov	dword ptr [esp], 0
		mov	[ebp+var_F8], 7
		call	sub_7100BF60
		mov	eax, [ebp+var_30]
		fst	[ebp+var_118]
		cmp	eax, 3
		mov	[ebp+var_120], eax
		jz	short loc_71010390
		mov	edx, eax
		xor	eax, eax
		fstp	qword ptr [esp]	; double
		call	sub_71006AA0
		fstp	[ebp+var_118]
		jmp	short loc_71010392
; ---------------------------------------------------------------------------
		align 10h

loc_71010390:				; CODE XREF: sub_7100FC80+6F9j
		fstp	st

loc_71010392:				; CODE XREF: sub_7100FC80+70Dj
		xor	eax, eax
		fld	[ebp+var_118]
		cmp	[ebp+var_120], 0
		fnstcw	[ebp+var_FE]
		mov	[ebp+var_F8], 7
		setz	al
		mov	[esp+8], eax
		movzx	eax, [ebp+var_FE]
		mov	ah, 0Ch
		mov	[ebp+var_100], ax
		mov	eax, [ebp+var_104]
		fldcw	[ebp+var_100]
		fistp	dword ptr [esp+4]
		fldcw	[ebp+var_FE]
		mov	[esp], eax
		call	_ZN16QSvgTinyDocument9setHeightEib
		jmp	loc_7100FE5D
; ---------------------------------------------------------------------------
		align 10h

loc_710103F0:				; CODE XREF: sub_7100FC80+1B9j
		mov	ecx, [ebp+arg_8]
		lea	edx, [ebp+var_30]
		lea	eax, [ebp+var_18]
		mov	dword ptr [esp], 0
		mov	[ebp+var_F8], 7
		call	sub_7100BF60
		mov	eax, [ebp+var_30]
		fst	[ebp+var_110]
		cmp	eax, 3
		mov	[ebp+var_124], eax
		jz	short loc_71010440
		mov	edx, eax
		mov	eax, 1
		fstp	qword ptr [esp]	; double
		call	sub_71006AA0
		fstp	[ebp+var_110]
		jmp	short loc_71010442
; ---------------------------------------------------------------------------
		align 10h

loc_71010440:				; CODE XREF: sub_7100FC80+7A1j
		fstp	st

loc_71010442:				; CODE XREF: sub_7100FC80+7B8j
		xor	eax, eax
		fld	[ebp+var_110]
		cmp	[ebp+var_124], 0
		fnstcw	[ebp+var_FE]
		mov	[ebp+var_F8], 7
		setz	al
		mov	[esp+8], eax
		movzx	eax, [ebp+var_FE]
		mov	ah, 0Ch
		mov	[ebp+var_100], ax
		mov	eax, [ebp+var_104]
		fldcw	[ebp+var_100]
		fistp	dword ptr [esp+4]
		fldcw	[ebp+var_FE]
		mov	[esp], eax
		call	_ZN16QSvgTinyDocument8setWidthEib
		jmp	loc_7100FE47
; ---------------------------------------------------------------------------
		align 10h

loc_710104A0:				; CODE XREF: sub_7100FC80+4DAj
		lea	eax, [ebp+var_34]
		mov	[esp], eax
		mov	[ebp+var_F8], 5
		call	sub_71045970
		jmp	loc_71010160
; ---------------------------------------------------------------------------
		align 10h

loc_710104C0:				; CODE XREF: sub_7100FC80+4C7j
		mov	eax, [ebp+var_34]
		mov	[ebp+var_F8], 5
		mov	[esp+4], eax
		lea	eax, [ebp+var_34]
		mov	[esp], eax
		call	sub_710459F0
		jmp	loc_7101014D
; ---------------------------------------------------------------------------

loc_710104E1:				; CODE XREF: sub_7100FC80+674j
		mov	eax, [ebp+var_48]
		mov	[ebp+var_F8], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_710102FA
; ---------------------------------------------------------------------------
		align 10h

loc_71010500:				; CODE XREF: sub_7100FC80+696j
		mov	eax, [ebp+var_40]
		mov	[ebp+var_F8], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101031C
; ---------------------------------------------------------------------------
		align 10h

loc_71010520:				; CODE XREF: sub_7100FC80+685j
		mov	eax, [ebp+var_44]
		mov	[ebp+var_F8], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101030B
; ---------------------------------------------------------------------------
		align 10h

loc_71010540:				; CODE XREF: sub_7100FC80+2C7j
		fld	[ebp+var_110]
		mov	edx, 3
		xor	eax, eax
		fstp	qword ptr [esp]	; double
		call	sub_71006AA0
		mov	edx, 3
		xor	eax, eax
		fstp	[ebp+var_110]
		fld	[ebp+var_118]
		fstp	qword ptr [esp]	; double
		call	sub_71006AA0
		fstp	[ebp+var_118]
		jmp	loc_7100FF4D
sub_7100FC80	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7101057B	proc near		; DATA XREF: sub_7100FC80+35o
		add	ebp, 8
		mov	eax, [ebp-0F8h]
		mov	edx, [ebp-0F4h]
		cmp	eax, 1
		mov	[ebp-144h], edx
		jz	loc_71010634
		cmp	eax, 2
		jz	loc_71010649
		cmp	eax, 3
		jz	loc_7101065E
		cmp	eax, 4
		xchg	ax, ax
		jz	loc_710106F4
		cmp	eax, 5
		jz	loc_71010673
		cmp	eax, 6
		jz	loc_71010688
		cmp	eax, 7
		nop
		lea	esi, [esi+0]
		jz	loc_7101069D
		cmp	eax, 8
		jz	loc_7101069D
		cmp	eax, 9
		jz	loc_710106B2
		cmp	eax, 0Ah
		nop
		lea	esi, [esi+0]
		jz	loc_710106B2
		cmp	eax, 0Bh
		jz	loc_710106C7
		cmp	eax, 0Ch
		jz	loc_7101070E
		cmp	eax, 0Dh
		nop
		lea	esi, [esi+0]
		jz	loc_710106C7
		cmp	eax, 0Eh
		jz	loc_710106DC
		lea	eax, [ebp-48h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_710477B0

loc_71010634:				; CODE XREF: sub_7101057B+18j
		lea	eax, [ebp-44h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_710477B0

loc_71010649:				; CODE XREF: sub_7101057B+21j
		lea	eax, [ebp-40h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_710477B0

loc_7101065E:				; CODE XREF: sub_7101057B+2Aj
		lea	eax, [ebp-3Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_710477B0

loc_71010673:				; CODE XREF: sub_7101057B+3Ej
					; sub_7101057B+18Ej
		lea	eax, [ebp-34h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_7103BBF0

loc_71010688:				; CODE XREF: sub_7101057B+47j
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_710477B0

loc_7101069D:				; CODE XREF: sub_7101057B+55j
					; sub_7101057B+5Ej
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_710477B0

loc_710106B2:				; CODE XREF: sub_7101057B+67j
					; sub_7101057B+75j
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_710477B0

loc_710106C7:				; CODE XREF: sub_7101057B+7Ej
					; sub_7101057B+95j ...
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_710477B0

loc_710106DC:				; CODE XREF: sub_7101057B+9Ej
		mov	eax, [ebp-144h]
		mov	dword ptr [ebp-0F8h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_710106F4:				; CODE XREF: sub_7101057B+35j
		lea	eax, [ebp-38h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_7103BBF0
		jmp	loc_71010673
; ---------------------------------------------------------------------------

loc_7101070E:				; CODE XREF: sub_7101057B+87j
		mov	edx, [ebp-104h]
		mov	[esp+0], edx
		call	sub_710517D0
		jmp	short loc_710106C7
sub_7101057B	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71010720	proc near		; CODE XREF: sub_71011C90+DBp

var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= byte ptr -9Ch
var_98		= dword	ptr -98h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_5C		= byte ptr -5Ch
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= byte ptr -34h
var_30		= byte ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 0D4h
		mov	[ebp+var_AC], eax
		lea	eax, [ebp+var_8]
		mov	[ebp+var_7C], eax
		lea	eax, [ebp+var_9C]
		mov	[ebp+var_A8], edx
		mov	[esp], eax
		mov	[ebp+var_B4], ecx
		mov	[ebp+var_84], offset sub_710525B0
		mov	[ebp+var_80], offset dword_71053168
		mov	[ebp+var_78], offset sub_71010C5C
		mov	[ebp+var_74], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+var_A8]
		mov	eax, [edx+24h]
		test	eax, eax
		jz	loc_71010818

loc_7101077C:				; CODE XREF: sub_71010720+FDj
					; sub_71010720+10Aj
		mov	dword ptr [esp], 38h ; size_t
		mov	[ebp+var_98], 0FFFFFFFFh
		call	sub_710517F0
		mov	[ebp+var_98], 7
		mov	[ebp+var_B0], eax
		mov	[esp], eax
		call	sub_710265E0
		mov	eax, [ebp+var_A8]
		mov	edx, [eax+30h]
		test	edx, edx
		jnz	short loc_71010830

loc_710107B7:				; CODE XREF: sub_71010720+14Bj
					; sub_71010720+188j ...
		mov	ebx, [ebp+var_A8]
		mov	eax, [ebx+3Ch]
		test	eax, eax
		jnz	loc_71010B00

loc_710107C8:				; CODE XREF: sub_71010720+40Dj
					; sub_71010720+44Ej
		mov	ecx, [ebp+var_A8]
		mov	ebx, [ecx+24h]
		test	ebx, ebx
		jnz	loc_71010900

loc_710107D9:				; CODE XREF: sub_71010720+215j
					; sub_71010720+285j ...
		mov	ebx, [ebp+var_A8]
		mov	eax, [ebp+var_B0]
		mov	edx, [ebp+var_AC]
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp+8], ebx
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_71023700

loc_71010805:				; CODE XREF: sub_71010720+108j
		lea	eax, [ebp+var_9C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	ebx, [ebp+var_4]
		leave
		retn
; ---------------------------------------------------------------------------

loc_71010818:				; CODE XREF: sub_71010720+56j
		mov	ebx, [edx+30h]
		test	ebx, ebx
		jnz	loc_7101077C
		mov	ecx, [edx+3Ch]
		test	ecx, ecx
		jz	short loc_71010805
		jmp	loc_7101077C
; ---------------------------------------------------------------------------
		align 10h

loc_71010830:				; CODE XREF: sub_71010720+95j
		mov	eax, ds:off_71059C74
		mov	edx, [ebp+var_A8]
		mov	ecx, ds:_ZeqRK13QLatin1StringRK10QStringRef
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[ebp+var_C], eax
		lea	eax, [ebp+var_C]
		add	edx, 28h
		mov	[ebp+var_C0], edx
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_A0], ecx
		call	ecx ; _ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jnz	loc_710107B7
		mov	ebx, [ebp+var_C0]
		lea	eax, [ebp+var_10]
		mov	[ebp+var_10], offset aEvenodd ;	"evenodd"
		mov	[esp], eax
		mov	[esp+4], ebx
		call	[ebp+var_A0]
		test	al, al
		jz	short loc_710108B0
		mov	eax, [ebp+var_B0]
		mov	dword ptr [esp+4], 0
		mov	[esp], eax
		call	sub_71025340
		jmp	loc_710107B7
; ---------------------------------------------------------------------------
		align 10h

loc_710108B0:				; CODE XREF: sub_71010720+170j
		mov	edx, [ebp+var_C0]
		lea	eax, [ebp+var_14]
		mov	[ebp+var_14], offset aNonzero ;	"nonzero"
		mov	[esp], eax
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp+4], edx
		call	[ebp+var_A0]
		test	al, al
		jz	loc_710107B7
		mov	ecx, [ebp+var_B0]
		mov	dword ptr [esp+4], 1
		mov	[esp], ecx
		call	sub_71025340
		jmp	loc_710107B7
; ---------------------------------------------------------------------------
		align 10h

loc_71010900:				; CODE XREF: sub_71010720+B3j
		mov	eax, ds:off_71059C74
		add	ecx, 1Ch
		mov	ebx, ds:_ZeqRK13QLatin1StringRK10QStringRef
		mov	[ebp+var_BC], ecx
		mov	[esp+4], ecx
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_A4], ebx
		mov	[ebp+var_98], 0FFFFFFFFh
		call	ebx ; _ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jnz	loc_710107D9
		mov	eax, [ebp+var_A8]
		cmp	dword ptr [eax+24h], 3
		jg	loc_710109FD

loc_7101094B:				; CODE XREF: sub_71010720+312j
		mov	ecx, [ebp+var_BC]
		lea	eax, [ebp+var_2C]
		mov	[ebp+var_2C], offset aNone ; "none"
		mov	[esp], eax
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp+4], ecx
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jnz	loc_71010B88
		lea	ebx, [ebp+var_5C]
		mov	[esp], ebx
		mov	[ebp+var_98], 0FFFFFFFFh
		call	ds:_ZN6QColor10invalidateEv
		mov	ecx, [ebp+var_B4]
		mov	edx, ebx
		mov	eax, [ebp+var_BC]
		call	sub_7100D500
		test	al, al
		jz	loc_710107D9
		lea	edx, [ebp+var_30]
		mov	[esp+4], ebx
		mov	dword ptr [esp+8], 1
		mov	[esp], edx
		call	ds:_ZN6QBrushC1ERK6QColorN2Qt10BrushStyleE
		mov	ebx, [ebp+var_B0]
		lea	ecx, [ebp+var_30]
		mov	[esp+4], ecx
		mov	[ebp+var_98], 2
		mov	[esp], ebx
		call	sub_71025A40
		lea	eax, [ebp+var_30]
		mov	[esp], eax
		mov	[ebp+var_98], 0FFFFFFFFh
		call	ds:_ZN6QBrushD1Ev
		jmp	loc_710107D9
; ---------------------------------------------------------------------------

loc_710109FD:				; CODE XREF: sub_71010720+225j
		mov	edx, [eax+20h]
		mov	eax, [eax+1Ch]
		mov	[ebp+var_20], offset aUrl ; "url"
		mov	[ebp+var_38], 3
		mov	[ebp+var_3C], edx
		mov	[ebp+var_40], eax
		lea	eax, [ebp+var_40]
		mov	[esp+4], eax
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_98], 6
		call	ebx ; _ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_7101094B
		mov	ebx, [ebp+var_A8]
		mov	eax, [ebx+24h]
		mov	edx, [ebx+20h]
		mov	ecx, [ebx+1Ch]
		mov	[ebp+var_98], 5
		sub	eax, 3
		add	edx, 3
		mov	[ebp+var_48], edx
		lea	edx, [ebp+var_4C]
		mov	[ebp+var_44], eax
		lea	eax, [ebp+var_24]
		mov	[ebp+var_4C], ecx
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		mov	eax, [ebp+var_AC]
		sub	esp, 4
		lea	edx, [ebp+var_24]
		mov	[ebp+var_98], 4
		call	sub_7100D410
		test	eax, eax
		mov	[ebp+var_B8], eax
		jz	loc_71010C00
		mov	edx, eax
		mov	eax, [eax]
		mov	[esp], edx
		call	dword ptr [eax+10h]
		cmp	eax, 5
		jnz	loc_71010BE0

loc_71010AAF:				; CODE XREF: sub_71010720+4D7j
		mov	ebx, [ebp+var_B8]
		mov	eax, [ebp+var_B0]
		mov	[ebp+var_98], 4
		mov	[esp+4], ebx
		mov	[esp], eax
		call	sub_71025360

loc_71010AD1:				; CODE XREF: sub_71010720+4D1j
					; sub_71010720+537j
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_710107D9
		mov	eax, [ebp+var_24]
		mov	[ebp+var_98], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_710107D9
; ---------------------------------------------------------------------------
		align 10h

loc_71010B00:				; CODE XREF: sub_71010720+A2j
		mov	eax, ds:off_71059C74
		add	ebx, 34h
		mov	[ebp+var_C4], ebx
		mov	[esp+4], ebx
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[ebp+var_18], eax
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jnz	loc_710107C8
		xor	edx, edx
		mov	eax, ebx
		call	sub_71007490
		fldz
		fld	st
		fxch	st(2)
		fucom	st(2)
		fnstsw	ax
		fstp	st(2)
		sahf
		ja	short loc_71010B73
		fstp	st(1)
		jmp	short loc_71010B52
; ---------------------------------------------------------------------------
		align 10h

loc_71010B50:				; CODE XREF: sub_71010720+462j
		fstp	st(1)

loc_71010B52:				; CODE XREF: sub_71010720+42Dj
					; sub_71010720+466j
		mov	edx, [ebp+var_B0]
		fstp	qword ptr [esp+4] ; double
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp], edx	; int
		call	sub_71025350
		jmp	loc_710107C8
; ---------------------------------------------------------------------------

loc_71010B73:				; CODE XREF: sub_71010720+429j
		fstp	st
		fld1
		fld	st
		fxch	st(2)
		fucom	st(2)
		fnstsw	ax
		fstp	st(2)
		sahf
		ja	short loc_71010B50
		fstp	st
		jmp	short loc_71010B52
; ---------------------------------------------------------------------------

loc_71010B88:				; CODE XREF: sub_71010720+254j
		lea	edx, [ebp+var_34]
		mov	dword ptr [esp+4], 0
		mov	[esp], edx
		mov	[ebp+var_98], 0FFFFFFFFh
		call	ds:_ZN6QBrushC1EN2Qt10BrushStyleE
		mov	ebx, [ebp+var_B0]
		lea	ecx, [ebp+var_34]
		mov	[esp+4], ecx
		mov	[ebp+var_98], 1
		mov	[esp], ebx
		call	sub_71025A40
		lea	eax, [ebp+var_34]
		mov	[esp], eax
		mov	[ebp+var_98], 0FFFFFFFFh
		call	ds:_ZN6QBrushD1Ev
		jmp	loc_710107D9
; ---------------------------------------------------------------------------

loc_71010BE0:				; CODE XREF: sub_71010720+389j
		mov	ecx, [ebp+var_B8]
		mov	eax, [ecx]
		mov	[esp], ecx
		call	dword ptr [eax+10h]
		cmp	eax, 6
		jnz	loc_71010AD1
		jmp	loc_71010AAF
; ---------------------------------------------------------------------------
		align 10h

loc_71010C00:				; CODE XREF: sub_71010720+376j
		lea	eax, [ebp+var_28]
		lea	edx, [ebp+var_24]
		mov	[ebp+var_98], 4
		call	sub_71008360
		lea	eax, [ebp+var_28]
		mov	[esp+4], eax
		mov	eax, [ebp+var_B0]
		mov	[ebp+var_98], 3
		add	eax, 30h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	edx, [ebp+var_B0]
		lea	eax, [ebp+var_28]
		and	byte ptr [edx+34h], 0FEh
		mov	[esp], eax
		mov	[ebp+var_98], 4
		call	sub_710477B0
		jmp	loc_71010AD1
sub_71010720	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71010C5C	proc near		; DATA XREF: sub_71010720+3Co
		add	ebp, 8
		mov	eax, [ebp-98h]
		mov	edx, [ebp-94h]
		cmp	eax, 1
		mov	[ebp-0C8h], edx
		jz	short loc_71010CF0
		cmp	eax, 2
		jz	short loc_71010CC4
		cmp	eax, 3
		jz	short loc_71010CD9
		cmp	eax, 4
		jz	short loc_71010CAC
		cmp	eax, 5
		jz	short loc_71010D06
		cmp	eax, 6
		lea	esi, [esi+0]
		jz	loc_71010D1E
		lea	eax, [ebp-34h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	ds:_ZN6QBrushD1Ev

loc_71010CAC:				; CODE XREF: sub_71010C5C+27j
					; sub_71010C5C+92j
		mov	ecx, [ebp-0C8h]
		mov	dword ptr [ebp-98h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71010CC4:				; CODE XREF: sub_71010C5C+1Dj
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0

loc_71010CD9:				; CODE XREF: sub_71010C5C+22j
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0
		jmp	short loc_71010CAC
; ---------------------------------------------------------------------------

loc_71010CF0:				; CODE XREF: sub_71010C5C+18j
		lea	eax, [ebp-30h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	ds:_ZN6QBrushD1Ev

loc_71010D06:				; CODE XREF: sub_71010C5C+2Cj
		mov	eax, [ebp-0C8h]
		mov	dword ptr [ebp-98h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71010D1E:				; CODE XREF: sub_71010C5C+34j
		mov	ecx, [ebp-0B0h]
		mov	[esp+0], ecx
		call	sub_710517D0
		mov	ebx, [ebp-0C8h]
		mov	dword ptr [ebp-98h], 0FFFFFFFFh
		mov	[esp+0], ebx
		call	_Unwind_SjLj_Resume
sub_71010C5C	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71010D50	proc near		; DATA XREF: sub_7101E100+1D0Ao

var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_5D		= byte ptr -5Dh
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_24		= byte ptr -24h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_710525B0
		mov	[ebp+var_40], offset word_7105317A
		mov	[ebp+var_38], offset sub_71010F1E
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+10h]
		mov	[ebp+var_58], 0FFFFFFFFh
		call	eax
		mov	[ebp+var_5D], 0
		cmp	eax, 3
		jz	short loc_71010DB0

loc_71010D9F:				; CODE XREF: sub_71010D50+165j
					; sub_71010D50+182j
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_5D]
		leave
		retn
; ---------------------------------------------------------------------------

loc_71010DB0:				; CODE XREF: sub_71010D50+4Dj
		mov	eax, [ebp+arg_0]
		lea	edx, [ebp+var_24]
		mov	[ebp+var_10], offset aName ; "name"
		mov	eax, [eax+8]
		mov	[esp], edx
		mov	[ebp+var_64], eax
		lea	eax, [ebp+var_10]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		lea	eax, [ebp+var_C]
		lea	edx, [ebp+var_24]
		mov	[ebp+var_58], 3
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		mov	eax, [ebp+var_C]
		sub	esp, 4
		mov	eax, [eax+8]
		test	eax, eax
		jz	short loc_71010E1D
		mov	edx, [ebp+var_64]
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	[ebp+var_58], 2
		mov	[esp], edx
		call	sub_710299E0

loc_71010E1D:				; CODE XREF: sub_71010D50+B2j
		mov	edx, [ebp+var_64]
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_58], 2
		mov	[esp+4], edx
		call	sub_710299B0
		mov	eax, [ebp+var_14]
		sub	esp, 4
		mov	edx, [eax+8]
		mov	[ebp+var_68], edx
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71010ED7

loc_71010E50:				; CODE XREF: sub_71010D50+193j
		mov	ecx, [ebp+var_68]
		test	ecx, ecx
		jz	short loc_71010EA6
		mov	edx, [ebp+var_64]
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_58], 2
		mov	[esp+4], edx
		call	sub_710299B0
		mov	edx, [ebp+arg_0]
		sub	esp, 4
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		mov	eax, [edx+0Ch]
		mov	[ebp+var_58], 1
		mov	[esp], eax
		call	_ZNK16QSvgTinyDocument7svgFontERK7QString
		mov	[ebp+var_6C], eax
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71010EE8

loc_71010E9F:				; CODE XREF: sub_71010D50+1ABj
		mov	edx, [ebp+var_6C]
		test	edx, edx
		jz	short loc_71010F00

loc_71010EA6:				; CODE XREF: sub_71010D50+105j
					; sub_71010D50+1CCj
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		mov	[ebp+var_5D], 1
		jnz	loc_71010D9F
		mov	eax, [ebp+var_C]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_5D], 1
		jmp	loc_71010D9F
; ---------------------------------------------------------------------------

loc_71010ED7:				; CODE XREF: sub_71010D50+FAj
		mov	eax, [ebp+var_14]
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71010E50
; ---------------------------------------------------------------------------

loc_71010EE8:				; CODE XREF: sub_71010D50+14Dj
		mov	eax, [ebp+var_18]
		mov	[ebp+var_58], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_71010E9F
; ---------------------------------------------------------------------------
		align 10h

loc_71010F00:				; CODE XREF: sub_71010D50+154j
		mov	eax, [ebp+var_64]
		mov	edx, [ebp+arg_0]
		mov	[esp+4], eax
		mov	eax, [edx+0Ch]
		mov	[ebp+var_58], 2
		mov	[esp], eax
		call	_ZN16QSvgTinyDocument10addSvgFontEP8QSvgFont
		jmp	short loc_71010EA6
sub_71010D50	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71010F1E	proc near		; DATA XREF: sub_71010D50+23o
		add	ebp, 8
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-70h], edx
		jz	short loc_71010F46
		cmp	eax, 2
		jz	short loc_71010F58
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_710477B0

loc_71010F46:				; CODE XREF: sub_71010F1E+Fj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_710477B0

loc_71010F58:				; CODE XREF: sub_71010F1E+14j
		mov	eax, [ebp-70h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71010F1E	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71010F70	proc near		; CODE XREF: sub_71011C90+F2p

var_13C		= dword	ptr -13Ch
var_138		= dword	ptr -138h
var_134		= dword	ptr -134h
var_130		= dword	ptr -130h
var_12C		= dword	ptr -12Ch
var_128		= dword	ptr -128h
var_124		= dword	ptr -124h
var_120		= dword	ptr -120h
var_11C		= dword	ptr -11Ch
var_118		= dword	ptr -118h
var_114		= dword	ptr -114h
var_110		= dword	ptr -110h
var_10C		= dword	ptr -10Ch
var_108		= dword	ptr -108h
var_104		= dword	ptr -104h
var_100		= dword	ptr -100h
var_FC		= dword	ptr -0FCh
var_F8		= dword	ptr -0F8h
var_F4		= dword	ptr -0F4h
var_F0		= dword	ptr -0F0h
var_EC		= byte ptr -0ECh
var_E8		= dword	ptr -0E8h
var_D4		= dword	ptr -0D4h
var_D0		= dword	ptr -0D0h
var_CC		= dword	ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_B0		= byte ptr -0B0h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= qword	ptr -88h
var_80		= qword	ptr -80h
var_78		= qword	ptr -78h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= byte ptr -20h
var_1C		= byte ptr -1Ch
var_18		= dword	ptr -18h
var_14		= byte ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 154h
		mov	[ebp+var_10C], eax
		lea	eax, [ebp+var_8]
		mov	[ebp+var_CC], eax
		lea	eax, [ebp+var_EC]
		mov	[ebp+var_104], edx
		mov	[ebp+var_110], ecx
		mov	[ebp+var_D4], offset sub_710525B0
		mov	[ebp+var_D0], offset word_7105318A
		mov	[ebp+var_C8], offset sub_71011ACE
		mov	[ebp+var_C4], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+var_104]
		mov	ebx, [edx+48h]
		test	ebx, ebx
		jz	loc_710110F0

loc_71010FD8:				; CODE XREF: sub_71010F70+185j
					; sub_71010F70+190j ...
		mov	dword ptr [esp], 40h ; size_t
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	sub_710517F0
		mov	[ebp+var_E8], 0Bh
		mov	[ebp+var_108], eax
		mov	[esp], eax
		call	sub_71026BC0
		mov	eax, [ebp+var_104]
		mov	ebx, [eax+48h]
		test	ebx, ebx
		jnz	loc_71011155

loc_71011017:				; CODE XREF: sub_71010F70+220j
					; sub_71010F70+293j ...
		mov	edx, [ebp+var_104]
		mov	ecx, [edx+9Ch]
		test	ecx, ecx
		jnz	loc_71011640

loc_7101102B:				; CODE XREF: sub_71010F70+700j
					; sub_71010F70+76Bj ...
		mov	ecx, [ebp+var_104]
		mov	eax, [ecx+54h]
		test	eax, eax
		jnz	loc_71011460

loc_7101103C:				; CODE XREF: sub_71010F70+525j
					; sub_71010F70+698j ...
		mov	edx, [ebp+var_104]
		mov	ebx, [edx+78h]
		test	ebx, ebx
		jnz	loc_71011803

loc_7101104D:				; CODE XREF: sub_71010F70+8F1j
					; sub_71010F70+9B5j ...
		mov	eax, [ebp+var_104]
		mov	ecx, [eax+6Ch]
		test	ecx, ecx
		jnz	loc_710117A0

loc_7101105E:				; CODE XREF: sub_71010F70+88Ej
					; sub_71010F70+94Ej ...
		mov	ebx, [ebp+var_104]
		mov	edx, [ebx+60h]
		test	edx, edx
		jnz	loc_71011750

loc_7101106F:				; CODE XREF: sub_71010F70+80Dj
					; sub_71010F70+829j
		mov	edx, [ebp+var_104]
		mov	eax, [edx+0A8h]
		test	eax, eax
		jnz	loc_71011700

loc_71011083:				; CODE XREF: sub_71010F70+7DBj
					; sub_71010F70+AE9j ...
		mov	ecx, [ebp+var_104]
		mov	ebx, [ecx+84h]
		test	ebx, ebx
		jnz	loc_710113F5

loc_71011097:				; CODE XREF: sub_71010F70+4B2j
					; sub_71010F70+4E5j
		mov	eax, [ebp+var_104]
		mov	edx, [eax+90h]
		test	edx, edx
		jnz	loc_71011365

loc_710110AB:				; CODE XREF: sub_71010F70+42Bj
					; sub_71010F70+480j
		mov	ecx, [ebp+var_104]
		mov	ebx, [ebp+var_108]
		mov	eax, [ebp+var_10C]
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp+8], ecx
		mov	[esp+4], ebx
		mov	[esp], eax
		call	sub_71023700

loc_710110D7:				; CODE XREF: sub_71010F70+1DEj
		lea	eax, [ebp+var_EC]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	ebx, [ebp+var_4]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_710110F0:				; CODE XREF: sub_71010F70+62j
		mov	ecx, [edx+54h]
		test	ecx, ecx
		jnz	loc_71010FD8
		mov	eax, [edx+60h]
		test	eax, eax
		jnz	loc_71010FD8
		mov	ebx, [edx+6Ch]
		test	ebx, ebx
		jnz	loc_71010FD8
		mov	ecx, [edx+78h]
		test	ecx, ecx
		jnz	loc_71010FD8
		mov	eax, [edx+84h]
		test	eax, eax
		jnz	loc_71010FD8
		mov	ebx, [edx+90h]
		test	ebx, ebx
		jnz	loc_71010FD8
		mov	ecx, [edx+9Ch]
		test	ecx, ecx
		jnz	loc_71010FD8
		mov	eax, [edx+0A8h]
		test	eax, eax
		jz	short loc_710110D7
		jmp	loc_71010FD8
; ---------------------------------------------------------------------------

loc_71011155:				; CODE XREF: sub_71010F70+A1j
		mov	eax, ds:off_71059C74
		mov	edx, [ebp+var_104]
		mov	ecx, ds:_ZeqRK13QLatin1StringRK10QStringRef
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[ebp+var_C], eax
		lea	eax, [ebp+var_C]
		add	edx, 40h
		mov	[ebp+var_118], edx
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_F0], ecx
		call	ecx ; _ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jnz	loc_71011017
		mov	ebx, [ebp+var_104]
		cmp	dword ptr [ebx+48h], 3
		jg	loc_71011270

loc_710111A6:				; CODE XREF: sub_71010F70+345j
		mov	edx, [ebp+var_118]
		lea	eax, [ebp+var_18]
		mov	[ebp+var_18], offset aNone ; "none"
		mov	[esp], eax
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp+4], edx
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jnz	loc_710119A0
		lea	ebx, [ebp+var_B0]
		mov	[esp], ebx
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	ds:_ZN6QColor10invalidateEv
		mov	ecx, [ebp+var_110]
		mov	edx, ebx
		mov	eax, [ebp+var_118]
		call	sub_7100D500
		test	al, al
		jz	loc_71011017
		lea	edx, [ebp+var_1C]
		mov	dword ptr [esp+8], 1
		mov	[esp+4], ebx
		mov	[esp], edx
		call	ds:_ZN6QBrushC1ERK6QColorN2Qt10BrushStyleE
		mov	eax, [ebp+var_108]
		lea	ecx, [ebp+var_1C]
		mov	[esp+4], ecx
		mov	[ebp+var_E8], 6
		add	eax, 8
		mov	[esp], eax
		call	ds:_ZN4QPen8setBrushERK6QBrush
		mov	ebx, [ebp+var_108]
		lea	eax, [ebp+var_1C]
		or	byte ptr [ebx+38h], 8
		mov	dword ptr [ebx+30h], 0
		mov	[esp], eax
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	ds:_ZN6QBrushD1Ev
		jmp	loc_71011017
; ---------------------------------------------------------------------------

loc_71011270:				; CODE XREF: sub_71010F70+230j
		mov	eax, [ebx+40h]
		mov	edx, [ebx+44h]
		mov	[ebp+var_10], offset aUrl ; "url"
		mov	[ebp+var_8C], 3
		mov	[ebp+var_94], eax
		lea	eax, [ebp+var_94]
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[ebp+var_90], edx
		mov	[esp], eax
		mov	[ebp+var_E8], 0Ah
		call	[ebp+var_F0]
		test	al, al
		jz	loc_710111A6
		mov	eax, [ebx+48h]
		mov	edx, [ebx+44h]
		mov	ecx, [ebx+40h]
		mov	[ebp+var_E8], 9
		sub	eax, 3
		add	edx, 3
		mov	[ebp+var_9C], edx
		lea	edx, [ebp+var_A0]
		mov	[ebp+var_98], eax
		lea	eax, [ebp+var_14]
		mov	[ebp+var_A0], ecx
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		mov	eax, [ebp+var_10C]
		sub	esp, 4
		lea	edx, [ebp+var_14]
		mov	[ebp+var_E8], 8
		call	sub_7100D410
		test	eax, eax
		mov	[ebp+var_114], eax
		jz	loc_71011A72
		mov	edx, eax
		mov	eax, [eax]
		mov	[esp], edx
		call	dword ptr [eax+10h]
		cmp	eax, 5
		jnz	loc_71011A10

loc_71011338:				; CODE XREF: sub_71010F70+AB7j
		mov	ebx, [ebp+var_108]
		mov	eax, [ebp+var_114]
		or	byte ptr [ebx+38h], 8
		mov	[ebx+30h], eax

loc_7101134B:				; CODE XREF: sub_71010F70+AB1j
					; sub_71010F70+B59j
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_E8], 9
		call	sub_710477B0
		jmp	loc_71011017
; ---------------------------------------------------------------------------

loc_71011365:				; CODE XREF: sub_71010F70+135j
		mov	eax, ds:off_71059C74
		mov	edx, [ebp+var_104]
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[ebp+var_70], eax
		lea	eax, [ebp+var_70]
		add	edx, 88h
		mov	[ebp+var_12C], edx
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jnz	loc_710110AB
		mov	eax, [ebp+var_12C]
		xor	edx, edx
		call	sub_71007490
		fst	[ebp+var_80]
		fldz
		fst	[ebp+var_78]
		fxch	st(1)
		fucompp
		fnstsw	ax
		sahf
		ja	loc_71011938
		lea	eax, [ebp+var_78]

loc_710113C6:				; CODE XREF: sub_71010F70+9CBj
		fld1
		fst	[ebp+var_88]
		fld	qword ptr [eax]
		fld	st(1)
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jbe	short loc_710113E1
		fstp	st
		jmp	short loc_710113E3
; ---------------------------------------------------------------------------

loc_710113E1:				; CODE XREF: sub_71010F70+46Bj
		fstp	st(1)

loc_710113E3:				; CODE XREF: sub_71010F70+46Fj
		mov	edx, [ebp+var_108]
		fstp	qword ptr [edx+10h]
		or	byte ptr [edx+39h], 2
		jmp	loc_710110AB
; ---------------------------------------------------------------------------

loc_710113F5:				; CODE XREF: sub_71010F70+121j
		mov	eax, ds:off_71059C74
		add	ecx, 7Ch
		mov	[ebp+var_130], ecx
		mov	[esp+4], ecx
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[ebp+var_6C], eax
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jnz	loc_71011097
		mov	eax, [ebp+var_130]
		xor	edx, edx
		call	sub_71007490
		mov	eax, [ebp+var_108]
		add	eax, 8
		mov	[esp], eax
		fstp	qword ptr [esp+4]
		call	ds:_ZN4QPen13setMiterLimitEd
		mov	ebx, [ebp+var_108]
		or	byte ptr [ebx+39h], 1
		jmp	loc_71011097
; ---------------------------------------------------------------------------
		align 10h

loc_71011460:				; CODE XREF: sub_71010F70+C6j
		mov	eax, ds:off_71059C74
		add	ecx, 4Ch
		mov	ebx, ds:_ZeqRK13QLatin1StringRK10QStringRef
		mov	[ebp+var_11C], ecx
		mov	[esp+4], ecx
		mov	[ebp+var_30], eax
		lea	eax, [ebp+var_30]
		mov	[esp], eax
		mov	[ebp+var_F4], ebx
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	ebx ; _ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jnz	loc_7101103C
		mov	eax, [ebp+var_11C]
		mov	[ebp+var_34], offset aNone ; "none"
		mov	[esp+4], eax
		lea	eax, [ebp+var_34]
		mov	[esp], eax
		call	ebx ; _ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jnz	loc_71011610
		mov	ecx, [ebp+var_11C]
		lea	eax, [ebp+var_38]
		mov	[esp], eax
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp+4], ecx
		call	ds:_ZNK10QStringRef8toStringEv
		mov	eax, [ebp+var_38]
		lea	edx, [ebp+var_3C]
		mov	eax, [eax+0Ch]
		mov	[ebp+var_E8], 3
		sub	esp, 4
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_40]
		call	sub_71007710
		mov	eax, [ebp+var_40]
		test	byte ptr [eax+8], 1
		jz	loc_710115BF
		mov	[ebp+var_44], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_44]
		test	byte ptr [eax+0Ch], 1
		jnz	short loc_71011542
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_E8], 2
		mov	[esp+4], eax
		lea	eax, [ebp+var_44]
		mov	[esp], eax
		call	sub_7104EDA0
		mov	eax, [ebp+var_44]

loc_71011542:				; CODE XREF: sub_71010F70+5AAj
		mov	edx, [ebp+var_40]
		mov	eax, [eax+8]
		mov	edx, [edx+8]
		mov	[ebp+var_E8], 1
		add	eax, edx
		mov	[ebp+var_13C], eax
		mov	[esp+8], eax
		lea	eax, [ebp+var_40]
		mov	[esp+4], edx
		mov	[esp], eax
		call	sub_7104EDA0
		mov	ecx, [ebp+var_44]
		mov	edx, [ebp+var_40]
		mov	eax, [ecx+8]
		lea	eax, [ecx+eax*8+10h]
		add	ecx, 10h
		cmp	eax, ecx
		jz	short loc_7101159E
		mov	ebx, [ebp+var_13C]
		lea	edx, [edx+ebx*8+10h]
		xchg	ax, ax

loc_71011590:				; CODE XREF: sub_71010F70+62Cj
		sub	eax, 8
		sub	edx, 8
		fld	qword ptr [eax]
		cmp	ecx, eax
		fstp	qword ptr [edx]
		jnz	short loc_71011590

loc_7101159E:				; CODE XREF: sub_71010F70+612j
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+var_13C]
		mov	[eax+8], edx
		lea	eax, [ebp+var_44]
		mov	[esp], eax
		mov	[ebp+var_E8], 2
		call	sub_7104F050

loc_710115BF:				; CODE XREF: sub_71010F70+594j
		mov	ebx, [ebp+var_108]
		lea	eax, [ebp+var_40]
		mov	[esp+4], eax
		mov	[ebp+var_E8], 2
		mov	[esp], ebx
		call	sub_71028160
		lea	eax, [ebp+var_40]
		mov	[esp], eax
		mov	[ebp+var_E8], 3
		call	sub_7104F050
		lea	eax, [ebp+var_38]
		mov	[esp], eax
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	sub_710477B0
		jmp	loc_7101103C
; ---------------------------------------------------------------------------
		align 10h

loc_71011610:				; CODE XREF: sub_71010F70+546j
		mov	eax, [ebp+var_108]
		mov	dword ptr [esp+4], 1
		add	eax, 8
		mov	[esp], eax
		call	ds:_ZN4QPen8setStyleEN2Qt8PenStyleE
		mov	edx, [ebp+var_108]
		or	byte ptr [edx+38h], 10h
		jmp	loc_7101103C
; ---------------------------------------------------------------------------
		align 10h

loc_71011640:				; CODE XREF: sub_71010F70+B5j
		mov	eax, ds:off_71059C74
		add	edx, 94h
		mov	[ebp+var_128], edx
		mov	[esp+4], edx
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[ebp+var_24], eax
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jnz	loc_7101102B
		mov	ecx, [ebp+var_128]
		lea	ebx, [ebp+var_2C]
		mov	[esp], ebx
		mov	[esp+4], ecx
		call	ds:_ZNK10QStringRef8toStringEv
		mov	ecx, [ebp+var_110]
		lea	edx, [ebp+var_28]
		mov	eax, ebx
		mov	[ebp+var_E8], 4
		sub	esp, 4
		mov	dword ptr [esp], 0
		call	sub_7100BF60
		mov	eax, [ebp+var_108]
		fstp	qword ptr [esp+4]
		add	eax, 8
		mov	[esp], eax
		call	ds:_ZN4QPen9setWidthFEd
		mov	eax, [ebp+var_108]
		or	byte ptr [eax+39h], 4
		mov	eax, [ebp+var_2C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7101102B
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101102B
; ---------------------------------------------------------------------------
		align 10h

loc_71011700:				; CODE XREF: sub_71010F70+10Dj
		mov	ecx, ds:_ZeqRK13QLatin1StringRK10QStringRef
		add	edx, 0A0h
		lea	eax, [ebp+var_64]
		mov	[ebp+var_64], offset aNonScalingStro ; "non-scaling-stroke"
		mov	[ebp+var_138], edx
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_100], ecx
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	ecx ; _ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71011A30
		mov	ebx, [ebp+var_108]
		or	byte ptr [ebx+38h], 2
		or	byte ptr [ebx+39h], 8
		jmp	loc_71011083
; ---------------------------------------------------------------------------

loc_71011750:				; CODE XREF: sub_71010F70+F9j
		mov	eax, ds:off_71059C74
		add	ebx, 58h
		mov	[ebp+var_134], ebx
		mov	[esp+4], ebx
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[ebp+var_60], eax
		lea	eax, [ebp+var_60]
		mov	[esp], eax
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jnz	loc_7101106F
		mov	eax, ebx
		xor	edx, edx
		call	sub_71007490
		mov	eax, [ebp+var_108]
		or	byte ptr [eax+38h], 20h
		fstp	qword ptr [eax+20h]
		jmp	loc_7101106F
; ---------------------------------------------------------------------------
		align 10h

loc_710117A0:				; CODE XREF: sub_71010F70+E8j
		mov	edx, ds:_ZeqRK13QLatin1StringRK10QStringRef
		add	eax, 64h
		mov	[ebp+var_124], eax
		mov	[esp+4], eax
		lea	eax, [ebp+var_54]
		mov	[ebp+var_54], offset aButt ; "butt"
		mov	[esp], eax
		mov	[ebp+var_FC], edx
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	edx ; _ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71011866
		mov	dword ptr [esp+4], 0

loc_710117E2:				; CODE XREF: sub_71010F70+95Cj
		mov	eax, [ebp+var_108]
		add	eax, 8
		mov	[esp], eax
		call	ds:_ZN4QPen11setCapStyleEN2Qt11PenCapStyleE
		mov	ecx, [ebp+var_108]
		or	byte ptr [ecx+38h], 40h
		jmp	loc_7101105E
; ---------------------------------------------------------------------------

loc_71011803:				; CODE XREF: sub_71010F70+D7j
		mov	ecx, ds:_ZeqRK13QLatin1StringRK10QStringRef
		add	edx, 70h
		lea	eax, [ebp+var_48]
		mov	[ebp+var_48], offset aMiter ; "miter"
		mov	[ebp+var_120], edx
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_F8], ecx
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	ecx ; _ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_710118D1
		mov	dword ptr [esp+4], 100h

loc_71011845:				; CODE XREF: sub_71010F70+9C3j
		mov	eax, [ebp+var_108]
		add	eax, 8
		mov	[esp], eax
		call	ds:_ZN4QPen12setJoinStyleEN2Qt12PenJoinStyleE
		mov	ebx, [ebp+var_108]
		or	byte ptr [ebx+38h], 80h
		jmp	loc_7101104D
; ---------------------------------------------------------------------------

loc_71011866:				; CODE XREF: sub_71010F70+864j
		mov	ebx, [ebp+var_124]
		lea	eax, [ebp+var_58]
		mov	[ebp+var_58], offset aRound ; "round"
		mov	[esp], eax
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp+4], ebx
		call	[ebp+var_FC]
		test	al, al
		jnz	loc_71011970
		mov	edx, [ebp+var_124]
		lea	eax, [ebp+var_5C]
		mov	[ebp+var_5C], offset aSquare ; "square"
		mov	[esp], eax
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp+4], edx
		call	[ebp+var_FC]
		test	al, al
		jz	loc_7101105E
		mov	dword ptr [esp+4], 10h
		jmp	loc_710117E2
; ---------------------------------------------------------------------------

loc_710118D1:				; CODE XREF: sub_71010F70+8C7j
		mov	eax, [ebp+var_120]
		mov	[ebp+var_4C], offset aRound ; "round"
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	[ebp+var_F8]
		test	al, al
		jnz	short loc_71011940
		mov	ecx, [ebp+var_120]
		lea	eax, [ebp+var_50]
		mov	[ebp+var_50], offset aBevel ; "bevel"
		mov	[esp], eax
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp+4], ecx
		call	[ebp+var_F8]
		test	al, al
		jz	loc_7101104D
		mov	dword ptr [esp+4], 40h
		jmp	loc_71011845
; ---------------------------------------------------------------------------

loc_71011938:				; CODE XREF: sub_71010F70+44Dj
		lea	eax, [ebp+var_80]
		jmp	loc_710113C6
; ---------------------------------------------------------------------------

loc_71011940:				; CODE XREF: sub_71010F70+98Aj
		mov	eax, [ebp+var_108]
		mov	dword ptr [esp+4], 80h
		add	eax, 8
		mov	[esp], eax
		call	ds:_ZN4QPen12setJoinStyleEN2Qt12PenJoinStyleE
		mov	edx, [ebp+var_108]
		or	byte ptr [edx+38h], 80h
		jmp	loc_7101104D
; ---------------------------------------------------------------------------
		align 10h

loc_71011970:				; CODE XREF: sub_71010F70+91Fj
		mov	eax, [ebp+var_108]
		mov	dword ptr [esp+4], 20h
		add	eax, 8
		mov	[esp], eax
		call	ds:_ZN4QPen11setCapStyleEN2Qt11PenCapStyleE
		mov	eax, [ebp+var_108]
		or	byte ptr [eax+38h], 40h
		jmp	loc_7101105E
; ---------------------------------------------------------------------------
		align 10h

loc_710119A0:				; CODE XREF: sub_71010F70+25Fj
		lea	edx, [ebp+var_20]
		mov	dword ptr [esp+4], 0
		mov	[esp], edx
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	ds:_ZN6QBrushC1EN2Qt10BrushStyleE
		mov	eax, [ebp+var_108]
		lea	ecx, [ebp+var_20]
		mov	[esp+4], ecx
		mov	[ebp+var_E8], 5
		add	eax, 8
		mov	[esp], eax
		call	ds:_ZN4QPen8setBrushERK6QBrush
		mov	ebx, [ebp+var_108]
		lea	eax, [ebp+var_20]
		or	byte ptr [ebx+38h], 8
		mov	dword ptr [ebx+30h], 0
		mov	[esp], eax
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	ds:_ZN6QBrushD1Ev
		jmp	loc_71011017
; ---------------------------------------------------------------------------
		align 10h

loc_71011A10:				; CODE XREF: sub_71010F70+3C2j
		mov	ecx, [ebp+var_114]
		mov	eax, [ecx]
		mov	[esp], ecx
		call	dword ptr [eax+10h]
		cmp	eax, 6
		jnz	loc_7101134B
		jmp	loc_71011338
; ---------------------------------------------------------------------------
		align 10h

loc_71011A30:				; CODE XREF: sub_71010F70+7C7j
		mov	eax, [ebp+var_138]
		mov	[ebp+var_68], offset aNone ; "none"
		mov	[ebp+var_E8], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_68]
		mov	[esp], eax
		call	[ebp+var_100]
		test	al, al
		jz	loc_71011083
		mov	edx, [ebp+var_108]
		and	byte ptr [edx+38h], 0FDh
		or	byte ptr [edx+39h], 8
		jmp	loc_71011083
; ---------------------------------------------------------------------------

loc_71011A72:				; CODE XREF: sub_71010F70+3AFj
		lea	eax, [ebp+var_38]
		lea	edx, [ebp+var_14]
		mov	[ebp+var_E8], 8
		call	sub_71008360
		lea	eax, [ebp+var_38]
		mov	[esp+4], eax
		mov	eax, [ebp+var_108]
		mov	[ebp+var_E8], 7
		add	eax, 34h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	edx, [ebp+var_108]
		lea	eax, [ebp+var_38]
		and	byte ptr [edx+38h], 0FEh
		mov	[esp], eax
		mov	[ebp+var_E8], 8
		call	sub_710477B0
		jmp	loc_7101134B
sub_71010F70	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71011ACE	proc near		; DATA XREF: sub_71010F70+3Fo
		add	ebp, 8
		mov	eax, [ebp-0E8h]
		mov	ecx, [ebp-0E4h]
		cmp	eax, 1
		mov	[ebp-140h], ecx
		jz	short loc_71011B50
		cmp	eax, 2
		jz	short loc_71011B65
		cmp	eax, 3
		jz	loc_71011C28
		cmp	eax, 4
		jz	loc_71011C55
		cmp	eax, 5
		jz	loc_71011BB8
		cmp	eax, 6
		nop
		lea	esi, [esi+0]
		jz	loc_71011BE6
		cmp	eax, 7
		jz	loc_71011BFB
		cmp	eax, 8
		jz	loc_71011C10
		cmp	eax, 9
		nop
		lea	esi, [esi+0]
		jz	loc_71011BCE
		cmp	eax, 0Ah
		jz	short loc_71011B92
		lea	eax, [ebp-44h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_7104F050

loc_71011B50:				; CODE XREF: sub_71011ACE+18j
		lea	eax, [ebp-40h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_7104F050

loc_71011B65:				; CODE XREF: sub_71011ACE+1Dj
		lea	eax, [ebp-38h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_710477B0
		mov	eax, [ebp-140h]
		mov	dword ptr [ebp-0E8h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71011B92:				; CODE XREF: sub_71011ACE+6Bj
		mov	ecx, [ebp-108h]
		mov	[esp+0], ecx
		call	sub_710517D0
		mov	ebx, [ebp-140h]
		mov	dword ptr [ebp-0E8h], 0FFFFFFFFh
		mov	[esp+0], ebx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71011BB8:				; CODE XREF: sub_71011ACE+34j
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	ds:_ZN6QBrushD1Ev

loc_71011BCE:				; CODE XREF: sub_71011ACE+62j
		mov	eax, [ebp-140h]
		mov	dword ptr [ebp-0E8h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71011BE6:				; CODE XREF: sub_71011ACE+42j
		lea	eax, [ebp-38h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_710477B0

loc_71011BFB:				; CODE XREF: sub_71011ACE+4Bj
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_710477B0

loc_71011C10:				; CODE XREF: sub_71011ACE+54j
		mov	ecx, [ebp-140h]
		mov	dword ptr [ebp-0E8h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71011C28:				; CODE XREF: sub_71011ACE+22j
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_710477B0
		mov	edx, [ebp-140h]
		mov	dword ptr [ebp-0E8h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71011C55:				; CODE XREF: sub_71011ACE+2Bj
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	ds:_ZN6QBrushD1Ev
		mov	eax, [ebp-140h]
		mov	dword ptr [ebp-0E8h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71011ACE	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71011C90	proc near		; CODE XREF: sub_71017670+9Ep

var_220		= dword	ptr -220h
var_21C		= dword	ptr -21Ch
var_218		= dword	ptr -218h
var_214		= dword	ptr -214h
var_210		= dword	ptr -210h
var_20C		= dword	ptr -20Ch
var_208		= dword	ptr -208h
var_204		= dword	ptr -204h
var_200		= qword	ptr -200h
var_1F4		= dword	ptr -1F4h
var_1F0		= dword	ptr -1F0h
var_1EC		= dword	ptr -1ECh
var_1E8		= dword	ptr -1E8h
var_1E4		= dword	ptr -1E4h
var_1E0		= dword	ptr -1E0h
var_1DC		= dword	ptr -1DCh
var_1D8		= qword	ptr -1D8h
var_1CC		= dword	ptr -1CCh
var_1C8		= dword	ptr -1C8h
var_1C4		= dword	ptr -1C4h
var_1C0		= dword	ptr -1C0h
var_1BC		= dword	ptr -1BCh
var_1B8		= dword	ptr -1B8h
var_1B4		= dword	ptr -1B4h
var_1B0		= dword	ptr -1B0h
var_1AC		= dword	ptr -1ACh
var_1A8		= dword	ptr -1A8h
var_1A4		= dword	ptr -1A4h
var_1A0		= dword	ptr -1A0h
var_19C		= byte ptr -19Ch
var_198		= dword	ptr -198h
var_184		= dword	ptr -184h
var_180		= dword	ptr -180h
var_17C		= dword	ptr -17Ch
var_178		= dword	ptr -178h
var_174		= dword	ptr -174h
var_160		= byte ptr -160h
var_150		= dword	ptr -150h
var_14C		= dword	ptr -14Ch
var_148		= dword	ptr -148h
var_144		= dword	ptr -144h
var_140		= dword	ptr -140h
var_13C		= dword	ptr -13Ch
var_138		= dword	ptr -138h
var_134		= dword	ptr -134h
var_130		= dword	ptr -130h
var_12C		= dword	ptr -12Ch
var_128		= dword	ptr -128h
var_124		= dword	ptr -124h
var_120		= dword	ptr -120h
var_11C		= dword	ptr -11Ch
var_118		= dword	ptr -118h
var_114		= dword	ptr -114h
var_110		= dword	ptr -110h
var_10C		= dword	ptr -10Ch
var_108		= dword	ptr -108h
var_104		= dword	ptr -104h
var_100		= dword	ptr -100h
var_FC		= dword	ptr -0FCh
var_F8		= dword	ptr -0F8h
var_F4		= dword	ptr -0F4h
var_F0		= dword	ptr -0F0h
var_EC		= dword	ptr -0ECh
var_E8		= dword	ptr -0E8h
var_E4		= dword	ptr -0E4h
var_E0		= dword	ptr -0E0h
var_DC		= dword	ptr -0DCh
var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_D0		= dword	ptr -0D0h
var_CC		= dword	ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= byte ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= byte ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= byte ptr -10h
var_9		= byte ptr -9
var_8		= byte ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 238h
		mov	[ebp+var_1C0], eax
		lea	eax, [ebp+var_8]
		mov	[ebp+var_17C], eax
		lea	eax, [ebp+var_19C]
		mov	[ebp+var_1C4], ecx
		mov	[esp], eax
		mov	[ebp+var_1BC], edx
		mov	[ebp+var_184], offset sub_710525B0
		mov	[ebp+var_180], offset dword_710531A4
		mov	[ebp+var_178], offset sub_710138B7
		mov	[ebp+var_174], esp
		call	_Unwind_SjLj_Register
		lea	edx, [ebp+var_160]
		mov	[esp], edx
		mov	[ebp+var_198], 0FFFFFFFFh
		call	ds:_ZN6QColor10invalidateEv
		mov	ecx, [ebp+var_1C4]
		mov	edx, [ebp+var_1BC]
		mov	eax, [ebp+var_1BC]
		mov	[esp], ecx
		lea	ecx, [ebp+var_160]
		add	edx, 10h
		add	eax, 4
		call	sub_7100DDD0
		test	al, al
		jz	short loc_71011D4F
		mov	eax, [ebp+var_1C4]
		mov	[esp], eax
		call	sub_71006D60
		mov	ecx, [ebp+var_1C4]
		lea	edx, [ebp+var_160]
		mov	[esp+4], edx
		mov	[esp], ecx
		call	sub_71006ED0

loc_71011D4F:				; CODE XREF: sub_71011C90+97j
		mov	ecx, [ebp+var_1C4]
		mov	edx, [ebp+var_1BC]
		mov	eax, [ebp+var_1C0]
		mov	[ebp+var_198], 0FFFFFFFFh
		call	sub_71010720
		mov	edx, [ebp+var_1BC]
		mov	eax, [ebp+var_1C0]
		mov	ecx, [ebp+var_1C4]
		call	sub_71010F70
		mov	eax, [ebp+var_1BC]
		mov	edx, [eax+0B4h]
		test	edx, edx
		jnz	short loc_71011DA5
		mov	ecx, [eax+0C0h]
		test	ecx, ecx
		jz	loc_71011F70

loc_71011DA5:				; CODE XREF: sub_71011C90+105j
					; sub_71011C90+2E8j ...
		mov	eax, [ebp+var_1C0]
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_71022510
		mov	edx, [ebp+var_1BC]
		mov	[ebp+var_1DC], eax
		mov	eax, [edx+0B4h]
		test	eax, eax
		jnz	loc_710125D0

loc_71011DD7:				; CODE XREF: sub_71011C90+9C4j
					; sub_71011C90+A25j
		mov	dword ptr [esp], 38h ; size_t
		mov	[ebp+var_198], 0FFFFFFFFh
		call	sub_710517F0
		mov	[ebp+var_198], 0Eh
		mov	[ebp+var_220], eax
		mov	[ebp+var_1C8], eax
		mov	[esp], eax
		call	sub_71027AF0

loc_71011E0B:				; CODE XREF: sub_71011C90+A1Fj
		mov	eax, [ebp+var_1BC]
		mov	eax, [eax+0B4h]
		test	eax, eax
		jnz	loc_71012430

loc_71011E1F:				; CODE XREF: sub_71011C90+7DCj
					; sub_71011C90+864j ...
		mov	edx, [ebp+var_1BC]
		mov	ecx, [edx+0C0h]
		test	ecx, ecx
		jnz	loc_710126C0

loc_71011E33:				; CODE XREF: sub_71011C90+A68j
		mov	edx, [ebp+var_1BC]
		mov	eax, [edx+0CCh]
		test	eax, eax
		jnz	loc_710127D7

loc_71011E47:				; CODE XREF: sub_71011C90+B41j
					; sub_71011C90+B7Fj ...
		mov	eax, [ebp+var_1BC]
		mov	ecx, [eax+0D8h]
		test	ecx, ecx
		jnz	loc_71012A08

loc_71011E5B:				; CODE XREF: sub_71011C90+DAEj
					; sub_71011C90+E2Aj ...
		mov	ecx, [ebp+var_1BC]
		mov	edx, [ecx+0E4h]
		test	edx, edx
		jnz	loc_71012923

loc_71011E6F:				; CODE XREF: sub_71011C90+CCAj
					; sub_71011C90+D15j ...
		mov	ecx, [ebp+var_1BC]
		mov	eax, [ecx+0F0h]
		test	eax, eax
		jnz	loc_71012863

loc_71011E83:				; CODE XREF: sub_71011C90+C0Aj
					; sub_71011C90+C79j ...
		mov	ecx, [ebp+var_1BC]
		mov	eax, [ebp+var_1C8]
		mov	edx, [ebp+var_1C0]
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[esp+8], ecx
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_71023700

loc_71011EAF:				; CODE XREF: sub_71011C90+312j
		mov	ecx, [ebp+var_1C4]
		mov	edx, [ebp+var_1BC]
		mov	eax, [ebp+var_1C0]
		mov	[ebp+var_198], 0FFFFFFFFh
		call	sub_7100A6C0
		mov	ecx, [ebp+var_1C0]
		mov	ecx, [ecx+34h]
		test	ecx, ecx
		mov	[ebp+var_1CC], ecx
		jz	loc_710123A3
		mov	eax, [ebp+var_1BC]
		mov	ecx, [eax+108h]
		test	ecx, ecx
		jnz	loc_71012372

loc_71011EFB:				; CODE XREF: sub_71011C90+70Dj
		mov	edx, [ebp+var_1CC]
		mov	ecx, [ebp+var_1C0]
		movzx	eax, byte ptr [edx+4Ch]
		mov	[esp], ecx
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_71022590

loc_71011F21:				; CODE XREF: sub_71011C90+77Bj
					; sub_71011C90+8DAj
		mov	ecx, [ebp+var_1BC]
		mov	edx, [ecx+114h]
		test	edx, edx
		jnz	loc_71012230

loc_71011F35:				; CODE XREF: sub_71011C90+6BEj
					; sub_71011C90+6DDj
		mov	ecx, [ebp+var_1BC]
		mov	eax, [ecx+120h]
		test	eax, eax
		jnz	loc_710120E0

loc_71011F49:				; CODE XREF: sub_71011C90+579j
					; sub_71011C90+598j
		mov	edx, [ebp+var_1BC]
		mov	ecx, [edx+12Ch]
		test	ecx, ecx
		jnz	short loc_71011FB0

loc_71011F59:				; CODE XREF: sub_71011C90+429j
					; sub_71011C90+448j
		lea	eax, [ebp+var_19C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, 1
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71011F70:				; CODE XREF: sub_71011C90+10Fj
		mov	edx, [eax+0CCh]
		test	edx, edx
		jnz	loc_71011DA5
		mov	ecx, [eax+0D8h]
		test	ecx, ecx
		jnz	loc_71011DA5
		mov	edx, [eax+0E4h]
		test	edx, edx
		jnz	loc_71011DA5
		mov	ecx, [eax+0F0h]
		test	ecx, ecx
		jz	loc_71011EAF
		jmp	loc_71011DA5
; ---------------------------------------------------------------------------
		align 10h

loc_71011FB0:				; CODE XREF: sub_71011C90+2C7j
		mov	eax, edx
		add	eax, 124h
		lea	ecx, [ebp+var_150]
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	[ebp+var_198], 0FFFFFFFFh
		call	ds:_ZNK10QStringRef8toStringEv
		lea	eax, [ebp+var_104]
		lea	edx, [ebp+var_150]
		mov	[ebp+var_198], 2
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK7QString7trimmedEv
		sub	esp, 4
		mov	eax, [ebp+var_150]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_710125B0

loc_71012011:				; CODE XREF: sub_71011C90+939j
		mov	eax, [ebp+var_104]
		mov	edx, [eax+8]
		test	edx, edx
		jz	loc_710120B1
		lea	eax, [ebp+var_108]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_108], offset aInline ;	"inline"
		mov	[esp], eax
		mov	[ebp+var_198], 1
		call	ds:_ZNK7QStringeqERK13QLatin1String
		xor	edx, edx
		test	al, al
		jnz	short loc_7101208F
		lea	eax, [ebp+var_10C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_10C], offset aBlock ; "block"
		mov	[esp], eax
		mov	[ebp+var_198], 1
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		jz	loc_71013310

loc_7101208A:				; CODE XREF: sub_71011C90+1A17j
		mov	edx, 1

loc_7101208F:				; CODE XREF: sub_71011C90+3C3j
					; sub_71011C90+16AAj ...
		mov	eax, [ebp+var_1C0]
		mov	[esp+4], edx
		mov	[ebp+var_198], 1
		mov	[esp], eax
		call	sub_710225D0
		mov	eax, [ebp+var_104]

loc_710120B1:				; CODE XREF: sub_71011C90+38Cj
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_71011F59
		mov	eax, [ebp+var_104]
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71011F59
; ---------------------------------------------------------------------------
		align 10h

loc_710120E0:				; CODE XREF: sub_71011C90+2B3j
		mov	eax, ecx
		add	eax, 118h
		mov	[esp+4], eax
		lea	eax, [ebp+var_9C]
		mov	[esp], eax
		mov	[ebp+var_198], 0FFFFFFFFh
		call	ds:_ZNK10QStringRef8toStringEv
		lea	eax, [ebp+var_104]
		lea	edx, [ebp+var_9C]
		mov	[ebp+var_198], 6
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK7QString7trimmedEv
		sub	esp, 4
		mov	eax, [ebp+var_9C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71012590

loc_71012141:				; CODE XREF: sub_71011C90+919j
		mov	eax, [ebp+var_104]
		mov	edx, [eax+8]
		test	edx, edx
		jz	loc_71012201
		lea	eax, [ebp+var_100]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_100], offset aClear ; "clear"
		mov	[esp], eax
		mov	[ebp+var_198], 5
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	[ebp+var_1EC], 2
		jz	loc_71012B47

loc_71012191:				; CODE XREF: sub_71011C90+EF0j
					; sub_71011C90+F2Fj ...
		mov	dword ptr [esp], 10h ; size_t
		mov	[ebp+var_198], 5
		call	sub_710517F0
		mov	[ebp+var_1E8], eax
		mov	eax, [ebp+var_1EC]
		mov	edx, [ebp+var_1E8]
		mov	[ebp+var_198], 4
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_71025480
		mov	eax, [ebp+var_1BC]
		mov	edx, [ebp+var_1E8]
		mov	ecx, [ebp+var_1C0]
		mov	[ebp+var_198], 5
		mov	[esp+8], eax
		mov	[esp+4], edx
		mov	[esp], ecx
		call	sub_71023700
		mov	eax, [ebp+var_104]

loc_71012201:				; CODE XREF: sub_71011C90+4BCj
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_71011F49
		mov	eax, [ebp+var_104]
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71011F49
; ---------------------------------------------------------------------------
		align 10h

loc_71012230:				; CODE XREF: sub_71011C90+29Fj
		mov	eax, ecx
		add	eax, 10Ch
		mov	[esp+4], eax
		lea	eax, [ebp+var_98]
		mov	[esp], eax
		mov	[ebp+var_198], 0FFFFFFFFh
		call	ds:_ZNK10QStringRef8toStringEv
		lea	eax, [ebp+var_104]
		lea	edx, [ebp+var_98]
		mov	[ebp+var_198], 9
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK7QString7trimmedEv
		sub	esp, 4
		mov	eax, [ebp+var_98]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71012570

loc_71012291:				; CODE XREF: sub_71011C90+8F9j
		lea	eax, [ebp+var_9]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_9], 0
		mov	[esp], eax
		mov	[ebp+var_198], 8
		call	ds:_ZNK7QString8toDoubleEPb
		cmp	[ebp+var_9], 0
		fstp	[ebp+var_1D8]
		jz	short loc_71012340
		fld1
		fld	st
		fld	[ebp+var_1D8]
		fucompp
		fnstsw	ax
		sahf
		jbe	loc_71012410

loc_710122D6:				; CODE XREF: sub_71011C90+791j
		fstp	[ebp+var_1D8]

loc_710122DC:				; CODE XREF: sub_71011C90+799j
		mov	dword ptr [esp], 18h ; size_t
		mov	[ebp+var_198], 8
		call	sub_710517F0
		fld	[ebp+var_1D8]
		mov	[ebp+var_1E0], eax
		fstp	qword ptr [esp+4] ; double
		mov	[esp], eax	; int
		mov	[ebp+var_198], 7
		call	sub_710256A0
		mov	edx, [ebp+var_1BC]
		mov	ecx, [ebp+var_1E0]
		mov	eax, [ebp+var_1C0]
		mov	[ebp+var_198], 8
		mov	[esp+8], edx
		mov	[esp+4], ecx
		mov	[esp], eax
		call	sub_71023700

loc_71012340:				; CODE XREF: sub_71011C90+62Fj
		mov	eax, [ebp+var_104]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_71011F35
		mov	eax, [ebp+var_104]
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71011F35
; ---------------------------------------------------------------------------

loc_71012372:				; CODE XREF: sub_71011C90+265j
		mov	eax, ds:off_71059C74
		mov	[ebp+var_94], eax
		mov	eax, [ebp+var_1BC]
		add	eax, 100h
		mov	[esp+4], eax
		lea	eax, [ebp+var_94]
		mov	[esp], eax
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jnz	loc_71011EFB

loc_710123A3:				; CODE XREF: sub_71011C90+251j
		mov	ecx, [ebp+var_1BC]
		lea	eax, [ebp+var_90]
		mov	[esp], eax
		mov	eax, ds:_ZeqRK13QLatin1StringRK10QStringRef
		mov	[ebp+var_90], offset aHidden ; "hidden"
		mov	[ebp+var_198], 0FFFFFFFFh
		add	ecx, 100h
		mov	[ebp+var_1E4], ecx
		mov	[esp+4], ecx
		mov	[ebp+var_1B8], eax
		call	eax ; _ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71012515

loc_710123EB:				; CODE XREF: sub_71011C90+8B4j
		mov	edx, [ebp+var_1C0]
		mov	dword ptr [esp+4], 0
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_71022590
		jmp	loc_71011F21
; ---------------------------------------------------------------------------

loc_71012410:				; CODE XREF: sub_71011C90+640j
		fstp	st
		fldz
		fld	st
		fld	[ebp+var_1D8]
		fucompp
		fnstsw	ax
		sahf
		jbe	loc_710122D6
		fstp	st
		jmp	loc_710122DC
; ---------------------------------------------------------------------------
		align 10h

loc_71012430:				; CODE XREF: sub_71011C90+189j
		mov	eax, ds:off_71059C74
		mov	edx, [ebp+var_1BC]
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[ebp+var_84], eax
		lea	eax, [ebp+var_84]
		add	edx, 0ACh
		mov	[ebp+var_214], edx
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jnz	loc_71011E1F
		mov	ecx, [ebp+var_214]
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		mov	[esp+4], ecx
		call	ds:_ZNK10QStringRef8toStringEv
		lea	eax, [ebp+var_80]
		lea	edx, [ebp+var_7C]
		mov	[ebp+var_198], 0Dh
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK7QString7trimmedEv
		sub	esp, 4
		lea	eax, [ebp+var_80]
		mov	[esp+4], eax
		mov	eax, [ebp+var_1C8]
		mov	[ebp+var_198], 0Ch
		add	eax, 10h
		mov	[esp], eax
		call	ds:_ZN5QFont9setFamilyERK7QString
		mov	ecx, [ebp+var_1C8]
		or	byte ptr [ecx+34h], 1
		mov	eax, [ebp+var_80]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71013220

loc_710124E9:				; CODE XREF: sub_71011C90+15A6j
		mov	eax, [ebp+var_7C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_71011E1F
		mov	eax, [ebp+var_7C]
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71011E1F
; ---------------------------------------------------------------------------

loc_71012515:				; CODE XREF: sub_71011C90+755j
		mov	eax, [ebp+var_1E4]
		mov	[ebp+var_8C], offset aCollapse ; "collapse"
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_8C]
		mov	[esp], eax
		call	[ebp+var_1B8]
		test	al, al
		jnz	loc_710123EB
		mov	edx, [ebp+var_1C0]
		mov	dword ptr [esp+4], 1
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_71022590
		jmp	loc_71011F21
; ---------------------------------------------------------------------------
		align 10h

loc_71012570:				; CODE XREF: sub_71011C90+5FBj
		mov	eax, [ebp+var_98]
		mov	[ebp+var_198], 8
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71012291
; ---------------------------------------------------------------------------
		align 10h

loc_71012590:				; CODE XREF: sub_71011C90+4ABj
		mov	eax, [ebp+var_9C]
		mov	[ebp+var_198], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71012141
; ---------------------------------------------------------------------------
		align 10h

loc_710125B0:				; CODE XREF: sub_71011C90+37Bj
		mov	eax, [ebp+var_150]
		mov	[ebp+var_198], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71012011
; ---------------------------------------------------------------------------
		align 10h

loc_710125D0:				; CODE XREF: sub_71011C90+141j
		mov	eax, [ebp+var_1BC]
		lea	edx, [ebp+var_88]
		mov	[esp], edx
		mov	[ebp+var_198], 0FFFFFFFFh
		add	eax, 0ACh
		mov	[esp+4], eax
		call	ds:_ZNK10QStringRef8toStringEv
		mov	eax, [ebp+var_1DC]
		lea	ecx, [ebp+var_88]
		mov	[ebp+var_198], 10h
		sub	esp, 4
		mov	[esp+4], ecx
		mov	[esp], eax
		call	_ZNK16QSvgTinyDocument7svgFontERK7QString
		mov	[ebp+var_210], eax
		mov	eax, [ebp+var_88]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7101264C
		mov	eax, [ebp+var_88]
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7101264C:				; CODE XREF: sub_71011C90+9A1j
		mov	edx, [ebp+var_210]
		test	edx, edx
		jz	loc_71011DD7
		mov	dword ptr [esp], 38h ; size_t
		mov	[ebp+var_198], 0FFFFFFFFh
		call	sub_710517F0
		mov	ecx, [ebp+var_1DC]
		mov	[ebp+var_198], 0Fh
		mov	[esp+8], ecx
		mov	[ebp+var_218], eax
		mov	edx, [ebp+var_218]
		mov	[ebp+var_1C8], eax
		mov	eax, [ebp+var_210]
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_71027CB0
		cmp	[ebp+var_218], 0
		jnz	loc_71011E0B
		jmp	loc_71011DD7
; ---------------------------------------------------------------------------
		align 10h

loc_710126C0:				; CODE XREF: sub_71011C90+19Dj
		mov	eax, ds:off_71059C74
		add	edx, 0B8h
		mov	ecx, ds:_ZeqRK13QLatin1StringRK10QStringRef
		mov	[ebp+var_1F0], edx
		mov	[esp+4], edx
		mov	[ebp+var_78], eax
		lea	eax, [ebp+var_78]
		mov	[esp], eax
		mov	[ebp+var_1A0], ecx
		mov	[ebp+var_198], 0FFFFFFFFh
		call	ecx ; _ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jnz	loc_71011E33
		mov	edx, [ebp+var_1BC]
		mov	eax, [edx+0B8h]
		mov	edx, [edx+0BCh]
		mov	eax, [eax]
		mov	eax, [eax+0Ch]
		movzx	eax, word ptr [eax+edx*2]
		cmp	ax, 6Dh
		jz	loc_710131D0
		ja	loc_710136B0
		cmp	ax, 6Ch
		jz	loc_7101323B

loc_71012733:				; CODE XREF: sub_71011C90+1A30j
		mov	eax, [ebp+var_1F0]
		lea	edx, [ebp+var_58]
		mov	[esp], edx
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[esp+4], eax
		call	ds:_ZNK10QStringRef8toStringEv
		mov	ecx, [ebp+var_1C4]
		lea	edx, [ebp+var_10]
		lea	eax, [ebp+var_58]
		mov	[ebp+var_198], 0Bh
		sub	esp, 4
		mov	dword ptr [esp], 0
		call	sub_7100BF60
		lea	eax, [ebp+var_58]
		fstp	[ebp+var_200]
		mov	[esp], eax
		mov	[ebp+var_198], 0FFFFFFFFh
		call	sub_710477B0

loc_71012793:				; CODE XREF: sub_71011C90+1577j
					; sub_71011C90+1588j ...
		mov	eax, [ebp+var_1C8]
		fld	[ebp+var_200]
		fstp	qword ptr [esp+4]
		mov	[ebp+var_198], 0FFFFFFFFh
		add	eax, 10h
		mov	[esp], eax
		call	ds:_ZN5QFont13setPointSizeFEd
		mov	eax, [ebp+var_1C8]
		or	byte ptr [eax+34h], 2
		mov	edx, [ebp+var_1BC]
		mov	eax, [edx+0CCh]
		test	eax, eax
		jz	loc_71011E47

loc_710127D7:				; CODE XREF: sub_71011C90+1B1j
		mov	eax, ds:off_71059C74
		add	edx, 0C4h
		mov	ecx, ds:_ZeqRK13QLatin1StringRK10QStringRef
		mov	[ebp+var_204], edx
		mov	[esp+4], edx
		mov	[ebp+var_54], eax
		lea	eax, [ebp+var_54]
		mov	[esp], eax
		mov	[ebp+var_1A4], ecx
		mov	[ebp+var_198], 0FFFFFFFFh
		call	ecx ; _ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jnz	loc_71011E47
		mov	eax, [ebp+var_204]
		mov	[ebp+var_50], offset aNormal ; "normal"
		mov	[esp+4], eax
		lea	eax, [ebp+var_50]
		mov	[esp], eax
		call	[ebp+var_1A4]
		test	al, al
		jz	loc_71012AC0
		mov	eax, [ebp+var_1C8]
		mov	dword ptr [esp+4], 0
		add	eax, 10h
		mov	[esp], eax
		call	ds:_ZN5QFont8setStyleENS_5StyleE
		mov	edx, [ebp+var_1C8]
		or	byte ptr [edx+34h], 4
		jmp	loc_71011E47
; ---------------------------------------------------------------------------

loc_71012863:				; CODE XREF: sub_71011C90+1EDj
		mov	eax, ds:off_71059C74
		add	ecx, 0E8h
		mov	[ebp+var_1F4], ecx
		mov	[esp+4], ecx
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[ebp+var_20], eax
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	eax, ds:_ZeqRK13QLatin1StringRK10QStringRef
		mov	[ebp+var_1B0], eax
		call	eax ; _ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jnz	loc_71011E83
		mov	edx, [ebp+var_1F4]
		lea	eax, [ebp+var_1C]
		mov	[ebp+var_1C], offset aStart ; "start"
		mov	[esp], eax
		mov	[esp+4], edx
		call	[ebp+var_1B0]
		test	al, al
		jnz	short loc_71012910

loc_710128C1:				; CODE XREF: sub_71011C90+C91j
		mov	eax, [ebp+var_1F4]
		mov	edx, ds:_ZeqRK13QLatin1StringRK10QStringRef
		mov	[ebp+var_18], offset aMiddle ; "middle"
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_1B4], edx
		call	edx ; _ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71013277
		mov	ecx, [ebp+var_1C8]
		mov	dword ptr [ecx+1Ch], 4
		or	byte ptr [ecx+34h], 20h
		jmp	loc_71011E83
; ---------------------------------------------------------------------------
		align 10h

loc_71012910:				; CODE XREF: sub_71011C90+C2Fj
		mov	ecx, [ebp+var_1C8]
		mov	dword ptr [ecx+1Ch], 1
		or	byte ptr [ecx+34h], 20h
		jmp	short loc_710128C1
; ---------------------------------------------------------------------------

loc_71012923:				; CODE XREF: sub_71011C90+1D9j
		mov	eax, ds:off_71059C74
		add	ecx, 0DCh
		mov	[ebp+var_208], ecx
		mov	[esp+4], ecx
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_2C]
		mov	[esp], eax
		mov	eax, ds:_ZeqRK13QLatin1StringRK10QStringRef
		mov	[ebp+var_1AC], eax
		call	eax ; _ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jnz	loc_71011E6F
		mov	edx, [ebp+var_208]
		lea	eax, [ebp+var_28]
		mov	[ebp+var_28], offset aNormal ; "normal"
		mov	[esp], eax
		mov	[esp+4], edx
		call	[ebp+var_1AC]
		test	al, al
		jz	short loc_710129B0
		mov	eax, [ebp+var_1C8]
		mov	dword ptr [esp+4], 0
		add	eax, 10h
		mov	[esp], eax
		call	ds:_ZN5QFont17setCapitalizationENS_14CapitalizationE
		mov	ecx, [ebp+var_1C8]
		or	byte ptr [ecx+34h], 8
		jmp	loc_71011E6F
; ---------------------------------------------------------------------------
		align 10h

loc_710129B0:				; CODE XREF: sub_71011C90+CEFj
		mov	eax, [ebp+var_208]
		mov	[ebp+var_24], offset aSmallCaps	; "small-caps"
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		call	[ebp+var_1AC]
		test	al, al
		jz	loc_71011E6F
		mov	eax, [ebp+var_1C8]
		mov	dword ptr [esp+4], 3
		add	eax, 10h
		mov	[esp], eax
		call	ds:_ZN5QFont17setCapitalizationENS_14CapitalizationE
		mov	edx, [ebp+var_1C8]
		or	byte ptr [edx+34h], 8
		jmp	loc_71011E6F
; ---------------------------------------------------------------------------

loc_71012A08:				; CODE XREF: sub_71011C90+1C5j
		mov	eax, ds:off_71059C74
		mov	edx, [ebp+var_1BC]
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[ebp+var_44], eax
		lea	eax, [ebp+var_44]
		add	edx, 0D0h
		mov	[ebp+var_20C], edx
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jnz	loc_71011E5B
		mov	ecx, [ebp+var_20C]
		lea	eax, [ebp+var_40]
		mov	[esp], eax
		mov	[ebp+var_9], 0
		mov	[esp+4], ecx
		call	ds:_ZNK10QStringRef8toStringEv
		lea	eax, [ebp+var_9]
		lea	edx, [ebp+var_40]
		mov	[ebp+var_198], 0Ah
		sub	esp, 4
		mov	dword ptr [esp+8], 0Ah
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZNK7QString5toIntEPbi
		mov	[ebp+var_21C], eax
		mov	eax, [ebp+var_40]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_710131B0

loc_71012A9D:				; CODE XREF: sub_71011C90+1536j
		cmp	[ebp+var_9], 0
		jz	loc_710132C0
		mov	edx, [ebp+var_21C]
		mov	eax, [ebp+var_1C8]
		mov	[eax+18h], edx
		or	byte ptr [eax+34h], 10h
		jmp	loc_71011E5B
; ---------------------------------------------------------------------------
		align 10h

loc_71012AC0:				; CODE XREF: sub_71011C90+BA4j
		mov	ecx, [ebp+var_204]
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_4C], offset aItalic ; "italic"
		mov	[esp], eax
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[esp+4], ecx
		call	[ebp+var_1A4]
		test	al, al
		jnz	loc_71013180
		mov	edx, [ebp+var_204]
		lea	eax, [ebp+var_48]
		mov	[ebp+var_48], offset aOblique ;	"oblique"
		mov	[esp], eax
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[esp+4], edx
		call	[ebp+var_1A4]
		test	al, al
		jz	loc_71011E47
		mov	eax, [ebp+var_1C8]
		mov	dword ptr [esp+4], 2
		add	eax, 10h
		mov	[esp], eax
		call	ds:_ZN5QFont8setStyleENS_5StyleE
		mov	ecx, [ebp+var_1C8]
		or	byte ptr [ecx+34h], 4
		jmp	loc_71011E47
; ---------------------------------------------------------------------------

loc_71012B47:				; CODE XREF: sub_71011C90+4FBj
		lea	eax, [ebp+var_FC]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_FC], offset aSrc ; "src"
		mov	[esp], eax
		mov	[ebp+var_198], 5
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	[ebp+var_1EC], 3
		jnz	loc_71012191
		lea	eax, [ebp+var_F8]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_F8], offset aDst ; "dst"
		mov	[esp], eax
		mov	[ebp+var_198], 5
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	[ebp+var_1EC], 4
		jnz	loc_71012191
		lea	eax, [ebp+var_F4]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_F4], offset aSrcOver ;	"src-over"
		mov	[esp], eax
		mov	[ebp+var_198], 5
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	[ebp+var_1EC], 0
		jnz	loc_71012191
		lea	eax, [ebp+var_F0]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_F0], offset aDstOver ;	"dst-over"
		mov	[esp], eax
		mov	[ebp+var_198], 5
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	[ebp+var_1EC], 1
		jnz	loc_71012191
		lea	eax, [ebp+var_EC]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_EC], offset aSrcIn ; "src-in"
		mov	[esp], eax
		mov	[ebp+var_198], 5
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	[ebp+var_1EC], 5
		jnz	loc_71012191
		lea	eax, [ebp+var_E8]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_E8], offset aDstIn ; "dst-in"
		mov	[esp], eax
		mov	[ebp+var_198], 5
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	[ebp+var_1EC], 6
		jnz	loc_71012191
		lea	eax, [ebp+var_E4]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_E4], offset aSrcOut ; "src-out"
		mov	[esp], eax
		mov	[ebp+var_198], 5
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	[ebp+var_1EC], 7
		jnz	loc_71012191
		lea	eax, [ebp+var_E0]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_E0], offset aDstOut ; "dst-out"
		mov	[esp], eax
		mov	[ebp+var_198], 5
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	[ebp+var_1EC], 8
		jnz	loc_71012191
		lea	eax, [ebp+var_DC]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_DC], offset aSrcAtop ;	"src-atop"
		mov	[esp], eax
		mov	[ebp+var_198], 5
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	[ebp+var_1EC], 9
		jnz	loc_71012191
		lea	eax, [ebp+var_D8]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_D8], offset aDstAtop ;	"dst-atop"
		mov	[esp], eax
		mov	[ebp+var_198], 5
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	[ebp+var_1EC], 0Ah
		jnz	loc_71012191
		lea	eax, [ebp+var_D4]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_D4], offset aXor ; "xor"
		mov	[esp], eax
		mov	[ebp+var_198], 5
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	[ebp+var_1EC], 0Bh
		jnz	loc_71012191
		lea	eax, [ebp+var_D0]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_D0], offset aPlus ; "plus"
		mov	[esp], eax
		mov	[ebp+var_198], 5
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	[ebp+var_1EC], 0Ch
		jnz	loc_71012191
		lea	eax, [ebp+var_CC]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_CC], offset aMultiply ; "multiply"
		mov	[esp], eax
		mov	[ebp+var_198], 5
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	[ebp+var_1EC], 0Dh
		jnz	loc_71012191
		lea	eax, [ebp+var_C8]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_C8], offset aScreen ; "screen"
		mov	[esp], eax
		mov	[ebp+var_198], 5
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	[ebp+var_1EC], 0Eh
		jnz	loc_71012191
		lea	eax, [ebp+var_C4]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_C4], offset aOverlay ;	"overlay"
		mov	[esp], eax
		mov	[ebp+var_198], 5
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	[ebp+var_1EC], 0Fh
		jnz	loc_71012191
		lea	eax, [ebp+var_C0]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_C0], offset aDarken ; "darken"
		mov	[esp], eax
		mov	[ebp+var_198], 5
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	[ebp+var_1EC], 10h
		jnz	loc_71012191
		lea	eax, [ebp+var_BC]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_BC], offset aLighten ;	"lighten"
		mov	[esp], eax
		mov	[ebp+var_198], 5
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	[ebp+var_1EC], 11h
		jnz	loc_71012191
		lea	eax, [ebp+var_B8]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_B8], offset aColorDodge ; "color-dodge"
		mov	[esp], eax
		mov	[ebp+var_198], 5
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	[ebp+var_1EC], 12h
		jnz	loc_71012191
		lea	eax, [ebp+var_B4]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_B4], offset aColorBurn	; "color-burn"
		mov	[esp], eax
		mov	[ebp+var_198], 5
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	[ebp+var_1EC], 13h
		jnz	loc_71012191
		lea	eax, [ebp+var_B0]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_B0], offset aHardLight	; "hard-light"
		mov	[esp], eax
		mov	[ebp+var_198], 5
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	[ebp+var_1EC], 14h
		jnz	loc_71012191
		lea	eax, [ebp+var_AC]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_AC], offset aSoftLight	; "soft-light"
		mov	[esp], eax
		mov	[ebp+var_198], 5
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	[ebp+var_1EC], 15h
		jnz	loc_71012191
		lea	eax, [ebp+var_A8]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_A8], offset aDifference ; "difference"
		mov	[esp], eax
		mov	[ebp+var_198], 5
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	[ebp+var_1EC], 16h
		jnz	loc_71012191
		lea	eax, [ebp+var_A4]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_A4], offset aExclusion	; "exclusion"
		mov	[esp], eax
		mov	[ebp+var_198], 5
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	[ebp+var_1EC], 17h
		jnz	loc_71012191
		lea	eax, [ebp+var_A0]
		mov	dword ptr [esp+4], 0
		mov	[esp], eax
		mov	[ebp+var_198], 5
		call	sub_710470A0
		lea	eax, [ebp+var_A0]
		mov	dword ptr [esp+4], offset aOperation ; "Operation: "
		mov	[esp], eax
		mov	[ebp+var_198], 3
		call	sub_71047390
		lea	edx, [ebp+var_104]
		mov	[esp+4], edx
		mov	[esp], eax
		call	sub_71047480
		mov	dword ptr [esp+4], offset aIsNotImplement ; " is not implemented"
		mov	[esp], eax
		call	sub_71047390
		lea	eax, [ebp+var_A0]
		mov	[esp], eax
		mov	[ebp+var_198], 5
		call	sub_71047180
		mov	[ebp+var_1EC], 0
		jmp	loc_71012191
; ---------------------------------------------------------------------------
		align 10h

loc_71013180:				; CODE XREF: sub_71011C90+E59j
		mov	eax, [ebp+var_1C8]
		mov	dword ptr [esp+4], 1
		add	eax, 10h
		mov	[esp], eax
		call	ds:_ZN5QFont8setStyleENS_5StyleE
		mov	eax, [ebp+var_1C8]
		or	byte ptr [eax+34h], 4
		jmp	loc_71011E47
; ---------------------------------------------------------------------------
		align 10h

loc_710131B0:				; CODE XREF: sub_71011C90+E07j
		mov	eax, [ebp+var_40]
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71012A9D
; ---------------------------------------------------------------------------
		align 10h

loc_710131D0:				; CODE XREF: sub_71011C90+A8Dj
		mov	eax, [ebp+var_1F0]
		mov	[ebp+var_60], offset aMedium ; "medium"
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_60]
		mov	[esp], eax
		call	[ebp+var_1A0]
		test	al, al
		jz	short loc_71013210
		fld	ds:flt_71059DBC
		fstp	[ebp+var_200]
		jmp	loc_71012793
; ---------------------------------------------------------------------------
		align 10h

loc_71013210:				; CODE XREF: sub_71011C90+1569j
					; sub_71011C90+15D4j ...
		fldz
		fstp	[ebp+var_200]
		jmp	loc_71012793
; ---------------------------------------------------------------------------
		align 10h

loc_71013220:				; CODE XREF: sub_71011C90+853j
		mov	eax, [ebp+var_80]
		mov	[ebp+var_198], 0Dh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_710124E9
; ---------------------------------------------------------------------------

loc_7101323B:				; CODE XREF: sub_71011C90+A9Dj
		mov	eax, [ebp+var_1F0]
		mov	[ebp+var_5C], offset aLarge ; "large"
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	[ebp+var_1A0]
		test	al, al
		jz	short loc_71013210
		fld	ds:dbl_71059DC0
		fstp	[ebp+var_200]
		jmp	loc_71012793
; ---------------------------------------------------------------------------

loc_71013277:				; CODE XREF: sub_71011C90+C62j
		mov	eax, [ebp+var_1F4]
		mov	[ebp+var_14], offset aEnd ; "end"
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		call	[ebp+var_1B4]
		test	al, al
		jz	loc_71011E83
		mov	edx, [ebp+var_1C8]
		mov	dword ptr [edx+1Ch], 2
		or	byte ptr [edx+34h], 20h
		jmp	loc_71011E83
; ---------------------------------------------------------------------------
		align 10h

loc_710132C0:				; CODE XREF: sub_71011C90+E11j
		lea	eax, [ebp+var_3C]
		mov	ecx, [ebp+var_20C]
		mov	[esp], eax
		mov	eax, ds:_ZeqRK13QLatin1StringRK10QStringRef
		mov	[ebp+var_3C], offset aNormal ; "normal"
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[esp+4], ecx
		mov	[ebp+var_1A8], eax
		call	eax ; _ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71013774
		mov	edx, [ebp+var_1C8]
		mov	dword ptr [edx+18h], 190h
		or	byte ptr [edx+34h], 10h
		jmp	loc_71011E5B
; ---------------------------------------------------------------------------
		align 10h

loc_71013310:				; CODE XREF: sub_71011C90+3F4j
		lea	eax, [ebp+var_110]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_110], offset aListItem	; "list-item"
		mov	[esp], eax
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	edx, 2
		jnz	loc_7101208F
		lea	eax, [ebp+var_114]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_114], offset aRunIn ; "run-in"
		mov	[esp], eax
		mov	[ebp+var_198], 1
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	edx, 3
		jnz	loc_7101208F
		lea	eax, [ebp+var_118]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_118], offset aCompact ; "compact"
		mov	[esp], eax
		mov	[ebp+var_198], 1
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	edx, 4
		jnz	loc_7101208F
		lea	eax, [ebp+var_11C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_11C], offset aMarker ;	"marker"
		mov	[esp], eax
		mov	[ebp+var_198], 1
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	edx, 5
		jnz	loc_7101208F
		lea	eax, [ebp+var_120]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_120], offset aTable ; "table"
		mov	[esp], eax
		mov	[ebp+var_198], 1
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	edx, 6
		jnz	loc_7101208F
		lea	eax, [ebp+var_124]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_124], offset aInlineTable ; "inline-table"
		mov	[esp], eax
		mov	[ebp+var_198], 1
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	edx, 7
		jnz	loc_7101208F
		lea	eax, [ebp+var_128]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_128], offset aTableRow	; "table-row"
		mov	[esp], eax
		mov	[ebp+var_198], 1
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	edx, 8
		jnz	loc_7101208F
		lea	eax, [ebp+var_12C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_12C], offset aTableHeaderGro ;	"table-header-group"
		mov	[esp], eax
		mov	[ebp+var_198], 1
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	edx, 9
		jnz	loc_7101208F
		lea	eax, [ebp+var_130]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_130], offset aTableFooterGro ;	"table-footer-group"
		mov	[esp], eax
		mov	[ebp+var_198], 1
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	edx, 0Ah
		jnz	loc_7101208F
		lea	eax, [ebp+var_134]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_134], offset aTableRow	; "table-row"
		mov	[esp], eax
		mov	[ebp+var_198], 1
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	edx, 0Bh
		jnz	loc_7101208F
		lea	eax, [ebp+var_138]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_138], offset aTableColumnGro ;	"table-column-group"
		mov	[esp], eax
		mov	[ebp+var_198], 1
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	edx, 0Ch
		jnz	loc_7101208F
		lea	eax, [ebp+var_13C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_13C], offset aTableColumn ; "table-column"
		mov	[esp], eax
		mov	[ebp+var_198], 1
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	edx, 0Dh
		jnz	loc_7101208F
		lea	eax, [ebp+var_140]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_140], offset aTableCell ; "table-cell"
		mov	[esp], eax
		mov	[ebp+var_198], 1
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	edx, 0Eh
		jnz	loc_7101208F
		lea	eax, [ebp+var_144]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_144], offset aTableCaption ; "table-caption"
		mov	[esp], eax
		mov	[ebp+var_198], 1
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	edx, 0Fh
		jnz	loc_7101208F
		lea	eax, [ebp+var_148]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_148], offset aNone ; "none"
		mov	[esp], eax
		mov	[ebp+var_198], 1
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	edx, 10h
		jnz	loc_7101208F
		mov	eax, ds:off_71059C74
		mov	[ebp+var_198], 1
		mov	[ebp+var_14C], eax
		lea	eax, [ebp+var_14C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[esp], eax
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	edx, 11h
		jnz	loc_7101208F
		jmp	loc_7101208A
; ---------------------------------------------------------------------------
		align 10h

loc_710136B0:				; CODE XREF: sub_71011C90+A93j
		cmp	ax, 73h
		jz	short loc_71013702
		cmp	ax, 78h
		lea	esi, [esi+0]
		jnz	loc_71012733
		mov	eax, [ebp+var_1F0]
		mov	[ebp+var_74], offset aXxSmall ;	"xx-small"
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_74]
		mov	[esp], eax
		call	[ebp+var_1A0]
		test	al, al
		jz	short loc_71013742
		fld	ds:dbl_71059DC8
		fstp	[ebp+var_200]
		jmp	loc_71012793
; ---------------------------------------------------------------------------

loc_71013702:				; CODE XREF: sub_71011C90+1A24j
		mov	eax, [ebp+var_1F0]
		mov	[ebp+var_64], offset aSmall ; "small"
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_64]
		mov	[esp], eax
		call	[ebp+var_1A0]
		test	al, al
		jz	loc_71013210
		fld	ds:flt_71059DB8
		fstp	[ebp+var_200]
		jmp	loc_71012793
; ---------------------------------------------------------------------------

loc_71013742:				; CODE XREF: sub_71011C90+1A5Fj
		mov	edx, [ebp+var_1F0]
		lea	eax, [ebp+var_70]
		mov	[ebp+var_70], offset aXSmall ; "x-small"
		mov	[esp], eax
		mov	[esp+4], edx
		call	[ebp+var_1A0]
		test	al, al
		jz	short loc_710137B5
		fld	ds:dbl_71059DA0
		fstp	[ebp+var_200]
		jmp	loc_71012793
; ---------------------------------------------------------------------------

loc_71013774:				; CODE XREF: sub_71011C90+1660j
		mov	ecx, [ebp+var_20C]
		lea	eax, [ebp+var_38]
		mov	[ebp+var_38], offset aBold ; "bold"
		mov	[esp], eax
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[esp+4], ecx
		call	[ebp+var_1A8]
		test	al, al
		jz	short loc_710137F1
		mov	eax, [ebp+var_1C8]
		mov	dword ptr [eax+18h], 2BCh
		or	byte ptr [eax+34h], 10h
		jmp	loc_71011E5B
; ---------------------------------------------------------------------------

loc_710137B5:				; CODE XREF: sub_71011C90+1AD1j
		mov	eax, [ebp+var_1F0]
		mov	[ebp+var_6C], offset aXLarge ; "x-large"
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	[ebp+var_1A0]
		test	al, al
		jz	short loc_71013832
		fld	ds:dbl_71059DA8
		fstp	[ebp+var_200]
		jmp	loc_71012793
; ---------------------------------------------------------------------------

loc_710137F1:				; CODE XREF: sub_71011C90+1B0Dj
		mov	edx, [ebp+var_20C]
		lea	eax, [ebp+var_34]
		mov	[ebp+var_34], offset aBolder ; "bolder"
		mov	[esp], eax
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[esp+4], edx
		call	[ebp+var_1A8]
		test	al, al
		jz	short loc_71013872
		mov	ecx, [ebp+var_1C8]
		mov	dword ptr [ecx+18h], 1
		or	byte ptr [ecx+34h], 10h
		jmp	loc_71011E5B
; ---------------------------------------------------------------------------

loc_71013832:				; CODE XREF: sub_71011C90+1B4Ej
		mov	eax, [ebp+var_1F0]
		mov	[ebp+var_68], offset aXxLarge ;	"xx-large"
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_68]
		mov	[esp], eax
		call	[ebp+var_1A0]
		test	al, al
		jz	loc_71013210
		fld	ds:dbl_71059DB0
		fstp	[ebp+var_200]
		jmp	loc_71012793
; ---------------------------------------------------------------------------

loc_71013872:				; CODE XREF: sub_71011C90+1B8Aj
		mov	eax, [ebp+var_20C]
		mov	[ebp+var_30], offset aLighter ;	"lighter"
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_30]
		mov	[esp], eax
		call	[ebp+var_1A8]
		test	al, al
		jz	loc_71011E5B
		mov	edx, [ebp+var_1C8]
		mov	dword ptr [edx+18h], 0FFFFFFFFh
		or	byte ptr [edx+34h], 10h
		jmp	loc_71011E5B
sub_71011C90	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710138B7	proc near		; DATA XREF: sub_71011C90+41o
		add	ebp, 8
		mov	eax, [ebp-198h]
		mov	edx, [ebp-194h]
		cmp	eax, 1
		mov	[ebp-224h], edx
		jz	loc_71013989
		cmp	eax, 2
		jz	loc_71013A8E
		cmp	eax, 3
		jz	loc_71013AB1
		cmp	eax, 4
		jz	loc_71013AA6
		cmp	eax, 5
		jz	loc_71013A83
		cmp	eax, 6
		lea	esi, [esi+0]
		jz	loc_71013A6A
		cmp	eax, 7
		jz	loc_71013A78
		cmp	eax, 8
		jz	loc_71013A5F
		cmp	eax, 9
		nop
		lea	esi, [esi+0]
		jz	loc_71013A57
		cmp	eax, 0Ah
		jz	loc_71013A4F
		cmp	eax, 0Bh
		jz	loc_71013A0D
		cmp	eax, 0Ch
		nop
		lea	esi, [esi+0]
		jz	loc_71013A22
		cmp	eax, 0Dh
		jz	loc_710139E7
		cmp	eax, 0Eh
		jz	short loc_710139C1
		cmp	eax, 0Fh
		jz	short loc_71013991
		lea	eax, [ebp-104h]

loc_7101395F:				; CODE XREF: sub_710138B7+D8j
					; sub_710138B7+19Bj ...
		mov	[esp+0], eax
		mov	dword ptr [ebp-198h], 0
		call	sub_710477B0
		mov	ecx, [ebp-224h]
		mov	dword ptr [ebp-198h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71013989:				; CODE XREF: sub_710138B7+18j
		lea	eax, [ebp-150h]
		jmp	short loc_7101395F
; ---------------------------------------------------------------------------

loc_71013991:				; CODE XREF: sub_710138B7+A0j
		lea	eax, [ebp-88h]

loc_71013997:				; CODE XREF: sub_710138B7+1C7j
		mov	[esp+0], eax
		mov	dword ptr [ebp-198h], 0
		call	sub_710477B0
		mov	edx, [ebp-224h]
		mov	dword ptr [ebp-198h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_710139C1:				; CODE XREF: sub_710138B7+9Bj
		mov	ecx, [ebp-218h]
		mov	[esp+0], ecx
		call	sub_710517D0
		mov	eax, [ebp-224h]
		mov	dword ptr [ebp-198h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_710139E7:				; CODE XREF: sub_710138B7+92j
		mov	edx, [ebp-220h]
		mov	[esp+0], edx
		call	sub_710517D0
		mov	ecx, [ebp-224h]
		mov	dword ptr [ebp-198h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71013A0D:				; CODE XREF: sub_710138B7+7Bj
		lea	eax, [ebp-80h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-198h], 0
		call	sub_710477B0

loc_71013A22:				; CODE XREF: sub_710138B7+89j
		lea	eax, [ebp-7Ch]

loc_71013A25:				; CODE XREF: sub_710138B7+1F5j
		mov	[esp+0], eax
		mov	dword ptr [ebp-198h], 0
		call	sub_710477B0
		mov	eax, [ebp-224h]
		mov	dword ptr [ebp-198h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71013A4F:				; CODE XREF: sub_710138B7+72j
		lea	eax, [ebp-58h]
		jmp	loc_7101395F
; ---------------------------------------------------------------------------

loc_71013A57:				; CODE XREF: sub_710138B7+69j
		lea	eax, [ebp-40h]
		jmp	loc_7101395F
; ---------------------------------------------------------------------------

loc_71013A5F:				; CODE XREF: sub_710138B7+5Bj
		lea	eax, [ebp-98h]
		jmp	loc_7101395F
; ---------------------------------------------------------------------------

loc_71013A6A:				; CODE XREF: sub_710138B7+49j
		mov	eax, [ebp-1E0h]
		mov	[esp+0], eax
		call	sub_710517D0

loc_71013A78:				; CODE XREF: sub_710138B7+52j
		lea	eax, [ebp-104h]
		jmp	loc_71013997
; ---------------------------------------------------------------------------

loc_71013A83:				; CODE XREF: sub_710138B7+3Cj
		lea	eax, [ebp-9Ch]
		jmp	loc_7101395F
; ---------------------------------------------------------------------------

loc_71013A8E:				; CODE XREF: sub_710138B7+21j
		lea	eax, [ebp-0A0h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-198h], 0
		call	sub_71047180

loc_71013AA6:				; CODE XREF: sub_710138B7+33j
					; sub_710138B7+208j
		lea	eax, [ebp-104h]
		jmp	loc_71013A25
; ---------------------------------------------------------------------------

loc_71013AB1:				; CODE XREF: sub_710138B7+2Aj
		mov	ecx, [ebp-1E8h]
		mov	[esp+0], ecx
		call	sub_710517D0
		jmp	short loc_71013AA6
sub_710138B7	endp

; ---------------------------------------------------------------------------
		jmp	short sub_71013AD0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71013AD0	proc near		; CODE XREF: .text:71013AC1j
					; sub_7101E100+27Ep ...

var_120		= dword	ptr -120h
var_11C		= dword	ptr -11Ch
var_118		= dword	ptr -118h
var_114		= dword	ptr -114h
var_110		= dword	ptr -110h
var_10C		= dword	ptr -10Ch
var_108		= dword	ptr -108h
var_104		= dword	ptr -104h
var_100		= dword	ptr -100h
var_FC		= byte ptr -0FCh
var_F8		= dword	ptr -0F8h
var_E4		= dword	ptr -0E4h
var_E0		= dword	ptr -0E0h
var_DC		= dword	ptr -0DCh
var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_C0		= byte ptr -0C0h
var_B4		= byte ptr -0B4h
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_22		= word ptr -22h
var_20		= word ptr -20h
var_1E		= word ptr -1Eh
var_1C		= word ptr -1Ch
var_1A		= word ptr -1Ah
var_18		= byte ptr -18h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 13Ch
		mov	[ebp+var_114], eax
		lea	eax, [ebp+var_18]
		mov	[ebp+var_DC], eax
		lea	eax, [ebp+var_FC]
		mov	[esp], eax
		mov	[ebp+var_104], edx
		mov	[ebp+var_E4], offset sub_710525B0
		mov	[ebp+var_E0], offset dword_71053250
		mov	[ebp+var_D8], offset sub_710146D7
		mov	[ebp+var_D4], esp
		call	_Unwind_SjLj_Register
		mov	eax, ds:_ZN9QListData11shared_nullE
		mov	[ebp+var_28], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ebp+var_2C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ebp+var_30], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ebp+var_34], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ebp+var_38], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_3C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+var_104]
		mov	eax, [edx]
		mov	esi, [eax+8]
		test	esi, esi
		jle	loc_710140F0
		mov	eax, ds:_ZeqRK13QLatin1StringRK10QStringRef
		mov	[ebp+var_100], 0
		mov	[ebp+var_11C], eax
		jmp	short loc_71013BC2
; ---------------------------------------------------------------------------
		align 10h

loc_71013B90:				; CODE XREF: sub_71013AD0+14Ej
		cmp	ax, 73h
		jz	loc_71013DB1
		cmp	ax, 63h
		jz	loc_71013D20

loc_71013BA4:				; CODE XREF: sub_71013AD0+122j
					; sub_71013AD0+22Fj ...
		mov	edx, [ebp+var_104]
		add	[ebp+var_100], 1
		mov	eax, [edx]
		mov	edx, [ebp+var_100]
		cmp	edx, [eax+8]
		jge	loc_710140F0

loc_71013BC2:				; CODE XREF: sub_71013AD0+BBj
		mov	edx, [ebp+var_104]
		mov	ecx, [edx]
		imul	edx, [ebp+var_100], 38h
		lea	eax, [ecx+edx]
		mov	ebx, [eax+30h]
		lea	edi, [ecx+edx+28h]
		mov	esi, [eax+2Ch]
		mov	[ebp+var_9C], edi
		test	ebx, ebx
		mov	[ebp+var_98], esi
		mov	[ebp+var_94], ebx
		jz	short loc_71013BA4
		mov	ebx, [eax+3Ch]
		lea	edx, [ecx+edx+34h]
		mov	edi, [eax+38h]
		mov	eax, [eax+28h]
		mov	[ebp+var_A8], edx
		mov	[ebp+var_A0], ebx
		mov	[ebp+var_A4], edi
		mov	eax, [eax+0Ch]
		movzx	eax, word ptr [eax+esi*2]
		cmp	ax, 72h
		jnz	loc_71013B90
		lea	edx, [ebp+var_9C]
		lea	eax, [ebp+var_48]
		mov	[ebp+var_48], offset aRequiredfeatur ; "requiredFeatures"
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_F8], 11h
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71013EB0
		lea	eax, [ebp+var_4C]
		lea	edx, [ebp+var_A8]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_1A]
		lea	eax, [ebp+var_50]
		mov	[esp+8], edx
		lea	edx, [ebp+var_4C]
		mov	[ebp+var_1A], 2Ch
		mov	dword ptr [esp+10h], 1
		mov	dword ptr [esp+0Ch], 1
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_F8], 0Fh
		call	ds:_ZNK7QString5splitERK5QCharNS_13SplitBehaviorEN2Qt15CaseSensitivityE
		mov	edx, [ebp+var_50]
		sub	esp, 4
		mov	eax, [ebp+var_28]
		mov	[ebp+var_108], edx
		cmp	eax, edx
		jz	short loc_71013CE6
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+var_28]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_710142B8

loc_71013CD0:				; CODE XREF: sub_71013AD0+804j
		mov	eax, [ebp+var_108]
		mov	[ebp+var_28], eax
		test	byte ptr [eax+10h], 1
		jz	loc_710140D1

loc_71013CE3:				; CODE XREF: sub_71013AD0+616j
		mov	eax, [ebp+var_50]

loc_71013CE6:				; CODE XREF: sub_71013AD0+1E7j
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_710140B0

loc_71013CF4:				; CODE XREF: sub_71013AD0+5FCj
		mov	eax, [ebp+var_4C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_71013BA4
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_F8], 11h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71013BA4
; ---------------------------------------------------------------------------

loc_71013D20:				; CODE XREF: sub_71013AD0+CEj
		lea	eax, [ebp+var_9C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_40]
		mov	[ebp+var_40], offset aClass ; "class"
		mov	[esp], eax
		mov	[ebp+var_F8], 11h
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71013BA4
		lea	eax, [ebp+var_44]
		lea	edx, [ebp+var_A8]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_44]
		mov	[esp+4], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_F8], 10h
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_44]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_71013BA4
		mov	eax, [ebp+var_44]
		mov	[ebp+var_F8], 11h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71013BA4
; ---------------------------------------------------------------------------

loc_71013DB1:				; CODE XREF: sub_71013AD0+C4j
		lea	edx, [ebp+var_9C]
		lea	eax, [ebp+var_78]
		mov	[ebp+var_78], offset aSystemlanguage ; "systemLanguage"
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_F8], 11h
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71013BA4
		lea	eax, [ebp+var_7C]
		lea	edx, [ebp+var_A8]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_22]
		lea	eax, [ebp+var_80]
		mov	[esp+8], edx
		lea	edx, [ebp+var_7C]
		mov	[ebp+var_22], 2Ch
		mov	dword ptr [esp+10h], 1
		mov	dword ptr [esp+0Ch], 1
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_F8], 7
		call	ds:_ZNK7QString5splitERK5QCharNS_13SplitBehaviorEN2Qt15CaseSensitivityE
		mov	edx, [ebp+var_80]
		sub	esp, 4
		mov	eax, [ebp+var_30]
		mov	[ebp+var_10C], edx
		cmp	eax, edx
		jz	short loc_71013E73
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+var_30]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_710144C7

loc_71013E5D:				; CODE XREF: sub_71013AD0+A13j
		mov	eax, [ebp+var_10C]
		mov	[ebp+var_30], eax
		test	byte ptr [eax+10h], 1
		jz	loc_71014401

loc_71013E70:				; CODE XREF: sub_71013AD0+946j
		mov	eax, [ebp+var_80]

loc_71013E73:				; CODE XREF: sub_71013AD0+374j
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_710143E0

loc_71013E81:				; CODE XREF: sub_71013AD0+92Cj
		mov	eax, [ebp+var_7C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_71013BA4
		mov	eax, [ebp+var_7C]
		mov	[ebp+var_F8], 11h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71013BA4
; ---------------------------------------------------------------------------
		align 10h

loc_71013EB0:				; CODE XREF: sub_71013AD0+17Dj
		lea	edx, [ebp+var_9C]
		lea	eax, [ebp+var_54]
		mov	[ebp+var_54], offset aRequiredextens ; "requiredExtensions"
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_F8], 11h
		call	[ebp+var_11C]
		test	al, al
		jz	loc_71013FB0
		lea	eax, [ebp+var_58]
		lea	edx, [ebp+var_A8]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_1C]
		lea	eax, [ebp+var_5C]
		mov	[esp+8], edx
		lea	edx, [ebp+var_58]
		mov	[ebp+var_1C], 2Ch
		mov	dword ptr [esp+10h], 1
		mov	dword ptr [esp+0Ch], 1
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_F8], 0Dh
		call	ds:_ZNK7QString5splitERK5QCharNS_13SplitBehaviorEN2Qt15CaseSensitivityE
		mov	edx, [ebp+var_5C]
		sub	esp, 4
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_110], edx
		cmp	eax, edx
		jz	short loc_71013F72
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+var_2C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_710144E8

loc_71013F5C:				; CODE XREF: sub_71013AD0+A34j
		mov	eax, [ebp+var_110]
		mov	[ebp+var_2C], eax
		test	byte ptr [eax+10h], 1
		jz	loc_71014441

loc_71013F6F:				; CODE XREF: sub_71013AD0+986j
		mov	eax, [ebp+var_5C]

loc_71013F72:				; CODE XREF: sub_71013AD0+473j
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71014420

loc_71013F80:				; CODE XREF: sub_71013AD0+96Cj
		mov	eax, [ebp+var_58]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_71013BA4
		mov	eax, [ebp+var_58]
		mov	[ebp+var_F8], 11h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71013BA4
; ---------------------------------------------------------------------------
		align 10h

loc_71013FB0:				; CODE XREF: sub_71013AD0+409j
		lea	edx, [ebp+var_9C]
		lea	eax, [ebp+var_60]
		mov	[ebp+var_60], offset aRequiredformat ; "requiredFormats"
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_F8], 11h
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_710142E0
		lea	eax, [ebp+var_64]
		lea	edx, [ebp+var_A8]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_1E]
		lea	eax, [ebp+var_68]
		mov	[esp+8], edx
		lea	edx, [ebp+var_64]
		mov	[ebp+var_1E], 2Ch
		mov	dword ptr [esp+10h], 1
		mov	dword ptr [esp+0Ch], 1
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_F8], 0Bh
		call	ds:_ZNK7QString5splitERK5QCharNS_13SplitBehaviorEN2Qt15CaseSensitivityE
		mov	edx, [ebp+var_68]
		sub	esp, 4
		mov	eax, [ebp+var_34]
		mov	[ebp+var_118], edx
		cmp	eax, edx
		jz	short loc_71014072
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+var_34]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71014496
		mov	eax, [ebp+var_118]
		mov	[ebp+var_34], eax
		test	byte ptr [eax+10h], 1
		jz	loc_7101447C

loc_7101406F:				; CODE XREF: sub_71013AD0+9C1j
					; sub_71013AD0+9EFj
		mov	eax, [ebp+var_68]

loc_71014072:				; CODE XREF: sub_71013AD0+573j
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101445B

loc_71014080:				; CODE XREF: sub_71013AD0+9A7j
		mov	eax, [ebp+var_64]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_71013BA4
		mov	eax, [ebp+var_64]
		mov	[ebp+var_F8], 11h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71013BA4
; ---------------------------------------------------------------------------
		align 10h

loc_710140B0:				; CODE XREF: sub_71013AD0+21Ej
		mov	eax, [ebp+var_50]
		mov	[ebp+var_F8], 0Fh
		mov	[esp+4], eax
		lea	eax, [ebp+var_50]
		mov	[esp], eax
		call	sub_710459F0
		jmp	loc_71013CF4
; ---------------------------------------------------------------------------

loc_710140D1:				; CODE XREF: sub_71013AD0+20Dj
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_F8], 0Eh
		call	sub_71045970
		jmp	loc_71013CE3
; ---------------------------------------------------------------------------
		align 10h

loc_710140F0:				; CODE XREF: sub_71013AD0+A0j
					; sub_71013AD0+ECj
		lea	eax, [ebp+var_28]
		mov	[esp+4], eax
		mov	eax, [ebp+var_114]
		mov	[ebp+var_F8], 12h
		mov	[esp], eax
		call	sub_71023220
		mov	edx, [ebp+var_114]
		lea	eax, [ebp+var_2C]
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_710234F0
		lea	eax, [ebp+var_30]
		mov	[esp+4], eax
		mov	eax, [ebp+var_114]
		mov	[esp], eax
		call	sub_71023400
		mov	edx, [ebp+var_114]
		lea	eax, [ebp+var_34]
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_71022D80
		lea	eax, [ebp+var_38]
		mov	[esp+4], eax
		mov	eax, [ebp+var_114]
		mov	[esp], eax
		call	sub_71023310
		lea	edx, [ebp+var_88]
		mov	[esp+8], edx
		mov	edx, [ebp+var_104]
		lea	eax, [ebp+var_B4]
		mov	[ebp+var_88], offset aId ; "id"
		mov	[esp], eax
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_84]
		lea	edx, [ebp+var_B4]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_F8], 4
		call	ds:_ZNK10QStringRef8toStringEv
		mov	eax, [ebp+var_84]
		sub	esp, 4
		mov	ebx, [eax+8]
		test	ebx, ebx
		jz	loc_71014509

loc_710141CA:				; CODE XREF: sub_71013AD0+ACAj
					; sub_71013AD0+AE9j
		lea	eax, [ebp+var_84]
		mov	[esp+4], eax
		mov	eax, [ebp+var_114]
		mov	[ebp+var_F8], 5
		mov	[esp], eax
		call	sub_71022770
		mov	eax, [ebp+var_84]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101465D

loc_71014200:				; CODE XREF: sub_71013AD0+BA6j
		mov	edx, [ebp+var_114]
		lea	eax, [ebp+var_3C]
		mov	[esp+4], eax
		mov	[ebp+var_F8], 12h
		mov	[esp], edx
		call	sub_71022750
		mov	eax, [ebp+var_3C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71014642

loc_71014230:				; CODE XREF: sub_71013AD0+B88j
		mov	eax, [ebp+var_38]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71014621

loc_71014241:				; CODE XREF: sub_71013AD0+B6Dj
		mov	eax, [ebp+var_34]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71014600

loc_71014252:				; CODE XREF: sub_71013AD0+B4Cj
		mov	eax, [ebp+var_30]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_710145DF

loc_71014263:				; CODE XREF: sub_71013AD0+B2Bj
		mov	eax, [ebp+var_2C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_710145BE

loc_71014274:				; CODE XREF: sub_71013AD0+B0Aj
		mov	eax, [ebp+var_28]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7101429D
		mov	eax, [ebp+var_28]
		mov	[ebp+var_F8], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		call	sub_710459F0

loc_7101429D:				; CODE XREF: sub_71013AD0+7AFj
		lea	eax, [ebp+var_FC]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		lea	esp, [ebp-0Ch]
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_710142B8:				; CODE XREF: sub_71013AD0+1FAj
		mov	eax, [ebp+var_28]
		mov	[ebp+var_F8], 0Eh
		mov	[esp+4], eax
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		call	sub_710459F0
		jmp	loc_71013CD0
; ---------------------------------------------------------------------------
		align 10h

loc_710142E0:				; CODE XREF: sub_71013AD0+509j
		lea	edx, [ebp+var_9C]
		lea	eax, [ebp+var_6C]
		mov	[ebp+var_6C], offset aRequiredfonts ; "requiredFonts"
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_F8], 11h
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71013BA4
		lea	edx, [ebp+var_70]
		lea	eax, [ebp+var_A8]
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_20]
		lea	edx, [ebp+var_74]
		mov	[esp+8], eax
		lea	eax, [ebp+var_70]
		mov	[ebp+var_20], 2Ch
		mov	dword ptr [esp+10h], 1
		mov	dword ptr [esp+0Ch], 1
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_F8], 9
		call	ds:_ZNK7QString5splitERK5QCharNS_13SplitBehaviorEN2Qt15CaseSensitivityE
		mov	edx, [ebp+var_74]
		sub	esp, 4
		mov	eax, [ebp+var_38]
		mov	[ebp+var_120], edx
		cmp	eax, edx
		jz	short loc_710143A2
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+var_38]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_710146B6

loc_7101438C:				; CODE XREF: sub_71013AD0+C02j
		mov	eax, [ebp+var_120]
		mov	[ebp+var_38], eax
		test	byte ptr [eax+10h], 1
		jz	loc_7101469C

loc_7101439F:				; CODE XREF: sub_71013AD0+BE1j
		mov	eax, [ebp+var_74]

loc_710143A2:				; CODE XREF: sub_71013AD0+8A3j
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101467B

loc_710143B0:				; CODE XREF: sub_71013AD0+BC7j
		mov	eax, [ebp+var_70]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_71013BA4
		mov	eax, [ebp+var_70]
		mov	[ebp+var_F8], 11h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71013BA4
; ---------------------------------------------------------------------------
		align 10h

loc_710143E0:				; CODE XREF: sub_71013AD0+3ABj
		mov	eax, [ebp+var_80]
		mov	[ebp+var_F8], 7
		mov	[esp+4], eax
		lea	eax, [ebp+var_80]
		mov	[esp], eax
		call	sub_710459F0
		jmp	loc_71013E81
; ---------------------------------------------------------------------------

loc_71014401:				; CODE XREF: sub_71013AD0+39Aj
		lea	eax, [ebp+var_30]
		mov	[esp], eax
		mov	[ebp+var_F8], 6
		call	sub_71045970
		jmp	loc_71013E70
; ---------------------------------------------------------------------------
		align 10h

loc_71014420:				; CODE XREF: sub_71013AD0+4AAj
		mov	eax, [ebp+var_5C]
		mov	[ebp+var_F8], 0Dh
		mov	[esp+4], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	sub_710459F0
		jmp	loc_71013F80
; ---------------------------------------------------------------------------

loc_71014441:				; CODE XREF: sub_71013AD0+499j
		lea	eax, [ebp+var_2C]
		mov	[esp], eax
		mov	[ebp+var_F8], 0Ch
		call	sub_71045970
		jmp	loc_71013F6F
; ---------------------------------------------------------------------------

loc_7101445B:				; CODE XREF: sub_71013AD0+5AAj
		mov	eax, [ebp+var_68]
		mov	[ebp+var_F8], 0Bh
		mov	[esp+4], eax
		lea	eax, [ebp+var_68]
		mov	[esp], eax
		call	sub_710459F0
		jmp	loc_71014080
; ---------------------------------------------------------------------------

loc_7101447C:				; CODE XREF: sub_71013AD0+599j
					; sub_71013AD0+9F5j
		lea	eax, [ebp+var_34]
		mov	[esp], eax
		mov	[ebp+var_F8], 0Ah
		call	sub_71045970
		jmp	loc_7101406F
; ---------------------------------------------------------------------------

loc_71014496:				; CODE XREF: sub_71013AD0+586j
		mov	eax, [ebp+var_34]
		mov	[ebp+var_F8], 0Ah
		mov	[esp+4], eax
		lea	eax, [ebp+var_34]
		mov	[esp], eax
		call	sub_710459F0
		mov	eax, [ebp+var_118]
		mov	[ebp+var_34], eax
		test	byte ptr [eax+10h], 1
		jnz	loc_7101406F
		jmp	short loc_7101447C
; ---------------------------------------------------------------------------

loc_710144C7:				; CODE XREF: sub_71013AD0+387j
		mov	eax, [ebp+var_30]
		mov	[ebp+var_F8], 6
		mov	[esp+4], eax
		lea	eax, [ebp+var_30]
		mov	[esp], eax
		call	sub_710459F0
		jmp	loc_71013E5D
; ---------------------------------------------------------------------------

loc_710144E8:				; CODE XREF: sub_71013AD0+486j
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_F8], 0Ch
		mov	[esp+4], eax
		lea	eax, [ebp+var_2C]
		mov	[esp], eax
		call	sub_710459F0
		jmp	loc_71013F5C
; ---------------------------------------------------------------------------

loc_71014509:				; CODE XREF: sub_71013AD0+6F4j
		lea	edx, [ebp+var_90]
		mov	[esp+8], edx
		mov	edx, [ebp+var_104]
		lea	eax, [ebp+var_C0]
		mov	[ebp+var_90], offset aXmlId ; "xml:id"
		mov	[esp], eax
		mov	[ebp+var_F8], 3
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_8C]
		lea	edx, [ebp+var_C0]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_F8], 2
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_8C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_84]
		mov	[esp], eax
		mov	[ebp+var_F8], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_8C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_710141CA
		mov	eax, [ebp+var_8C]
		mov	[ebp+var_F8], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_710141CA
; ---------------------------------------------------------------------------

loc_710145BE:				; CODE XREF: sub_71013AD0+79Ej
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_F8], 17h
		mov	[esp+4], eax
		lea	eax, [ebp+var_2C]
		mov	[esp], eax
		call	sub_710459F0
		jmp	loc_71014274
; ---------------------------------------------------------------------------

loc_710145DF:				; CODE XREF: sub_71013AD0+78Dj
		mov	eax, [ebp+var_30]
		mov	[ebp+var_F8], 16h
		mov	[esp+4], eax
		lea	eax, [ebp+var_30]
		mov	[esp], eax
		call	sub_710459F0
		jmp	loc_71014263
; ---------------------------------------------------------------------------

loc_71014600:				; CODE XREF: sub_71013AD0+77Cj
		mov	eax, [ebp+var_34]
		mov	[ebp+var_F8], 15h
		mov	[esp+4], eax
		lea	eax, [ebp+var_34]
		mov	[esp], eax
		call	sub_710459F0
		jmp	loc_71014252
; ---------------------------------------------------------------------------

loc_71014621:				; CODE XREF: sub_71013AD0+76Bj
		mov	eax, [ebp+var_38]
		mov	[ebp+var_F8], 14h
		mov	[esp+4], eax
		lea	eax, [ebp+var_38]
		mov	[esp], eax
		call	sub_710459F0
		jmp	loc_71014241
; ---------------------------------------------------------------------------

loc_71014642:				; CODE XREF: sub_71013AD0+75Aj
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_F8], 13h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71014230
; ---------------------------------------------------------------------------

loc_7101465D:				; CODE XREF: sub_71013AD0+72Aj
		mov	eax, [ebp+var_84]
		mov	[ebp+var_F8], 12h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71014200
; ---------------------------------------------------------------------------

loc_7101467B:				; CODE XREF: sub_71013AD0+8DAj
		mov	eax, [ebp+var_74]
		mov	[ebp+var_F8], 9
		mov	[esp+4], eax
		lea	eax, [ebp+var_74]
		mov	[esp], eax
		call	sub_710459F0
		jmp	loc_710143B0
; ---------------------------------------------------------------------------

loc_7101469C:				; CODE XREF: sub_71013AD0+8C9j
		lea	eax, [ebp+var_38]
		mov	[esp], eax
		mov	[ebp+var_F8], 8
		call	sub_71045970
		jmp	loc_7101439F
; ---------------------------------------------------------------------------

loc_710146B6:				; CODE XREF: sub_71013AD0+8B6j
		mov	eax, [ebp+var_38]
		mov	[ebp+var_F8], 8
		mov	[esp+4], eax
		lea	eax, [ebp+var_38]
		mov	[esp], eax
		call	sub_710459F0
		jmp	loc_7101438C
sub_71013AD0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710146D7	proc near		; DATA XREF: sub_71013AD0+3Eo
		add	ebp, 18h
		mov	eax, [ebp-0F8h]
		mov	edx, [ebp-0F4h]
		cmp	eax, 1
		mov	[ebp-124h], edx
		jz	loc_710147D0
		cmp	eax, 2
		jz	loc_710147D0
		cmp	eax, 3
		jz	loc_710147E8
		cmp	eax, 4
		jz	loc_710147D0
		cmp	eax, 5
		jz	loc_71014954
		cmp	eax, 6
		lea	esi, [esi+0]
		jz	loc_71014969
		cmp	eax, 7
		jz	loc_71014925
		cmp	eax, 8
		jz	loc_7101493A
		cmp	eax, 9
		nop
		lea	esi, [esi+0]
		jz	loc_710148F6
		cmp	eax, 0Ah
		jz	loc_7101490B
		cmp	eax, 0Bh
		jz	loc_710148C7
		cmp	eax, 0Ch
		nop
		lea	esi, [esi+0]
		jz	loc_710148DC
		cmp	eax, 0Dh
		jz	loc_71014898
		cmp	eax, 0Eh
		jz	loc_710148AD
		cmp	eax, 0Fh
		nop
		lea	esi, [esi+0]
		jz	loc_7101487E
		cmp	eax, 10h
		jz	short loc_710147E8
		cmp	eax, 11h
		xchg	ax, ax
		jz	short loc_710147E8
		cmp	eax, 12h
		jz	short loc_710147FD
		cmp	eax, 13h
		jz	short loc_71014812
		cmp	eax, 14h
		nop
		jz	loc_71014827
		cmp	eax, 15h
		jz	loc_7101483C
		cmp	eax, 16h
		jz	loc_71014851
		lea	eax, [ebp-8Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_710477B0

loc_710147D0:				; CODE XREF: sub_710146D7+18j
					; sub_710146D7+21j ...
		lea	eax, [ebp-84h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_710477B0

loc_710147E8:				; CODE XREF: sub_710146D7+2Aj
					; sub_710146D7+B2j ...
		lea	eax, [ebp-3Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_710477B0

loc_710147FD:				; CODE XREF: sub_710146D7+BEj
		lea	eax, [ebp-38h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_7103BBF0

loc_71014812:				; CODE XREF: sub_710146D7+C3j
		lea	eax, [ebp-34h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_7103BBF0

loc_71014827:				; CODE XREF: sub_710146D7+C9j
		lea	eax, [ebp-30h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_7103BBF0

loc_7101483C:				; CODE XREF: sub_710146D7+D2j
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_7103BBF0

loc_71014851:				; CODE XREF: sub_710146D7+DBj
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_7103BBF0
		mov	eax, [ebp-124h]
		mov	dword ptr [ebp-0F8h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7101487E:				; CODE XREF: sub_710146D7+A9j
		lea	eax, [ebp-44h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_710477B0
		jmp	loc_710147E8
; ---------------------------------------------------------------------------

loc_71014898:				; CODE XREF: sub_710146D7+92j
		lea	eax, [ebp-50h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_7103BBF0

loc_710148AD:				; CODE XREF: sub_710146D7+9Bj
		lea	eax, [ebp-4Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_710477B0
		jmp	loc_710147E8
; ---------------------------------------------------------------------------

loc_710148C7:				; CODE XREF: sub_710146D7+7Bj
		lea	eax, [ebp-5Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_7103BBF0

loc_710148DC:				; CODE XREF: sub_710146D7+89j
		lea	eax, [ebp-58h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_710477B0
		jmp	loc_710147E8
; ---------------------------------------------------------------------------

loc_710148F6:				; CODE XREF: sub_710146D7+69j
		lea	eax, [ebp-68h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_7103BBF0

loc_7101490B:				; CODE XREF: sub_710146D7+72j
		lea	eax, [ebp-64h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_710477B0
		jmp	loc_710147E8
; ---------------------------------------------------------------------------

loc_71014925:				; CODE XREF: sub_710146D7+52j
		lea	eax, [ebp-74h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_7103BBF0

loc_7101493A:				; CODE XREF: sub_710146D7+5Bj
		lea	eax, [ebp-70h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_710477B0
		jmp	loc_710147E8
; ---------------------------------------------------------------------------

loc_71014954:				; CODE XREF: sub_710146D7+3Cj
		lea	eax, [ebp-80h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_7103BBF0

loc_71014969:				; CODE XREF: sub_710146D7+49j
		lea	eax, [ebp-7Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	sub_710477B0
		jmp	loc_710147E8
sub_710146D7	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71014990	proc near		; CODE XREF: _ZN16QSvgTinyDocument4loadEP16QXmlStreamReader+94p
					; sub_7102B31A+1Fp ...

var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_71053282
		mov	[ebp+var_18], offset sub_71014C2E
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+28h]
		test	eax, eax
		jz	short loc_710149DA
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 2
		call	eax

loc_710149DA:				; CODE XREF: sub_71014990+37j
		mov	eax, [ebp+arg_0]
		cmp	byte ptr [eax+4Ch], 0
		mov	dword ptr [eax+28h], 0
		jz	short loc_71014A0F
		mov	eax, [eax+30h]
		test	eax, eax
		jz	short loc_71014A0F
		mov	[esp], eax
		mov	[ebp+var_38], 2
		call	ds:_ZN16QXmlStreamReaderD1Ev
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+30h]
		mov	[esp], eax
		call	sub_710517D0

loc_71014A0F:				; CODE XREF: sub_71014990+58j
					; sub_71014990+5Fj
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 3
		add	eax, 48h
		mov	[esp], eax
		call	ds:_ZN4QPenD1Ev
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+44h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71014BF5

loc_71014A39:				; CODE XREF: sub_71014990+27Bj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+34h]
		test	eax, eax
		jz	loc_71014AC5
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71014AC5
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+34h]
		mov	[ebp+var_48], eax
		mov	edx, [ebp+var_48]
		add	eax, 10h
		mov	[ebp+var_44], eax
		mov	eax, [edx+8]
		shl	eax, 4
		lea	eax, [eax+edx+10h]
		mov	[ebp+var_40], eax

loc_71014A70:				; CODE XREF: sub_71014990+FAj
		mov	eax, [ebp+var_40]
		cmp	[ebp+var_44], eax
		jz	short loc_71014AAA

loc_71014A78:				; CODE XREF: sub_71014990+118j
		sub	[ebp+var_40], 10h
		mov	edx, [ebp+var_40]
		mov	eax, [edx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71014A70
		mov	edx, [ebp+var_40]
		mov	eax, [edx+4]
		mov	[ebp+var_38], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	eax, [ebp+var_40]
		cmp	[ebp+var_44], eax
		jnz	short loc_71014A78

loc_71014AAA:				; CODE XREF: sub_71014990+E6j
		mov	edx, [ebp+var_48]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_38], 4
		mov	[esp], edx
		call	ds:_ZN11QVectorData4freeEPS_i

loc_71014AC5:				; CODE XREF: sub_71014990+B1j
					; sub_71014990+BFj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+20h]
		test	eax, eax
		jz	short loc_71014AF7
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71014AF7
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], 4
		mov	eax, [edx+20h]
		mov	[ebp+var_38], 5
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_71014AF7:				; CODE XREF: sub_71014990+13Dj
					; sub_71014990+147j
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_0]
		mov	eax, [edx+1Ch]
		add	ecx, 1Ch
		test	eax, eax
		jz	short loc_71014B15
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71014C10

loc_71014B15:				; CODE XREF: sub_71014990+175j
					; sub_71014990+299j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+14h]
		test	eax, eax
		jz	short loc_71014B3D
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_71014B3D
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 7
		call	eax

loc_71014B3D:				; CODE XREF: sub_71014990+18Dj
					; sub_71014990+19Aj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+10h]
		test	eax, eax
		jz	short loc_71014B6F
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71014B6F
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], 4
		mov	eax, [edx+10h]
		mov	[ebp+var_38], 8
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_71014B6F:				; CODE XREF: sub_71014990+1B5j
					; sub_71014990+1BFj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		test	eax, eax
		jz	short loc_71014BA1
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71014BA1
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], 4
		mov	eax, [edx+0Ch]
		mov	[ebp+var_38], 9
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_71014BA1:				; CODE XREF: sub_71014990+1E7j
					; sub_71014990+1F1j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0Ah
		add	eax, 8
		mov	[esp], eax
		call	sub_71047020
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		test	eax, eax
		jz	short loc_71014BE8
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71014BE8
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], 4
		mov	eax, [edx+4]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_71014BE8:				; CODE XREF: sub_71014990+22Ej
					; sub_71014990+238j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71014BF5:				; CODE XREF: sub_71014990+A3j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+44h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71014A39
; ---------------------------------------------------------------------------

loc_71014C10:				; CODE XREF: sub_71014990+17Fj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+1Ch]
		mov	[esp], ecx
		mov	[ebp+var_38], 6
		mov	[esp+4], eax
		call	sub_71048BF0
		jmp	loc_71014B15
sub_71014990	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71014C2E	proc near		; DATA XREF: sub_71014990+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-4Ch], edx
		jz	loc_71014D33
		cmp	eax, 2
		jz	loc_71014D49
		cmp	eax, 3
		jz	short loc_71014C8E
		cmp	eax, 4
		jz	short loc_71014CA3
		cmp	eax, 5
		jz	short loc_71014CB8
		cmp	eax, 6
		xchg	ax, ax
		jz	short loc_71014CCD
		cmp	eax, 7
		jz	short loc_71014CE2
		cmp	eax, 8
		jz	loc_71014CF7
		cmp	eax, 9
		jz	loc_71014D0C
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 34h
		mov	[esp+0], eax
		call	sub_7104D2D0

loc_71014C8E:				; CODE XREF: sub_71014C2E+21j
					; sub_71014C2E+130j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 20h
		mov	[esp+0], eax
		call	sub_71047780

loc_71014CA3:				; CODE XREF: sub_71014C2E+26j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 1Ch
		mov	[esp+0], eax
		call	sub_710474E0

loc_71014CB8:				; CODE XREF: sub_71014C2E+2Bj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 14h
		mov	[esp+0], eax
		call	sub_7103C4F0

loc_71014CCD:				; CODE XREF: sub_71014C2E+32j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 10h
		mov	[esp+0], eax
		call	sub_710476C0

loc_71014CE2:				; CODE XREF: sub_71014C2E+37j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_710475A0

loc_71014CF7:				; CODE XREF: sub_71014C2E+3Cj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp+0], eax
		call	sub_71047020

loc_71014D0C:				; CODE XREF: sub_71014C2E+45j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 4
		mov	[esp+0], eax
		call	sub_71047750
		mov	eax, [ebp-4Ch]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71014D33:				; CODE XREF: sub_71014C2E+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 48h
		mov	[esp+0], eax
		call	ds:_ZN4QPenD1Ev

loc_71014D49:				; CODE XREF: sub_71014C2E+18j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 34h
		mov	[esp+0], eax
		call	sub_71044340
		jmp	loc_71014C8E
sub_71014C2E	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_710525B0
		mov	dword ptr [ebp-20h], offset word_7105329A
		mov	dword ptr [ebp-18h], offset loc_7101500E
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+8]
		mov	eax, [edx+28h]
		test	eax, eax
		jz	short loc_71014DBA
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 2
		call	eax

loc_71014DBA:				; CODE XREF: .text:71014DA7j
		mov	eax, [ebp+8]
		cmp	byte ptr [eax+4Ch], 0
		mov	dword ptr [eax+28h], 0
		jz	short loc_71014DEF
		mov	eax, [eax+30h]
		test	eax, eax
		jz	short loc_71014DEF
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 2
		call	ds:_ZN16QXmlStreamReaderD1Ev
		mov	edx, [ebp+8]
		mov	eax, [edx+30h]
		mov	[esp], eax
		call	sub_710517D0

loc_71014DEF:				; CODE XREF: .text:71014DC8j
					; .text:71014DCFj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 3
		add	eax, 48h
		mov	[esp], eax
		call	ds:_ZN4QPenD1Ev
		mov	edx, [ebp+8]
		mov	eax, [edx+44h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71014FD5

loc_71014E19:				; CODE XREF: .text:71014FEBj
		mov	edx, [ebp+8]
		mov	eax, [edx+34h]
		test	eax, eax
		jz	loc_71014EA5
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71014EA5
		mov	eax, [ebp+8]
		mov	eax, [eax+34h]
		mov	[ebp-48h], eax
		mov	edx, [ebp-48h]
		add	eax, 10h
		mov	[ebp-44h], eax
		mov	eax, [edx+8]
		shl	eax, 4
		lea	eax, [eax+edx+10h]
		mov	[ebp-40h], eax

loc_71014E50:				; CODE XREF: .text:71014E6Aj
		mov	eax, [ebp-40h]
		cmp	[ebp-44h], eax
		jz	short loc_71014E8A

loc_71014E58:				; CODE XREF: .text:71014E88j
		sub	dword ptr [ebp-40h], 10h
		mov	edx, [ebp-40h]
		mov	eax, [edx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71014E50
		mov	edx, [ebp-40h]
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	eax, [ebp-40h]
		cmp	[ebp-44h], eax
		jnz	short loc_71014E58

loc_71014E8A:				; CODE XREF: .text:71014E56j
		mov	edx, [ebp-48h]
		mov	dword ptr [esp+4], 4
		mov	dword ptr [ebp-38h], 4
		mov	[esp], edx
		call	ds:_ZN11QVectorData4freeEPS_i

loc_71014EA5:				; CODE XREF: .text:71014E21j
					; .text:71014E2Fj
		mov	edx, [ebp+8]
		mov	eax, [edx+20h]
		test	eax, eax
		jz	short loc_71014ED7
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71014ED7
		mov	edx, [ebp+8]
		mov	dword ptr [esp+4], 4
		mov	eax, [edx+20h]
		mov	dword ptr [ebp-38h], 5
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_71014ED7:				; CODE XREF: .text:71014EADj
					; .text:71014EB7j
		mov	edx, [ebp+8]
		mov	ecx, [ebp+8]
		mov	eax, [edx+1Ch]
		add	ecx, 1Ch
		test	eax, eax
		jz	short loc_71014EF5
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71014FF0

loc_71014EF5:				; CODE XREF: .text:71014EE5j
					; .text:71015009j
		mov	edx, [ebp+8]
		mov	eax, [edx+14h]
		test	eax, eax
		jz	short loc_71014F1D
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_71014F1D
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 7
		call	eax

loc_71014F1D:				; CODE XREF: .text:71014EFDj
					; .text:71014F0Aj
		mov	edx, [ebp+8]
		mov	eax, [edx+10h]
		test	eax, eax
		jz	short loc_71014F4F
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71014F4F
		mov	edx, [ebp+8]
		mov	dword ptr [esp+4], 4
		mov	eax, [edx+10h]
		mov	dword ptr [ebp-38h], 8
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_71014F4F:				; CODE XREF: .text:71014F25j
					; .text:71014F2Fj
		mov	edx, [ebp+8]
		mov	eax, [edx+0Ch]
		test	eax, eax
		jz	short loc_71014F81
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71014F81
		mov	edx, [ebp+8]
		mov	dword ptr [esp+4], 4
		mov	eax, [edx+0Ch]
		mov	dword ptr [ebp-38h], 9
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_71014F81:				; CODE XREF: .text:71014F57j
					; .text:71014F61j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0Ah
		add	eax, 8
		mov	[esp], eax
		call	sub_71047020
		mov	edx, [ebp+8]
		mov	eax, [edx+4]
		test	eax, eax
		jz	short loc_71014FC8
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71014FC8
		mov	edx, [ebp+8]
		mov	dword ptr [esp+4], 4
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_71014FC8:				; CODE XREF: .text:71014F9Ej
					; .text:71014FA8j
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71014FD5:				; CODE XREF: .text:71014E13j
		mov	edx, [ebp+8]
		mov	eax, [edx+44h]
		mov	dword ptr [ebp-38h], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71014E19
; ---------------------------------------------------------------------------

loc_71014FF0:				; CODE XREF: .text:71014EEFj
		mov	edx, [ebp+8]
		mov	eax, [edx+1Ch]
		mov	[esp], ecx
		mov	dword ptr [ebp-38h], 6
		mov	[esp+4], eax
		call	sub_71048BF0
		jmp	loc_71014EF5
; ---------------------------------------------------------------------------

loc_7101500E:				; DATA XREF: .text:71014D90o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-4Ch], edx
		jz	loc_71015113
		cmp	eax, 2
		jz	loc_71015129
		cmp	eax, 3
		jz	short loc_7101506E
		cmp	eax, 4
		jz	short loc_71015083
		cmp	eax, 5
		jz	short loc_71015098
		cmp	eax, 6
		xchg	ax, ax
		jz	short loc_710150AD
		cmp	eax, 7
		jz	short loc_710150C2
		cmp	eax, 8
		jz	loc_710150D7
		cmp	eax, 9
		jz	loc_710150EC
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 34h
		mov	[esp], eax
		call	sub_7104D2D0

loc_7101506E:				; CODE XREF: .text:7101502Fj
					; .text:7101513Ej
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 20h
		mov	[esp], eax
		call	sub_71047780

loc_71015083:				; CODE XREF: .text:71015034j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 1Ch
		mov	[esp], eax
		call	sub_710474E0

loc_71015098:				; CODE XREF: .text:71015039j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 14h
		mov	[esp], eax
		call	sub_7103C4F0

loc_710150AD:				; CODE XREF: .text:71015040j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 10h
		mov	[esp], eax
		call	sub_710476C0

loc_710150C2:				; CODE XREF: .text:71015045j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp], eax
		call	sub_710475A0

loc_710150D7:				; CODE XREF: .text:7101504Aj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp], eax
		call	sub_71047020

loc_710150EC:				; CODE XREF: .text:71015053j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 4
		mov	[esp], eax
		call	sub_71047750
		mov	eax, [ebp-4Ch]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71015113:				; CODE XREF: .text:7101501Dj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 48h
		mov	[esp], eax
		call	ds:_ZN4QPenD1Ev

loc_71015129:				; CODE XREF: .text:71015026j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 34h
		mov	[esp], eax
		call	sub_71044340
		jmp	loc_7101506E
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71015150	proc near		; CODE XREF: sub_710159D0+B72p
					; .text:71018382p

var_DC		= dword	ptr -0DCh
var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_D0		= dword	ptr -0D0h
var_CC		= dword	ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= byte ptr -9Ch
var_98		= dword	ptr -98h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 0ECh
		mov	[ebp+var_7C], eax
		lea	eax, [ebp+var_9C]
		mov	[esp], eax
		mov	[ebp+var_84], offset sub_710525B0
		mov	[ebp+var_80], offset word_710532BA
		mov	[ebp+var_78], offset sub_7101587B
		mov	[ebp+var_74], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_98], 0FFFFFFFFh
		add	edx, 34h
		mov	[ebp+var_BC], edx
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZN4QCss6Parser4initERK7QStringb
		mov	ecx, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_A0], ecx
		mov	[ebp+var_1C], ecx
		mov	[ebp+var_A4], ecx
		lock inc dword ptr [ecx]
		setnz	al
		mov	edx, [ebp+arg_8]
		mov	eax, [edx]
		cmp	dword ptr [eax+4], 9
		jle	loc_71015839

loc_710151E3:				; CODE XREF: sub_71015150+70Fj
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_71015864

loc_710151EE:				; CODE XREF: sub_71015150+718j
		mov	ecx, ds:_ZN4QCss6Parser4testENS_9TokenTypeE
		mov	[ebp+var_C4], ecx
		lea	esi, [esi+0]

loc_71015200:				; CODE XREF: sub_71015150+401j
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx+34h]
		mov	edx, [ebx+38h]
		cmp	edx, [eax+8]
		jge	loc_7101557F

loc_71015212:				; CODE XREF: sub_71015150+E5j
					; sub_71015150+429j
		mov	ebx, [ebp+var_BC]
		mov	dword ptr [esp+4], 1
		mov	[ebp+var_98], 0Ch
		mov	[esp], ebx
		call	ds:_ZN4QCss6Parser4testENS_9TokenTypeE
		test	al, al
		jnz	short loc_71015212
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+34h]
		mov	edx, [eax+38h]
		cmp	edx, [ecx+8]
		jge	loc_7101557F
		add	edx, 1
		cmp	byte ptr [eax+40h], 0
		mov	[eax+38h], edx
		jnz	loc_7101577B
		shl	edx, 4
		lea	eax, [ecx+edx]
		mov	edx, [eax+0Ch]
		mov	ecx, [eax+8]
		add	eax, 4
		mov	[ebp+var_D0], eax
		mov	[ebp+var_D8], edx
		mov	[ebp+var_D4], ecx
		lea	esi, [esi+0]

loc_71015280:				; CODE XREF: sub_71015150+153j
					; sub_71015150+696j
		mov	ebx, [ebp+var_BC]
		mov	dword ptr [esp+4], 1
		mov	[ebp+var_98], 0Bh
		mov	[esp], ebx
		call	[ebp+var_C4]
		test	al, al
		jnz	short loc_71015280
		mov	dword ptr [esp+4], 14h
		mov	[esp], ebx
		call	ds:_ZN4QCss6Parser4testENS_9TokenTypeE
		test	al, al
		jz	loc_7101557F
		mov	eax, ds:_ZN4QCss6Parser4testENS_9TokenTypeE
		mov	[ebp+var_B0], eax
		lea	esi, [esi+0]

loc_710152D0:				; CODE XREF: sub_71015150+1A3j
		mov	edx, [ebp+var_BC]
		mov	dword ptr [esp+4], 1
		mov	[ebp+var_98], 0Bh
		mov	[esp], edx
		call	[ebp+var_B0]
		test	al, al
		jnz	short loc_710152D0
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+34h]
		mov	edx, [ecx+38h]
		cmp	edx, [eax+8]
		jge	loc_7101557F
		mov	ebx, [ebp+var_A0]
		mov	edx, [ebp+var_A4]
		mov	[ebp+var_64], ebx
		lock inc dword ptr [edx]
		setnz	al
		mov	[ebp+var_58], ebx
		mov	[ebp+var_60], 0
		mov	[ebp+var_5C], 0
		lock inc dword ptr [edx]
		setnz	al
		mov	ecx, [ebp+var_D0]
		mov	[ebp+var_54], 0
		mov	[ebp+var_50], 0
		mov	eax, [ecx]
		mov	[ebp+var_34], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_D8]
		mov	ebx, [ebp+var_D4]
		mov	[ebp+var_98], 8
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_34]
		mov	[esp+4], eax
		lea	eax, [ebp+var_64]
		mov	[ebp+var_30], ebx
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_30]
		mov	[ebp+var_60], eax
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_5C], eax
		mov	eax, [ebp+var_34]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71015760

loc_7101539E:				; CODE XREF: sub_71015150+626j
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_C0], 0
		mov	edx, [edx+38h]
		mov	[ebp+var_B8], edx
		mov	eax, edx

loc_710153B6:				; CODE XREF: sub_71015150+497j
		mov	ecx, [ebp+arg_0]
		add	eax, 1
		add	[ebp+var_C0], 1
		mov	edx, [ecx+34h]
		mov	[ecx+38h], eax
		cmp	eax, [edx+8]
		jl	loc_710155B8

loc_710153D2:				; CODE XREF: sub_71015150+48Bj
		mov	edx, [ebp+arg_0]
		cmp	byte ptr [edx+40h], 1
		jz	loc_710155F0
		mov	ecx, [ebp+arg_0]
		mov	ebx, [ebp+var_C0]
		add	ebx, [ebp+var_B8]
		mov	ecx, [ecx+34h]
		mov	[ebp+var_C8], ebx
		mov	[ebp+var_CC], ecx
		mov	ecx, [ebp+var_B8]
		add	ecx, 1
		mov	edx, ecx
		shl	edx, 4
		add	edx, [ebp+var_CC]
		cmp	ebx, ecx
		mov	edi, [edx+0Ch]
		jle	loc_7101586D
		mov	eax, [ebp+var_B8]
		mov	ebx, [ebp+var_CC]
		mov	edx, [edx+8]
		shl	eax, 4
		lea	eax, [eax+ebx+20h]
		mov	[ebp+var_DC], edx
		add	edx, edi
		mov	ebx, [eax+0Ch]
		cmp	edx, [eax+8]
		jnz	loc_710155F0
		mov	eax, [ebp+var_B8]
		add	edi, ebx
		mov	edx, [ebp+var_CC]
		shl	eax, 4
		lea	eax, [edx+eax+3Ch]
		jmp	short loc_71015478
; ---------------------------------------------------------------------------
		align 10h

loc_71015460:				; CODE XREF: sub_71015150+331j
		mov	edx, [eax-10h]
		mov	ebx, [eax-4]
		add	edx, [eax-14h]
		mov	esi, [eax]
		add	eax, 10h
		cmp	edx, ebx
		jnz	loc_710155F0
		add	edi, esi

loc_71015478:				; CODE XREF: sub_71015150+30Bj
		add	ecx, 1
		cmp	[ebp+var_C8], ecx
		jg	short loc_71015460

loc_71015483:				; CODE XREF: sub_71015150+726j
		mov	eax, [ebp+var_B8]
		mov	ecx, [ebp+var_CC]
		shl	eax, 4
		mov	eax, [ecx+eax+14h]
		mov	[ebp+var_40], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ebx, [ebp+var_DC]
		lea	eax, [ebp+var_40]
		mov	[esp+4], eax
		lea	eax, [ebp+var_58]
		mov	[ebp+var_38], edi
		mov	[esp], eax
		mov	[ebp+var_3C], ebx
		mov	[ebp+var_98], 6
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_54], eax
		mov	eax, [ebp+var_38]
		mov	[ebp+var_50], eax
		mov	eax, [ebp+var_40]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101581E

loc_710154E5:				; CODE XREF: sub_71015150+5CEj
					; sub_71015150+5EAj ...
		mov	ecx, [ebp+arg_8]
		lea	eax, [ebp+var_64]
		mov	[esp+4], eax
		mov	[ebp+var_98], 9
		mov	[esp], ecx
		call	sub_71047A90
		mov	ebx, ds:_ZN4QCss6Parser4testENS_9TokenTypeE
		mov	[ebp+var_A8], ebx
		lea	esi, [esi+0]

loc_71015510:				; CODE XREF: sub_71015150+3E3j
		mov	eax, [ebp+var_BC]
		mov	dword ptr [esp+4], 1
		mov	[ebp+var_98], 9
		mov	[esp], eax
		call	[ebp+var_A8]
		test	al, al
		jnz	short loc_71015510
		mov	eax, [ebp+var_58]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71015740

loc_71015546:				; CODE XREF: sub_71015150+606j
		mov	eax, [ebp+var_64]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_71015200
		mov	eax, [ebp+var_64]
		mov	[ebp+var_98], 0Bh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx+34h]
		mov	edx, [ebx+38h]
		cmp	edx, [eax+8]
		jl	loc_71015212

loc_7101557F:				; CODE XREF: sub_71015150+BCj
					; sub_71015150+F3j ...
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710155A2
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_710155A2:				; CODE XREF: sub_71015150+43Aj
		lea	eax, [ebp+var_9C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_710155B8:				; CODE XREF: sub_71015150+27Cj
		mov	ebx, [ebp+var_BC]
		mov	dword ptr [esp+4], 15h
		mov	[ebp+var_98], 9
		mov	[esp], ebx
		call	ds:_ZN4QCss6Parser4testENS_9TokenTypeE
		test	al, al
		jnz	loc_710153D2
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+38h]
		jmp	loc_710153B6
; ---------------------------------------------------------------------------
		align 10h

loc_710155F0:				; CODE XREF: sub_71015150+289j
					; sub_71015150+2F0j ...
		mov	ecx, [ebp+var_A0]
		mov	ebx, [ebp+var_A4]
		mov	[ebp+var_24], ecx
		lock inc dword ptr [ebx]
		setnz	al
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+38h]
		sub	eax, 1
		cmp	eax, [ebp+var_B8]
		jle	loc_710156C0
		mov	ecx, [ebp+var_B8]
		mov	ebx, ds:_ZNK4QCss6Symbol5lexemEv
		mov	[ebp+var_B4], ecx
		mov	[ebp+var_AC], ebx
		jmp	short loc_7101564C
; ---------------------------------------------------------------------------

loc_71015634:				; CODE XREF: sub_71015150+553j
					; sub_71015150+56Bj
		mov	edx, [ebp+arg_0]
		add	[ebp+var_B4], 1
		mov	eax, [edx+38h]
		sub	eax, 1
		cmp	eax, [ebp+var_B4]
		jle	short loc_710156C0

loc_7101564C:				; CODE XREF: sub_71015150+4E2j
		mov	eax, [ebp+var_B4]
		lea	ecx, [ebp+var_28]
		mov	edx, [ebp+arg_0]
		add	eax, 1
		shl	eax, 4
		add	eax, [edx+34h]
		mov	[esp], ecx
		mov	[ebp+var_98], 5
		mov	[esp+4], eax
		call	[ebp+var_AC]
		sub	esp, 4
		lea	ebx, [ebp+var_28]
		lea	eax, [ebp+var_24]
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	[ebp+var_98], 4
		call	ds:_ZN7QString6appendERKS_
		mov	eax, [ebp+var_28]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71015634
		mov	eax, [ebp+var_28]
		mov	[ebp+var_98], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71015634
; ---------------------------------------------------------------------------

loc_710156C0:				; CODE XREF: sub_71015150+4C4j
					; sub_71015150+4FAj
		mov	eax, [ebp+var_24]
		mov	edx, [eax+8]
		mov	[ebp+var_4C], eax
		lock inc dword ptr [eax]
		setnz	cl
		lea	eax, [ebp+var_4C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_58]
		mov	[ebp+var_48], 0
		mov	[ebp+var_44], edx
		mov	[esp], eax
		mov	[ebp+var_98], 2
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_48]
		mov	[ebp+var_54], eax
		mov	eax, [ebp+var_44]
		mov	[ebp+var_50], eax
		mov	eax, [ebp+var_4C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_710157EB

loc_71015713:				; CODE XREF: sub_71015150+6B1j
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_710154E5
		mov	eax, [ebp+var_24]
		mov	[ebp+var_98], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_710154E5
; ---------------------------------------------------------------------------
		align 10h

loc_71015740:				; CODE XREF: sub_71015150+3F0j
		mov	eax, [ebp+var_58]
		mov	[ebp+var_98], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71015546
; ---------------------------------------------------------------------------
		align 10h

loc_71015760:				; CODE XREF: sub_71015150+248j
		mov	eax, [ebp+var_34]
		mov	[ebp+var_98], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101539E
; ---------------------------------------------------------------------------

loc_7101577B:				; CODE XREF: sub_71015150+103j
		shl	edx, 4
		add	edx, ecx
		mov	[esp+4], edx
		lea	edx, [ebp+var_20]
		mov	[esp], edx
		mov	[ebp+var_98], 0Bh
		call	ds:_ZNK4QCss6Symbol5lexemEv
		sub	esp, 4
		lea	ecx, [ebp+var_20]
		lea	eax, [ebp+var_1C]
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	[ebp+var_98], 0Ah
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71015806

loc_710157C7:				; CODE XREF: sub_71015150+6CCj
		mov	eax, [ebp+var_1C]
		lea	ebx, [ebp+var_1C]
		mov	[ebp+var_D0], ebx
		mov	[ebp+var_D4], 0
		mov	eax, [eax+8]
		mov	[ebp+var_D8], eax
		jmp	loc_71015280
; ---------------------------------------------------------------------------

loc_710157EB:				; CODE XREF: sub_71015150+5BDj
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_98], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71015713
; ---------------------------------------------------------------------------

loc_71015806:				; CODE XREF: sub_71015150+675j
		mov	eax, [ebp+var_20]
		mov	[ebp+var_98], 0Bh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_710157C7
; ---------------------------------------------------------------------------

loc_7101581E:				; CODE XREF: sub_71015150+38Fj
		mov	eax, [ebp+var_40]
		mov	[ebp+var_98], 7
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_710154E5
; ---------------------------------------------------------------------------

loc_71015839:				; CODE XREF: sub_71015150+8Dj
		mov	dword ptr [esp+8], 0Ah
		mov	eax, [eax+8]
		mov	[esp], edx
		mov	[ebp+var_98], 0Ch
		mov	[esp+4], eax
		call	sub_71047C90
		mov	ecx, [ebp+arg_8]
		mov	eax, [ecx]
		jmp	loc_710151E3
; ---------------------------------------------------------------------------

loc_71015864:				; CODE XREF: sub_71015150+98j
		or	byte ptr [eax+0Ch], 2
		jmp	loc_710151EE
; ---------------------------------------------------------------------------

loc_7101586D:				; CODE XREF: sub_71015150+2C6j
		mov	edx, [edx+8]
		mov	[ebp+var_DC], edx
		jmp	loc_71015483
sub_71015150	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7101587B	proc near		; DATA XREF: sub_71015150+2Co
		add	ebp, 18h
		mov	eax, [ebp-98h]
		mov	edx, [ebp-94h]
		cmp	eax, 1
		mov	[ebp-0E0h], edx
		jz	loc_710159AF
		cmp	eax, 2
		jz	loc_71015998
		cmp	eax, 3
		jz	loc_71015983
		cmp	eax, 4
		xchg	ax, ax
		jz	loc_71015998
		cmp	eax, 5
		jz	loc_7101596C
		cmp	eax, 6
		jz	loc_71015955
		cmp	eax, 7
		nop
		lea	esi, [esi+0]
		jz	short loc_71015940
		cmp	eax, 8
		jz	short loc_71015955
		cmp	eax, 9
		jz	short loc_71015929
		cmp	eax, 0Ah
		nop
		jz	short loc_710158FC
		cmp	eax, 0Bh
		jz	short loc_710158FC
		lea	eax, [ebp-64h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0

loc_710158FC:				; CODE XREF: sub_7101587B+65j
					; sub_7101587B+6Aj ...
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0
		mov	eax, [ebp-0E0h]
		mov	dword ptr [ebp-98h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71015929:				; CODE XREF: sub_7101587B+5Fj
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0
		jmp	short loc_710158FC
; ---------------------------------------------------------------------------

loc_71015940:				; CODE XREF: sub_7101587B+55j
		lea	eax, [ebp-34h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0

loc_71015955:				; CODE XREF: sub_7101587B+47j
					; sub_7101587B+5Aj ...
		lea	eax, [ebp-64h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_71041AB0
		jmp	short loc_710158FC
; ---------------------------------------------------------------------------

loc_7101596C:				; CODE XREF: sub_7101587B+3Ej
		lea	eax, [ebp-40h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0
		jmp	short loc_71015955
; ---------------------------------------------------------------------------

loc_71015983:				; CODE XREF: sub_7101587B+2Aj
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0

loc_71015998:				; CODE XREF: sub_7101587B+21j
					; sub_7101587B+35j ...
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0
		jmp	short loc_71015955
; ---------------------------------------------------------------------------

loc_710159AF:				; CODE XREF: sub_7101587B+18j
		lea	eax, [ebp-4Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0
		jmp	short loc_71015998
sub_7101587B	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710159D0	proc near		; CODE XREF: sub_71017670+7Dp
					; sub_7101C340+3F2p

var_1BC		= dword	ptr -1BCh
var_1B8		= dword	ptr -1B8h
var_1B4		= dword	ptr -1B4h
var_1B0		= dword	ptr -1B0h
var_1AC		= dword	ptr -1ACh
var_1A8		= dword	ptr -1A8h
var_1A4		= dword	ptr -1A4h
var_1A0		= dword	ptr -1A0h
var_19C		= dword	ptr -19Ch
var_194		= dword	ptr -194h
var_190		= dword	ptr -190h
var_18C		= byte ptr -18Ch
var_188		= dword	ptr -188h
var_184		= dword	ptr -184h
var_174		= dword	ptr -174h
var_170		= dword	ptr -170h
var_16C		= dword	ptr -16Ch
var_168		= dword	ptr -168h
var_164		= dword	ptr -164h
var_158		= dword	ptr -158h
var_154		= dword	ptr -154h
var_150		= dword	ptr -150h
var_14C		= dword	ptr -14Ch
var_148		= dword	ptr -148h
var_144		= dword	ptr -144h
var_140		= dword	ptr -140h
var_13C		= dword	ptr -13Ch
var_138		= dword	ptr -138h
var_134		= dword	ptr -134h
var_130		= dword	ptr -130h
var_12C		= dword	ptr -12Ch
var_128		= dword	ptr -128h
var_124		= dword	ptr -124h
var_120		= dword	ptr -120h
var_11C		= byte ptr -11Ch
var_114		= dword	ptr -114h
var_110		= dword	ptr -110h
var_10C		= dword	ptr -10Ch
var_108		= dword	ptr -108h
var_104		= dword	ptr -104h
var_100		= dword	ptr -100h
var_FC		= dword	ptr -0FCh
var_F8		= dword	ptr -0F8h
var_F4		= dword	ptr -0F4h
var_F0		= dword	ptr -0F0h
var_EC		= dword	ptr -0ECh
var_E8		= dword	ptr -0E8h
var_E4		= dword	ptr -0E4h
var_E0		= dword	ptr -0E0h
var_DC		= dword	ptr -0DCh
var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_D0		= dword	ptr -0D0h
var_CC		= dword	ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 1CCh
		mov	[ebp+var_16C], eax
		lea	eax, [ebp+var_18C]
		mov	[esp], eax
		mov	[ebp+var_174], offset sub_710525B0
		mov	[ebp+var_170], offset word_710532D6
		mov	[ebp+var_168], offset loc_710171B2
		mov	[ebp+var_164], esp
		call	_Unwind_SjLj_Register
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ebx, [ebp+arg_0]
		mov	dword ptr [ebx+4], 0
		mov	dword ptr [ebx+8], 0
		mov	dword ptr [ebx+0Ch], 0
		mov	dword ptr [ebx+10h], 0
		mov	dword ptr [ebx+14h], 0
		mov	dword ptr [ebx+18h], 0
		mov	dword ptr [ebx+1Ch], 0
		mov	dword ptr [ebx+20h], 0
		mov	dword ptr [ebx+24h], 0
		mov	dword ptr [ebx+28h], 0
		mov	dword ptr [ebx+2Ch], 0
		mov	dword ptr [ebx+30h], 0
		mov	dword ptr [ebx+34h], 0
		mov	dword ptr [ebx+38h], 0
		mov	dword ptr [ebx+3Ch], 0
		mov	dword ptr [ebx+40h], 0
		mov	dword ptr [ebx+44h], 0
		mov	dword ptr [ebx+48h], 0
		mov	dword ptr [ebx+4Ch], 0
		mov	dword ptr [ebx+50h], 0
		mov	dword ptr [ebx+54h], 0
		mov	dword ptr [ebx+58h], 0
		mov	dword ptr [ebx+5Ch], 0
		mov	dword ptr [ebx+60h], 0
		mov	dword ptr [ebx+64h], 0
		mov	dword ptr [ebx+68h], 0
		mov	dword ptr [ebx+6Ch], 0
		mov	dword ptr [ebx+70h], 0
		mov	dword ptr [ebx+74h], 0
		mov	dword ptr [ebx+78h], 0
		mov	dword ptr [ebx+7Ch], 0
		mov	dword ptr [ebx+80h], 0
		mov	dword ptr [ebx+84h], 0
		mov	dword ptr [ebx+88h], 0
		mov	dword ptr [ebx+8Ch], 0
		mov	dword ptr [ebx+90h], 0
		mov	dword ptr [ebx+94h], 0
		mov	dword ptr [ebx+98h], 0
		mov	dword ptr [ebx+9Ch], 0
		mov	dword ptr [ebx+0A0h], 0
		mov	dword ptr [ebx+0A4h], 0
		mov	dword ptr [ebx+0A8h], 0
		mov	dword ptr [ebx+0ACh], 0
		mov	dword ptr [ebx+0B0h], 0
		mov	dword ptr [ebx+0B4h], 0
		mov	dword ptr [ebx+0B8h], 0
		mov	dword ptr [ebx+0BCh], 0
		mov	dword ptr [ebx+0C0h], 0
		mov	dword ptr [ebx+0C4h], 0
		mov	dword ptr [ebx+0C8h], 0
		mov	dword ptr [ebx+0CCh], 0
		mov	dword ptr [ebx+0D0h], 0
		mov	dword ptr [ebx+0D4h], 0
		mov	dword ptr [ebx+0D8h], 0
		mov	dword ptr [ebx+0DCh], 0
		mov	dword ptr [ebx+0E0h], 0
		mov	dword ptr [ebx+0E4h], 0
		mov	dword ptr [ebx+0E8h], 0
		mov	dword ptr [ebx+0ECh], 0
		mov	dword ptr [ebx+0F0h], 0
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	dword ptr [ebx+0F4h], 0
		mov	dword ptr [ebx+0F8h], 0
		mov	dword ptr [ebx+0FCh], 0
		mov	[ebx+154h], eax
		mov	dword ptr [ebx+100h], 0
		mov	dword ptr [ebx+104h], 0
		mov	dword ptr [ebx+108h], 0
		mov	dword ptr [ebx+10Ch], 0
		mov	dword ptr [ebx+110h], 0
		mov	dword ptr [ebx+114h], 0
		mov	dword ptr [ebx+118h], 0
		mov	dword ptr [ebx+11Ch], 0
		mov	dword ptr [ebx+120h], 0
		mov	dword ptr [ebx+124h], 0
		mov	dword ptr [ebx+128h], 0
		mov	dword ptr [ebx+12Ch], 0
		mov	dword ptr [ebx+130h], 0
		mov	dword ptr [ebx+134h], 0
		mov	dword ptr [ebx+138h], 0
		mov	dword ptr [ebx+13Ch], 0
		mov	dword ptr [ebx+140h], 0
		mov	dword ptr [ebx+144h], 0
		mov	dword ptr [ebx+148h], 0
		mov	dword ptr [ebx+14Ch], 0
		mov	dword ptr [ebx+150h], 0
		lock inc dword ptr [eax]
		setnz	dl
		mov	edi, [ebp+arg_4]
		lea	eax, [ebp+var_11C]
		lea	edx, [ebp+var_1C]
		mov	[ebp+var_1C], offset aStyle ; "style"
		mov	[esp+8], edx
		mov	[esp+4], edi
		mov	[esp], eax
		mov	[ebp+var_188], 0Bh
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		mov	ecx, [ebp+var_114]
		sub	esp, 4
		test	ecx, ecx
		jnz	loc_710164F5

loc_71015D65:				; CODE XREF: sub_710159D0+B96j
					; sub_710159D0+CA3j
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	edx, [eax+8]
		test	edx, edx
		jle	loc_71015ECB
		mov	edi, [ebp+arg_0]
		mov	[ebp+var_190], 0
		mov	[ebp+var_1A8], edi

loc_71015D88:				; CODE XREF: sub_710159D0+4F5j
		mov	eax, [ebp+arg_4]
		imul	edx, [ebp+var_190], 38h
		mov	ecx, [eax]
		lea	eax, [ecx+edx]
		mov	ebx, [eax+30h]
		lea	edi, [ecx+edx+28h]
		mov	esi, [eax+2Ch]
		mov	[ebp+var_1BC], edi
		mov	[ebp+var_134], edi
		test	ebx, ebx
		mov	[ebp+var_130], esi
		mov	[ebp+var_12C], ebx
		jz	loc_71015EB0	; jumptable 71015DF7 default case
		lea	edx, [ecx+edx+34h]
		mov	edi, [eax+3Ch]
		mov	[ebp+var_140], edx
		mov	edx, [eax+38h]
		mov	eax, [eax+28h]
		mov	[ebp+var_138], edi
		mov	[ebp+var_13C], edx
		mov	eax, [eax+0Ch]
		movzx	eax, word ptr [eax+esi*2]
		sub	eax, 63h
		cmp	ax, 15h		; switch 22 cases
		ja	loc_71015EB0	; jumptable 71015DF7 default case
		movzx	eax, ax
		jmp	ds:off_710596C8[eax*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_71015E00:				; CODE XREF: sub_710159D0+427j
					; DATA XREF: .rdata:off_710596C8o
		lea	edx, [ebp+var_134] ; jumptable 71015DF7	case 12
		lea	eax, [ebp+var_CC]
		mov	[ebp+var_CC], offset aOpacity ;	"opacity"
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_188], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	short loc_71015E58
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebp+var_140]
		mov	[ebx+10Ch], eax
		mov	eax, [ebp+var_13C]
		mov	[ebx+110h], eax
		mov	eax, [ebp+var_138]
		mov	[ebx+114h], eax

loc_71015E58:				; CODE XREF: sub_710159D0+45Fj
		lea	edi, [ebp+var_134]
		lea	eax, [ebp+var_D0]
		mov	[ebp+var_D0], offset aOffset ; "offset"
		mov	[esp+4], edi
		mov	[esp], eax
		mov	[ebp+var_188], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	short loc_71015EB0 ; jumptable 71015DF7	default	case
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_140]
		mov	[edx+130h], eax
		mov	eax, [ebp+var_13C]
		mov	[edx+134h], eax
		mov	eax, [ebp+var_138]
		mov	[edx+138h], eax

loc_71015EB0:				; CODE XREF: sub_710159D0+3EBj
					; sub_710159D0+41Ej ...
		mov	edi, [ebp+arg_4] ; jumptable 71015DF7 default case
		add	[ebp+var_190], 1
		mov	edx, [ebp+var_190]
		mov	eax, [edi]
		cmp	edx, [eax+8]
		jl	loc_71015D88

loc_71015ECB:				; CODE XREF: sub_710159D0+39Fj
		lea	eax, [ebp+var_18C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_71015EE1:				; CODE XREF: sub_710159D0+427j
					; DATA XREF: .rdata:off_710596C8o
		lea	ebx, [ebp+var_134] ; jumptable 71015DF7	case 21
		lea	edi, [ebp+var_10C]
		mov	[ebp+var_10C], offset aXmlId ; "xml:id"
		mov	[esp+4], ebx
		mov	[esp], edi
		mov	[ebp+var_188], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	short loc_71015EB0 ; jumptable 71015DF7	default	case
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	edi, [eax+8]
		test	edi, edi
		jnz	short loc_71015EB0 ; jumptable 71015DF7	default	case
		lea	ebx, [ebp+var_140]
		lea	edi, [ebp+var_110]
		mov	[esp+4], ebx
		mov	[esp], edi
		call	ds:_ZNK10QStringRef8toStringEv
		mov	edx, [ebp+var_1A8]
		sub	esp, 4
		mov	[esp+4], edi
		mov	[ebp+var_188], 1
		mov	[esp], edx
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_110]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_71015EB0	; jumptable 71015DF7 default case
		mov	eax, [ebp+var_110]
		mov	[ebp+var_188], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71015EB0	; jumptable 71015DF7 default case
; ---------------------------------------------------------------------------
		align 10h

loc_71015F90:				; CODE XREF: sub_710159D0+427j
					; DATA XREF: .rdata:off_710596C8o
		lea	ebx, [ebp+var_134] ; jumptable 71015DF7	case 19
		lea	eax, [ebp+var_104]
		mov	[ebp+var_104], offset aVectorEffect ; "vector-effect"
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	[ebp+var_188], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_710162E0
		mov	edi, [ebp+arg_0]
		mov	eax, [ebp+var_140]
		mov	[edi+0A0h], eax
		mov	eax, [ebp+var_13C]
		mov	[edi+0A4h], eax
		mov	eax, [ebp+var_138]
		mov	[edi+0A8h], eax
		jmp	loc_71015EB0	; jumptable 71015DF7 default case
; ---------------------------------------------------------------------------

loc_71015FF1:				; CODE XREF: sub_710159D0+427j
					; DATA XREF: .rdata:off_710596C8o
		lea	ebx, [ebp+var_134] ; jumptable 71015DF7	case 17
		lea	eax, [ebp+var_FC]
		mov	[ebp+var_FC], offset aTextAnchor ; "text-anchor"
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	[ebp+var_188], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71016278
		mov	edi, [ebp+arg_0]
		mov	eax, [ebp+var_140]
		mov	[edi+0E8h], eax
		mov	eax, [ebp+var_13C]
		mov	[edi+0ECh], eax
		mov	eax, [ebp+var_138]
		mov	[edi+0F0h], eax
		jmp	loc_71015EB0	; jumptable 71015DF7 default case
; ---------------------------------------------------------------------------

loc_71016052:				; CODE XREF: sub_710159D0+427j
					; DATA XREF: .rdata:off_710596C8o
		lea	ebx, [ebp+var_134] ; jumptable 71015DF7	case 6
		lea	eax, [ebp+var_C4]
		mov	[ebp+var_C4], offset aId ; "id"
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	[ebp+var_188], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71015EB0	; jumptable 71015DF7 default case
		lea	eax, [ebp+var_C8]
		lea	edi, [ebp+var_140]
		mov	[esp+4], edi
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_C8]
		mov	[esp+4], eax
		mov	eax, [ebp+var_1A8]
		mov	[ebp+var_188], 4
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_C8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_71015EB0	; jumptable 71015DF7 default case
		mov	eax, [ebp+var_C8]
		mov	[ebp+var_188], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71015EB0	; jumptable 71015DF7 default case
; ---------------------------------------------------------------------------

loc_710160F8:				; CODE XREF: sub_710159D0+427j
					; DATA XREF: .rdata:off_710596C8o
		cmp	ebx, 5		; jumptable 71015DF7 case 16
		jg	loc_710163A0

loc_71016101:				; CODE XREF: sub_710159D0+A1Ej
		lea	edi, [ebp+var_134]
		lea	eax, [ebp+var_F4]
		mov	[ebp+var_F4], offset aStopColor	; "stop-color"
		mov	[esp+4], edi
		mov	[esp], eax
		mov	[ebp+var_188], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71016B53
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebp+var_140]
		mov	[ebx+13Ch], eax
		mov	eax, [ebp+var_13C]
		mov	[ebx+140h], eax
		mov	eax, [ebp+var_138]
		mov	[ebx+144h], eax
		jmp	loc_71015EB0	; jumptable 71015DF7 default case
; ---------------------------------------------------------------------------

loc_71016162:				; CODE XREF: sub_710159D0+427j
					; DATA XREF: .rdata:off_710596C8o
		lea	eax, [ebp+var_134] ; jumptable 71015DF7	case 1
		mov	[esp+4], eax
		lea	eax, [ebp+var_A0]
		mov	[ebp+var_A0], offset aDisplay ;	"display"
		mov	[esp], eax
		mov	[ebp+var_188], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71015EB0	; jumptable 71015DF7 default case
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_140]
		mov	[edx+124h], eax
		mov	eax, [ebp+var_13C]
		mov	[edx+128h], eax
		mov	eax, [ebp+var_138]
		mov	[edx+12Ch], eax
		jmp	loc_71015EB0	; jumptable 71015DF7 default case
; ---------------------------------------------------------------------------

loc_710161C3:				; CODE XREF: sub_710159D0+427j
					; DATA XREF: .rdata:off_710596C8o
		lea	ebx, [ebp+var_134] ; jumptable 71015DF7	case 3
		lea	eax, [ebp+var_A4]
		mov	[ebp+var_A4], offset aFill ; "fill"
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	[ebp+var_188], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71016445
		mov	edi, [ebp+arg_0]
		mov	eax, [ebp+var_140]
		mov	[edi+1Ch], eax
		mov	eax, [ebp+var_13C]
		mov	[edi+20h], eax
		mov	eax, [ebp+var_138]
		mov	[edi+24h], eax
		jmp	loc_71015EB0	; jumptable 71015DF7 default case
; ---------------------------------------------------------------------------
		align 10h

loc_71016220:				; CODE XREF: sub_710159D0+427j
					; DATA XREF: .rdata:off_710596C8o
		lea	ebx, [ebp+var_134] ; jumptable 71015DF7	case 0
		lea	eax, [ebp+var_94]
		mov	[ebp+var_94], offset aColor ; "color"
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	[ebp+var_188], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71016341
		mov	edi, [ebp+arg_0]
		mov	eax, [ebp+var_140]
		mov	[edi+4], eax
		mov	eax, [ebp+var_13C]
		mov	[edi+8], eax
		mov	eax, [ebp+var_138]
		mov	[edi+0Ch], eax
		jmp	loc_71015EB0	; jumptable 71015DF7 default case
; ---------------------------------------------------------------------------

loc_71016278:				; CODE XREF: sub_710159D0+650j
		lea	eax, [ebp+var_134]
		mov	[esp+4], eax
		lea	eax, [ebp+var_100]
		mov	[ebp+var_100], offset aTransform ; "transform"
		mov	[esp], eax
		mov	[ebp+var_188], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71015EB0	; jumptable 71015DF7 default case
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_140]
		mov	[edx+0F4h], eax
		mov	eax, [ebp+var_13C]
		mov	[edx+0F8h], eax
		mov	eax, [ebp+var_138]
		mov	[edx+0FCh], eax
		jmp	loc_71015EB0	; jumptable 71015DF7 default case
; ---------------------------------------------------------------------------
		align 10h

loc_710162E0:				; CODE XREF: sub_710159D0+5EFj
		lea	eax, [ebp+var_134]
		mov	[esp+4], eax
		lea	eax, [ebp+var_108]
		mov	[ebp+var_108], offset aVisibility ; "visibility"
		mov	[esp], eax
		mov	[ebp+var_188], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71015EB0	; jumptable 71015DF7 default case
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_140]
		mov	[edx+100h], eax
		mov	eax, [ebp+var_13C]
		mov	[edx+104h], eax
		mov	eax, [ebp+var_138]
		mov	[edx+108h], eax
		jmp	loc_71015EB0	; jumptable 71015DF7 default case
; ---------------------------------------------------------------------------

loc_71016341:				; CODE XREF: sub_710159D0+87Fj
		lea	eax, [ebp+var_134]
		mov	[esp+4], eax
		lea	eax, [ebp+var_98]
		mov	[ebp+var_98], offset aColorOpacity ; "color-opacity"
		mov	[esp], eax
		mov	[ebp+var_188], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71016AF2
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_140]
		mov	[edx+10h], eax
		mov	eax, [ebp+var_13C]
		mov	[edx+14h], eax
		mov	eax, [ebp+var_138]
		mov	[edx+18h], eax
		jmp	loc_71015EB0	; jumptable 71015DF7 default case
; ---------------------------------------------------------------------------
		align 10h

loc_710163A0:				; CODE XREF: sub_710159D0+72Bj
		mov	ebx, [ebp+var_1BC]
		lea	eax, [ebp+var_14C]
		add	esi, 1
		mov	[esp+4], eax
		lea	eax, [ebp+var_D4]
		mov	[ebp+var_D4], offset aTroke ; "troke"
		mov	[ebp+var_148], esi
		mov	[ebp+var_14C], ebx
		mov	[ebp+var_144], 5
		mov	[esp], eax
		mov	[ebp+var_188], 3
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71016101
		mov	eax, [ebp+var_12C]
		mov	edx, [ebp+var_130]
		mov	ecx, [ebp+var_134]
		sub	eax, 6
		add	edx, 6
		test	eax, eax
		mov	[ebp+var_158], ecx
		mov	[ebp+var_154], edx
		mov	[ebp+var_150], eax
		jnz	short loc_7101649D
		mov	edi, [ebp+arg_0]
		mov	eax, [ebp+var_140]
		mov	[edi+40h], eax
		mov	eax, [ebp+var_13C]
		mov	[edi+44h], eax
		mov	eax, [ebp+var_138]
		mov	[edi+48h], eax
		jmp	loc_71015EB0	; jumptable 71015DF7 default case
; ---------------------------------------------------------------------------

loc_71016445:				; CODE XREF: sub_710159D0+822j
		lea	eax, [ebp+var_134]
		mov	[esp+4], eax
		lea	eax, [ebp+var_A8]
		mov	[ebp+var_A8], offset aFillRule ; "fill-rule"
		mov	[esp], eax
		mov	[ebp+var_188], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71016BB4
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_140]
		mov	[edx+28h], eax
		mov	eax, [ebp+var_13C]
		mov	[edx+2Ch], eax
		mov	eax, [ebp+var_138]
		mov	[edx+30h], eax
		jmp	loc_71015EB0	; jumptable 71015DF7 default case
; ---------------------------------------------------------------------------

loc_7101649D:				; CODE XREF: sub_710159D0+A50j
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_D8]
		mov	[ebp+var_D8], offset aDasharray	; "-dasharray"
		mov	[esp], eax
		mov	[ebp+var_188], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71016D87
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_140]
		mov	[edx+4Ch], eax
		mov	eax, [ebp+var_13C]
		mov	[edx+50h], eax
		mov	eax, [ebp+var_138]
		mov	[edx+54h], eax
		jmp	loc_71015EB0	; jumptable 71015DF7 default case
; ---------------------------------------------------------------------------

loc_710164F5:				; CODE XREF: sub_710159D0+38Fj
		mov	ebx, [ebp+arg_0]
		lea	eax, [ebp+var_20]
		lea	edx, [ebp+var_11C]
		mov	[esp+4], edx
		mov	[esp], eax
		add	ebx, 154h
		mov	[ebp+var_1AC], ebx
		mov	[ebp+var_188], 0Ah
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_20]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+8], ebx
		mov	[ebp+var_188], 9
		mov	[esp], eax
		call	sub_71015150
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71016C0C

loc_71016558:				; CODE XREF: sub_710159D0+1252j
		mov	edi, [ebp+arg_0]
		mov	eax, [edi+154h]
		mov	eax, [eax+8]
		test	eax, eax
		jle	loc_71015D65
		mov	eax, ds:_ZeqRK13QLatin1StringRK10QStringRef
		mov	[ebp+var_194], 0
		mov	[ebp+var_1B0], eax

loc_71016581:				; CODE XREF: sub_710159D0+C9Dj
		mov	edx, [ebp+arg_0]
		mov	edi, [ebp+var_194]
		mov	ebx, [edx+154h]
		lea	ecx, [edi+edi*2]
		shl	ecx, 3
		lea	eax, [ebx+ecx]
		mov	edx, [eax+18h]
		lea	ecx, [ebx+ecx+10h]
		mov	esi, [eax+14h]
		mov	[ebp+var_140], ecx
		mov	[ebp+var_138], edx
		test	edx, edx
		mov	[ebp+var_13C], esi
		mov	ebx, [eax+24h]
		mov	edi, [eax+20h]
		mov	[ebp+var_19C], ebx
		mov	[ebp+var_1A0], edi
		jz	loc_71016654	; jumptable 710165EE default case
		mov	eax, [eax+10h]
		lea	ebx, [ecx+0Ch]
		mov	[ebp+var_1A4], ebx
		mov	eax, [eax+0Ch]
		movzx	eax, word ptr [eax+esi*2]
		sub	eax, 63h
		cmp	ax, 13h		; switch 20 cases
		ja	short loc_71016654 ; jumptable 710165EE	default	case
		movzx	eax, ax
		jmp	ds:off_71059720[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_710165F5:				; CODE XREF: sub_710159D0+C1Ej
					; DATA XREF: .rdata:off_71059720o
		cmp	edx, 5		; jumptable 710165EE case 16
		jg	loc_71016A55

loc_710165FE:				; CODE XREF: sub_710159D0+10C7j
		lea	ebx, [ebp+var_140]
		lea	eax, [ebp+var_7C]
		mov	[ebp+var_7C], offset aStopColor	; "stop-color"
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	[ebp+var_188], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71016DDF
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+var_1A4]
		mov	edi, [ebp+var_1A0]
		mov	eax, [ebp+var_19C]
		mov	[edx+13Ch], ebx
		mov	[edx+140h], edi
		mov	[edx+144h], eax

loc_71016654:				; CODE XREF: sub_710159D0+BF9j
					; sub_710159D0+C19j ...
		mov	edx, [ebp+arg_0] ; jumptable 710165EE default case
		add	[ebp+var_194], 1
		mov	ebx, [ebp+var_194]
		mov	eax, [edx+154h]
		cmp	ebx, [eax+8]
		jl	loc_71016581
		jmp	loc_71015D65
; ---------------------------------------------------------------------------

loc_71016678:				; CODE XREF: sub_710159D0+C1Ej
					; DATA XREF: .rdata:off_71059720o
		lea	eax, [ebp+var_140] ; jumptable 710165EE	case 19
		lea	edx, [ebp+var_8C]
		mov	[ebp+var_8C], offset aVectorEffect ; "vector-effect"
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_188], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71016894
		mov	ebx, [ebp+arg_0]
		mov	edi, [ebp+var_1A4]
		mov	eax, [ebp+var_1A0]
		mov	edx, [ebp+var_19C]
		mov	[ebx+0A0h], edi
		mov	[ebx+0A4h], eax
		mov	[ebx+0A8h], edx
		jmp	loc_71016654	; jumptable 710165EE default case
; ---------------------------------------------------------------------------

loc_710166D9:				; CODE XREF: sub_710159D0+C1Ej
					; DATA XREF: .rdata:off_71059720o
		lea	ebx, [ebp+var_140] ; jumptable 710165EE	case 17
		lea	eax, [ebp+var_84]
		mov	[ebp+var_84], offset aTextAnchor ; "text-anchor"
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	[ebp+var_188], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_710168F5
		mov	edi, [ebp+arg_0]
		mov	eax, [ebp+var_1A4]
		mov	edx, [ebp+var_1A0]
		mov	ebx, [ebp+var_19C]
		mov	[edi+0E8h], eax
		mov	[edi+0ECh], edx
		mov	[edi+0F0h], ebx
		jmp	loc_71016654	; jumptable 710165EE default case
; ---------------------------------------------------------------------------

loc_7101673A:				; CODE XREF: sub_710159D0+C1Ej
					; DATA XREF: .rdata:off_71059720o
		lea	edi, [ebp+var_140] ; jumptable 710165EE	case 12
		lea	eax, [ebp+var_54]
		mov	[ebp+var_54], offset aOpacity ;	"opacity"
		mov	[esp+4], edi
		mov	[esp], eax
		mov	[ebp+var_188], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_710169A8
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_1A4]
		mov	ebx, [ebp+var_1A0]
		mov	edi, [ebp+var_19C]
		mov	[eax+10Ch], edx
		mov	[eax+110h], ebx
		mov	[eax+114h], edi
		jmp	loc_71016654	; jumptable 710165EE default case
; ---------------------------------------------------------------------------

loc_71016795:				; CODE XREF: sub_710159D0+C1Ej
					; DATA XREF: .rdata:off_71059720o
		lea	edi, [ebp+var_140] ; jumptable 710165EE	case 3
		lea	eax, [ebp+var_34]
		mov	[ebp+var_34], offset aFill ; "fill"
		mov	[esp+4], edi
		mov	[esp], eax
		mov	[ebp+var_188], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71016A03
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_1A4]
		mov	ebx, [ebp+var_1A0]
		mov	edi, [ebp+var_19C]
		mov	[eax+1Ch], edx
		mov	[eax+20h], ebx
		mov	[eax+24h], edi
		jmp	loc_71016654	; jumptable 710165EE default case
; ---------------------------------------------------------------------------

loc_710167E7:				; CODE XREF: sub_710159D0+C1Ej
					; DATA XREF: .rdata:off_71059720o
		lea	ebx, [ebp+var_140] ; jumptable 710165EE	case 1
		lea	eax, [ebp+var_30]
		mov	[ebp+var_30], offset aDisplay ;	"display"
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	[ebp+var_188], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71016654	; jumptable 710165EE default case
		mov	edi, [ebp+arg_0]
		mov	eax, [ebp+var_1A4]
		mov	edx, [ebp+var_1A0]
		mov	ebx, [ebp+var_19C]
		mov	[edi+124h], eax
		mov	[edi+128h], edx
		mov	[edi+12Ch], ebx
		jmp	loc_71016654	; jumptable 710165EE default case
; ---------------------------------------------------------------------------

loc_71016842:				; CODE XREF: sub_710159D0+C1Ej
					; DATA XREF: .rdata:off_71059720o
		lea	edi, [ebp+var_140] ; jumptable 710165EE	case 0
		lea	eax, [ebp+var_24]
		mov	[ebp+var_24], offset aColor ; "color"
		mov	[esp+4], edi
		mov	[esp], eax
		mov	[ebp+var_188], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71016956
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_1A4]
		mov	ebx, [ebp+var_1A0]
		mov	edi, [ebp+var_19C]
		mov	[eax+4], edx
		mov	[eax+8], ebx
		mov	[eax+0Ch], edi
		jmp	loc_71016654	; jumptable 710165EE default case
; ---------------------------------------------------------------------------

loc_71016894:				; CODE XREF: sub_710159D0+CD7j
		lea	ebx, [ebp+var_140]
		lea	edi, [ebp+var_90]
		mov	[ebp+var_90], offset aVisibility ; "visibility"
		mov	[esp+4], ebx
		mov	[esp], edi
		mov	[ebp+var_188], 8
		call	[ebp+var_1B0]
		test	al, al
		jz	loc_71016654	; jumptable 710165EE default case
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_1A4]
		mov	ebx, [ebp+var_1A0]
		mov	edi, [ebp+var_19C]
		mov	[eax+100h], edx
		mov	[eax+104h], ebx
		mov	[eax+108h], edi
		jmp	loc_71016654	; jumptable 710165EE default case
; ---------------------------------------------------------------------------

loc_710168F5:				; CODE XREF: sub_710159D0+D38j
		lea	edi, [ebp+var_140]
		lea	eax, [ebp+var_88]
		mov	[ebp+var_88], offset aTransform	; "transform"
		mov	[esp+4], edi
		mov	[esp], eax
		mov	[ebp+var_188], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71016654	; jumptable 710165EE default case
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_1A4]
		mov	ebx, [ebp+var_1A0]
		mov	edi, [ebp+var_19C]
		mov	[eax+0F4h], edx
		mov	[eax+0F8h], ebx
		mov	[eax+0FCh], edi
		jmp	loc_71016654	; jumptable 710165EE default case
; ---------------------------------------------------------------------------

loc_71016956:				; CODE XREF: sub_710159D0+E9Bj
		lea	eax, [ebp+var_140]
		mov	[esp+4], eax
		lea	eax, [ebp+var_28]
		mov	[ebp+var_28], offset aColorOpacity ; "color-opacity"
		mov	[esp], eax
		mov	[ebp+var_188], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71016C79
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+var_1A4]
		mov	edi, [ebp+var_1A0]
		mov	eax, [ebp+var_19C]
		mov	[edx+10h], ebx
		mov	[edx+14h], edi
		mov	[edx+18h], eax
		jmp	loc_71016654	; jumptable 710165EE default case
; ---------------------------------------------------------------------------

loc_710169A8:				; CODE XREF: sub_710159D0+D93j
		lea	eax, [ebp+var_140]
		mov	[esp+4], eax
		lea	eax, [ebp+var_58]
		mov	[ebp+var_58], offset aOffset ; "offset"
		mov	[esp], eax
		mov	[ebp+var_188], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71016654	; jumptable 710165EE default case
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+var_1A4]
		mov	edi, [ebp+var_1A0]
		mov	eax, [ebp+var_19C]
		mov	[edx+130h], ebx
		mov	[edx+134h], edi
		mov	[edx+138h], eax
		jmp	loc_71016654	; jumptable 710165EE default case
; ---------------------------------------------------------------------------

loc_71016A03:				; CODE XREF: sub_710159D0+DEEj
		lea	eax, [ebp+var_140]
		mov	[esp+4], eax
		lea	eax, [ebp+var_38]
		mov	[ebp+var_38], offset aFillRule ; "fill-rule"
		mov	[esp], eax
		mov	[ebp+var_188], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71016C27
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+var_1A4]
		mov	edi, [ebp+var_1A0]
		mov	eax, [ebp+var_19C]
		mov	[edx+28h], ebx
		mov	[edx+2Ch], edi
		mov	[edx+30h], eax
		jmp	loc_71016654	; jumptable 710165EE default case
; ---------------------------------------------------------------------------

loc_71016A55:				; CODE XREF: sub_710159D0+C28j
		lea	eax, [ebp+var_128]
		add	esi, 1
		mov	[esp+4], eax
		lea	eax, [ebp+var_5C]
		mov	[ebp+var_5C], offset aTroke ; "troke"
		mov	[ebp+var_128], ecx
		mov	[ebp+var_124], esi
		mov	[ebp+var_120], 5
		mov	[esp], eax
		mov	[ebp+var_188], 7
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_710165FE
		mov	eax, [ebp+var_138]
		mov	edx, [ebp+var_13C]
		mov	ecx, [ebp+var_140]
		sub	eax, 6
		add	edx, 6
		test	eax, eax
		mov	[ebp+var_134], ecx
		mov	[ebp+var_130], edx
		mov	[ebp+var_12C], eax
		jnz	loc_71016D35
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+var_1A4]
		mov	edi, [ebp+var_1A0]
		mov	eax, [ebp+var_19C]
		mov	[edx+40h], ebx
		mov	[edx+44h], edi
		mov	[edx+48h], eax
		jmp	loc_71016654	; jumptable 710165EE default case
; ---------------------------------------------------------------------------

loc_71016AF2:				; CODE XREF: sub_710159D0+9A0j
		lea	ebx, [ebp+var_134]
		lea	eax, [ebp+var_9C]
		mov	[ebp+var_9C], offset aCompOp ; "comp-op"
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	[ebp+var_188], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71015EB0	; jumptable 71015DF7 default case
		mov	edi, [ebp+arg_0]
		mov	eax, [ebp+var_140]
		mov	[edi+118h], eax
		mov	eax, [ebp+var_13C]
		mov	[edi+11Ch], eax
		mov	eax, [ebp+var_138]
		mov	[edi+120h], eax
		jmp	loc_71015EB0	; jumptable 71015DF7 default case
; ---------------------------------------------------------------------------

loc_71016B53:				; CODE XREF: sub_710159D0+760j
		lea	edi, [ebp+var_134]
		lea	eax, [ebp+var_F8]
		mov	[ebp+var_F8], offset aStopOpacity ; "stop-opacity"
		mov	[esp+4], edi
		mov	[esp], eax
		mov	[ebp+var_188], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71015EB0	; jumptable 71015DF7 default case
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_140]
		mov	[edx+148h], eax
		mov	eax, [ebp+var_13C]
		mov	[edx+14Ch], eax
		mov	eax, [ebp+var_138]
		mov	[edx+150h], eax
		jmp	loc_71015EB0	; jumptable 71015DF7 default case
; ---------------------------------------------------------------------------

loc_71016BB4:				; CODE XREF: sub_710159D0+AA4j
		lea	ebx, [ebp+var_134]
		lea	eax, [ebp+var_AC]
		mov	[ebp+var_AC], offset aFillOpacity ; "fill-opacity"
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	[ebp+var_188], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71016CD4
		mov	edi, [ebp+arg_0]
		mov	eax, [ebp+var_140]
		mov	[edi+34h], eax
		mov	eax, [ebp+var_13C]
		mov	[edi+38h], eax
		mov	eax, [ebp+var_138]
		mov	[edi+3Ch], eax
		jmp	loc_71015EB0	; jumptable 71015DF7 default case
; ---------------------------------------------------------------------------

loc_71016C0C:				; CODE XREF: sub_710159D0+B82j
		mov	eax, [ebp+var_20]
		mov	[ebp+var_188], 0Ah
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71016558
; ---------------------------------------------------------------------------

loc_71016C27:				; CODE XREF: sub_710159D0+105Cj
		lea	edx, [ebp+var_140]
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_3C], offset aFillOpacity ; "fill-opacity"
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_188], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71016F93
		mov	ebx, [ebp+arg_0]
		mov	edi, [ebp+var_1A4]
		mov	eax, [ebp+var_1A0]
		mov	edx, [ebp+var_19C]
		mov	[ebx+34h], edi
		mov	[ebx+38h], eax
		mov	[ebx+3Ch], edx
		jmp	loc_71016654	; jumptable 710165EE default case
; ---------------------------------------------------------------------------

loc_71016C79:				; CODE XREF: sub_710159D0+FAFj
		lea	edx, [ebp+var_140]
		lea	eax, [ebp+var_2C]
		mov	[ebp+var_2C], offset aCompOp ; "comp-op"
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_188], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71016654	; jumptable 710165EE default case
		mov	ebx, [ebp+arg_0]
		mov	edi, [ebp+var_1A4]
		mov	eax, [ebp+var_1A0]
		mov	edx, [ebp+var_19C]
		mov	[ebx+118h], edi
		mov	[ebx+11Ch], eax
		mov	[ebx+120h], edx
		jmp	loc_71016654	; jumptable 710165EE default case
; ---------------------------------------------------------------------------

loc_71016CD4:				; CODE XREF: sub_710159D0+1213j
		lea	eax, [ebp+var_134]
		mov	[esp+4], eax
		lea	eax, [ebp+var_B0]
		mov	[ebp+var_B0], offset aFontFamily ; "font-family"
		mov	[esp], eax
		mov	[ebp+var_188], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71016E8C
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_140]
		mov	[edx+0ACh], eax
		mov	eax, [ebp+var_13C]
		mov	[edx+0B0h], eax
		mov	eax, [ebp+var_138]
		mov	[edx+0B4h], eax
		jmp	loc_71015EB0	; jumptable 71015DF7 default case
; ---------------------------------------------------------------------------

loc_71016D35:				; CODE XREF: sub_710159D0+10F9j
		lea	eax, [ebp+var_134]
		mov	[esp+4], eax
		lea	eax, [ebp+var_60]
		mov	[ebp+var_60], offset aDasharray	; "-dasharray"
		mov	[esp], eax
		mov	[ebp+var_188], 6
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71016E3A
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+var_1A4]
		mov	edi, [ebp+var_1A0]
		mov	eax, [ebp+var_19C]
		mov	[edx+4Ch], ebx
		mov	[edx+50h], edi
		mov	[edx+54h], eax
		jmp	loc_71016654	; jumptable 710165EE default case
; ---------------------------------------------------------------------------

loc_71016D87:				; CODE XREF: sub_710159D0+AFCj
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_DC]
		mov	[ebp+var_DC], offset aDashoffset ; "-dashoffset"
		mov	[esp], eax
		mov	[ebp+var_188], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71016F3F
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebp+var_140]
		mov	[ebx+58h], eax
		mov	eax, [ebp+var_13C]
		mov	[ebx+5Ch], eax
		mov	eax, [ebp+var_138]
		mov	[ebx+60h], eax
		jmp	loc_71015EB0	; jumptable 71015DF7 default case
; ---------------------------------------------------------------------------

loc_71016DDF:				; CODE XREF: sub_710159D0+C57j
		lea	edx, [ebp+var_140]
		lea	eax, [ebp+var_80]
		mov	[ebp+var_80], offset aStopOpacity ; "stop-opacity"
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_188], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71016654	; jumptable 710165EE default case
		mov	ebx, [ebp+arg_0]
		mov	edi, [ebp+var_1A4]
		mov	eax, [ebp+var_1A0]
		mov	edx, [ebp+var_19C]
		mov	[ebx+148h], edi
		mov	[ebx+14Ch], eax
		mov	[ebx+150h], edx
		jmp	loc_71016654	; jumptable 710165EE default case
; ---------------------------------------------------------------------------

loc_71016E3A:				; CODE XREF: sub_710159D0+138Ej
		lea	eax, [ebp+var_134]
		mov	[esp+4], eax
		lea	eax, [ebp+var_64]
		mov	[ebp+var_64], offset aDashoffset ; "-dashoffset"
		mov	[esp], eax
		mov	[ebp+var_188], 6
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71016EED
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+var_1A4]
		mov	edi, [ebp+var_1A0]
		mov	eax, [ebp+var_19C]
		mov	[edx+58h], ebx
		mov	[edx+5Ch], edi
		mov	[edx+60h], eax
		jmp	loc_71016654	; jumptable 710165EE default case
; ---------------------------------------------------------------------------

loc_71016E8C:				; CODE XREF: sub_710159D0+1333j
		lea	ebx, [ebp+var_134]
		lea	eax, [ebp+var_B4]
		mov	[ebp+var_B4], offset aFontSize ; "font-size"
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	[ebp+var_188], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71017046
		mov	edi, [ebp+arg_0]
		mov	eax, [ebp+var_140]
		mov	[edi+0B8h], eax
		mov	eax, [ebp+var_13C]
		mov	[edi+0BCh], eax
		mov	eax, [ebp+var_138]
		mov	[edi+0C0h], eax
		jmp	loc_71015EB0	; jumptable 71015DF7 default case
; ---------------------------------------------------------------------------

loc_71016EED:				; CODE XREF: sub_710159D0+1493j
		lea	eax, [ebp+var_134]
		mov	[esp+4], eax
		lea	eax, [ebp+var_68]
		mov	[ebp+var_68], offset aLinecap ;	"-linecap"
		mov	[esp], eax
		mov	[ebp+var_188], 6
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_710170A7
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+var_1A4]
		mov	edi, [ebp+var_1A0]
		mov	eax, [ebp+var_19C]
		mov	[edx+64h], ebx
		mov	[edx+68h], edi
		mov	[edx+6Ch], eax
		jmp	loc_71016654	; jumptable 710165EE default case
; ---------------------------------------------------------------------------

loc_71016F3F:				; CODE XREF: sub_710159D0+13E6j
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_E0]
		mov	[ebp+var_E0], offset aLinecap ;	"-linecap"
		mov	[esp], eax
		mov	[ebp+var_188], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	short loc_71016FEE
		mov	edi, [ebp+arg_0]
		mov	eax, [ebp+var_140]
		mov	[edi+64h], eax
		mov	eax, [ebp+var_13C]
		mov	[edi+68h], eax
		mov	eax, [ebp+var_138]
		mov	[edi+6Ch], eax
		jmp	loc_71015EB0	; jumptable 71015DF7 default case
; ---------------------------------------------------------------------------

loc_71016F93:				; CODE XREF: sub_710159D0+1280j
		lea	ebx, [ebp+var_140]
		lea	eax, [ebp+var_40]
		mov	[ebp+var_40], offset aFontFamily ; "font-family"
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	[ebp+var_188], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71017157
		mov	edi, [ebp+arg_0]
		mov	eax, [ebp+var_1A4]
		mov	edx, [ebp+var_1A0]
		mov	ebx, [ebp+var_19C]
		mov	[edi+0ACh], eax
		mov	[edi+0B0h], edx
		mov	[edi+0B4h], ebx
		jmp	loc_71016654	; jumptable 710165EE default case
; ---------------------------------------------------------------------------

loc_71016FEE:				; CODE XREF: sub_710159D0+159Ej
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_E4]
		mov	[ebp+var_E4], offset aLinejoin ; "-linejoin"
		mov	[esp], eax
		mov	[ebp+var_188], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_710170F9
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_140]
		mov	[edx+70h], eax
		mov	eax, [ebp+var_13C]
		mov	[edx+74h], eax
		mov	eax, [ebp+var_138]
		mov	[edx+78h], eax
		jmp	loc_71015EB0	; jumptable 71015DF7 default case
; ---------------------------------------------------------------------------

loc_71017046:				; CODE XREF: sub_710159D0+14EBj
		lea	eax, [ebp+var_134]
		mov	[esp+4], eax
		lea	eax, [ebp+var_B8]
		mov	[ebp+var_B8], offset aFontStyle	; "font-style"
		mov	[esp], eax
		mov	[ebp+var_188], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_710172C9
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_140]
		mov	[edx+0C4h], eax
		mov	eax, [ebp+var_13C]
		mov	[edx+0C8h], eax
		mov	eax, [ebp+var_138]
		mov	[edx+0CCh], eax
		jmp	loc_71015EB0	; jumptable 71015DF7 default case
; ---------------------------------------------------------------------------

loc_710170A7:				; CODE XREF: sub_710159D0+1546j
		lea	eax, [ebp+var_134]
		mov	[esp+4], eax
		lea	eax, [ebp+var_6C]
		mov	[ebp+var_6C], offset aLinejoin ; "-linejoin"
		mov	[esp], eax
		mov	[ebp+var_188], 6
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_7101744D
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+var_1A4]
		mov	edi, [ebp+var_1A0]
		mov	eax, [ebp+var_19C]
		mov	[edx+70h], ebx
		mov	[edx+74h], edi
		mov	[edx+78h], eax
		jmp	loc_71016654	; jumptable 710165EE default case
; ---------------------------------------------------------------------------

loc_710170F9:				; CODE XREF: sub_710159D0+164Dj
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_E8]
		mov	[ebp+var_E8], offset aMiterlimit ; "-miterlimit"
		mov	[esp], eax
		mov	[ebp+var_188], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_7101732A
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebp+var_140]
		mov	[ebx+7Ch], eax
		mov	eax, [ebp+var_13C]
		mov	[ebx+80h], eax
		mov	eax, [ebp+var_138]
		mov	[ebx+84h], eax
		jmp	loc_71015EB0	; jumptable 71015DF7 default case
; ---------------------------------------------------------------------------

loc_71017157:				; CODE XREF: sub_710159D0+15ECj
		lea	edi, [ebp+var_140]
		lea	eax, [ebp+var_44]
		mov	[ebp+var_44], offset aFontSize ; "font-size"
		mov	[esp+4], edi
		mov	[esp], eax
		mov	[ebp+var_188], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_710174A5
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_1A4]
		mov	ebx, [ebp+var_1A0]
		mov	edi, [ebp+var_19C]
		mov	[eax+0B8h], edx
		mov	[eax+0BCh], ebx
		mov	[eax+0C0h], edi
		jmp	loc_71016654	; jumptable 710165EE default case
; ---------------------------------------------------------------------------

loc_710171B2:				; DATA XREF: sub_710159D0+32o
		add	ebp, 18h
		mov	eax, [ebp+var_188]
		mov	ebx, [ebp+var_184]
		cmp	eax, 1
		mov	[ebp+var_1B8], ebx
		jz	short loc_7101721F
		cmp	eax, 2
		jz	short loc_7101721F
		cmp	eax, 3
		jz	loc_710172AC
		cmp	eax, 4
		lea	esi, [esi+0]
		jz	short loc_7101721F
		cmp	eax, 5
		jz	short loc_7101721F
		cmp	eax, 6
		jz	short loc_7101721F
		cmp	eax, 7
		nop
		jz	short loc_7101721F
		cmp	eax, 8
		jz	loc_71017292
		cmp	eax, 9
		xchg	ax, ax
		jz	short loc_7101721F
		cmp	eax, 0Ah
		jz	short loc_7101721F
		lea	eax, [ebp+var_110]
		mov	[esp], eax
		mov	[ebp+var_188], 0
		call	sub_710477B0

loc_7101721F:				; CODE XREF: sub_710159D0+17FAj
					; sub_710159D0+17FFj ...
		mov	ebx, [ebp+var_1B8]
		mov	edi, [ebp+arg_0]
		mov	[ebp+var_1B4], ebx
		mov	eax, [edi+154h]
		test	eax, eax
		jz	short loc_71017265
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71017265
		mov	eax, [edi+154h]
		mov	[ebp+var_188], 0
		mov	[esp+4], eax
		mov	eax, edi
		add	eax, 154h
		mov	[esp], eax
		call	sub_71047980

loc_71017265:				; CODE XREF: sub_710159D0+1866j
					; sub_710159D0+1870j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_188], 0
		mov	[esp], eax
		call	sub_710477B0
		mov	edx, [ebp+var_1B4]
		mov	[ebp+var_188], 0FFFFFFFFh
		mov	[esp], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71017292:				; CODE XREF: sub_710159D0+1825j
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_188], 0
		call	sub_710477B0
		jmp	loc_7101721F
; ---------------------------------------------------------------------------

loc_710172AC:				; CODE XREF: sub_710159D0+1804j
		lea	eax, [ebp+var_C8]
		mov	[esp], eax
		mov	[ebp+var_188], 0
		call	sub_710477B0
		jmp	loc_7101721F
; ---------------------------------------------------------------------------

loc_710172C9:				; CODE XREF: sub_710159D0+16A5j
		lea	ebx, [ebp+var_134]
		lea	eax, [ebp+var_BC]
		mov	[ebp+var_BC], offset aFontWeight ; "font-weight"
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	[ebp+var_188], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_7101738B
		mov	edi, [ebp+arg_0]
		mov	eax, [ebp+var_140]
		mov	[edi+0D0h], eax
		mov	eax, [ebp+var_13C]
		mov	[edi+0D4h], eax
		mov	eax, [ebp+var_138]
		mov	[edi+0D8h], eax
		jmp	loc_71015EB0	; jumptable 71015DF7 default case
; ---------------------------------------------------------------------------

loc_7101732A:				; CODE XREF: sub_710159D0+1758j
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_EC]
		mov	[ebp+var_EC], offset aOpacity_0	; "-opacity"
		mov	[esp], eax
		mov	[ebp+var_188], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_710173EC
		mov	edi, [ebp+arg_0]
		mov	eax, [ebp+var_140]
		mov	[edi+88h], eax
		mov	eax, [ebp+var_13C]
		mov	[edi+8Ch], eax
		mov	eax, [ebp+var_138]
		mov	[edi+90h], eax
		jmp	loc_71015EB0	; jumptable 71015DF7 default case
; ---------------------------------------------------------------------------

loc_7101738B:				; CODE XREF: sub_710159D0+1928j
		lea	eax, [ebp+var_134]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C0]
		mov	[ebp+var_C0], offset aFontVariant ; "font-variant"
		mov	[esp], eax
		mov	[ebp+var_188], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71015EB0	; jumptable 71015DF7 default case
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_140]
		mov	[edx+0DCh], eax
		mov	eax, [ebp+var_13C]
		mov	[edx+0E0h], eax
		mov	eax, [ebp+var_138]
		mov	[edx+0E4h], eax
		jmp	loc_71015EB0	; jumptable 71015DF7 default case
; ---------------------------------------------------------------------------

loc_710173EC:				; CODE XREF: sub_710159D0+1989j
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_F0]
		mov	[ebp+var_F0], offset aWidth_0 ;	"-width"
		mov	[esp], eax
		mov	[ebp+var_188], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71015EB0	; jumptable 71015DF7 default case
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_140]
		mov	[edx+94h], eax
		mov	eax, [ebp+var_13C]
		mov	[edx+98h], eax
		mov	eax, [ebp+var_138]
		mov	[edx+9Ch], eax
		jmp	loc_71015EB0	; jumptable 71015DF7 default case
; ---------------------------------------------------------------------------

loc_7101744D:				; CODE XREF: sub_710159D0+1700j
		lea	eax, [ebp+var_134]
		mov	[esp+4], eax
		lea	eax, [ebp+var_70]
		mov	[ebp+var_70], offset aMiterlimit ; "-miterlimit"
		mov	[esp], eax
		mov	[ebp+var_188], 6
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71017500
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+var_1A4]
		mov	edi, [ebp+var_1A0]
		mov	eax, [ebp+var_19C]
		mov	[edx+7Ch], ebx
		mov	[edx+80h], edi
		mov	[edx+84h], eax
		jmp	loc_71016654	; jumptable 710165EE default case
; ---------------------------------------------------------------------------

loc_710174A5:				; CODE XREF: sub_710159D0+17B0j
		lea	eax, [ebp+var_140]
		mov	[esp+4], eax
		lea	eax, [ebp+var_48]
		mov	[ebp+var_48], offset aFontStyle	; "font-style"
		mov	[esp], eax
		mov	[ebp+var_188], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_7101755B
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+var_1A4]
		mov	edi, [ebp+var_1A0]
		mov	eax, [ebp+var_19C]
		mov	[edx+0C4h], ebx
		mov	[edx+0C8h], edi
		mov	[edx+0CCh], eax
		jmp	loc_71016654	; jumptable 710165EE default case
; ---------------------------------------------------------------------------

loc_71017500:				; CODE XREF: sub_710159D0+1AA6j
		lea	eax, [ebp+var_134]
		mov	[esp+4], eax
		lea	eax, [ebp+var_74]
		mov	[ebp+var_74], offset aOpacity_0	; "-opacity"
		mov	[esp], eax
		mov	[ebp+var_188], 6
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_710175B6
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+var_1A4]
		mov	edi, [ebp+var_1A0]
		mov	eax, [ebp+var_19C]
		mov	[edx+88h], ebx
		mov	[edx+8Ch], edi
		mov	[edx+90h], eax
		jmp	loc_71016654	; jumptable 710165EE default case
; ---------------------------------------------------------------------------

loc_7101755B:				; CODE XREF: sub_710159D0+1AFEj
		lea	edx, [ebp+var_140]
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_4C], offset aFontWeight ; "font-weight"
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_188], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71017611
		mov	ebx, [ebp+arg_0]
		mov	edi, [ebp+var_1A4]
		mov	eax, [ebp+var_1A0]
		mov	edx, [ebp+var_19C]
		mov	[ebx+0D0h], edi
		mov	[ebx+0D4h], eax
		mov	[ebx+0D8h], edx
		jmp	loc_71016654	; jumptable 710165EE default case
; ---------------------------------------------------------------------------

loc_710175B6:				; CODE XREF: sub_710159D0+1B59j
		lea	eax, [ebp+var_134]
		mov	[esp+4], eax
		lea	eax, [ebp+var_78]
		mov	[ebp+var_78], offset aWidth_0 ;	"-width"
		mov	[esp], eax
		mov	[ebp+var_188], 6
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71016654	; jumptable 710165EE default case
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+var_1A4]
		mov	edi, [ebp+var_1A0]
		mov	eax, [ebp+var_19C]
		mov	[edx+94h], ebx
		mov	[edx+98h], edi
		mov	[edx+9Ch], eax
		jmp	loc_71016654	; jumptable 710165EE default case
; ---------------------------------------------------------------------------

loc_71017611:				; CODE XREF: sub_710159D0+1BB4j
		lea	ebx, [ebp+var_140]
		lea	eax, [ebp+var_50]
		mov	[ebp+var_50], offset aFontVariant ; "font-variant"
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	[ebp+var_188], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71016654	; jumptable 710165EE default case
		mov	edi, [ebp+arg_0]
		mov	eax, [ebp+var_1A4]
		mov	edx, [ebp+var_1A0]
		mov	ebx, [ebp+var_19C]
		mov	[edi+0DCh], eax
		mov	[edi+0E0h], edx
		mov	[edi+0E4h], ebx
		jmp	loc_71016654	; jumptable 710165EE default case
sub_710159D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71017670	proc near		; CODE XREF: sub_7101BB40+3FCp
					; sub_7101E100+2A2p ...

var_1AC		= dword	ptr -1ACh
var_1A8		= dword	ptr -1A8h
var_1A1		= byte ptr -1A1h
var_1A0		= dword	ptr -1A0h
var_19C		= byte ptr -19Ch
var_198		= dword	ptr -198h
var_184		= dword	ptr -184h
var_180		= dword	ptr -180h
var_17C		= dword	ptr -17Ch
var_178		= dword	ptr -178h
var_174		= dword	ptr -174h
var_160		= dword	ptr -160h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 1C8h
		mov	[ebp+var_1A8], eax
		lea	eax, [ebp+var_8]
		mov	[ebp+var_17C], eax
		lea	eax, [ebp+var_19C]
		mov	[ebp+var_1AC], edx
		mov	[ebp+var_1A0], ecx
		mov	[esp], eax
		mov	[ebp+var_184], offset sub_710525B0
		mov	[ebp+var_180], offset dword_710532F0
		mov	[ebp+var_178], offset sub_7101778E
		mov	[ebp+var_174], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+var_1A0]
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+var_1AC]
		mov	[esp+4], eax
		lea	eax, [ebp+var_160]
		mov	[esp], eax
		call	sub_710159D0
		mov	ecx, [ebp+var_1A0]
		lea	edx, [ebp+var_160]
		mov	eax, [ebp+var_1A8]
		mov	[ebp+var_198], 2
		call	sub_71011C90
		mov	[ebp+var_1A1], al
		mov	eax, [ebp+var_C]
		test	eax, eax
		jz	short loc_7101772A
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71017770

loc_7101772A:				; CODE XREF: sub_71017670+AEj
					; sub_71017670+11Cj
		mov	eax, [ebp+var_160]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71017753
		mov	eax, [ebp+var_160]
		mov	[ebp+var_198], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_71017753:				; CODE XREF: sub_71017670+C8j
		lea	eax, [ebp+var_19C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_1A1]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71017770:				; CODE XREF: sub_71017670+B8j
		mov	eax, [ebp+var_C]
		mov	[ebp+var_198], 1
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	sub_71047980
		jmp	short loc_7101772A
sub_71017670	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7101778E	proc near		; DATA XREF: sub_71017670+41o
		add	ebp, 8
		mov	eax, [ebp-194h]
		cmp	dword ptr [ebp-198h], 1
		mov	[ebp-1B0h], eax
		jz	short loc_710177D6
		lea	eax, [ebp-160h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-198h], 0
		call	sub_710477B0
		mov	eax, [ebp-1B0h]
		mov	dword ptr [ebp-198h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_710177D6:				; CODE XREF: sub_7101778E+16j
		lea	eax, [ebp-160h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-198h], 0
		call	sub_7103C3C0
		mov	eax, [ebp-1B0h]
		mov	dword ptr [ebp-198h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7101778E	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp-18h]
		sub	esp, 1CCh
		mov	[ebp-16Ch], eax
		lea	eax, [ebp-18Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-174h], offset sub_710525B0
		mov	dword ptr [ebp-170h], offset dword_710532F8
		mov	dword ptr [ebp-168h], offset loc_71018FF2
		mov	[ebp-164h], esp
		call	_Unwind_SjLj_Register
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	edx, [ebp+8]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ebx, [ebp+8]
		mov	dword ptr [ebx+4], 0
		mov	dword ptr [ebx+8], 0
		mov	dword ptr [ebx+0Ch], 0
		mov	dword ptr [ebx+10h], 0
		mov	dword ptr [ebx+14h], 0
		mov	dword ptr [ebx+18h], 0
		mov	dword ptr [ebx+1Ch], 0
		mov	dword ptr [ebx+20h], 0
		mov	dword ptr [ebx+24h], 0
		mov	dword ptr [ebx+28h], 0
		mov	dword ptr [ebx+2Ch], 0
		mov	dword ptr [ebx+30h], 0
		mov	dword ptr [ebx+34h], 0
		mov	dword ptr [ebx+38h], 0
		mov	dword ptr [ebx+3Ch], 0
		mov	dword ptr [ebx+40h], 0
		mov	dword ptr [ebx+44h], 0
		mov	dword ptr [ebx+48h], 0
		mov	dword ptr [ebx+4Ch], 0
		mov	dword ptr [ebx+50h], 0
		mov	dword ptr [ebx+54h], 0
		mov	dword ptr [ebx+58h], 0
		mov	dword ptr [ebx+5Ch], 0
		mov	dword ptr [ebx+60h], 0
		mov	dword ptr [ebx+64h], 0
		mov	dword ptr [ebx+68h], 0
		mov	dword ptr [ebx+6Ch], 0
		mov	dword ptr [ebx+70h], 0
		mov	dword ptr [ebx+74h], 0
		mov	dword ptr [ebx+78h], 0
		mov	dword ptr [ebx+7Ch], 0
		mov	dword ptr [ebx+80h], 0
		mov	dword ptr [ebx+84h], 0
		mov	dword ptr [ebx+88h], 0
		mov	dword ptr [ebx+8Ch], 0
		mov	dword ptr [ebx+90h], 0
		mov	dword ptr [ebx+94h], 0
		mov	dword ptr [ebx+98h], 0
		mov	dword ptr [ebx+9Ch], 0
		mov	dword ptr [ebx+0A0h], 0
		mov	dword ptr [ebx+0A4h], 0
		mov	dword ptr [ebx+0A8h], 0
		mov	dword ptr [ebx+0ACh], 0
		mov	dword ptr [ebx+0B0h], 0
		mov	dword ptr [ebx+0B4h], 0
		mov	dword ptr [ebx+0B8h], 0
		mov	dword ptr [ebx+0BCh], 0
		mov	dword ptr [ebx+0C0h], 0
		mov	dword ptr [ebx+0C4h], 0
		mov	dword ptr [ebx+0C8h], 0
		mov	dword ptr [ebx+0CCh], 0
		mov	dword ptr [ebx+0D0h], 0
		mov	dword ptr [ebx+0D4h], 0
		mov	dword ptr [ebx+0D8h], 0
		mov	dword ptr [ebx+0DCh], 0
		mov	dword ptr [ebx+0E0h], 0
		mov	dword ptr [ebx+0E4h], 0
		mov	dword ptr [ebx+0E8h], 0
		mov	dword ptr [ebx+0ECh], 0
		mov	dword ptr [ebx+0F0h], 0
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	dword ptr [ebx+0F4h], 0
		mov	dword ptr [ebx+0F8h], 0
		mov	dword ptr [ebx+0FCh], 0
		mov	[ebx+154h], eax
		mov	dword ptr [ebx+100h], 0
		mov	dword ptr [ebx+104h], 0
		mov	dword ptr [ebx+108h], 0
		mov	dword ptr [ebx+10Ch], 0
		mov	dword ptr [ebx+110h], 0
		mov	dword ptr [ebx+114h], 0
		mov	dword ptr [ebx+118h], 0
		mov	dword ptr [ebx+11Ch], 0
		mov	dword ptr [ebx+120h], 0
		mov	dword ptr [ebx+124h], 0
		mov	dword ptr [ebx+128h], 0
		mov	dword ptr [ebx+12Ch], 0
		mov	dword ptr [ebx+130h], 0
		mov	dword ptr [ebx+134h], 0
		mov	dword ptr [ebx+138h], 0
		mov	dword ptr [ebx+13Ch], 0
		mov	dword ptr [ebx+140h], 0
		mov	dword ptr [ebx+144h], 0
		mov	dword ptr [ebx+148h], 0
		mov	dword ptr [ebx+14Ch], 0
		mov	dword ptr [ebx+150h], 0
		lock inc dword ptr [eax]
		setnz	dl
		mov	edi, [ebp+0Ch]
		lea	eax, [ebp-11Ch]
		lea	edx, [ebp-1Ch]
		mov	dword ptr [ebp-1Ch], offset aStyle ; "style"
		mov	[esp+8], edx
		mov	[esp+4], edi
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 0Bh
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		mov	eax, [ebp-114h]
		sub	esp, 4
		test	eax, eax
		jnz	loc_71018335

loc_71017BA5:				; CODE XREF: .text:710183A6j
					; .text:710184B3j
		mov	edx, [ebp+0Ch]
		mov	eax, [edx]
		mov	edi, [eax+8]
		test	edi, edi
		jle	loc_71017D0B
		mov	edi, [ebp+8]
		mov	dword ptr [ebp-190h], 0
		mov	[ebp-1A8h], edi

loc_71017BC8:				; CODE XREF: .text:71017D05j
		mov	eax, [ebp+0Ch]
		imul	edx, [ebp-190h], 38h
		mov	ecx, [eax]
		lea	eax, [ecx+edx]
		mov	ebx, [eax+30h]
		lea	edi, [ecx+edx+28h]
		mov	esi, [eax+2Ch]
		mov	[ebp-1BCh], edi
		mov	[ebp-134h], edi
		test	ebx, ebx
		mov	[ebp-130h], esi
		mov	[ebp-12Ch], ebx
		jz	loc_71017CF0	; jumptable 71017C37 default case
		lea	edx, [ecx+edx+34h]
		mov	edi, [eax+3Ch]
		mov	[ebp-140h], edx
		mov	edx, [eax+38h]
		mov	eax, [eax+28h]
		mov	[ebp-138h], edi
		mov	[ebp-13Ch], edx
		mov	eax, [eax+0Ch]
		movzx	eax, word ptr [eax+esi*2]
		sub	eax, 63h
		cmp	ax, 15h		; switch 22 cases
		ja	loc_71017CF0	; jumptable 71017C37 default case
		movzx	eax, ax
		jmp	ds:off_71059770[eax*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_71017C40:				; CODE XREF: .text:71017C37j
					; DATA XREF: .rdata:off_71059770o
		lea	edx, [ebp-134h]	; jumptable 71017C37 case 12
		lea	eax, [ebp-0CCh]
		mov	dword ptr [ebp-0CCh], offset aOpacity ;	"opacity"
		mov	[esp+4], edx
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	short loc_71017C98
		mov	ebx, [ebp+8]
		mov	eax, [ebp-140h]
		mov	[ebx+10Ch], eax
		mov	eax, [ebp-13Ch]
		mov	[ebx+110h], eax
		mov	eax, [ebp-138h]
		mov	[ebx+114h], eax

loc_71017C98:				; CODE XREF: .text:71017C6Fj
		lea	edi, [ebp-134h]
		lea	eax, [ebp-0D0h]
		mov	dword ptr [ebp-0D0h], offset aOffset ; "offset"
		mov	[esp+4], edi
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	short loc_71017CF0 ; jumptable 71017C37	default	case
		mov	edx, [ebp+8]
		mov	eax, [ebp-140h]
		mov	[edx+130h], eax
		mov	eax, [ebp-13Ch]
		mov	[edx+134h], eax
		mov	eax, [ebp-138h]
		mov	[edx+138h], eax

loc_71017CF0:				; CODE XREF: .text:71017BFBj
					; .text:71017C2Ej ...
		mov	edi, [ebp+0Ch]	; jumptable 71017C37 default case
		add	dword ptr [ebp-190h], 1
		mov	edx, [ebp-190h]
		mov	eax, [edi]
		cmp	edx, [eax+8]
		jl	loc_71017BC8

loc_71017D0B:				; CODE XREF: .text:71017BAFj
		lea	eax, [ebp-18Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_71017D21:				; CODE XREF: .text:71017C37j
					; DATA XREF: .rdata:off_71059770o
		lea	ebx, [ebp-134h]	; jumptable 71017C37 case 21
		lea	edi, [ebp-10Ch]
		mov	dword ptr [ebp-10Ch], offset aXmlId ; "xml:id"
		mov	[esp+4], ebx
		mov	[esp], edi
		mov	dword ptr [ebp-188h], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	short loc_71017CF0 ; jumptable 71017C37	default	case
		mov	edx, [ebp+8]
		mov	eax, [edx]
		mov	ebx, [eax+8]
		test	ebx, ebx
		jnz	short loc_71017CF0 ; jumptable 71017C37	default	case
		lea	ebx, [ebp-140h]
		lea	edi, [ebp-110h]
		mov	[esp+4], ebx
		mov	[esp], edi
		call	ds:_ZNK10QStringRef8toStringEv
		mov	edx, [ebp-1A8h]
		sub	esp, 4
		mov	[esp+4], edi
		mov	dword ptr [ebp-188h], 1
		mov	[esp], edx
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp-110h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_71017CF0	; jumptable 71017C37 default case
		mov	eax, [ebp-110h]
		mov	dword ptr [ebp-188h], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71017CF0	; jumptable 71017C37 default case
; ---------------------------------------------------------------------------
		align 10h

loc_71017DD0:				; CODE XREF: .text:71017C37j
					; DATA XREF: .rdata:off_71059770o
		lea	ebx, [ebp-134h]	; jumptable 71017C37 case 19
		lea	eax, [ebp-104h]
		mov	dword ptr [ebp-104h], offset aVectorEffect ; "vector-effect"
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71018120
		mov	edi, [ebp+8]
		mov	eax, [ebp-140h]
		mov	[edi+0A0h], eax
		mov	eax, [ebp-13Ch]
		mov	[edi+0A4h], eax
		mov	eax, [ebp-138h]
		mov	[edi+0A8h], eax
		jmp	loc_71017CF0	; jumptable 71017C37 default case
; ---------------------------------------------------------------------------

loc_71017E31:				; CODE XREF: .text:71017C37j
					; DATA XREF: .rdata:off_71059770o
		lea	ebx, [ebp-134h]	; jumptable 71017C37 case 17
		lea	eax, [ebp-0FCh]
		mov	dword ptr [ebp-0FCh], offset aTextAnchor ; "text-anchor"
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_710180B8
		mov	edi, [ebp+8]
		mov	eax, [ebp-140h]
		mov	[edi+0E8h], eax
		mov	eax, [ebp-13Ch]
		mov	[edi+0ECh], eax
		mov	eax, [ebp-138h]
		mov	[edi+0F0h], eax
		jmp	loc_71017CF0	; jumptable 71017C37 default case
; ---------------------------------------------------------------------------

loc_71017E92:				; CODE XREF: .text:71017C37j
					; DATA XREF: .rdata:off_71059770o
		lea	ebx, [ebp-134h]	; jumptable 71017C37 case 6
		lea	eax, [ebp-0C4h]
		mov	dword ptr [ebp-0C4h], offset aId ; "id"
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71017CF0	; jumptable 71017C37 default case
		lea	eax, [ebp-0C8h]
		lea	edi, [ebp-140h]
		mov	[esp+4], edi
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp-0C8h]
		mov	[esp+4], eax
		mov	eax, [ebp-1A8h]
		mov	dword ptr [ebp-188h], 4
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp-0C8h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_71017CF0	; jumptable 71017C37 default case
		mov	eax, [ebp-0C8h]
		mov	dword ptr [ebp-188h], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71017CF0	; jumptable 71017C37 default case
; ---------------------------------------------------------------------------

loc_71017F38:				; CODE XREF: .text:71017C37j
					; DATA XREF: .rdata:off_71059770o
		cmp	ebx, 5		; jumptable 71017C37 case 16
		jg	loc_710181E0

loc_71017F41:				; CODE XREF: .text:7101822Ej
		lea	edi, [ebp-134h]
		lea	eax, [ebp-0F4h]
		mov	dword ptr [ebp-0F4h], offset aStopColor	; "stop-color"
		mov	[esp+4], edi
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71018993
		mov	ebx, [ebp+8]
		mov	eax, [ebp-140h]
		mov	[ebx+13Ch], eax
		mov	eax, [ebp-13Ch]
		mov	[ebx+140h], eax
		mov	eax, [ebp-138h]
		mov	[ebx+144h], eax
		jmp	loc_71017CF0	; jumptable 71017C37 default case
; ---------------------------------------------------------------------------

loc_71017FA2:				; CODE XREF: .text:71017C37j
					; DATA XREF: .rdata:off_71059770o
		lea	eax, [ebp-134h]	; jumptable 71017C37 case 1
		mov	[esp+4], eax
		lea	eax, [ebp-0A0h]
		mov	dword ptr [ebp-0A0h], offset aDisplay ;	"display"
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71017CF0	; jumptable 71017C37 default case
		mov	edx, [ebp+8]
		mov	eax, [ebp-140h]
		mov	[edx+124h], eax
		mov	eax, [ebp-13Ch]
		mov	[edx+128h], eax
		mov	eax, [ebp-138h]
		mov	[edx+12Ch], eax
		jmp	loc_71017CF0	; jumptable 71017C37 default case
; ---------------------------------------------------------------------------

loc_71018003:				; CODE XREF: .text:71017C37j
					; DATA XREF: .rdata:off_71059770o
		lea	ebx, [ebp-134h]	; jumptable 71017C37 case 3
		lea	eax, [ebp-0A4h]
		mov	dword ptr [ebp-0A4h], offset aFill ; "fill"
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71018285
		mov	edi, [ebp+8]
		mov	eax, [ebp-140h]
		mov	[edi+1Ch], eax
		mov	eax, [ebp-13Ch]
		mov	[edi+20h], eax
		mov	eax, [ebp-138h]
		mov	[edi+24h], eax
		jmp	loc_71017CF0	; jumptable 71017C37 default case
; ---------------------------------------------------------------------------
		align 10h

loc_71018060:				; CODE XREF: .text:71017C37j
					; DATA XREF: .rdata:off_71059770o
		lea	ebx, [ebp-134h]	; jumptable 71017C37 case 0
		lea	eax, [ebp-94h]
		mov	dword ptr [ebp-94h], offset aColor ; "color"
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71018181
		mov	edi, [ebp+8]
		mov	eax, [ebp-140h]
		mov	[edi+4], eax
		mov	eax, [ebp-13Ch]
		mov	[edi+8], eax
		mov	eax, [ebp-138h]
		mov	[edi+0Ch], eax
		jmp	loc_71017CF0	; jumptable 71017C37 default case
; ---------------------------------------------------------------------------

loc_710180B8:				; CODE XREF: .text:71017E60j
		lea	eax, [ebp-134h]
		mov	[esp+4], eax
		lea	eax, [ebp-100h]
		mov	dword ptr [ebp-100h], offset aTransform	; "transform"
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71017CF0	; jumptable 71017C37 default case
		mov	edx, [ebp+8]
		mov	eax, [ebp-140h]
		mov	[edx+0F4h], eax
		mov	eax, [ebp-13Ch]
		mov	[edx+0F8h], eax
		mov	eax, [ebp-138h]
		mov	[edx+0FCh], eax
		jmp	loc_71017CF0	; jumptable 71017C37 default case
; ---------------------------------------------------------------------------
		align 10h

loc_71018120:				; CODE XREF: .text:71017DFFj
		lea	eax, [ebp-134h]
		mov	[esp+4], eax
		lea	eax, [ebp-108h]
		mov	dword ptr [ebp-108h], offset aVisibility ; "visibility"
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71017CF0	; jumptable 71017C37 default case
		mov	edx, [ebp+8]
		mov	eax, [ebp-140h]
		mov	[edx+100h], eax
		mov	eax, [ebp-13Ch]
		mov	[edx+104h], eax
		mov	eax, [ebp-138h]
		mov	[edx+108h], eax
		jmp	loc_71017CF0	; jumptable 71017C37 default case
; ---------------------------------------------------------------------------

loc_71018181:				; CODE XREF: .text:7101808Fj
		lea	eax, [ebp-134h]
		mov	[esp+4], eax
		lea	eax, [ebp-98h]
		mov	dword ptr [ebp-98h], offset aColorOpacity ; "color-opacity"
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71018932
		mov	edx, [ebp+8]
		mov	eax, [ebp-140h]
		mov	[edx+10h], eax
		mov	eax, [ebp-13Ch]
		mov	[edx+14h], eax
		mov	eax, [ebp-138h]
		mov	[edx+18h], eax
		jmp	loc_71017CF0	; jumptable 71017C37 default case
; ---------------------------------------------------------------------------
		align 10h

loc_710181E0:				; CODE XREF: .text:71017F3Bj
		mov	ebx, [ebp-1BCh]
		lea	eax, [ebp-14Ch]
		add	esi, 1
		mov	[esp+4], eax
		lea	eax, [ebp-0D4h]
		mov	dword ptr [ebp-0D4h], offset aTroke ; "troke"
		mov	[ebp-148h], esi
		mov	[ebp-14Ch], ebx
		mov	dword ptr [ebp-144h], 5
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 3
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71017F41
		mov	eax, [ebp-12Ch]
		mov	edx, [ebp-130h]
		mov	ecx, [ebp-134h]
		sub	eax, 6
		add	edx, 6
		test	eax, eax
		mov	[ebp-158h], ecx
		mov	[ebp-154h], edx
		mov	[ebp-150h], eax
		jnz	short loc_710182DD
		mov	edi, [ebp+8]
		mov	eax, [ebp-140h]
		mov	[edi+40h], eax
		mov	eax, [ebp-13Ch]
		mov	[edi+44h], eax
		mov	eax, [ebp-138h]
		mov	[edi+48h], eax
		jmp	loc_71017CF0	; jumptable 71017C37 default case
; ---------------------------------------------------------------------------

loc_71018285:				; CODE XREF: .text:71018032j
		lea	eax, [ebp-134h]
		mov	[esp+4], eax
		lea	eax, [ebp-0A8h]
		mov	dword ptr [ebp-0A8h], offset aFillRule ; "fill-rule"
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_710189F4
		mov	edx, [ebp+8]
		mov	eax, [ebp-140h]
		mov	[edx+28h], eax
		mov	eax, [ebp-13Ch]
		mov	[edx+2Ch], eax
		mov	eax, [ebp-138h]
		mov	[edx+30h], eax
		jmp	loc_71017CF0	; jumptable 71017C37 default case
; ---------------------------------------------------------------------------

loc_710182DD:				; CODE XREF: .text:71018260j
		lea	eax, [ebp-158h]
		mov	[esp+4], eax
		lea	eax, [ebp-0D8h]
		mov	dword ptr [ebp-0D8h], offset aDasharray	; "-dasharray"
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71018BC7
		mov	edx, [ebp+8]
		mov	eax, [ebp-140h]
		mov	[edx+4Ch], eax
		mov	eax, [ebp-13Ch]
		mov	[edx+50h], eax
		mov	eax, [ebp-138h]
		mov	[edx+54h], eax
		jmp	loc_71017CF0	; jumptable 71017C37 default case
; ---------------------------------------------------------------------------

loc_71018335:				; CODE XREF: .text:71017B9Fj
		mov	ebx, [ebp+8]
		lea	eax, [ebp-20h]
		lea	edx, [ebp-11Ch]
		mov	[esp+4], edx
		mov	[esp], eax
		add	ebx, 154h
		mov	[ebp-1ACh], ebx
		mov	dword ptr [ebp-188h], 0Ah
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp-20h]
		mov	[esp+4], eax
		mov	eax, [ebp+10h]
		mov	[esp+8], ebx
		mov	dword ptr [ebp-188h], 9
		mov	[esp], eax
		call	sub_71015150
		mov	eax, [ebp-20h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71018A4C

loc_71018398:				; CODE XREF: .text:71018A62j
		mov	edi, [ebp+8]
		mov	eax, [edi+154h]
		mov	esi, [eax+8]
		test	esi, esi
		jle	loc_71017BA5
		mov	eax, ds:_ZeqRK13QLatin1StringRK10QStringRef
		mov	dword ptr [ebp-194h], 0
		mov	[ebp-1B0h], eax

loc_710183C1:				; CODE XREF: .text:710184ADj
		mov	edx, [ebp+8]
		mov	edi, [ebp-194h]
		mov	ebx, [edx+154h]
		lea	ecx, [edi+edi*2]
		shl	ecx, 3
		lea	eax, [ebx+ecx]
		mov	edx, [eax+18h]
		lea	ecx, [ebx+ecx+10h]
		mov	esi, [eax+14h]
		mov	[ebp-140h], ecx
		mov	[ebp-138h], edx
		test	edx, edx
		mov	[ebp-13Ch], esi
		mov	ebx, [eax+24h]
		mov	edi, [eax+20h]
		mov	[ebp-19Ch], ebx
		mov	[ebp-1A0h], edi
		jz	loc_71018494	; jumptable 7101842E default case
		mov	eax, [eax+10h]
		lea	ebx, [ecx+0Ch]
		mov	[ebp-1A4h], ebx
		mov	eax, [eax+0Ch]
		movzx	eax, word ptr [eax+esi*2]
		sub	eax, 63h
		cmp	ax, 13h		; switch 20 cases
		ja	short loc_71018494 ; jumptable 7101842E	default	case
		movzx	eax, ax
		jmp	ds:off_710597C8[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_71018435:				; CODE XREF: .text:7101842Ej
					; DATA XREF: .rdata:off_710597C8o
		cmp	edx, 5		; jumptable 7101842E case 16
		jg	loc_71018895

loc_7101843E:				; CODE XREF: .text:710188D7j
		lea	ebx, [ebp-140h]
		lea	eax, [ebp-7Ch]
		mov	dword ptr [ebp-7Ch], offset aStopColor ; "stop-color"
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71018C1F
		mov	edx, [ebp+8]
		mov	ebx, [ebp-1A4h]
		mov	edi, [ebp-1A0h]
		mov	eax, [ebp-19Ch]
		mov	[edx+13Ch], ebx
		mov	[edx+140h], edi
		mov	[edx+144h], eax

loc_71018494:				; CODE XREF: .text:71018409j
					; .text:71018429j ...
		mov	edx, [ebp+8]	; jumptable 7101842E default case
		add	dword ptr [ebp-194h], 1
		mov	ebx, [ebp-194h]
		mov	eax, [edx+154h]
		cmp	ebx, [eax+8]
		jl	loc_710183C1
		jmp	loc_71017BA5
; ---------------------------------------------------------------------------

loc_710184B8:				; CODE XREF: .text:7101842Ej
					; DATA XREF: .rdata:off_710597C8o
		lea	eax, [ebp-140h]	; jumptable 7101842E case 19
		lea	edx, [ebp-8Ch]
		mov	dword ptr [ebp-8Ch], offset aVectorEffect ; "vector-effect"
		mov	[esp+4], eax
		mov	[esp], edx
		mov	dword ptr [ebp-188h], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_710186D4
		mov	ebx, [ebp+8]
		mov	edi, [ebp-1A4h]
		mov	eax, [ebp-1A0h]
		mov	edx, [ebp-19Ch]
		mov	[ebx+0A0h], edi
		mov	[ebx+0A4h], eax
		mov	[ebx+0A8h], edx
		jmp	loc_71018494	; jumptable 7101842E default case
; ---------------------------------------------------------------------------

loc_71018519:				; CODE XREF: .text:7101842Ej
					; DATA XREF: .rdata:off_710597C8o
		lea	ebx, [ebp-140h]	; jumptable 7101842E case 17
		lea	eax, [ebp-84h]
		mov	dword ptr [ebp-84h], offset aTextAnchor	; "text-anchor"
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71018735
		mov	edi, [ebp+8]
		mov	eax, [ebp-1A4h]
		mov	edx, [ebp-1A0h]
		mov	ebx, [ebp-19Ch]
		mov	[edi+0E8h], eax
		mov	[edi+0ECh], edx
		mov	[edi+0F0h], ebx
		jmp	loc_71018494	; jumptable 7101842E default case
; ---------------------------------------------------------------------------

loc_7101857A:				; CODE XREF: .text:7101842Ej
					; DATA XREF: .rdata:off_710597C8o
		lea	edi, [ebp-140h]	; jumptable 7101842E case 12
		lea	eax, [ebp-54h]
		mov	dword ptr [ebp-54h], offset aOpacity ; "opacity"
		mov	[esp+4], edi
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_710187E8
		mov	eax, [ebp+8]
		mov	edx, [ebp-1A4h]
		mov	ebx, [ebp-1A0h]
		mov	edi, [ebp-19Ch]
		mov	[eax+10Ch], edx
		mov	[eax+110h], ebx
		mov	[eax+114h], edi
		jmp	loc_71018494	; jumptable 7101842E default case
; ---------------------------------------------------------------------------

loc_710185D5:				; CODE XREF: .text:7101842Ej
					; DATA XREF: .rdata:off_710597C8o
		lea	edi, [ebp-140h]	; jumptable 7101842E case 3
		lea	eax, [ebp-34h]
		mov	dword ptr [ebp-34h], offset aFill ; "fill"
		mov	[esp+4], edi
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71018843
		mov	eax, [ebp+8]
		mov	edx, [ebp-1A4h]
		mov	ebx, [ebp-1A0h]
		mov	edi, [ebp-19Ch]
		mov	[eax+1Ch], edx
		mov	[eax+20h], ebx
		mov	[eax+24h], edi
		jmp	loc_71018494	; jumptable 7101842E default case
; ---------------------------------------------------------------------------

loc_71018627:				; CODE XREF: .text:7101842Ej
					; DATA XREF: .rdata:off_710597C8o
		lea	ebx, [ebp-140h]	; jumptable 7101842E case 1
		lea	eax, [ebp-30h]
		mov	dword ptr [ebp-30h], offset aDisplay ; "display"
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71018494	; jumptable 7101842E default case
		mov	edi, [ebp+8]
		mov	eax, [ebp-1A4h]
		mov	edx, [ebp-1A0h]
		mov	ebx, [ebp-19Ch]
		mov	[edi+124h], eax
		mov	[edi+128h], edx
		mov	[edi+12Ch], ebx
		jmp	loc_71018494	; jumptable 7101842E default case
; ---------------------------------------------------------------------------

loc_71018682:				; CODE XREF: .text:7101842Ej
					; DATA XREF: .rdata:off_710597C8o
		lea	edi, [ebp-140h]	; jumptable 7101842E case 0
		lea	eax, [ebp-24h]
		mov	dword ptr [ebp-24h], offset aColor ; "color"
		mov	[esp+4], edi
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71018796
		mov	eax, [ebp+8]
		mov	edx, [ebp-1A4h]
		mov	ebx, [ebp-1A0h]
		mov	edi, [ebp-19Ch]
		mov	[eax+4], edx
		mov	[eax+8], ebx
		mov	[eax+0Ch], edi
		jmp	loc_71018494	; jumptable 7101842E default case
; ---------------------------------------------------------------------------

loc_710186D4:				; CODE XREF: .text:710184E7j
		lea	ebx, [ebp-140h]
		lea	edi, [ebp-90h]
		mov	dword ptr [ebp-90h], offset aVisibility	; "visibility"
		mov	[esp+4], ebx
		mov	[esp], edi
		mov	dword ptr [ebp-188h], 8
		call	dword ptr [ebp-1B0h]
		test	al, al
		jz	loc_71018494	; jumptable 7101842E default case
		mov	eax, [ebp+8]
		mov	edx, [ebp-1A4h]
		mov	ebx, [ebp-1A0h]
		mov	edi, [ebp-19Ch]
		mov	[eax+100h], edx
		mov	[eax+104h], ebx
		mov	[eax+108h], edi
		jmp	loc_71018494	; jumptable 7101842E default case
; ---------------------------------------------------------------------------

loc_71018735:				; CODE XREF: .text:71018548j
		lea	edi, [ebp-140h]
		lea	eax, [ebp-88h]
		mov	dword ptr [ebp-88h], offset aTransform ; "transform"
		mov	[esp+4], edi
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71018494	; jumptable 7101842E default case
		mov	eax, [ebp+8]
		mov	edx, [ebp-1A4h]
		mov	ebx, [ebp-1A0h]
		mov	edi, [ebp-19Ch]
		mov	[eax+0F4h], edx
		mov	[eax+0F8h], ebx
		mov	[eax+0FCh], edi
		jmp	loc_71018494	; jumptable 7101842E default case
; ---------------------------------------------------------------------------

loc_71018796:				; CODE XREF: .text:710186ABj
		lea	eax, [ebp-140h]
		mov	[esp+4], eax
		lea	eax, [ebp-28h]
		mov	dword ptr [ebp-28h], offset aColorOpacity ; "color-opacity"
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71018AB9
		mov	edx, [ebp+8]
		mov	ebx, [ebp-1A4h]
		mov	edi, [ebp-1A0h]
		mov	eax, [ebp-19Ch]
		mov	[edx+10h], ebx
		mov	[edx+14h], edi
		mov	[edx+18h], eax
		jmp	loc_71018494	; jumptable 7101842E default case
; ---------------------------------------------------------------------------

loc_710187E8:				; CODE XREF: .text:710185A3j
		lea	eax, [ebp-140h]
		mov	[esp+4], eax
		lea	eax, [ebp-58h]
		mov	dword ptr [ebp-58h], offset aOffset ; "offset"
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71018494	; jumptable 7101842E default case
		mov	edx, [ebp+8]
		mov	ebx, [ebp-1A4h]
		mov	edi, [ebp-1A0h]
		mov	eax, [ebp-19Ch]
		mov	[edx+130h], ebx
		mov	[edx+134h], edi
		mov	[edx+138h], eax
		jmp	loc_71018494	; jumptable 7101842E default case
; ---------------------------------------------------------------------------

loc_71018843:				; CODE XREF: .text:710185FEj
		lea	eax, [ebp-140h]
		mov	[esp+4], eax
		lea	eax, [ebp-38h]
		mov	dword ptr [ebp-38h], offset aFillRule ;	"fill-rule"
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71018A67
		mov	edx, [ebp+8]
		mov	ebx, [ebp-1A4h]
		mov	edi, [ebp-1A0h]
		mov	eax, [ebp-19Ch]
		mov	[edx+28h], ebx
		mov	[edx+2Ch], edi
		mov	[edx+30h], eax
		jmp	loc_71018494	; jumptable 7101842E default case
; ---------------------------------------------------------------------------

loc_71018895:				; CODE XREF: .text:71018438j
		lea	eax, [ebp-128h]
		add	esi, 1
		mov	[esp+4], eax
		lea	eax, [ebp-5Ch]
		mov	dword ptr [ebp-5Ch], offset aTroke ; "troke"
		mov	[ebp-128h], ecx
		mov	[ebp-124h], esi
		mov	dword ptr [ebp-120h], 5
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 7
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_7101843E
		mov	eax, [ebp-138h]
		mov	edx, [ebp-13Ch]
		mov	ecx, [ebp-140h]
		sub	eax, 6
		add	edx, 6
		test	eax, eax
		mov	[ebp-134h], ecx
		mov	[ebp-130h], edx
		mov	[ebp-12Ch], eax
		jnz	loc_71018B75
		mov	edx, [ebp+8]
		mov	ebx, [ebp-1A4h]
		mov	edi, [ebp-1A0h]
		mov	eax, [ebp-19Ch]
		mov	[edx+40h], ebx
		mov	[edx+44h], edi
		mov	[edx+48h], eax
		jmp	loc_71018494	; jumptable 7101842E default case
; ---------------------------------------------------------------------------

loc_71018932:				; CODE XREF: .text:710181B0j
		lea	ebx, [ebp-134h]
		lea	eax, [ebp-9Ch]
		mov	dword ptr [ebp-9Ch], offset aCompOp ; "comp-op"
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71017CF0	; jumptable 71017C37 default case
		mov	edi, [ebp+8]
		mov	eax, [ebp-140h]
		mov	[edi+118h], eax
		mov	eax, [ebp-13Ch]
		mov	[edi+11Ch], eax
		mov	eax, [ebp-138h]
		mov	[edi+120h], eax
		jmp	loc_71017CF0	; jumptable 71017C37 default case
; ---------------------------------------------------------------------------

loc_71018993:				; CODE XREF: .text:71017F70j
		lea	edi, [ebp-134h]
		lea	eax, [ebp-0F8h]
		mov	dword ptr [ebp-0F8h], offset aStopOpacity ; "stop-opacity"
		mov	[esp+4], edi
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71017CF0	; jumptable 71017C37 default case
		mov	edx, [ebp+8]
		mov	eax, [ebp-140h]
		mov	[edx+148h], eax
		mov	eax, [ebp-13Ch]
		mov	[edx+14Ch], eax
		mov	eax, [ebp-138h]
		mov	[edx+150h], eax
		jmp	loc_71017CF0	; jumptable 71017C37 default case
; ---------------------------------------------------------------------------

loc_710189F4:				; CODE XREF: .text:710182B4j
		lea	ebx, [ebp-134h]
		lea	eax, [ebp-0ACh]
		mov	dword ptr [ebp-0ACh], offset aFillOpacity ; "fill-opacity"
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71018B14
		mov	edi, [ebp+8]
		mov	eax, [ebp-140h]
		mov	[edi+34h], eax
		mov	eax, [ebp-13Ch]
		mov	[edi+38h], eax
		mov	eax, [ebp-138h]
		mov	[edi+3Ch], eax
		jmp	loc_71017CF0	; jumptable 71017C37 default case
; ---------------------------------------------------------------------------

loc_71018A4C:				; CODE XREF: .text:71018392j
		mov	eax, [ebp-20h]
		mov	dword ptr [ebp-188h], 0Ah
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71018398
; ---------------------------------------------------------------------------

loc_71018A67:				; CODE XREF: .text:7101886Cj
		lea	edx, [ebp-140h]
		lea	eax, [ebp-3Ch]
		mov	dword ptr [ebp-3Ch], offset aFillOpacity ; "fill-opacity"
		mov	[esp+4], edx
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71018DD3
		mov	ebx, [ebp+8]
		mov	edi, [ebp-1A4h]
		mov	eax, [ebp-1A0h]
		mov	edx, [ebp-19Ch]
		mov	[ebx+34h], edi
		mov	[ebx+38h], eax
		mov	[ebx+3Ch], edx
		jmp	loc_71018494	; jumptable 7101842E default case
; ---------------------------------------------------------------------------

loc_71018AB9:				; CODE XREF: .text:710187BFj
		lea	edx, [ebp-140h]
		lea	eax, [ebp-2Ch]
		mov	dword ptr [ebp-2Ch], offset aCompOp ; "comp-op"
		mov	[esp+4], edx
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71018494	; jumptable 7101842E default case
		mov	ebx, [ebp+8]
		mov	edi, [ebp-1A4h]
		mov	eax, [ebp-1A0h]
		mov	edx, [ebp-19Ch]
		mov	[ebx+118h], edi
		mov	[ebx+11Ch], eax
		mov	[ebx+120h], edx
		jmp	loc_71018494	; jumptable 7101842E default case
; ---------------------------------------------------------------------------

loc_71018B14:				; CODE XREF: .text:71018A23j
		lea	eax, [ebp-134h]
		mov	[esp+4], eax
		lea	eax, [ebp-0B0h]
		mov	dword ptr [ebp-0B0h], offset aFontFamily ; "font-family"
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71018CCC
		mov	edx, [ebp+8]
		mov	eax, [ebp-140h]
		mov	[edx+0ACh], eax
		mov	eax, [ebp-13Ch]
		mov	[edx+0B0h], eax
		mov	eax, [ebp-138h]
		mov	[edx+0B4h], eax
		jmp	loc_71017CF0	; jumptable 71017C37 default case
; ---------------------------------------------------------------------------

loc_71018B75:				; CODE XREF: .text:71018909j
		lea	eax, [ebp-134h]
		mov	[esp+4], eax
		lea	eax, [ebp-60h]
		mov	dword ptr [ebp-60h], offset aDasharray ; "-dasharray"
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 6
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71018C7A
		mov	edx, [ebp+8]
		mov	ebx, [ebp-1A4h]
		mov	edi, [ebp-1A0h]
		mov	eax, [ebp-19Ch]
		mov	[edx+4Ch], ebx
		mov	[edx+50h], edi
		mov	[edx+54h], eax
		jmp	loc_71018494	; jumptable 7101842E default case
; ---------------------------------------------------------------------------

loc_71018BC7:				; CODE XREF: .text:7101830Cj
		lea	eax, [ebp-158h]
		mov	[esp+4], eax
		lea	eax, [ebp-0DCh]
		mov	dword ptr [ebp-0DCh], offset aDashoffset ; "-dashoffset"
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71018D7F
		mov	ebx, [ebp+8]
		mov	eax, [ebp-140h]
		mov	[ebx+58h], eax
		mov	eax, [ebp-13Ch]
		mov	[ebx+5Ch], eax
		mov	eax, [ebp-138h]
		mov	[ebx+60h], eax
		jmp	loc_71017CF0	; jumptable 71017C37 default case
; ---------------------------------------------------------------------------

loc_71018C1F:				; CODE XREF: .text:71018467j
		lea	edx, [ebp-140h]
		lea	eax, [ebp-80h]
		mov	dword ptr [ebp-80h], offset aStopOpacity ; "stop-opacity"
		mov	[esp+4], edx
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71018494	; jumptable 7101842E default case
		mov	ebx, [ebp+8]
		mov	edi, [ebp-1A4h]
		mov	eax, [ebp-1A0h]
		mov	edx, [ebp-19Ch]
		mov	[ebx+148h], edi
		mov	[ebx+14Ch], eax
		mov	[ebx+150h], edx
		jmp	loc_71018494	; jumptable 7101842E default case
; ---------------------------------------------------------------------------

loc_71018C7A:				; CODE XREF: .text:71018B9Ej
		lea	eax, [ebp-134h]
		mov	[esp+4], eax
		lea	eax, [ebp-64h]
		mov	dword ptr [ebp-64h], offset aDashoffset	; "-dashoffset"
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 6
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71018D2D
		mov	edx, [ebp+8]
		mov	ebx, [ebp-1A4h]
		mov	edi, [ebp-1A0h]
		mov	eax, [ebp-19Ch]
		mov	[edx+58h], ebx
		mov	[edx+5Ch], edi
		mov	[edx+60h], eax
		jmp	loc_71018494	; jumptable 7101842E default case
; ---------------------------------------------------------------------------

loc_71018CCC:				; CODE XREF: .text:71018B43j
		lea	ebx, [ebp-134h]
		lea	eax, [ebp-0B4h]
		mov	dword ptr [ebp-0B4h], offset aFontSize ; "font-size"
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71018E86
		mov	edi, [ebp+8]
		mov	eax, [ebp-140h]
		mov	[edi+0B8h], eax
		mov	eax, [ebp-13Ch]
		mov	[edi+0BCh], eax
		mov	eax, [ebp-138h]
		mov	[edi+0C0h], eax
		jmp	loc_71017CF0	; jumptable 71017C37 default case
; ---------------------------------------------------------------------------

loc_71018D2D:				; CODE XREF: .text:71018CA3j
		lea	eax, [ebp-134h]
		mov	[esp+4], eax
		lea	eax, [ebp-68h]
		mov	dword ptr [ebp-68h], offset aLinecap ; "-linecap"
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 6
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71018EE7
		mov	edx, [ebp+8]
		mov	ebx, [ebp-1A4h]
		mov	edi, [ebp-1A0h]
		mov	eax, [ebp-19Ch]
		mov	[edx+64h], ebx
		mov	[edx+68h], edi
		mov	[edx+6Ch], eax
		jmp	loc_71018494	; jumptable 7101842E default case
; ---------------------------------------------------------------------------

loc_71018D7F:				; CODE XREF: .text:71018BF6j
		lea	eax, [ebp-158h]
		mov	[esp+4], eax
		lea	eax, [ebp-0E0h]
		mov	dword ptr [ebp-0E0h], offset aLinecap ;	"-linecap"
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	short loc_71018E2E
		mov	edi, [ebp+8]
		mov	eax, [ebp-140h]
		mov	[edi+64h], eax
		mov	eax, [ebp-13Ch]
		mov	[edi+68h], eax
		mov	eax, [ebp-138h]
		mov	[edi+6Ch], eax
		jmp	loc_71017CF0	; jumptable 71017C37 default case
; ---------------------------------------------------------------------------

loc_71018DD3:				; CODE XREF: .text:71018A90j
		lea	ebx, [ebp-140h]
		lea	eax, [ebp-40h]
		mov	dword ptr [ebp-40h], offset aFontFamily	; "font-family"
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71018F97
		mov	edi, [ebp+8]
		mov	eax, [ebp-1A4h]
		mov	edx, [ebp-1A0h]
		mov	ebx, [ebp-19Ch]
		mov	[edi+0ACh], eax
		mov	[edi+0B0h], edx
		mov	[edi+0B4h], ebx
		jmp	loc_71018494	; jumptable 7101842E default case
; ---------------------------------------------------------------------------

loc_71018E2E:				; CODE XREF: .text:71018DAEj
		lea	eax, [ebp-158h]
		mov	[esp+4], eax
		lea	eax, [ebp-0E4h]
		mov	dword ptr [ebp-0E4h], offset aLinejoin ; "-linejoin"
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71018F39
		mov	edx, [ebp+8]
		mov	eax, [ebp-140h]
		mov	[edx+70h], eax
		mov	eax, [ebp-13Ch]
		mov	[edx+74h], eax
		mov	eax, [ebp-138h]
		mov	[edx+78h], eax
		jmp	loc_71017CF0	; jumptable 71017C37 default case
; ---------------------------------------------------------------------------

loc_71018E86:				; CODE XREF: .text:71018CFBj
		lea	eax, [ebp-134h]
		mov	[esp+4], eax
		lea	eax, [ebp-0B8h]
		mov	dword ptr [ebp-0B8h], offset aFontStyle	; "font-style"
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71019109
		mov	edx, [ebp+8]
		mov	eax, [ebp-140h]
		mov	[edx+0C4h], eax
		mov	eax, [ebp-13Ch]
		mov	[edx+0C8h], eax
		mov	eax, [ebp-138h]
		mov	[edx+0CCh], eax
		jmp	loc_71017CF0	; jumptable 71017C37 default case
; ---------------------------------------------------------------------------

loc_71018EE7:				; CODE XREF: .text:71018D56j
		lea	eax, [ebp-134h]
		mov	[esp+4], eax
		lea	eax, [ebp-6Ch]
		mov	dword ptr [ebp-6Ch], offset aLinejoin ;	"-linejoin"
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 6
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_7101928D
		mov	edx, [ebp+8]
		mov	ebx, [ebp-1A4h]
		mov	edi, [ebp-1A0h]
		mov	eax, [ebp-19Ch]
		mov	[edx+70h], ebx
		mov	[edx+74h], edi
		mov	[edx+78h], eax
		jmp	loc_71018494	; jumptable 7101842E default case
; ---------------------------------------------------------------------------

loc_71018F39:				; CODE XREF: .text:71018E5Dj
		lea	eax, [ebp-158h]
		mov	[esp+4], eax
		lea	eax, [ebp-0E8h]
		mov	dword ptr [ebp-0E8h], offset aMiterlimit ; "-miterlimit"
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_7101916A
		mov	ebx, [ebp+8]
		mov	eax, [ebp-140h]
		mov	[ebx+7Ch], eax
		mov	eax, [ebp-13Ch]
		mov	[ebx+80h], eax
		mov	eax, [ebp-138h]
		mov	[ebx+84h], eax
		jmp	loc_71017CF0	; jumptable 71017C37 default case
; ---------------------------------------------------------------------------

loc_71018F97:				; CODE XREF: .text:71018DFCj
		lea	edi, [ebp-140h]
		lea	eax, [ebp-44h]
		mov	dword ptr [ebp-44h], offset aFontSize ;	"font-size"
		mov	[esp+4], edi
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_710192E5
		mov	eax, [ebp+8]
		mov	edx, [ebp-1A4h]
		mov	ebx, [ebp-1A0h]
		mov	edi, [ebp-19Ch]
		mov	[eax+0B8h], edx
		mov	[eax+0BCh], ebx
		mov	[eax+0C0h], edi
		jmp	loc_71018494	; jumptable 7101842E default case
; ---------------------------------------------------------------------------

loc_71018FF2:				; DATA XREF: .text:71017842o
		add	ebp, 18h
		mov	eax, [ebp-188h]
		mov	ebx, [ebp-184h]
		cmp	eax, 1
		mov	[ebp-1B8h], ebx
		jz	short loc_7101905F
		cmp	eax, 2
		jz	short loc_7101905F
		cmp	eax, 3
		jz	loc_710190EC
		cmp	eax, 4
		lea	esi, [esi+0]
		jz	short loc_7101905F
		cmp	eax, 5
		jz	short loc_7101905F
		cmp	eax, 6
		jz	short loc_7101905F
		cmp	eax, 7
		nop
		jz	short loc_7101905F
		cmp	eax, 8
		jz	loc_710190D2
		cmp	eax, 9
		xchg	ax, ax
		jz	short loc_7101905F
		cmp	eax, 0Ah
		jz	short loc_7101905F
		lea	eax, [ebp-110h]
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 0
		call	sub_710477B0

loc_7101905F:				; CODE XREF: .text:7101900Aj
					; .text:7101900Fj ...
		mov	ebx, [ebp-1B8h]
		mov	edi, [ebp+8]
		mov	[ebp-1B4h], ebx
		mov	eax, [edi+154h]
		test	eax, eax
		jz	short loc_710190A5
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710190A5
		mov	eax, [edi+154h]
		mov	dword ptr [ebp-188h], 0
		mov	[esp+4], eax
		mov	eax, edi
		add	eax, 154h
		mov	[esp], eax
		call	sub_71047980

loc_710190A5:				; CODE XREF: .text:71019076j
					; .text:71019080j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-188h], 0
		mov	[esp], eax
		call	sub_710477B0
		mov	edx, [ebp-1B4h]
		mov	dword ptr [ebp-188h], 0FFFFFFFFh
		mov	[esp], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_710190D2:				; CODE XREF: .text:71019035j
		lea	eax, [ebp-20h]
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 0
		call	sub_710477B0
		jmp	loc_7101905F
; ---------------------------------------------------------------------------

loc_710190EC:				; CODE XREF: .text:71019014j
		lea	eax, [ebp-0C8h]
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 0
		call	sub_710477B0
		jmp	loc_7101905F
; ---------------------------------------------------------------------------

loc_71019109:				; CODE XREF: .text:71018EB5j
		lea	ebx, [ebp-134h]
		lea	eax, [ebp-0BCh]
		mov	dword ptr [ebp-0BCh], offset aFontWeight ; "font-weight"
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_710191CB
		mov	edi, [ebp+8]
		mov	eax, [ebp-140h]
		mov	[edi+0D0h], eax
		mov	eax, [ebp-13Ch]
		mov	[edi+0D4h], eax
		mov	eax, [ebp-138h]
		mov	[edi+0D8h], eax
		jmp	loc_71017CF0	; jumptable 71017C37 default case
; ---------------------------------------------------------------------------

loc_7101916A:				; CODE XREF: .text:71018F68j
		lea	eax, [ebp-158h]
		mov	[esp+4], eax
		lea	eax, [ebp-0ECh]
		mov	dword ptr [ebp-0ECh], offset aOpacity_0	; "-opacity"
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_7101922C
		mov	edi, [ebp+8]
		mov	eax, [ebp-140h]
		mov	[edi+88h], eax
		mov	eax, [ebp-13Ch]
		mov	[edi+8Ch], eax
		mov	eax, [ebp-138h]
		mov	[edi+90h], eax
		jmp	loc_71017CF0	; jumptable 71017C37 default case
; ---------------------------------------------------------------------------

loc_710191CB:				; CODE XREF: .text:71019138j
		lea	eax, [ebp-134h]
		mov	[esp+4], eax
		lea	eax, [ebp-0C0h]
		mov	dword ptr [ebp-0C0h], offset aFontVariant ; "font-variant"
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 5
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71017CF0	; jumptable 71017C37 default case
		mov	edx, [ebp+8]
		mov	eax, [ebp-140h]
		mov	[edx+0DCh], eax
		mov	eax, [ebp-13Ch]
		mov	[edx+0E0h], eax
		mov	eax, [ebp-138h]
		mov	[edx+0E4h], eax
		jmp	loc_71017CF0	; jumptable 71017C37 default case
; ---------------------------------------------------------------------------

loc_7101922C:				; CODE XREF: .text:71019199j
		lea	eax, [ebp-158h]
		mov	[esp+4], eax
		lea	eax, [ebp-0F0h]
		mov	dword ptr [ebp-0F0h], offset aWidth_0 ;	"-width"
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71017CF0	; jumptable 71017C37 default case
		mov	edx, [ebp+8]
		mov	eax, [ebp-140h]
		mov	[edx+94h], eax
		mov	eax, [ebp-13Ch]
		mov	[edx+98h], eax
		mov	eax, [ebp-138h]
		mov	[edx+9Ch], eax
		jmp	loc_71017CF0	; jumptable 71017C37 default case
; ---------------------------------------------------------------------------

loc_7101928D:				; CODE XREF: .text:71018F10j
		lea	eax, [ebp-134h]
		mov	[esp+4], eax
		lea	eax, [ebp-70h]
		mov	dword ptr [ebp-70h], offset aMiterlimit	; "-miterlimit"
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 6
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71019340
		mov	edx, [ebp+8]
		mov	ebx, [ebp-1A4h]
		mov	edi, [ebp-1A0h]
		mov	eax, [ebp-19Ch]
		mov	[edx+7Ch], ebx
		mov	[edx+80h], edi
		mov	[edx+84h], eax
		jmp	loc_71018494	; jumptable 7101842E default case
; ---------------------------------------------------------------------------

loc_710192E5:				; CODE XREF: .text:71018FC0j
		lea	eax, [ebp-140h]
		mov	[esp+4], eax
		lea	eax, [ebp-48h]
		mov	dword ptr [ebp-48h], offset aFontStyle ; "font-style"
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_7101939B
		mov	edx, [ebp+8]
		mov	ebx, [ebp-1A4h]
		mov	edi, [ebp-1A0h]
		mov	eax, [ebp-19Ch]
		mov	[edx+0C4h], ebx
		mov	[edx+0C8h], edi
		mov	[edx+0CCh], eax
		jmp	loc_71018494	; jumptable 7101842E default case
; ---------------------------------------------------------------------------

loc_71019340:				; CODE XREF: .text:710192B6j
		lea	eax, [ebp-134h]
		mov	[esp+4], eax
		lea	eax, [ebp-74h]
		mov	dword ptr [ebp-74h], offset aOpacity_0 ; "-opacity"
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 6
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_710193F6
		mov	edx, [ebp+8]
		mov	ebx, [ebp-1A4h]
		mov	edi, [ebp-1A0h]
		mov	eax, [ebp-19Ch]
		mov	[edx+88h], ebx
		mov	[edx+8Ch], edi
		mov	[edx+90h], eax
		jmp	loc_71018494	; jumptable 7101842E default case
; ---------------------------------------------------------------------------

loc_7101939B:				; CODE XREF: .text:7101930Ej
		lea	edx, [ebp-140h]
		lea	eax, [ebp-4Ch]
		mov	dword ptr [ebp-4Ch], offset aFontWeight	; "font-weight"
		mov	[esp+4], edx
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71019451
		mov	ebx, [ebp+8]
		mov	edi, [ebp-1A4h]
		mov	eax, [ebp-1A0h]
		mov	edx, [ebp-19Ch]
		mov	[ebx+0D0h], edi
		mov	[ebx+0D4h], eax
		mov	[ebx+0D8h], edx
		jmp	loc_71018494	; jumptable 7101842E default case
; ---------------------------------------------------------------------------

loc_710193F6:				; CODE XREF: .text:71019369j
		lea	eax, [ebp-134h]
		mov	[esp+4], eax
		lea	eax, [ebp-78h]
		mov	dword ptr [ebp-78h], offset aWidth_0 ; "-width"
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 6
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71018494	; jumptable 7101842E default case
		mov	edx, [ebp+8]
		mov	ebx, [ebp-1A4h]
		mov	edi, [ebp-1A0h]
		mov	eax, [ebp-19Ch]
		mov	[edx+94h], ebx
		mov	[edx+98h], edi
		mov	[edx+9Ch], eax
		jmp	loc_71018494	; jumptable 7101842E default case
; ---------------------------------------------------------------------------

loc_71019451:				; CODE XREF: .text:710193C4j
		lea	ebx, [ebp-140h]
		lea	eax, [ebp-50h]
		mov	dword ptr [ebp-50h], offset aFontVariant ; "font-variant"
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	dword ptr [ebp-188h], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71018494	; jumptable 7101842E default case
		mov	edi, [ebp+8]
		mov	eax, [ebp-1A4h]
		mov	edx, [ebp-1A0h]
		mov	ebx, [ebp-19Ch]
		mov	[edi+0DCh], eax
		mov	[edi+0E0h], edx
		mov	[edi+0E4h], ebx
		jmp	loc_71018494	; jumptable 7101842E default case
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710194B0	proc near		; DATA XREF: sub_7101E100+19ACo

var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= qword	ptr -0A0h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= byte ptr -8Ch
var_88		= dword	ptr -88h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_4C		= byte ptr -4Ch
var_40		= byte ptr -40h
var_34		= byte ptr -34h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0C8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_6C], eax
		lea	eax, [ebp+var_8C]
		mov	[esp], eax
		mov	[ebp+var_64], esp
		mov	[ebp+var_74], offset sub_710525B0
		mov	[ebp+var_70], offset word_71053312
		mov	[ebp+var_68], offset sub_7101989A
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_10]
		mov	[esp+8], eax
		lea	eax, [ebp+var_34]
		mov	[esp], eax
		mov	[ebp+var_10], offset aHorizAdvX	; "horiz-adv-x"
		mov	[esp+4], edx
		mov	[ebp+var_88], 0FFFFFFFFh
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		lea	eax, [ebp+var_C]
		lea	edx, [ebp+var_34]
		mov	[ebp+var_88], 0Ah
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_20]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_40]
		mov	[ebp+var_20], offset aId ; "id"
		mov	[esp], eax
		mov	[ebp+var_88], 9
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_14]
		lea	edx, [ebp+var_40]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_88], 4
		call	ds:_ZNK10QStringRef8toStringEv
		mov	eax, [ebp+var_14]
		sub	esp, 4
		mov	edx, [eax+8]
		test	edx, edx
		jz	loc_710197B0

loc_7101958F:				; CODE XREF: sub_710194B0+376j
					; sub_710194B0+392j
		lea	eax, [ebp+var_C]
		xor	edx, edx
		mov	[ebp+var_88], 8
		call	sub_71007460
		mov	eax, [ebp+arg_0]
		fstp	[ebp+var_A0]
		test	eax, eax
		jz	short loc_710195D8

loc_710195B0:				; CODE XREF: sub_710194B0+126j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+0Ch]
		mov	[ebp+var_88], 8
		call	eax
		test	eax, eax
		jz	short loc_71019630
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+34h]
		test	eax, eax
		mov	[ebp+arg_0], eax
		jnz	short loc_710195B0

loc_710195D8:				; CODE XREF: sub_710194B0+FEj
		mov	[ebp+var_A4], 0

loc_710195E2:				; CODE XREF: sub_710194B0+2D6j
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71019790

loc_710195F3:				; CODE XREF: sub_710194B0+2F6j
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71019616
		mov	eax, [ebp+var_C]
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_71019616:				; CODE XREF: sub_710194B0+14Ej
		lea	eax, [ebp+var_8C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_A4]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71019630:				; CODE XREF: sub_710194B0+119j
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp], 38h ; size_t
		mov	[ebp+var_88], 8
		mov	[ebp+var_90], edx
		call	sub_710517F0
		fld	[ebp+var_A0]
		mov	[ebp+var_94], eax
		fstp	qword ptr [esp+4] ; double
		mov	[esp], eax	; int
		mov	[ebp+var_88], 7
		call	sub_71029970
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	eax, [ebp+var_94]
		mov	[ebp+var_88], 8
		mov	[esp], eax
		call	sub_710299E0
		mov	edx, [ebp+var_94]
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[esp+4], edx
		call	sub_710299B0
		mov	eax, [ebp+var_18]
		sub	esp, 4
		mov	edx, [eax+8]
		mov	[ebp+var_AC], edx
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71019847

loc_710196C2:				; CODE XREF: sub_710194B0+3A3j
		mov	ecx, [ebp+var_AC]
		test	ecx, ecx
		jz	short loc_71019732
		mov	edx, [ebp+var_94]
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_88], 8
		mov	[esp+4], edx
		call	sub_710299B0
		sub	esp, 4
		lea	eax, [ebp+var_1C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_90]
		mov	[ebp+var_88], 6
		mov	[esp], eax
		call	_ZNK16QSvgTinyDocument7svgFontERK7QString
		mov	[ebp+var_B0], eax
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71019858

loc_71019724:				; CODE XREF: sub_710194B0+3BEj
		mov	edx, [ebp+var_B0]
		test	edx, edx
		jz	loc_71019873

loc_71019732:				; CODE XREF: sub_710194B0+21Aj
					; sub_710194B0+3E5j
		mov	dword ptr [esp], 38h ; size_t
		mov	[ebp+var_88], 8
		call	sub_710517F0
		mov	edx, [ebp+var_90]
		mov	[ebp+var_A8], eax
		mov	eax, [ebp+var_94]
		mov	[ebp+var_88], 5
		mov	[esp+8], edx
		mov	edx, [ebp+var_A8]
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_71027CB0
		mov	edx, [ebp+var_A8]
		mov	[ebp+var_A4], edx
		jmp	loc_710195E2
; ---------------------------------------------------------------------------
		align 10h

loc_71019790:				; CODE XREF: sub_710194B0+13Dj
		mov	eax, [ebp+var_14]
		mov	[ebp+var_88], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_710195F3
; ---------------------------------------------------------------------------
		align 10h

loc_710197B0:				; CODE XREF: sub_710194B0+D9j
		lea	edx, [ebp+var_28]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_28], offset aXmlId ; "xml:id"
		mov	[esp], eax
		mov	[ebp+var_88], 3
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_24]
		lea	edx, [ebp+var_4C]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_88], 2
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_24]
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_88], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7101958F
		mov	eax, [ebp+var_24]
		mov	[ebp+var_88], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101958F
; ---------------------------------------------------------------------------

loc_71019847:				; CODE XREF: sub_710194B0+20Cj
		mov	eax, [ebp+var_18]
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_710196C2
; ---------------------------------------------------------------------------

loc_71019858:				; CODE XREF: sub_710194B0+26Ej
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_88], 8
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71019724
; ---------------------------------------------------------------------------

loc_71019873:				; CODE XREF: sub_710194B0+27Cj
		mov	edx, [ebp+var_94]
		mov	eax, [ebp+var_90]
		mov	[ebp+var_88], 8
		mov	[esp+4], edx
		mov	[esp], eax
		call	_ZN16QSvgTinyDocument10addSvgFontEP8QSvgFont
		jmp	loc_71019732
sub_710194B0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7101989A	proc near		; DATA XREF: sub_710194B0+29o
		add	ebp, 8
		mov	eax, [ebp-88h]
		mov	edx, [ebp-84h]
		cmp	eax, 1
		mov	[ebp-0B4h], edx
		jz	short loc_710198FC
		cmp	eax, 2
		jz	short loc_710198FC
		cmp	eax, 3
		jz	short loc_71019911
		cmp	eax, 4
		jz	loc_7101994E
		cmp	eax, 5
		jz	loc_7101995E
		cmp	eax, 6
		jz	short loc_7101993E
		cmp	eax, 7
		jz	short loc_710198FC
		cmp	eax, 8
		lea	esi, [esi+0]
		jz	short loc_71019911
		cmp	eax, 9
		jz	short loc_71019926
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_710477B0

loc_710198FC:				; CODE XREF: sub_7101989A+18j
					; sub_7101989A+1Dj ...
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_710477B0

loc_71019911:				; CODE XREF: sub_7101989A+22j
					; sub_7101989A+46j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_710477B0

loc_71019926:				; CODE XREF: sub_7101989A+4Bj
		mov	eax, [ebp-0B4h]
		mov	dword ptr [ebp-88h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7101993E:				; CODE XREF: sub_7101989A+39j
		mov	edx, [ebp-94h]
		mov	[esp+0], edx
		call	sub_710517D0
		jmp	short loc_710198FC
; ---------------------------------------------------------------------------

loc_7101994E:				; CODE XREF: sub_7101989A+27j
		mov	eax, [ebp-0A8h]
		mov	[esp+0], eax
		call	sub_710517D0
		jmp	short loc_710198FC
; ---------------------------------------------------------------------------

loc_7101995E:				; CODE XREF: sub_7101989A+30j
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_710477B0
		jmp	short loc_710198FC
sub_7101989A	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71019980	proc near		; DATA XREF: sub_7101E100+162Bo

var_1B4		= dword	ptr -1B4h
var_1B0		= qword	ptr -1B0h
var_1A8		= dword	ptr -1A8h
var_1A4		= dword	ptr -1A4h
var_1A0		= dword	ptr -1A0h
var_19C		= dword	ptr -19Ch
var_198		= dword	ptr -198h
var_194		= word ptr -194h
var_192		= word ptr -192h
var_18C		= byte ptr -18Ch
var_188		= dword	ptr -188h
var_174		= dword	ptr -174h
var_170		= dword	ptr -170h
var_16C		= dword	ptr -16Ch
var_168		= dword	ptr -168h
var_164		= dword	ptr -164h
var_150		= byte ptr -150h
var_140		= byte ptr -140h
var_130		= byte ptr -130h
var_120		= byte ptr -120h
var_114		= byte ptr -114h
var_108		= dword	ptr -108h
var_104		= dword	ptr -104h
var_100		= dword	ptr -100h
var_FC		= byte ptr -0FCh
var_F0		= byte ptr -0F0h
var_E4		= byte ptr -0E4h
var_D8		= byte ptr -0D8h
var_CC		= byte ptr -0CCh
var_C0		= byte ptr -0C0h
var_B4		= byte ptr -0B4h
var_A8		= byte ptr -0A8h
var_9C		= byte ptr -9Ch
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_A		= word ptr -0Ah
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 1E8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_16C], eax
		lea	eax, [ebp+var_18C]
		mov	[esp], eax
		mov	[ebp+var_164], esp
		mov	[ebp+var_174], offset sub_710525B0
		mov	[ebp+var_170], offset word_7105332A
		mov	[ebp+var_168], offset sub_7101A5B4
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_14]
		mov	[esp+8], eax
		lea	eax, [ebp+var_9C]
		mov	[esp], eax
		mov	[ebp+var_14], offset aType ; "type"
		mov	[esp+4], edx
		mov	[ebp+var_188], 0FFFFFFFFh
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		lea	eax, [ebp+var_10]
		lea	edx, [ebp+var_9C]
		mov	[ebp+var_188], 1Ch
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_18]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_A8]
		mov	[ebp+var_18], offset aFrom ; "from"
		mov	[esp], eax
		mov	[ebp+var_188], 1Bh
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	edx, [ebp+var_1C]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_B4]
		mov	[ebp+var_1C], offset aTo ; "to"
		mov	[esp], eax
		mov	[ebp+var_188], 1Ah
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	edx, [ebp+var_24]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_C0]
		mov	[ebp+var_24], offset aValues ; "values"
		mov	[esp], eax
		mov	[ebp+var_188], 19h
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_20]
		lea	edx, [ebp+var_C0]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_188], 18h
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_2C]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_CC]
		mov	[ebp+var_2C], offset aBegin ; "begin"
		mov	[esp], eax
		mov	[ebp+var_188], 17h
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_28]
		lea	edx, [ebp+var_CC]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_188], 16h
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_34]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_D8]
		mov	[ebp+var_34], offset aDur ; "dur"
		mov	[esp], eax
		mov	[ebp+var_188], 15h
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_30]
		lea	edx, [ebp+var_D8]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_188], 14h
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_3C]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_E4]
		mov	[ebp+var_3C], offset aAttributename ; "attributeName"
		mov	[esp], eax
		mov	[ebp+var_188], 13h
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_38]
		lea	edx, [ebp+var_E4]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_188], 12h
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_44]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_F0]
		mov	[ebp+var_44], offset aRepeatcount ; "repeatCount"
		mov	[esp], eax
		mov	[ebp+var_188], 11h
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_40]
		lea	edx, [ebp+var_F0]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_188], 10h
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_4C]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_FC]
		mov	[ebp+var_4C], offset aFill ; "fill"
		mov	[esp], eax
		mov	[ebp+var_188], 0Fh
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_48]
		lea	edx, [ebp+var_FC]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_188], 0Eh
		call	ds:_ZNK10QStringRef8toStringEv
		mov	eax, ds:_ZN9QListData11shared_nullE
		sub	esp, 4
		mov	[ebp+var_50], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_20]
		mov	eax, [eax+8]
		test	eax, eax
		jnz	loc_7101A260
		lea	eax, [ebp+var_130]
		mov	[esp], eax
		mov	[ebp+var_188], 0Ch
		call	ds:_ZN6QColor10invalidateEv
		lea	eax, [ebp+var_140]
		mov	[esp], eax
		call	ds:_ZN6QColor10invalidateEv
		mov	ecx, [ebp+arg_8]
		lea	edx, [ebp+var_130]
		lea	eax, [ebp+var_A8]
		call	sub_7100D500
		mov	ecx, [ebp+arg_8]
		lea	edx, [ebp+var_140]
		lea	eax, [ebp+var_B4]
		call	sub_7100D500
		lea	eax, [ebp+var_130]
		mov	[esp+4], eax
		lea	eax, [ebp+var_50]
		mov	[esp], eax
		call	sub_71045480
		lea	eax, [ebp+var_140]
		mov	[esp+4], eax
		lea	eax, [ebp+var_50]
		mov	[esp], eax
		call	sub_71045480

loc_71019D08:				; CODE XREF: sub_71019980+A2Bj
					; sub_71019980+A4Dj
		lea	eax, [ebp+var_5C]
		lea	edx, [ebp+var_28]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_188], 0Ch
		call	ds:_ZNK7QString7trimmedEv
		sub	esp, 4
		lea	eax, [ebp+var_5C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_188], 8
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_5C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101A580

loc_71019D56:				; CODE XREF: sub_71019980+C16j
		lea	eax, [ebp+var_60]
		mov	[esp+4], eax
		lea	eax, [ebp+var_28]
		mov	[ebp+var_60], offset aMs ; "ms"
		mov	dword ptr [esp+8], 1
		mov	[esp], eax
		mov	[ebp+var_188], 0Ch
		call	ds:_ZNK7QString8endsWithERK13QLatin1StringN2Qt15CaseSensitivityE
		test	al, al
		jz	loc_7101A1F0
		lea	eax, [ebp+var_28]
		mov	dword ptr [esp+4], 2
		mov	[esp], eax
		call	ds:_ZN7QString4chopEi
		mov	[ebp+var_1B4], 1

loc_71019DA8:				; CODE XREF: sub_71019980+8A8j
					; sub_71019980+8D6j
		lea	eax, [ebp+var_68]
		lea	edx, [ebp+var_30]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_188], 0Ch
		call	ds:_ZNK7QString7trimmedEv
		sub	esp, 4
		lea	eax, [ebp+var_68]
		mov	[esp+4], eax
		lea	eax, [ebp+var_30]
		mov	[esp], eax
		mov	[ebp+var_188], 7
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_68]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101A562

loc_71019DF6:				; CODE XREF: sub_71019980+BF8j
		lea	eax, [ebp+var_6C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_30]
		mov	[ebp+var_6C], offset aMs ; "ms"
		mov	dword ptr [esp+8], 1
		mov	[esp], eax
		mov	[ebp+var_188], 0Ch
		call	ds:_ZNK7QString8endsWithERK13QLatin1StringN2Qt15CaseSensitivityE
		test	al, al
		jz	loc_7101A1A3
		lea	eax, [ebp+var_30]
		mov	dword ptr [esp+4], 2
		mov	[esp], eax
		call	ds:_ZN7QString4chopEi
		mov	[ebp+var_1B4], 1

loc_71019E48:				; CODE XREF: sub_71019980+851j
					; sub_71019980+86Bj
		lea	eax, [ebp+var_28]
		xor	edx, edx
		mov	[ebp+var_188], 0Ch
		call	sub_71007460
		fnstcw	[ebp+var_192]
		fild	[ebp+var_1B4]
		xor	edx, edx
		fst	[ebp+var_1B0]
		fmulp	st(1), st
		movzx	eax, [ebp+var_192]
		mov	ah, 0Ch
		mov	[ebp+var_194], ax
		lea	eax, [ebp+var_30]
		fldcw	[ebp+var_194]
		fistp	[ebp+var_1A8]
		fldcw	[ebp+var_192]
		call	sub_71007460
		fild	[ebp+var_1A8]
		fnstcw	[ebp+var_192]
		faddp	st(1), st
		mov	dword ptr [esp], 40h ; size_t
		fmul	[ebp+var_1B0]
		movzx	eax, [ebp+var_192]
		mov	ah, 0Ch
		mov	[ebp+var_194], ax
		fldcw	[ebp+var_194]
		fistp	[ebp+var_1A4]
		fldcw	[ebp+var_192]
		call	sub_710517F0
		mov	[ebp+var_1A0], eax
		mov	eax, [ebp+var_1A4]
		mov	edx, [ebp+var_1A8]
		mov	dword ptr [esp+0Ch], 0
		mov	[ebp+var_188], 6
		mov	[esp+8], eax
		mov	eax, [ebp+var_1A0]
		mov	[esp+4], edx
		mov	[esp], eax
		call	sub_710267E0
		lea	eax, [ebp+var_74]
		mov	[esp+4], eax
		lea	eax, [ebp+var_38]
		mov	[ebp+var_74], offset aFill ; "fill"
		mov	[esp], eax
		mov	[ebp+var_188], 0Ch
		call	ds:_ZNK7QStringeqERK13QLatin1String
		movzx	eax, al
		mov	[esp+4], eax
		mov	eax, [ebp+var_1A0]
		lea	edx, [ebp+var_50]
		mov	[esp+8], edx
		mov	[esp], eax
		call	sub_71025D90
		lea	eax, [ebp+var_78]
		mov	[esp+4], eax
		lea	eax, [ebp+var_48]
		mov	[ebp+var_78], offset aFreeze ; "freeze"
		mov	[esp], eax
		call	ds:_ZNK7QStringeqERK13QLatin1String
		mov	edx, [ebp+var_1A0]
		movzx	eax, al
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_71025650
		lea	eax, [ebp+var_7C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_40]
		mov	[ebp+var_7C], offset aIndefinite ; "indefinite"
		mov	[esp], eax
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		jz	loc_7101A170
		fld1
		fchs

loc_71019FAD:				; CODE XREF: sub_71019980+81Ej
					; sub_71019980+C2Fj
		mov	eax, [ebp+var_1A0]
		fstp	qword ptr [esp+4] ; double
		mov	[ebp+var_188], 0Ch
		mov	[esp], eax	; int
		call	sub_71025660
		lea	edx, [ebp+var_88]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_114]
		mov	[ebp+var_88], offset aId ; "id"
		mov	[esp], eax
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_84]
		lea	edx, [ebp+var_114]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_188], 4
		call	ds:_ZNK10QStringRef8toStringEv
		mov	eax, [ebp+var_84]
		sub	esp, 4
		mov	ecx, [eax+8]
		test	ecx, ecx
		jz	loc_7101A4B0

loc_7101A02D:				; CODE XREF: sub_71019980+BBEj
					; sub_71019980+BDDj
		lea	eax, [ebp+var_84]
		mov	edx, [ebp+arg_0]
		mov	[esp+8], eax
		mov	eax, [ebp+var_1A0]
		mov	[ebp+var_188], 5
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_71023700
		mov	eax, [ebp+var_84]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101A490

loc_7101A06A:				; CODE XREF: sub_71019980+B29j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_188], 0Ch
		mov	[esp], eax
		call	sub_71022510
		mov	dword ptr [esp+4], 1
		mov	[esp], eax
		call	_ZN16QSvgTinyDocument11setAnimatedEb
		mov	eax, [ebp+arg_8]
		mov	edx, [eax+2Ch]
		mov	eax, [ebp+var_1A4]
		cmp	eax, edx
		jge	short loc_7101A0A1
		mov	eax, edx

loc_7101A0A1:				; CODE XREF: sub_71019980+71Dj
		mov	edx, [ebp+arg_8]
		mov	[edx+2Ch], eax
		mov	eax, [ebp+var_50]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7101A0D0
		mov	eax, [ebp+var_50]
		mov	[ebp+var_188], 0Dh
		mov	[esp+4], eax
		lea	eax, [ebp+var_50]
		mov	[esp], eax
		call	sub_71045430

loc_7101A0D0:				; CODE XREF: sub_71019980+732j
		mov	eax, [ebp+var_48]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101A470

loc_7101A0E1:				; CODE XREF: sub_71019980+B06j
		mov	eax, [ebp+var_40]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101A450

loc_7101A0F2:				; CODE XREF: sub_71019980+AE6j
		mov	eax, [ebp+var_38]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101A430

loc_7101A103:				; CODE XREF: sub_71019980+AC6j
		mov	eax, [ebp+var_30]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101A410

loc_7101A114:				; CODE XREF: sub_71019980+AA6j
		mov	eax, [ebp+var_28]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101A3F0

loc_7101A125:				; CODE XREF: sub_71019980+A86j
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101A3D2

loc_7101A136:				; CODE XREF: sub_71019980+A68j
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7101A159
		mov	eax, [ebp+var_10]
		mov	[ebp+var_188], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7101A159:				; CODE XREF: sub_71019980+7C1j
		lea	eax, [ebp+var_18C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, 1
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7101A170:				; CODE XREF: sub_71019980+623j
		lea	eax, [ebp+var_80]
		mov	[esp+4], eax
		lea	eax, [ebp+var_40]
		mov	[ebp+var_80], offset byte_71059862
		mov	[esp], eax
		mov	[ebp+var_188], 0Ch
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		jz	loc_7101A59B
		fld1
		jmp	loc_71019FAD
; ---------------------------------------------------------------------------

loc_7101A1A3:				; CODE XREF: sub_71019980+4A4j
		lea	eax, [ebp+var_70]
		mov	[esp+4], eax
		lea	eax, [ebp+var_30]
		mov	[ebp+var_70], offset aS	; "s"
		mov	dword ptr [esp+8], 1
		mov	[esp], eax
		mov	[ebp+var_188], 0Ch
		call	ds:_ZNK7QString8endsWithERK13QLatin1StringN2Qt15CaseSensitivityE
		test	al, al
		jz	loc_71019E48
		lea	eax, [ebp+var_30]
		mov	dword ptr [esp+4], 1
		mov	[esp], eax
		call	ds:_ZN7QString4chopEi
		jmp	loc_71019E48
; ---------------------------------------------------------------------------

loc_7101A1F0:				; CODE XREF: sub_71019980+404j
		lea	eax, [ebp+var_64]
		mov	[esp+4], eax
		lea	eax, [ebp+var_28]
		mov	[ebp+var_64], offset aS	; "s"
		mov	dword ptr [esp+8], 1
		mov	[esp], eax
		mov	[ebp+var_188], 0Ch
		call	ds:_ZNK7QString8endsWithERK13QLatin1StringN2Qt15CaseSensitivityE
		test	al, al
		mov	[ebp+var_1B4], 3E8h
		jz	loc_71019DA8
		lea	eax, [ebp+var_28]
		mov	dword ptr [esp+4], 1
		mov	[esp], eax
		mov	[ebp+var_188], 0Ch
		call	ds:_ZN7QString4chopEi
		mov	[ebp+var_1B4], 3E8h
		jmp	loc_71019DA8
; ---------------------------------------------------------------------------
		align 10h

loc_7101A260:				; CODE XREF: sub_71019980+308j
		lea	edx, [ebp+var_A]
		lea	eax, [ebp+var_54]
		mov	[esp+8], edx
		lea	edx, [ebp+var_20]
		mov	[ebp+var_A], 3Bh
		mov	dword ptr [esp+10h], 1
		mov	dword ptr [esp+0Ch], 0
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_188], 0Ch
		call	ds:_ZNK7QString5splitERK5QCharNS_13SplitBehaviorEN2Qt15CaseSensitivityE
		mov	eax, [ebp+var_54]
		sub	esp, 4
		mov	edx, [eax+8]
		lea	edx, [eax+edx*4+14h]
		mov	[ebp+var_19C], edx
		mov	edx, [eax+0Ch]
		lea	eax, [eax+edx*4+14h]
		cmp	[ebp+var_19C], eax
		jz	loc_7101A3A0
		mov	eax, ds:_ZN6QColor10invalidateEv
		mov	[ebp+var_198], eax
		jmp	short loc_7101A2ED
; ---------------------------------------------------------------------------
		align 10h

loc_7101A2D0:				; CODE XREF: sub_71019980+9FEj
					; sub_71019980+A1Aj
		mov	eax, [ebp+var_54]
		add	[ebp+var_19C], 4
		mov	edx, [eax+0Ch]
		lea	eax, [eax+edx*4+14h]
		cmp	[ebp+var_19C], eax
		jz	loc_7101A3A0

loc_7101A2ED:				; CODE XREF: sub_71019980+94Bj
		lea	edx, [ebp+var_150]
		mov	[esp], edx
		mov	[ebp+var_188], 0Bh
		call	[ebp+var_198]
		mov	edx, [ebp+var_19C]
		mov	eax, [edx]
		mov	[ebp+var_58], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_58]
		mov	ecx, [ebp+arg_8]
		mov	[ebp+var_108], eax
		mov	eax, [ebp+var_58]
		lea	edx, [ebp+var_150]
		mov	[ebp+var_104], 0
		mov	eax, [eax+8]
		mov	[ebp+var_188], 9
		mov	[ebp+var_100], eax
		lea	eax, [ebp+var_108]
		call	sub_7100D500
		lea	edx, [ebp+var_150]
		lea	eax, [ebp+var_50]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_188], 0Ah
		call	sub_71045480
		mov	eax, [ebp+var_58]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7101A2D0
		mov	eax, [ebp+var_58]
		mov	[ebp+var_188], 0Bh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101A2D0
; ---------------------------------------------------------------------------
		align 10h

loc_7101A3A0:				; CODE XREF: sub_71019980+93Aj
					; sub_71019980+967j
		mov	eax, [ebp+var_54]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_71019D08
		mov	eax, [ebp+var_54]
		mov	[ebp+var_188], 0Ch
		mov	[esp+4], eax
		lea	eax, [ebp+var_54]
		mov	[esp], eax
		call	sub_710459F0
		jmp	loc_71019D08
; ---------------------------------------------------------------------------

loc_7101A3D2:				; CODE XREF: sub_71019980+7B0j
		mov	eax, [ebp+var_20]
		mov	[ebp+var_188], 19h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101A136
; ---------------------------------------------------------------------------
		align 10h

loc_7101A3F0:				; CODE XREF: sub_71019980+79Fj
		mov	eax, [ebp+var_28]
		mov	[ebp+var_188], 17h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101A125
; ---------------------------------------------------------------------------
		align 10h

loc_7101A410:				; CODE XREF: sub_71019980+78Ej
		mov	eax, [ebp+var_30]
		mov	[ebp+var_188], 15h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101A114
; ---------------------------------------------------------------------------
		align 10h

loc_7101A430:				; CODE XREF: sub_71019980+77Dj
		mov	eax, [ebp+var_38]
		mov	[ebp+var_188], 13h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101A103
; ---------------------------------------------------------------------------
		align 10h

loc_7101A450:				; CODE XREF: sub_71019980+76Cj
		mov	eax, [ebp+var_40]
		mov	[ebp+var_188], 11h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101A0F2
; ---------------------------------------------------------------------------
		align 10h

loc_7101A470:				; CODE XREF: sub_71019980+75Bj
		mov	eax, [ebp+var_48]
		mov	[ebp+var_188], 0Fh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101A0E1
; ---------------------------------------------------------------------------
		align 10h

loc_7101A490:				; CODE XREF: sub_71019980+6E4j
		mov	eax, [ebp+var_84]
		mov	[ebp+var_188], 0Ch
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101A06A
; ---------------------------------------------------------------------------
		align 10h

loc_7101A4B0:				; CODE XREF: sub_71019980+6A7j
		lea	edx, [ebp+var_90]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_120]
		mov	[ebp+var_90], offset aXmlId ; "xml:id"
		mov	[esp], eax
		mov	[ebp+var_188], 3
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_8C]
		lea	edx, [ebp+var_120]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_188], 2
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_8C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_84]
		mov	[esp], eax
		mov	[ebp+var_188], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_8C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7101A02D
		mov	eax, [ebp+var_8C]
		mov	[ebp+var_188], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101A02D
; ---------------------------------------------------------------------------

loc_7101A562:				; CODE XREF: sub_71019980+470j
		mov	eax, [ebp+var_68]
		mov	[ebp+var_188], 0Ch
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71019DF6
; ---------------------------------------------------------------------------
		align 10h

loc_7101A580:				; CODE XREF: sub_71019980+3D0j
		mov	eax, [ebp+var_5C]
		mov	[ebp+var_188], 0Ch
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71019D56
; ---------------------------------------------------------------------------

loc_7101A59B:				; CODE XREF: sub_71019980+816j
		lea	eax, [ebp+var_40]
		xor	edx, edx
		mov	[ebp+var_188], 0Ch
		call	sub_71007460
		jmp	loc_71019FAD
sub_71019980	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7101A5B4	proc near		; DATA XREF: sub_71019980+35o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-188h]
		mov	edx, [ebp-184h]
		cmp	eax, 1
		mov	[ebp-1BCh], edx
		jz	loc_7101A6F7
		cmp	eax, 2
		jz	loc_7101A6F7
		cmp	eax, 3
		jz	loc_7101A70F
		cmp	eax, 4
		jz	loc_7101A6F7
		cmp	eax, 5
		jz	loc_7101A844
		cmp	eax, 6
		jz	loc_7101A857
		cmp	eax, 7
		jz	loc_7101A82A
		cmp	eax, 8
		nop
		lea	esi, [esi+0]
		jz	loc_7101A7FB
		cmp	eax, 9
		jz	loc_7101A7FB
		cmp	eax, 0Ah
		jz	loc_7101A810
		cmp	eax, 0Bh
		nop
		lea	esi, [esi+0]
		jz	loc_7101A70F
		cmp	eax, 0Ch
		jz	loc_7101A750
		cmp	eax, 0Dh
		jz	loc_7101A765
		cmp	eax, 0Eh
		nop
		lea	esi, [esi+0]
		jz	loc_7101A765
		cmp	eax, 0Fh
		jz	loc_7101A77A
		cmp	eax, 10h
		jz	loc_7101A77A
		cmp	eax, 11h
		nop
		lea	esi, [esi+0]
		jz	loc_7101A78F
		cmp	eax, 12h
		jz	loc_7101A78F
		cmp	eax, 13h
		jz	loc_7101A7A4
		cmp	eax, 14h
		nop
		lea	esi, [esi+0]
		jz	loc_7101A7A4
		cmp	eax, 15h
		jz	loc_7101A7B9
		cmp	eax, 16h
		jz	loc_7101A7B9
		cmp	eax, 17h
		nop
		lea	esi, [esi+0]
		jz	loc_7101A7CE
		cmp	eax, 18h
		jz	loc_7101A7CE
		cmp	eax, 19h
		jz	loc_7101A7CE
		cmp	eax, 1Ah
		nop
		lea	esi, [esi+0]
		jz	loc_7101A7CE
		cmp	eax, 1Bh
		jz	loc_7101A7E3
		lea	eax, [ebp-8Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-188h], 0
		call	sub_710477B0

loc_7101A6F7:				; CODE XREF: sub_7101A5B4+18j
					; sub_7101A5B4+21j ...
		lea	eax, [ebp-84h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-188h], 0
		call	sub_710477B0

loc_7101A70F:				; CODE XREF: sub_7101A5B4+2Aj
					; sub_7101A5B4+7Cj ...
		mov	eax, [ebp-1BCh]
		mov	[ebp-1B8h], eax
		mov	eax, [ebp-50h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7101A744
		mov	eax, [ebp-50h]
		mov	dword ptr [ebp-188h], 0
		mov	[esp+arg_0], eax
		lea	eax, [ebp-50h]
		mov	[esp+0], eax
		call	sub_71045430

loc_7101A744:				; CODE XREF: sub_7101A5B4+172j
		mov	edx, [ebp-1B8h]
		mov	[ebp-1BCh], edx

loc_7101A750:				; CODE XREF: sub_7101A5B4+85j
		lea	eax, [ebp-48h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-188h], 0
		call	sub_710477B0

loc_7101A765:				; CODE XREF: sub_7101A5B4+8Ej
					; sub_7101A5B4+9Cj
		lea	eax, [ebp-40h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-188h], 0
		call	sub_710477B0

loc_7101A77A:				; CODE XREF: sub_7101A5B4+A5j
					; sub_7101A5B4+AEj
		lea	eax, [ebp-38h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-188h], 0
		call	sub_710477B0

loc_7101A78F:				; CODE XREF: sub_7101A5B4+BCj
					; sub_7101A5B4+C5j
		lea	eax, [ebp-30h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-188h], 0
		call	sub_710477B0

loc_7101A7A4:				; CODE XREF: sub_7101A5B4+CEj
					; sub_7101A5B4+DCj
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-188h], 0
		call	sub_710477B0

loc_7101A7B9:				; CODE XREF: sub_7101A5B4+E5j
					; sub_7101A5B4+EEj
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-188h], 0
		call	sub_710477B0

loc_7101A7CE:				; CODE XREF: sub_7101A5B4+FCj
					; sub_7101A5B4+105j ...
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-188h], 0
		call	sub_710477B0

loc_7101A7E3:				; CODE XREF: sub_7101A5B4+125j
		mov	eax, [ebp-1BCh]
		mov	dword ptr [ebp-188h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7101A7FB:				; CODE XREF: sub_7101A5B4+5Cj
					; sub_7101A5B4+65j
		lea	eax, [ebp-58h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-188h], 0
		call	sub_710477B0

loc_7101A810:				; CODE XREF: sub_7101A5B4+6Ej
		lea	eax, [ebp-54h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-188h], 0
		call	sub_7103BBF0
		jmp	loc_7101A70F
; ---------------------------------------------------------------------------

loc_7101A82A:				; CODE XREF: sub_7101A5B4+4Ej
		lea	eax, [ebp-5Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-188h], 0
		call	sub_710477B0
		jmp	loc_7101A70F
; ---------------------------------------------------------------------------

loc_7101A844:				; CODE XREF: sub_7101A5B4+3Cj
		mov	edx, [ebp-1A0h]
		mov	[esp+0], edx
		call	sub_710517D0
		jmp	loc_7101A70F
; ---------------------------------------------------------------------------

loc_7101A857:				; CODE XREF: sub_7101A5B4+45j
		lea	eax, [ebp-68h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-188h], 0
		call	sub_710477B0
		jmp	loc_7101A70F
sub_7101A5B4	endp

; ---------------------------------------------------------------------------
		jmp	short sub_7101A880
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7101A880	proc near		; CODE XREF: .text:7101A871j
					; DATA XREF: sub_7101E100+16A9o

var_1E8		= dword	ptr -1E8h
var_1E4		= dword	ptr -1E4h
var_1DD		= byte ptr -1DDh
var_1DC		= dword	ptr -1DCh
var_1D8		= dword	ptr -1D8h
var_1D4		= dword	ptr -1D4h
var_1D0		= qword	ptr -1D0h
var_1C4		= dword	ptr -1C4h
var_1C0		= dword	ptr -1C0h
var_1BC		= dword	ptr -1BCh
var_1B8		= dword	ptr -1B8h
var_1B4		= word ptr -1B4h
var_1B2		= word ptr -1B2h
var_1B0		= dword	ptr -1B0h
var_1AC		= byte ptr -1ACh
var_1A8		= dword	ptr -1A8h
var_194		= dword	ptr -194h
var_190		= dword	ptr -190h
var_18C		= dword	ptr -18Ch
var_188		= dword	ptr -188h
var_184		= dword	ptr -184h
var_16C		= byte ptr -16Ch
var_160		= byte ptr -160h
var_154		= byte ptr -154h
var_148		= byte ptr -148h
var_13C		= byte ptr -13Ch
var_130		= byte ptr -130h
var_124		= byte ptr -124h
var_118		= byte ptr -118h
var_10C		= byte ptr -10Ch
var_100		= byte ptr -100h
var_F4		= byte ptr -0F4h
var_E8		= byte ptr -0E8h
var_DC		= byte ptr -0DCh
var_D0		= qword	ptr -0D0h
var_C8		= qword	ptr -0C8h
var_C0		= qword	ptr -0C0h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 208h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_18C], eax
		lea	eax, [ebp+var_1AC]
		mov	[esp], eax
		mov	[ebp+var_184], esp
		mov	[ebp+var_194], offset sub_710525B0
		mov	[ebp+var_190], offset word_71053366
		mov	[ebp+var_188], offset sub_7101B84D
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_10]
		lea	ecx, [ebp+var_DC]
		mov	[esp+8], eax
		mov	[ebp+var_10], offset aType ; "type"
		mov	[esp+4], edx
		mov	[esp], ecx
		mov	[ebp+var_1A8], 0FFFFFFFFh
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		lea	eax, [ebp+var_C]
		lea	edx, [ebp+var_DC]
		mov	[ebp+var_1A8], 1Fh
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		mov	ecx, [ebp+arg_4]
		sub	esp, 4
		lea	eax, [ebp+var_E8]
		lea	edx, [ebp+var_18]
		mov	[ebp+var_18], offset aValues ; "values"
		mov	[esp+8], edx
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	[ebp+var_1A8], 1Eh
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_14]
		lea	edx, [ebp+var_E8]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_1A8], 1Dh
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_20]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_F4]
		mov	[ebp+var_20], offset aBegin ; "begin"
		mov	[esp], eax
		mov	[ebp+var_1A8], 1Ch
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_1C]
		lea	edx, [ebp+var_F4]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_1A8], 1Bh
		call	ds:_ZNK10QStringRef8toStringEv
		mov	ecx, [ebp+arg_4]
		sub	esp, 4
		lea	eax, [ebp+var_100]
		lea	edx, [ebp+var_28]
		mov	[ebp+var_28], offset aDur ; "dur"
		mov	[esp+8], edx
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	[ebp+var_1A8], 1Ah
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_24]
		lea	edx, [ebp+var_100]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_1A8], 19h
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_30]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_10C]
		mov	[ebp+var_30], offset aAttributename ; "attributeName"
		mov	[esp], eax
		mov	[ebp+var_1A8], 18h
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_2C]
		lea	edx, [ebp+var_10C]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_1A8], 17h
		call	ds:_ZNK10QStringRef8toStringEv
		mov	ecx, [ebp+arg_4]
		sub	esp, 4
		lea	eax, [ebp+var_118]
		lea	edx, [ebp+var_38]
		mov	[ebp+var_38], offset aRepeatcount ; "repeatCount"
		mov	[esp+8], edx
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	[ebp+var_1A8], 16h
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_34]
		lea	edx, [ebp+var_118]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_1A8], 15h
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_40]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_124]
		mov	[ebp+var_40], offset aFill ; "fill"
		mov	[esp], eax
		mov	[ebp+var_1A8], 14h
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_3C]
		lea	edx, [ebp+var_124]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_1A8], 13h
		call	ds:_ZNK10QStringRef8toStringEv
		mov	ecx, [ebp+arg_4]
		sub	esp, 4
		lea	eax, [ebp+var_130]
		lea	edx, [ebp+var_48]
		mov	[ebp+var_48], offset aFrom ; "from"
		mov	[esp+8], edx
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	[ebp+var_1A8], 12h
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_44]
		lea	edx, [ebp+var_130]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_1A8], 11h
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_50]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_13C]
		mov	[ebp+var_50], offset aTo ; "to"
		mov	[esp], eax
		mov	[ebp+var_1A8], 10h
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_4C]
		lea	edx, [ebp+var_13C]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_1A8], 0Fh
		call	ds:_ZNK10QStringRef8toStringEv
		mov	ecx, [ebp+arg_4]
		sub	esp, 4
		lea	eax, [ebp+var_148]
		lea	edx, [ebp+var_58]
		mov	[ebp+var_58], offset aBy ; "by"
		mov	[esp+8], edx
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	[ebp+var_1A8], 0Eh
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_54]
		lea	edx, [ebp+var_148]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_1A8], 0Dh
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_60]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_154]
		mov	[ebp+var_60], offset aAdditive ; "additive"
		mov	[esp], eax
		mov	[ebp+var_1A8], 0Ch
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_5C]
		lea	edx, [ebp+var_154]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_1A8], 0Bh
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_64]
		mov	[esp+4], eax
		lea	eax, [ebp+var_5C]
		mov	[ebp+var_64], offset aSum ; "sum"
		mov	[esp], eax
		mov	[ebp+var_1A8], 0Ah
		call	ds:_ZNK7QStringeqERK13QLatin1String
		xor	eax, 1
		movzx	eax, al
		mov	[ebp+var_1E8], eax
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	[ebp+var_68], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_14]
		mov	ecx, [eax+8]
		test	ecx, ecx
		jnz	loc_7101ACD4
		mov	eax, [ebp+var_44]
		mov	edx, [eax+8]
		test	edx, edx
		jnz	loc_7101B2A3
		mov	eax, [ebp+var_54]
		mov	ecx, [eax+8]
		test	ecx, ecx
		jnz	loc_7101B682

loc_7101ACC8:				; CODE XREF: sub_7101A880+A39j
					; sub_7101A880+F84j
		mov	[ebp+var_1DD], 0
		jmp	loc_7101B152
; ---------------------------------------------------------------------------

loc_7101ACD4:				; CODE XREF: sub_7101A880+426j
		mov	eax, [eax+0Ch]
		test	eax, eax
		mov	[ebp+var_6C], eax
		jz	short loc_7101AD13
		cmp	word ptr [eax],	0
		jz	short loc_7101AD13

loc_7101ACE4:				; CODE XREF: sub_7101A880+491j
		lea	edx, [ebp+var_6C]
		lea	eax, [ebp+var_68]
		mov	[ebp+var_1A8], 9
		call	sub_71009CC0
		mov	eax, [ebp+var_6C]
		cmp	word ptr [eax],	0
		jz	short loc_7101AD13
		lea	edx, [eax+2]
		test	edx, edx
		mov	[ebp+var_6C], edx
		jz	short loc_7101AD13
		cmp	word ptr [eax+2], 0
		jnz	short loc_7101ACE4

loc_7101AD13:				; CODE XREF: sub_7101A880+45Cj
					; sub_7101A880+462j ...
		lea	eax, [ebp+var_70]
		lea	edx, [ebp+var_1C]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_1A8], 9
		call	ds:_ZNK7QString7trimmedEv
		sub	esp, 4
		lea	eax, [ebp+var_70]
		mov	[esp+4], eax
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_1A8], 8
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_70]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101B288

loc_7101AD61:				; CODE XREF: sub_7101A880+A1Ej
		lea	eax, [ebp+var_74]
		mov	[esp+4], eax
		lea	eax, [ebp+var_1C]
		mov	[ebp+var_74], offset aMs ; "ms"
		mov	dword ptr [esp+8], 1
		mov	[esp], eax
		mov	[ebp+var_1A8], 9
		call	ds:_ZNK7QString8endsWithERK13QLatin1StringN2Qt15CaseSensitivityE
		test	al, al
		jnz	loc_7101B265
		lea	eax, [ebp+var_78]
		mov	[esp+4], eax
		lea	eax, [ebp+var_1C]
		mov	[ebp+var_78], offset aS	; "s"
		mov	dword ptr [esp+8], 1
		mov	[esp], eax
		mov	[ebp+var_1A8], 9
		call	ds:_ZNK7QString8endsWithERK13QLatin1StringN2Qt15CaseSensitivityE
		test	al, al
		mov	[ebp+var_1D4], 3E8h
		jnz	loc_7101B820

loc_7101ADD3:				; CODE XREF: sub_7101A880+A03j
					; sub_7101A880+FC8j
		lea	eax, [ebp+var_1C]
		xor	edx, edx
		mov	[ebp+var_1A8], 9
		call	sub_71007460
		fnstcw	[ebp+var_1B2]
		fild	[ebp+var_1D4]
		lea	edx, [ebp+var_24]
		fmulp	st(1), st
		mov	[esp+4], edx
		movzx	eax, [ebp+var_1B2]
		mov	ah, 0Ch
		mov	[ebp+var_1B4], ax
		lea	eax, [ebp+var_7C]
		fldcw	[ebp+var_1B4]
		fistp	[ebp+var_1D8]
		fldcw	[ebp+var_1B2]
		mov	[esp], eax
		call	ds:_ZNK7QString7trimmedEv
		sub	esp, 4
		lea	eax, [ebp+var_7C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		mov	[ebp+var_1A8], 7
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_7C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101B590

loc_7101AE5B:				; CODE XREF: sub_7101A880+D26j
		lea	eax, [ebp+var_80]
		mov	[esp+4], eax
		lea	eax, [ebp+var_24]
		mov	[ebp+var_80], offset aMs ; "ms"
		mov	dword ptr [esp+8], 1
		mov	[esp], eax
		mov	[ebp+var_1A8], 9
		call	ds:_ZNK7QString8endsWithERK13QLatin1StringN2Qt15CaseSensitivityE
		test	al, al
		jz	loc_7101B4F0
		lea	eax, [ebp+var_24]
		mov	dword ptr [esp+4], 2
		mov	[esp], eax
		call	ds:_ZN7QString4chopEi
		mov	[ebp+var_1D4], 1

loc_7101AEAD:				; CODE XREF: sub_7101A880+CA4j
					; sub_7101A880+CC8j
		lea	eax, [ebp+var_24]
		xor	edx, edx
		mov	[ebp+var_1A8], 9
		call	sub_71007460
		fnstcw	[ebp+var_1B2]
		fild	[ebp+var_1D4]
		fmulp	st(1), st
		mov	[ebp+var_88], offset aTranslate	; "translate"
		movzx	eax, [ebp+var_1B2]
		mov	ah, 0Ch
		mov	[ebp+var_1B4], ax
		fldcw	[ebp+var_1B4]
		fistp	[ebp+var_1B0]
		fldcw	[ebp+var_1B2]
		mov	eax, [ebp+var_1B0]
		add	eax, [ebp+var_1D8]
		mov	[ebp+var_1DC], eax
		lea	eax, [ebp+var_88]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	[ebp+var_1E4], 1
		jnz	short loc_7101AF6D
		lea	eax, [ebp+var_8C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[ebp+var_8C], offset aScale ; "scale"
		mov	[esp], eax
		mov	[ebp+var_1A8], 9
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	[ebp+var_1E4], 2
		jz	loc_7101B760

loc_7101AF6D:				; CODE XREF: sub_7101A880+6AFj
					; sub_7101A880+F16j ...
		mov	dword ptr [esp], 0F0h ;	size_t
		mov	[ebp+var_1A8], 9
		call	sub_710517F0
		mov	[ebp+var_1C4], eax
		mov	edx, [ebp+var_1D8]
		mov	eax, [ebp+var_1DC]
		mov	ecx, [ebp+var_1C4]
		mov	dword ptr [esp+0Ch], 0
		mov	[esp+4], edx
		mov	[esp+8], eax
		mov	[esp], ecx
		mov	[ebp+var_1A8], 6
		call	sub_71026DA0
		lea	eax, [ebp+var_68]
		mov	edx, [ebp+var_1E8]
		mov	[esp+0Ch], eax
		mov	ecx, [ebp+var_1E4]
		mov	eax, [ebp+var_1C4]
		mov	[ebp+var_1A8], 9
		mov	[esp+8], edx
		mov	[esp+4], ecx
		mov	[esp], eax
		call	sub_71026FA0
		lea	eax, [ebp+var_9C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_9C], offset aFreeze ; "freeze"
		mov	[esp], eax
		call	ds:_ZNK7QStringeqERK13QLatin1String
		mov	edx, [ebp+var_1C4]
		movzx	eax, al
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_71025630
		lea	eax, [ebp+var_A0]
		mov	[esp+4], eax
		lea	eax, [ebp+var_34]
		mov	[ebp+var_A0], offset aIndefinite ; "indefinite"
		mov	[esp], eax
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		jz	loc_7101B550
		fld1
		fchs

loc_7101B051:				; CODE XREF: sub_7101A880+D04j
					; sub_7101A880+ED4j
		mov	ecx, [ebp+var_1C4]
		fstp	qword ptr [esp+4] ; double
		mov	[ebp+var_1A8], 9
		mov	[esp], ecx	; int
		call	sub_71025640
		lea	edx, [ebp+var_AC]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_160]
		mov	[ebp+var_AC], offset aId ; "id"
		mov	[esp], eax
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_A8]
		lea	edx, [ebp+var_160]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_1A8], 4
		call	ds:_ZNK10QStringRef8toStringEv
		mov	eax, [ebp+var_A8]
		sub	esp, 4
		mov	edx, [eax+8]
		test	edx, edx
		jz	loc_7101B5D0

loc_7101B0D1:				; CODE XREF: sub_7101A880+DDEj
					; sub_7101A880+DFDj
		lea	eax, [ebp+var_A8]
		mov	ecx, [ebp+var_1C4]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_1A8], 5
		mov	[esp+4], ecx
		mov	[esp], eax
		call	sub_71023700
		mov	eax, [ebp+var_A8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101B5B0

loc_7101B10E:				; CODE XREF: sub_7101A880+D49j
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_1A8], 9
		mov	[esp], edx
		call	sub_71022510
		mov	dword ptr [esp+4], 1
		mov	[esp], eax
		call	_ZN16QSvgTinyDocument11setAnimatedEb
		mov	ecx, [ebp+arg_8]
		mov	eax, [ebp+var_1DC]
		mov	edx, [ecx+2Ch]
		cmp	eax, edx
		jge	short loc_7101B145
		mov	eax, edx

loc_7101B145:				; CODE XREF: sub_7101A880+8C1j
		mov	edx, [ebp+arg_8]
		mov	[ebp+var_1DD], 1
		mov	[edx+2Ch], eax

loc_7101B152:				; CODE XREF: sub_7101A880+44Fj
		mov	eax, [ebp+var_68]
		test	eax, eax
		jz	short loc_7101B181
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7101B181
		mov	eax, [ebp+var_68]
		mov	dword ptr [esp+4], 8
		mov	[ebp+var_1A8], 0Ah
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_7101B181:				; CODE XREF: sub_7101A880+8D7j
					; sub_7101A880+8E1j
		mov	eax, [ebp+var_5C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101B4D0

loc_7101B192:				; CODE XREF: sub_7101A880+C66j
		mov	eax, [ebp+var_54]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101B4B0

loc_7101B1A3:				; CODE XREF: sub_7101A880+C46j
		mov	eax, [ebp+var_4C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101B490

loc_7101B1B4:				; CODE XREF: sub_7101A880+C26j
		mov	eax, [ebp+var_44]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101B470

loc_7101B1C5:				; CODE XREF: sub_7101A880+C06j
		mov	eax, [ebp+var_3C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101B450

loc_7101B1D6:				; CODE XREF: sub_7101A880+BE6j
		mov	eax, [ebp+var_34]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101B430

loc_7101B1E7:				; CODE XREF: sub_7101A880+BC6j
		mov	eax, [ebp+var_2C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101B410

loc_7101B1F8:				; CODE XREF: sub_7101A880+BA6j
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101B3F0

loc_7101B209:				; CODE XREF: sub_7101A880+B86j
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101B3D0

loc_7101B21A:				; CODE XREF: sub_7101A880+B66j
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101B3B4

loc_7101B22B:				; CODE XREF: sub_7101A880+B4Aj
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7101B24E
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1A8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7101B24E:				; CODE XREF: sub_7101A880+9B6j
		lea	eax, [ebp+var_1AC]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_1DD]
		leave
		retn
; ---------------------------------------------------------------------------

loc_7101B265:				; CODE XREF: sub_7101A880+50Fj
		lea	eax, [ebp+var_1C]
		mov	dword ptr [esp+4], 2
		mov	[esp], eax
		call	ds:_ZN7QString4chopEi
		mov	[ebp+var_1D4], 1
		jmp	loc_7101ADD3
; ---------------------------------------------------------------------------

loc_7101B288:				; CODE XREF: sub_7101A880+4DBj
		mov	eax, [ebp+var_70]
		mov	[ebp+var_1A8], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101AD61
; ---------------------------------------------------------------------------

loc_7101B2A3:				; CODE XREF: sub_7101A880+434j
		mov	edx, [ebp+var_4C]
		mov	edx, [edx+8]
		test	edx, edx
		jnz	loc_7101B706
		mov	edx, [ebp+var_54]
		mov	ecx, [edx+8]
		test	ecx, ecx
		jz	loc_7101ACC8
		mov	eax, [eax+0Ch]
		lea	edx, [ebp+var_6C]
		mov	[ebp+var_1A8], 9
		mov	[ebp+var_6C], eax
		lea	eax, [ebp+var_68]
		call	sub_71009CC0
		mov	eax, [ebp+var_54]
		lea	edx, [ebp+var_6C]
		mov	eax, [eax+0Ch]
		mov	[ebp+var_6C], eax
		lea	eax, [ebp+var_68]
		call	sub_71009CC0
		mov	eax, [ebp+var_68]
		mov	edx, [eax+8]
		lea	ecx, [edx-3]
		cmp	ecx, edx
		mov	[ebp+var_1BC], ecx
		jge	loc_7101AD13

loc_7101B305:				; CODE XREF: sub_7101A880+B29j
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_7101B32C
		mov	eax, [eax+4]
		mov	[esp+4], edx
		mov	[ebp+var_1A8], 9
		mov	[esp+8], eax
		lea	eax, [ebp+var_68]
		mov	[esp], eax
		call	sub_7104EDA0

loc_7101B32C:				; CODE XREF: sub_7101A880+A8Aj
		mov	edx, [ebp+var_68]
		mov	ecx, [ebp+var_1BC]
		mov	[ebp+var_1B8], edx
		mov	eax, edx
		fld	qword ptr [edx+ecx*8+10h]
		mov	[ebp+var_1C0], ecx
		fstp	[ebp+var_1D0]
		mov	edx, [edx]
		cmp	edx, 1
		jz	short loc_7101B37C
		mov	edx, eax
		mov	eax, [eax+4]
		lea	ecx, [ebp+var_68]
		mov	[esp+8], eax
		mov	eax, [edx+8]
		mov	[esp], ecx
		mov	[ebp+var_1A8], 9
		mov	[esp+4], eax
		call	sub_7104EDA0
		mov	eax, [ebp+var_68]

loc_7101B37C:				; CODE XREF: sub_7101A880+AD2j
		mov	edx, [ebp+var_1C0]
		fld	[ebp+var_1D0]
		mov	ecx, [ebp+var_1B8]
		add	[ebp+var_1BC], 1
		fadd	qword ptr [eax+edx*8-8]
		fstp	qword ptr [ecx+edx*8+10h]
		mov	eax, [ebp+var_68]
		mov	edx, [eax+8]
		cmp	[ebp+var_1BC], edx
		jl	loc_7101B305
		jmp	loc_7101AD13
; ---------------------------------------------------------------------------

loc_7101B3B4:				; CODE XREF: sub_7101A880+9A5j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_1A8], 1Eh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101B22B
; ---------------------------------------------------------------------------
		align 10h

loc_7101B3D0:				; CODE XREF: sub_7101A880+994j
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_1A8], 1Ch
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101B21A
; ---------------------------------------------------------------------------
		align 10h

loc_7101B3F0:				; CODE XREF: sub_7101A880+983j
		mov	eax, [ebp+var_24]
		mov	[ebp+var_1A8], 1Ah
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101B209
; ---------------------------------------------------------------------------
		align 10h

loc_7101B410:				; CODE XREF: sub_7101A880+972j
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_1A8], 18h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101B1F8
; ---------------------------------------------------------------------------
		align 10h

loc_7101B430:				; CODE XREF: sub_7101A880+961j
		mov	eax, [ebp+var_34]
		mov	[ebp+var_1A8], 16h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101B1E7
; ---------------------------------------------------------------------------
		align 10h

loc_7101B450:				; CODE XREF: sub_7101A880+950j
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_1A8], 14h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101B1D6
; ---------------------------------------------------------------------------
		align 10h

loc_7101B470:				; CODE XREF: sub_7101A880+93Fj
		mov	eax, [ebp+var_44]
		mov	[ebp+var_1A8], 12h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101B1C5
; ---------------------------------------------------------------------------
		align 10h

loc_7101B490:				; CODE XREF: sub_7101A880+92Ej
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_1A8], 10h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101B1B4
; ---------------------------------------------------------------------------
		align 10h

loc_7101B4B0:				; CODE XREF: sub_7101A880+91Dj
		mov	eax, [ebp+var_54]
		mov	[ebp+var_1A8], 0Eh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101B1A3
; ---------------------------------------------------------------------------
		align 10h

loc_7101B4D0:				; CODE XREF: sub_7101A880+90Cj
		mov	eax, [ebp+var_5C]
		mov	[ebp+var_1A8], 0Ch
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101B192
; ---------------------------------------------------------------------------
		align 10h

loc_7101B4F0:				; CODE XREF: sub_7101A880+609j
		lea	eax, [ebp+var_84]
		mov	[esp+4], eax
		lea	eax, [ebp+var_24]
		mov	[ebp+var_84], offset aS	; "s"
		mov	dword ptr [esp+8], 1
		mov	[esp], eax
		mov	[ebp+var_1A8], 9
		call	ds:_ZNK7QString8endsWithERK13QLatin1StringN2Qt15CaseSensitivityE
		test	al, al
		jz	loc_7101AEAD
		lea	eax, [ebp+var_24]
		mov	dword ptr [esp+4], 1
		mov	[esp], eax
		call	ds:_ZN7QString4chopEi
		mov	[ebp+var_1D4], 3E8h
		jmp	loc_7101AEAD
; ---------------------------------------------------------------------------
		align 10h

loc_7101B550:				; CODE XREF: sub_7101A880+7C7j
		lea	eax, [ebp+var_A4]
		mov	[esp+4], eax
		lea	eax, [ebp+var_34]
		mov	[ebp+var_A4], offset byte_71059862
		mov	[esp], eax
		mov	[ebp+var_1A8], 9
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		jz	loc_7101B740
		fld1
		jmp	loc_7101B051
; ---------------------------------------------------------------------------
		align 10h

loc_7101B590:				; CODE XREF: sub_7101A880+5D5j
		mov	eax, [ebp+var_7C]
		mov	[ebp+var_1A8], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101AE5B
; ---------------------------------------------------------------------------
		align 10h

loc_7101B5B0:				; CODE XREF: sub_7101A880+888j
		mov	eax, [ebp+var_A8]
		mov	[ebp+var_1A8], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101B10E
; ---------------------------------------------------------------------------
		align 10h

loc_7101B5D0:				; CODE XREF: sub_7101A880+84Bj
		mov	ecx, [ebp+arg_4]
		lea	eax, [ebp+var_16C]
		lea	edx, [ebp+var_B4]
		mov	[ebp+var_B4], offset aXmlId ; "xml:id"
		mov	[esp+8], edx
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	[ebp+var_1A8], 3
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_B0]
		lea	edx, [ebp+var_16C]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_1A8], 2
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_B0]
		mov	[esp+4], eax
		lea	eax, [ebp+var_A8]
		mov	[esp], eax
		mov	[ebp+var_1A8], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_B0]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7101B0D1
		mov	eax, [ebp+var_B0]
		mov	[ebp+var_1A8], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101B0D1
; ---------------------------------------------------------------------------

loc_7101B682:				; CODE XREF: sub_7101A880+442j
		lea	eax, [ebp+var_C0]
		fldz
		mov	[esp+4], eax
		lea	eax, [ebp+var_68]
		fstp	[ebp+var_C0]
		mov	[esp], eax
		mov	[ebp+var_1A8], 9
		call	sub_7104ED10
		lea	eax, [ebp+var_C8]
		fldz
		mov	[esp+4], eax
		lea	eax, [ebp+var_68]
		fstp	[ebp+var_C8]
		mov	[esp], eax
		call	sub_7104ED10
		lea	eax, [ebp+var_D0]
		fldz
		mov	[esp+4], eax
		lea	eax, [ebp+var_68]
		fstp	[ebp+var_D0]
		mov	[esp], eax
		call	sub_7104ED10
		mov	eax, [ebp+var_54]
		lea	edx, [ebp+var_6C]
		mov	eax, [eax+0Ch]
		mov	[ebp+var_6C], eax
		lea	eax, [ebp+var_68]
		call	sub_71009CC0
		mov	[ebp+var_1E8], 0
		jmp	loc_7101AD13
; ---------------------------------------------------------------------------

loc_7101B706:				; CODE XREF: sub_7101A880+A2Bj
		mov	eax, [eax+0Ch]
		lea	edx, [ebp+var_6C]
		mov	[ebp+var_1A8], 9
		mov	[ebp+var_6C], eax
		lea	eax, [ebp+var_68]
		call	sub_71009CC0
		mov	eax, [ebp+var_4C]
		lea	edx, [ebp+var_6C]
		mov	eax, [eax+0Ch]
		mov	[ebp+var_6C], eax
		lea	eax, [ebp+var_68]
		call	sub_71009CC0
		jmp	loc_7101AD13
; ---------------------------------------------------------------------------
		align 10h

loc_7101B740:				; CODE XREF: sub_7101A880+CFCj
		lea	eax, [ebp+var_34]
		xor	edx, edx
		mov	[ebp+var_1A8], 9
		call	sub_71007460
		jmp	loc_7101B051
; ---------------------------------------------------------------------------
		align 10h

loc_7101B760:				; CODE XREF: sub_7101A880+6E7j
		lea	eax, [ebp+var_90]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[ebp+var_90], offset aRotate ; "rotate"
		mov	[esp], eax
		mov	[ebp+var_1A8], 9
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	[ebp+var_1E4], 3
		jnz	loc_7101AF6D
		lea	eax, [ebp+var_94]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[ebp+var_94], offset aSkewx ; "skewX"
		mov	[esp], eax
		mov	[ebp+var_1A8], 9
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	[ebp+var_1E4], 4
		jnz	loc_7101AF6D
		lea	eax, [ebp+var_98]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[ebp+var_98], offset aSkewy ; "skewY"
		mov	[esp], eax
		mov	[ebp+var_1A8], 9
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		jz	loc_7101ACC8
		mov	[ebp+var_1E4], 5
		jmp	loc_7101AF6D
; ---------------------------------------------------------------------------
		align 10h

loc_7101B820:				; CODE XREF: sub_7101A880+54Dj
		lea	eax, [ebp+var_1C]
		mov	dword ptr [esp+4], 1
		mov	[esp], eax
		mov	[ebp+var_1A8], 9
		call	ds:_ZN7QString4chopEi
		mov	[ebp+var_1D4], 3E8h
		jmp	loc_7101ADD3
sub_7101A880	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7101B84D	proc near		; DATA XREF: sub_7101A880+35o
		add	ebp, 8
		mov	eax, [ebp-1A8h]
		mov	edx, [ebp-1A4h]
		cmp	eax, 1
		mov	[ebp-1ECh], edx
		jz	loc_7101B9B0
		cmp	eax, 2
		jz	loc_7101B9B0
		cmp	eax, 3
		jz	loc_7101B9C8
		cmp	eax, 4
		jz	loc_7101B9B0
		cmp	eax, 5
		jz	loc_7101BB0E
		cmp	eax, 6
		jz	loc_7101BB21
		cmp	eax, 7
		nop
		lea	esi, [esi+0]
		jz	loc_7101BAF4
		cmp	eax, 8
		jz	loc_7101B9C8
		cmp	eax, 9
		jz	loc_7101B9DD
		cmp	eax, 0Ah
		nop
		lea	esi, [esi+0]
		jz	loc_7101B9F2
		cmp	eax, 0Bh
		jz	loc_7101B9F2
		cmp	eax, 0Ch
		jz	loc_7101BA07
		cmp	eax, 0Dh
		nop
		lea	esi, [esi+0]
		jz	loc_7101BA07
		cmp	eax, 0Eh
		jz	loc_7101BA1C
		cmp	eax, 0Fh
		jz	loc_7101BA1C
		cmp	eax, 10h
		nop
		lea	esi, [esi+0]
		jz	loc_7101BA31
		cmp	eax, 11h
		jz	loc_7101BA31
		cmp	eax, 12h
		jz	loc_7101BA46
		cmp	eax, 13h
		nop
		lea	esi, [esi+0]
		jz	loc_7101BA46
		cmp	eax, 14h
		jz	loc_7101BA5B
		cmp	eax, 15h
		jz	loc_7101BA5B
		cmp	eax, 16h
		nop
		lea	esi, [esi+0]
		jz	loc_7101BA70
		cmp	eax, 17h
		jz	loc_7101BA70
		cmp	eax, 18h
		jz	loc_7101BA85
		cmp	eax, 19h
		nop
		lea	esi, [esi+0]
		jz	loc_7101BA85
		cmp	eax, 1Ah
		jz	loc_7101BA9A
		cmp	eax, 1Bh
		jz	loc_7101BA9A
		cmp	eax, 1Ch
		nop
		lea	esi, [esi+0]
		jz	loc_7101BAAF
		cmp	eax, 1Dh
		jz	loc_7101BAAF
		cmp	eax, 1Eh
		jz	loc_7101BADC
		lea	eax, [ebp-0B0h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-1A8h], 0
		call	sub_710477B0

loc_7101B9B0:				; CODE XREF: sub_7101B84D+18j
					; sub_7101B84D+21j ...
		lea	eax, [ebp-0A8h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-1A8h], 0
		call	sub_710477B0

loc_7101B9C8:				; CODE XREF: sub_7101B84D+2Aj
					; sub_7101B84D+5Cj ...
		lea	eax, [ebp-68h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-1A8h], 0
		call	sub_7104F050

loc_7101B9DD:				; CODE XREF: sub_7101B84D+65j
		lea	eax, [ebp-5Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-1A8h], 0
		call	sub_710477B0

loc_7101B9F2:				; CODE XREF: sub_7101B84D+73j
					; sub_7101B84D+7Cj
		lea	eax, [ebp-54h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-1A8h], 0
		call	sub_710477B0

loc_7101BA07:				; CODE XREF: sub_7101B84D+85j
					; sub_7101B84D+93j
		lea	eax, [ebp-4Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-1A8h], 0
		call	sub_710477B0

loc_7101BA1C:				; CODE XREF: sub_7101B84D+9Cj
					; sub_7101B84D+A5j
		lea	eax, [ebp-44h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-1A8h], 0
		call	sub_710477B0

loc_7101BA31:				; CODE XREF: sub_7101B84D+B3j
					; sub_7101B84D+BCj
		lea	eax, [ebp-3Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-1A8h], 0
		call	sub_710477B0

loc_7101BA46:				; CODE XREF: sub_7101B84D+C5j
					; sub_7101B84D+D3j
		lea	eax, [ebp-34h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-1A8h], 0
		call	sub_710477B0

loc_7101BA5B:				; CODE XREF: sub_7101B84D+DCj
					; sub_7101B84D+E5j
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-1A8h], 0
		call	sub_710477B0

loc_7101BA70:				; CODE XREF: sub_7101B84D+F3j
					; sub_7101B84D+FCj
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-1A8h], 0
		call	sub_710477B0

loc_7101BA85:				; CODE XREF: sub_7101B84D+105j
					; sub_7101B84D+113j
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-1A8h], 0
		call	sub_710477B0

loc_7101BA9A:				; CODE XREF: sub_7101B84D+11Cj
					; sub_7101B84D+125j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-1A8h], 0
		call	sub_710477B0

loc_7101BAAF:				; CODE XREF: sub_7101B84D+133j
					; sub_7101B84D+13Cj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-1A8h], 0
		call	sub_710477B0
		mov	ecx, [ebp-1ECh]
		mov	dword ptr [ebp-1A8h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7101BADC:				; CODE XREF: sub_7101B84D+145j
		mov	eax, [ebp-1ECh]
		mov	dword ptr [ebp-1A8h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7101BAF4:				; CODE XREF: sub_7101B84D+53j
		lea	eax, [ebp-70h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-1A8h], 0
		call	sub_710477B0
		jmp	loc_7101B9C8
; ---------------------------------------------------------------------------

loc_7101BB0E:				; CODE XREF: sub_7101B84D+3Cj
		mov	eax, [ebp-1C4h]
		mov	[esp+0], eax
		call	sub_710517D0
		jmp	loc_7101B9C8
; ---------------------------------------------------------------------------

loc_7101BB21:				; CODE XREF: sub_7101B84D+45j
		lea	eax, [ebp-7Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-1A8h], 0
		call	sub_710477B0
		jmp	loc_7101B9C8
sub_7101B84D	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7101BB40	proc near		; CODE XREF: sub_7101E100+291p
					; sub_7101E100+654p

var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= byte ptr -7Ch
var_78		= dword	ptr -78h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_48		= dword	ptr -48h
var_40		= byte ptr -40h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 0C4h
		mov	[ebp+var_AC], eax
		lea	eax, [ebp+var_8]
		mov	[ebp+var_5C], eax
		lea	eax, [ebp+var_7C]
		mov	[ebp+var_B0], edx
		mov	[ebp+var_B4], ecx
		mov	[ebp+var_54], esp
		mov	[esp], eax
		mov	[ebp+var_64], offset sub_710525B0
		mov	[ebp+var_60], offset word_710533B6
		mov	[ebp+var_58], offset sub_7101C1C5
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+var_AC]
		lea	eax, [ebp+var_C]
		mov	ecx, [ebp+var_B4]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+8], edx
		mov	[esp+4], ecx
		mov	dword ptr [esp+0Ch], 0
		call	ds:_ZN4QCss13StyleSelector19declarationsForNodeENS0_7NodePtrEPKc
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	[ebp+var_10], eax
		push	ebx
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_C]
		cmp	dword ptr [eax+8], 0
		jle	loc_7101BF26
		mov	ebx, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_90], 0
		mov	[ebp+var_84], ebx
		mov	[ebp+var_80], ebx
		lea	esi, [esi+0]

loc_7101BBF0:				; CODE XREF: sub_7101BB40+3E0j
		mov	eax, [ebp+var_C]
		mov	edx, [ebp+var_90]
		mov	[ebp+var_94], eax
		mov	edx, [eax+edx*4+10h]
		mov	eax, [edx+4]
		mov	[ebp+var_9C], edx
		mov	ecx, [eax+8]
		test	ecx, ecx
		jz	loc_7101BF0D
		mov	eax, [edx+0Ch]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_7101BC47
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_78], 8
		mov	[esp+4], eax
		mov	eax, [ebp+var_9C]
		add	eax, 0Ch
		mov	[esp], eax
		call	sub_7104CC30

loc_7101BC47:				; CODE XREF: sub_7101BB40+DFj
		mov	ecx, [ebp+var_9C]
		lea	ebx, [ebp+var_40]
		mov	eax, [ecx+0Ch]
		mov	edx, [eax+10h]
		add	eax, 18h
		mov	[esp+4], eax
		mov	[esp], ebx
		mov	[ebp+var_78], 8
		mov	[ebp+var_48], edx
		call	ds:_ZN8QVariantC1ERKS_
		mov	eax, [ebp+var_84]
		mov	edx, [ebp+var_80]
		mov	[ebp+var_14], eax
		lock inc dword ptr [edx]
		setnz	al
		mov	ecx, [ebp+var_90]
		mov	ebx, [ebp+var_94]
		mov	ecx, [ebx+ecx*4+10h]
		mov	[ebp+var_8C], ecx
		mov	eax, [ecx+0Ch]
		mov	edx, [eax+8]
		cmp	edx, 1
		jz	loc_7101BE15
		test	edx, edx
		jle	loc_7101BE70
		mov	[ebp+var_88], 0
		jmp	loc_7101BD58
; ---------------------------------------------------------------------------
		align 10h

loc_7101BCC0:				; CODE XREF: sub_7101BB40+27Dj
		mov	eax, [ebp+var_14]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_7101BE00
		mov	edx, [eax+8]

loc_7101BCD1:				; CODE XREF: sub_7101BB40+2D0j
		add	edx, 1
		mov	[esp], edx
		mov	[ebp+var_78], 5
		call	ds:_ZN7QString4growEi
		lea	ebx, [ebp+var_14]
		mov	[esp+4], eax
		mov	[esp], ebx
		call	ds:_ZN7QString7reallocEi
		mov	eax, [ebp+var_14]
		mov	edx, [eax+8]

loc_7101BCFA:				; CODE XREF: sub_7101BB40+2C6j
		mov	ecx, [eax+0Ch]
		mov	word ptr [ecx+edx*2], 2Ch
		add	edx, 1
		mov	[eax+8], edx
		mov	eax, [ebp+var_14]
		mov	edx, [eax+8]
		mov	eax, [eax+0Ch]
		mov	word ptr [eax+edx*2], 0

loc_7101BD18:				; CODE XREF: sub_7101BB40+29Dj
		mov	eax, [ebp+var_2C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101BDE2

loc_7101BD29:				; CODE XREF: sub_7101BB40+2B5j
		mov	ecx, [ebp+var_90]
		mov	ebx, [ebp+var_94]
		add	[ebp+var_88], 1
		mov	ecx, [ebx+ecx*4+10h]
		mov	[ebp+var_8C], ecx
		mov	eax, [ecx+0Ch]
		mov	edx, [eax+8]
		cmp	[ebp+var_88], edx
		jge	loc_7101BE70

loc_7101BD58:				; CODE XREF: sub_7101BB40+179j
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_7101BD82
		mov	eax, [eax+4]
		mov	[esp+4], edx
		mov	[ebp+var_78], 6
		mov	[esp+8], eax
		mov	eax, [ebp+var_8C]
		add	eax, 0Ch
		mov	[esp], eax
		call	sub_7104CC30

loc_7101BD82:				; CODE XREF: sub_7101BB40+21Dj
		mov	ebx, [ebp+var_88]
		lea	ecx, [ebp+var_2C]
		mov	edx, [ebp+var_8C]
		lea	eax, [ebx+ebx*2]
		lea	eax, ds:10h[eax*8]
		add	eax, [edx+0Ch]
		mov	[esp], ecx
		mov	[ebp+var_78], 6
		mov	[esp+4], eax
		call	ds:_ZNK4QCss5Value8toStringEv
		mov	eax, [ebp+var_2C]
		sub	esp, 4
		mov	eax, [eax+8]
		test	eax, eax
		jz	loc_7101BCC0
		lea	eax, [ebp+var_2C]
		lea	edx, [ebp+var_14]
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_78], 5
		call	ds:_ZN7QString6appendERKS_
		jmp	loc_7101BD18
; ---------------------------------------------------------------------------

loc_7101BDE2:				; CODE XREF: sub_7101BB40+1E3j
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_78], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101BD29
; ---------------------------------------------------------------------------
		align 10h

loc_7101BE00:				; CODE XREF: sub_7101BB40+188j
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jl	loc_7101BCFA
		lea	esi, [esi+0]
		jmp	loc_7101BCD1
; ---------------------------------------------------------------------------

loc_7101BE15:				; CODE XREF: sub_7101BB40+161j
		lea	edx, [ebp+var_28]
		lea	eax, [ebp+var_48]
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_78], 6
		call	ds:_ZNK4QCss5Value8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_28]
		lea	ebx, [ebp+var_14]
		mov	[esp+4], eax
		mov	[esp], ebx
		mov	[ebp+var_78], 4
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_28]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7101BE70
		mov	eax, [ebp+var_28]
		mov	[ebp+var_78], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	esi, [esi+0]

loc_7101BE70:				; CODE XREF: sub_7101BB40+169j
					; sub_7101BB40+212j ...
		mov	eax, [ebp+var_48]
		cmp	eax, 7
		jz	loc_7101BFC0
		cmp	eax, 9
		jz	loc_7101C001
		cmp	eax, 6
		jz	loc_7101C11C

loc_7101BE8E:				; CODE XREF: sub_7101BB40+4BCj
					; sub_7101BB40+5B8j ...
		mov	ecx, [ebp+var_90]
		mov	ebx, [ebp+var_94]
		mov	edx, [ebp+var_84]
		mov	eax, [ebx+ecx*4+10h]
		mov	[ebp+var_20], edx
		mov	ecx, [ebp+var_80]
		add	eax, 4
		lock inc dword ptr [ecx]
		setnz	dl
		mov	[esp+8], eax
		lea	eax, [ebp+var_20]
		lea	ebx, [ebp+var_14]
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp+0Ch], ebx
		mov	[esp], eax
		mov	[ebp+var_78], 2
		call	ds:_ZN20QXmlStreamAttributes6appendERK7QStringS2_S2_
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101BF90

loc_7101BEE9:				; CODE XREF: sub_7101BB40+463j
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101BFA8

loc_7101BEFA:				; CODE XREF: sub_7101BB40+47Bj
		lea	eax, [ebp+var_40]
		mov	[esp], eax
		mov	[ebp+var_78], 8
		call	ds:_ZN8QVariantD1Ev

loc_7101BF0D:				; CODE XREF: sub_7101BB40+D1j
		mov	eax, [ebp+var_C]
		add	[ebp+var_90], 1
		mov	edx, [ebp+var_90]
		cmp	edx, [eax+8]
		jl	loc_7101BBF0

loc_7101BF26:				; CODE XREF: sub_7101BB40+8Aj
		mov	ecx, [ebp+var_B0]
		lea	edx, [ebp+var_10]
		mov	eax, [ebp+var_AC]
		mov	[ebp+var_78], 8
		call	sub_71017670
		mov	eax, [ebp+var_10]
		test	eax, eax
		jz	short loc_7101BF56
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101C1A7

loc_7101BF56:				; CODE XREF: sub_7101BB40+406j
					; sub_7101BB40+680j
		mov	eax, [ebp+var_C]
		test	eax, eax
		jz	short loc_7101BF80
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7101BF80
		mov	eax, [ebp+var_C]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	sub_7104BA80

loc_7101BF80:				; CODE XREF: sub_7101BB40+41Bj
					; sub_7101BB40+425j
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	ebx, [ebp+var_4]
		leave
		retn
; ---------------------------------------------------------------------------

loc_7101BF90:				; CODE XREF: sub_7101BB40+3A3j
		mov	eax, [ebp+var_20]
		mov	[ebp+var_78], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101BEE9
; ---------------------------------------------------------------------------

loc_7101BFA8:				; CODE XREF: sub_7101BB40+3B4j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_78], 7
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101BEFA
; ---------------------------------------------------------------------------

loc_7101BFC0:				; CODE XREF: sub_7101BB40+336j
		lea	eax, [ebp+var_24]
		mov	[esp+8], eax
		lea	eax, [ebp+var_14]
		mov	[ebp+var_24], offset aUrl_0 ; "url("
		mov	dword ptr [esp+4], 0
		mov	[esp], eax
		mov	[ebp+var_78], 6
		call	ds:_ZN7QString6insertEiRK13QLatin1String
		lea	edx, [ebp+var_14]
		mov	word ptr [esp+4], 29h
		mov	[esp], edx
		call	ds:_ZN7QString6appendE5QChar
		jmp	loc_7101BE8E
; ---------------------------------------------------------------------------

loc_7101C001:				; CODE XREF: sub_7101BB40+33Fj
		lea	eax, [ebp+var_18]
		lea	ecx, [ebp+var_40]
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	[ebp+var_78], 6
		call	ds:_ZNK8QVariant12toStringListEv
		mov	edx, [ebp+var_18]
		sub	esp, 4
		lea	ebx, [ebp+var_14]
		mov	eax, [edx+8]
		mov	[esp], ebx
		mov	[ebp+var_78], 3
		lea	eax, [edx+eax*4+14h]
		mov	[esp+4], eax
		call	ds:_ZN7QString6appendERKS_
		mov	word ptr [esp+4], 28h
		mov	[esp], ebx
		call	ds:_ZN7QString6appendE5QChar
		mov	eax, [ebp+var_18]
		mov	[ebp+var_98], 1
		mov	ecx, [eax+0Ch]
		mov	edx, [eax+8]

loc_7101C062:				; CODE XREF: sub_7101BB40+56Bj
		sub	ecx, edx
		cmp	[ebp+var_98], ecx
		jge	short loc_7101C0D3

loc_7101C06C:				; CODE XREF: sub_7101BB40+591j
		mov	ecx, [ebp+var_98]
		lea	ebx, [ebp+var_14]
		mov	[esp], ebx
		mov	[ebp+var_78], 3
		lea	edx, [edx+ecx+4]
		lea	eax, [eax+edx*4+4]
		mov	[esp+4], eax
		call	ds:_ZN7QString6appendERKS_
		mov	eax, [ebp+var_18]
		add	[ebp+var_98], 1
		mov	ecx, [eax+0Ch]
		mov	edx, [eax+8]
		mov	ebx, ecx
		sub	ebx, edx
		cmp	[ebp+var_98], ebx
		jge	short loc_7101C062
		lea	eax, [ebp+var_14]
		mov	word ptr [esp+4], 2Ch
		mov	[esp], eax
		call	ds:_ZN7QString6appendE5QChar
		mov	eax, [ebp+var_18]
		mov	ecx, [eax+0Ch]
		mov	edx, [eax+8]
		sub	ecx, edx
		cmp	[ebp+var_98], ecx
		jl	short loc_7101C06C

loc_7101C0D3:				; CODE XREF: sub_7101BB40+52Aj
		lea	edx, [ebp+var_14]
		mov	word ptr [esp+4], 29h
		mov	[esp], edx
		mov	[ebp+var_78], 3
		call	ds:_ZN7QString6appendE5QChar
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7101BE8E
		mov	eax, [ebp+var_18]
		mov	[ebp+var_78], 6
		mov	[esp+4], eax
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		call	sub_710459F0
		jmp	loc_7101BE8E
; ---------------------------------------------------------------------------

loc_7101C11C:				; CODE XREF: sub_7101BB40+348j
		lea	ecx, [ebp+var_40]
		mov	dword ptr [esp+4], 0
		mov	[esp], ecx
		mov	[ebp+var_78], 6
		call	ds:_ZNK8QVariant5toIntEPb
		cmp	eax, 26h
		jnz	loc_7101BE8E
		lea	eax, [ebp+var_1C]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aNone	; "none"
		mov	[esp], eax
		mov	[ebp+var_78], 6
		call	ds:_ZN7QString10fromLatin1EPKci
		lea	eax, [ebp+var_1C]
		push	ebx
		lea	ebx, [ebp+var_14]
		mov	[esp+4], eax
		mov	[esp], ebx
		mov	[ebp+var_78], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7101BE8E
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_78], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101BE8E
; ---------------------------------------------------------------------------

loc_7101C1A7:				; CODE XREF: sub_7101BB40+410j
		mov	eax, [ebp+var_10]
		mov	[ebp+var_78], 9
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	sub_71047F70
		jmp	loc_7101BF56
sub_7101BB40	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7101C1C5	proc near		; DATA XREF: sub_7101BB40+39o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-78h]
		mov	edx, [ebp-74h]
		cmp	eax, 1
		mov	[ebp-0A8h], edx
		jz	loc_7101C2ED
		cmp	eax, 2
		jz	loc_7101C31C
		cmp	eax, 3
		jz	loc_7101C305
		cmp	eax, 4
		jz	loc_7101C2D6
		cmp	eax, 5
		nop
		lea	esi, [esi+0]
		jz	short loc_7101C224
		cmp	eax, 6
		jz	short loc_7101C236
		cmp	eax, 7
		jz	short loc_7101C249
		cmp	eax, 8
		nop
		jz	short loc_7101C28B
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_710477B0

loc_7101C224:				; CODE XREF: sub_7101C1C5+3Bj
					; sub_7101C1C5+123j ...
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_710477B0

loc_7101C236:				; CODE XREF: sub_7101C1C5+40j
		lea	eax, [ebp-40h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	ds:_ZN8QVariantD1Ev

loc_7101C249:				; CODE XREF: sub_7101C1C5+45j
		mov	eax, [ebp-10h]
		mov	ecx, [ebp-0A8h]
		test	eax, eax
		mov	[ebp-0A4h], ecx
		jz	short loc_7101C27F
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7101C27F
		mov	eax, [ebp-10h]
		mov	dword ptr [ebp-78h], 0
		mov	[esp+arg_0], eax
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		call	sub_71047F70

loc_7101C27F:				; CODE XREF: sub_7101C1C5+95j
					; sub_7101C1C5+9Fj
		mov	ebx, [ebp-0A4h]
		mov	[ebp-0A8h], ebx

loc_7101C28B:				; CODE XREF: sub_7101C1C5+4Bj
		mov	eax, [ebp-0A8h]
		mov	[ebp-0A0h], eax
		mov	eax, [ebp-0Ch]
		test	eax, eax
		jz	short loc_7101C2C1
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7101C2C1
		mov	eax, [ebp-0Ch]
		mov	dword ptr [ebp-78h], 0
		mov	[esp+arg_0], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_7104BA80

loc_7101C2C1:				; CODE XREF: sub_7101C1C5+D7j
					; sub_7101C1C5+E1j
		mov	edx, [ebp-0A0h]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7101C2D6:				; CODE XREF: sub_7101C1C5+2Dj
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_710477B0
		jmp	loc_7101C224
; ---------------------------------------------------------------------------

loc_7101C2ED:				; CODE XREF: sub_7101C1C5+12j
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_710477B0
		nop
		jmp	loc_7101C224
; ---------------------------------------------------------------------------

loc_7101C305:				; CODE XREF: sub_7101C1C5+24j
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_710477B0
		jmp	loc_7101C224
; ---------------------------------------------------------------------------

loc_7101C31C:				; CODE XREF: sub_7101C1C5+1Bj
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_7103BBF0
		xchg	ax, ax
		jmp	loc_7101C224
sub_7101C1C5	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7101C340	proc near		; DATA XREF: sub_7101E100+1AFDo

var_2EC		= dword	ptr -2ECh
var_2E8		= dword	ptr -2E8h
var_2E1		= byte ptr -2E1h
var_2E0		= dword	ptr -2E0h
var_2DC		= dword	ptr -2DCh
var_2D8		= dword	ptr -2D8h
var_2D4		= dword	ptr -2D4h
var_2D0		= dword	ptr -2D0h
var_2CC		= byte ptr -2CCh
var_2C8		= dword	ptr -2C8h
var_2B4		= dword	ptr -2B4h
var_2B0		= dword	ptr -2B0h
var_2AC		= dword	ptr -2ACh
var_2A8		= dword	ptr -2A8h
var_2A4		= dword	ptr -2A4h
var_298		= dword	ptr -298h
var_168		= byte ptr -168h
var_15C		= dword	ptr -15Ch
var_158		= dword	ptr -158h
var_154		= dword	ptr -154h
var_150		= byte ptr -150h
var_144		= dword	ptr -144h
var_140		= dword	ptr -140h
var_C0		= dword	ptr -0C0h
var_B8		= byte ptr -0B8h
var_A8		= byte ptr -0A8h
var_98		= byte ptr -98h
var_8C		= byte ptr -8Ch
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= byte ptr -74h
var_68		= qword	ptr -68h
var_60		= qword	ptr -60h
var_58		= qword	ptr -58h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_9		= byte ptr -9
var_8		= byte ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 304h
		mov	[ebp+var_2AC], eax
		lea	eax, [ebp+var_2CC]
		mov	[esp], eax
		mov	[ebp+var_2B4], offset sub_710525B0
		mov	[ebp+var_2B0], offset dword_71053404
		mov	[ebp+var_2A8], offset sub_7101CD4C
		mov	[ebp+var_2A4], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+10h]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	eax
		mov	[ebp+var_2E1], 0
		cmp	eax, 6
		jz	short loc_7101C3C2

loc_7101C3A8:				; CODE XREF: sub_7101C340+6DAj
					; sub_7101C340+6FDj
		lea	eax, [ebp+var_2CC]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_2E1]
		mov	ebx, [ebp+var_4]
		leave
		retn
; ---------------------------------------------------------------------------

loc_7101C3C2:				; CODE XREF: sub_7101C340+66j
		mov	ecx, [ebp+arg_4]
		lea	eax, [ebp+var_40]
		lea	ebx, [ebp+var_8C]
		mov	[esp+8], eax
		mov	[ebp+var_40], offset aId ; "id"
		mov	[esp+4], ecx
		mov	[esp], ebx
		mov	[ebp+var_2C8], 0FFFFFFFFh
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		lea	eax, [ebp+var_10]
		mov	[ebp+var_2C8], 5
		sub	esp, 4
		mov	[esp+4], ebx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		mov	eax, [ebp+var_10]
		sub	esp, 4
		mov	edx, [eax+8]
		test	edx, edx
		jz	loc_7101CA9E

loc_7101C41E:				; CODE XREF: sub_7101C340+7DAj
					; sub_7101C340+7F6j
		lea	edx, [ebp+var_18]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_74]
		mov	[ebp+var_18], offset aClass ; "class"
		mov	[esp], eax
		mov	[ebp+var_2C8], 13h
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_14]
		lea	edx, [ebp+var_74]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_2C8], 12h
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_140]
		mov	dword ptr [esp+4], 0
		mov	[esp], eax
		mov	[ebp+var_2C8], 11h
		call	sub_71022420
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		lea	eax, [ebp+var_140]
		mov	[ebp+var_140], offset off_7105D688
		mov	[esp], eax
		mov	[ebp+var_2C8], 10h
		call	sub_71022770
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		lea	eax, [ebp+var_140]
		mov	[esp], eax
		call	sub_71022750
		mov	ecx, [ebp+arg_8]
		lea	edx, [ebp+var_140]
		mov	dword ptr [esp+0Ch], 0
		lea	eax, [ebp+var_1C]
		mov	[esp+8], edx
		mov	edx, [ecx+28h]
		mov	[esp], eax
		mov	[esp+4], edx
		call	ds:_ZN4QCss13StyleSelector19declarationsForNodeENS0_7NodePtrEPKc
		mov	ebx, [ebp+arg_4]
		sub	esp, 4
		mov	eax, [ebx]
		mov	[ebp+var_20], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_20]
		test	byte ptr [eax+0Ch], 1
		jz	loc_7101CBE0

loc_7101C510:				; CODE XREF: sub_7101C340+8C3j
		mov	eax, [ebp+var_1C]
		mov	eax, [eax+8]
		test	eax, eax
		jle	loc_7101C711
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_2D8], 0
		mov	[ebp+var_2D0], eax
		mov	[ebp+var_2D4], eax
		jmp	short loc_7101C559
; ---------------------------------------------------------------------------
		align 10h

loc_7101C540:				; CODE XREF: sub_7101C340+23Aj
					; sub_7101C340+243j ...
		mov	eax, [ebp+var_1C]
		add	[ebp+var_2D8], 1
		mov	edx, [ebp+var_2D8]
		cmp	edx, [eax+8]
		jge	loc_7101C711

loc_7101C559:				; CODE XREF: sub_7101C340+1F9j
		mov	edx, [ebp+var_1C]
		mov	ecx, [ebp+var_2D8]
		mov	[ebp+var_2E0], edx
		mov	ecx, [edx+ecx*4+10h]
		mov	eax, [ecx+4]
		mov	[ebp+var_2DC], ecx
		mov	ebx, [eax+8]
		test	ebx, ebx
		jz	short loc_7101C540
		mov	eax, [ecx+0Ch]
		cmp	dword ptr [eax+8], 1
		jnz	short loc_7101C540
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_7101C5B2
		mov	eax, [eax+4]
		mov	dword ptr [esp+4], 1
		mov	[ebp+var_2C8], 0Eh
		mov	[esp+8], eax
		mov	eax, ecx
		add	eax, 0Ch
		mov	[esp], eax
		call	sub_7104CC30

loc_7101C5B2:				; CODE XREF: sub_7101C340+24Aj
		mov	ebx, [ebp+var_2DC]
		mov	eax, [ebx+0Ch]
		mov	edx, [eax+10h]
		add	eax, 18h
		mov	[esp+4], eax
		lea	eax, [ebp+var_B8]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0Eh
		mov	[ebp+var_C0], edx
		call	ds:_ZN8QVariantC1ERKS_
		lea	edx, [ebp+var_C0]
		lea	ecx, [ebp+var_24]
		mov	[esp+4], edx
		mov	[esp], ecx
		mov	[ebp+var_2C8], 0Dh
		call	ds:_ZNK4QCss5Value8toStringEv
		sub	esp, 4
		cmp	[ebp+var_C0], 7
		jz	loc_7101C6D0

loc_7101C614:				; CODE XREF: sub_7101C340+3CCj
		mov	ecx, [ebp+var_2E0]
		mov	edx, [ebp+var_2D8]
		mov	ebx, [ebp+var_2D0]
		mov	eax, [ecx+edx*4+10h]
		mov	[ebp+var_2C], ebx
		mov	ecx, [ebp+var_2D4]
		add	eax, 4
		lock inc dword ptr [ecx]
		setnz	dl
		mov	[esp+8], eax
		lea	eax, [ebp+var_2C]
		lea	ebx, [ebp+var_24]
		mov	[esp+4], eax
		lea	eax, [ebp+var_20]
		mov	[esp+0Ch], ebx
		mov	[esp], eax
		mov	[ebp+var_2C8], 0Bh
		call	ds:_ZN20QXmlStreamAttributes6appendERK7QStringS2_S2_
		mov	eax, [ebp+var_2C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7101C6A0

loc_7101C671:				; CODE XREF: sub_7101C340+376j
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7101C6B8

loc_7101C67E:				; CODE XREF: sub_7101C340+38Ej
		lea	eax, [ebp+var_B8]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0Eh
		call	ds:_ZN8QVariantD1Ev
		jmp	loc_7101C540
; ---------------------------------------------------------------------------
		align 10h

loc_7101C6A0:				; CODE XREF: sub_7101C340+32Fj
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_2C8], 0Ch
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7101C671
; ---------------------------------------------------------------------------

loc_7101C6B8:				; CODE XREF: sub_7101C340+33Cj
		mov	eax, [ebp+var_24]
		mov	[ebp+var_2C8], 0Dh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7101C67E
; ---------------------------------------------------------------------------

loc_7101C6D0:				; CODE XREF: sub_7101C340+2CEj
		lea	eax, [ebp+var_28]
		lea	ebx, [ebp+var_24]
		mov	[ebp+var_28], offset aUrl_0 ; "url("
		mov	[esp+8], eax
		mov	dword ptr [esp+4], 0
		mov	[esp], ebx
		mov	[ebp+var_2C8], 0Ch
		call	ds:_ZN7QString6insertEiRK13QLatin1String
		mov	word ptr [esp+4], 29h
		mov	[esp], ebx
		call	ds:_ZN7QString6appendE5QChar
		jmp	loc_7101C614
; ---------------------------------------------------------------------------

loc_7101C711:				; CODE XREF: sub_7101C340+1D8j
					; sub_7101C340+213j
		mov	ecx, [ebp+arg_8]
		lea	eax, [ebp+var_20]
		mov	[esp+4], eax
		lea	eax, [ebp+var_298]
		mov	[esp], eax
		mov	[ebp+var_2C8], 0Eh
		mov	[esp+8], ecx
		call	sub_710159D0
		lea	eax, [ebp+var_30]
		lea	edx, [ebp+var_168]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_2C8], 0Ah
		call	ds:_ZNK10QStringRef8toStringEv
		mov	eax, [ebp+var_15C]
		sub	esp, 4
		mov	[ebp+var_2C8], 9
		mov	[ebp+var_80], eax
		mov	eax, [ebp+var_158]
		mov	[ebp+var_7C], eax
		mov	eax, [ebp+var_154]
		mov	[ebp+var_78], eax
		lea	eax, [ebp+var_A8]
		mov	[esp], eax
		call	ds:_ZN6QColor10invalidateEv
		lea	ecx, [ebp+var_9]
		mov	[esp], ecx
		mov	ecx, [ebp+arg_8]
		lea	edx, [ebp+var_4C]
		lea	eax, [ebp+var_30]
		mov	[ebp+var_9], 1
		call	sub_7100BF60
		mov	edx, [ebp+var_4C]
		test	edx, edx
		jnz	short loc_7101C7B3
		fdiv	ds:flt_71059D88

loc_7101C7B3:				; CODE XREF: sub_7101C340+46Bj
		cmp	[ebp+var_9], 0
		fstp	[ebp+var_58]
		jnz	short loc_7101C7C1
		fldz
		fstp	[ebp+var_58]

loc_7101C7C1:				; CODE XREF: sub_7101C340+47Aj
		lea	eax, [ebp+var_34]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset a000000 ; "#000000"
		mov	[esp], eax
		mov	[ebp+var_2C8], 9
		call	ds:_ZN7QString10fromLatin1EPKci
		mov	eax, [ebp+var_78]
		sub	esp, 4
		test	eax, eax
		jnz	short loc_7101C807
		mov	eax, [ebp+var_34]
		lea	edx, [ebp+var_34]
		mov	[ebp+var_80], edx
		mov	eax, [eax+8]
		mov	[ebp+var_7C], 0
		mov	[ebp+var_78], eax

loc_7101C807:				; CODE XREF: sub_7101C340+4AFj
		mov	ebx, [ebp+arg_8]
		lea	ecx, [ebp+var_A8]
		lea	edx, [ebp+var_150]
		lea	eax, [ebp+var_80]
		mov	[ebp+var_2C8], 8
		mov	[esp], ebx
		call	sub_7100DDD0
		mov	eax, [ebp+arg_0]
		fldz
		fst	[ebp+var_60]
		mov	eax, [eax+8]
		fld	[ebp+var_58]
		mov	[ebp+var_2E8], eax
		fucompp
		fnstsw	ax
		sahf
		ja	loc_7101CA42
		lea	eax, [ebp+var_60]

loc_7101C84D:				; CODE XREF: sub_7101C340+705j
		fld1
		fst	[ebp+var_68]
		fld	qword ptr [eax]
		fld	st(1)
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jbe	short loc_7101C865
		fstp	st
		jmp	short loc_7101C867
; ---------------------------------------------------------------------------

loc_7101C865:				; CODE XREF: sub_7101C340+51Fj
		fstp	st(1)

loc_7101C867:				; CODE XREF: sub_7101C340+523j
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		fstp	[ebp+var_58]
		mov	[ebp+var_38], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		cmp	byte ptr [edx+48h], 0
		jnz	loc_7101CC08
		fld	[ebp+var_58]

loc_7101C888:				; CODE XREF: sub_7101C340+977j
					; sub_7101C340+9BCj
		fld1
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jbe	loc_7101C91A
		fstp	st
		mov	ecx, [ebp+var_38]
		mov	edx, [ecx+8]
		cmp	edx, 1
		jz	short loc_7101C8BB
		lea	eax, [edx+edx*2-6]
		fld	qword ptr [ecx+eax*8+10h]
		fld	ds:flt_71059DD4
		fucompp
		fnstsw	ax
		sahf
		jbe	short loc_7101C915

loc_7101C8BB:				; CODE XREF: sub_7101C340+564j
		mov	eax, [ecx]
		cmp	eax, 1
		jz	short loc_7101C8E2
		mov	eax, [ecx+4]
		mov	[esp+4], edx
		mov	[ebp+var_2C8], 7
		mov	[esp+8], eax
		lea	eax, [ebp+var_38]
		mov	[esp], eax
		call	sub_71048940

loc_7101C8E2:				; CODE XREF: sub_7101C340+580j
		mov	eax, [ebp+var_38]
		fld	ds:flt_71059DD4
		mov	edx, [eax+8]
		lea	edx, [edx+edx*2]
		fstp	qword ptr [eax+edx*8-8]
		lea	eax, [ebp+var_38]
		mov	[esp+4], eax
		mov	eax, [ebp+var_2E8]
		mov	[ebp+var_2C8], 7
		mov	[esp], eax
		call	ds:_ZN9QGradient8setStopsERK7QVectorI5QPairId6QColorEE

loc_7101C915:				; CODE XREF: sub_7101C340+579j
		fld1
		fst	[ebp+var_58]

loc_7101C91A:				; CODE XREF: sub_7101C340+553j
		mov	edx, [ebp+var_2E8]
		lea	eax, [ebp+var_A8]
		mov	[esp+0Ch], eax
		fstp	qword ptr [esp+4]
		mov	[ebp+var_2C8], 7
		mov	[esp], edx
		call	ds:_ZN9QGradient10setColorAtEdRK6QColor
		mov	ecx, [ebp+arg_0]
		mov	byte ptr [ecx+48h], 1
		mov	eax, [ebp+var_38]
		test	eax, eax
		jz	short loc_7101C95D
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101CB7D

loc_7101C95D:				; CODE XREF: sub_7101C340+60Dj
					; sub_7101C340+859j
		mov	eax, [ebp+var_34]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101CA83

loc_7101C96E:				; CODE XREF: sub_7101C340+759j
		mov	eax, [ebp+var_30]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101CA68

loc_7101C97F:				; CODE XREF: sub_7101C340+73Ej
		mov	eax, [ebp+var_144]
		test	eax, eax
		jz	short loc_7101C997
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101CB56

loc_7101C997:				; CODE XREF: sub_7101C340+647j
					; sub_7101C340+838j
		mov	eax, [ebp+var_298]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101CA4A

loc_7101C9AB:				; CODE XREF: sub_7101C340+723j
		mov	eax, [ebp+var_20]
		test	eax, eax
		jz	short loc_7101C9C0
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101CBBF

loc_7101C9C0:				; CODE XREF: sub_7101C340+670j
					; sub_7101C340+89Bj
		mov	eax, [ebp+var_1C]
		test	eax, eax
		jz	short loc_7101C9D5
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101CB9E

loc_7101C9D5:				; CODE XREF: sub_7101C340+685j
					; sub_7101C340+87Aj
		lea	eax, [ebp+var_140]
		mov	[ebp+var_140], offset off_7105D688
		mov	[esp], eax
		mov	[ebp+var_2C8], 11h
		call	sub_71023D40
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101CB3B

loc_7101CA08:				; CODE XREF: sub_7101C340+811j
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		mov	[ebp+var_2E1], 1
		jnz	loc_7101C3A8
		mov	eax, [ebp+var_10]
		mov	[ebp+var_2C8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_2E1], 1
		jmp	loc_7101C3A8
; ---------------------------------------------------------------------------

loc_7101CA42:				; CODE XREF: sub_7101C340+504j
		lea	eax, [ebp+var_58]
		jmp	loc_7101C84D
; ---------------------------------------------------------------------------

loc_7101CA4A:				; CODE XREF: sub_7101C340+665j
		mov	eax, [ebp+var_298]
		mov	[ebp+var_2C8], 0Eh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101C9AB
; ---------------------------------------------------------------------------

loc_7101CA68:				; CODE XREF: sub_7101C340+639j
		mov	eax, [ebp+var_30]
		mov	[ebp+var_2C8], 0Ah
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101C97F
; ---------------------------------------------------------------------------

loc_7101CA83:				; CODE XREF: sub_7101C340+628j
		mov	eax, [ebp+var_34]
		mov	[ebp+var_2C8], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101C96E
; ---------------------------------------------------------------------------

loc_7101CA9E:				; CODE XREF: sub_7101C340+D8j
		mov	ebx, [ebp+arg_4]
		lea	eax, [ebp+var_98]
		lea	edx, [ebp+var_48]
		mov	[ebp+var_48], offset aXmlId ; "xml:id"
		mov	[esp+8], edx
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	[ebp+var_2C8], 4
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_44]
		lea	edx, [ebp+var_98]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_2C8], 3
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_44]
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_2C8], 2
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_44]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7101C41E
		mov	eax, [ebp+var_44]
		mov	[ebp+var_2C8], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101C41E
; ---------------------------------------------------------------------------

loc_7101CB3B:				; CODE XREF: sub_7101C340+6C2j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_2C8], 13h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101CA08
; ---------------------------------------------------------------------------

loc_7101CB56:				; CODE XREF: sub_7101C340+651j
		mov	eax, [ebp+var_144]
		mov	[ebp+var_2C8], 1
		mov	[esp+4], eax
		lea	eax, [ebp+var_144]
		mov	[esp], eax
		call	sub_71047980
		jmp	loc_7101C997
; ---------------------------------------------------------------------------

loc_7101CB7D:				; CODE XREF: sub_7101C340+617j
		mov	eax, [ebp+var_38]
		mov	[ebp+var_2C8], 8
		mov	[esp+4], eax
		lea	eax, [ebp+var_38]
		mov	[esp], eax
		call	sub_71048810
		jmp	loc_7101C95D
; ---------------------------------------------------------------------------

loc_7101CB9E:				; CODE XREF: sub_7101C340+68Fj
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_2C8], 10h
		mov	[esp+4], eax
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		call	sub_7104BA80
		jmp	loc_7101C9D5
; ---------------------------------------------------------------------------

loc_7101CBBF:				; CODE XREF: sub_7101C340+67Aj
		mov	eax, [ebp+var_20]
		mov	[ebp+var_2C8], 0Fh
		mov	[esp+4], eax
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		call	sub_71047F70
		jmp	loc_7101C9C0
; ---------------------------------------------------------------------------

loc_7101CBE0:				; CODE XREF: sub_7101C340+1CAj
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_2C8], 0Fh
		mov	[esp+4], eax
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		call	sub_71047FC0
		jmp	loc_7101C510
; ---------------------------------------------------------------------------

loc_7101CC08:				; CODE XREF: sub_7101C340+53Fj
		mov	ecx, [ebp+var_2E8]
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_2C8], 7
		mov	[esp+4], ecx
		call	ds:_ZNK9QGradient5stopsEv
		mov	ebx, [ebp+var_3C]
		sub	esp, 4
		mov	[ebp+var_2EC], ebx
		lock inc dword ptr [ebx]
		setnz	al
		mov	eax, [ebp+var_38]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101CD2B

loc_7101CC4B:				; CODE XREF: sub_7101C340+A07j
		mov	eax, [ebp+var_2EC]
		mov	[ebp+var_38], eax
		test	byte ptr [eax+0Ch], 1
		jz	loc_7101CD01

loc_7101CC5E:				; CODE XREF: sub_7101C340+9E6j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_2C8], 7
		call	sub_71048BC0
		mov	eax, [ebp+var_38]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_7101CCA0
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_2C8], 7
		mov	[esp+4], eax
		lea	eax, [ebp+var_38]
		mov	[esp], eax
		call	sub_71048940

loc_7101CCA0:				; CODE XREF: sub_7101C340+93Bj
		mov	edx, [ebp+var_38]
		fld	[ebp+var_58]
		mov	ecx, [edx+8]
		lea	eax, [ecx+ecx*2]
		mov	ebx, ecx
		fld	qword ptr [edx+eax*8-8]
		fucomp	st(1)
		fnstsw	ax
		sahf
		jb	loc_7101C888
		fstp	st
		mov	eax, [edx]
		cmp	eax, 1
		jz	short loc_7101CCEC
		mov	eax, [edx+4]
		mov	[esp+4], ecx
		mov	[ebp+var_2C8], 7
		mov	[esp+8], eax
		lea	eax, [ebp+var_38]
		mov	[esp], eax
		call	sub_71048940
		mov	edx, [ebp+var_38]
		mov	ebx, [edx+8]

loc_7101CCEC:				; CODE XREF: sub_7101C340+984j
		lea	eax, [ebx+ebx*2]
		fld	ds:flt_71059DD0
		fadd	qword ptr [edx+eax*8-8]
		fst	[ebp+var_58]
		jmp	loc_7101C888
; ---------------------------------------------------------------------------

loc_7101CD01:				; CODE XREF: sub_7101C340+918j
		mov	edx, eax
		mov	eax, [eax+4]
		mov	[esp+8], eax
		mov	eax, [edx+8]
		mov	[ebp+var_2C8], 6
		mov	[esp+4], eax
		lea	eax, [ebp+var_38]
		mov	[esp], eax
		call	sub_71048940
		jmp	loc_7101CC5E
; ---------------------------------------------------------------------------

loc_7101CD2B:				; CODE XREF: sub_7101C340+905j
		mov	eax, [ebp+var_38]
		mov	[ebp+var_2C8], 6
		mov	[esp+4], eax
		lea	eax, [ebp+var_38]
		mov	[esp], eax
		call	sub_71048810
		jmp	loc_7101CC4B
sub_7101C340	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7101CD4C	proc near		; DATA XREF: sub_7101C340+30o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-2C8h]
		mov	ebx, [ebp-2C4h]
		cmp	eax, 1
		mov	[ebp-2F8h], ebx
		jz	loc_7101CF1C
		cmp	eax, 2
		jz	loc_7101CEEF
		cmp	eax, 3
		jz	loc_7101CEEF
		cmp	eax, 4
		nop
		jz	loc_7101CFEC
		cmp	eax, 5
		jz	loc_7101CF7B
		cmp	eax, 6
		jz	loc_7101CF90
		cmp	eax, 7
		nop
		lea	esi, [esi+0]
		jz	loc_7101CFA5
		cmp	eax, 8
		jz	loc_7101CFBA
		cmp	eax, 9
		jz	loc_7101CFCF
		cmp	eax, 0Ah
		nop
		lea	esi, [esi+0]
		jz	loc_7101CF33
		cmp	eax, 0Bh
		jz	loc_7101CF48
		cmp	eax, 0Ch
		jz	loc_7101CF5D
		cmp	eax, 0Dh
		nop
		lea	esi, [esi+0]
		jz	short loc_7101CE2E
		cmp	eax, 0Eh
		jz	loc_7101CE73
		cmp	eax, 0Fh
		xchg	ax, ax
		jz	loc_7101CEB8
		cmp	eax, 10h
		jz	loc_7101CEDA
		cmp	eax, 11h
		jz	loc_7101CEEF
		cmp	eax, 12h
		nop
		lea	esi, [esi+0]
		jz	loc_7101CEEF
		lea	eax, [ebp-298h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-2C8h], 0
		call	sub_710477B0

loc_7101CE2E:				; CODE XREF: sub_7101CD4C+94j
					; sub_7101CD4C+22Aj ...
		mov	eax, [ebp-2F8h]
		mov	[ebp-2F4h], eax
		mov	eax, [ebp-20h]
		test	eax, eax
		jz	short loc_7101CE67
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7101CE67
		mov	eax, [ebp-20h]
		mov	dword ptr [ebp-2C8h], 0
		mov	[esp+arg_0], eax
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		call	sub_71047F70

loc_7101CE67:				; CODE XREF: sub_7101CD4C+F3j
					; sub_7101CD4C+FDj
		mov	edx, [ebp-2F4h]
		mov	[ebp-2F8h], edx

loc_7101CE73:				; CODE XREF: sub_7101CD4C+99j
		mov	eax, [ebp-1Ch]
		mov	ecx, [ebp-2F8h]
		test	eax, eax
		mov	[ebp-2F0h], ecx
		jz	short loc_7101CEAC
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7101CEAC
		mov	eax, [ebp-1Ch]
		mov	dword ptr [ebp-2C8h], 0
		mov	[esp+arg_0], eax
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		call	sub_7104BA80

loc_7101CEAC:				; CODE XREF: sub_7101CD4C+138j
					; sub_7101CD4C+142j
		mov	ebx, [ebp-2F0h]
		mov	[ebp-2F8h], ebx

loc_7101CEB8:				; CODE XREF: sub_7101CD4C+A4j
		lea	eax, [ebp-140h]
		mov	dword ptr [ebp-140h], offset off_7105D688
		mov	[esp+0], eax
		mov	dword ptr [ebp-2C8h], 0
		call	sub_71023D40

loc_7101CEDA:				; CODE XREF: sub_7101CD4C+ADj
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-2C8h], 0
		call	sub_710477B0

loc_7101CEEF:				; CODE XREF: sub_7101CD4C+21j
					; sub_7101CD4C+2Aj ...
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-2C8h], 0
		call	sub_710477B0
		mov	eax, [ebp-2F8h]
		mov	dword ptr [ebp-2C8h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7101CF1C:				; CODE XREF: sub_7101CD4C+18j
		lea	eax, [ebp-44h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-2C8h], 0
		call	sub_710477B0
		jmp	short loc_7101CEEF
; ---------------------------------------------------------------------------

loc_7101CF33:				; CODE XREF: sub_7101CD4C+74j
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-2C8h], 0
		call	sub_710477B0

loc_7101CF48:				; CODE XREF: sub_7101CD4C+7Dj
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-2C8h], 0
		call	sub_710477B0

loc_7101CF5D:				; CODE XREF: sub_7101CD4C+86j
		lea	eax, [ebp-0B8h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-2C8h], 0
		call	ds:_ZN8QVariantD1Ev
		jmp	loc_7101CE2E
; ---------------------------------------------------------------------------

loc_7101CF7B:				; CODE XREF: sub_7101CD4C+3Dj
		lea	eax, [ebp-3Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-2C8h], 0
		call	sub_71048BC0

loc_7101CF90:				; CODE XREF: sub_7101CD4C+46j
		lea	eax, [ebp-38h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-2C8h], 0
		call	sub_71048BC0

loc_7101CFA5:				; CODE XREF: sub_7101CD4C+54j
		lea	eax, [ebp-34h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-2C8h], 0
		call	sub_710477B0

loc_7101CFBA:				; CODE XREF: sub_7101CD4C+5Dj
		lea	eax, [ebp-30h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-2C8h], 0
		call	sub_710477B0

loc_7101CFCF:				; CODE XREF: sub_7101CD4C+66j
		lea	eax, [ebp-298h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-2C8h], 0
		call	sub_7103C3C0
		jmp	loc_7101CE2E
; ---------------------------------------------------------------------------

loc_7101CFEC:				; CODE XREF: sub_7101CD4C+34j
		mov	ecx, [ebp-2F8h]
		mov	dword ptr [ebp-2C8h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
sub_7101CD4C	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7101D010	proc near		; CODE XREF: sub_7101FFE0+396p

var_BA		= byte ptr -0BAh
var_B9		= byte ptr -0B9h
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= byte ptr -0ACh
var_A8		= dword	ptr -0A8h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= byte ptr -58h
var_44		= byte ptr -44h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= byte ptr -30h
var_2C		= byte ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= byte ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= byte ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_8C], eax
		lea	eax, [ebp+var_AC]
		mov	[esp], eax
		mov	[ebp+var_94], offset sub_710525B0
		mov	[ebp+var_90], offset dword_71053460
		mov	[ebp+var_88], offset sub_7101D618
		mov	[ebp+var_84], esp
		call	_Unwind_SjLj_Register
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_C], offset aXmlStylesheet ; "xml-stylesheet"
		mov	[ebp+var_A8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		jnz	short loc_7101D091

loc_7101D07C:				; CODE XREF: sub_7101D010+424j
		lea	eax, [ebp+var_AC]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, 1
		leave
		retn
; ---------------------------------------------------------------------------

loc_7101D091:				; CODE XREF: sub_7101D010+6Aj
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aType_ ; "type=\\\"(.+)\\\""
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 1
		mov	[ebp+var_A8], 0Eh
		mov	[ebp+var_14], eax
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	ds:_ZN7QRegExpC1ERK7QStringN2Qt15CaseSensitivityENS_13PatternSyntaxE
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101D439

loc_7101D0E7:				; CODE XREF: sub_7101D010+43Fj
		lea	eax, [ebp+var_10]
		mov	dword ptr [esp+4], 1
		mov	[esp], eax
		mov	[ebp+var_A8], 0Dh
		call	ds:_ZN7QRegExp10setMinimalEb
		mov	edx, ds:_ZNK7QRegExp7indexInERK7QStringiNS_9CaretModeE
		xor	eax, eax
		mov	[ebp+var_BA], 0
		mov	[ebp+var_B0], edx
		jmp	short loc_7101D169
; ---------------------------------------------------------------------------
		align 10h

loc_7101D120:				; CODE XREF: sub_7101D010+20Ej
					; sub_7101D010+22Aj
		cmp	[ebp+var_B9], 0
		jz	short loc_7101D130
		mov	[ebp+var_BA], 1

loc_7101D130:				; CODE XREF: sub_7101D010+117j
		lea	edx, [ebp+var_10]
		mov	[esp], edx
		mov	[ebp+var_A8], 0Ch
		call	ds:_ZNK7QRegExp13matchedLengthEv
		mov	[ebp+var_B8], eax
		mov	eax, [ebp+var_28]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101D240

loc_7101D15D:				; CODE XREF: sub_7101D010+246j
		mov	eax, [ebp+var_B8]
		add	eax, [ebp+var_B4]

loc_7101D169:				; CODE XREF: sub_7101D010+10Aj
		mov	[esp+8], eax
		mov	eax, [ebp+arg_8]
		lea	edx, [ebp+var_10]
		mov	dword ptr [esp+0Ch], 0
		mov	[esp], edx
		mov	[ebp+var_A8], 0Dh
		mov	[esp+4], eax
		call	[ebp+var_B0]
		cmp	eax, 0FFFFFFFFh
		mov	[ebp+var_B4], eax
		jz	loc_7101D260
		lea	eax, [ebp+var_10]
		lea	edx, [ebp+var_28]
		mov	dword ptr [esp+8], 1
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_A8], 0Dh
		call	ds:_ZN7QRegExp3capEi
		sub	esp, 4
		lea	eax, [ebp+var_28]
		lea	edx, [ebp+var_18]
		mov	[ebp+var_1C], offset aTextCss ;	"text/css"
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_A8], 0Ch
		call	ds:_ZNK7QString7toLowerEv
		sub	esp, 4
		lea	eax, [ebp+var_1C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_A8], 0Bh
		call	ds:_ZNK7QStringeqERK13QLatin1String
		mov	[ebp+var_B9], al
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7101D120
		mov	eax, [ebp+var_18]
		mov	[ebp+var_A8], 0Ch
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101D120
; ---------------------------------------------------------------------------
		align 10h

loc_7101D240:				; CODE XREF: sub_7101D010+147j
		mov	eax, [ebp+var_28]
		mov	[ebp+var_A8], 0Dh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101D15D
; ---------------------------------------------------------------------------
		align 10h

loc_7101D260:				; CODE XREF: sub_7101D010+18Bj
		cmp	[ebp+var_BA], 0
		jz	loc_7101D41E
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aHref_ ; "href=\\\"(.+)\\\""
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_24], eax
		lea	eax, [ebp+var_24]
		mov	[esp+4], eax
		lea	eax, [ebp+var_20]
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 1
		mov	[esp], eax
		mov	[ebp+var_A8], 0Ah
		call	ds:_ZN7QRegExpC1ERK7QStringN2Qt15CaseSensitivityENS_13PatternSyntaxE
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101D5FD

loc_7101D2C3:				; CODE XREF: sub_7101D010+603j
		lea	eax, [ebp+var_20]
		mov	dword ptr [esp+4], 1
		mov	[esp], eax
		mov	[ebp+var_A8], 9
		call	ds:_ZN7QRegExp10setMinimalEb
		mov	eax, [ebp+arg_8]
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 0
		mov	[esp+4], eax
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		call	ds:_ZNK7QRegExp7indexInERK7QStringiNS_9CaretModeE
		lea	eax, [ebp+var_28]
		lea	edx, [ebp+var_20]
		mov	dword ptr [esp+8], 1
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN7QRegExp3capEi
		sub	esp, 4
		lea	eax, [ebp+var_28]
		mov	[esp+4], eax
		lea	eax, [ebp+var_2C]
		mov	[esp], eax
		mov	[ebp+var_A8], 8
		call	ds:_ZN9QFileInfoC1ERK7QString
		lea	eax, [ebp+var_2C]
		mov	[esp], eax
		mov	[ebp+var_A8], 7
		call	ds:_ZNK9QFileInfo6existsEv
		test	al, al
		jz	loc_7101D5BB
		lea	eax, [ebp+var_30]
		lea	edx, [ebp+var_2C]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK9QFileInfo16absoluteFilePathEv
		sub	esp, 4
		lea	eax, [ebp+var_30]
		mov	[esp+4], eax
		lea	eax, [ebp+var_44]
		mov	[esp], eax
		mov	[ebp+var_A8], 6
		call	ds:_ZN5QFileC1ERK7QString
		lea	eax, [ebp+var_30]
		mov	[esp], eax
		mov	[ebp+var_A8], 5
		call	sub_710477B0
		lea	eax, [ebp+var_34]
		mov	[esp+4], eax
		lea	eax, [ebp+var_44]
		mov	[ebp+var_34], 11h
		mov	[esp], eax
		call	ds:_ZN5QFile4openE6QFlagsIN9QIODevice12OpenModeFlagEE
		test	al, al
		jnz	loc_7101D454
		lea	eax, [ebp+var_44]
		mov	[esp], eax
		mov	[ebp+var_A8], 7
		call	ds:_ZN5QFileD1Ev
		lea	eax, [ebp+var_2C]
		mov	[esp], eax
		mov	[ebp+var_A8], 8
		call	ds:_ZN9QFileInfoD1Ev
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_A8], 9
		call	sub_710477B0

loc_7101D408:				; CODE XREF: sub_7101D010+5CCj
					; sub_7101D010+5E8j
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_A8], 0Dh
		call	ds:_ZN7QRegExpD1Ev

loc_7101D41E:				; CODE XREF: sub_7101D010+257j
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_A8], 0FFFFFFFFh
		call	ds:_ZN7QRegExpD1Ev
		jmp	loc_7101D07C
; ---------------------------------------------------------------------------

loc_7101D439:				; CODE XREF: sub_7101D010+D1j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_A8], 0Dh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101D0E7
; ---------------------------------------------------------------------------

loc_7101D454:				; CODE XREF: sub_7101D010+3B1j
		lea	eax, [ebp+var_38]
		lea	edx, [ebp+var_44]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_A8], 5
		call	ds:_ZN9QIODevice7readAllEv
		mov	edx, [ebp+var_38]
		sub	esp, 4
		mov	dword ptr [esp+8], 0FFFFFFFFh
		lea	eax, [ebp+var_3C]
		mov	edx, [edx+0Ch]
		mov	[esp], eax
		mov	[ebp+var_A8], 4
		mov	[esp+4], edx
		call	ds:_ZN7QString8fromUtf8EPKci
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		sub	esp, 4
		mov	[ebp+var_78], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ebp+var_74], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ebp+var_70], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ebp+var_6C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, ds:_ZN9QHashData11shared_nullE
		mov	[ebp+var_68], 0
		mov	[ebp+var_64], 0
		mov	[ebp+var_60], eax
		lock inc dword ptr [eax+8]
		setnz	dl
		mov	[ebp+var_5C], eax
		lock inc dword ptr [eax+8]
		setnz	dl
		lea	eax, [ebp+var_3C]
		mov	dword ptr [esp+8], 0
		mov	[esp+4], eax
		lea	eax, [ebp+var_58]
		mov	[esp], eax
		mov	[ebp+var_A8], 2
		call	ds:_ZN4QCss6ParserC1ERK7QStringb
		lea	eax, [ebp+var_78]
		mov	[esp+4], eax
		lea	eax, [ebp+var_58]
		mov	dword ptr [esp+8], 1
		mov	[esp], eax
		mov	[ebp+var_A8], 1
		call	ds:_ZN4QCss6Parser5parseEPNS_10StyleSheetEN2Qt15CaseSensitivityE
		lea	eax, [ebp+var_58]
		mov	[esp], eax
		mov	[ebp+var_A8], 2
		call	sub_71044340
		lea	eax, [ebp+var_78]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+28h]
		add	eax, 4
		mov	[esp], eax
		call	sub_71049F70
		lea	eax, [ebp+var_78]
		mov	[esp], eax
		mov	[ebp+var_A8], 3
		call	sub_71044070
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_A8], 4
		call	sub_710477B0
		lea	eax, [ebp+var_38]
		mov	[esp], eax
		mov	[ebp+var_A8], 5
		call	sub_7103B6E0
		lea	eax, [ebp+var_44]
		mov	[esp], eax
		mov	[ebp+var_A8], 7
		call	ds:_ZN5QFileD1Ev

loc_7101D5BB:				; CODE XREF: sub_7101D010+347j
		lea	eax, [ebp+var_2C]
		mov	[esp], eax
		mov	[ebp+var_A8], 8
		call	ds:_ZN9QFileInfoD1Ev
		mov	eax, [ebp+var_28]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7101D408
		mov	eax, [ebp+var_28]
		mov	[ebp+var_A8], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101D408
; ---------------------------------------------------------------------------

loc_7101D5FD:				; CODE XREF: sub_7101D010+2ADj
		mov	eax, [ebp+var_24]
		mov	[ebp+var_A8], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101D2C3
sub_7101D010	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7101D618	proc near		; DATA XREF: sub_7101D010+2Fo
		add	ebp, 8
		mov	eax, [ebp-0A8h]
		mov	edx, [ebp-0A4h]
		cmp	eax, 1
		mov	[ebp-0C0h], edx
		jz	loc_7101D6CB
		cmp	eax, 2
		jz	loc_7101D6E0
		cmp	eax, 3
		jz	loc_7101D6F5
		cmp	eax, 4
		nop
		lea	esi, [esi+0]
		jz	loc_7101D70A
		cmp	eax, 5
		jz	loc_7101D78F
		cmp	eax, 6
		jz	loc_7101D720
		cmp	eax, 7
		nop
		lea	esi, [esi+0]
		jz	loc_7101D736
		cmp	eax, 8
		jz	loc_7101D74B
		cmp	eax, 9
		jz	loc_7101D7A9
		cmp	eax, 0Ah
		nop
		lea	esi, [esi+0]
		jz	loc_7101D7ED
		cmp	eax, 0Bh
		jz	loc_7101D802
		cmp	eax, 0Ch
		jz	loc_7101D761
		cmp	eax, 0Dh
		nop
		lea	esi, [esi+0]
		jz	loc_7101D7C0
		lea	eax, [ebp-58h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_71044340

loc_7101D6CB:				; CODE XREF: sub_7101D618+18j
		lea	eax, [ebp-78h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_71044070

loc_7101D6E0:				; CODE XREF: sub_7101D618+21j
		lea	eax, [ebp-3Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_710477B0

loc_7101D6F5:				; CODE XREF: sub_7101D618+2Aj
		lea	eax, [ebp-38h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_7103B6E0

loc_7101D70A:				; CODE XREF: sub_7101D618+38j
		lea	eax, [ebp-44h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	ds:_ZN5QFileD1Ev

loc_7101D720:				; CODE XREF: sub_7101D618+4Aj
					; sub_7101D618+18Cj
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	ds:_ZN9QFileInfoD1Ev

loc_7101D736:				; CODE XREF: sub_7101D618+58j
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_710477B0

loc_7101D74B:				; CODE XREF: sub_7101D618+61j
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	ds:_ZN7QRegExpD1Ev

loc_7101D761:				; CODE XREF: sub_7101D618+8Aj
					; sub_7101D618+1A6j ...
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	ds:_ZN7QRegExpD1Ev
		mov	eax, [ebp-0C0h]
		mov	dword ptr [ebp-0A8h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7101D78F:				; CODE XREF: sub_7101D618+41j
		lea	eax, [ebp-30h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_710477B0
		jmp	loc_7101D720
; ---------------------------------------------------------------------------

loc_7101D7A9:				; CODE XREF: sub_7101D618+6Aj
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_710477B0
		jmp	short loc_7101D761
; ---------------------------------------------------------------------------

loc_7101D7C0:				; CODE XREF: sub_7101D618+98j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_710477B0
		mov	edx, [ebp-0C0h]
		mov	dword ptr [ebp-0A8h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7101D7ED:				; CODE XREF: sub_7101D618+78j
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_710477B0

loc_7101D802:				; CODE XREF: sub_7101D618+81j
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0A8h], 0
		call	sub_710477B0
		jmp	loc_7101D761
sub_7101D618	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7101D820	proc near		; CODE XREF: sub_7101FFE0+412p

var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= byte ptr -7Ch
var_78		= dword	ptr -78h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_18		= dword	ptr -18h
var_14		= byte ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0B8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_5C], eax
		lea	eax, [ebp+var_7C]
		mov	[ebp+var_64], offset sub_710525B0
		mov	[ebp+var_60], offset dword_71053480
		mov	[ebp+var_58], offset sub_7101DEAE
		mov	[ebp+var_54], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		cmp	byte ptr [edx+24h], 0
		jnz	short loc_7101D880
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		mov	edx, [eax+8]
		test	edx, edx
		jnz	loc_7101DAA0

loc_7101D86C:				; CODE XREF: sub_7101D820+25Dj
					; sub_7101D820+276j ...
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, 1
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7101D880:				; CODE XREF: sub_7101D820+39j
		mov	ecx, [ebp+arg_4]
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+4], ecx
		call	ds:_ZNK10QStringRef8toStringEv
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	[ebp+var_48], eax
		sub	esp, 4
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ebp+var_44], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ebp+var_40], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ebp+var_3C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, ds:_ZN9QHashData11shared_nullE
		mov	[ebp+var_38], 0
		mov	[ebp+var_34], 0
		mov	[ebp+var_30], eax
		lock inc dword ptr [eax+8]
		setnz	dl
		mov	[ebp+var_2C], eax
		lock inc dword ptr [eax+8]
		setnz	dl
		lea	edx, [ebp+var_C]
		lea	eax, [ebp+var_28]
		mov	dword ptr [esp+8], 0
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_78], 0Ah
		call	ds:_ZN4QCss6ParserC1ERK7QStringb
		lea	eax, [ebp+var_48]
		mov	[esp+4], eax
		lea	eax, [ebp+var_28]
		mov	dword ptr [esp+8], 1
		mov	[esp], eax
		mov	[ebp+var_78], 9
		call	ds:_ZN4QCss6Parser5parseEPNS_10StyleSheetEN2Qt15CaseSensitivityE
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101DC80

loc_7101D942:				; CODE XREF: sub_7101D820+473j
		mov	eax, [ebp+var_28]
		test	eax, eax
		jz	loc_7101D9DB
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7101D9DB
		mov	ecx, [ebp+var_28]
		mov	[ebp+var_8C], ecx
		mov	edx, [ebp+var_8C]
		add	ecx, 10h
		mov	[ebp+var_84], ecx
		mov	eax, [edx+8]
		shl	eax, 4
		lea	eax, [eax+edx+10h]
		mov	[ebp+var_80], eax

loc_7101D980:				; CODE XREF: sub_7101D820+17Dj
		mov	eax, [ebp+var_80]
		cmp	[ebp+var_84], eax
		jz	short loc_7101D9BD

loc_7101D98B:				; CODE XREF: sub_7101D820+19Bj
		sub	[ebp+var_80], 10h
		mov	ecx, [ebp+var_80]
		mov	eax, [ecx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7101D980
		mov	eax, [ecx+4]
		mov	[ebp+var_78], 0Ah
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	eax, [ebp+var_80]
		cmp	[ebp+var_84], eax
		jnz	short loc_7101D98B

loc_7101D9BD:				; CODE XREF: sub_7101D820+169j
		mov	edx, [ebp+var_8C]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_78], 0Ah
		mov	[esp], edx
		call	ds:_ZN11QVectorData4freeEPS_i

loc_7101D9DB:				; CODE XREF: sub_7101D820+127j
					; sub_7101D820+135j
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_48]
		mov	[esp+4], eax
		mov	eax, [ecx+28h]
		mov	[ebp+var_78], 0Ah
		add	eax, 4
		mov	[esp], eax
		call	sub_71049F70
		mov	eax, [ebp+var_2C]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_7101DCB8

loc_7101DA0C:				; CODE XREF: sub_7101D820+4B3j
		mov	eax, [ebp+var_30]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_7101DC98

loc_7101DA1E:				; CODE XREF: sub_7101D820+493j
		mov	eax, [ebp+var_3C]
		test	eax, eax
		jz	short loc_7101DA33
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101DD32

loc_7101DA33:				; CODE XREF: sub_7101D820+203j
					; sub_7101D820+52Bj
		mov	eax, [ebp+var_40]
		test	eax, eax
		jz	short loc_7101DA48
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101DD14

loc_7101DA48:				; CODE XREF: sub_7101D820+218j
					; sub_7101D820+50Dj
		mov	eax, [ebp+var_44]
		test	eax, eax
		jz	short loc_7101DA5D
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101DCF6

loc_7101DA5D:				; CODE XREF: sub_7101D820+22Dj
					; sub_7101D820+4EFj
		mov	eax, [ebp+var_48]
		test	eax, eax
		jz	short loc_7101DA72
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101DCD8

loc_7101DA72:				; CODE XREF: sub_7101D820+242j
					; sub_7101D820+4D1j
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7101D86C
		mov	eax, [ebp+var_C]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101D86C
; ---------------------------------------------------------------------------
		align 10h

loc_7101DAA0:				; CODE XREF: sub_7101D820+46j
		mov	ecx, [ebp+arg_0]
		add	ecx, 0Ch
		mov	[ebp+var_90], ecx
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_7101DAD9
		mov	eax, [eax+4]
		mov	[esp+4], edx
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+var_90]
		mov	[esp], eax
		call	sub_71049630
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]

loc_7101DAD9:				; CODE XREF: sub_7101D820+291j
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_7101DB03
		mov	edx, [eax+4]
		mov	ecx, [ebp+var_90]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_71049630

loc_7101DB03:				; CODE XREF: sub_7101D820+2BEj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		mov	edx, [eax+8]
		mov	ecx, [eax+edx*4+0Ch]
		test	ecx, ecx
		jz	loc_7101D86C
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+4]
		mov	edx, [eax+8]
		test	edx, edx
		jz	loc_7101D86C
		mov	ecx, [ebp+arg_0]
		add	ecx, 4
		mov	[ebp+var_88], ecx
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_7101DB62
		mov	eax, [eax+4]
		mov	[esp+4], edx
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+var_88]
		mov	[esp], eax
		call	sub_7104E6E0
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]

loc_7101DB62:				; CODE XREF: sub_7101D820+31Aj
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_7101DB8C
		mov	edx, [eax+4]
		mov	ecx, [ebp+var_88]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_7104E6E0

loc_7101DB8C:				; CODE XREF: sub_7101D820+347j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	edx, [eax+8]
		mov	eax, [eax+edx*4+0Ch]
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+0Ch]
		mov	[ebp+var_78], 0FFFFFFFFh
		call	eax
		cmp	eax, 0Eh
		jnz	loc_7101DD50

loc_7101DBB3:				; CODE XREF: sub_7101D820+5AAj
		mov	ecx, [ebp+arg_4]
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+4], ecx
		call	ds:_ZNK10QStringRef8toStringEv
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		sub	esp, 4
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_7101DC06
		mov	edx, [eax+4]
		mov	ecx, [ebp+var_88]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_78], 8
		mov	[esp+4], eax
		call	sub_7104E6E0
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]

loc_7101DC06:				; CODE XREF: sub_7101D820+3BBj
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_7101DC30
		mov	edx, [eax+4]
		mov	ecx, [ebp+var_88]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_78], 8
		mov	[esp+4], eax
		call	sub_7104E6E0

loc_7101DC30:				; CODE XREF: sub_7101D820+3EBj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		lea	edx, [ebp+var_10]
		mov	[esp+4], edx
		mov	edx, [eax+8]
		mov	eax, [eax+edx*4+0Ch]
		mov	[ebp+var_78], 8
		mov	[esp], eax
		call	sub_71002050
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7101D86C
		mov	eax, [ebp+var_10]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101D86C
; ---------------------------------------------------------------------------
		align 10h

loc_7101DC80:				; CODE XREF: sub_7101D820+11Cj
		mov	eax, [ebp+var_18]
		mov	[ebp+var_78], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101D942
; ---------------------------------------------------------------------------

loc_7101DC98:				; CODE XREF: sub_7101D820+1F8j
		mov	eax, [ebp+var_30]
		mov	dword ptr [esp+4], offset sub_71044770
		mov	[ebp+var_78], 2
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_7101DA1E
; ---------------------------------------------------------------------------

loc_7101DCB8:				; CODE XREF: sub_7101D820+1E6j
		mov	eax, [ebp+var_2C]
		mov	dword ptr [esp+4], offset sub_71044770
		mov	[ebp+var_78], 1
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_7101DA0C
; ---------------------------------------------------------------------------

loc_7101DCD8:				; CODE XREF: sub_7101D820+24Cj
		mov	eax, [ebp+var_48]
		mov	[ebp+var_78], 0Bh
		mov	[esp+4], eax
		lea	eax, [ebp+var_48]
		mov	[esp], eax
		call	sub_7104DFE0
		jmp	loc_7101DA72
; ---------------------------------------------------------------------------

loc_7101DCF6:				; CODE XREF: sub_7101D820+237j
		mov	eax, [ebp+var_44]
		mov	[ebp+var_78], 5
		mov	[esp+4], eax
		lea	eax, [ebp+var_44]
		mov	[esp], eax
		call	sub_7104DB20
		jmp	loc_7101DA5D
; ---------------------------------------------------------------------------

loc_7101DD14:				; CODE XREF: sub_7101D820+222j
		mov	eax, [ebp+var_40]
		mov	[ebp+var_78], 4
		mov	[esp+4], eax
		lea	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_7104D360
		jmp	loc_7101DA48
; ---------------------------------------------------------------------------

loc_7101DD32:				; CODE XREF: sub_7101D820+20Dj
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_78], 3
		mov	[esp+4], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	sub_710497B0
		jmp	loc_7101DA33
; ---------------------------------------------------------------------------

loc_7101DD50:				; CODE XREF: sub_7101D820+38Dj
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+4]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_7101DD7F
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp+4], eax
		mov	eax, [ebp+var_88]
		mov	[esp], eax
		call	sub_7104E6E0
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]

loc_7101DD7F:				; CODE XREF: sub_7101D820+53Bj
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_7101DDA9
		mov	edx, [eax+4]
		mov	ecx, [ebp+var_88]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_7104E6E0

loc_7101DDA9:				; CODE XREF: sub_7101D820+564j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	edx, [eax+8]
		mov	eax, [eax+edx*4+0Ch]
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+0Ch]
		mov	[ebp+var_78], 0FFFFFFFFh
		call	eax
		cmp	eax, 0Fh
		jz	loc_7101DBB3
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_7101DE06
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+4], eax
		mov	eax, [ebp+var_88]
		mov	[esp], eax
		call	sub_7104E6E0
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]

loc_7101DE06:				; CODE XREF: sub_7101D820+5BBj
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_7101DE30
		mov	edx, [eax+4]
		mov	ecx, [ebp+var_88]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_7104E6E0

loc_7101DE30:				; CODE XREF: sub_7101D820+5EBj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	edx, [eax+8]
		mov	eax, [eax+edx*4+0Ch]
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+0Ch]
		mov	[ebp+var_78], 0FFFFFFFFh
		call	eax
		cmp	eax, 10h
		jnz	loc_7101D86C
		mov	ecx, [ebp+arg_4]
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[esp+4], ecx
		call	ds:_ZNK10QStringRef8toStringEv
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_78], 7
		add	eax, 4
		sub	esp, 4
		mov	[esp], eax
		call	sub_710476F0
		lea	edx, [ebp+var_14]
		mov	[esp+4], edx
		mov	eax, [eax]
		sub	eax, 0FFFFFF80h
		mov	[esp], eax
		call	ds:_ZN7QString6appendERKS_
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	sub_710477B0
		jmp	loc_7101D86C
sub_7101D820	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7101DEAE	proc near		; DATA XREF: sub_7101D820+20o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-78h]
		mov	edx, [ebp-74h]
		cmp	eax, 1
		mov	[ebp-0A8h], edx
		jz	loc_7101DF61
		cmp	eax, 2
		jz	loc_7101DFA3
		cmp	eax, 3
		jz	loc_7101DFE5
		cmp	eax, 4
		nop
		lea	esi, [esi+0]
		jz	loc_7101E027
		cmp	eax, 5
		jz	loc_7101E0E2
		cmp	eax, 6
		jz	loc_7101E0BB
		cmp	eax, 7
		nop
		lea	esi, [esi+0]
		jz	loc_7101E0B6
		cmp	eax, 8
		jz	loc_7101E090
		cmp	eax, 9
		jz	loc_7101E0A2
		cmp	eax, 0Ah
		nop
		lea	esi, [esi+0]
		jz	loc_7101E069
		mov	[ebp-0A4h], edx
		mov	eax, [ebp-30h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jnz	short loc_7101DF55
		mov	eax, [ebp-30h]
		mov	[esp+arg_0], offset sub_71044770
		mov	dword ptr [ebp-78h], 0
		mov	[esp+0], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_7101DF55:				; CODE XREF: sub_7101DEAE+8Aj
		mov	ecx, [ebp-0A4h]
		mov	[ebp-0A8h], ecx

loc_7101DF61:				; CODE XREF: sub_7101DEAE+12j
		mov	eax, [ebp-0A8h]
		mov	[ebp-0A0h], eax
		mov	eax, [ebp-3Ch]
		test	eax, eax
		jz	short loc_7101DF97
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7101DF97
		mov	eax, [ebp-3Ch]
		mov	dword ptr [ebp-78h], 0
		mov	[esp+arg_0], eax
		lea	eax, [ebp-3Ch]
		mov	[esp+0], eax
		call	sub_710497B0

loc_7101DF97:				; CODE XREF: sub_7101DEAE+C4j
					; sub_7101DEAE+CEj
		mov	edx, [ebp-0A0h]
		mov	[ebp-0A8h], edx

loc_7101DFA3:				; CODE XREF: sub_7101DEAE+1Bj
		mov	eax, [ebp-40h]
		mov	ecx, [ebp-0A8h]
		test	eax, eax
		mov	[ebp-9Ch], ecx
		jz	short loc_7101DFD9
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7101DFD9
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-78h], 0
		mov	[esp+arg_0], eax
		lea	eax, [ebp-40h]
		mov	[esp+0], eax
		call	sub_7104D360

loc_7101DFD9:				; CODE XREF: sub_7101DEAE+106j
					; sub_7101DEAE+110j
		mov	eax, [ebp-9Ch]
		mov	[ebp-0A8h], eax

loc_7101DFE5:				; CODE XREF: sub_7101DEAE+24j
		mov	eax, [ebp-44h]
		mov	edx, [ebp-0A8h]
		test	eax, eax
		mov	[ebp-98h], edx
		jz	short loc_7101E01B
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7101E01B
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-78h], 0
		mov	[esp+arg_0], eax
		lea	eax, [ebp-44h]
		mov	[esp+0], eax
		call	sub_7104DB20

loc_7101E01B:				; CODE XREF: sub_7101DEAE+148j
					; sub_7101DEAE+152j
		mov	ecx, [ebp-98h]
		mov	[ebp-0A8h], ecx

loc_7101E027:				; CODE XREF: sub_7101DEAE+32j
		mov	eax, [ebp-0A8h]
		mov	[ebp-94h], eax
		mov	eax, [ebp-48h]
		test	eax, eax
		jz	short loc_7101E05D
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7101E05D
		mov	eax, [ebp-48h]
		mov	dword ptr [ebp-78h], 0
		mov	[esp+arg_0], eax
		lea	eax, [ebp-48h]
		mov	[esp+0], eax
		call	sub_7104DFE0

loc_7101E05D:				; CODE XREF: sub_7101DEAE+18Aj
					; sub_7101DEAE+194j
		mov	edx, [ebp-94h]
		mov	[ebp-0A8h], edx

loc_7101E069:				; CODE XREF: sub_7101DEAE+72j
					; sub_7101DEAE+206j
		lea	eax, [ebp-0Ch]

loc_7101E06C:				; CODE XREF: sub_7101DEAE+20Bj
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_710477B0
		mov	ecx, [ebp-0A8h]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7101E090:				; CODE XREF: sub_7101DEAE+5Bj
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_71044340

loc_7101E0A2:				; CODE XREF: sub_7101DEAE+64j
					; sub_7101DEAE+246j
		lea	eax, [ebp-48h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_71044070
		jmp	short loc_7101E069
; ---------------------------------------------------------------------------

loc_7101E0B6:				; CODE XREF: sub_7101DEAE+52j
		lea	eax, [ebp-10h]
		jmp	short loc_7101E06C
; ---------------------------------------------------------------------------

loc_7101E0BB:				; CODE XREF: sub_7101DEAE+44j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_710477B0
		mov	eax, [ebp-0A8h]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7101E0E2:				; CODE XREF: sub_7101DEAE+3Bj
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	sub_7104D2D0
		jmp	short loc_7101E0A2
sub_7101DEAE	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7101E100	proc near		; CODE XREF: sub_7101FFE0+18Cp

var_1CC		= dword	ptr -1CCh
var_1C8		= dword	ptr -1C8h
var_1C4		= dword	ptr -1C4h
var_1C0		= dword	ptr -1C0h
var_1BC		= dword	ptr -1BCh
var_1B8		= dword	ptr -1B8h
var_1B4		= dword	ptr -1B4h
var_1B0		= dword	ptr -1B0h
var_1AC		= dword	ptr -1ACh
var_1A8		= dword	ptr -1A8h
var_1A4		= dword	ptr -1A4h
var_1A0		= dword	ptr -1A0h
var_19C		= dword	ptr -19Ch
var_198		= dword	ptr -198h
var_191		= byte ptr -191h
var_190		= dword	ptr -190h
var_18C		= byte ptr -18Ch
var_188		= dword	ptr -188h
var_184		= dword	ptr -184h
var_174		= dword	ptr -174h
var_170		= dword	ptr -170h
var_16C		= dword	ptr -16Ch
var_168		= dword	ptr -168h
var_164		= dword	ptr -164h
var_158		= dword	ptr -158h
var_154		= dword	ptr -154h
var_150		= dword	ptr -150h
var_14C		= byte ptr -14Ch
var_140		= byte ptr -140h
var_134		= dword	ptr -134h
var_128		= dword	ptr -128h
var_124		= dword	ptr -124h
var_120		= dword	ptr -120h
var_11C		= dword	ptr -11Ch
var_118		= dword	ptr -118h
var_114		= dword	ptr -114h
var_110		= dword	ptr -110h
var_10C		= dword	ptr -10Ch
var_108		= dword	ptr -108h
var_104		= dword	ptr -104h
var_100		= dword	ptr -100h
var_FC		= dword	ptr -0FCh
var_F8		= dword	ptr -0F8h
var_F4		= dword	ptr -0F4h
var_F0		= dword	ptr -0F0h
var_EC		= dword	ptr -0ECh
var_E8		= dword	ptr -0E8h
var_E4		= dword	ptr -0E4h
var_E0		= dword	ptr -0E0h
var_DC		= dword	ptr -0DCh
var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_D0		= dword	ptr -0D0h
var_CC		= dword	ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= byte ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= byte ptr -2Ch
var_28		= byte ptr -28h
var_24		= byte ptr -24h
var_20		= byte ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_A		= word ptr -0Ah
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 1F8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_16C], eax
		lea	eax, [ebp+var_18C]
		mov	[esp], eax
		mov	[ebp+var_164], esp
		mov	[ebp+var_174], offset sub_710525B0
		mov	[ebp+var_170], offset word_7105349A
		mov	[ebp+var_168], offset loc_7101FC92
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_188], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_71009C20
		mov	ecx, [ebp+arg_8]
		lea	eax, [ebp+var_10]
		mov	[esp+8], eax
		lea	eax, [ebp+var_134]
		mov	[esp], eax
		mov	[ebp+var_10], offset aXmlSpace ; "xml:space"
		mov	[esp+4], ecx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		mov	eax, [ebp+var_134]
		sub	esp, 4
		test	eax, eax
		jz	loc_7101E8B6
		mov	edx, ds:_ZN7QString11shared_nullE
		cmp	[eax], edx
		jz	loc_7101E8B6
		lea	edx, [ebp+var_134]
		lea	eax, [ebp+var_14]
		mov	[ebp+var_14], offset aPreserve ; "preserve"
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_188], 17h
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jnz	loc_7101E3F0
		lea	eax, [ebp+var_134]
		mov	[esp+4], eax
		lea	eax, [ebp+var_18]
		mov	[ebp+var_18], offset aDefault ;	"default"
		mov	[esp], eax
		mov	[ebp+var_188], 17h
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_7101EAB6
		mov	[ebp+var_1C], 0
		lea	eax, [ebp+var_1C]

loc_7101E204:				; CODE XREF: sub_7101E100+AD5j
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 10h
		mov	[esp], eax
		call	sub_71047630

loc_7101E216:				; CODE XREF: sub_7101E100+36Bj
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx]
		test	edx, edx
		jz	loc_7101EBE0

loc_7101E223:				; CODE XREF: sub_7101E100+B13j
		mov	ecx, [ebp+arg_4]
		xor	edx, edx
		mov	eax, [ecx]
		mov	ecx, [eax+8]
		test	ecx, ecx
		jnz	loc_7101E470

loc_7101E235:				; CODE XREF: sub_7101E100+94Aj
					; sub_7101E100+965j ...
		test	edx, edx
		jz	loc_7101EC18
		mov	eax, [ebp+arg_4]
		sub	edx, 1
		mov	[ebp+var_154], 1
		mov	[ebp+var_150], edx
		mov	[ebp+var_158], eax
		mov	eax, [eax]
		mov	eax, [eax+0Ch]
		movzx	eax, word ptr [eax]
		sub	eax, 61h
		cmp	ax, 15h		; switch 22 cases
		jbe	loc_7101EDB5

loc_7101E26E:				; CODE XREF: sub_7101E100+CB8j
					; DATA XREF: .rdata:off_71059B58o
		mov	[ebp+var_1B4], 0 ; jumptable 7101EDB8 default case

loc_7101E278:				; CODE XREF: sub_7101E100+CF8j
					; sub_7101E100+D44j ...
		mov	ecx, [ebp+var_1B4]
		test	ecx, ecx
		jz	loc_7101EDFE
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_188], 17h
		add	ecx, 4
		mov	[ebp+var_1B0], ecx
		mov	[esp], ecx
		call	sub_710476F0
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_8]
		mov	[esp+8], edx
		mov	[esp+4], ecx
		mov	eax, [eax]
		mov	[esp], eax
		call	[ebp+var_1B4]
		test	eax, eax
		mov	[ebp+var_190], eax
		jz	loc_7101ECA4
		mov	eax, [ebp+var_1B0]
		mov	[esp], eax
		call	sub_710476F0
		mov	eax, [eax]
		mov	edx, [eax]
		mov	[esp], eax
		call	dword ptr [edx+0Ch]
		test	eax, eax
		js	loc_7101F190
		cmp	eax, 3
		jg	loc_7101F184
		mov	edx, [ebp+var_1B0]
		mov	[ebp+var_188], 17h
		mov	[esp], edx
		call	sub_710476F0
		mov	eax, [eax]
		mov	edx, [ebp+arg_8]
		mov	[ebp+var_1BC], eax
		lea	eax, [ebp+var_3C]
		call	sub_7100D270
		lea	eax, [ebp+var_3C]
		mov	ecx, [ebp+var_190]
		mov	[esp+8], eax
		mov	eax, [ebp+var_1BC]
		mov	[ebp+var_188], 11h
		mov	[esp+4], ecx
		mov	[esp], eax
		call	sub_71024E40
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_188], 17h
		call	sub_710477B0

loc_7101E35D:				; CODE XREF: sub_7101E100+10BFj
					; sub_7101E100+12B9j
		mov	edx, [ebp+var_190]
		test	edx, edx
		jz	loc_7101ECA4
		mov	edx, [ebp+arg_8]
		mov	eax, [ebp+var_190]
		mov	[ebp+var_188], 17h
		call	sub_71013AD0
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+28h]
		mov	edx, eax
		mov	eax, [ebp+var_190]
		call	sub_7101BB40
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+arg_8]
		mov	eax, [ebp+var_190]
		call	sub_71017670
		mov	edx, [ebp+var_190]
		mov	eax, [edx]
		mov	[esp], edx
		call	dword ptr [eax+0Ch]
		cmp	eax, 0Eh
		jnz	loc_7101F1C4

loc_7101E3BE:				; CODE XREF: sub_7101E100+10D5j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_188], 17h
		add	eax, 10h
		mov	[esp], eax
		call	sub_710475D0
		mov	eax, [eax]
		mov	edx, [ebp+var_190]
		mov	[edx+0A8h], eax
		jmp	loc_7101E778
; ---------------------------------------------------------------------------
		align 10h

loc_7101E3F0:				; CODE XREF: sub_7101E100+C5j
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+10h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_7101EDA0
		mov	edx, [eax+8]

loc_7101E404:				; CODE XREF: sub_7101E100+CB0j
		add	edx, 1
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 4
		mov	[esp+4], edx
		mov	dword ptr [esp], 14h
		mov	[ebp+var_188], 17h
		call	ds:_ZN11QVectorData4growEiiib
		mov	edx, [ebp+arg_0]
		mov	[esp+8], eax
		mov	eax, [edx+10h]
		mov	eax, [eax+8]
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 10h
		mov	[esp], eax
		call	sub_7104E560
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+10h]
		mov	edx, [eax+8]

loc_7101E459:				; CODE XREF: sub_7101E100+CA6j
		mov	dword ptr [eax+edx*4+10h], 1

loc_7101E461:				; CODE XREF: sub_7101E100+8B1j
					; sub_7101E100+8C5j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+10h]
		add	dword ptr [eax+8], 1
		jmp	loc_7101E216
; ---------------------------------------------------------------------------

loc_7101E470:				; CODE XREF: sub_7101E100+12Fj
		mov	edx, [ebp+arg_4]
		sub	ecx, 1
		mov	[ebp+var_154], 1
		mov	[ebp+var_150], ecx
		mov	[ebp+var_158], edx
		mov	edx, [eax+0Ch]
		movzx	edx, word ptr [edx]
		cmp	dx, 67h
		jz	loc_7101EA50
		cmp	dx, 73h
		jz	loc_7101E9D0
		cmp	dx, 64h
		mov	[ebp+var_19C], 0
		jz	loc_7101EA70

loc_7101E4BA:				; CODE XREF: sub_7101E100+903j
					; sub_7101E100+93Cj ...
		mov	eax, [ebp+var_19C]
		test	eax, eax
		jz	loc_7101FD97
		mov	edx, [ebp+arg_0]
		xor	eax, eax
		mov	ecx, [edx]
		test	ecx, ecx
		jz	short loc_7101E548
		mov	ecx, edx
		add	ecx, 4
		mov	[ebp+var_198], ecx
		mov	eax, [edx+4]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_7101E50E
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_188], 17h
		mov	[esp+4], eax
		call	sub_7104E6E0
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+4]

loc_7101E50E:				; CODE XREF: sub_7101E100+3E6j
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_7101E53B
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_188], 17h
		mov	[esp+4], eax
		mov	eax, [ebp+var_198]
		mov	[esp], eax
		call	sub_7104E6E0

loc_7101E53B:				; CODE XREF: sub_7101E100+413j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	edx, [eax+8]
		mov	eax, [eax+edx*4+0Ch]

loc_7101E548:				; CODE XREF: sub_7101E100+3D1j
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+arg_8]
		mov	[esp], eax
		mov	[ebp+var_188], 17h
		mov	[esp+8], ecx
		mov	[esp+4], edx
		call	[ebp+var_19C]
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_190], eax
		mov	edx, [ecx]
		test	edx, edx
		jz	loc_7101E890
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		add	eax, 4
		mov	[ebp+var_1A0], eax
		mov	eax, [edx+4]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_7101E5C1
		mov	edx, [eax+4]
		mov	ecx, [ebp+var_1A0]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_188], 17h
		mov	[esp+4], eax
		call	sub_7104E6E0
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]

loc_7101E5C1:				; CODE XREF: sub_7101E100+493j
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_7101E5EE
		mov	edx, [eax+4]
		mov	ecx, [ebp+var_1A0]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_188], 17h
		mov	[esp+4], eax
		call	sub_7104E6E0

loc_7101E5EE:				; CODE XREF: sub_7101E100+4C6j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	edx, [eax+8]
		mov	eax, [eax+edx*4+0Ch]
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+0Ch]
		mov	[ebp+var_188], 17h
		call	eax
		cmp	eax, 3
		ja	loc_7101E730
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+4]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_7101E647
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp+4], eax
		mov	eax, [ebp+var_1A0]
		mov	[esp], eax
		call	sub_7104E6E0
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]

loc_7101E647:				; CODE XREF: sub_7101E100+523j
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_7101E674
		mov	edx, [eax+4]
		mov	ecx, [ebp+var_1A0]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_188], 17h
		mov	[esp+4], eax
		call	sub_7104E6E0

loc_7101E674:				; CODE XREF: sub_7101E100+54Cj
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_8]
		mov	eax, [edx+4]
		mov	[ebp+var_84], offset aId ; "id"
		mov	edx, [eax+8]
		mov	edx, [eax+edx*4+0Ch]
		lea	eax, [ebp+var_140]
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	[ebp+var_188], 17h
		mov	[ebp+var_1AC], edx
		lea	edx, [ebp+var_84]
		mov	[esp+8], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_38]
		lea	edx, [ebp+var_140]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_188], 7
		call	ds:_ZNK10QStringRef8toStringEv
		mov	eax, [ebp+var_38]
		sub	esp, 4
		mov	eax, [eax+8]
		test	eax, eax
		jz	loc_7101ECF1

loc_7101E6EF:				; CODE XREF: sub_7101E100+C7Cj
					; sub_7101E100+C9Bj
		lea	eax, [ebp+var_38]
		mov	ecx, [ebp+var_190]
		mov	[esp+8], eax
		mov	eax, [ebp+var_1AC]
		mov	[ebp+var_188], 12h
		mov	[esp+4], ecx
		mov	[esp], eax
		call	sub_71024E40
		mov	eax, [ebp+var_38]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7101ECD6
		lea	esi, [esi+0]

loc_7101E730:				; CODE XREF: sub_7101E100+512j
					; sub_7101E100+792j ...
		mov	edx, [ebp+arg_8]
		mov	eax, [ebp+var_190]
		mov	[ebp+var_188], 17h
		call	sub_71013AD0
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_190]
		mov	ecx, [edx+28h]
		call	sub_7101BB40
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+arg_8]
		mov	eax, [ebp+var_190]
		call	sub_71017670

loc_7101E76A:				; CODE XREF: sub_7101E100+1287j
		mov	eax, [ebp+var_190]
		test	eax, eax
		jz	loc_7101ECA4

loc_7101E778:				; CODE XREF: sub_7101E100+2E4j
					; sub_7101E100+10F8j ...
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+4]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_7101E8A5
		mov	edx, [eax+8]

loc_7101E78C:				; CODE XREF: sub_7101E100+7B1j
		add	edx, 1
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 4
		mov	[esp+4], edx
		mov	dword ptr [esp], 14h
		mov	[ebp+var_188], 17h
		call	ds:_ZN11QVectorData4growEiiib
		mov	edx, [ebp+arg_0]
		mov	[esp+8], eax
		mov	eax, [edx+4]
		mov	eax, [eax+8]
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 4
		mov	[esp], eax
		call	sub_7104E6E0
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+4]
		mov	edx, [eax+8]

loc_7101E7E1:				; CODE XREF: sub_7101E100+7ABj
		mov	ecx, [ebp+var_190]
		mov	[eax+edx*4+10h], ecx
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		add	dword ptr [eax+8], 1
		mov	eax, [edx+0Ch]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_7101E897
		mov	edx, [eax+8]

loc_7101E806:				; CODE XREF: sub_7101E100+7A0j
		add	edx, 1
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 4
		mov	[esp+4], edx
		mov	dword ptr [esp], 14h
		mov	[ebp+var_188], 17h
		call	ds:_ZN11QVectorData4growEiiib
		mov	ecx, [ebp+arg_0]
		mov	[esp+8], eax
		mov	eax, [ecx+0Ch]
		mov	eax, [eax+8]
		mov	[esp+4], eax
		mov	eax, ecx
		add	eax, 0Ch
		mov	[esp], eax
		call	sub_71049630
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		mov	edx, [eax+8]

loc_7101E85B:				; CODE XREF: sub_7101E100+79Dj
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [eax+edx*4+10h], 1
		mov	eax, [ecx+0Ch]
		mov	[ebp+var_191], 1
		add	dword ptr [eax+8], 1

loc_7101E874:				; CODE XREF: sub_7101E100+B0Dj
					; sub_7101E100+BD1j
		lea	eax, [ebp+var_18C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_191]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7101E890:				; CODE XREF: sub_7101E100+476j
		mov	[ecx], eax
		jmp	loc_7101E730
; ---------------------------------------------------------------------------

loc_7101E897:				; CODE XREF: sub_7101E100+6FDj
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jl	short loc_7101E85B
		nop
		jmp	loc_7101E806
; ---------------------------------------------------------------------------

loc_7101E8A5:				; CODE XREF: sub_7101E100+683j
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jl	loc_7101E7E1
		jmp	loc_7101E78C
; ---------------------------------------------------------------------------

loc_7101E8B6:				; CODE XREF: sub_7101E100+88j
					; sub_7101E100+96j
		mov	edx, [ebp+arg_0]
		xor	ecx, ecx
		mov	eax, [edx+10h]
		mov	[ebp+var_1A4], 0
		mov	edx, [eax+8]
		test	edx, edx
		jz	short loc_7101E94B
		mov	ecx, [ebp+arg_0]
		add	ecx, 10h
		mov	[ebp+var_1A8], ecx
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_7101E90E
		mov	eax, [eax+4]
		mov	[esp+4], edx
		mov	[ebp+var_188], 17h
		mov	[esp+8], eax
		mov	eax, [ebp+var_1A8]
		mov	[esp], eax
		call	sub_7104E560
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+10h]
		mov	edx, [eax+8]

loc_7101E90E:				; CODE XREF: sub_7101E100+7E0j
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_7101E938
		mov	eax, [eax+4]
		mov	ecx, [ebp+var_1A8]
		mov	[esp+4], edx
		mov	[ebp+var_188], 17h
		mov	[esp+8], eax
		mov	[esp], ecx
		call	sub_7104E560

loc_7101E938:				; CODE XREF: sub_7101E100+813j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+10h]
		mov	ecx, [eax+8]
		mov	edx, [eax+ecx*4+0Ch]
		mov	[ebp+var_1A4], edx

loc_7101E94B:				; CODE XREF: sub_7101E100+7CDj
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_7101E9B6

loc_7101E952:				; CODE XREF: sub_7101E100+8B9j
		add	ecx, 1
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 4
		mov	[esp+4], ecx
		mov	dword ptr [esp], 14h
		mov	[ebp+var_188], 17h
		call	ds:_ZN11QVectorData4growEiiib
		mov	ecx, [ebp+arg_0]
		mov	[esp+8], eax
		mov	eax, [ecx+10h]
		mov	eax, [eax+8]
		mov	[esp+4], eax
		mov	eax, ecx
		add	eax, 10h
		mov	[esp], eax
		call	sub_7104E560
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_1A4]
		mov	eax, [edx+10h]
		mov	edx, [eax+8]
		mov	[eax+edx*4+10h], ecx
		jmp	loc_7101E461
; ---------------------------------------------------------------------------

loc_7101E9B6:				; CODE XREF: sub_7101E100+850j
		cmp	[eax+4], ecx
		jle	short loc_7101E952
		mov	edx, [ebp+var_1A4]
		mov	[eax+ecx*4+10h], edx
		jmp	loc_7101E461
; ---------------------------------------------------------------------------
		align 10h

loc_7101E9D0:				; CODE XREF: sub_7101E100+3A0j
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_68]
		mov	[ebp+var_68], offset aVg ; "vg"
		mov	[esp], eax
		mov	[ebp+var_188], 9
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_19C], offset sub_7100FC80
		jnz	loc_7101E4BA
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_64]
		mov	[ebp+var_64], offset aWitch ; "witch"
		mov	[esp], eax
		mov	[ebp+var_188], 9
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_19C], offset sub_71007040
		jnz	loc_7101E4BA
		mov	ecx, [ebp+arg_4]
		mov	eax, [ecx]
		mov	edx, [eax+8]
		jmp	loc_7101E235
; ---------------------------------------------------------------------------
		align 10h

loc_7101EA50:				; CODE XREF: sub_7101E100+396j
		test	ecx, ecx
		mov	[ebp+var_19C], offset sub_71007500
		jz	loc_7101E4BA

loc_7101EA62:				; CODE XREF: sub_7101E100+1C9Cj
		mov	edx, [eax+8]
		jmp	loc_7101E235
; ---------------------------------------------------------------------------
		align 10h

loc_7101EA70:				; CODE XREF: sub_7101E100+3B4j
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_6C]
		mov	[ebp+var_6C], offset aEfs ; "efs"
		mov	[esp], eax
		mov	[ebp+var_188], 9
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_19C], offset sub_710075A0
		jnz	loc_7101E4BA
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	edx, [eax+8]
		jmp	loc_7101E235
; ---------------------------------------------------------------------------

loc_7101EAB6:				; CODE XREF: sub_7101E100+F4j
		lea	eax, [ebp+var_28]
		lea	edx, [ebp+var_134]
		mov	[ebp+var_A], 20h
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_188], 17h
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_24]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset a1IsAnInvalidVa ; "\"%1\" is an invalid value	for attribut"...
		mov	[esp], eax
		mov	[ebp+var_188], 16h
		call	ds:_ZN7QString10fromLatin1EPKci
		sub	esp, 4
		lea	edx, [ebp+var_A]
		mov	[esp+10h], edx
		lea	edx, [ebp+var_28]
		lea	eax, [ebp+var_2C]
		mov	[esp+8], edx
		lea	edx, [ebp+var_24]
		mov	dword ptr [esp+0Ch], 0
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_188], 15h
		call	ds:_ZNK7QString3argERKS_iRK5QChar
		sub	esp, 4
		lea	eax, [ebp+var_20]
		mov	dword ptr [esp+4], 1
		mov	[esp], eax
		mov	[ebp+var_188], 14h
		call	sub_710470A0
		lea	eax, [ebp+var_2C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_188], 13h
		call	sub_71047480
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_188], 14h
		call	sub_71047180
		lea	eax, [ebp+var_2C]
		mov	[esp], eax
		mov	[ebp+var_188], 15h
		call	sub_710477B0
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		mov	[ebp+var_188], 16h
		call	sub_710477B0
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_188], 17h
		call	sub_710477B0
		mov	[ebp+var_30], 0
		lea	eax, [ebp+var_30]
		jmp	loc_7101E204
; ---------------------------------------------------------------------------
		align 10h

loc_7101EBE0:				; CODE XREF: sub_7101E100+11Dj
		lea	eax, [ebp+var_34]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_34], offset aSvg ; "svg"
		mov	[ebp+var_188], 17h
		mov	[esp], eax
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		mov	[ebp+var_191], 0
		jz	loc_7101E874
		jmp	loc_7101E223
; ---------------------------------------------------------------------------

loc_7101EC18:				; CODE XREF: sub_7101E100+137j
		xor	eax, eax

loc_7101EC1A:				; CODE XREF: sub_7101E100+D06j
					; sub_7101E100+D52j
		test	eax, eax
		jz	loc_7101F276
		mov	ecx, [ebp+arg_4]
		sub	eax, 1
		mov	[ebp+var_154], 1
		mov	[ebp+var_150], eax
		mov	edx, [ecx]
		mov	[ebp+var_158], ecx
		mov	edx, [edx+0Ch]
		movzx	edx, word ptr [edx]
		sub	edx, 61h
		cmp	dx, 13h		; switch 20 cases
		jbe	loc_7101F3BE

loc_7101EC53:				; CODE XREF: sub_7101E100+12C1j
					; DATA XREF: .rdata:off_71059BB0o
		mov	[ebp+var_1B8], 0 ; jumptable 7101F3C1 default case

loc_7101EC5D:				; CODE XREF: sub_7101E100+1301j
					; sub_7101E100+1340j ...
		mov	eax, [ebp+var_1B8]
		test	eax, eax
		jz	loc_7101F446
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_188], 17h
		add	eax, 4
		mov	[esp], eax
		call	sub_710476F0
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_8]
		mov	[esp+8], edx
		mov	[esp+4], ecx
		mov	eax, [eax]
		mov	[esp], eax
		call	[ebp+var_1B8]
		test	al, al
		jz	loc_7101F880

loc_7101ECA4:				; CODE XREF: sub_7101E100+1C5j
					; sub_7101E100+265j ...
		mov	[ebp+var_60], 2
		lea	eax, [ebp+var_60]

loc_7101ECAE:				; CODE XREF: sub_7101E100+1B12j
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_188], 17h
		add	eax, 0Ch
		mov	[esp], eax
		call	sub_71047510
		mov	[ebp+var_191], 1
		jmp	loc_7101E874
; ---------------------------------------------------------------------------

loc_7101ECD6:				; CODE XREF: sub_7101E100+623j
		mov	eax, [ebp+var_38]
		mov	[ebp+var_188], 17h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101E730
; ---------------------------------------------------------------------------

loc_7101ECF1:				; CODE XREF: sub_7101E100+5E9j
		lea	edx, [ebp+var_8C]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_8]
		lea	eax, [ebp+var_14C]
		mov	[ebp+var_8C], offset aXmlId ; "xml:id"
		mov	[esp], eax
		mov	[ebp+var_188], 6
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_88]
		lea	edx, [ebp+var_14C]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_188], 5
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_88]
		mov	[esp+4], eax
		lea	eax, [ebp+var_38]
		mov	[esp], eax
		mov	[ebp+var_188], 4
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_88]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7101E6EF
		mov	eax, [ebp+var_88]
		mov	[ebp+var_188], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7101E6EF
; ---------------------------------------------------------------------------

loc_7101EDA0:				; CODE XREF: sub_7101E100+2FBj
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jl	loc_7101E459
		lea	esi, [esi+0]
		jmp	loc_7101E404
; ---------------------------------------------------------------------------

loc_7101EDB5:				; CODE XREF: sub_7101E100+168j
		movzx	eax, ax
		jmp	ds:off_71059B58[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_7101EDBF:				; CODE XREF: sub_7101E100+CB8j
					; DATA XREF: .rdata:off_71059B58o
		lea	eax, [ebp+var_158] ; jumptable 7101EDB8	case 21
		mov	[esp+4], eax
		lea	eax, [ebp+var_90]
		mov	[ebp+var_90], offset aIdeo ; "ideo"
		mov	[esp], eax
		mov	[ebp+var_188], 3
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B4], offset loc_71006C00
		jnz	loc_7101E278

loc_7101EDFE:				; CODE XREF: sub_7101E100+180j
					; sub_7101E100+E14j ...
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	eax, [eax+8]
		jmp	loc_7101EC1A
; ---------------------------------------------------------------------------

loc_7101EE0B:				; CODE XREF: sub_7101E100+CB8j
					; DATA XREF: .rdata:off_71059B58o
		lea	eax, [ebp+var_158] ; jumptable 7101EDB8	case 20
		mov	[esp+4], eax
		lea	eax, [ebp+var_94]
		mov	[ebp+var_94], offset aSe ; "se"
		mov	[esp], eax
		mov	[ebp+var_188], 3
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B4], offset sub_7100E020
		jnz	loc_7101E278

loc_7101EE4A:				; CODE XREF: sub_7101E100+E5Fj
					; sub_7101E100+F65j ...
		mov	ecx, [ebp+arg_4]
		mov	eax, [ecx]
		mov	eax, [eax+8]
		jmp	loc_7101EC1A
; ---------------------------------------------------------------------------

loc_7101EE57:				; CODE XREF: sub_7101E100+CB8j
					; DATA XREF: .rdata:off_71059B58o
		lea	eax, [ebp+var_158] ; jumptable 7101EDB8	case 19
		mov	[esp+4], eax
		lea	eax, [ebp+var_A0]
		mov	[ebp+var_A0], offset aExt ; "ext"
		mov	[esp], eax
		mov	[ebp+var_188], 3
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B4], offset sub_7100C260
		jnz	loc_7101E278
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_9C]
		mov	[ebp+var_9C], offset aExtarea ;	"extArea"
		mov	[esp], eax
		mov	[ebp+var_188], 3
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B4], offset sub_7100D060
		jnz	loc_7101E278
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_98]
		mov	[ebp+var_98], offset aSpan ; "span"
		mov	[esp], eax
		mov	[ebp+var_188], 3
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B4], offset sub_71007640
		jnz	loc_7101E278
		jmp	loc_7101EDFE
; ---------------------------------------------------------------------------
		align 10h

loc_7101EF20:				; CODE XREF: sub_7101E100+CB8j
					; DATA XREF: .rdata:off_71059B58o
		lea	eax, [ebp+var_158] ; jumptable 7101EDB8	case 17
		mov	[esp+4], eax
		lea	eax, [ebp+var_A4]
		mov	[ebp+var_A4], offset aEct ; "ect"
		mov	[esp], eax
		mov	[ebp+var_188], 3
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B4], offset sub_7100C470
		jnz	loc_7101E278
		jmp	loc_7101EE4A
; ---------------------------------------------------------------------------

loc_7101EF64:				; CODE XREF: sub_7101E100+CB8j
					; DATA XREF: .rdata:off_71059B58o
		lea	eax, [ebp+var_158] ; jumptable 7101EDB8	case 15
		mov	[esp+4], eax
		lea	eax, [ebp+var_B0]
		mov	[ebp+var_B0], offset aAth ; "ath"
		mov	[esp], eax
		mov	[ebp+var_188], 3
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B4], offset sub_71009870
		jnz	loc_7101E278
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_AC]
		mov	[ebp+var_AC], offset aOlygon ; "olygon"
		mov	[esp], eax
		mov	[ebp+var_188], 3
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B4], offset sub_7100B730
		jnz	loc_7101E278
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_A8]
		mov	[ebp+var_A8], offset aOlyline ;	"olyline"
		mov	[esp], eax
		mov	[ebp+var_188], 3
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B4], offset sub_7100B430
		jnz	loc_7101E278
		jmp	loc_7101EDFE
; ---------------------------------------------------------------------------

loc_7101F026:				; CODE XREF: sub_7101E100+CB8j
					; DATA XREF: .rdata:off_71059B58o
		lea	eax, [ebp+var_158] ; jumptable 7101EDB8	case 11
		mov	[esp+4], eax
		lea	eax, [ebp+var_B4]
		mov	[ebp+var_B4], offset aIne ; "ine"
		mov	[esp], eax
		mov	[ebp+var_188], 3
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B4], offset sub_7100BA30
		jnz	loc_7101E278
		jmp	loc_7101EE4A
; ---------------------------------------------------------------------------
		align 10h

loc_7101F070:				; CODE XREF: sub_7101E100+CB8j
					; DATA XREF: .rdata:off_71059B58o
		lea	eax, [ebp+var_158] ; jumptable 7101EDB8	case 8
		mov	[esp+4], eax
		lea	eax, [ebp+var_B8]
		mov	[ebp+var_B8], offset aMage ; "mage"
		mov	[esp], eax
		mov	[ebp+var_188], 3
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B4], offset sub_710212A0
		jnz	loc_7101E278
		jmp	loc_7101EDFE
; ---------------------------------------------------------------------------

loc_7101F0B4:				; CODE XREF: sub_7101E100+CB8j
					; DATA XREF: .rdata:off_71059B58o
		lea	eax, [ebp+var_158] ; jumptable 7101EDB8	case 4
		mov	[esp+4], eax
		lea	eax, [ebp+var_BC]
		mov	[ebp+var_BC], offset aLlipse ; "llipse"
		mov	[esp], eax
		mov	[ebp+var_188], 3
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B4], offset sub_7100AD80
		jnz	loc_7101E278
		jmp	loc_7101EE4A
; ---------------------------------------------------------------------------

loc_7101F0F8:				; CODE XREF: sub_7101E100+CB8j
					; DATA XREF: .rdata:off_71059B58o
		lea	eax, [ebp+var_158] ; jumptable 7101EDB8	case 2
		mov	[esp+4], eax
		lea	eax, [ebp+var_C0]
		mov	[ebp+var_C0], offset aIrcle ; "ircle"
		mov	[esp], eax
		mov	[ebp+var_188], 3
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B4], offset sub_7100B130
		jnz	loc_7101E278
		jmp	loc_7101EDFE
; ---------------------------------------------------------------------------
		align 10h

loc_7101F140:				; CODE XREF: sub_7101E100+CB8j
					; DATA XREF: .rdata:off_71059B58o
		lea	eax, [ebp+var_158] ; jumptable 7101EDB8	case 0
		mov	[esp+4], eax
		lea	eax, [ebp+var_C4]
		mov	[ebp+var_C4], offset aNimation ; "nimation"
		mov	[esp], eax
		mov	[ebp+var_188], 3
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B4], offset loc_71006B10
		jnz	loc_7101E278
		jmp	loc_7101EE4A
; ---------------------------------------------------------------------------

loc_7101F184:				; CODE XREF: sub_7101E100+1EEj
		sub	eax, 0Eh
		cmp	eax, 1
		jbe	loc_7101F229

loc_7101F190:				; CODE XREF: sub_7101E100+1E5j
		mov	dword ptr [esp], offset	aCouldNotAddChi	; "Could not add child element to parent e"...
		mov	[ebp+var_188], 17h
		call	ds:_Z8qWarningPKcz
		mov	edx, [ebp+var_190]
		mov	eax, [edx]
		mov	[esp], edx
		call	dword ptr [eax+4]

loc_7101F1B5:				; CODE XREF: sub_7101E100+1171j
		mov	[ebp+var_190], 0
		jmp	loc_7101E35D
; ---------------------------------------------------------------------------

loc_7101F1C4:				; CODE XREF: sub_7101E100+2B8j
		mov	ecx, [ebp+var_190]
		mov	eax, [ecx]
		mov	[esp], ecx
		call	dword ptr [eax+0Ch]
		cmp	eax, 0Fh
		jz	loc_7101E3BE
		mov	edx, [ebp+var_190]
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+0Ch]
		mov	[ebp+var_188], 17h
		call	eax
		cmp	eax, 10h
		jnz	loc_7101E778
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_188], 17h
		add	eax, 10h
		mov	[esp], eax
		call	sub_710475D0
		mov	eax, [eax]
		mov	ecx, [ebp+var_190]
		mov	[ecx+84h], eax
		jmp	loc_7101E778
; ---------------------------------------------------------------------------

loc_7101F229:				; CODE XREF: sub_7101E100+108Aj
		mov	edx, [ebp+var_190]
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+0Ch]
		mov	[ebp+var_188], 17h
		call	eax
		cmp	eax, 10h
		jz	loc_7101F38C
		mov	dword ptr [esp], offset	aTextOrTextarea	; "'text' or 'textArea' element contains i"...
		mov	[ebp+var_188], 17h
		call	ds:_Z8qWarningPKcz
		mov	ecx, [ebp+var_190]
		mov	eax, [ecx]
		mov	[esp], ecx
		call	dword ptr [eax+4]
		jmp	loc_7101F1B5
; ---------------------------------------------------------------------------

loc_7101F276:				; CODE XREF: sub_7101E100+B1Cj
		xor	eax, eax

loc_7101F278:				; CODE XREF: sub_7101E100+134Ej
					; sub_7101E100+1418j
		xor	edx, edx
		test	eax, eax
		jnz	loc_7101F8FE

loc_7101F282:				; CODE XREF: sub_7101E100+197Ej
					; sub_7101E100+19C4j
		test	edx, edx
		jz	loc_7101FC08
		mov	eax, [ebp+arg_4]
		sub	edx, 1
		mov	[ebp+var_154], 1
		mov	[ebp+var_150], edx
		mov	[ebp+var_158], eax
		mov	eax, [eax]
		mov	eax, [eax+0Ch]
		movzx	eax, word ptr [eax]
		cmp	ax, 67h
		jz	loc_7101FC53
		ja	loc_7101FBBE
		cmp	ax, 66h
		jz	loc_7101FDA1

loc_7101F2C8:				; CODE XREF: sub_7101E100+1AC8j
		xor	edx, edx

loc_7101F2CA:				; CODE XREF: sub_7101E100+1B02j
					; sub_7101E100+1B4Bj ...
		test	edx, edx
		lea	esi, [esi+0]
		jz	loc_7101FC08
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+14h]
		test	eax, eax
		jz	loc_7101ECA4
		mov	[esp+8], ecx
		mov	ecx, [ebp+arg_8]
		mov	[esp], eax
		mov	[ebp+var_188], 17h
		mov	[esp+4], ecx
		call	edx
		test	al, al
		jnz	loc_7101ECA4
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	[ebp+var_54], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_58]
		lea	edx, [ebp+var_54]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_188], 0Bh
		call	ds:_ZNK7QString11toLocal8BitEv
		mov	eax, [ebp+var_58]
		push	edx
		mov	eax, [eax+0Ch]
		mov	dword ptr [esp], offset	aProblemParsing	; "Problem parsing %s"
		mov	[ebp+var_188], 0Ah
		mov	[esp+4], eax
		call	ds:_Z8qWarningPKcz
		lea	eax, [ebp+var_58]
		mov	[esp], eax
		mov	[ebp+var_188], 0Bh
		call	sub_7103B6E0
		lea	eax, [ebp+var_54]
		mov	[esp], eax
		mov	[ebp+var_188], 17h
		call	sub_710477B0

loc_7101F37D:				; CODE XREF: sub_7101E100+17F9j
					; sub_7101E100+1924j ...
		mov	[ebp+var_190], 0
		jmp	loc_7101E76A
; ---------------------------------------------------------------------------

loc_7101F38C:				; CODE XREF: sub_7101E100+1146j
		mov	ecx, [ebp+var_1B0]
		mov	[esp], ecx
		call	sub_710476F0
		mov	eax, [eax]
		mov	edx, [ebp+var_190]
		add	eax, 90h
		mov	[ebp+var_70], edx
		lea	edx, [ebp+var_70]
		mov	[esp+4], edx
		mov	[esp], eax
		call	sub_7104E990
		jmp	loc_7101E35D
; ---------------------------------------------------------------------------

loc_7101F3BE:				; CODE XREF: sub_7101E100+B4Dj
		movzx	edx, dx
		jmp	ds:off_71059BB0[edx*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_7101F3C8:				; CODE XREF: sub_7101E100+12C1j
					; DATA XREF: .rdata:off_71059BB0o
		lea	eax, [ebp+var_158] ; jumptable 7101F3C1	case 19
		mov	[esp+4], eax
		lea	eax, [ebp+var_CC]
		mov	[ebp+var_CC], offset aBreak ; "break"
		mov	[esp], eax
		mov	[ebp+var_188], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B8], offset sub_71006D20
		jnz	loc_7101EC5D
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C8]
		mov	[ebp+var_C8], offset aItle ; "itle"
		mov	[esp], eax
		mov	[ebp+var_188], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B8], offset loc_71006BF0
		jnz	loc_7101EC5D

loc_7101F446:				; CODE XREF: sub_7101E100+B65j
					; sub_7101E100+145Cj ...
		mov	ecx, [ebp+arg_4]
		mov	eax, [ecx]
		mov	eax, [eax+8]
		jmp	loc_7101F278
; ---------------------------------------------------------------------------

loc_7101F453:				; CODE XREF: sub_7101E100+12C1j
					; DATA XREF: .rdata:off_71059BB0o
		lea	eax, [ebp+var_158] ; jumptable 7101F3C1	case 18
		mov	[esp+4], eax
		lea	eax, [ebp+var_D8]
		mov	[ebp+var_D8], offset aCript ; "cript"
		mov	[esp], eax
		mov	[ebp+var_188], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B8], offset loc_71006BD0
		jnz	loc_7101EC5D
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_D4]
		mov	[ebp+var_D4], offset aEt ; "et"
		mov	[esp], eax
		mov	[ebp+var_188], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B8], offset loc_71006BE0
		jnz	loc_7101EC5D
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_D0]
		mov	[ebp+var_D0], offset aTyle ; "tyle"
		mov	[esp], eax
		mov	[ebp+var_188], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B8], offset sub_7100BDD0
		jnz	loc_7101EC5D

loc_7101F510:				; CODE XREF: sub_7101E100+14DFj
					; sub_7101E100+15A6j ...
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	eax, [eax+8]
		jmp	loc_7101F278
; ---------------------------------------------------------------------------

loc_7101F51D:				; CODE XREF: sub_7101E100+12C1j
					; DATA XREF: .rdata:off_71059BB0o
		lea	eax, [ebp+var_158] ; jumptable 7101F3C1	case 15
		mov	[esp+4], eax
		lea	eax, [ebp+var_DC]
		mov	[ebp+var_DC], offset aRefetch ;	"refetch"
		mov	[esp], eax
		mov	[ebp+var_188], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B8], offset loc_71006BC0
		jnz	loc_7101EC5D
		jmp	loc_7101F446
; ---------------------------------------------------------------------------

loc_7101F561:				; CODE XREF: sub_7101E100+12C1j
					; DATA XREF: .rdata:off_71059BB0o
		lea	eax, [ebp+var_158] ; jumptable 7101F3C1	case 12
		mov	[esp+4], eax
		lea	eax, [ebp+var_E4]
		mov	[ebp+var_E4], offset aEtadata ;	"etadata"
		mov	[esp], eax
		mov	[ebp+var_188], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B8], offset loc_71006BA0
		jnz	loc_7101EC5D
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_E0]
		mov	[ebp+var_E0], offset aPath ; "path"
		mov	[esp], eax
		mov	[ebp+var_188], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B8], offset loc_71006BB0
		jnz	loc_7101EC5D
		jmp	loc_7101F510
; ---------------------------------------------------------------------------

loc_7101F5E4:				; CODE XREF: sub_7101E100+12C1j
					; DATA XREF: .rdata:off_71059BB0o
		lea	eax, [ebp+var_158] ; jumptable 7101F3C1	case 7
		mov	[esp+4], eax
		lea	eax, [ebp+var_EC]
		mov	[ebp+var_EC], offset aAndler ; "andler"
		mov	[esp], eax
		mov	[ebp+var_188], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B8], offset loc_71006B80
		jnz	loc_7101EC5D
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_E8]
		mov	[ebp+var_E8], offset aKern ; "kern"
		mov	[esp], eax
		mov	[ebp+var_188], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B8], offset loc_71006B90
		jnz	loc_7101EC5D
		jmp	loc_7101F446
; ---------------------------------------------------------------------------

loc_7101F667:				; CODE XREF: sub_7101E100+12C1j
					; DATA XREF: .rdata:off_71059BB0o
		lea	eax, [ebp+var_158] ; jumptable 7101F3C1	case 5
		mov	[esp+4], eax
		lea	eax, [ebp+var_F0]
		mov	[ebp+var_F0], offset aOreignobject ; "oreignObject"
		mov	[esp], eax
		mov	[ebp+var_188], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B8], offset loc_71006B70
		jnz	loc_7101EC5D
		jmp	loc_7101F510
; ---------------------------------------------------------------------------

loc_7101F6AB:				; CODE XREF: sub_7101E100+12C1j
					; DATA XREF: .rdata:off_71059BB0o
		test	eax, eax	; jumptable 7101F3C1 case 0
		mov	[ebp+var_1B8], offset sub_71006AE0
		jz	loc_7101EC5D
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_10C]
		mov	[ebp+var_10C], offset aNimate ;	"nimate"
		mov	[esp], eax
		mov	[ebp+var_188], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B8], offset sub_71006AF0
		jnz	loc_7101EC5D
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_108]
		mov	[ebp+var_108], offset aNimatecolor ; "nimateColor"
		mov	[esp], eax
		mov	[ebp+var_188], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B8], offset sub_71019980
		jnz	loc_7101EC5D
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_104]
		mov	[ebp+var_104], offset aNimatemotion ; "nimateMotion"
		mov	[esp], eax
		mov	[ebp+var_188], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B8], offset sub_71006B00
		jnz	loc_7101EC5D
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_100]
		mov	[ebp+var_100], offset aNimatetransfor ;	"nimateTransform"
		mov	[esp], eax
		mov	[ebp+var_188], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B8], offset sub_7101A880
		jnz	loc_7101EC5D
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_FC]
		mov	[ebp+var_FC], offset aUdio ; "udio"
		mov	[esp], eax
		mov	[ebp+var_188], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B8], offset loc_71006B20
		jnz	loc_7101EC5D
		jmp	loc_7101F510
; ---------------------------------------------------------------------------

loc_7101F7FD:				; CODE XREF: sub_7101E100+12C1j
					; DATA XREF: .rdata:off_71059BB0o
		lea	eax, [ebp+var_158] ; jumptable 7101F3C1	case 3
		mov	[esp+4], eax
		lea	eax, [ebp+var_F8]
		mov	[ebp+var_F8], offset aEsc ; "esc"
		mov	[esp], eax
		mov	[ebp+var_188], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B8], offset loc_71006B30
		jnz	loc_7101EC5D
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_F4]
		mov	[ebp+var_F4], offset aIscard ; "iscard"
		mov	[esp], eax
		mov	[ebp+var_188], 2
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1B8], offset loc_71006B40
		jnz	loc_7101EC5D
		jmp	loc_7101F446
; ---------------------------------------------------------------------------

loc_7101F880:				; CODE XREF: sub_7101E100+B9Ej
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	[ebp+var_40], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_44]
		lea	edx, [ebp+var_40]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_188], 10h
		call	ds:_ZNK7QString11toLocal8BitEv
		mov	eax, [ebp+var_44]
		sub	esp, 4
		mov	eax, [eax+0Ch]
		mov	dword ptr [esp], offset	aProblemParsing	; "Problem parsing %s"
		mov	[ebp+var_188], 0Fh
		mov	[esp+4], eax
		call	ds:_Z8qWarningPKcz
		lea	eax, [ebp+var_44]
		mov	[esp], eax
		mov	[ebp+var_188], 10h
		call	sub_7103B6E0
		lea	eax, [ebp+var_40]
		mov	[esp], eax
		mov	[ebp+var_188], 17h
		call	sub_710477B0
		jmp	loc_7101F37D
; ---------------------------------------------------------------------------

loc_7101F8FE:				; CODE XREF: sub_7101E100+117Cj
		mov	edx, [ebp+arg_4]
		sub	eax, 1
		mov	[ebp+var_150], eax
		mov	[ebp+var_154], 1
		mov	eax, [edx]
		mov	[ebp+var_158], edx
		mov	eax, [eax+0Ch]
		movzx	eax, word ptr [eax]
		cmp	ax, 6Ch
		jz	loc_7101FB80
		ja	loc_7101FA29
		cmp	ax, 66h
		jz	loc_7101FA83

loc_7101F93C:				; CODE XREF: sub_7101E100+1937j
		mov	[ebp+var_1C0], 0

loc_7101F946:				; CODE XREF: sub_7101E100+1970j
					; sub_7101E100+19B6j ...
		cmp	[ebp+var_1C0], 0
		jz	loc_7101FABC
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_188], 17h
		add	ecx, 4
		mov	[ebp+var_1C8], ecx
		mov	[esp], ecx
		call	sub_710476F0
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_8]
		mov	[esp+8], edx
		mov	[esp+4], ecx
		mov	eax, [eax]
		mov	[esp], eax
		call	[ebp+var_1C0]
		test	eax, eax
		mov	[ebp+var_1C4], eax
		jz	loc_7101FB04
		mov	edx, [ebp+arg_0]
		add	dword ptr [eax+4], 1
		mov	eax, [edx+14h]
		test	eax, eax
		jz	short loc_7101F9BB
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_7101F9BB
		mov	edx, [eax]
		mov	[esp], eax
		call	dword ptr [edx+4]

loc_7101F9BB:				; CODE XREF: sub_7101E100+18A4j
					; sub_7101E100+18B1j
		mov	eax, [ebp+var_1C4]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+arg_8]
		mov	[ecx+14h], eax
		lea	eax, [ebp+var_48]
		mov	[ebp+var_188], 17h
		call	sub_7100D270
		mov	edx, [ebp+var_1C8]
		mov	[ebp+var_188], 0Eh
		mov	[esp], edx
		call	sub_710476F0
		mov	ecx, [ebp+var_1C4]
		lea	edx, [ebp+var_48]
		mov	[esp+8], edx
		mov	[esp+4], ecx
		mov	eax, [eax]
		mov	[esp], eax
		call	sub_71023700
		lea	eax, [ebp+var_48]
		mov	[esp], eax
		mov	[ebp+var_188], 17h
		call	sub_710477B0
		jmp	loc_7101F37D
; ---------------------------------------------------------------------------

loc_7101FA29:				; CODE XREF: sub_7101E100+182Cj
		cmp	ax, 72h
		jz	loc_7101FAC9
		cmp	ax, 73h
		jnz	loc_7101F93C
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_74]
		mov	[ebp+var_74], offset aOlidcolor	; "olidColor"
		mov	[esp], eax
		mov	[ebp+var_188], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1C0], offset sub_7100DE80
		jnz	loc_7101F946

loc_7101FA76:				; CODE XREF: sub_7101E100+1AB9j
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	edx, [eax+8]
		jmp	loc_7101F282
; ---------------------------------------------------------------------------

loc_7101FA83:				; CODE XREF: sub_7101E100+1836j
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_80]
		mov	[ebp+var_80], offset aOnt ; "ont"
		mov	[esp], eax
		mov	[ebp+var_188], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1C0], offset sub_710194B0
		jnz	loc_7101F946

loc_7101FABC:				; CODE XREF: sub_7101E100+184Dj
					; sub_7101E100+1A02j
		mov	ecx, [ebp+arg_4]
		mov	eax, [ecx]
		mov	edx, [eax+8]
		jmp	loc_7101F282
; ---------------------------------------------------------------------------

loc_7101FAC9:				; CODE XREF: sub_7101E100+192Dj
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_78]
		mov	[ebp+var_78], offset aAdialgradient ; "adialGradient"
		mov	[esp], eax
		mov	[ebp+var_188], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1C0], offset sub_7100F140
		jnz	loc_7101F946
		jmp	short loc_7101FABC
; ---------------------------------------------------------------------------

loc_7101FB04:				; CODE XREF: sub_7101E100+1892j
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	[ebp+var_4C], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_50]
		lea	edx, [ebp+var_4C]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_188], 0Dh
		call	ds:_ZNK7QString11toLocal8BitEv
		mov	eax, [ebp+var_50]
		push	ecx
		mov	eax, [eax+0Ch]
		mov	dword ptr [esp], offset	aCouldNotParseN	; "Could not parse node: %s"
		mov	[ebp+var_188], 0Ch
		mov	[esp+4], eax
		call	ds:_Z8qWarningPKcz
		lea	eax, [ebp+var_50]
		mov	[esp], eax
		mov	[ebp+var_188], 0Dh
		call	sub_7103B6E0
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_188], 17h
		call	sub_710477B0
		jmp	loc_7101F37D
; ---------------------------------------------------------------------------

loc_7101FB80:				; CODE XREF: sub_7101E100+1826j
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_7C]
		mov	[ebp+var_7C], offset aIneargradient ; "inearGradient"
		mov	[esp], eax
		mov	[ebp+var_188], 8
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	[ebp+var_1C0], offset sub_7100F6F0
		jnz	loc_7101F946
		jmp	loc_7101FA76
; ---------------------------------------------------------------------------

loc_7101FBBE:				; CODE XREF: sub_7101E100+11B8j
		cmp	ax, 6Dh
		jz	short loc_7101FC17
		cmp	ax, 73h
		jnz	loc_7101F2C8
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_110]
		mov	[ebp+var_110], offset aTop ; "top"
		mov	[esp], eax
		mov	[ebp+var_188], 1
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	edx, offset sub_7101C340
		jnz	loc_7101F2CA

loc_7101FC08:				; CODE XREF: sub_7101E100+1184j
					; sub_7101E100+11D0j ...
		mov	[ebp+var_5C], 0
		lea	eax, [ebp+var_5C]
		jmp	loc_7101ECAE
; ---------------------------------------------------------------------------

loc_7101FC17:				; CODE XREF: sub_7101E100+1AC2j
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_114]
		mov	[ebp+var_114], offset aIssingGlyph ; "issing-glyph"
		mov	[esp], eax
		mov	[ebp+var_188], 1
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	edx, offset sub_71009BA0
		jnz	loc_7101F2CA
		jmp	short loc_7101FC08
; ---------------------------------------------------------------------------

loc_7101FC53:				; CODE XREF: sub_7101E100+11B2j
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_118]
		mov	[ebp+var_118], offset aLyph ; "lyph"
		mov	[esp], eax
		mov	[ebp+var_188], 1
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	edx, offset sub_71009BE0
		jnz	loc_7101F2CA
		jmp	loc_7101FC08
; ---------------------------------------------------------------------------

loc_7101FC92:				; DATA XREF: sub_7101E100+35o
		add	ebp, 8
		mov	eax, [ebp+var_188]
		mov	ecx, [ebp+var_184]
		cmp	eax, 1
		mov	[ebp+var_1CC], ecx
		jz	loc_7101FD7F
		cmp	eax, 2
		jz	loc_7101FD7F
		cmp	eax, 3
		jz	loc_7101FFA8
		cmp	eax, 4
		jz	loc_7101FFC0
		cmp	eax, 5
		xchg	ax, ax
		jz	loc_7101FFC0
		cmp	eax, 6
		jz	loc_7101FD7F
		cmp	eax, 7
		jz	loc_7101FD7F
		cmp	eax, 8
		nop
		lea	esi, [esi+0]
		jz	loc_7101FD7F
		cmp	eax, 9
		jz	loc_7101FF79
		cmp	eax, 0Ah
		jz	loc_7101FF8E
		cmp	eax, 0Bh
		nop
		lea	esi, [esi+0]
		jz	loc_7101FF4A
		cmp	eax, 0Ch
		jz	loc_7101FF5F
		cmp	eax, 0Dh
		jz	loc_7101FF30
		cmp	eax, 0Eh
		nop
		lea	esi, [esi+0]
		jz	loc_7101FF01
		cmp	eax, 0Fh
		jz	loc_7101FF16
		cmp	eax, 10h
		jz	loc_7101FEE7
		cmp	eax, 11h
		nop
		lea	esi, [esi+0]
		jz	loc_7101FFC0
		cmp	eax, 12h
		jz	loc_7101FE8E
		cmp	eax, 13h
		jz	loc_7101FEA3
		cmp	eax, 14h
		nop
		lea	esi, [esi+0]
		jz	loc_7101FEB8
		cmp	eax, 15h
		jz	loc_7101FECD

loc_7101FD7F:				; CODE XREF: sub_7101E100+1BAAj
					; sub_7101E100+1BB3j ...
		mov	eax, [ebp+var_1CC]
		mov	[ebp+var_188], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7101FD97:				; CODE XREF: sub_7101E100+3C2j
		mov	ecx, [ebp+arg_4]
		mov	eax, [ecx]
		jmp	loc_7101EA62
; ---------------------------------------------------------------------------

loc_7101FDA1:				; CODE XREF: sub_7101E100+11C2j
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_128]
		mov	[ebp+var_128], offset aOntFace ; "ont-face"
		mov	[esp], eax
		mov	[ebp+var_188], 1
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	edx, offset sub_7100E610
		jnz	loc_7101F2CA
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_124]
		mov	[ebp+var_124], offset aOntFaceName ; "ont-face-name"
		mov	[esp], eax
		mov	[ebp+var_188], 1
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	edx, offset sub_71010D50
		jnz	loc_7101F2CA
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_120]
		mov	[ebp+var_120], offset aOntFaceSrc ; "ont-face-src"
		mov	[esp], eax
		mov	[ebp+var_188], 1
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	edx, offset loc_71006B50
		jnz	loc_7101F2CA
		lea	eax, [ebp+var_158]
		mov	[esp+4], eax
		lea	eax, [ebp+var_11C]
		mov	[ebp+var_11C], offset aOntFaceUri ; "ont-face-uri"
		mov	[esp], eax
		mov	[ebp+var_188], 1
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		mov	edx, offset loc_71006B60
		jnz	loc_7101F2CA
		jmp	loc_7101FC08
; ---------------------------------------------------------------------------

loc_7101FE8E:				; CODE XREF: sub_7101E100+1C59j
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		mov	[ebp+var_188], 0
		call	sub_71047180

loc_7101FEA3:				; CODE XREF: sub_7101E100+1C62j
		lea	eax, [ebp+var_2C]
		mov	[esp], eax
		mov	[ebp+var_188], 0
		call	sub_710477B0

loc_7101FEB8:				; CODE XREF: sub_7101E100+1C70j
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		mov	[ebp+var_188], 0
		call	sub_710477B0

loc_7101FECD:				; CODE XREF: sub_7101E100+1C79j
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_188], 0
		call	sub_710477B0
		jmp	loc_7101FD7F
; ---------------------------------------------------------------------------

loc_7101FEE7:				; CODE XREF: sub_7101E100+1C42j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_188], 0
		call	sub_710477B0
		jmp	loc_7101FD7F
; ---------------------------------------------------------------------------

loc_7101FF01:				; CODE XREF: sub_7101E100+1C30j
		lea	eax, [ebp+var_44]
		mov	[esp], eax
		mov	[ebp+var_188], 0
		call	sub_7103B6E0

loc_7101FF16:				; CODE XREF: sub_7101E100+1C39j
		lea	eax, [ebp+var_40]
		mov	[esp], eax
		mov	[ebp+var_188], 0
		call	sub_710477B0
		jmp	loc_7101FD7F
; ---------------------------------------------------------------------------

loc_7101FF30:				; CODE XREF: sub_7101E100+1C22j
		lea	eax, [ebp+var_48]
		mov	[esp], eax
		mov	[ebp+var_188], 0
		call	sub_710477B0
		jmp	loc_7101FD7F
; ---------------------------------------------------------------------------

loc_7101FF4A:				; CODE XREF: sub_7101E100+1C10j
		lea	eax, [ebp+var_50]
		mov	[esp], eax
		mov	[ebp+var_188], 0
		call	sub_7103B6E0

loc_7101FF5F:				; CODE XREF: sub_7101E100+1C19j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_188], 0
		call	sub_710477B0
		jmp	loc_7101FD7F
; ---------------------------------------------------------------------------

loc_7101FF79:				; CODE XREF: sub_7101E100+1BF9j
		lea	eax, [ebp+var_58]
		mov	[esp], eax
		mov	[ebp+var_188], 0
		call	sub_7103B6E0

loc_7101FF8E:				; CODE XREF: sub_7101E100+1C02j
		lea	eax, [ebp+var_54]
		mov	[esp], eax
		mov	[ebp+var_188], 0
		call	sub_710477B0
		jmp	loc_7101FD7F
; ---------------------------------------------------------------------------

loc_7101FFA8:				; CODE XREF: sub_7101E100+1BBCj
		lea	eax, [ebp+var_88]
		mov	[esp], eax
		mov	[ebp+var_188], 0
		call	sub_710477B0

loc_7101FFC0:				; CODE XREF: sub_7101E100+1BC5j
					; sub_7101E100+1BD0j ...
		lea	eax, [ebp+var_38]
		mov	[esp], eax
		mov	[ebp+var_188], 0
		call	sub_710477B0
		jmp	loc_7101FD7F
sub_7101E100	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7101FFE0	proc near		; CODE XREF: sub_71020550+132p

var_A2		= byte ptr -0A2h
var_A1		= byte ptr -0A1h
var_A0		= dword	ptr -0A0h
var_9C		= byte ptr -9Ch
var_98		= dword	ptr -98h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_64		= byte ptr -64h
var_58		= byte ptr -58h
var_4C		= byte ptr -4Ch
var_40		= byte ptr -40h
var_34		= byte ptr -34h
var_28		= byte ptr -28h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_7C], eax
		lea	eax, [ebp+var_9C]
		mov	[ebp+var_84], offset sub_710525B0
		mov	[ebp+var_80], offset dword_710534CC
		mov	[ebp+var_78], offset sub_7102043B
		mov	[ebp+var_74], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp+4], 0
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+30h]
		mov	[esp], eax
		mov	[ebp+var_98], 0FFFFFFFFh
		call	ds:_ZN16QXmlStreamReader22setNamespaceProcessingEb
		mov	dword ptr [esp], 10h ; size_t
		call	sub_710517F0
		mov	edx, ds:_ZTVN4QCss13StyleSelectorE
		add	edx, 8
		mov	[eax], edx
		mov	edx, ds:_ZN11QVectorData11shared_nullE
		mov	[eax+4], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D9C8
		mov	dword ptr [eax+0Ch], 0
		mov	[ebp+var_A1], 0
		mov	[ecx+28h], eax
		mov	eax, ds:_ZNK16QXmlStreamReader5atEndEv
		mov	byte ptr [ecx+24h], 0
		mov	[ebp+var_A0], eax

loc_71020097:				; CODE XREF: sub_7101FFE0+106j
					; sub_7101FFE0+1DCj ...
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+30h]
		mov	[esp], eax
		mov	[ebp+var_98], 0FFFFFFFFh
		call	[ebp+var_A0]
		test	al, al
		jnz	loc_710201F8
		cmp	[ebp+var_A1], 0
		jnz	loc_710201F8
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+30h]
		mov	[esp], eax
		call	ds:_ZN16QXmlStreamReader8readNextEv
		cmp	eax, 5
		jz	loc_71020223
		jg	loc_710202C0
		cmp	eax, 4
		jnz	short loc_71020097
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_10]
		mov	edx, [ecx+30h]
		mov	[esp], eax
		mov	[esp+4], edx
		mov	[ebp+var_98], 0FFFFFFFFh
		call	ds:_ZNK16QXmlStreamReader10attributesEv
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_28]
		mov	edx, [ecx+30h]
		sub	esp, 4
		mov	[esp], eax
		mov	[esp+4], edx
		mov	[ebp+var_98], 0Ah
		call	ds:_ZNK16QXmlStreamReader4nameEv
		sub	esp, 4
		lea	eax, [ebp+var_C]
		lea	edx, [ebp+var_28]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_98], 9
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_10]
		mov	[esp+8], eax
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		mov	[ebp+var_98], 8
		call	sub_7101E100
		mov	[ebp+var_A2], al
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71020420

loc_71020188:				; CODE XREF: sub_7101FFE0+456j
		mov	eax, [ebp+var_10]
		test	eax, eax
		jz	short loc_710201B5
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710201B5
		mov	eax, [ebp+var_10]
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_98], 0FFFFFFFFh
		call	sub_71047F70

loc_710201B5:				; CODE XREF: sub_7101FFE0+1ADj
					; sub_7101FFE0+1B7j
		cmp	[ebp+var_A2], 0
		jnz	loc_71020097
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_710201DF
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_98], 0FFFFFFFFh
		call	eax

loc_710201DF:				; CODE XREF: sub_7101FFE0+1E9j
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_9C]
		mov	dword ptr [ecx], 0
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_710201F8:				; CODE XREF: sub_7101FFE0+D2j
					; sub_7101FFE0+DFj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[esp], edx
		mov	[esp+4], eax
		mov	[ebp+var_98], 0FFFFFFFFh
		call	sub_7100CAD0
		lea	eax, [ebp+var_9C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71020223:				; CODE XREF: sub_7101FFE0+F7j
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_34]
		mov	eax, [edx+30h]
		mov	[esp], ecx
		mov	[esp+4], eax
		mov	[ebp+var_98], 0FFFFFFFFh
		call	ds:_ZNK16QXmlStreamReader4nameEv
		lea	eax, [ebp+var_34]
		sub	esp, 4
		mov	[esp+4], eax
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		mov	[ebp+var_98], 7
		call	sub_7100AAB0
		mov	eax, [ebp+arg_0]
		cmp	byte ptr [eax+4Ch], 0
		jnz	loc_71020097
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_40]
		mov	[ebp+var_14], offset aSvg ; "svg"
		mov	edx, [ecx+30h]
		mov	[esp], eax
		mov	[esp+4], edx
		mov	[ebp+var_98], 6
		call	ds:_ZNK16QXmlStreamReader4nameEv
		sub	esp, 4
		lea	eax, [ebp+var_40]
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		call	ds:_ZeqRK13QLatin1StringRK10QStringRef
		test	al, al
		jz	loc_71020097
		mov	[ebp+var_A1], 1
		jmp	loc_71020097
; ---------------------------------------------------------------------------

loc_710202C0:				; CODE XREF: sub_7101FFE0+FDj
		cmp	eax, 6
		jz	loc_710203B8
		cmp	eax, 0Ah
		jnz	loc_71020097
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_64]
		mov	eax, [edx+30h]
		mov	[esp], ecx
		mov	[esp+4], eax
		mov	[ebp+var_98], 0FFFFFFFFh
		call	ds:_ZNK16QXmlStreamReader25processingInstructionDataEv
		lea	eax, [ebp+var_64]
		lea	edx, [ebp+var_1C]
		sub	esp, 4
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_98], 4
		call	ds:_ZNK10QStringRef8toStringEv
		mov	ecx, [ebp+arg_0]
		sub	esp, 4
		lea	eax, [ebp+var_58]
		mov	edx, [ecx+30h]
		mov	[esp], eax
		mov	[esp+4], edx
		mov	[ebp+var_98], 3
		call	ds:_ZNK16QXmlStreamReader27processingInstructionTargetEv
		sub	esp, 4
		lea	eax, [ebp+var_18]
		lea	edx, [ebp+var_58]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_98], 2
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	eax, [ebp+var_1C]
		mov	[esp+8], eax
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		mov	[ebp+var_98], 1
		call	sub_7101D010
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71020400

loc_7102038C:				; CODE XREF: sub_7101FFE0+436j
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_71020097
		mov	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_98], 4
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71020097
; ---------------------------------------------------------------------------

loc_710203B8:				; CODE XREF: sub_7101FFE0+2E3j
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_4C]
		mov	eax, [edx+30h]
		mov	[esp], ecx
		mov	[esp+4], eax
		mov	[ebp+var_98], 0FFFFFFFFh
		call	ds:_ZNK16QXmlStreamReader4textEv
		lea	eax, [ebp+var_4C]
		sub	esp, 4
		mov	[esp+4], eax
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		mov	[ebp+var_98], 5
		call	sub_7101D820
		jmp	loc_71020097
; ---------------------------------------------------------------------------
		align 10h

loc_71020400:				; CODE XREF: sub_7101FFE0+3A6j
		mov	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_98], 2
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7102038C
; ---------------------------------------------------------------------------
		align 10h

loc_71020420:				; CODE XREF: sub_7101FFE0+1A2j
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_98], 9
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71020188
sub_7101FFE0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102043B	proc near		; DATA XREF: sub_7101FFE0+26o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-98h]
		mov	ecx, [ebp-94h]
		cmp	eax, 1
		mov	[ebp-0ACh], ecx
		jz	short loc_710204A1
		cmp	eax, 2
		jz	short loc_710204A1
		cmp	eax, 3
		jz	short loc_710204B6
		cmp	eax, 4
		jz	loc_71020534
		cmp	eax, 5
		nop
		lea	esi, [esi+0]
		jz	short loc_710204B6
		cmp	eax, 6
		jz	loc_71020534
		cmp	eax, 7
		xchg	ax, ax
		jz	short loc_710204CE
		cmp	eax, 8
		jz	short loc_710204E3
		cmp	eax, 9
		jz	short loc_710204E3
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0

loc_710204A1:				; CODE XREF: sub_7102043B+18j
					; sub_7102043B+1Dj
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0

loc_710204B6:				; CODE XREF: sub_7102043B+22j
					; sub_7102043B+35j
		mov	eax, [ebp-0ACh]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_710204CE:				; CODE XREF: sub_7102043B+45j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0

loc_710204E3:				; CODE XREF: sub_7102043B+4Aj
					; sub_7102043B+4Fj
		mov	eax, [ebp-10h]
		mov	edx, [ebp-0ACh]
		test	eax, eax
		mov	[ebp-0A8h], edx
		jz	short loc_7102051C
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7102051C
		mov	eax, [ebp-10h]
		mov	[esp+arg_0], eax
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_71047F70

loc_7102051C:				; CODE XREF: sub_7102043B+B9j
					; sub_7102043B+C3j
		mov	ecx, [ebp-0A8h]
		mov	[esp+0], ecx
		mov	dword ptr [ebp-98h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71020534:				; CODE XREF: sub_7102043B+27j
					; sub_7102043B+3Aj
		mov	ecx, [ebp-0ACh]
		mov	[esp+0], ecx
		mov	dword ptr [ebp-98h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_7102043B	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71020550	proc near		; CODE XREF: sub_710206E0+C9p
					; .text:71020969p ...

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= byte ptr -10h
var_C		= byte ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_710534E4
		mov	[ebp+var_28], offset sub_71020694
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+14h]
		mov	dword ptr [edx], 0
		test	eax, eax
		jz	short loc_710205AD
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_710205AD
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	eax

loc_710205AD:				; CODE XREF: sub_71020550+3Dj
					; sub_71020550+4Aj
		mov	eax, [ebp+arg_0]
		lea	edx, [ebp+var_C]
		mov	dword ptr [eax+14h], 0
		mov	dword ptr [eax+2Ch], 0
		mov	dword ptr [eax+18h], 1
		mov	dword ptr [esp+8], 1
		mov	dword ptr [esp+4], 2
		mov	[esp], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN6QBrushC1EN2Qt11GlobalColorENS0_10BrushStyleE
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	dword ptr [esp+18h], 100h
		mov	dword ptr [esp+14h], 0
		mov	dword ptr [esp+10h], 1
		mov	[esp], eax
		fld1
		fstp	qword ptr [esp+8]
		mov	[ebp+var_48], 2
		call	ds:_ZN4QPenC1ERK6QBrushdN2Qt8PenStyleENS3_11PenCapStyleENS3_12PenJoinStyleE
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	[ebp+var_48], 1
		add	edx, 48h
		mov	[ebp+var_50], edx
		mov	[esp], edx
		call	ds:_ZN4QPenaSERKS_
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN4QPenD1Ev
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN6QBrushD1Ev
		mov	eax, [ebp+var_50]
		mov	[esp], eax
		fld	ds:flt_71059DD8
		fstp	qword ptr [esp+4]
		call	ds:_ZN4QPen13setMiterLimitEd
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		call	sub_7101FFE0
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71020550	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71020694	proc near		; DATA XREF: sub_71020550+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-54h], eax
		jz	short loc_710206B6
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN4QPenD1Ev

loc_710206B6:				; CODE XREF: sub_71020694+Dj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN6QBrushD1Ev
		mov	edx, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_71020694	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710206E0	proc near		; CODE XREF: _ZN16QSvgTinyDocument4loadEP16QXmlStreamReader+4Cp

var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_710534EC
		mov	[ebp+var_18], offset sub_710207BB
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	[edx+4], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+arg_0]
		mov	edx, ds:_ZN9QListData11shared_nullE
		mov	[ecx+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+arg_0]
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+arg_0]
		mov	[ecx+10h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	dword ptr [ecx+14h], 0
		mov	[ecx+1Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ecx+20h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_4]
		mov	[ecx+30h], eax
		add	ecx, 34h
		mov	[ebp+var_44], ecx
		mov	[esp], ecx
		mov	[ebp+var_38], 3
		call	ds:_ZN4QCss6ParserC1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 2
		add	eax, 48h
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	ds:_ZN4QPenC1Ev
		mov	edx, [ebp+arg_0]
		mov	byte ptr [edx+4Ch], 0
		mov	[esp], edx
		mov	[ebp+var_38], 1
		call	sub_71020550
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_710206E0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710207BB	proc near		; DATA XREF: sub_710206E0+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	ecx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-48h], ecx
		jz	short loc_710207E4
		cmp	eax, 2
		jz	short loc_710207F6
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	ds:_ZN4QPenD1Ev

loc_710207E4:				; CODE XREF: sub_710207BB+Fj
		mov	edx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], edx
		call	sub_71044340

loc_710207F6:				; CODE XREF: sub_710207BB+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 20h
		mov	[esp+0], eax
		call	sub_71047780
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 1Ch
		mov	[esp+0], eax
		call	sub_710474E0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 14h
		mov	[esp+0], eax
		call	sub_7103C4F0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 10h
		mov	[esp+0], eax
		call	sub_710476C0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_710475A0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp+0], eax
		call	sub_71047020
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 4
		mov	[esp+0], eax
		call	sub_71047750
		mov	ecx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
sub_710207BB	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_710525B0
		mov	dword ptr [ebp-20h], offset word_710534F6
		mov	dword ptr [ebp-18h], offset loc_7102097B
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+8]
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	[edx+4], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+8]
		mov	edx, ds:_ZN9QListData11shared_nullE
		mov	[ecx+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+8]
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+8]
		mov	[ecx+10h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	dword ptr [ecx+14h], 0
		mov	[ecx+1Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ecx+20h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+0Ch]
		mov	[ecx+30h], eax
		add	ecx, 34h
		mov	[ebp-44h], ecx
		mov	[esp], ecx
		mov	dword ptr [ebp-38h], 3
		call	ds:_ZN4QCss6ParserC1Ev
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 2
		add	eax, 48h
		mov	[ebp-40h], eax
		mov	[esp], eax
		call	ds:_ZN4QPenC1Ev
		mov	edx, [ebp+8]
		mov	byte ptr [edx+4Ch], 0
		mov	[esp], edx
		mov	dword ptr [ebp-38h], 1
		call	sub_71020550
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_7102097B:				; DATA XREF: .text:710208C0o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	ecx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-48h], ecx
		jz	short loc_710209A4
		cmp	eax, 2
		jz	short loc_710209B6
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], eax
		call	ds:_ZN4QPenD1Ev

loc_710209A4:				; CODE XREF: .text:7102098Aj
		mov	edx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], edx
		call	sub_71044340

loc_710209B6:				; CODE XREF: .text:7102098Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 20h
		mov	[esp], eax
		call	sub_71047780
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 1Ch
		mov	[esp], eax
		call	sub_710474E0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 14h
		mov	[esp], eax
		call	sub_7103C4F0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 10h
		mov	[esp], eax
		call	sub_710476C0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp], eax
		call	sub_710475A0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp], eax
		call	sub_71047020
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 4
		mov	[esp], eax
		call	sub_71047750
		mov	ecx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71020A60	proc near		; CODE XREF: _ZN16QSvgTinyDocument4loadERK10QByteArray+FDp

var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053500
		mov	[ebp+var_18], offset sub_71020B6E
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	[edx+4], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+arg_0]
		mov	edx, ds:_ZN9QListData11shared_nullE
		mov	[ecx+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+arg_0]
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+arg_0]
		mov	[ecx+10h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	dword ptr [ecx+14h], 0
		mov	[ecx+1Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ecx+20h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	dword ptr [esp], 4 ; size_t
		mov	[ebp+var_38], 4
		call	sub_710517F0
		mov	[ebp+var_40], eax
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_38], 3
		mov	[esp+4], eax
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	ds:_ZN16QXmlStreamReaderC1ERK10QByteArray
		mov	ecx, [ebp+arg_0]
		mov	eax, [ebp+var_40]
		mov	[ecx+30h], eax
		add	ecx, 34h
		mov	[ebp+var_48], ecx
		mov	[esp], ecx
		mov	[ebp+var_38], 4
		call	ds:_ZN4QCss6ParserC1Ev
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 2
		add	edx, 48h
		mov	[ebp+var_44], edx
		mov	[esp], edx
		call	ds:_ZN4QPenC1Ev
		mov	ecx, [ebp+arg_0]
		mov	byte ptr [ecx+4Ch], 1
		mov	[esp], ecx
		mov	[ebp+var_38], 1
		call	sub_71020550
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71020A60	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71020B6E	proc near		; DATA XREF: sub_71020A60+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-4Ch], edx
		jz	short loc_71020BA0
		cmp	eax, 2
		jz	loc_71020C57
		cmp	eax, 3
		jz	short loc_71020BB2
		mov	ecx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], ecx
		call	ds:_ZN4QPenD1Ev

loc_71020BA0:				; CODE XREF: sub_71020B6E+Fj
		mov	eax, [ebp-48h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_71044340

loc_71020BB2:				; CODE XREF: sub_71020B6E+1Dj
					; sub_71020B6E+F4j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 20h
		mov	[esp+0], eax
		call	sub_71047780
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 1Ch
		mov	[esp+0], eax
		call	sub_710474E0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 14h
		mov	[esp+0], eax
		call	sub_7103C4F0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 10h
		mov	[esp+0], eax
		call	sub_710476C0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_710475A0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp+0], eax
		call	sub_71047020
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 4
		mov	[esp+0], eax
		call	sub_71047750
		mov	edx, [ebp-4Ch]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71020C57:				; CODE XREF: sub_71020B6E+14j
		mov	edx, [ebp-40h]
		mov	[esp+0], edx
		call	sub_710517D0
		jmp	loc_71020BB2
sub_71020B6E	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_710525B0
		mov	dword ptr [ebp-20h], offset dword_7105350C
		mov	dword ptr [ebp-18h], offset loc_71020D7E
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+8]
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	[edx+4], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+8]
		mov	edx, ds:_ZN9QListData11shared_nullE
		mov	[ecx+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+8]
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+8]
		mov	[ecx+10h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	dword ptr [ecx+14h], 0
		mov	[ecx+1Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ecx+20h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	dword ptr [esp], 4
		mov	dword ptr [ebp-38h], 4
		call	sub_710517F0
		mov	[ebp-40h], eax
		mov	eax, [ebp+0Ch]
		mov	dword ptr [ebp-38h], 3
		mov	[esp+4], eax
		mov	eax, [ebp-40h]
		mov	[esp], eax
		call	ds:_ZN16QXmlStreamReaderC1ERK10QByteArray
		mov	ecx, [ebp+8]
		mov	eax, [ebp-40h]
		mov	[ecx+30h], eax
		add	ecx, 34h
		mov	[ebp-48h], ecx
		mov	[esp], ecx
		mov	dword ptr [ebp-38h], 4
		call	ds:_ZN4QCss6ParserC1Ev
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 2
		add	edx, 48h
		mov	[ebp-44h], edx
		mov	[esp], edx
		call	ds:_ZN4QPenC1Ev
		mov	ecx, [ebp+8]
		mov	byte ptr [ecx+4Ch], 1
		mov	[esp], ecx
		mov	dword ptr [ebp-38h], 1
		call	sub_71020550
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71020D7E:				; DATA XREF: .text:71020C90o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-4Ch], edx
		jz	short loc_71020DB0
		cmp	eax, 2
		jz	loc_71020E67
		cmp	eax, 3
		jz	short loc_71020DC2
		mov	ecx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], ecx
		call	ds:_ZN4QPenD1Ev

loc_71020DB0:				; CODE XREF: .text:71020D8Dj
		mov	eax, [ebp-48h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], eax
		call	sub_71044340

loc_71020DC2:				; CODE XREF: .text:71020D9Bj
					; .text:71020E72j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 20h
		mov	[esp], eax
		call	sub_71047780
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 1Ch
		mov	[esp], eax
		call	sub_710474E0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 14h
		mov	[esp], eax
		call	sub_7103C4F0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 10h
		mov	[esp], eax
		call	sub_710476C0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp], eax
		call	sub_710475A0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp], eax
		call	sub_71047020
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 4
		mov	[esp], eax
		call	sub_71047750
		mov	edx, [ebp-4Ch]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71020E67:				; CODE XREF: .text:71020D92j
		mov	edx, [ebp-40h]
		mov	[esp], edx
		call	sub_710517D0
		jmp	loc_71020DC2
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71020E80	proc near		; CODE XREF: _ZN16QSvgTinyDocument4loadERK7QString+2F9p

var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053518
		mov	[ebp+var_18], offset sub_71020F8E
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	[edx+4], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+arg_0]
		mov	edx, ds:_ZN9QListData11shared_nullE
		mov	[ecx+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+arg_0]
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+arg_0]
		mov	[ecx+10h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	dword ptr [ecx+14h], 0
		mov	[ecx+1Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ecx+20h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	dword ptr [esp], 4 ; size_t
		mov	[ebp+var_38], 4
		call	sub_710517F0
		mov	[ebp+var_40], eax
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_38], 3
		mov	[esp+4], eax
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	ds:_ZN16QXmlStreamReaderC1EP9QIODevice
		mov	ecx, [ebp+arg_0]
		mov	eax, [ebp+var_40]
		mov	[ecx+30h], eax
		add	ecx, 34h
		mov	[ebp+var_48], ecx
		mov	[esp], ecx
		mov	[ebp+var_38], 4
		call	ds:_ZN4QCss6ParserC1Ev
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 2
		add	edx, 48h
		mov	[ebp+var_44], edx
		mov	[esp], edx
		call	ds:_ZN4QPenC1Ev
		mov	ecx, [ebp+arg_0]
		mov	byte ptr [ecx+4Ch], 1
		mov	[esp], ecx
		mov	[ebp+var_38], 1
		call	sub_71020550
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71020E80	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71020F8E	proc near		; DATA XREF: sub_71020E80+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-4Ch], edx
		jz	short loc_71020FC0
		cmp	eax, 2
		jz	loc_71021077
		cmp	eax, 3
		jz	short loc_71020FD2
		mov	ecx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], ecx
		call	ds:_ZN4QPenD1Ev

loc_71020FC0:				; CODE XREF: sub_71020F8E+Fj
		mov	eax, [ebp-48h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_71044340

loc_71020FD2:				; CODE XREF: sub_71020F8E+1Dj
					; sub_71020F8E+F4j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 20h
		mov	[esp+0], eax
		call	sub_71047780
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 1Ch
		mov	[esp+0], eax
		call	sub_710474E0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 14h
		mov	[esp+0], eax
		call	sub_7103C4F0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 10h
		mov	[esp+0], eax
		call	sub_710476C0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_710475A0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp+0], eax
		call	sub_71047020
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 4
		mov	[esp+0], eax
		call	sub_71047750
		mov	edx, [ebp-4Ch]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71021077:				; CODE XREF: sub_71020F8E+14j
		mov	edx, [ebp-40h]
		mov	[esp+0], edx
		call	sub_710517D0
		jmp	loc_71020FD2
sub_71020F8E	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_710525B0
		mov	dword ptr [ebp-20h], offset dword_71053524
		mov	dword ptr [ebp-18h], offset loc_7102119E
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+8]
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	[edx+4], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+8]
		mov	edx, ds:_ZN9QListData11shared_nullE
		mov	[ecx+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+8]
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+8]
		mov	[ecx+10h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	dword ptr [ecx+14h], 0
		mov	[ecx+1Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ecx+20h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	dword ptr [esp], 4
		mov	dword ptr [ebp-38h], 4
		call	sub_710517F0
		mov	[ebp-40h], eax
		mov	eax, [ebp+0Ch]
		mov	dword ptr [ebp-38h], 3
		mov	[esp+4], eax
		mov	eax, [ebp-40h]
		mov	[esp], eax
		call	ds:_ZN16QXmlStreamReaderC1EP9QIODevice
		mov	ecx, [ebp+8]
		mov	eax, [ebp-40h]
		mov	[ecx+30h], eax
		add	ecx, 34h
		mov	[ebp-48h], ecx
		mov	[esp], ecx
		mov	dword ptr [ebp-38h], 4
		call	ds:_ZN4QCss6ParserC1Ev
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 2
		add	edx, 48h
		mov	[ebp-44h], edx
		mov	[esp], edx
		call	ds:_ZN4QPenC1Ev
		mov	ecx, [ebp+8]
		mov	byte ptr [ecx+4Ch], 1
		mov	[esp], ecx
		mov	dword ptr [ebp-38h], 1
		call	sub_71020550
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_7102119E:				; DATA XREF: .text:710210B0o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-4Ch], edx
		jz	short loc_710211D0
		cmp	eax, 2
		jz	loc_71021287
		cmp	eax, 3
		jz	short loc_710211E2
		mov	ecx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], ecx
		call	ds:_ZN4QPenD1Ev

loc_710211D0:				; CODE XREF: .text:710211ADj
		mov	eax, [ebp-48h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], eax
		call	sub_71044340

loc_710211E2:				; CODE XREF: .text:710211BBj
					; .text:71021292j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 20h
		mov	[esp], eax
		call	sub_71047780
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 1Ch
		mov	[esp], eax
		call	sub_710474E0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 14h
		mov	[esp], eax
		call	sub_7103C4F0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 10h
		mov	[esp], eax
		call	sub_710476C0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp], eax
		call	sub_710475A0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp], eax
		call	sub_71047020
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 4
		mov	[esp], eax
		call	sub_71047750
		mov	edx, [ebp-4Ch]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71021287:				; CODE XREF: .text:710211B2j
		mov	edx, [ebp-40h]
		mov	[esp], edx
		call	sub_710517D0
		jmp	loc_710211E2
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710212A0	proc near		; DATA XREF: sub_7101E100+F9Fo

var_180		= dword	ptr -180h
var_17C		= dword	ptr -17Ch
var_178		= qword	ptr -178h
var_170		= qword	ptr -170h
var_168		= qword	ptr -168h
var_160		= qword	ptr -160h
var_154		= dword	ptr -154h
var_150		= dword	ptr -150h
var_14C		= dword	ptr -14Ch
var_148		= dword	ptr -148h
var_144		= dword	ptr -144h
var_140		= word ptr -140h
var_13E		= word ptr -13Eh
var_13C		= byte ptr -13Ch
var_138		= dword	ptr -138h
var_124		= dword	ptr -124h
var_120		= dword	ptr -120h
var_11C		= dword	ptr -11Ch
var_118		= dword	ptr -118h
var_114		= dword	ptr -114h
var_FC		= dword	ptr -0FCh
var_F8		= dword	ptr -0F8h
var_F4		= dword	ptr -0F4h
var_F0		= dword	ptr -0F0h
var_EC		= byte ptr -0ECh
var_E0		= byte ptr -0E0h
var_D4		= byte ptr -0D4h
var_C8		= byte ptr -0C8h
var_BC		= byte ptr -0BCh
var_B0		= byte ptr -0B0h
var_A4		= byte ptr -0A4h
var_98		= byte ptr -98h
var_8C		= byte ptr -8Ch
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 18Ch
		mov	[ebp+var_11C], eax
		lea	eax, [ebp+var_13C]
		mov	[esp], eax
		mov	[ebp+var_114], esp
		mov	[ebp+var_124], offset sub_710525B0
		mov	[ebp+var_120], offset dword_71053530
		mov	[ebp+var_118], offset sub_71022017
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_20]
		mov	[esp+8], eax
		lea	eax, [ebp+var_8C]
		mov	[esp], eax
		mov	[ebp+var_20], offset asc_710591DE ; "x"
		mov	[esp+4], edx
		mov	[ebp+var_138], 0FFFFFFFFh
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		lea	eax, [ebp+var_1C]
		lea	edx, [ebp+var_8C]
		mov	[ebp+var_138], 1Fh
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_28]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_98]
		mov	[ebp+var_28], offset aY	; "y"
		mov	[esp], eax
		mov	[ebp+var_138], 1Eh
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_24]
		lea	edx, [ebp+var_98]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_138], 1Dh
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_30]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_A4]
		mov	[ebp+var_30], offset aWidth ; "width"
		mov	[esp], eax
		mov	[ebp+var_138], 1Ch
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_2C]
		lea	edx, [ebp+var_A4]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_138], 1Bh
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_38]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_B0]
		mov	[ebp+var_38], offset aHeight ; "height"
		mov	[esp], eax
		mov	[ebp+var_138], 1Ah
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_34]
		lea	edx, [ebp+var_B0]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_138], 19h
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		lea	edx, [ebp+var_40]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_BC]
		mov	[ebp+var_40], offset aXlinkHref	; "xlink:href"
		mov	[esp], eax
		mov	[ebp+var_138], 18h
		mov	[esp+4], edx
		call	ds:_ZNK20QXmlStreamAttributes5valueERK13QLatin1String
		sub	esp, 4
		lea	eax, [ebp+var_3C]
		lea	edx, [ebp+var_BC]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_138], 17h
		call	ds:_ZNK10QStringRef8toStringEv
		sub	esp, 4
		xor	edx, edx
		lea	eax, [ebp+var_1C]
		mov	[ebp+var_138], 16h
		call	sub_71007460
		fstp	[ebp+var_178]
		xor	edx, edx
		lea	eax, [ebp+var_24]
		call	sub_71007460
		mov	ecx, [ebp+arg_8]
		fstp	[ebp+var_170]
		lea	edx, [ebp+var_44]
		lea	eax, [ebp+var_2C]
		mov	dword ptr [esp], 0
		call	sub_7100BF60
		mov	edx, [ebp+var_44]
		mov	eax, 1
		fstp	qword ptr [esp]	; double
		call	sub_71006AA0
		mov	ecx, [ebp+arg_8]
		lea	edx, [ebp+var_44]
		lea	eax, [ebp+var_34]
		mov	dword ptr [esp], 0
		fstp	[ebp+var_168]
		call	sub_7100BF60
		mov	edx, [ebp+var_44]
		xor	eax, eax
		fstp	qword ptr [esp]	; double
		call	sub_71006AA0
		lea	eax, [ebp+var_48]
		lea	edx, [ebp+var_3C]
		mov	[esp+4], edx
		mov	[esp], eax
		fstp	[ebp+var_160]
		call	ds:_ZNK7QString7trimmedEv
		sub	esp, 4
		lea	eax, [ebp+var_48]
		mov	[esp+4], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_138], 15h
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_48]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71021B70

loc_7102154C:				; CODE XREF: sub_710212A0+8E6j
		lea	eax, [ebp+var_C8]
		mov	[esp], eax
		mov	[ebp+var_138], 16h
		call	ds:_ZN6QImageC1Ev
		lea	eax, [ebp+var_4C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_4C], offset aData ; "data"
		mov	dword ptr [esp+8], 1
		mov	[esp], eax
		mov	[ebp+var_138], 14h
		call	ds:_ZNK7QString10startsWithERK13QLatin1StringN2Qt15CaseSensitivityE
		test	al, al
		jz	loc_710216F0
		lea	eax, [ebp+var_50]
		mov	[esp+4], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_50], offset aBase64 ; "base64,"
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZNK7QString11lastIndexOfERK13QLatin1StringiN2Qt15CaseSensitivityE
		cmp	eax, 0FFFFFFFFh
		jz	loc_71021C06
		add	eax, 7
		lea	edx, [ebp+var_54]
		mov	[esp+8], eax
		lea	eax, [ebp+var_3C]
		mov	dword ptr [esp+0Ch], 0FFFFFFFFh
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZNK7QString3midEii
		sub	esp, 4
		lea	eax, [ebp+var_5C]
		lea	edx, [ebp+var_54]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_138], 13h
		call	ds:_ZNK7QString7toAsciiEv
		sub	esp, 4
		lea	eax, [ebp+var_58]
		lea	edx, [ebp+var_5C]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_138], 12h
		call	ds:_ZN10QByteArray10fromBase64ERKS_
		sub	esp, 4
		mov	eax, [ebp+var_5C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71021DF6

loc_71021642:				; CODE XREF: sub_710212A0+B6Cj
		mov	eax, [ebp+var_58]
		lea	edx, [ebp+var_D4]
		mov	dword ptr [esp+0Ch], 0
		mov	ecx, [eax+8]
		mov	[esp+8], ecx
		mov	eax, [eax+0Ch]
		mov	[esp], edx
		mov	[ebp+var_138], 11h
		mov	[esp+4], eax
		call	ds:_ZN6QImage8fromDataEPKhiPKc
		sub	esp, 4
		lea	eax, [ebp+var_D4]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C8]
		mov	[esp], eax
		mov	[ebp+var_138], 10h
		call	ds:_ZN6QImageaSERKS_
		lea	eax, [ebp+var_D4]
		mov	[esp], eax
		mov	[ebp+var_138], 11h
		call	ds:_ZN6QImageD1Ev
		mov	eax, [ebp+var_58]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71021E11

loc_710216C4:				; CODE XREF: sub_710212A0+B87j
		mov	eax, [ebp+var_54]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_71021754
		mov	eax, [ebp+var_54]
		mov	[ebp+var_138], 14h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_71021754
; ---------------------------------------------------------------------------
		align 10h

loc_710216F0:				; CODE XREF: sub_710212A0+2F3j
		lea	eax, [ebp+var_3C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_E0]
		mov	dword ptr [esp+8], 0
		mov	[esp], eax
		mov	[ebp+var_138], 14h
		call	ds:_ZN6QImageC1ERK7QStringPKc
		lea	eax, [ebp+var_E0]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C8]
		mov	[esp], eax
		mov	[ebp+var_138], 0Eh
		call	ds:_ZN6QImageaSERKS_
		lea	eax, [ebp+var_E0]
		mov	[esp], eax
		mov	[ebp+var_138], 14h
		call	ds:_ZN6QImageD1Ev

loc_71021754:				; CODE XREF: sub_710212A0+42Fj
					; sub_710212A0+44Bj ...
		lea	eax, [ebp+var_C8]
		mov	[esp], eax
		mov	[ebp+var_138], 14h
		call	ds:_ZNK6QImage6isNullEv
		test	al, al
		jz	loc_71021920
		mov	dword ptr [esp], 18h ; size_t
		call	sub_710517F0
		mov	[ebp+var_148], eax
		lea	eax, [ebp+var_78]
		mov	edx, [ebp+var_148]
		mov	[esp+8], eax
		mov	eax, [ebp+var_148]
		mov	[ebp+var_78], 2
		mov	[ebp+var_138], 5
		mov	[esp], edx
		add	eax, 8
		mov	[esp+4], eax
		call	ds:_ZN11QTextStreamC1EP7QString6QFlagsIN9QIODevice12OpenModeFlagEE
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	edx, [ebp+var_148]
		mov	[edx+8], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_148]
		mov	dword ptr [eax+0Ch], 1
		mov	dword ptr [eax+10h], 0
		mov	byte ptr [eax+14h], 1
		mov	byte ptr [eax+15h], 1
		mov	[ebp+var_64], eax
		lea	eax, [ebp+var_7C]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aCouldnTCreateI ; "couldn't create image from "
		mov	[esp], eax
		mov	[ebp+var_138], 0Dh
		call	ds:_ZN7QString9fromAsciiEPKci
		sub	esp, 4
		lea	eax, [ebp+var_7C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_64]
		mov	[ebp+var_138], 4
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_7C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71021BC0
		mov	eax, [ebp+var_64]
		cmp	byte ptr [eax+14h], 0
		jnz	loc_71021BE3

loc_71021852:				; CODE XREF: sub_710212A0+93Dj
					; sub_710212A0+961j
		mov	dword ptr [esp+4], 22h
		mov	[esp], eax
		mov	[ebp+var_138], 0Dh
		call	ds:_ZN11QTextStreamlsEc
		lea	edx, [ebp+var_3C]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	dword ptr [esp+4], 22h
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEc
		mov	eax, [ebp+var_64]
		cmp	byte ptr [eax+14h], 0
		jnz	loc_71021B90
		mov	edx, [eax+0Ch]
		sub	edx, 1
		test	edx, edx
		mov	[eax+0Ch], edx
		jnz	loc_71021AE3

loc_710218AC:				; CODE XREF: sub_710212A0+90Fj
		mov	eax, [ebp+var_64]
		cmp	byte ptr [eax+15h], 0
		mov	[ebp+var_150], eax
		jnz	loc_71021E30

loc_710218BF:				; CODE XREF: sub_710212A0+C1Aj
					; sub_710212A0+CA0j
		mov	ecx, [ebp+var_150]
		test	ecx, ecx
		jz	loc_71021AE3
		mov	edx, [ebp+var_150]
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71021DD5

loc_710218E4:				; CODE XREF: sub_710212A0+B51j
		mov	edx, [ebp+var_150]
		mov	[ebp+var_138], 14h
		mov	[esp], edx
		call	ds:_ZN11QTextStreamD1Ev
		mov	eax, [ebp+var_150]
		mov	[esp], eax
		call	sub_710517D0
		mov	[ebp+var_14C], 0
		jmp	loc_71021A4B
; ---------------------------------------------------------------------------
		align 10h

loc_71021920:				; CODE XREF: sub_710212A0+4CFj
		lea	eax, [ebp+var_C8]
		mov	[esp], eax
		mov	[ebp+var_138], 14h
		call	ds:_ZNK6QImage6formatEv
		cmp	eax, 5
		jz	loc_71021D62

loc_71021942:				; CODE XREF: sub_710212A0+B30j
		fnstcw	[ebp+var_13E]
		fld	[ebp+var_170]
		mov	dword ptr [esp], 0A0h ;	size_t
		mov	[ebp+var_138], 14h
		movzx	eax, [ebp+var_13E]
		mov	ah, 0Ch
		mov	[ebp+var_140], ax
		fldcw	[ebp+var_140]
		fistp	[ebp+var_144]
		fldcw	[ebp+var_13E]
		mov	eax, [ebp+var_144]
		fld	[ebp+var_178]
		fldcw	[ebp+var_140]
		fistp	[ebp+var_144]
		fldcw	[ebp+var_13E]
		mov	[ebp+var_F8], eax
		mov	edx, [ebp+var_144]
		fld	[ebp+var_168]
		fldcw	[ebp+var_140]
		fistp	[ebp+var_144]
		fldcw	[ebp+var_13E]
		mov	[ebp+var_FC], edx
		mov	ecx, [ebp+var_144]
		fld	[ebp+var_160]
		fldcw	[ebp+var_140]
		fistp	[ebp+var_144]
		fldcw	[ebp+var_13E]
		lea	edx, [edx+ecx-1]
		mov	[ebp+var_F4], edx
		mov	edx, [ebp+var_144]
		lea	eax, [eax+edx-1]
		mov	[ebp+var_F0], eax
		call	sub_710517F0
		mov	[ebp+var_154], eax
		lea	eax, [ebp+var_FC]
		mov	edx, [ebp+var_154]
		mov	[esp+0Ch], eax
		lea	eax, [ebp+var_C8]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_138], 0Bh
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_710032E0
		mov	edx, [ebp+var_154]
		mov	[ebp+var_14C], edx

loc_71021A4B:				; CODE XREF: sub_710212A0+675j
					; sub_710212A0+84Dj
		lea	eax, [ebp+var_C8]
		mov	[esp], eax
		mov	[ebp+var_138], 16h
		call	ds:_ZN6QImageD1Ev
		mov	eax, [ebp+var_3C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71021B10

loc_71021A75:				; CODE XREF: sub_710212A0+886j
		mov	eax, [ebp+var_34]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71021AF2

loc_71021A82:				; CODE XREF: sub_710212A0+868j
		mov	eax, [ebp+var_2C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71021B50

loc_71021A93:				; CODE XREF: sub_710212A0+8C6j
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71021B30

loc_71021AA4:				; CODE XREF: sub_710212A0+8A6j
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71021AC7
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_138], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_71021AC7:				; CODE XREF: sub_710212A0+80Fj
		lea	eax, [ebp+var_13C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_14C]
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_71021AE3:				; CODE XREF: sub_710212A0+606j
					; sub_710212A0+627j ...
		mov	[ebp+var_14C], 0
		jmp	loc_71021A4B
; ---------------------------------------------------------------------------

loc_71021AF2:				; CODE XREF: sub_710212A0+7E0j
		mov	eax, [ebp+var_34]
		mov	[ebp+var_138], 1Ah
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71021A82
; ---------------------------------------------------------------------------
		align 10h

loc_71021B10:				; CODE XREF: sub_710212A0+7CFj
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_138], 18h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71021A75
; ---------------------------------------------------------------------------
		align 10h

loc_71021B30:				; CODE XREF: sub_710212A0+7FEj
		mov	eax, [ebp+var_24]
		mov	[ebp+var_138], 1Eh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71021AA4
; ---------------------------------------------------------------------------
		align 10h

loc_71021B50:				; CODE XREF: sub_710212A0+7EDj
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_138], 1Ch
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71021A93
; ---------------------------------------------------------------------------
		align 10h

loc_71021B70:				; CODE XREF: sub_710212A0+2A6j
		mov	eax, [ebp+var_48]
		mov	[ebp+var_138], 16h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7102154C
; ---------------------------------------------------------------------------
		align 10h

loc_71021B90:				; CODE XREF: sub_710212A0+5F5j
		mov	dword ptr [esp+4], 20h
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEc
		mov	eax, [ebp+var_64]
		mov	edx, [eax+0Ch]
		sub	edx, 1
		test	edx, edx
		mov	[eax+0Ch], edx
		jz	loc_710218AC
		jmp	loc_71021AE3
; ---------------------------------------------------------------------------
		align 10h

loc_71021BC0:				; CODE XREF: sub_710212A0+59Fj
		mov	eax, [ebp+var_7C]
		mov	[ebp+var_138], 0Dh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	eax, [ebp+var_64]
		cmp	byte ptr [eax+14h], 0
		jz	loc_71021852

loc_71021BE3:				; CODE XREF: sub_710212A0+5ACj
		mov	dword ptr [esp+4], 20h
		mov	[esp], eax
		mov	[ebp+var_138], 0Dh
		call	ds:_ZN11QTextStreamlsEc
		mov	eax, [ebp+var_64]
		jmp	loc_71021852
; ---------------------------------------------------------------------------

loc_71021C06:				; CODE XREF: sub_710212A0+326j
		mov	dword ptr [esp], 18h ; size_t
		mov	[ebp+var_138], 14h
		call	sub_710517F0
		mov	[ebp+var_17C], eax
		lea	eax, [ebp+var_6C]
		mov	[esp+8], eax
		mov	eax, [ebp+var_17C]
		mov	[ebp+var_6C], 2
		mov	[ebp+var_138], 0Ah
		add	eax, 8
		mov	[esp+4], eax
		mov	eax, [ebp+var_17C]
		mov	[esp], eax
		call	ds:_ZN11QTextStreamC1EP7QString6QFlagsIN9QIODevice12OpenModeFlagEE
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	edx, [ebp+var_17C]
		mov	[edx+8], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_17C]
		mov	dword ptr [eax+0Ch], 1
		mov	dword ptr [eax+10h], 0
		mov	byte ptr [eax+14h], 1
		mov	byte ptr [eax+15h], 1
		mov	[ebp+var_60], eax
		lea	eax, [ebp+var_70]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aQsvghandlerCre ; "QSvgHandler::createImageNode: Unrecogni"...
		mov	[esp], eax
		mov	[ebp+var_138], 0Fh
		call	ds:_ZN7QString9fromAsciiEPKci
		sub	esp, 4
		lea	eax, [ebp+var_70]
		mov	[esp+4], eax
		mov	eax, [ebp+var_60]
		mov	[ebp+var_138], 9
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_70]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71021EE3

loc_71021CE0:				; CODE XREF: sub_710212A0+C59j
		mov	eax, [ebp+var_60]
		cmp	byte ptr [eax+14h], 0
		jnz	loc_71021EC0

loc_71021CED:				; CODE XREF: sub_710212A0+C3Ej
		mov	edx, [eax+0Ch]
		sub	edx, 1
		test	edx, edx
		mov	[eax+0Ch], edx
		jnz	loc_71021754
		mov	eax, [ebp+var_60]
		cmp	byte ptr [eax+15h], 0
		mov	[ebp+var_180], eax
		jnz	loc_71021F58

loc_71021D11:				; CODE XREF: sub_710212A0+D3Ej
					; sub_710212A0+D62j
		mov	ebx, [ebp+var_180]
		test	ebx, ebx
		jz	loc_71021754
		mov	edx, [ebp+var_180]
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71021F00

loc_71021D36:				; CODE XREF: sub_710212A0+C7Cj
		mov	edx, [ebp+var_180]
		mov	[ebp+var_138], 14h
		mov	[esp], edx
		call	ds:_ZN11QTextStreamD1Ev
		mov	eax, [ebp+var_180]
		mov	[esp], eax
		call	sub_710517D0
		jmp	loc_71021754
; ---------------------------------------------------------------------------

loc_71021D62:				; CODE XREF: sub_710212A0+69Cj
		lea	edx, [ebp+var_68]
		lea	eax, [ebp+var_EC]
		mov	[esp+0Ch], edx
		lea	edx, [ebp+var_C8]
		mov	[ebp+var_68], 0
		mov	dword ptr [esp+8], 6
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK6QImage15convertToFormatENS_6FormatE6QFlagsIN2Qt19ImageConversionFlagEE
		sub	esp, 4
		lea	eax, [ebp+var_EC]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C8]
		mov	[esp], eax
		mov	[ebp+var_138], 0Ch
		call	ds:_ZN6QImageaSERKS_
		lea	eax, [ebp+var_EC]
		mov	[esp], eax
		mov	[ebp+var_138], 14h
		call	ds:_ZN6QImageD1Ev
		jmp	loc_71021942
; ---------------------------------------------------------------------------

loc_71021DD5:				; CODE XREF: sub_710212A0+63Ej
		mov	edx, [ebp+var_150]
		mov	eax, [edx+8]
		mov	[ebp+var_138], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_710218E4
; ---------------------------------------------------------------------------

loc_71021DF6:				; CODE XREF: sub_710212A0+39Cj
		mov	eax, [ebp+var_5C]
		mov	[ebp+var_138], 11h
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	loc_71021642
; ---------------------------------------------------------------------------

loc_71021E11:				; CODE XREF: sub_710212A0+41Ej
		mov	eax, [ebp+var_58]
		mov	[ebp+var_138], 13h
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	loc_710216C4
; ---------------------------------------------------------------------------
		align 10h

loc_71021E30:				; CODE XREF: sub_710212A0+619j
		mov	edx, [ebp+var_150]
		lea	eax, [ebp+var_80]
		mov	[esp], eax
		mov	[ebp+var_138], 3
		add	edx, 8
		mov	[esp+4], edx
		call	ds:_ZNK7QString11toLocal8BitEv
		mov	eax, [ebp+var_80]
		sub	esp, 4
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_71021F45

loc_71021E64:				; CODE XREF: sub_710212A0+CADj
		mov	eax, [eax+8]
		mov	[ebp+var_138], 2
		mov	[esp+4], eax
		lea	eax, [ebp+var_80]
		mov	[esp], eax
		call	ds:_ZN10QByteArray7reallocEi
		mov	eax, [ebp+var_80]
		mov	edx, [eax+0Ch]

loc_71021E87:				; CODE XREF: sub_710212A0+CB3j
		mov	eax, [ebp+var_64]
		mov	[esp+4], edx
		mov	eax, [eax+10h]
		mov	[ebp+var_138], 2
		mov	[esp], eax
		call	ds:_Z17qt_message_output9QtMsgTypePKc
		mov	eax, [ebp+var_80]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71021F21
		mov	edx, [ebp+var_64]
		mov	[ebp+var_150], edx
		jmp	loc_710218BF
; ---------------------------------------------------------------------------
		align 10h

loc_71021EC0:				; CODE XREF: sub_710212A0+A47j
		mov	dword ptr [esp+4], 20h
		mov	[esp], eax
		mov	[ebp+var_138], 0Fh
		call	ds:_ZN11QTextStreamlsEc
		mov	eax, [ebp+var_60]
		jmp	loc_71021CED
; ---------------------------------------------------------------------------

loc_71021EE3:				; CODE XREF: sub_710212A0+A3Aj
		mov	eax, [ebp+var_70]
		mov	[ebp+var_138], 0Fh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71021CE0
; ---------------------------------------------------------------------------
		align 10h

loc_71021F00:				; CODE XREF: sub_710212A0+A90j
		mov	edx, [ebp+var_180]
		mov	eax, [edx+8]
		mov	[ebp+var_138], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71021D36
; ---------------------------------------------------------------------------

loc_71021F21:				; CODE XREF: sub_710212A0+C0Fj
		mov	eax, [ebp+var_80]
		mov	[ebp+var_138], 3
		mov	[esp], eax
		call	ds:_Z5qFreePv

loc_71021F37:				; CODE XREF: sub_71022017+292j
		mov	eax, [ebp+var_64]
		mov	[ebp+var_150], eax
		jmp	loc_710218BF
; ---------------------------------------------------------------------------

loc_71021F45:				; CODE XREF: sub_710212A0+BBEj
		mov	edx, [eax+0Ch]
		lea	ecx, [eax+10h]
		cmp	edx, ecx
		jnz	loc_71021E64
		jmp	loc_71021E87
; ---------------------------------------------------------------------------

loc_71021F58:				; CODE XREF: sub_710212A0+A6Bj
		mov	edx, [ebp+var_180]
		lea	eax, [ebp+var_74]
		mov	[esp], eax
		mov	[ebp+var_138], 8
		add	edx, 8
		mov	[esp+4], edx
		call	ds:_ZNK7QString11toLocal8BitEv
		mov	eax, [ebp+var_74]
		sub	esp, 4
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_71022007

loc_71021F88:				; CODE XREF: sub_710212A0+D6Fj
		mov	eax, [eax+8]
		mov	[ebp+var_138], 7
		mov	[esp+4], eax
		lea	eax, [ebp+var_74]
		mov	[esp], eax
		call	ds:_ZN10QByteArray7reallocEi
		mov	eax, [ebp+var_74]
		mov	edx, [eax+0Ch]

loc_71021FAB:				; CODE XREF: sub_710212A0+D75j
		mov	eax, [ebp+var_60]
		mov	[esp+4], edx
		mov	eax, [eax+10h]
		mov	[ebp+var_138], 7
		mov	[esp], eax
		call	ds:_Z17qt_message_output9QtMsgTypePKc
		mov	eax, [ebp+var_74]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71021FE3
		mov	edx, [ebp+var_60]
		mov	[ebp+var_180], edx
		jmp	loc_71021D11
; ---------------------------------------------------------------------------

loc_71021FE3:				; CODE XREF: sub_710212A0+D33j
		mov	eax, [ebp+var_74]
		mov	[ebp+var_138], 8
		mov	[esp], eax
		call	ds:_Z5qFreePv

loc_71021FF9:				; CODE XREF: sub_71022017+332j
		mov	eax, [ebp+var_60]
		mov	[ebp+var_180], eax
		jmp	loc_71021D11
; ---------------------------------------------------------------------------

loc_71022007:				; CODE XREF: sub_710212A0+CE6j
		mov	edx, [eax+0Ch]
		lea	ecx, [eax+10h]
		cmp	edx, ecx
		jnz	loc_71021F88
		jmp	short loc_71021FAB
sub_710212A0	endp


; =============== S U B	R O U T	I N E =======================================


sub_71022017	proc near		; DATA XREF: sub_710212A0+38o
		add	ebp, 18h
		mov	edx, [ebp-134h]
		mov	eax, [ebp-138h]
		mov	[ebp-184h], edx
		mov	edx, [ebp-130h]
		cmp	eax, 1
		mov	[ebp-188h], edx
		jz	loc_7102226A
		cmp	eax, 2
		jz	loc_7102227F
		cmp	eax, 3
		jz	loc_7102236C
		cmp	eax, 4
		jz	loc_7102239B
		cmp	eax, 5
		nop
		jz	loc_7102234E
		cmp	eax, 6
		jz	loc_7102230A
		cmp	eax, 7
		jz	loc_7102231F
		cmp	eax, 8
		nop
		lea	esi, [esi+0]
		jz	loc_710222DB
		cmp	eax, 9
		jz	loc_710222C8
		cmp	eax, 0Ah
		jz	loc_71022404
		cmp	eax, 0Bh
		nop
		lea	esi, [esi+0]
		jz	loc_710223E6
		cmp	eax, 0Ch
		jz	loc_71022381
		cmp	eax, 0Dh
		jz	loc_710223C8
		cmp	eax, 0Eh
		nop
		lea	esi, [esi+0]
		jz	loc_710222F0
		cmp	eax, 0Fh
		jz	loc_71022222
		cmp	eax, 10h
		jz	loc_7102223B
		cmp	eax, 11h
		nop
		lea	esi, [esi+0]
		jz	loc_710223AE
		cmp	eax, 12h
		jz	loc_71022250
		cmp	eax, 13h
		jz	loc_71022188
		cmp	eax, 14h
		nop
		lea	esi, [esi+0]
		jz	loc_710222AE
		cmp	eax, 15h
		jz	loc_710221A1
		cmp	eax, 16h
		jz	loc_710221B6
		cmp	eax, 17h
		nop
		lea	esi, [esi+0]
		jz	loc_710221B6
		cmp	eax, 18h
		jz	loc_710221CB
		cmp	eax, 19h
		jz	loc_710221CB
		cmp	eax, 1Ah
		nop
		lea	esi, [esi+0]
		jz	loc_710221E0
		cmp	eax, 1Bh
		jz	loc_710221E0
		cmp	eax, 1Ch
		jz	loc_710221F5
		cmp	eax, 1Dh
		nop
		lea	esi, [esi+0]
		jz	loc_710221F5
		cmp	eax, 1Eh
		jz	loc_7102220A
		mov	eax, [ebp-150h]
		mov	dword ptr [ebp-138h], 0
		mov	[esp+0], eax
		call	ds:_ZN11QTextStreamD1Ev

loc_71022188:				; CODE XREF: sub_71022017+DBj
					; sub_71022017+24Ej ...
		lea	eax, [ebp-0C8h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-138h], 0
		call	ds:_ZN6QImageD1Ev

loc_710221A1:				; CODE XREF: sub_71022017+F2j
					; sub_71022017+2ACj
		lea	eax, [ebp-3Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-138h], 0
		call	sub_710477B0

loc_710221B6:				; CODE XREF: sub_71022017+FBj
					; sub_71022017+109j
		lea	eax, [ebp-34h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-138h], 0
		call	sub_710477B0

loc_710221CB:				; CODE XREF: sub_71022017+112j
					; sub_71022017+11Bj
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-138h], 0
		call	sub_710477B0

loc_710221E0:				; CODE XREF: sub_71022017+129j
					; sub_71022017+132j
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-138h], 0
		call	sub_710477B0

loc_710221F5:				; CODE XREF: sub_71022017+13Bj
					; sub_71022017+149j
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-138h], 0
		call	sub_710477B0

loc_7102220A:				; CODE XREF: sub_71022017+152j
		mov	eax, [ebp-184h]
		mov	dword ptr [ebp-138h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71022222:				; CODE XREF: sub_71022017+B2j
		lea	eax, [ebp-0D4h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-138h], 0
		call	ds:_ZN6QImageD1Ev

loc_7102223B:				; CODE XREF: sub_71022017+BBj
		lea	eax, [ebp-58h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-138h], 0
		call	sub_7103B6E0

loc_71022250:				; CODE XREF: sub_71022017+D2j
					; sub_71022017+3ACj
		lea	eax, [ebp-54h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-138h], 0
		call	sub_710477B0
		jmp	loc_71022188
; ---------------------------------------------------------------------------

loc_7102226A:				; CODE XREF: sub_71022017+24j
		lea	eax, [ebp-80h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-138h], 0
		call	sub_7103B6E0

loc_7102227F:				; CODE XREF: sub_71022017+2Dj
		cmp	dword ptr [ebp-188h], 1
		jnz	loc_71022188
		mov	edx, [ebp-184h]
		mov	[esp+0], edx
		call	sub_71051CE0
		mov	dword ptr [ebp-138h], 0
		call	sub_71051FB0
		jmp	loc_71021F37
; ---------------------------------------------------------------------------

loc_710222AE:				; CODE XREF: sub_71022017+E9j
		lea	eax, [ebp-48h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-138h], 0
		call	sub_710477B0
		jmp	loc_710221A1
; ---------------------------------------------------------------------------

loc_710222C8:				; CODE XREF: sub_71022017+72j
		mov	edx, [ebp-17Ch]
		mov	[esp+0], edx
		call	sub_710517D0
		jmp	loc_71022188
; ---------------------------------------------------------------------------

loc_710222DB:				; CODE XREF: sub_71022017+69j
		lea	eax, [ebp-70h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-138h], 0
		call	sub_710477B0

loc_710222F0:				; CODE XREF: sub_71022017+A9j
		lea	eax, [ebp-60h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-138h], 0
		call	sub_71047180
		jmp	loc_71022188
; ---------------------------------------------------------------------------

loc_7102230A:				; CODE XREF: sub_71022017+52j
		lea	eax, [ebp-74h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-138h], 0
		call	sub_7103B6E0

loc_7102231F:				; CODE XREF: sub_71022017+5Bj
		cmp	dword ptr [ebp-188h], 1
		jnz	loc_71022188
		mov	edx, [ebp-184h]
		mov	[esp+0], edx
		call	sub_71051CE0
		mov	dword ptr [ebp-138h], 0
		call	sub_71051FB0
		jmp	loc_71021FF9
; ---------------------------------------------------------------------------

loc_7102234E:				; CODE XREF: sub_71022017+49j
		mov	eax, [ebp-180h]
		mov	dword ptr [ebp-138h], 0
		mov	[esp+0], eax
		call	ds:_ZN11QTextStreamD1Ev
		jmp	loc_71022188
; ---------------------------------------------------------------------------

loc_7102236C:				; CODE XREF: sub_71022017+36j
		lea	eax, [ebp-7Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-138h], 0
		call	sub_710477B0

loc_71022381:				; CODE XREF: sub_71022017+92j
		lea	eax, [ebp-64h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-138h], 0
		call	sub_71047180
		jmp	loc_71022188
; ---------------------------------------------------------------------------

loc_7102239B:				; CODE XREF: sub_71022017+3Fj
		mov	edx, [ebp-148h]
		mov	[esp+0], edx
		call	sub_710517D0
		jmp	loc_71022188
; ---------------------------------------------------------------------------

loc_710223AE:				; CODE XREF: sub_71022017+C9j
		lea	eax, [ebp-5Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-138h], 0
		call	sub_7103B6E0
		jmp	loc_71022250
; ---------------------------------------------------------------------------

loc_710223C8:				; CODE XREF: sub_71022017+9Bj
		lea	eax, [ebp-0E0h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-138h], 0
		call	ds:_ZN6QImageD1Ev
		jmp	loc_71022188
; ---------------------------------------------------------------------------

loc_710223E6:				; CODE XREF: sub_71022017+89j
		lea	eax, [ebp-0ECh]
		mov	[esp+0], eax
		mov	dword ptr [ebp-138h], 0
		call	ds:_ZN6QImageD1Ev
		jmp	loc_71022188
; ---------------------------------------------------------------------------

loc_71022404:				; CODE XREF: sub_71022017+7Bj
		mov	eax, [ebp-154h]
		mov	[esp+0], eax
		call	sub_710517D0
		jmp	loc_71022188
sub_71022017	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71022420	proc near		; CODE XREF: sub_71001AB0+1Ep
					; .text:71001B3Ep ...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		mov	edx, ds:_ZN9QListData11shared_nullE
		mov	dword ptr [eax], offset	off_7105DC28
		mov	[eax+28h], edx
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax+8], 0
		mov	dword ptr [eax+0Ch], 0
		mov	dword ptr [eax+10h], 0
		mov	dword ptr [eax+14h], 0
		mov	dword ptr [eax+18h], 0
		mov	dword ptr [eax+1Ch], 0
		mov	dword ptr [eax+20h], 0
		mov	dword ptr [eax+24h], 0
		lock inc dword ptr [edx]
		setnz	cl
		mov	ecx, [esp+arg_4]
		mov	dword ptr [eax+2Ch], 0
		mov	dword ptr [eax+30h], 0
		mov	[eax+38h], edx
		mov	[eax+34h], ecx
		lock inc dword ptr [edx]
		setnz	cl
		mov	[eax+3Ch], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	[eax+40h], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	[eax+44h], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	[eax+48h], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	byte ptr [eax+4Ch], 1
		mov	[eax+50h], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	[eax+54h], edx
		lock inc dword ptr [edx]
		setnz	cl
		fldz
		fst	qword ptr [eax+68h]
		mov	dword ptr [eax+58h], 1
		fst	qword ptr [eax+60h]
		fst	qword ptr [eax+78h]
		fstp	qword ptr [eax+70h]
		retn
sub_71022420	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710224F0	proc near		; DATA XREF: .rdata:7105D698o
					; .rdata:7105DC38o ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		fldz
		fst	qword ptr [eax]
		fst	qword ptr [eax+8]
		fst	qword ptr [eax+10h]
		fstp	qword ptr [eax+18h]
		retn	4
sub_710224F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71022510	proc near		; CODE XREF: sub_71011C90+128p
					; sub_71019980+6FAp ...

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		test	ebx, ebx
		jz	short loc_71022528

loc_7102251C:				; CODE XREF: sub_71022510+25j
		mov	eax, [ebx]
		mov	[esp+1Ch+var_1C], ebx
		call	dword ptr [eax+0Ch]
		test	eax, eax
		jnz	short loc_71022530

loc_71022528:				; CODE XREF: sub_71022510+Aj
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71022530:				; CODE XREF: sub_71022510+16j
		mov	ebx, [ebx+34h]
		test	ebx, ebx
		jnz	short loc_7102251C
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn
sub_71022510	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71022540	proc near		; CODE XREF: sub_71024B70+C8p

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		add	eax, 38h
		retn
sub_71022540	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71022550	proc near		; CODE XREF: sub_71024B70+D2p

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		add	eax, 3Ch
		retn
sub_71022550	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71022560	proc near		; CODE XREF: sub_71024B70+DEp

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		add	eax, 40h
		retn
sub_71022560	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71022570	proc near		; CODE XREF: sub_71024B70+EAp

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		add	eax, 44h
		retn
sub_71022570	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71022580	proc near		; CODE XREF: sub_71024B70+F6p

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		add	eax, 48h
		retn
sub_71022580	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71022590	proc near		; CODE XREF: sub_71011C90+28Cp
					; sub_71011C90+776p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= byte ptr -10h
arg_0		= dword	ptr  4
arg_4		= byte ptr  8

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		movzx	eax, [esp+2Ch+arg_4]
		mov	edx, [ebx+34h]
		test	edx, edx
		jz	short loc_710225C7
		test	al, al
		jz	short loc_710225C7
		cmp	byte ptr [edx+4Ch], 0
		jnz	short loc_710225C7
		mov	[esp+2Ch+var_10], al
		mov	[esp+2Ch+var_28], 1
		mov	[esp+2Ch+var_2C], edx
		call	sub_71022590
		movzx	eax, [esp+2Ch+var_10]

loc_710225C7:				; CODE XREF: sub_71022590+12j
					; sub_71022590+16j ...
		mov	[ebx+4Ch], al
		add	esp, 28h
		pop	ebx
		retn
sub_71022590	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710225D0	proc near		; CODE XREF: sub_71011C90+416p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	[eax+58h], edx
		retn
sub_710225D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710225E0	proc near		; CODE XREF: sub_71024A80+9Fp
					; sub_71024B70+BBp ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+58h]
		retn
sub_710225E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710225F0	proc near		; CODE XREF: sub_710015A0+3Fp
					; sub_71005990+3Cp ...

var_5A		= byte ptr -5Ah
var_59		= byte ptr -59h
var_58		= qword	ptr -58h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_C		= byte ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_7105357C
		mov	[ebp+var_28], offset sub_710226F6
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZNK8QPainter3penEv
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZN4QPenC1ERKS_
		lea	eax, [ebp+var_C]
		mov	[ebp+var_59], 0
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZNK4QPen5styleEv
		test	eax, eax
		jnz	short loc_71022685

loc_7102265D:				; CODE XREF: sub_710225F0+D4j
		fldz

loc_7102265F:				; CODE XREF: sub_710225F0+E9j
		lea	eax, [ebp+var_C]
		fstp	[ebp+var_58]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN4QPenD1Ev
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		fld	[ebp+var_58]
		leave
		retn
; ---------------------------------------------------------------------------

loc_71022685:				; CODE XREF: sub_710225F0+6Bj
		lea	eax, [ebp+var_10]
		lea	edx, [ebp+var_C]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK4QPen5brushEv
		mov	eax, [ebp+var_10]
		sub	esp, 4
		mov	[ebp+var_59], 1
		mov	eax, [eax+4]
		test	eax, eax
		jnz	short loc_710226E0

loc_710226A9:				; CODE XREF: sub_710225F0+104j
		mov	[ebp+var_5A], 1

loc_710226AD:				; CODE XREF: sub_710225F0+102j
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN6QBrushD1Ev
		cmp	[ebp+var_5A], 0
		jnz	short loc_7102265D
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZNK4QPen6widthFEv
		jmp	short loc_7102265F
; ---------------------------------------------------------------------------
		align 10h

loc_710226E0:				; CODE XREF: sub_710225F0+B7j
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZNK4QPen10isCosmeticEv
		test	al, al
		mov	[ebp+var_5A], 0
		jz	short loc_710226AD
		jmp	short loc_710226A9
sub_710225F0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710226F6	proc near		; DATA XREF: sub_710225F0+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-64h], eax
		jz	short loc_71022727
		cmp	byte ptr [ebp-59h], 0
		mov	[ebp-60h], eax
		jz	short loc_71022721
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN6QBrushD1Ev

loc_71022721:				; CODE XREF: sub_710226F6+16j
		mov	eax, [ebp-60h]
		mov	[ebp-64h], eax

loc_71022727:				; CODE XREF: sub_710226F6+Dj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN4QPenD1Ev
		mov	eax, [ebp-64h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_710226F6	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71022750	proc near		; CODE XREF: sub_71013AD0+74Ap
					; sub_7101C340+185p

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		add	eax, 54h
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_ZN7QStringaSERKS_
		add	esp, 0Ch
		jmp	eax
sub_71022750	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71022770	proc near		; CODE XREF: sub_71013AD0+717p
					; sub_7101C340+170p

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		add	eax, 50h
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_ZN7QStringaSERKS_
		add	esp, 0Ch
		jmp	eax
sub_71022770	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71022790	proc near		; CODE XREF: sub_71001960+46j
					; sub_710019B0+94p ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		add	eax, 4
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	sub_710254B0
sub_71022790	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710227B0	proc near		; CODE XREF: sub_71001960+26p
					; sub_710019B0+26p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+arg_8]
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_10], edx
		mov	edx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_14], eax
		add	eax, 4
		mov	[esp+1Ch+var_1C], eax
		mov	[esp+1Ch+var_18], edx
		call	sub_71025A70
		add	esp, 1Ch
		retn
sub_710227B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710227E0	proc near		; DATA XREF: .rdata:7105D49Co
					; .rdata:7105D4BCo ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 2Ch
		mov	[esp+2Ch+var_10], ebx
		mov	ebx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_C], esi
		mov	esi, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_8], edi
		mov	edi, [esp+2Ch+arg_C]
		mov	[esp+2Ch+var_4], ebp
		mov	ebp, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], ebx
		mov	[esp+2Ch+var_28], esi
		mov	[esp+2Ch+var_24], edi
		call	sub_710227B0
		mov	eax, [ebx]
		mov	[esp+2Ch+var_20], edi
		mov	[esp+2Ch+var_24], esi
		mov	[esp+2Ch+var_28], ebx
		add	ebx, 4
		mov	[esp+2Ch+var_2C], ebp
		call	dword ptr [eax+10h]
		sub	esp, 4
		mov	[esp+2Ch+var_24], edi
		mov	[esp+2Ch+var_28], esi
		mov	[esp+2Ch+var_2C], ebx
		call	sub_710254B0
		mov	eax, ebp
		mov	ebx, [esp+2Ch+var_10]
		mov	esi, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_8]
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn	4
sub_710227E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71022860	proc near		; CODE XREF: _ZNK16QSvgTinyDocument15boundsOnElementERK7QString+2Ep
					; _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+3B1p	...

var_104		= dword	ptr -104h
var_100		= dword	ptr -100h
var_FC		= byte ptr -0FCh
var_F8		= dword	ptr -0F8h
var_E4		= dword	ptr -0E4h
var_E0		= dword	ptr -0E0h
var_DC		= dword	ptr -0DCh
var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= byte ptr -0A8h
var_58		= byte ptr -58h
var_24		= byte ptr -24h
var_18		= dword	ptr -18h
var_14		= byte ptr -14h
var_10		= byte ptr -10h
var_C		= byte ptr -0Ch
var_8		= byte ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 134h
		mov	[ebp+var_DC], eax
		lea	eax, [ebp+var_FC]
		mov	[esp], eax
		mov	[ebp+var_E4], offset sub_710525B0
		mov	[ebp+var_E0], offset dword_71053594
		mov	[ebp+var_D8], offset sub_71022C94
		mov	[ebp+var_D4], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		fld	qword ptr [edx+70h]
		fldz
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_710228C8
		fld	qword ptr [edx+78h]
		fxch	st(1)
		fucompp
		fnstsw	ax
		sahf
		jb	loc_71022A77
		jmp	short loc_710228CA
; ---------------------------------------------------------------------------

loc_710228C8:				; CODE XREF: sub_71022860+54j
		fstp	st

loc_710228CA:				; CODE XREF: sub_71022860+66j
		lea	edx, [ebp+var_24]
		mov	dword ptr [esp+0Ch], 4
		mov	dword ptr [esp+8], 1
		mov	dword ptr [esp+4], 1
		mov	[esp], edx
		mov	[ebp+var_F8], 0FFFFFFFFh
		call	ds:_ZN6QImageC1EiiNS_6FormatE
		lea	ecx, [ebp+var_24]
		lea	eax, [ebp+var_C]
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	[ebp+var_F8], 5
		call	ds:_ZN8QPainterC1EP12QPaintDevice
		lea	eax, [ebp+var_58]
		mov	[esp], eax
		mov	[ebp+var_F8], 4
		call	sub_71025260
		lea	eax, [ebp+var_14]
		mov	dword ptr [esp+4], 0
		mov	[esp], eax
		call	ds:_ZN6QBrushC1EN2Qt10BrushStyleE
		lea	eax, [ebp+var_14]
		fld1
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	dword ptr [esp+18h], 0
		mov	dword ptr [esp+14h], 0
		mov	dword ptr [esp+10h], 1
		fstp	qword ptr [esp+8]
		mov	[esp], eax
		mov	[ebp+var_F8], 3
		call	ds:_ZN4QPenC1ERK6QBrushdN2Qt8PenStyleENS3_11PenCapStyleENS3_12PenJoinStyleE
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_F8], 2
		call	ds:_ZN6QBrushD1Ev
		fld	ds:flt_71059E70
		lea	eax, [ebp+var_10]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	ds:_ZN4QPen13setMiterLimitEd
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZN8QPainter6setPenERK4QPen
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	[ebp+var_18], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_4]
		mov	eax, [eax+34h]
		test	eax, eax
		mov	[ebp+var_104], eax
		jz	loc_71022AC4
		mov	eax, [ebp+var_18]
		mov	edx, [eax+8]
		jmp	short loc_71022A58
; ---------------------------------------------------------------------------

loc_710229E2:				; CODE XREF: sub_71022860+1FDj
					; sub_71022860+202j
		add	edx, 1
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 4
		mov	[esp+4], edx
		mov	dword ptr [esp], 14h
		mov	[ebp+var_F8], 1
		call	ds:_ZN11QVectorData4growEiiib
		mov	[esp+8], eax
		mov	eax, [ebp+var_18]
		lea	edx, [ebp+var_18]
		mov	eax, [eax+8]
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_7104E6E0
		mov	eax, [ebp+var_18]
		mov	ecx, [ebp+var_104]
		mov	edx, [eax+8]
		mov	[eax+edx*4+10h], ecx
		mov	eax, [ebp+var_18]

loc_71022A3C:				; CODE XREF: sub_71022860+215j
		mov	ebx, [ebp+var_104]
		mov	edx, [eax+8]
		mov	ebx, [ebx+34h]
		add	edx, 1
		mov	[eax+8], edx
		test	ebx, ebx
		mov	[ebp+var_104], ebx
		jz	short loc_71022AD0

loc_71022A58:				; CODE XREF: sub_71022860+180j
		mov	ecx, [eax]
		cmp	ecx, 1
		jnz	short loc_710229E2
		cmp	[eax+4], edx
		jle	loc_710229E2
		mov	ecx, [ebp+var_18]
		mov	ebx, [ebp+var_104]
		mov	[ecx+edx*4+10h], ebx
		jmp	short loc_71022A3C
; ---------------------------------------------------------------------------

loc_71022A77:				; CODE XREF: sub_71022860+60j
		mov	edx, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		mov	eax, [edx+60h]
		mov	[ecx], eax
		mov	eax, [edx+64h]
		mov	[ecx+4], eax
		mov	eax, [edx+68h]
		mov	[ecx+8], eax
		mov	eax, [edx+6Ch]
		mov	[ecx+0Ch], eax
		mov	eax, [edx+70h]
		mov	[ecx+10h], eax
		mov	eax, [edx+74h]
		mov	[ecx+14h], eax
		mov	eax, [edx+78h]
		mov	[ecx+18h], eax
		mov	eax, [edx+7Ch]
		mov	[ecx+1Ch], eax

loc_71022AAC:				; CODE XREF: sub_71022860+40Fj
		lea	eax, [ebp+var_FC]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		mov	ebx, [ebp+var_4]
		leave
		retn	4
; ---------------------------------------------------------------------------

loc_71022AC4:				; CODE XREF: sub_71022860+174j
		mov	eax, [ebp+var_18]
		mov	edx, [eax+8]
		lea	esi, [esi+0]

loc_71022AD0:				; CODE XREF: sub_71022860+1F6j
		sub	edx, 1
		mov	[ebp+var_100], edx
		jns	short loc_71022AE3
		jmp	short loc_71022B45
; ---------------------------------------------------------------------------
		align 10h

loc_71022AE0:				; CODE XREF: sub_71022860+2E3j
		mov	eax, [ebp+var_18]

loc_71022AE3:				; CODE XREF: sub_71022860+279j
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_71022B0D
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_F8], 1
		mov	[esp+4], eax
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		call	sub_7104E6E0

loc_71022B0D:				; CODE XREF: sub_71022860+288j
		mov	eax, [ebp+var_18]
		lea	edx, [ebp+var_58]
		mov	ebx, [ebp+var_100]
		lea	ecx, [ebp+var_C]
		mov	[esp+8], edx
		mov	[esp+4], ecx
		mov	eax, [eax+ebx*4+10h]
		mov	[ebp+var_F8], 1
		mov	[esp], eax
		call	sub_710227B0
		sub	ebx, 1
		mov	[ebp+var_100], ebx
		jns	short loc_71022AE0

loc_71022B45:				; CODE XREF: sub_71022860+27Bj
		lea	eax, [ebp+var_A8]
		mov	[esp], eax
		mov	[ebp+var_F8], 1
		call	ds:_ZN10QTransformC1Ev
		lea	eax, [ebp+var_A8]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	dword ptr [esp+8], 0
		mov	[esp], eax
		call	ds:_ZN8QPainter17setWorldTransformERK10QTransformb
		mov	ecx, [ebp+arg_4]
		lea	edx, [ebp+var_C8]
		mov	ebx, [ebp+arg_4]
		mov	eax, [ecx]
		lea	ecx, [ebp+var_58]
		mov	[esp+0Ch], ecx
		lea	ecx, [ebp+var_C]
		mov	[esp+8], ecx
		mov	[esp+4], ebx
		mov	[esp], edx
		call	dword ptr [eax+14h]
		mov	eax, [ebp+var_C8]
		sub	esp, 4
		mov	[ebx+60h], eax
		mov	edx, [ebp+var_C4]
		mov	[ebx+64h], edx
		mov	edx, [ebp+var_C0]
		mov	[ebx+68h], edx
		mov	edx, [ebp+var_BC]
		mov	[ebx+6Ch], edx
		mov	edx, [ebp+var_B8]
		mov	[ebx+70h], edx
		mov	edx, [ebp+var_B4]
		mov	[ebx+74h], edx
		mov	edx, [ebp+var_B0]
		mov	[ebx+78h], edx
		mov	edx, [ebp+var_AC]
		mov	[ebx+7Ch], edx
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		mov	eax, [ebx+64h]
		mov	[edx+4], eax
		mov	eax, [ebx+68h]
		mov	[edx+8], eax
		mov	eax, [ebx+6Ch]
		mov	[edx+0Ch], eax
		mov	eax, [ebx+70h]
		mov	[edx+10h], eax
		mov	eax, [ebx+74h]
		mov	[edx+14h], eax
		mov	eax, [ebx+78h]
		mov	[edx+18h], eax
		mov	eax, [ebx+7Ch]
		mov	[edx+1Ch], eax
		mov	eax, [ebp+var_18]
		test	eax, eax
		jz	short loc_71022C2D
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71022C74

loc_71022C2D:				; CODE XREF: sub_71022860+3C1j
					; sub_71022860+432j
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_F8], 4
		call	ds:_ZN4QPenD1Ev
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_F8], 5
		call	ds:_ZN8QPainterD1Ev
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		mov	[ebp+var_F8], 0FFFFFFFFh
		call	ds:_ZN6QImageD1Ev
		jmp	loc_71022AAC
; ---------------------------------------------------------------------------

loc_71022C74:				; CODE XREF: sub_71022860+3CBj
		mov	eax, [ebp+var_18]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_F8], 2
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i
		jmp	short loc_71022C2D
sub_71022860	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71022C94	proc near		; DATA XREF: sub_71022860+30o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-0F8h]
		mov	ecx, [ebp-0F4h]
		cmp	eax, 1
		mov	[ebp-10Ch], ecx
		jz	short loc_71022D03
		cmp	eax, 2
		jz	loc_71022D5D
		cmp	eax, 3
		jz	short loc_71022D19
		cmp	eax, 4
		nop
		jz	short loc_71022D2F
		mov	eax, [ebp-18h]
		mov	[ebp-108h], ecx
		test	eax, eax
		jz	short loc_71022CF7
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71022CF7
		mov	eax, [ebp-18h]
		mov	[esp+arg_0], 4
		mov	dword ptr [ebp-0F8h], 0
		mov	[esp+0], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_71022CF7:				; CODE XREF: sub_71022C94+39j
					; sub_71022C94+43j
		mov	ebx, [ebp-108h]
		mov	[ebp-10Ch], ebx

loc_71022D03:				; CODE XREF: sub_71022C94+18j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	ds:_ZN4QPenD1Ev

loc_71022D19:				; CODE XREF: sub_71022C94+26j
					; sub_71022C94+DFj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	ds:_ZN8QPainterD1Ev

loc_71022D2F:				; CODE XREF: sub_71022C94+2Cj
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	ds:_ZN6QImageD1Ev
		mov	eax, [ebp-10Ch]
		mov	dword ptr [ebp-0F8h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71022D5D:				; CODE XREF: sub_71022C94+1Dj
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0F8h], 0
		call	ds:_ZN6QBrushD1Ev
		jmp	short loc_71022D19
sub_71022C94	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71022D80	proc near		; CODE XREF: sub_71013AD0+679p

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 3Ch
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_C], esi
		mov	esi, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_10], ebx
		mov	[esp+3Ch+var_8], edi
		mov	[esp+3Ch+var_4], ebp
		mov	ebx, [eax]
		cmp	[esi+44h], ebx
		jz	short loc_71022DC5
		lea	edi, [esi+44h]
		lock inc dword ptr [ebx]
		setnz	al
		mov	eax, [esi+44h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71022E50

loc_71022DBC:				; CODE XREF: sub_71022D80+DFj
		mov	[esi+44h], ebx
		test	byte ptr [ebx+10h], 1
		jz	short loc_71022DE0

loc_71022DC5:				; CODE XREF: sub_71022D80+20j
					; sub_71022D80+B6j ...
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71022DE0:				; CODE XREF: sub_71022D80+43j
		mov	eax, [ebx+4]
		mov	ebp, [ebx+8]
		mov	[esp+3Ch+var_3C], edi
		mov	[esp+3Ch+var_38], eax
		call	ds:_ZN9QListData6detachEi
		mov	[esp+3Ch+var_20], eax
		mov	edx, [esi+44h]
		mov	ecx, [edx+0Ch]
		lea	esi, [edx+ecx*4+14h]
		mov	ecx, [edx+8]
		lea	edx, [edx+ecx*4+14h]
		cmp	esi, edx
		jz	short loc_71022E2A
		lea	ebx, [ebx+ebp*4+14h]
		jmp	short loc_71022E15
; ---------------------------------------------------------------------------

loc_71022E12:				; CODE XREF: sub_71022D80+A8j
		add	ebx, 4

loc_71022E15:				; CODE XREF: sub_71022D80+90j
		test	edx, edx
		jz	short loc_71022E23
		mov	ecx, [ebx]
		mov	[edx], ecx
		lock inc dword ptr [ecx]
		setnz	al

loc_71022E23:				; CODE XREF: sub_71022D80+97j
		add	edx, 4
		cmp	esi, edx
		jnz	short loc_71022E12

loc_71022E2A:				; CODE XREF: sub_71022D80+8Aj
		mov	eax, [esp+3Ch+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71022DC5
		mov	[esp+3Ch+var_38], eax
		mov	[esp+3Ch+var_3C], edi
		call	sub_710459F0
		jmp	loc_71022DC5
; ---------------------------------------------------------------------------
		align 10h

loc_71022E50:				; CODE XREF: sub_71022D80+36j
		mov	eax, [esi+44h]
		mov	[esp+3Ch+var_3C], edi
		mov	[esp+3Ch+var_38], eax
		call	sub_710459F0
		jmp	loc_71022DBC
sub_71022D80	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71022E70	proc near		; DATA XREF: .rdata:7105DC2Co

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_710535A2
		mov	[ebp+var_18], offset sub_7102304B
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_7105DC28
		mov	eax, [edx+54h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71022F74

loc_71022EB9:				; CODE XREF: sub_71022E70+11Aj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+50h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71023030

loc_71022ECD:				; CODE XREF: sub_71022E70+1D6j
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		add	ecx, 48h
		mov	eax, [edx+48h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71023010

loc_71022EE7:				; CODE XREF: sub_71022E70+1B9j
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		add	ecx, 44h
		mov	eax, [edx+44h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71022FF0

loc_71022F01:				; CODE XREF: sub_71022E70+199j
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		add	ecx, 40h
		mov	eax, [edx+40h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71022FD0

loc_71022F1B:				; CODE XREF: sub_71022E70+179j
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		add	ecx, 3Ch
		mov	eax, [edx+3Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71022FB0

loc_71022F31:				; CODE XREF: sub_71022E70+159j
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		add	ecx, 38h
		mov	eax, [edx+38h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71022F90

loc_71022F47:				; CODE XREF: sub_71022E70+139j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		add	eax, 4
		mov	[esp], eax
		call	sub_71028A80
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		call	sub_710517D0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71022F74:				; CODE XREF: sub_71022E70+43j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+54h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71022EB9
; ---------------------------------------------------------------------------
		align 10h

loc_71022F90:				; CODE XREF: sub_71022E70+D5j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+38h]
		mov	[esp], ecx
		mov	[ebp+var_38], 7
		mov	[esp+4], eax
		call	sub_710459F0
		jmp	short loc_71022F47
; ---------------------------------------------------------------------------
		align 10h

loc_71022FB0:				; CODE XREF: sub_71022E70+BFj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+3Ch]
		mov	[esp], ecx
		mov	[ebp+var_38], 6
		mov	[esp+4], eax
		call	sub_710459F0
		jmp	loc_71022F31
; ---------------------------------------------------------------------------
		align 10h

loc_71022FD0:				; CODE XREF: sub_71022E70+A5j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+40h]
		mov	[esp], ecx
		mov	[ebp+var_38], 5
		mov	[esp+4], eax
		call	sub_710459F0
		jmp	loc_71022F1B
; ---------------------------------------------------------------------------
		align 10h

loc_71022FF0:				; CODE XREF: sub_71022E70+8Bj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+44h]
		mov	[esp], ecx
		mov	[ebp+var_38], 4
		mov	[esp+4], eax
		call	sub_710459F0
		jmp	loc_71022F01
; ---------------------------------------------------------------------------
		align 10h

loc_71023010:				; CODE XREF: sub_71022E70+71j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+48h]
		mov	[esp], ecx
		mov	[ebp+var_38], 3
		mov	[esp+4], eax
		call	sub_710459F0
		jmp	loc_71022EE7
; ---------------------------------------------------------------------------
		align 10h

loc_71023030:				; CODE XREF: sub_71022E70+57j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+50h]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71022ECD
sub_71022E70	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102304B	proc near		; DATA XREF: sub_71022E70+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-44h], edx
		jz	short loc_710230B5
		cmp	eax, 2
		jz	short loc_710230CA
		cmp	eax, 3
		jz	short loc_710230DF
		cmp	eax, 4
		jz	loc_710230F4
		cmp	eax, 5
		jz	loc_71023109
		cmp	eax, 6
		nop
		lea	esi, [esi+0]
		jz	loc_7102311E
		mov	[ebp-40h], edx
		mov	edx, [ebp+8]
		mov	eax, [edx+50h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710230AF
		mov	edx, [ebp+8]
		mov	eax, [edx+50h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_710230AF:				; CODE XREF: sub_7102304B+4Cj
		mov	eax, [ebp-40h]
		mov	[ebp-44h], eax

loc_710230B5:				; CODE XREF: sub_7102304B+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 48h
		mov	[esp+0], eax
		call	sub_7103BBF0

loc_710230CA:				; CODE XREF: sub_7102304B+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 44h
		mov	[esp+0], eax
		call	sub_7103BBF0

loc_710230DF:				; CODE XREF: sub_7102304B+19j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 40h
		mov	[esp+0], eax
		call	sub_7103BBF0

loc_710230F4:				; CODE XREF: sub_7102304B+1Ej
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 3Ch
		mov	[esp+0], eax
		call	sub_7103BBF0

loc_71023109:				; CODE XREF: sub_7102304B+27j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 38h
		mov	[esp+0], eax
		call	sub_7103BBF0

loc_7102311E:				; CODE XREF: sub_7102304B+35j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 4
		mov	[esp+0], eax
		call	sub_71028A80
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7102304B	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		mov	edx, ds:_ZN9QListData11shared_nullE
		mov	dword ptr [eax], offset	off_7105DC28
		mov	[eax+28h], edx
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax+8], 0
		mov	dword ptr [eax+0Ch], 0
		mov	dword ptr [eax+10h], 0
		mov	dword ptr [eax+14h], 0
		mov	dword ptr [eax+18h], 0
		mov	dword ptr [eax+1Ch], 0
		mov	dword ptr [eax+20h], 0
		mov	dword ptr [eax+24h], 0
		lock inc dword ptr [edx]
		setnz	cl
		mov	ecx, [esp+8]
		mov	dword ptr [eax+2Ch], 0
		mov	dword ptr [eax+30h], 0
		mov	[eax+38h], edx
		mov	[eax+34h], ecx
		lock inc dword ptr [edx]
		setnz	cl
		mov	[eax+3Ch], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	[eax+40h], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	[eax+44h], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	[eax+48h], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	byte ptr [eax+4Ch], 1
		mov	[eax+50h], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	[eax+54h], edx
		lock inc dword ptr [edx]
		setnz	cl
		fldz
		fst	qword ptr [eax+68h]
		mov	dword ptr [eax+58h], 1
		fst	qword ptr [eax+60h]
		fst	qword ptr [eax+78h]
		fstp	qword ptr [eax+70h]
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71023220	proc near		; CODE XREF: sub_71013AD0+63Ap

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 3Ch
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_C], esi
		mov	esi, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_10], ebx
		mov	[esp+3Ch+var_8], edi
		mov	[esp+3Ch+var_4], ebp
		mov	ebx, [eax]
		cmp	[esi+38h], ebx
		jz	short loc_71023265
		lea	edi, [esi+38h]
		lock inc dword ptr [ebx]
		setnz	al
		mov	eax, [esi+38h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_710232F0

loc_7102325C:				; CODE XREF: sub_71023220+DFj
		mov	[esi+38h], ebx
		test	byte ptr [ebx+10h], 1
		jz	short loc_71023280

loc_71023265:				; CODE XREF: sub_71023220+20j
					; sub_71023220+B6j ...
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71023280:				; CODE XREF: sub_71023220+43j
		mov	eax, [ebx+4]
		mov	ebp, [ebx+8]
		mov	[esp+3Ch+var_3C], edi
		mov	[esp+3Ch+var_38], eax
		call	ds:_ZN9QListData6detachEi
		mov	[esp+3Ch+var_20], eax
		mov	edx, [esi+38h]
		mov	ecx, [edx+0Ch]
		lea	esi, [edx+ecx*4+14h]
		mov	ecx, [edx+8]
		lea	edx, [edx+ecx*4+14h]
		cmp	esi, edx
		jz	short loc_710232CA
		lea	ebx, [ebx+ebp*4+14h]
		jmp	short loc_710232B5
; ---------------------------------------------------------------------------

loc_710232B2:				; CODE XREF: sub_71023220+A8j
		add	ebx, 4

loc_710232B5:				; CODE XREF: sub_71023220+90j
		test	edx, edx
		jz	short loc_710232C3
		mov	ecx, [ebx]
		mov	[edx], ecx
		lock inc dword ptr [ecx]
		setnz	al

loc_710232C3:				; CODE XREF: sub_71023220+97j
		add	edx, 4
		cmp	esi, edx
		jnz	short loc_710232B2

loc_710232CA:				; CODE XREF: sub_71023220+8Aj
		mov	eax, [esp+3Ch+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71023265
		mov	[esp+3Ch+var_38], eax
		mov	[esp+3Ch+var_3C], edi
		call	sub_710459F0
		jmp	loc_71023265
; ---------------------------------------------------------------------------
		align 10h

loc_710232F0:				; CODE XREF: sub_71023220+36j
		mov	eax, [esi+38h]
		mov	[esp+3Ch+var_3C], edi
		mov	[esp+3Ch+var_38], eax
		call	sub_710459F0
		jmp	loc_7102325C
sub_71023220	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71023310	proc near		; CODE XREF: sub_71013AD0+68Ep

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 3Ch
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_C], esi
		mov	esi, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_10], ebx
		mov	[esp+3Ch+var_8], edi
		mov	[esp+3Ch+var_4], ebp
		mov	ebx, [eax]
		cmp	[esi+48h], ebx
		jz	short loc_71023355
		lea	edi, [esi+48h]
		lock inc dword ptr [ebx]
		setnz	al
		mov	eax, [esi+48h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_710233E0

loc_7102334C:				; CODE XREF: sub_71023310+DFj
		mov	[esi+48h], ebx
		test	byte ptr [ebx+10h], 1
		jz	short loc_71023370

loc_71023355:				; CODE XREF: sub_71023310+20j
					; sub_71023310+B6j ...
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71023370:				; CODE XREF: sub_71023310+43j
		mov	eax, [ebx+4]
		mov	ebp, [ebx+8]
		mov	[esp+3Ch+var_3C], edi
		mov	[esp+3Ch+var_38], eax
		call	ds:_ZN9QListData6detachEi
		mov	[esp+3Ch+var_20], eax
		mov	edx, [esi+48h]
		mov	ecx, [edx+0Ch]
		lea	esi, [edx+ecx*4+14h]
		mov	ecx, [edx+8]
		lea	edx, [edx+ecx*4+14h]
		cmp	esi, edx
		jz	short loc_710233BA
		lea	ebx, [ebx+ebp*4+14h]
		jmp	short loc_710233A5
; ---------------------------------------------------------------------------

loc_710233A2:				; CODE XREF: sub_71023310+A8j
		add	ebx, 4

loc_710233A5:				; CODE XREF: sub_71023310+90j
		test	edx, edx
		jz	short loc_710233B3
		mov	ecx, [ebx]
		mov	[edx], ecx
		lock inc dword ptr [ecx]
		setnz	al

loc_710233B3:				; CODE XREF: sub_71023310+97j
		add	edx, 4
		cmp	esi, edx
		jnz	short loc_710233A2

loc_710233BA:				; CODE XREF: sub_71023310+8Aj
		mov	eax, [esp+3Ch+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71023355
		mov	[esp+3Ch+var_38], eax
		mov	[esp+3Ch+var_3C], edi
		call	sub_710459F0
		jmp	loc_71023355
; ---------------------------------------------------------------------------
		align 10h

loc_710233E0:				; CODE XREF: sub_71023310+36j
		mov	eax, [esi+48h]
		mov	[esp+3Ch+var_3C], edi
		mov	[esp+3Ch+var_38], eax
		call	sub_710459F0
		jmp	loc_7102334C
sub_71023310	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71023400	proc near		; CODE XREF: sub_71013AD0+664p

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 3Ch
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_C], esi
		mov	esi, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_10], ebx
		mov	[esp+3Ch+var_8], edi
		mov	[esp+3Ch+var_4], ebp
		mov	ebx, [eax]
		cmp	[esi+40h], ebx
		jz	short loc_71023445
		lea	edi, [esi+40h]
		lock inc dword ptr [ebx]
		setnz	al
		mov	eax, [esi+40h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_710234D0

loc_7102343C:				; CODE XREF: sub_71023400+DFj
		mov	[esi+40h], ebx
		test	byte ptr [ebx+10h], 1
		jz	short loc_71023460

loc_71023445:				; CODE XREF: sub_71023400+20j
					; sub_71023400+B6j ...
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71023460:				; CODE XREF: sub_71023400+43j
		mov	eax, [ebx+4]
		mov	ebp, [ebx+8]
		mov	[esp+3Ch+var_3C], edi
		mov	[esp+3Ch+var_38], eax
		call	ds:_ZN9QListData6detachEi
		mov	[esp+3Ch+var_20], eax
		mov	edx, [esi+40h]
		mov	ecx, [edx+0Ch]
		lea	esi, [edx+ecx*4+14h]
		mov	ecx, [edx+8]
		lea	edx, [edx+ecx*4+14h]
		cmp	esi, edx
		jz	short loc_710234AA
		lea	ebx, [ebx+ebp*4+14h]
		jmp	short loc_71023495
; ---------------------------------------------------------------------------

loc_71023492:				; CODE XREF: sub_71023400+A8j
		add	ebx, 4

loc_71023495:				; CODE XREF: sub_71023400+90j
		test	edx, edx
		jz	short loc_710234A3
		mov	ecx, [ebx]
		mov	[edx], ecx
		lock inc dword ptr [ecx]
		setnz	al

loc_710234A3:				; CODE XREF: sub_71023400+97j
		add	edx, 4
		cmp	esi, edx
		jnz	short loc_71023492

loc_710234AA:				; CODE XREF: sub_71023400+8Aj
		mov	eax, [esp+3Ch+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71023445
		mov	[esp+3Ch+var_38], eax
		mov	[esp+3Ch+var_3C], edi
		call	sub_710459F0
		jmp	loc_71023445
; ---------------------------------------------------------------------------
		align 10h

loc_710234D0:				; CODE XREF: sub_71023400+36j
		mov	eax, [esi+40h]
		mov	[esp+3Ch+var_3C], edi
		mov	[esp+3Ch+var_38], eax
		call	sub_710459F0
		jmp	loc_7102343C
sub_71023400	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710234F0	proc near		; CODE XREF: sub_71013AD0+64Fp

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 3Ch
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_C], esi
		mov	esi, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_10], ebx
		mov	[esp+3Ch+var_8], edi
		mov	[esp+3Ch+var_4], ebp
		mov	ebx, [eax]
		cmp	[esi+3Ch], ebx
		jz	short loc_71023535
		lea	edi, [esi+3Ch]
		lock inc dword ptr [ebx]
		setnz	al
		mov	eax, [esi+3Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_710235C0

loc_7102352C:				; CODE XREF: sub_710234F0+DFj
		mov	[esi+3Ch], ebx
		test	byte ptr [ebx+10h], 1
		jz	short loc_71023550

loc_71023535:				; CODE XREF: sub_710234F0+20j
					; sub_710234F0+B6j ...
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71023550:				; CODE XREF: sub_710234F0+43j
		mov	eax, [ebx+4]
		mov	ebp, [ebx+8]
		mov	[esp+3Ch+var_3C], edi
		mov	[esp+3Ch+var_38], eax
		call	ds:_ZN9QListData6detachEi
		mov	[esp+3Ch+var_20], eax
		mov	edx, [esi+3Ch]
		mov	ecx, [edx+0Ch]
		lea	esi, [edx+ecx*4+14h]
		mov	ecx, [edx+8]
		lea	edx, [edx+ecx*4+14h]
		cmp	esi, edx
		jz	short loc_7102359A
		lea	ebx, [ebx+ebp*4+14h]
		jmp	short loc_71023585
; ---------------------------------------------------------------------------

loc_71023582:				; CODE XREF: sub_710234F0+A8j
		add	ebx, 4

loc_71023585:				; CODE XREF: sub_710234F0+90j
		test	edx, edx
		jz	short loc_71023593
		mov	ecx, [ebx]
		mov	[edx], ecx
		lock inc dword ptr [ecx]
		setnz	al

loc_71023593:				; CODE XREF: sub_710234F0+97j
		add	edx, 4
		cmp	esi, edx
		jnz	short loc_71023582

loc_7102359A:				; CODE XREF: sub_710234F0+8Aj
		mov	eax, [esp+3Ch+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71023535
		mov	[esp+3Ch+var_38], eax
		mov	[esp+3Ch+var_3C], edi
		call	sub_710459F0
		jmp	loc_71023535
; ---------------------------------------------------------------------------
		align 10h

loc_710235C0:				; CODE XREF: sub_710234F0+36j
		mov	eax, [esi+3Ch]
		mov	[esp+3Ch+var_3C], edi
		mov	[esp+3Ch+var_38], eax
		call	sub_710459F0
		jmp	loc_7102352C
sub_710234F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710235E0	proc near		; CODE XREF: sub_7100CAD0+C7p
					; sub_7100CAD0+18Cp

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 14h
		mov	ecx, [esp+1Ch+arg_0]
		mov	eax, [esp+1Ch+arg_4]
		test	ecx, ecx
		jz	short loc_7102360E
		mov	ebx, ecx

loc_710235F3:				; CODE XREF: sub_710235E0+2Cj
		cmp	eax, 0Bh	; switch 12 cases
		ja	short loc_71023607 ; jumptable 710235F8	default	case
		jmp	ds:off_71059DE0[eax*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_71023600:				; CODE XREF: sub_710235E0+18j
					; DATA XREF: .rdata:off_71059DE0o
		mov	edx, [ebx+2Ch]	; jumptable 710235F8 case 10
		test	edx, edx
		jnz	short loc_7102361D

loc_71023607:				; CODE XREF: sub_710235E0+16j
					; sub_710235E0+3Bj ...
		mov	ebx, [ebx+34h]	; jumptable 710235F8 default case
		test	ebx, ebx
		jnz	short loc_710235F3

loc_7102360E:				; CODE XREF: sub_710235E0+Fj
		xor	eax, eax

loc_71023610:				; CODE XREF: sub_710235E0+75j
					; sub_710235E0+100j
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_71023616:				; CODE XREF: sub_710235E0+18j
					; DATA XREF: .rdata:off_71059DE0o
		mov	edx, [ebx+24h]	; jumptable 710235F8 case 9
		test	edx, edx
		jz	short loc_71023607 ; jumptable 710235F8	default	case

loc_7102361D:				; CODE XREF: sub_710235E0+25j
		mov	eax, edx

loc_7102361F:				; CODE XREF: sub_710235E0+80j
					; sub_710235E0+8Bj ...
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_71023625:				; CODE XREF: sub_710235E0+18j
					; DATA XREF: .rdata:off_71059DE0o
		mov	edx, [ebx+28h]	; jumptable 710235F8 case 8
		mov	esi, [edx+8]
		cmp	[edx+0Ch], esi
		jz	short loc_71023607 ; jumptable 710235F8	default	case
		mov	eax, [edx]
		cmp	eax, 1
		jz	short loc_7102364F
		mov	eax, [edx+4]
		mov	[esp+1Ch+var_18], eax
		lea	eax, [ebx+28h]
		mov	[esp+1Ch+var_1C], eax
		call	sub_71044AC0
		mov	edx, [ebx+28h]
		mov	esi, [edx+8]

loc_7102364F:				; CODE XREF: sub_710235E0+55j
		mov	eax, [edx+esi*4+14h]
		mov	eax, [eax]
		jmp	short loc_71023610
; ---------------------------------------------------------------------------

loc_71023657:				; CODE XREF: sub_710235E0+18j
					; DATA XREF: .rdata:off_71059DE0o
		mov	edx, [ebx+20h]	; jumptable 710235F8 case 7
		test	edx, edx
		jz	short loc_71023607 ; jumptable 710235F8	default	case
		mov	eax, edx
		jmp	short loc_7102361F
; ---------------------------------------------------------------------------

loc_71023662:				; CODE XREF: sub_710235E0+18j
					; DATA XREF: .rdata:off_71059DE0o
		mov	edx, [ebx+1Ch]	; jumptable 710235F8 case 6
		test	edx, edx
		jz	short loc_71023607 ; jumptable 710235F8	default	case
		mov	eax, edx
		jmp	short loc_7102361F
; ---------------------------------------------------------------------------
		align 10h

loc_71023670:				; CODE XREF: sub_710235E0+18j
					; DATA XREF: .rdata:off_71059DE0o
		mov	edx, [ebx+18h]	; jumptable 710235F8 case 5
		test	edx, edx
		jz	short loc_71023607 ; jumptable 710235F8	default	case
		mov	eax, edx
		jmp	short loc_7102361F
; ---------------------------------------------------------------------------
		align 10h

loc_71023680:				; CODE XREF: sub_710235E0+18j
					; DATA XREF: .rdata:off_71059DE0o
		mov	edx, [ebx+14h]	; jumptable 710235F8 case 4
		test	edx, edx
		jz	short loc_71023607 ; jumptable 710235F8	default	case
		mov	eax, edx
		jmp	short loc_7102361F
; ---------------------------------------------------------------------------
		align 10h

loc_71023690:				; CODE XREF: sub_710235E0+18j
					; DATA XREF: .rdata:off_71059DE0o
		mov	edx, [ebx+10h]	; jumptable 710235F8 case 3
		test	edx, edx
		jz	loc_71023607	; jumptable 710235F8 default case
		mov	eax, edx
		lea	esi, [esi+0]
		jmp	loc_7102361F
; ---------------------------------------------------------------------------

loc_710236A5:				; CODE XREF: sub_710235E0+18j
					; DATA XREF: .rdata:off_71059DE0o
		mov	edx, [ebx+4]	; jumptable 710235F8 case 0
		test	edx, edx
		jz	loc_71023607	; jumptable 710235F8 default case
		mov	eax, edx
		jmp	loc_7102361F
; ---------------------------------------------------------------------------

loc_710236B7:				; CODE XREF: sub_710235E0+18j
					; DATA XREF: .rdata:off_71059DE0o
		mov	edx, [ebx+30h]	; jumptable 710235F8 case 11
		test	edx, edx
		jz	loc_71023607	; jumptable 710235F8 default case
		mov	eax, edx
		jmp	loc_7102361F
; ---------------------------------------------------------------------------
		align 10h

loc_710236D0:				; CODE XREF: sub_710235E0+18j
					; DATA XREF: .rdata:off_71059DE0o
		mov	edx, [ecx+0Ch]	; jumptable 710235F8 case 2
		test	edx, edx
		jz	loc_71023607	; jumptable 710235F8 default case
		mov	eax, [ebx+0Ch]
		xchg	ax, ax
		jmp	loc_71023610
; ---------------------------------------------------------------------------

loc_710236E5:				; CODE XREF: sub_710235E0+18j
					; DATA XREF: .rdata:off_71059DE0o
		mov	edx, [ebx+8]	; jumptable 710235F8 case 1
		test	edx, edx
		jz	loc_71023607	; jumptable 710235F8 default case
		mov	eax, edx
		jmp	loc_7102361F
sub_710235E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71023700	proc near		; CODE XREF: sub_7100A6C0+265p
					; sub_71010720+E0p ...

var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_710535EC
		mov	[ebp+var_28], offset sub_71023A2E
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+10h]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	eax
		cmp	eax, 0Bh	; switch 12 cases
		jbe	short loc_71023770
		mov	dword ptr [esp], offset	aQsvgnodeTrying	; jumptable 71023770 default case
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_Z6qDebugPKcz
		lea	esi, [esi+0]

loc_71023760:				; CODE XREF: sub_71023700+A0j
					; sub_71023700+CBj ...
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71023770:				; CODE XREF: sub_71023700+46j
		jmp	ds:off_71059E40[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_71023777:				; CODE XREF: sub_71023700:loc_71023770j
					; DATA XREF: .rdata:off_71059E40o
		mov	edx, [ebp+arg_0] ; jumptable 71023770 case 10
		mov	ecx, [ebp+arg_4]
		mov	eax, [edx+2Ch]
		add	dword ptr [ecx+4], 1
		test	eax, eax
		jz	short loc_71023797
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_7103C490

loc_71023797:				; CODE XREF: sub_71023700+86j
		mov	eax, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		mov	[ecx+2Ch], eax
		jmp	short loc_71023760
; ---------------------------------------------------------------------------

loc_710237A2:				; CODE XREF: sub_71023700:loc_71023770j
					; DATA XREF: .rdata:off_71059E40o
		mov	ecx, [ebp+arg_0] ; jumptable 71023770 case 11
		mov	edx, [ebp+arg_4]
		mov	eax, [ecx+30h]
		add	dword ptr [edx+4], 1
		test	eax, eax
		jz	short loc_710237C2
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_7103C490

loc_710237C2:				; CODE XREF: sub_71023700+B1j
		mov	edx, [ebp+arg_4]
		mov	eax, [ebp+arg_0]
		mov	[eax+30h], edx
		jmp	short loc_71023760
; ---------------------------------------------------------------------------
		align 10h

loc_710237D0:				; CODE XREF: sub_71023700:loc_71023770j
					; DATA XREF: .rdata:off_71059E40o
		mov	edx, [ebp+arg_0] ; jumptable 71023770 case 0
		mov	ecx, [ebp+arg_4]
		mov	eax, [edx+4]
		add	dword ptr [ecx+4], 1
		test	eax, eax
		jz	short loc_710237F0
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_7103C490

loc_710237F0:				; CODE XREF: sub_71023700+DFj
		mov	eax, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		mov	[ecx+4], eax
		jmp	loc_71023760
; ---------------------------------------------------------------------------
		align 10h

loc_71023800:				; CODE XREF: sub_71023700:loc_71023770j
					; DATA XREF: .rdata:off_71059E40o
		mov	ecx, [ebp+arg_0] ; jumptable 71023770 case 1
		mov	edx, [ebp+arg_4]
		mov	eax, [ecx+8]
		add	dword ptr [edx+4], 1
		test	eax, eax
		jz	short loc_71023820
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_7103C490

loc_71023820:				; CODE XREF: sub_71023700+10Fj
		mov	edx, [ebp+arg_4]
		mov	eax, [ebp+arg_0]
		mov	[eax+8], edx
		jmp	loc_71023760
; ---------------------------------------------------------------------------
		align 10h

loc_71023830:				; CODE XREF: sub_71023700:loc_71023770j
					; DATA XREF: .rdata:off_71059E40o
		mov	edx, [ebp+arg_0] ; jumptable 71023770 case 2
		mov	ecx, [ebp+arg_4]
		mov	eax, [edx+0Ch]
		add	dword ptr [ecx+4], 1
		test	eax, eax
		jz	short loc_71023850
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_7103C490

loc_71023850:				; CODE XREF: sub_71023700+13Fj
		mov	eax, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		mov	[ecx+0Ch], eax
		jmp	loc_71023760
; ---------------------------------------------------------------------------
		align 10h

loc_71023860:				; CODE XREF: sub_71023700:loc_71023770j
					; DATA XREF: .rdata:off_71059E40o
		mov	ecx, [ebp+arg_0] ; jumptable 71023770 case 3
		mov	edx, [ebp+arg_4]
		mov	eax, [ecx+10h]
		add	dword ptr [edx+4], 1
		test	eax, eax
		jz	short loc_71023880
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_7103C490

loc_71023880:				; CODE XREF: sub_71023700+16Fj
		mov	edx, [ebp+arg_4]
		mov	eax, [ebp+arg_0]
		mov	[eax+10h], edx
		jmp	loc_71023760
; ---------------------------------------------------------------------------
		align 10h

loc_71023890:				; CODE XREF: sub_71023700:loc_71023770j
					; DATA XREF: .rdata:off_71059E40o
		mov	edx, [ebp+arg_0] ; jumptable 71023770 case 4
		mov	ecx, [ebp+arg_4]
		mov	eax, [edx+14h]
		add	dword ptr [ecx+4], 1
		test	eax, eax
		jz	short loc_710238B0
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_7103C490

loc_710238B0:				; CODE XREF: sub_71023700+19Fj
		mov	eax, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		mov	[ecx+14h], eax
		jmp	loc_71023760
; ---------------------------------------------------------------------------
		align 10h

loc_710238C0:				; CODE XREF: sub_71023700:loc_71023770j
					; DATA XREF: .rdata:off_71059E40o
		mov	ecx, [ebp+arg_0] ; jumptable 71023770 case 5
		mov	edx, [ebp+arg_4]
		mov	eax, [ecx+18h]
		add	dword ptr [edx+4], 1
		test	eax, eax
		jz	short loc_710238E0
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_7103C490

loc_710238E0:				; CODE XREF: sub_71023700+1CFj
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	[eax+18h], edx
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_71022510
		test	eax, eax
		jz	loc_71023760
		mov	ecx, [ebp+arg_8]
		mov	edx, [ecx]
		mov	edx, [edx+8]
		test	edx, edx
		jz	loc_71023760
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+18h]
		jmp	short loc_7102396E
; ---------------------------------------------------------------------------

loc_71023918:				; CODE XREF: sub_71023700:loc_71023770j
					; DATA XREF: .rdata:off_71059E40o
		mov	edx, [ebp+arg_0] ; jumptable 71023770 case 6
		mov	ecx, [ebp+arg_4]
		mov	eax, [edx+1Ch]
		add	dword ptr [ecx+4], 1
		test	eax, eax
		jz	short loc_71023938
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_7103C490

loc_71023938:				; CODE XREF: sub_71023700+227j
		mov	ecx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		mov	[ecx+1Ch], eax
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_71022510
		test	eax, eax
		jz	loc_71023760
		mov	ecx, [ebp+arg_8]
		mov	edx, [ecx]
		mov	ecx, [edx+8]
		test	ecx, ecx
		jz	loc_71023760
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+1Ch]

loc_7102396E:				; CODE XREF: sub_71023700+216j
		mov	[esp+8], edx
		mov	edx, [ebp+arg_8]
		mov	[esp], eax
		mov	[esp+4], edx
		call	_ZN16QSvgTinyDocument13addNamedStyleERK7QStringP21QSvgFillStyleProperty
		jmp	loc_71023760
; ---------------------------------------------------------------------------

loc_71023986:				; CODE XREF: sub_71023700:loc_71023770j
					; DATA XREF: .rdata:off_71059E40o
		mov	edx, [ebp+arg_0] ; jumptable 71023770 case 7
		mov	ecx, [ebp+arg_4]
		mov	eax, [edx+20h]
		add	dword ptr [ecx+4], 1
		test	eax, eax
		jz	short loc_710239A6
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_7103C490

loc_710239A6:				; CODE XREF: sub_71023700+295j
		mov	eax, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		mov	[ecx+20h], eax
		jmp	loc_71023760
; ---------------------------------------------------------------------------

loc_710239B4:				; CODE XREF: sub_71023700:loc_71023770j
					; DATA XREF: .rdata:off_71059E40o
		mov	ecx, [ebp+arg_4] ; jumptable 71023770 case 8
		lea	eax, [ebp+var_C]
		add	dword ptr [ecx+4], 1
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], ecx
		mov	[ebp+var_48], 1
		add	eax, 28h
		mov	[esp], eax
		call	sub_71044D00
		mov	eax, [ebp+var_C]
		test	eax, eax
		jz	loc_71023760
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_7103C490
		jmp	loc_71023760
; ---------------------------------------------------------------------------
		align 10h

loc_71023A00:				; CODE XREF: sub_71023700:loc_71023770j
					; DATA XREF: .rdata:off_71059E40o
		mov	ecx, [ebp+arg_0] ; jumptable 71023770 case 9
		mov	edx, [ebp+arg_4]
		mov	eax, [ecx+24h]
		add	dword ptr [edx+4], 1
		test	eax, eax
		jz	short loc_71023A20
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_7103C490

loc_71023A20:				; CODE XREF: sub_71023700+30Fj
		mov	edx, [ebp+arg_4]
		mov	eax, [ebp+arg_0]
		mov	[eax+24h], edx
		jmp	loc_71023760
sub_71023700	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71023A2E	proc near		; DATA XREF: sub_71023700+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	[ebp-50h], eax
		mov	eax, [ebp-0Ch]
		test	eax, eax
		jz	short loc_71023A4D
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_7103C490

loc_71023A4D:				; CODE XREF: sub_71023A2E+Ej
		mov	edx, [ebp-50h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_71023A2E	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71023A60	proc near		; DATA XREF: .rdata:off_7105DC28o

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_710535F2
		mov	[ebp+var_18], offset sub_71023C3B
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_7105DC28
		mov	eax, [edx+54h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71023B60

loc_71023AA9:				; CODE XREF: sub_71023A60+116j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+50h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71023C20

loc_71023ABD:				; CODE XREF: sub_71023A60+1D6j
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		add	ecx, 48h
		mov	eax, [edx+48h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71023C00

loc_71023AD7:				; CODE XREF: sub_71023A60+1B9j
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		add	ecx, 44h
		mov	eax, [edx+44h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71023BE0

loc_71023AF1:				; CODE XREF: sub_71023A60+199j
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		add	ecx, 40h
		mov	eax, [edx+40h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71023BC0

loc_71023B0B:				; CODE XREF: sub_71023A60+179j
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		add	ecx, 3Ch
		mov	eax, [edx+3Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71023BA0

loc_71023B21:				; CODE XREF: sub_71023A60+159j
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		add	ecx, 38h
		mov	eax, [edx+38h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71023B80

loc_71023B37:				; CODE XREF: sub_71023A60+139j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		add	eax, 4
		mov	[esp], eax
		call	sub_71028A80
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71023B60:				; CODE XREF: sub_71023A60+43j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+54h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71023AA9
; ---------------------------------------------------------------------------
		align 10h

loc_71023B80:				; CODE XREF: sub_71023A60+D5j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+38h]
		mov	[esp], ecx
		mov	[ebp+var_38], 7
		mov	[esp+4], eax
		call	sub_710459F0
		jmp	short loc_71023B37
; ---------------------------------------------------------------------------
		align 10h

loc_71023BA0:				; CODE XREF: sub_71023A60+BFj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+3Ch]
		mov	[esp], ecx
		mov	[ebp+var_38], 6
		mov	[esp+4], eax
		call	sub_710459F0
		jmp	loc_71023B21
; ---------------------------------------------------------------------------
		align 10h

loc_71023BC0:				; CODE XREF: sub_71023A60+A5j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+40h]
		mov	[esp], ecx
		mov	[ebp+var_38], 5
		mov	[esp+4], eax
		call	sub_710459F0
		jmp	loc_71023B0B
; ---------------------------------------------------------------------------
		align 10h

loc_71023BE0:				; CODE XREF: sub_71023A60+8Bj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+44h]
		mov	[esp], ecx
		mov	[ebp+var_38], 4
		mov	[esp+4], eax
		call	sub_710459F0
		jmp	loc_71023AF1
; ---------------------------------------------------------------------------
		align 10h

loc_71023C00:				; CODE XREF: sub_71023A60+71j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+48h]
		mov	[esp], ecx
		mov	[ebp+var_38], 3
		mov	[esp+4], eax
		call	sub_710459F0
		jmp	loc_71023AD7
; ---------------------------------------------------------------------------
		align 10h

loc_71023C20:				; CODE XREF: sub_71023A60+57j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+50h]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71023ABD
sub_71023A60	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71023C3B	proc near		; DATA XREF: sub_71023A60+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-44h], edx
		jz	short loc_71023CA5
		cmp	eax, 2
		jz	short loc_71023CBA
		cmp	eax, 3
		jz	short loc_71023CCF
		cmp	eax, 4
		jz	loc_71023CE4
		cmp	eax, 5
		jz	loc_71023CF9
		cmp	eax, 6
		nop
		lea	esi, [esi+0]
		jz	loc_71023D0E
		mov	[ebp-40h], edx
		mov	edx, [ebp+8]
		mov	eax, [edx+50h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71023C9F
		mov	edx, [ebp+8]
		mov	eax, [edx+50h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_71023C9F:				; CODE XREF: sub_71023C3B+4Cj
		mov	eax, [ebp-40h]
		mov	[ebp-44h], eax

loc_71023CA5:				; CODE XREF: sub_71023C3B+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 48h
		mov	[esp+0], eax
		call	sub_7103BBF0

loc_71023CBA:				; CODE XREF: sub_71023C3B+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 44h
		mov	[esp+0], eax
		call	sub_7103BBF0

loc_71023CCF:				; CODE XREF: sub_71023C3B+19j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 40h
		mov	[esp+0], eax
		call	sub_7103BBF0

loc_71023CE4:				; CODE XREF: sub_71023C3B+1Ej
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 3Ch
		mov	[esp+0], eax
		call	sub_7103BBF0

loc_71023CF9:				; CODE XREF: sub_71023C3B+27j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 38h
		mov	[esp+0], eax
		call	sub_7103BBF0

loc_71023D0E:				; CODE XREF: sub_71023C3B+35j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 4
		mov	[esp+0], eax
		call	sub_71028A80
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71023C3B	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71023D40	proc near		; CODE XREF: .text:71002037p
					; sub_71002E9B+16p ...

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053604
		mov	[ebp+var_18], offset sub_71023F1B
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_7105DC28
		mov	eax, [edx+54h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71023E40

loc_71023D89:				; CODE XREF: sub_71023D40+116j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+50h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71023F00

loc_71023D9D:				; CODE XREF: sub_71023D40+1D6j
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		add	ecx, 48h
		mov	eax, [edx+48h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71023EE0

loc_71023DB7:				; CODE XREF: sub_71023D40+1B9j
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		add	ecx, 44h
		mov	eax, [edx+44h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71023EC0

loc_71023DD1:				; CODE XREF: sub_71023D40+199j
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		add	ecx, 40h
		mov	eax, [edx+40h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71023EA0

loc_71023DEB:				; CODE XREF: sub_71023D40+179j
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		add	ecx, 3Ch
		mov	eax, [edx+3Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71023E80

loc_71023E01:				; CODE XREF: sub_71023D40+159j
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		add	ecx, 38h
		mov	eax, [edx+38h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71023E60

loc_71023E17:				; CODE XREF: sub_71023D40+139j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		add	eax, 4
		mov	[esp], eax
		call	sub_71028A80
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71023E40:				; CODE XREF: sub_71023D40+43j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+54h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71023D89
; ---------------------------------------------------------------------------
		align 10h

loc_71023E60:				; CODE XREF: sub_71023D40+D5j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+38h]
		mov	[esp], ecx
		mov	[ebp+var_38], 7
		mov	[esp+4], eax
		call	sub_710459F0
		jmp	short loc_71023E17
; ---------------------------------------------------------------------------
		align 10h

loc_71023E80:				; CODE XREF: sub_71023D40+BFj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+3Ch]
		mov	[esp], ecx
		mov	[ebp+var_38], 6
		mov	[esp+4], eax
		call	sub_710459F0
		jmp	loc_71023E01
; ---------------------------------------------------------------------------
		align 10h

loc_71023EA0:				; CODE XREF: sub_71023D40+A5j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+40h]
		mov	[esp], ecx
		mov	[ebp+var_38], 5
		mov	[esp+4], eax
		call	sub_710459F0
		jmp	loc_71023DEB
; ---------------------------------------------------------------------------
		align 10h

loc_71023EC0:				; CODE XREF: sub_71023D40+8Bj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+44h]
		mov	[esp], ecx
		mov	[ebp+var_38], 4
		mov	[esp+4], eax
		call	sub_710459F0
		jmp	loc_71023DD1
; ---------------------------------------------------------------------------
		align 10h

loc_71023EE0:				; CODE XREF: sub_71023D40+71j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+48h]
		mov	[esp], ecx
		mov	[ebp+var_38], 3
		mov	[esp+4], eax
		call	sub_710459F0
		jmp	loc_71023DB7
; ---------------------------------------------------------------------------
		align 10h

loc_71023F00:				; CODE XREF: sub_71023D40+57j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+50h]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71023D9D
sub_71023D40	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71023F1B	proc near		; DATA XREF: sub_71023D40+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-44h], edx
		jz	short loc_71023F85
		cmp	eax, 2
		jz	short loc_71023F9A
		cmp	eax, 3
		jz	short loc_71023FAF
		cmp	eax, 4
		jz	loc_71023FC4
		cmp	eax, 5
		jz	loc_71023FD9
		cmp	eax, 6
		nop
		lea	esi, [esi+0]
		jz	loc_71023FEE
		mov	[ebp-40h], edx
		mov	edx, [ebp+8]
		mov	eax, [edx+50h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71023F7F
		mov	edx, [ebp+8]
		mov	eax, [edx+50h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_71023F7F:				; CODE XREF: sub_71023F1B+4Cj
		mov	eax, [ebp-40h]
		mov	[ebp-44h], eax

loc_71023F85:				; CODE XREF: sub_71023F1B+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 48h
		mov	[esp+0], eax
		call	sub_7103BBF0

loc_71023F9A:				; CODE XREF: sub_71023F1B+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 44h
		mov	[esp+0], eax
		call	sub_7103BBF0

loc_71023FAF:				; CODE XREF: sub_71023F1B+19j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 40h
		mov	[esp+0], eax
		call	sub_7103BBF0

loc_71023FC4:				; CODE XREF: sub_71023F1B+1Ej
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 3Ch
		mov	[esp+0], eax
		call	sub_7103BBF0

loc_71023FD9:				; CODE XREF: sub_71023F1B+27j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 38h
		mov	[esp+0], eax
		call	sub_7103BBF0

loc_71023FEE:				; CODE XREF: sub_71023F1B+35j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 4
		mov	[esp+0], eax
		call	sub_71028A80
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71023F1B	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71024020	proc near		; CODE XREF: sub_7100CAD0+F9p
					; sub_7100CAD0+1C6p ...

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_A		= word ptr -0Ah
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset word_71053616
		mov	[ebp+var_28], offset sub_7102410B
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_A]
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[ebp+var_A], 23h
		mov	dword ptr [esp+8], 1
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZNK7QString10startsWithERK5QCharN2Qt15CaseSensitivityE
		test	al, al
		jz	short loc_710240A5
		lea	eax, [ebp+var_10]
		mov	dword ptr [esp+8], 1
		mov	dword ptr [esp+4], 0
		mov	[esp], eax
		call	ds:_ZN7QString6removeEii

loc_710240A5:				; CODE XREF: sub_71024020+67j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	sub_71022510
		test	eax, eax
		mov	[ebp+var_50], 0
		jz	short loc_710240DB
		lea	edx, [ebp+var_10]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	_ZNK16QSvgTinyDocument10namedStyleERK7QString
		mov	[ebp+var_50], eax

loc_710240DB:				; CODE XREF: sub_71024020+A0j
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710240FB
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_710240FB:				; CODE XREF: sub_71024020+C6j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_50]
		leave
		retn
sub_71024020	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102410B	proc near		; DATA XREF: sub_71024020+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	[ebp-54h], eax
		mov	eax, [ebp-10h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71024134
		mov	eax, [ebp-10h]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_71024134:				; CODE XREF: sub_7102410B+14j
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7102410B	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71024150	proc near		; DATA XREF: .rdata:7105DB74o
		mov	eax, 1
		retn
sub_71024150	endp

; ---------------------------------------------------------------------------
		align 10h
; [00000002 BYTES: COLLAPSED FUNCTION nullsub_9]
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71024170	proc near		; DATA XREF: .rdata:7105DBD4o
		mov	eax, 2
		retn
sub_71024170	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71024180	proc near		; DATA XREF: .rdata:7105D4B4o
		mov	eax, 3
		retn
sub_71024180	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71024190	proc near		; CODE XREF: sub_71050DD0+35p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		mov	eax, [esp+8+arg_0]
		mov	esi, [esp+8+arg_4]
		mov	eax, [eax+80h]
		mov	ecx, [eax+8]
		mov	ebx, [eax+0Ch]
		add	ecx, 4
		lea	edx, [eax+ecx*4+4]
		lea	ebx, [eax+ebx*4+14h]
		cmp	edx, ebx
		jz	short loc_710241D2
		mov	eax, [eax+ecx*4+4]
		cmp	esi, eax
		jnz	short loc_710241C8
		jmp	short loc_710241D2
; ---------------------------------------------------------------------------
		align 10h

loc_710241C0:				; CODE XREF: sub_71024190+3Dj
		mov	ecx, [edx]
		cmp	ecx, esi
		jz	short loc_710241CF
		mov	eax, ecx

loc_710241C8:				; CODE XREF: sub_71024190+2Bj
		add	edx, 4
		cmp	edx, ebx
		jnz	short loc_710241C0

loc_710241CF:				; CODE XREF: sub_71024190+34j
					; sub_71024190+44j
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_710241D2:				; CODE XREF: sub_71024190+23j
					; sub_71024190+2Dj
		xor	eax, eax
		jmp	short loc_710241CF
sub_71024190	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710241E0	proc near		; CODE XREF: sub_7100E020+24Cp
					; _ZNK16QSvgTinyDocument13elementExistsERK7QString+12p	...

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_0]
		mov	ebx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], eax
		call	sub_71022510
		test	eax, eax
		jz	short loc_71024210
		mov	[esp+1Ch+arg_4], ebx
		mov	[esp+1Ch+arg_0], eax
		add	esp, 18h
		pop	ebx
		jmp	_ZNK16QSvgTinyDocument9namedNodeERK7QString
; ---------------------------------------------------------------------------
		align 10h

loc_71024210:				; CODE XREF: sub_710241E0+16j
		add	esp, 18h
		pop	ebx
		retn
sub_710241E0	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+20h]
		mov	eax, [esp+24h]
		mov	[esp], ebx
		mov	[esp+4], eax
		call	sub_71022420
		mov	eax, ds:_ZN9QListData11shared_nullE
		mov	dword ptr [ebx], offset	off_7105D988
		mov	[ebx+80h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, ds:_ZN9QHashData11shared_nullE
		mov	[ebx+84h], edx
		lock inc dword ptr [edx+8]
		setnz	cl
		mov	[ebx+88h], eax
		lock inc dword ptr [eax]
		setnz	dl
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71024280	proc near		; CODE XREF: sub_710242E0+13p
					; .text:71024323p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_71022420
		mov	eax, ds:_ZN9QListData11shared_nullE
		mov	dword ptr [ebx], offset	off_7105D988
		mov	[ebx+80h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, ds:_ZN9QHashData11shared_nullE
		mov	[ebx+84h], edx
		lock inc dword ptr [edx+8]
		setnz	cl
		mov	[ebx+88h], eax
		lock inc dword ptr [eax]
		setnz	dl
		add	esp, 18h
		pop	ebx
		retn
sub_71024280	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710242E0	proc near		; CODE XREF: sub_710075A0+59p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_71024280
		mov	dword ptr [ebx], offset	off_7105DBC8
		add	esp, 18h
		pop	ebx
		retn
sub_710242E0	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+20h]
		mov	eax, [esp+24h]
		mov	[esp], ebx
		mov	[esp+4], eax
		call	sub_71024280
		mov	dword ptr [ebx], offset	off_7105DBC8
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71024340	proc near		; CODE XREF: sub_71007500+59p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_71024280
		mov	dword ptr [ebx], offset	off_7105DB68
		add	esp, 18h
		pop	ebx
		retn
sub_71024340	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+20h]
		mov	eax, [esp+24h]
		mov	[esp], ebx
		mov	[esp+4], eax
		call	sub_71024280
		mov	dword ptr [ebx], offset	off_7105DB68
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710243A0	proc near		; CODE XREF: sub_71024773+44p
					; .text:710248A7p ...

var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_7105361C
		mov	[ebp+var_18], offset sub_710244A3
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+80h]
		mov	dword ptr [edx], offset	off_7105D988
		mov	edx, [eax+0Ch]
		lea	edx, [eax+edx*4+14h]
		mov	[ebp+var_44], edx
		mov	edx, [eax+8]
		lea	eax, [eax+edx*4+14h]
		cmp	[ebp+var_44], eax
		jz	short loc_7102441D
		mov	[ebp+var_40], eax

loc_710243F7:				; CODE XREF: sub_710243A0+7Bj
		mov	edx, [ebp+var_40]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_71024411
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 1
		call	eax

loc_71024411:				; CODE XREF: sub_710243A0+5Ej
		add	[ebp+var_40], 4
		mov	eax, [ebp+var_40]
		cmp	[ebp+var_44], eax
		jnz	short loc_710243F7

loc_7102441D:				; CODE XREF: sub_710243A0+52j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 2
		add	eax, 88h
		mov	[esp], eax
		call	sub_71046D30
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+84h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	short loc_71024480

loc_71024448:				; CODE XREF: sub_710243A0+101j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 4
		sub	eax, 0FFFFFF80h
		mov	[esp], eax
		call	sub_71047020
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_71023D40
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71024480:				; CODE XREF: sub_710243A0+A6j
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_71044A30
		mov	eax, [edx+84h]
		mov	[ebp+var_38], 3
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	short loc_71024448
sub_710243A0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710244A3	proc near		; DATA XREF: sub_710243A0+20o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-4Ch], edx
		jz	short loc_710244D5
		cmp	eax, 2
		jz	short loc_71024516
		cmp	eax, 3
		jz	short loc_7102452B
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 88h
		mov	[esp+0], eax
		call	sub_71046D30

loc_710244D5:				; CODE XREF: sub_710244A3+Fj
		mov	eax, [ebp-4Ch]
		mov	edx, [ebp+8]
		mov	[ebp-48h], eax
		mov	eax, [edx+84h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jnz	short loc_71024510
		mov	edx, [ebp+8]
		mov	[esp+arg_0], offset sub_71044A30
		mov	eax, [edx+84h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_71024510:				; CODE XREF: sub_710244A3+4Aj
		mov	eax, [ebp-48h]
		mov	[ebp-4Ch], eax

loc_71024516:				; CODE XREF: sub_710244A3+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		sub	eax, 0FFFFFF80h
		mov	[esp+0], eax
		call	sub_71047020

loc_7102452B:				; CODE XREF: sub_710244A3+19j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_71023D40
		mov	edx, [ebp-4Ch]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_710244A3	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71024550	proc near		; CODE XREF: sub_710246E0+81p
					; .text:71024851p

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= byte ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_24], esp
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71053628
		mov	[ebp+var_28], offset sub_710246A2
		call	_Unwind_SjLj_Register
		lea	edx, [ebp+var_C]
		mov	[esp], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QLocaleC1Ev
		lea	eax, [ebp+var_C]
		lea	edx, [ebp+var_10]
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZNK7QLocale4nameEv
		lea	eax, [ebp+var_10]
		mov	[ebp+var_48], 2
		sub	esp, 4
		mov	dword ptr [esp+0Ch], 1
		mov	word ptr [esp+8], 2Dh
		mov	word ptr [esp+4], 5Fh
		mov	[esp], eax
		call	ds:_ZN7QString7replaceE5QCharS0_N2Qt15CaseSensitivityE
		mov	edx, [ebp+arg_0]
		mov	[esp+4], eax
		add	edx, 8Ch
		mov	[ebp+var_50], edx
		mov	[esp], edx
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7102460A
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7102460A:				; CODE XREF: sub_71024550+A5j
		mov	edx, [ebp+var_50]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 0
		mov	word ptr [esp+4], 2Dh
		mov	[esp], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZNK7QString7indexOfE5QChariN2Qt15CaseSensitivityE
		lea	edx, [ebp+var_14]
		mov	dword ptr [esp+8], 0
		mov	[esp], edx
		mov	[esp+0Ch], eax
		mov	eax, [ebp+var_50]
		mov	[esp+4], eax
		call	ds:_ZNK7QString3midEii
		lea	eax, [ebp+var_14]
		mov	[ebp+var_48], 1
		sub	esp, 4
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 90h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71024695
		mov	eax, [ebp+var_14]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_71024695:				; CODE XREF: sub_71024550+130j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71024550	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710246A2	proc near		; DATA XREF: sub_71024550+23o
		add	ebp, 8
		mov	edx, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		lea	eax, [ebp-10h]
		mov	[ebp-54h], edx
		jz	short loc_710246B7
		lea	eax, [ebp-14h]

loc_710246B7:				; CODE XREF: sub_710246A2+10j
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_710477B0
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_710246A2	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710246E0	proc near		; CODE XREF: sub_71007040+59p

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053630
		mov	[ebp+var_18], offset sub_71024773
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_71024280
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D4A8
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[edx+8Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	[edx+90h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	sub_71024550
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_710246E0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71024773	proc near		; DATA XREF: sub_710246E0+20o
		add	ebp, 8
		mov	eax, [ebp+8]
		mov	edx, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 90h
		mov	[ebp-40h], edx
		mov	[esp+0], eax
		call	sub_710477B0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8Ch
		mov	[esp+0], eax
		call	sub_710477B0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_710243A0
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_71024773	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_710525B0
		mov	dword ptr [ebp-20h], offset word_71053636
		mov	dword ptr [ebp-18h], offset loc_71024863
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+0Ch]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_71024280
		mov	eax, [ebp+8]
		mov	edx, [ebp+8]
		mov	dword ptr [eax], offset	off_7105D4A8
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[edx+8Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+8]
		mov	[edx+90h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 1
		mov	[esp], eax
		call	sub_71024550
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71024863:				; DATA XREF: .text:710247F0o
		add	ebp, 8
		mov	eax, [ebp+8]
		mov	edx, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 90h
		mov	[ebp-40h], edx
		mov	[esp], eax
		call	sub_710477B0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8Ch
		mov	[esp], eax
		call	sub_710477B0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], eax
		call	sub_710243A0
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710248C0	proc near		; DATA XREF: .rdata:7105D4B8o
					; .rdata:7105D958o ...

var_8C		= byte ptr -8Ch
var_88		= dword	ptr -88h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 0A8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_6C], eax
		lea	eax, [ebp+var_8C]
		mov	[esp], eax
		mov	[ebp+var_74], offset sub_710525B0
		mov	[ebp+var_70], offset dword_7105364C
		mov	[ebp+var_68], offset sub_71024A3F
		mov	[ebp+var_64], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		fldz
		fst	qword ptr [edx+8]
		fst	qword ptr [edx]
		fst	qword ptr [edx+18h]
		fstp	qword ptr [edx+10h]
		mov	eax, [eax+80h]
		mov	[ebp+var_18], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_18]
		test	byte ptr [eax+10h], 1
		jz	loc_71024A1E

loc_71024924:				; CODE XREF: sub_710248C0+17Aj
		mov	edx, [ebp+var_18]
		mov	[ebp+var_14], 0
		mov	eax, [edx+8]
		mov	ecx, [edx+0Ch]
		lea	eax, [edx+eax*4+14h]
		lea	edx, [edx+ecx*4+14h]
		cmp	eax, edx
		mov	[ebp+var_10], eax
		mov	[ebp+var_C], edx
		jnz	short loc_71024959
		jmp	loc_710249F4
; ---------------------------------------------------------------------------
		align 10h

loc_71024950:				; CODE XREF: sub_710248C0+12Ej
		cmp	eax, [ebp+var_C]
		jz	loc_710249F4

loc_71024959:				; CODE XREF: sub_710248C0+84j
		mov	eax, [eax]
		mov	ecx, [ebp+arg_C]
		mov	edx, [eax]
		mov	[esp+0Ch], ecx
		mov	ecx, [ebp+arg_8]
		mov	[esp+4], eax
		lea	eax, [ebp+var_38]
		mov	[esp], eax
		mov	[esp+8], ecx
		mov	eax, [edx+14h]
		mov	[ebp+var_88], 1
		call	eax
		mov	ecx, [ebp+arg_0]
		sub	esp, 4
		lea	edx, [ebp+var_38]
		lea	eax, [ebp+var_58]
		mov	[esp+8], edx
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	[ebp+var_88], 1
		call	ds:_ZNK6QRectForERKS_
		mov	eax, [ebp+var_58]
		sub	esp, 4
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+var_14]
		mov	[ecx], eax
		mov	eax, [ebp+var_54]
		mov	[ecx+4], eax
		mov	eax, [ebp+var_50]
		mov	[ecx+8], eax
		mov	eax, [ebp+var_4C]
		mov	[ecx+0Ch], eax
		mov	eax, [ebp+var_48]
		mov	[ecx+10h], eax
		mov	eax, [ebp+var_44]
		mov	[ecx+14h], eax
		mov	eax, [ebp+var_40]
		mov	[ecx+18h], eax
		mov	eax, [ebp+var_3C]
		mov	[ecx+1Ch], eax
		mov	eax, [ebp+var_10]
		add	eax, 4
		test	edx, edx
		mov	[ebp+var_10], eax
		jz	loc_71024950

loc_710249F4:				; CODE XREF: sub_710248C0+86j
					; sub_710248C0+93j
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_88], 0FFFFFFFFh
		call	sub_71047020
		lea	eax, [ebp+var_8C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------

loc_71024A1E:				; CODE XREF: sub_710248C0+5Ej
		mov	eax, [eax+4]
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		call	sub_71046D60
		jmp	loc_71024924
sub_710248C0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71024A3F	proc near		; DATA XREF: sub_710248C0+26o
		add	ebp, 8
		mov	edx, [ebp-84h]
		lea	eax, [ebp-18h]
		mov	[ebp-90h], edx
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_71047020
		mov	ecx, [ebp-90h]
		mov	dword ptr [ebp-88h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
sub_71024A3F	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71024A80	proc near		; DATA XREF: .rdata:7105DB70o

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	esi, [esp+3Ch+arg_0]
		mov	eax, [esp+3Ch+arg_4]
		mov	edx, [esp+3Ch+arg_8]
		lea	ebp, [esi+80h]
		mov	[esp+3Ch+var_24], eax
		mov	[esp+3Ch+var_20], edx
		mov	eax, [esi+80h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_71024ABD
		mov	eax, [eax+4]
		mov	[esp+3Ch+var_3C], ebp
		mov	[esp+3Ch+var_38], eax
		call	sub_71046D60

loc_71024ABD:				; CODE XREF: sub_71024A80+2Cj
		mov	eax, [esi+80h]
		mov	edx, [eax+8]
		mov	[esp+3Ch+var_3C], esi
		lea	ebx, [eax+edx*4+14h]
		mov	eax, [esp+3Ch+var_20]
		mov	edx, [esp+3Ch+var_24]
		mov	[esp+3Ch+var_34], eax
		mov	[esp+3Ch+var_38], edx
		call	sub_710227B0
		jmp	short loc_71024AE7
; ---------------------------------------------------------------------------

loc_71024AE4:				; CODE XREF: sub_71024A80+9Aj
					; sub_71024A80+A7j ...
		add	ebx, 4

loc_71024AE7:				; CODE XREF: sub_71024A80+62j
		mov	eax, [esi+80h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_71024B03
		mov	eax, [eax+4]
		mov	[esp+3Ch+var_3C], ebp
		mov	[esp+3Ch+var_38], eax
		call	sub_71046D60

loc_71024B03:				; CODE XREF: sub_71024A80+72j
		mov	eax, [esi+80h]
		mov	edx, [eax+0Ch]
		lea	eax, [eax+edx*4+14h]
		cmp	ebx, eax
		jz	short loc_71024B43
		mov	edi, [ebx]
		cmp	byte ptr [edi+4Ch], 0
		jz	short loc_71024AE4
		mov	[esp+3Ch+var_3C], edi
		call	sub_710225E0
		cmp	eax, 10h
		jz	short loc_71024AE4
		mov	edx, [esp+3Ch+var_20]
		mov	eax, [edi]
		mov	[esp+3Ch+var_3C], edi
		mov	[esp+3Ch+var_34], edx
		mov	edx, [esp+3Ch+var_24]
		mov	[esp+3Ch+var_38], edx
		call	dword ptr [eax+8]
		jmp	short loc_71024AE4
; ---------------------------------------------------------------------------

loc_71024B43:				; CODE XREF: sub_71024A80+92j
		mov	eax, [esp+3Ch+var_20]
		mov	edx, [esp+3Ch+var_24]
		mov	[esp+3Ch+arg_0], esi
		mov	[esp+3Ch+arg_8], eax
		mov	[esp+3Ch+arg_4], edx
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	sub_71022790
sub_71024A80	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71024B70	proc near		; DATA XREF: .rdata:7105D4B0o

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	ebp, [esp+5Ch+arg_0]
		lea	eax, [ebp+80h]
		mov	[esp+5Ch+var_48], eax
		mov	eax, [ebp+80h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_71024BA5
		mov	eax, [eax+4]
		mov	edx, [esp+5Ch+var_48]
		mov	[esp+5Ch+var_58], eax
		mov	[esp+5Ch+var_5C], edx
		call	sub_71046D60

loc_71024BA5:				; CODE XREF: sub_71024B70+20j
		mov	eax, [ebp+80h]
		mov	edx, [eax+8]
		mov	[esp+5Ch+var_5C], ebp
		lea	ebx, [eax+edx*4+14h]
		mov	eax, [esp+5Ch+arg_8]
		mov	edx, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_54], eax
		mov	[esp+5Ch+var_58], edx
		call	sub_710227B0
		lea	eax, [ebp+90h]
		mov	[esp+5Ch+var_34], eax
		mov	[esp+5Ch+var_4C], ebx
		jmp	short loc_71024BE5
; ---------------------------------------------------------------------------
		align 10h

loc_71024BE0:				; CODE XREF: sub_71024B70+B6j
					; sub_71024B70+C3j ...
		add	[esp+5Ch+var_4C], 4

loc_71024BE5:				; CODE XREF: sub_71024B70+68j
		mov	eax, [ebp+80h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_71024C05
		mov	eax, [eax+4]
		mov	[esp+5Ch+var_58], eax
		mov	eax, [esp+5Ch+var_48]
		mov	[esp+5Ch+var_5C], eax
		call	sub_71046D60

loc_71024C05:				; CODE XREF: sub_71024B70+80j
		mov	eax, [ebp+80h]
		mov	edx, [eax+0Ch]
		lea	eax, [eax+edx*4+14h]
		cmp	[esp+5Ch+var_4C], eax
		jz	loc_71024E0F
		mov	edx, [esp+5Ch+var_4C]
		mov	esi, [edx]
		cmp	byte ptr [esi+4Ch], 0
		jz	short loc_71024BE0
		mov	[esp+5Ch+var_5C], esi
		call	sub_710225E0
		cmp	eax, 10h
		jz	short loc_71024BE0
		mov	[esp+5Ch+var_5C], esi
		call	sub_71022540
		mov	[esp+5Ch+var_5C], esi
		mov	edi, eax
		call	sub_71022550
		mov	[esp+5Ch+var_5C], esi
		mov	[esp+5Ch+var_44], eax
		call	sub_71022560
		mov	[esp+5Ch+var_5C], esi
		mov	[esp+5Ch+var_40], eax
		call	sub_71022570
		mov	[esp+5Ch+var_5C], esi
		mov	[esp+5Ch+var_38], eax
		call	sub_71022580
		mov	[esp+5Ch+var_3C], eax
		mov	eax, [edi]
		mov	ecx, [eax+0Ch]
		mov	edx, [eax+8]
		cmp	ecx, edx
		jz	loc_71024D50
		lea	edx, [eax+edx*4+10h]
		lea	ebx, [edx+4]
		lea	eax, [eax+ecx*4+14h]
		cmp	ebx, eax
		jz	loc_71024D50
		mov	eax, [edx+4]
		mov	ecx, [eax+8]
		cmp	ecx, 4Eh
		jg	loc_71024BE0
		cmp	ecx, 2Eh
		jle	loc_71024BE0
		mov	edx, [eax+0Ch]
		movzx	eax, word ptr [edx+5Ah]
		movzx	eax, ds:byte_7105A4C0[eax]
		mov	[esp+5Ch+var_30], eax
		movzx	eax, word ptr [edx+58h]
		movzx	edx, ds:byte_7105A4C0[eax]
		add	edx, [esp+5Ch+var_30]
		add	edx, ecx
		cmp	edx, 58h
		mov	ecx, edx
		ja	loc_71024BE0

loc_71024CD8:				; CODE XREF: sub_71024B70+1D9j
		mov	eax, ds:off_7105A340[ecx*4]
		mov	[esp+5Ch+var_5C], ebx
		mov	[esp+5Ch+var_20], eax
		lea	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_58], eax
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		jz	loc_71024BE0
		mov	eax, [edi]
		add	ebx, 4
		mov	edx, [eax+0Ch]
		lea	eax, [eax+edx*4+14h]
		cmp	ebx, eax
		jz	short loc_71024D50
		mov	edx, [ebx]
		mov	eax, [edx+8]
		cmp	eax, 4Eh
		jg	loc_71024BE0
		cmp	eax, 2Eh
		jle	loc_71024BE0
		mov	edx, [edx+0Ch]
		movzx	ecx, word ptr [edx+5Ah]
		movzx	edx, word ptr [edx+58h]
		movzx	ecx, ds:byte_7105A4C0[ecx]
		movzx	edx, ds:byte_7105A4C0[edx]
		add	ecx, edx
		add	ecx, eax
		cmp	ecx, 58h
		ja	loc_71024BE0
		jmp	short loc_71024CD8
; ---------------------------------------------------------------------------
		align 10h

loc_71024D50:				; CODE XREF: sub_71024B70+109j
					; sub_71024B70+11Cj ...
		mov	edx, [esp+5Ch+var_44]
		mov	eax, [edx]
		mov	ecx, [eax+0Ch]
		mov	edx, [eax+8]
		cmp	ecx, edx
		jz	short loc_71024D70
		lea	edx, [eax+edx*4+14h]
		lea	eax, [eax+ecx*4+14h]
		cmp	edx, eax
		jnz	loc_71024BE0

loc_71024D70:				; CODE XREF: sub_71024B70+1EEj
		mov	edx, [esp+5Ch+var_40]
		mov	eax, [edx]
		mov	edx, [eax+0Ch]
		mov	ecx, [eax+8]
		cmp	edx, ecx
		jz	short loc_71024DD3
		lea	ebx, [eax+ecx*4+14h]
		lea	eax, [eax+edx*4+14h]
		cmp	ebx, eax
		jz	loc_71024BE0
		mov	[esp+5Ch+var_44], ebp
		mov	edi, [esp+5Ch+var_34]
		mov	ebp, esi
		mov	esi, [esp+5Ch+var_40]
		jmp	short loc_71024DB4
; ---------------------------------------------------------------------------

loc_71024DA0:				; CODE XREF: sub_71024B70+25Bj
		mov	eax, [esi]
		add	ebx, 4
		mov	edx, [eax+0Ch]
		lea	eax, [eax+edx*4+14h]
		cmp	ebx, eax
		jz	loc_71024E30

loc_71024DB4:				; CODE XREF: sub_71024B70+22Ej
		mov	[esp+5Ch+var_54], 1
		mov	[esp+5Ch+var_58], edi
		mov	[esp+5Ch+var_5C], ebx
		call	ds:_ZNK7QString10startsWithERKS_N2Qt15CaseSensitivityE
		test	al, al
		jz	short loc_71024DA0
		mov	esi, ebp
		mov	ebp, [esp+5Ch+var_44]

loc_71024DD3:				; CODE XREF: sub_71024B70+20Ej
		mov	edx, [esp+5Ch+var_38]
		mov	eax, [edx]
		mov	edx, [eax+0Ch]
		cmp	edx, [eax+8]
		jnz	loc_71024BE0
		mov	edx, [esp+5Ch+var_3C]
		mov	eax, [edx]
		mov	edx, [eax+0Ch]
		cmp	edx, [eax+8]
		jnz	loc_71024BE0
		mov	edx, [esp+5Ch+arg_8]
		mov	eax, [esi]
		mov	[esp+5Ch+var_5C], esi
		mov	[esp+5Ch+var_54], edx
		mov	edx, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_58], edx
		call	dword ptr [eax+8]

loc_71024E0F:				; CODE XREF: sub_71024B70+A6j
		mov	edx, [esp+5Ch+arg_8]
		mov	eax, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_5C], ebp
		mov	[esp+5Ch+var_54], edx
		mov	[esp+5Ch+var_58], eax
		call	sub_71022790
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71024E30:				; CODE XREF: sub_71024B70+23Ej
		mov	ebp, [esp+5Ch+var_44]
		jmp	loc_71024BE0
sub_71024B70	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71024E40	proc near		; CODE XREF: sub_7101E100+243p
					; sub_7101E100+613p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_0]
		lea	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_18], eax
		lea	eax, [esi+80h]
		mov	[esp+1Ch+var_1C], eax
		call	sub_71046E70
		mov	eax, [ebx]
		mov	ecx, [eax+8]
		test	ecx, ecx
		jnz	short loc_71024E80

loc_71024E72:				; CODE XREF: sub_71024E40+4Aj
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71024E80:				; CODE XREF: sub_71024E40+30j
		mov	[esp+1Ch+var_1C], esi
		call	sub_71022510
		test	eax, eax
		jz	short loc_71024E72
		mov	edx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_18], ebx
		mov	[esp+1Ch+var_1C], eax
		mov	[esp+1Ch+var_14], edx
		call	_ZN16QSvgTinyDocument12addNamedNodeERK7QStringP8QSvgNode
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_71024E40	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71024EB0	proc near		; DATA XREF: .rdata:7105D98Co

var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053664
		mov	[ebp+var_18], offset sub_71024FBA
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+80h]
		mov	dword ptr [edx], offset	off_7105D988
		mov	edx, [eax+0Ch]
		lea	edx, [eax+edx*4+14h]
		mov	[ebp+var_44], edx
		mov	edx, [eax+8]
		lea	eax, [eax+edx*4+14h]
		cmp	[ebp+var_44], eax
		jz	short loc_71024F2D
		mov	[ebp+var_40], eax

loc_71024F07:				; CODE XREF: sub_71024EB0+7Bj
		mov	edx, [ebp+var_40]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_71024F21
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 1
		call	eax

loc_71024F21:				; CODE XREF: sub_71024EB0+5Ej
		add	[ebp+var_40], 4
		mov	eax, [ebp+var_40]
		cmp	[ebp+var_44], eax
		jnz	short loc_71024F07

loc_71024F2D:				; CODE XREF: sub_71024EB0+52j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 2
		add	eax, 88h
		mov	[esp], eax
		call	sub_71046D30
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+84h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	short loc_71024F97

loc_71024F58:				; CODE XREF: sub_71024EB0+108j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 4
		sub	eax, 0FFFFFF80h
		mov	[esp], eax
		call	sub_71047020
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_71023D40
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		call	sub_710517D0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71024F97:				; CODE XREF: sub_71024EB0+A6j
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_71044A30
		mov	eax, [edx+84h]
		mov	[ebp+var_38], 3
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	short loc_71024F58
sub_71024EB0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71024FBA	proc near		; DATA XREF: sub_71024EB0+20o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-4Ch], edx
		jz	short loc_71024FEC
		cmp	eax, 2
		jz	short loc_7102502D
		cmp	eax, 3
		jz	short loc_71025042
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 88h
		mov	[esp+0], eax
		call	sub_71046D30

loc_71024FEC:				; CODE XREF: sub_71024FBA+Fj
		mov	eax, [ebp-4Ch]
		mov	edx, [ebp+8]
		mov	[ebp-48h], eax
		mov	eax, [edx+84h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jnz	short loc_71025027
		mov	edx, [ebp+8]
		mov	[esp+arg_0], offset sub_71044A30
		mov	eax, [edx+84h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_71025027:				; CODE XREF: sub_71024FBA+4Aj
		mov	eax, [ebp-48h]
		mov	[ebp-4Ch], eax

loc_7102502D:				; CODE XREF: sub_71024FBA+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		sub	eax, 0FFFFFF80h
		mov	[esp+0], eax
		call	sub_71047020

loc_71025042:				; CODE XREF: sub_71024FBA+19j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_71023D40
		mov	edx, [ebp-4Ch]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_71024FBA	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71025070	proc near		; DATA XREF: .rdata:off_7105D988o

var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053670
		mov	[ebp+var_18], offset sub_71025173
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+80h]
		mov	dword ptr [edx], offset	off_7105D988
		mov	edx, [eax+0Ch]
		lea	edx, [eax+edx*4+14h]
		mov	[ebp+var_44], edx
		mov	edx, [eax+8]
		lea	eax, [eax+edx*4+14h]
		cmp	[ebp+var_44], eax
		jz	short loc_710250ED
		mov	[ebp+var_40], eax

loc_710250C7:				; CODE XREF: sub_71025070+7Bj
		mov	edx, [ebp+var_40]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_710250E1
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 1
		call	eax

loc_710250E1:				; CODE XREF: sub_71025070+5Ej
		add	[ebp+var_40], 4
		mov	eax, [ebp+var_40]
		cmp	[ebp+var_44], eax
		jnz	short loc_710250C7

loc_710250ED:				; CODE XREF: sub_71025070+52j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 2
		add	eax, 88h
		mov	[esp], eax
		call	sub_71046D30
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+84h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	short loc_71025150

loc_71025118:				; CODE XREF: sub_71025070+101j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 4
		sub	eax, 0FFFFFF80h
		mov	[esp], eax
		call	sub_71047020
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_71023D40
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71025150:				; CODE XREF: sub_71025070+A6j
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_71044A30
		mov	eax, [edx+84h]
		mov	[ebp+var_38], 3
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	short loc_71025118
sub_71025070	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71025173	proc near		; DATA XREF: sub_71025070+20o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-4Ch], edx
		jz	short loc_710251A5
		cmp	eax, 2
		jz	short loc_710251E6
		cmp	eax, 3
		jz	short loc_710251FB
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 88h
		mov	[esp+0], eax
		call	sub_71046D30

loc_710251A5:				; CODE XREF: sub_71025173+Fj
		mov	eax, [ebp-4Ch]
		mov	edx, [ebp+8]
		mov	[ebp-48h], eax
		mov	eax, [edx+84h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jnz	short loc_710251E0
		mov	edx, [ebp+8]
		mov	[esp+arg_0], offset sub_71044A30
		mov	eax, [edx+84h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_710251E0:				; CODE XREF: sub_71025173+4Aj
		mov	eax, [ebp-48h]
		mov	[ebp-4Ch], eax

loc_710251E6:				; CODE XREF: sub_71025173+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		sub	eax, 0FFFFFF80h
		mov	[esp+0], eax
		call	sub_71047020

loc_710251FB:				; CODE XREF: sub_71025173+19j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_71023D40
		mov	edx, [ebp-4Ch]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_71025173	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		fld1
		fst	qword ptr [eax]
		mov	dword ptr [eax+10h], 0
		fstp	qword ptr [eax+8]
		mov	dword ptr [eax+14h], 1
		fldz
		mov	dword ptr [eax+18h], 190h
		mov	dword ptr [eax+1Ch], 1
		fstp	qword ptr [eax+20h]
		mov	byte ptr [eax+28h], 0
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71025260	proc near		; CODE XREF: sub_71022860+C5p
					; _ZN16QSvgTinyDocumentC2Ev+FAp ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		fld1
		fst	qword ptr [eax]
		mov	dword ptr [eax+10h], 0
		fstp	qword ptr [eax+8]
		mov	dword ptr [eax+14h], 1
		fldz
		mov	dword ptr [eax+18h], 190h
		mov	dword ptr [eax+1Ch], 1
		fstp	qword ptr [eax+20h]
		mov	byte ptr [eax+28h], 0
		retn
sub_71025260	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		mov	dword ptr [eax], offset	off_7105D728
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710252B0	proc near		; DATA XREF: .rdata:7105D9A8o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		retn
sub_710252B0	endp

; ---------------------------------------------------------------------------
		align 10h
; [00000002 BYTES: COLLAPSED FUNCTION nullsub_3]
		align 10h
; [00000002 BYTES: COLLAPSED FUNCTION nullsub_4]
		align 10h
		mov	eax, [esp+4]
		mov	dword ptr [eax+4], 0
		mov	edx, [esp+8]
		mov	dword ptr [eax], offset	off_7105D928
		mov	[eax+8], edx
		retn
; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		mov	dword ptr [eax+4], 0
		mov	edx, [esp+8]
		mov	dword ptr [eax], offset	off_7105D928
		mov	[eax+8], edx
		retn
; ---------------------------------------------------------------------------
		align 10h
; [00000002 BYTES: COLLAPSED FUNCTION nullsub_1]
		align 10h
; [00000002 BYTES: COLLAPSED FUNCTION nullsub_2]
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71025340	proc near		; CODE XREF: sub_71010720+183p
					; sub_71010720+1D0p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		or	byte ptr [eax+34h], 2
		mov	edx, [esp+arg_4]
		mov	[eax+14h], edx
		retn
sub_71025340	endp


; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_71025350(int,	double)
sub_71025350	proc near		; CODE XREF: sub_71010720+449p

arg_0		= dword	ptr  4
arg_4		= qword	ptr  8

		mov	eax, [esp+arg_0]
		or	byte ptr [eax+34h], 4
		fld	[esp+arg_4]
		fstp	qword ptr [eax+20h]
		retn
sub_71025350	endp


; =============== S U B	R O U T	I N E =======================================


sub_71025360	proc near		; CODE XREF: sub_7100CAD0+1D9p
					; sub_71010720+3ACp

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		mov	edx, [esp+arg_4]
		or	byte ptr [eax+34h], 8
		mov	[eax+10h], edx
		retn
sub_71025360	endp


; =============== S U B	R O U T	I N E =======================================


sub_71025370	proc near		; CODE XREF: sub_71027E70+EDp

arg_0		= dword	ptr  4

		mov	edx, [esp+arg_0]
		cmp	edx, 258h
		jz	short loc_710253C8
		jle	short loc_710253A1
		cmp	edx, 320h
		jz	short loc_710253C1
		cmp	edx, 384h
		mov	eax, 57h
		jz	short locret_710253C6
		cmp	edx, 2BCh
		jz	short loc_710253C1

loc_7102539B:				; CODE XREF: sub_71025370+45j
		mov	eax, 32h
		retn
; ---------------------------------------------------------------------------

loc_710253A1:				; CODE XREF: sub_71025370+Cj
		cmp	edx, 0C8h
		jz	short loc_710253B7
		cmp	edx, 1F4h
		nop
		jz	short loc_710253C8
		cmp	edx, 64h
		jnz	short loc_7102539B

loc_710253B7:				; CODE XREF: sub_71025370+37j
		mov	eax, 19h
		lea	esi, [esi+0]
		retn
; ---------------------------------------------------------------------------

loc_710253C1:				; CODE XREF: sub_71025370+14j
					; sub_71025370+29j
		mov	eax, 4Bh

locret_710253C6:			; CODE XREF: sub_71025370+21j
		rep retn
; ---------------------------------------------------------------------------

loc_710253C8:				; CODE XREF: sub_71025370+Aj
					; sub_71025370+40j
		mov	eax, 3Fh
		lea	esi, [esi+0]
		retn
sub_71025370	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710253E0	proc near		; DATA XREF: .rdata:7105D938o
		xor	eax, eax
		retn
sub_710253E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710253F0	proc near		; DATA XREF: .rdata:7105D6B8o
		mov	eax, 1
		retn
sub_710253F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71025400	proc near		; DATA XREF: .rdata:7105DAD8o
		mov	eax, 2
		retn
sub_71025400	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71025410	proc near		; DATA XREF: .rdata:7105D6D8o
		mov	eax, 3
		retn
sub_71025410	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71025420	proc near		; DATA XREF: .rdata:7105D7F8o
		mov	eax, 4
		retn
sub_71025420	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71025430	proc near		; DATA XREF: .rdata:7105DA78o
		mov	eax, 5
		retn
sub_71025430	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71025440	proc near		; DATA XREF: .rdata:7105D978o
		mov	eax, 6
		retn
sub_71025440	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71025450	proc near		; DATA XREF: .rdata:7105DA30o
		mov	eax, 7
		retn
sub_71025450	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		mov	edx, [esp+8]
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax], offset	off_7105D738
		mov	[eax+8], edx
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71025480	proc near		; CODE XREF: sub_71011C90+53Ap

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		mov	edx, [esp+arg_4]
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax], offset	off_7105D738
		mov	[eax+8], edx
		retn
sub_71025480	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710254A0	proc near		; DATA XREF: .rdata:7105D748o
		mov	eax, 0Bh
		retn
sub_710254A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710254B0	proc near		; CODE XREF: sub_71022790+11j
					; sub_710227E0+58p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	esi, [esp+2Ch+arg_0]
		mov	edi, [esp+2Ch+arg_4]
		mov	ebp, [esp+2Ch+arg_8]
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_710254D9
		mov	edx, [eax]
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], edi
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [edx+0Ch]

loc_710254D9:				; CODE XREF: sub_710254B0+17j
		mov	eax, [esi+4]
		test	eax, eax
		jz	short loc_710254F0
		mov	edx, [eax]
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], edi
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [edx+0Ch]

loc_710254F0:				; CODE XREF: sub_710254B0+2Ej
		mov	eax, [esi+8]
		test	eax, eax
		jz	short loc_71025507
		mov	edx, [eax]
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], edi
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [edx+0Ch]

loc_71025507:				; CODE XREF: sub_710254B0+45j
		mov	eax, [esi+0Ch]
		test	eax, eax
		jz	short loc_7102551E
		mov	edx, [eax]
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], edi
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [edx+0Ch]

loc_7102551E:				; CODE XREF: sub_710254B0+5Cj
		mov	eax, [esi+10h]
		test	eax, eax
		jz	short loc_71025535
		mov	edx, [eax]
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], edi
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [edx+0Ch]

loc_71025535:				; CODE XREF: sub_710254B0+73j
		mov	eax, [esi+24h]
		mov	edx, [eax+0Ch]
		mov	ecx, [eax+8]
		cmp	edx, ecx
		jz	short loc_71025575
		lea	ecx, [eax+ecx*4+10h]
		lea	ebx, [ecx+4]
		lea	edx, [eax+edx*4+14h]
		cmp	edx, ebx
		jz	short loc_71025575
		mov	eax, [ecx+4]
		mov	eax, [eax]
		cmp	byte ptr [eax+0E8h], 0
		jz	short loc_7102556E
		jmp	short loc_710255E0
; ---------------------------------------------------------------------------

loc_71025561:				; CODE XREF: sub_710254B0+C3j
		mov	eax, [ebx]
		mov	eax, [eax]
		cmp	byte ptr [eax+0E8h], 0
		jnz	short loc_710255E0

loc_7102556E:				; CODE XREF: sub_710254B0+ADj
		add	ebx, 4
		cmp	edx, ebx
		jnz	short loc_71025561

loc_71025575:				; CODE XREF: sub_710254B0+90j
					; sub_710254B0+9Fj ...
		mov	eax, [esi+1Ch]
		test	eax, eax
		jz	short loc_7102558C
		mov	edx, [eax]
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], edi
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [edx+0Ch]

loc_7102558C:				; CODE XREF: sub_710254B0+CAj
		mov	eax, [esi+20h]
		test	eax, eax
		jz	short loc_710255A3
		mov	edx, [eax]
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], edi
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [edx+0Ch]

loc_710255A3:				; CODE XREF: sub_710254B0+E1j
		mov	eax, [esi+28h]
		test	eax, eax
		jz	short loc_710255BA
		mov	edx, [eax]
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], edi
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [edx+0Ch]

loc_710255BA:				; CODE XREF: sub_710254B0+F8j
		mov	eax, [esi+2Ch]
		test	eax, eax
		jz	short loc_71025613
		mov	edx, [eax]
		mov	[esp+2Ch+arg_8], ebp
		mov	[esp+2Ch+arg_4], edi
		mov	[esp+2Ch+arg_0], eax
		mov	eax, [edx+0Ch]
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_710255E0:				; CODE XREF: sub_710254B0+AFj
					; sub_710254B0+BCj
		mov	edx, [eax]
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], edi
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [edx+0Ch]
		jmp	short loc_71025600
; ---------------------------------------------------------------------------

loc_710255F2:				; CODE XREF: sub_710254B0+15Cj
		mov	eax, [ebx]
		add	ebx, 4
		mov	eax, [eax]
		mov	byte ptr [eax+0E8h], 0

loc_71025600:				; CODE XREF: sub_710254B0+140j
		mov	eax, [esi+24h]
		mov	edx, [eax+0Ch]
		lea	eax, [eax+edx*4+14h]
		cmp	ebx, eax
		jnz	short loc_710255F2
		jmp	loc_71025575
; ---------------------------------------------------------------------------

loc_71025613:				; CODE XREF: sub_710254B0+10Fj
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_710254B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71025620	proc near		; DATA XREF: .rdata:7105DA98o
		mov	eax, 8
		retn
sub_71025620	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71025630	proc near		; CODE XREF: sub_7101A880+7A0p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	[eax+0D9h], dl
		retn
sub_71025630	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_71025640(int,	double)
sub_71025640	proc near		; CODE XREF: sub_7101A880+7E8p

arg_0		= dword	ptr  4
arg_4		= qword	ptr  8

		mov	eax, [esp+arg_0]
		fld	[esp+arg_4]
		fstp	qword ptr [eax+0E0h]
		retn
sub_71025640	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71025650	proc near		; CODE XREF: sub_71019980+602p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	[eax+36h], dl
		retn
sub_71025650	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_71025660(int,	double)
sub_71025660	proc near		; CODE XREF: sub_71019980+644p

arg_0		= dword	ptr  4
arg_4		= qword	ptr  8

		mov	eax, [esp+arg_0]
		fld	[esp+arg_4]
		fstp	qword ptr [eax+38h]
		retn
sub_71025660	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71025670	proc near		; DATA XREF: .rdata:7105D8F8o
		mov	eax, 9
		retn
sub_71025670	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		fld	qword ptr [esp+8]
		fstp	qword ptr [eax+8]
		fldz
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax], offset	off_7105D908
		fstp	qword ptr [eax+10h]
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_710256A0(int,	double)
sub_710256A0	proc near		; CODE XREF: sub_71011C90+67Fp

arg_0		= dword	ptr  4
arg_4		= qword	ptr  8

		mov	eax, [esp+arg_0]
		fld	[esp+arg_4]
		fstp	qword ptr [eax+8]
		fldz
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax], offset	off_7105D908
		fstp	qword ptr [eax+10h]
		retn
sub_710256A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710256C0	proc near		; DATA XREF: .rdata:7105D918o
		mov	eax, 0Ah
		retn
sub_710256C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710256D0	proc near		; DATA XREF: .rdata:7105D9ACo

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		add	esp, 0Ch
		jmp	sub_710517D0
sub_710256D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710256F0	proc near		; CODE XREF: sub_7100E900+561p
					; sub_7100E900+5E0p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_18], eax
		lea	eax, [ebx+44h]
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [esp+1Ch+arg_8]
		mov	[ebx+40h], eax
		add	esp, 18h
		pop	ebx
		retn
sub_710256F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_71025720(int,	double)
sub_71025720	proc near		; DATA XREF: .rdata:7105D914o

arg_0		= dword	ptr  4
arg_4		= qword	ptr  8

		sub	esp, 0Ch
		mov	eax, dword ptr [esp+0Ch+arg_4]
		mov	edx, [esp+0Ch+arg_0]
		fld	qword ptr [edx+10h]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_ZN8QPainter10setOpacityEd
		fstp	[esp+0Ch+arg_4]
		add	esp, 0Ch
		jmp	eax
sub_71025720	endp


; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_71025740(int,	double)
sub_71025740	proc near		; DATA XREF: .rdata:7105D910o

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= qword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, dword ptr [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], ebx
		call	ds:_ZNK8QPainter7opacityEv
		mov	eax, ds:_ZN8QPainter10setOpacityEd
		fst	qword ptr [esi+10h]
		fmul	qword ptr [esi+8]
		mov	[esp+1Ch+arg_0], ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		fstp	[esp+1Ch+arg_4]
		add	esp, 1Ch
		jmp	eax
sub_71025740	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71025780	proc near		; DATA XREF: .rdata:7105DAD4o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_4]
		mov	edx, [esp+0Ch+arg_0]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_ZN8QPainter8setBrushERK6QBrush
		add	edx, 0Ch
		mov	[esp+0Ch+arg_4], edx
		add	esp, 0Ch
		jmp	eax
sub_71025780	endp


; =============== S U B	R O U T	I N E =======================================


sub_710257A0	proc near		; DATA XREF: .rdata:7105D6B4o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_8]
		movzx	eax, byte ptr [ebx+34h]
		test	al, 4
		jz	short loc_710257C0
		fld	qword ptr [ebx+28h]
		fstp	qword ptr [esi]

loc_710257C0:				; CODE XREF: sub_710257A0+19j
		test	al, 8
		jnz	short loc_710257E0

loc_710257C4:				; CODE XREF: sub_710257A0+58j
		test	al, 2
		jz	short loc_710257CE
		mov	eax, [ebx+18h]
		mov	[esi+1Ch], eax

loc_710257CE:				; CODE XREF: sub_710257A0+26j
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_710257E0:				; CODE XREF: sub_710257A0+22j
		lea	eax, [ebx+0Ch]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN8QPainter8setBrushERK6QBrush
		movzx	eax, byte ptr [ebx+34h]
		jmp	short loc_710257C4
sub_710257A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71025800	proc near		; DATA XREF: .rdata:7105D8F4o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	edx, [esp+0Ch+arg_4]
		cmp	byte ptr [eax+34h], 0
		jnz	short loc_71025826
		add	eax, 30h
		mov	[esp+0Ch+arg_4], eax
		mov	eax, ds:_ZN8QPainter6setPenERK4QPen
		mov	[esp+0Ch+arg_0], edx
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------

loc_71025826:				; CODE XREF: sub_71025800+Fj
		add	eax, 2Ch
		mov	[esp+0Ch+arg_4], eax
		mov	eax, ds:_ZN8QPainter8setBrushERK6QBrush
		mov	[esp+0Ch+arg_0], edx
		add	esp, 0Ch
		jmp	eax
sub_71025800	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71025840	proc near		; DATA XREF: .rdata:7105D7F4o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_8]
		lea	eax, [ebx+0Ch]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN8QPainter6setPenERK4QPen
		fld	qword ptr [ebx+18h]
		fstp	qword ptr [esi+8]
		fld	qword ptr [ebx+28h]
		fstp	qword ptr [esi+20h]
		movzx	eax, byte ptr [ebx+38h]
		shr	al, 2
		and	eax, 1
		mov	[esi+28h], al
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_71025840	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71025890	proc near		; DATA XREF: .rdata:7105DAD0o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], ebx
		call	ds:_ZNK8QPainter5brushEv
		mov	[esp+1Ch+var_18], eax
		lea	eax, [esi+0Ch]
		add	esi, 8
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN6QBrushaSERKS_
		mov	eax, ds:_ZN8QPainter8setBrushERK6QBrush
		mov	[esp+1Ch+arg_4], esi
		mov	esi, [esp+1Ch+var_4]
		mov	[esp+1Ch+arg_0], ebx
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		jmp	eax
sub_71025890	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710258E0	proc near		; DATA XREF: .rdata:7105D6B0o

var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= byte ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_710536C0
		mov	[ebp+var_28], offset sub_71025A06
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], edx
		call	ds:_ZNK8QPainter5brushEv
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 0Ch
		mov	[esp], eax
		call	ds:_ZN6QBrushaSERKS_
		mov	ecx, [ebp+arg_C]
		mov	edx, [ebp+arg_0]
		mov	eax, [ecx+1Ch]
		fld	qword ptr [ecx]
		fstp	qword ptr [edx+28h]
		mov	[edx+18h], eax
		movzx	eax, byte ptr [edx+34h]
		test	al, 2
		jz	short loc_71025958
		mov	eax, [edx+14h]
		mov	[ecx+1Ch], eax
		movzx	eax, byte ptr [edx+34h]

loc_71025958:				; CODE XREF: sub_710258E0+6Cj
		test	al, 8
		jz	short loc_710259C3
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+10h]
		test	eax, eax
		jz	short loc_710259E0
		mov	ecx, [ebp+arg_C]
		mov	edx, [eax]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[esp+0Ch], ecx
		mov	ecx, [ebp+arg_4]
		mov	[esp+8], ecx
		mov	eax, [edx+14h]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	eax
		mov	ecx, [ebp+arg_4]
		lea	edx, [ebp+var_C]
		mov	[ebp+var_48], 1
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], ecx
		call	ds:_ZN8QPainter8setBrushERK6QBrush
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN6QBrushD1Ev
		mov	ecx, [ebp+arg_0]
		movzx	eax, byte ptr [ecx+34h]

loc_710259C3:				; CODE XREF: sub_710258E0+7Aj
					; sub_710258E0+124j
		test	al, 4
		jz	short loc_710259D2
		mov	ecx, [ebp+arg_0]
		mov	eax, [ebp+arg_C]
		fld	qword ptr [ecx+20h]
		fstp	qword ptr [eax]

loc_710259D2:				; CODE XREF: sub_710258E0+E5j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_710259E0:				; CODE XREF: sub_710258E0+84j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 0FFFFFFFFh
		add	eax, 8
		mov	[esp+4], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		call	ds:_ZN8QPainter8setBrushERK6QBrush
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+34h]
		jmp	short loc_710259C3
sub_710258E0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71025A06	proc near		; DATA XREF: sub_710258E0+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-50h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	ds:_ZN6QBrushD1Ev
		mov	edx, [ebp-50h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_71025A06	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71025A40	proc near		; CODE XREF: sub_7100CAD0+2B8p
					; sub_71010720+2BDp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_18], eax
		lea	eax, [ebx+8]
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN6QBrushaSERKS_
		or	byte ptr [ebx+34h], 8
		mov	dword ptr [ebx+10h], 0
		add	esp, 18h
		pop	ebx
		retn
sub_71025A40	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71025A70	proc near		; CODE XREF: sub_710227B0+21p

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= qword	ptr -3Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	eax, [esp+4Ch+arg_4]
		mov	esi, [esp+4Ch+arg_0]
		mov	edi, [esp+4Ch+arg_8]
		mov	ebp, [esp+4Ch+arg_C]
		mov	[esp+4Ch+var_28], eax
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_71025AA9
		mov	edx, [eax]
		mov	ecx, [esp+4Ch+var_28]
		mov	[esp+4Ch+var_40], ebp
		mov	[esp+4Ch+var_44], edi
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_48], ecx
		call	dword ptr [edx+8]

loc_71025AA9:				; CODE XREF: sub_71025A70+1Fj
		mov	eax, [esi+4]
		test	eax, eax
		jz	short loc_71025AC8
		mov	edx, [eax]
		mov	ecx, [esp+4Ch+var_28]
		mov	[esp+4Ch+var_40], ebp
		mov	[esp+4Ch+var_44], edi
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_48], ecx
		call	dword ptr [edx+8]

loc_71025AC8:				; CODE XREF: sub_71025A70+3Ej
		mov	eax, [esi+8]
		test	eax, eax
		jz	short loc_71025AE7
		mov	edx, [eax]
		mov	ecx, [esp+4Ch+var_28]
		mov	[esp+4Ch+var_40], ebp
		mov	[esp+4Ch+var_44], edi
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_48], ecx
		call	dword ptr [edx+8]

loc_71025AE7:				; CODE XREF: sub_71025A70+5Dj
		mov	eax, [esi+0Ch]
		test	eax, eax
		jz	short loc_71025B06
		mov	edx, [eax]
		mov	ecx, [esp+4Ch+var_28]
		mov	[esp+4Ch+var_40], ebp
		mov	[esp+4Ch+var_44], edi
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_48], ecx
		call	dword ptr [edx+8]

loc_71025B06:				; CODE XREF: sub_71025A70+7Cj
		mov	eax, [esi+10h]
		test	eax, eax
		jz	short loc_71025B25
		mov	edx, [eax]
		mov	ecx, [esp+4Ch+var_28]
		mov	[esp+4Ch+var_40], ebp
		mov	[esp+4Ch+var_44], edi
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_48], ecx
		call	dword ptr [edx+8]

loc_71025B25:				; CODE XREF: sub_71025A70+9Bj
		mov	eax, [esi+1Ch]
		test	eax, eax
		jz	short loc_71025B44
		mov	edx, [eax]
		mov	ecx, [esp+4Ch+var_28]
		mov	[esp+4Ch+var_40], ebp
		mov	[esp+4Ch+var_44], edi
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_48], ecx
		call	dword ptr [edx+8]

loc_71025B44:				; CODE XREF: sub_71025A70+BAj
		mov	eax, [esi+20h]
		test	eax, eax
		jz	short loc_71025B63
		mov	edx, [eax]
		mov	ecx, [esp+4Ch+var_28]
		mov	[esp+4Ch+var_40], ebp
		mov	[esp+4Ch+var_44], edi
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_48], ecx
		call	dword ptr [edx+8]

loc_71025B63:				; CODE XREF: sub_71025A70+D9j
		mov	eax, [esi+24h]
		mov	edx, [eax+0Ch]
		cmp	edx, [eax+8]
		jz	loc_71025C70
		mov	[esp+4Ch+var_4C], edi
		call	sub_71022510
		add	eax, 0C4h
		mov	[esp+4Ch+var_4C], eax
		call	ds:_ZNK5QTime7elapsedEv
		mov	[esp+4Ch+var_20], eax
		mov	edx, [esi+24h]
		fild	[esp+4Ch+var_20]
		fldz
		mov	eax, [edx+0Ch]
		add	eax, 4
		mov	[esp+4Ch+var_24], eax
		lea	ebx, [edx+eax*4+4]

loc_71025BA3:				; CODE XREF: sub_71025A70+18Fj
		sub	ebx, 4
		mov	eax, [ebx]
		mov	ecx, [eax]
		fld	qword ptr [ecx+8]
		fucom	st(2)
		fnstsw	ax
		sahf
		ja	short loc_71025BE5
		cmp	byte ptr [ecx+0D9h], 0
		jnz	short loc_71025BD8
		fld	qword ptr [ecx+0E0h]
		fld	st(2)
		fucom	st(1)
		fnstsw	ax
		sahf
		jbe	loc_71025D17
		fstp	st
		fstp	st
		fstp	st
		jmp	short loc_71025BDA
; ---------------------------------------------------------------------------

loc_71025BD8:				; CODE XREF: sub_71025A70+14Bj
		fstp	st

loc_71025BDA:				; CODE XREF: sub_71025A70+166j
					; sub_71025A70+2D1j
		cmp	dword ptr [ecx+2Ch], 1
		jnz	short loc_71025BF6
		jmp	loc_71025D50
; ---------------------------------------------------------------------------

loc_71025BE5:				; CODE XREF: sub_71025A70+142j
		fstp	st
		jmp	short loc_71025BF6
; ---------------------------------------------------------------------------
		align 10h

loc_71025BF0:				; CODE XREF: sub_71025A70+2B3j
		fstp	st
		fstp	st
		fstp	st

loc_71025BF6:				; CODE XREF: sub_71025A70+16Ej
					; sub_71025A70+177j ...
		mov	eax, [edx+8]
		lea	eax, [edx+eax*4+14h]
		cmp	ebx, eax
		jnz	short loc_71025BA3
		fstp	st

loc_71025C03:				; CODE XREF: sub_71025A70+2E7j
					; sub_71025A70+316j
		mov	ecx, [esp+4Ch+var_24]
		lea	eax, [edx+ecx*4+4]
		cmp	ebx, eax
		jz	short loc_71025C68
		nop

loc_71025C10:				; CODE XREF: sub_71025A70+1F2j
					; sub_71025A70+29Aj
		mov	eax, [ebx]
		mov	ecx, [eax]
		fld	qword ptr [ecx+8]
		fucom	st(1)
		fnstsw	ax
		sahf
		ja	short loc_71025C54
		cmp	byte ptr [ecx+0D9h], 0
		jnz	loc_71025CD1
		fld	qword ptr [ecx+0E0h]
		fldz
		fucom	st(1)
		fnstsw	ax
		sahf
		ja	loc_71025CD5
		fld	qword ptr [ecx+20h]
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jp	short loc_71025CBC
		jnz	short loc_71025CC0
		fstp	st
		fstp	st
		fstp	st
		jmp	short loc_71025C56
; ---------------------------------------------------------------------------

loc_71025C54:				; CODE XREF: sub_71025A70+1ACj
		fstp	st

loc_71025C56:				; CODE XREF: sub_71025A70+1E2j
					; sub_71025A70+25Dj
		mov	eax, [edx+0Ch]
		add	ebx, 4
		lea	eax, [edx+eax*4+14h]
		cmp	ebx, eax
		jnz	short loc_71025C10
		fstp	st
		jmp	short loc_71025C70
; ---------------------------------------------------------------------------

loc_71025C68:				; CODE XREF: sub_71025A70+19Dj
		fstp	st
		lea	esi, [esi+0]

loc_71025C70:				; CODE XREF: sub_71025A70+FCj
					; sub_71025A70+1F6j ...
		mov	eax, [esi+28h]
		test	eax, eax
		jz	short loc_71025C8F
		mov	edx, [eax]
		mov	ecx, [esp+4Ch+var_28]
		mov	[esp+4Ch+var_40], ebp
		mov	[esp+4Ch+var_44], edi
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_48], ecx
		call	dword ptr [edx+8]

loc_71025C8F:				; CODE XREF: sub_71025A70+205j
		mov	eax, [esi+2Ch]
		test	eax, eax
		jz	loc_71025D46
		mov	edx, [eax]
		mov	ecx, [esp+4Ch+var_28]
		mov	[esp+4Ch+arg_C], ebp
		mov	[esp+4Ch+arg_8], edi
		mov	[esp+4Ch+arg_0], eax
		mov	[esp+4Ch+arg_4], ecx
		mov	eax, [edx+8]
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	eax
; ---------------------------------------------------------------------------

loc_71025CBC:				; CODE XREF: sub_71025A70+1D8j
		fxch	st(2)
		jmp	short loc_71025CC2
; ---------------------------------------------------------------------------

loc_71025CC0:				; CODE XREF: sub_71025A70+1DAj
		fxch	st(2)

loc_71025CC2:				; CODE XREF: sub_71025A70+24Ej
		fsubr	st, st(3)
		fdivrp	st(2), st
		fxch	st(1)
		fucompp
		fnstsw	ax
		sahf
		ja	short loc_71025C56
		jmp	short loc_71025CDB
; ---------------------------------------------------------------------------

loc_71025CD1:				; CODE XREF: sub_71025A70+1B5j
		fstp	st
		jmp	short loc_71025CDB
; ---------------------------------------------------------------------------

loc_71025CD5:				; CODE XREF: sub_71025A70+1C8j
		fstp	st
		fstp	st
		fstp	st

loc_71025CDB:				; CODE XREF: sub_71025A70+25Fj
					; sub_71025A70+263j
		mov	eax, [ecx]
		fstp	[esp+4Ch+var_3C]
		add	ebx, 4
		mov	edx, [esp+4Ch+var_28]
		mov	[esp+4Ch+var_40], ebp
		mov	[esp+4Ch+var_44], edi
		mov	[esp+4Ch+var_4C], ecx
		mov	[esp+4Ch+var_48], edx
		call	dword ptr [eax+8]
		mov	edx, [esi+24h]
		mov	eax, [edx+0Ch]
		fld	[esp+4Ch+var_3C]
		lea	eax, [edx+eax*4+14h]
		cmp	ebx, eax
		jnz	loc_71025C10
		fstp	st
		jmp	loc_71025C70
; ---------------------------------------------------------------------------

loc_71025D17:				; CODE XREF: sub_71025A70+15Aj
		fld	qword ptr [ecx+20h]
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jp	short loc_71025D2D
		jz	loc_71025BF0
		fxch	st(2)
		jmp	short loc_71025D30
; ---------------------------------------------------------------------------

loc_71025D2D:				; CODE XREF: sub_71025A70+2B1j
		fxch	st(2)
		nop

loc_71025D30:				; CODE XREF: sub_71025A70+2BBj
		fsubr	st, st(4)
		fdivrp	st(2), st
		fxch	st(1)
		fucompp
		fnstsw	ax
		sahf
		ja	loc_71025BF6
		jmp	loc_71025BDA
; ---------------------------------------------------------------------------

loc_71025D46:				; CODE XREF: sub_71025A70+224j
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71025D50:				; CODE XREF: sub_71025A70+170j
		fstp	st
		mov	eax, [esi+1Ch]
		test	eax, eax
		jz	loc_71025C03
		mov	edx, [eax]
		fstp	[esp+4Ch+var_3C]
		mov	ecx, [esp+4Ch+var_28]
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_44], ebp
		mov	[esp+4Ch+var_48], ecx
		call	dword ptr [edx+0Ch]
		mov	edx, [esi+24h]
		mov	eax, [edx+0Ch]
		fld	[esp+4Ch+var_3C]
		add	eax, 4
		mov	[esp+4Ch+var_24], eax
		jmp	loc_71025C03
sub_71025A70	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71025D90	proc near		; CODE XREF: sub_71019980+5D3p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], esi
		mov	eax, [esp+1Ch+arg_4]
		mov	esi, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_C], ebx
		mov	[esp+1Ch+var_4], edi
		mov	[esi+34h], al
		mov	eax, [esp+1Ch+arg_8]
		mov	ebx, [eax]
		cmp	[esi+28h], ebx
		jz	short loc_71025DD4
		lea	edi, [esi+28h]
		lock inc dword ptr [ebx]
		setnz	al
		mov	eax, [esi+28h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71025E03

loc_71025DCB:				; CODE XREF: sub_71025D90+82j
		mov	[esi+28h], ebx
		test	byte ptr [ebx+10h], 1
		jz	short loc_71025DE4

loc_71025DD4:				; CODE XREF: sub_71025D90+23j
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_71025DE4:				; CODE XREF: sub_71025D90+42j
		mov	eax, [ebx+4]
		mov	esi, [esp+1Ch+var_8]
		mov	[esp+1Ch+arg_0], edi
		mov	ebx, [esp+1Ch+var_C]
		mov	edi, [esp+1Ch+var_4]
		mov	[esp+1Ch+arg_4], eax
		add	esp, 1Ch
		jmp	sub_71045280
; ---------------------------------------------------------------------------

loc_71025E03:				; CODE XREF: sub_71025D90+39j
		mov	eax, [esi+28h]
		mov	[esp+1Ch+var_1C], edi
		mov	[esp+1Ch+var_18], eax
		call	sub_71045430
		jmp	short loc_71025DCB
sub_71025D90	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71025E20	proc near		; DATA XREF: .rdata:7105D8F0o

var_E4		= dword	ptr -0E4h
var_E0		= dword	ptr -0E0h
var_DC		= dword	ptr -0DCh
var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_D0		= dword	ptr -0D0h
var_CC		= dword	ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= qword	ptr -0A8h
var_A0		= qword	ptr -0A0h
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= word ptr -84h
var_82		= word ptr -82h
var_80		= dword	ptr -80h
var_7C		= byte ptr -7Ch
var_78		= dword	ptr -78h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_40		= byte ptr -40h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= word ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= word ptr -14h
var_10		= byte ptr -10h
var_C		= byte ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 104h
		mov	[ebp+var_5C], eax
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		mov	[ebp+var_64], offset sub_710525B0
		mov	[ebp+var_60], offset dword_710536DC
		mov	[ebp+var_58], offset sub_710263F5
		mov	[ebp+var_54], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_71022510
		add	eax, 0C4h
		mov	[esp], eax
		call	ds:_ZNK5QTime7elapsedEv
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_80], eax
		fild	[ebp+var_80]
		fld	qword ptr [edx+8]
		fucom	st(1)
		fnstsw	ax
		sahf
		ja	loc_71026340
		cmp	byte ptr [edx+35h], 0
		jnz	loc_71026346
		fld	qword ptr [edx+20h]
		fldz
		fld	st
		fxch	st(2)
		fucom	st(2)
		fnstsw	ax
		fstp	st(2)
		sahf
		jnz	loc_71026360
		jp	loc_71026366
		fstp	st(2)
		fstp	st
		fstp	st(1)

loc_71025EB6:				; CODE XREF: sub_71025E20+554j
		mov	edx, [ebp+arg_0]
		fld	qword ptr [edx+38h]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jb	short loc_71025EE0
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		sahf
		jbe	short loc_71025EE4
		fstp	st
		mov	byte ptr [edx+35h], 1
		jmp	short loc_71025EE6
; ---------------------------------------------------------------------------
		align 10h

loc_71025EE0:				; CODE XREF: sub_71025E20+A7j
		fstp	st
		jmp	short loc_71025EE6
; ---------------------------------------------------------------------------

loc_71025EE4:				; CODE XREF: sub_71025E20+B0j
		fstp	st(1)

loc_71025EE6:				; CODE XREF: sub_71025E20+B8j
					; sub_71025E20+C2j
		fld	st
		fld1
		fxch	st(2)
		fucom	st(2)
		fnstsw	ax
		fstp	st(2)
		sahf
		jbe	short loc_71025F30
		fstp	st
		fnstcw	[ebp+var_82]
		movzx	eax, [ebp+var_82]
		mov	ah, 0Ch
		mov	[ebp+var_84], ax
		fldcw	[ebp+var_84]
		fist	[ebp+var_80]
		fldcw	[ebp+var_82]
		mov	eax, [ebp+var_80]
		mov	[ebp+var_80], eax
		fild	[ebp+var_80]
		fsubp	st(1), st
		jmp	short loc_71025F32
; ---------------------------------------------------------------------------
		align 10h

loc_71025F30:				; CODE XREF: sub_71025E20+D3j
		fstp	st(1)

loc_71025F32:				; CODE XREF: sub_71025E20+107j
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+28h]
		mov	ecx, [edx+8]
		mov	[ebp+var_98], edx
		mov	eax, ecx
		not	eax
		add	eax, [edx+0Ch]
		mov	[ebp+var_AC], ecx
		mov	[ebp+var_80], eax
		fild	[ebp+var_80]
		fmulp	st(1), st
		fst	[ebp+var_A0]
		fstp	qword ptr [esp]	; double
		call	floor
		fnstcw	[ebp+var_82]
		movzx	eax, [ebp+var_82]
		mov	ah, 0Ch
		mov	[ebp+var_84], ax
		fldcw	[ebp+var_84]
		fistp	[ebp+var_B8]
		fldcw	[ebp+var_82]
		fld	[ebp+var_A0]
		fstp	qword ptr [esp]	; double
		call	ceil
		mov	edx, [ebp+var_98]
		fnstcw	[ebp+var_82]
		movzx	eax, [ebp+var_82]
		mov	ah, 0Ch
		mov	[ebp+var_84], ax
		mov	eax, [ebp+arg_0]
		fldcw	[ebp+var_84]
		fistp	[ebp+var_B4]
		fldcw	[ebp+var_82]
		add	eax, 28h
		mov	[ebp+var_B0], eax
		mov	eax, [edx]
		cmp	eax, 1
		jz	short loc_7102600E
		mov	eax, [edx+4]
		mov	edx, [ebp+var_B0]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_71045280
		mov	ecx, [ebp+arg_0]
		mov	ecx, [ecx+28h]
		mov	ebx, [ecx+8]
		mov	edx, ecx
		mov	[ebp+var_98], ecx
		mov	[ebp+var_AC], ebx

loc_7102600E:				; CODE XREF: sub_71025E20+1B9j
		mov	ebx, [ebp+var_B8]
		mov	ecx, [ebp+var_AC]
		lea	eax, [ecx+ebx+4]
		mov	ebx, [ebp+var_98]
		mov	eax, [ebx+eax*4+4]
		mov	ebx, [eax]
		mov	[ebp+var_20], ebx
		mov	ebx, [eax+4]
		mov	[ebp+var_1C], ebx
		mov	ebx, [eax+8]
		mov	[ebp+var_18], ebx
		movzx	eax, word ptr [eax+0Ch]
		mov	[ebp+var_14], ax
		mov	eax, [edx]
		cmp	eax, 1
		jz	short loc_71026073
		mov	eax, [edx+4]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp+4], eax
		mov	eax, [ebp+var_B0]
		mov	[esp], eax
		call	sub_71045280
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+28h]
		mov	ecx, [edx+8]
		mov	[ebp+var_98], edx

loc_71026073:				; CODE XREF: sub_71025E20+226j
		mov	ebx, [ebp+var_B4]
		mov	edx, [ebp+var_98]
		fld	[ebp+var_A0]
		lea	eax, [ecx+ebx+4]
		mov	eax, [edx+eax*4+4]
		mov	edx, [eax]
		mov	[ebp+var_30], edx
		mov	edx, [eax+4]
		mov	[ebp+var_2C], edx
		mov	edx, [eax+8]
		mov	[ebp+var_28], edx
		movzx	eax, word ptr [eax+0Ch]
		fstp	[ebp+var_A8]
		fld1
		fld	[ebp+var_A0]
		mov	[ebp+var_24], ax
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jbe	short loc_710260F5
		fnstcw	[ebp+var_82]
		movzx	eax, [ebp+var_82]
		mov	ah, 0Ch
		mov	[ebp+var_84], ax
		fldcw	[ebp+var_84]
		fist	[ebp+var_80]
		fldcw	[ebp+var_82]
		mov	eax, [ebp+var_80]
		mov	[ebp+var_80], eax
		fild	[ebp+var_80]
		fsubp	st(1), st
		fstp	[ebp+var_A8]
		jmp	short loc_710260F7
; ---------------------------------------------------------------------------

loc_710260F5:				; CODE XREF: sub_71025E20+29Bj
		fstp	st

loc_710260F7:				; CODE XREF: sub_71025E20+2D3j
		mov	edx, ds:_ZNK6QColor5alphaEv
		lea	eax, [ebp+var_30]
		mov	[esp], eax
		lea	ebx, [ebp+var_30]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[ebp+var_88], edx
		call	edx ; _ZNK6QColor5alphaEv
		lea	ecx, [ebp+var_20]
		mov	[esp], ecx
		mov	[ebp+var_E4], eax
		call	[ebp+var_88]
		mov	[esp], ebx
		mov	[ebp+var_E0], eax
		mov	eax, ds:_ZNK6QColor3redEv
		mov	[ebp+var_8C], eax
		call	eax ; _ZNK6QColor3redEv
		lea	edx, [ebp+var_20]
		mov	[esp], edx
		mov	[ebp+var_DC], eax
		call	[ebp+var_8C]
		mov	[esp], ebx
		mov	ebx, ds:_ZNK6QColor5greenEv
		mov	[ebp+var_90], ebx
		mov	[ebp+var_D8], eax
		call	ebx ; _ZNK6QColor5greenEv
		mov	[ebp+var_D4], eax
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		call	ebx ; _ZNK6QColor5greenEv
		mov	ecx, ds:_ZNK6QColor4blueEv
		lea	edx, [ebp+var_30]
		mov	[esp], edx
		lea	ebx, [ebp+var_20]
		mov	[ebp+var_94], ecx
		mov	[ebp+var_D0], eax
		call	ecx ; _ZNK6QColor4blueEv
		mov	[esp], ebx
		mov	[ebp+var_CC], eax
		call	[ebp+var_94]
		mov	[esp], ebx
		mov	[ebp+var_C8], eax
		call	[ebp+var_88]
		mov	[esp], ebx
		mov	[ebp+var_C4], eax
		call	[ebp+var_8C]
		mov	[esp], ebx
		mov	[ebp+var_C0], eax
		call	[ebp+var_90]
		mov	[esp], ebx
		mov	[ebp+var_BC], eax
		call	[ebp+var_94]
		mov	edx, [ebp+var_E4]
		sub	edx, [ebp+var_E0]
		mov	[ebp+var_80], edx
		fild	[ebp+var_C4]
		fild	[ebp+var_80]
		fnstcw	[ebp+var_82]
		fmul	[ebp+var_A8]
		mov	[ebp+var_80], eax
		mov	eax, [ebp+var_CC]
		movzx	edx, [ebp+var_82]
		sub	eax, [ebp+var_C8]
		faddp	st(1), st
		mov	dh, 0Ch
		mov	[ebp+var_84], dx
		fldcw	[ebp+var_84]
		fistp	dword ptr [esp+10h]
		fldcw	[ebp+var_82]
		fild	[ebp+var_80]
		mov	[ebp+var_80], eax
		mov	eax, [ebp+var_D4]
		fild	[ebp+var_80]
		fmul	[ebp+var_A8]
		sub	eax, [ebp+var_D0]
		mov	[ebp+var_80], eax
		mov	eax, [ebp+var_DC]
		sub	eax, [ebp+var_D8]
		faddp	st(1), st
		fldcw	[ebp+var_84]
		fistp	dword ptr [esp+0Ch]
		fldcw	[ebp+var_82]
		fild	[ebp+var_BC]
		fild	[ebp+var_80]
		fmul	[ebp+var_A8]
		faddp	st(1), st
		fldcw	[ebp+var_84]
		fistp	dword ptr [esp+8]
		fldcw	[ebp+var_82]
		fild	[ebp+var_C0]
		mov	[ebp+var_80], eax
		fild	[ebp+var_80]
		lea	eax, [ebp+var_40]
		fmul	[ebp+var_A8]
		mov	[esp], eax
		faddp	st(1), st
		fldcw	[ebp+var_84]
		fistp	dword ptr [esp+4]
		fldcw	[ebp+var_82]
		call	ds:_ZN6QColor6setRgbEiiii
		mov	eax, [ebp+arg_0]
		cmp	byte ptr [eax+34h], 0
		jz	loc_71026380
		mov	edx, [ebp+arg_4]
		lea	ebx, [ebp+var_C]
		mov	[esp], edx
		call	ds:_ZNK8QPainter5brushEv
		lea	ecx, [ebp+var_C]
		mov	[esp], ecx
		mov	[esp+4], eax
		call	ds:_ZN6QBrushC1ERKS_
		mov	eax, [ebp+arg_0]
		mov	[esp+4], ebx
		mov	[ebp+var_78], 2
		add	eax, 2Ch
		mov	[esp], eax
		call	ds:_ZN6QBrushaSERKS_
		lea	eax, [ebp+var_40]
		mov	[esp+4], eax
		mov	[esp], ebx
		call	ds:_ZN6QBrush8setColorERK6QColor
		mov	eax, [ebp+arg_4]
		mov	[esp+4], ebx
		mov	[esp], eax
		call	ds:_ZN8QPainter8setBrushERK6QBrush
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZN6QBrushD1Ev
		jmp	short loc_7102634A
; ---------------------------------------------------------------------------
		align 10h

loc_71026340:				; CODE XREF: sub_71025E20+64j
		fstp	st
		fstp	st
		jmp	short loc_7102634A
; ---------------------------------------------------------------------------

loc_71026346:				; CODE XREF: sub_71025E20+6Ej
		fstp	st
		fstp	st

loc_7102634A:				; CODE XREF: sub_71025E20+517j
					; sub_71025E20+524j ...
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 104h
		pop	ebx
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71026360:				; CODE XREF: sub_71025E20+84j
		fstp	st
		fxch	st(1)
		jmp	short loc_71026370
; ---------------------------------------------------------------------------

loc_71026366:				; CODE XREF: sub_71025E20+8Aj
		fstp	st
		fxch	st(1)
		lea	esi, [esi+0]

loc_71026370:				; CODE XREF: sub_71025E20+544j
		fsubp	st(2), st
		fdivp	st(1), st
		jmp	loc_71025EB6
; ---------------------------------------------------------------------------
		align 10h

loc_71026380:				; CODE XREF: sub_71025E20+4A5j
		mov	ecx, [ebp+arg_4]
		lea	ebx, [ebp+var_10]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], ecx
		call	ds:_ZNK8QPainter3penEv
		mov	[esp], ebx
		mov	[esp+4], eax
		call	ds:_ZN4QPenC1ERKS_
		mov	eax, [ebp+arg_0]
		mov	[esp+4], ebx
		mov	[ebp+var_78], 1
		add	eax, 30h
		mov	[esp], eax
		call	ds:_ZN4QPenaSERKS_
		lea	eax, [ebp+var_40]
		mov	[esp+4], eax
		mov	[esp], ebx
		call	ds:_ZN4QPen8setColorERK6QColor
		mov	edx, [ebp+arg_4]
		mov	[esp+4], ebx
		mov	[esp], edx
		call	ds:_ZN8QPainter6setPenERK4QPen
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZN4QPenD1Ev
		jmp	loc_7102634A
sub_71025E20	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710263F5	proc near		; DATA XREF: sub_71025E20+24o
		add	ebp, 8
		mov	ecx, [ebp-74h]
		cmp	dword ptr [ebp-78h], 1
		mov	[ebp-0E8h], ecx
		jz	short loc_7102642F
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	ds:_ZN4QPenD1Ev
		mov	ebx, [ebp-0E8h]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], ebx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7102642F:				; CODE XREF: sub_710263F5+10j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	ds:_ZN6QBrushD1Ev
		mov	edx, [ebp-0E8h]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_710263F5	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_710525B0
		mov	dword ptr [ebp-20h], offset dword_710536E4
		mov	dword ptr [ebp-18h], offset loc_710264E2
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+8]
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax], offset	off_7105DAC8
		add	eax, 8
		mov	[ebp-40h], eax
		mov	eax, [ebp+0Ch]
		mov	dword ptr [ebp-38h], 2
		mov	[esp+4], eax
		mov	eax, [ebp-40h]
		mov	[esp], eax
		call	ds:_ZN6QBrushC1ERKS_
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 1
		add	eax, 0Ch
		mov	[esp], eax
		call	ds:_ZN6QBrushC1Ev
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_710264E2:				; DATA XREF: .text:71026480o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], eax
		jz	short loc_71026504
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], eax
		call	ds:_ZN6QBrushD1Ev

loc_71026504:				; CODE XREF: .text:710264EFj
		mov	eax, [ebp+8]
		mov	dword ptr [eax], offset	off_7105D728
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_710525B0
		mov	dword ptr [ebp-20h], offset dword_710536EC
		mov	dword ptr [ebp-18h], offset loc_710265A2
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+8]
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax], offset	off_7105DAC8
		add	eax, 8
		mov	[ebp-40h], eax
		mov	eax, [ebp+0Ch]
		mov	dword ptr [ebp-38h], 2
		mov	[esp+4], eax
		mov	eax, [ebp-40h]
		mov	[esp], eax
		call	ds:_ZN6QBrushC1ERKS_
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 1
		add	eax, 0Ch
		mov	[esp], eax
		call	ds:_ZN6QBrushC1Ev
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_710265A2:				; DATA XREF: .text:71026540o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], eax
		jz	short loc_710265C4
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], eax
		call	ds:_ZN6QBrushD1Ev

loc_710265C4:				; CODE XREF: .text:710265AFj
		mov	eax, [ebp+8]
		mov	dword ptr [eax], offset	off_7105D728
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710265E0	proc near		; CODE XREF: sub_71010720+85p

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_710536F4
		mov	[ebp+var_18], offset sub_7102669B
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx], offset	off_7105D6A8
		add	edx, 8
		mov	[ebp+var_40], edx
		mov	[esp], edx
		mov	[ebp+var_38], 2
		call	ds:_ZN6QBrushC1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 1
		add	eax, 0Ch
		mov	[esp], eax
		call	ds:_ZN6QBrushC1Ev
		mov	eax, [ebp+arg_0]
		fld1
		mov	edx, [ebp+arg_0]
		fstp	qword ptr [eax+20h]
		mov	dword ptr [eax+10h], 0
		fldz
		mov	dword ptr [eax+14h], 1
		mov	dword ptr [eax+18h], 1
		fstp	qword ptr [eax+28h]
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[edx+30h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+34h]
		or	eax, 1
		and	eax, 0FFFFFFF1h
		mov	[edx+34h], al
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_710265E0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102669B	proc near		; DATA XREF: sub_710265E0+1Do
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], eax
		jz	short loc_710266BD
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], edx
		call	ds:_ZN6QBrushD1Ev

loc_710266BD:				; CODE XREF: sub_7102669B+Dj
		mov	eax, [ebp+8]
		mov	edx, [ebp-44h]
		mov	dword ptr [eax], offset	off_7105D728
		mov	[esp+0], edx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_7102669B	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	dword ptr [ebp-24h], offset sub_710525B0
		mov	dword ptr [ebp-20h], offset dword_710536FC
		mov	dword ptr [ebp-18h], offset loc_7102679B
		mov	[ebp-14h], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+8]
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx], offset	off_7105D6A8
		add	edx, 8
		mov	[ebp-40h], edx
		mov	[esp], edx
		mov	dword ptr [ebp-38h], 2
		call	ds:_ZN6QBrushC1Ev
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 1
		add	eax, 0Ch
		mov	[esp], eax
		call	ds:_ZN6QBrushC1Ev
		mov	eax, [ebp+8]
		fld1
		mov	edx, [ebp+8]
		fstp	qword ptr [eax+20h]
		mov	dword ptr [eax+10h], 0
		fldz
		mov	dword ptr [eax+14h], 1
		mov	dword ptr [eax+18h], 1
		fstp	qword ptr [eax+28h]
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[edx+30h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+8]
		movzx	eax, byte ptr [edx+34h]
		or	eax, 1
		and	eax, 0FFFFFFF1h
		mov	[edx+34h], al
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_7102679B:				; DATA XREF: .text:710266FDo
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], eax
		jz	short loc_710267BD
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], edx
		call	ds:_ZN6QBrushD1Ev

loc_710267BD:				; CODE XREF: .text:710267A8j
		mov	eax, [ebp+8]
		mov	edx, [ebp-44h]
		mov	dword ptr [eax], offset	off_7105D728
		mov	[esp], edx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710267E0	proc near		; CODE XREF: sub_71019980+593p

var_44		= dword	ptr -44h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053704
		mov	[ebp+var_18], offset sub_7102688B
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, ds:_ZN9QListData11shared_nullE
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx], offset	off_7105D8E8
		fild	[ebp+arg_4]
		fstp	qword ptr [edx+8]
		fild	[ebp+arg_8]
		fstp	qword ptr [edx+10h]
		fild	[ebp+arg_C]
		fstp	qword ptr [edx+18h]
		mov	[edx+28h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 2
		add	eax, 2Ch
		mov	[ebp+var_44], eax
		mov	[esp], eax
		call	ds:_ZN6QBrushC1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 1
		add	eax, 30h
		mov	[esp], eax
		call	ds:_ZN4QPenC1Ev
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_3C]
		fld	qword ptr [edx+10h]
		fsub	qword ptr [edx+8]
		mov	byte ptr [edx+35h], 0
		fstp	qword ptr [edx+20h]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_710267E0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102688B	proc near		; DATA XREF: sub_710267E0+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-48h], eax
		jz	short loc_710268AD
		mov	edx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], edx
		call	ds:_ZN6QBrushD1Ev

loc_710268AD:				; CODE XREF: sub_7102688B+Dj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 28h
		mov	[esp+0], eax
		call	sub_71045940
		mov	eax, [ebp+8]
		mov	edx, [ebp-48h]
		mov	dword ptr [eax], offset	off_7105D728
		mov	[esp+0], edx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_7102688B	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_710525B0
		mov	dword ptr [ebp-20h], offset dword_7105370C
		mov	dword ptr [ebp-18h], offset loc_7102698B
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+8]
		mov	eax, ds:_ZN9QListData11shared_nullE
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx], offset	off_7105D8E8
		fild	dword ptr [ebp+0Ch]
		fstp	qword ptr [edx+8]
		fild	dword ptr [ebp+10h]
		fstp	qword ptr [edx+10h]
		fild	dword ptr [ebp+14h]
		fstp	qword ptr [edx+18h]
		mov	[edx+28h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 2
		add	eax, 2Ch
		mov	[ebp-44h], eax
		mov	[esp], eax
		call	ds:_ZN6QBrushC1Ev
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 1
		add	eax, 30h
		mov	[esp], eax
		call	ds:_ZN4QPenC1Ev
		mov	edx, [ebp+8]
		lea	eax, [ebp-3Ch]
		fld	qword ptr [edx+10h]
		fsub	qword ptr [edx+8]
		mov	byte ptr [edx+35h], 0
		fstp	qword ptr [edx+20h]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_7102698B:				; DATA XREF: .text:71026900o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-48h], eax
		jz	short loc_710269AD
		mov	edx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], edx
		call	ds:_ZN6QBrushD1Ev

loc_710269AD:				; CODE XREF: .text:71026998j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 28h
		mov	[esp], eax
		call	sub_71045940
		mov	eax, [ebp+8]
		mov	edx, [ebp-48h]
		mov	dword ptr [eax], offset	off_7105D728
		mov	[esp], edx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710269E0	proc near		; CODE XREF: sub_7100DE80+149p

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053714
		mov	[ebp+var_18], offset sub_71026A89
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx], offset	off_7105DA68
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	edx, [ebp+arg_0]
		mov	[edx+8], eax
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+4]
		mov	edx, [ebp+arg_0]
		mov	[edx+0Ch], eax
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+8]
		mov	edx, [ebp+arg_0]
		mov	[edx+10h], eax
		mov	edx, [ebp+arg_4]
		movzx	eax, word ptr [edx+0Ch]
		mov	edx, [ebp+arg_0]
		mov	[edx+14h], ax
		add	edx, 18h
		mov	[ebp+var_40], edx
		mov	[esp], edx
		mov	[ebp+var_38], 2
		call	ds:_ZN6QBrushC1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 1
		add	eax, 1Ch
		mov	[esp], eax
		call	ds:_ZN4QPenC1Ev
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_710269E0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71026A89	proc near		; DATA XREF: sub_710269E0+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], eax
		jz	short loc_71026AAB
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], edx
		call	ds:_ZN6QBrushD1Ev

loc_71026AAB:				; CODE XREF: sub_71026A89+Dj
		mov	eax, [ebp+8]
		mov	edx, [ebp-44h]
		mov	dword ptr [eax], offset	off_7105D728
		mov	[esp+0], edx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_71026A89	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_710525B0
		mov	dword ptr [ebp-20h], offset dword_7105371C
		mov	dword ptr [ebp-18h], offset loc_71026B79
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+8]
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx], offset	off_7105DA68
		mov	edx, [ebp+0Ch]
		mov	eax, [edx]
		mov	edx, [ebp+8]
		mov	[edx+8], eax
		mov	edx, [ebp+0Ch]
		mov	eax, [edx+4]
		mov	edx, [ebp+8]
		mov	[edx+0Ch], eax
		mov	edx, [ebp+0Ch]
		mov	eax, [edx+8]
		mov	edx, [ebp+8]
		mov	[edx+10h], eax
		mov	edx, [ebp+0Ch]
		movzx	eax, word ptr [edx+0Ch]
		mov	edx, [ebp+8]
		mov	[edx+14h], ax
		add	edx, 18h
		mov	[ebp-40h], edx
		mov	[esp], edx
		mov	dword ptr [ebp-38h], 2
		call	ds:_ZN6QBrushC1Ev
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 1
		add	eax, 1Ch
		mov	[esp], eax
		call	ds:_ZN4QPenC1Ev
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71026B79:				; DATA XREF: .text:71026AF0o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], eax
		jz	short loc_71026B9B
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], edx
		call	ds:_ZN6QBrushD1Ev

loc_71026B9B:				; CODE XREF: .text:71026B86j
		mov	eax, [ebp+8]
		mov	edx, [ebp-44h]
		mov	dword ptr [eax], offset	off_7105D728
		mov	[esp], edx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71026BC0	proc near		; CODE XREF: sub_71010F70+91p

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053724
		mov	[ebp+var_18], offset sub_71026C6E
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx], offset	off_7105D7E8
		add	edx, 8
		mov	[ebp+var_40], edx
		mov	[esp], edx
		mov	[ebp+var_38], 2
		call	ds:_ZN4QPenC1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 1
		add	eax, 0Ch
		mov	[esp], eax
		call	ds:_ZN4QPenC1Ev
		mov	eax, [ebp+arg_0]
		fld1
		mov	edx, [ebp+arg_0]
		fstp	qword ptr [eax+10h]
		mov	dword ptr [eax+30h], 0
		fldz
		fst	qword ptr [eax+18h]
		fst	qword ptr [eax+20h]
		fstp	qword ptr [eax+28h]
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[edx+34h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_0]
		and	byte ptr [eax+39h], 0F0h
		mov	byte ptr [eax+38h], 1
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71026BC0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71026C6E	proc near		; DATA XREF: sub_71026BC0+1Do
		add	ebp, 8
		mov	edx, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], edx
		jz	short loc_71026C90
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	ds:_ZN4QPenD1Ev

loc_71026C90:				; CODE XREF: sub_71026C6E+Dj
		mov	edx, [ebp+8]
		mov	eax, [ebp-44h]
		mov	dword ptr [edx], offset	off_7105D728
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_71026C6E	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	dword ptr [ebp-24h], offset sub_710525B0
		mov	dword ptr [ebp-20h], offset dword_7105372C
		mov	dword ptr [ebp-18h], offset loc_71026D5E
		mov	[ebp-14h], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+8]
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx], offset	off_7105D7E8
		add	edx, 8
		mov	[ebp-40h], edx
		mov	[esp], edx
		mov	dword ptr [ebp-38h], 2
		call	ds:_ZN4QPenC1Ev
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 1
		add	eax, 0Ch
		mov	[esp], eax
		call	ds:_ZN4QPenC1Ev
		mov	eax, [ebp+8]
		fld1
		mov	edx, [ebp+8]
		fstp	qword ptr [eax+10h]
		mov	dword ptr [eax+30h], 0
		fldz
		fst	qword ptr [eax+18h]
		fst	qword ptr [eax+20h]
		fstp	qword ptr [eax+28h]
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[edx+34h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+8]
		and	byte ptr [eax+39h], 0F0h
		mov	byte ptr [eax+38h], 1
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71026D5E:				; DATA XREF: .text:71026CCDo
		add	ebp, 8
		mov	edx, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], edx
		jz	short loc_71026D80
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], eax
		call	ds:_ZN4QPenD1Ev

loc_71026D80:				; CODE XREF: .text:71026D6Bj
		mov	edx, [ebp+8]
		mov	eax, [ebp-44h]
		mov	dword ptr [edx], offset	off_7105D728
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71026DA0	proc near		; CODE XREF: sub_7101A880+738p

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053734
		mov	[ebp+var_18], offset sub_71026E62
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx], offset	off_7105DA88
		fild	[ebp+arg_4]
		fstp	qword ptr [edx+8]
		fild	[ebp+arg_8]
		fstp	qword ptr [edx+10h]
		fild	[ebp+arg_C]
		fstp	qword ptr [edx+18h]
		mov	[edx+30h], eax
		mov	dword ptr [edx+28h], 0
		mov	dword ptr [edx+2Ch], 1
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+34h], 0
		add	eax, 38h
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_ZN10QTransformC1Ev
		mov	eax, [ebp+arg_0]
		add	eax, 88h
		mov	[esp], eax
		call	ds:_ZN10QTransformC1Ev
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_3C]
		fld	qword ptr [edx+10h]
		fsub	qword ptr [edx+8]
		mov	byte ptr [edx+0D8h], 0
		mov	byte ptr [edx+0E8h], 0
		fstp	qword ptr [edx+20h]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71026DA0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71026E62	proc near		; DATA XREF: sub_71026DA0+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-44h], eax
		mov	eax, [ebp+8]
		add	eax, 30h
		mov	[esp+0], eax
		call	sub_7104F050
		mov	edx, [ebp+8]
		mov	eax, [ebp-44h]
		mov	dword ptr [edx], offset	off_7105D728
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_71026E62	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_710525B0
		mov	dword ptr [ebp-20h], offset word_7105373A
		mov	dword ptr [ebp-18h], offset loc_71026F62
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+8]
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx], offset	off_7105DA88
		fild	dword ptr [ebp+0Ch]
		fstp	qword ptr [edx+8]
		fild	dword ptr [ebp+10h]
		fstp	qword ptr [edx+10h]
		fild	dword ptr [ebp+14h]
		fstp	qword ptr [edx+18h]
		mov	[edx+30h], eax
		mov	dword ptr [edx+28h], 0
		mov	dword ptr [edx+2Ch], 1
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+8]
		mov	dword ptr [eax+34h], 0
		add	eax, 38h
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 1
		call	ds:_ZN10QTransformC1Ev
		mov	eax, [ebp+8]
		add	eax, 88h
		mov	[esp], eax
		call	ds:_ZN10QTransformC1Ev
		mov	edx, [ebp+8]
		lea	eax, [ebp-3Ch]
		fld	qword ptr [edx+10h]
		fsub	qword ptr [edx+8]
		mov	byte ptr [edx+0D8h], 0
		mov	byte ptr [edx+0E8h], 0
		fstp	qword ptr [edx+20h]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71026F62:				; DATA XREF: .text:71026EC0o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-44h], eax
		mov	eax, [ebp+8]
		add	eax, 30h
		mov	[esp], eax
		call	sub_7104F050
		mov	edx, [ebp+8]
		mov	eax, [ebp-44h]
		mov	dword ptr [edx], offset	off_7105D728
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71026FA0	proc near		; CODE XREF: sub_7101A880+76Bp

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 1Ch
		mov	[esp+1Ch+var_C], ebx
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_4], edi
		mov	ebx, [esp+1Ch+arg_0]
		mov	edi, [esp+1Ch+arg_C]
		mov	[esp+1Ch+var_8], esi
		mov	[ebx+28h], eax
		mov	esi, [edi]
		lock inc dword ptr [esi]
		setnz	al
		mov	eax, [ebx+30h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71026FE7
		mov	[esp+1Ch+var_18], 8
		mov	eax, [ebx+30h]
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_71026FE7:				; CODE XREF: sub_71026FA0+31j
		mov	[ebx+30h], esi
		test	byte ptr [esi+0Ch], 1
		jnz	short loc_71027009
		mov	eax, [esi+4]
		mov	[esp+1Ch+var_14], eax
		mov	eax, [esi+8]
		mov	[esp+1Ch+var_18], eax
		lea	eax, [ebx+30h]
		mov	[esp+1Ch+var_1C], eax
		call	sub_7104EDA0

loc_71027009:				; CODE XREF: sub_71026FA0+4Ej
		mov	eax, [esp+1Ch+arg_8]
		mov	edx, 55555556h
		mov	[ebx+2Ch], eax
		mov	eax, [edi]
		mov	ecx, [eax+8]
		mov	eax, ecx
		imul	edx
		sar	ecx, 1Fh
		sub	edx, ecx
		mov	[ebx+34h], edx
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_71026FA0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71027040	proc near		; CODE XREF: sub_71027630+3Ap

var_22C		= qword	ptr -22Ch
var_220		= qword	ptr -220h
var_20C		= qword	ptr -20Ch
var_1FC		= qword	ptr -1FCh
var_1EC		= qword	ptr -1ECh
var_1DC		= qword	ptr -1DCh
var_1D0		= dword	ptr -1D0h
var_1CC		= qword	ptr -1CCh
var_1C4		= qword	ptr -1C4h
var_1BC		= qword	ptr -1BCh
var_1B4		= word ptr -1B4h
var_1B2		= word ptr -1B2h
var_1B0		= dword	ptr -1B0h
var_1AC		= byte ptr -1ACh
var_15C		= byte ptr -15Ch
var_10C		= byte ptr -10Ch
var_BC		= byte ptr -0BCh
var_6C		= byte ptr -6Ch
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 22Ch
		mov	eax, [esp+22Ch+arg_4]
		mov	[esp+22Ch+var_10], ebx
		mov	ebx, [esp+22Ch+arg_0]
		mov	[esp+22Ch+var_C], esi
		mov	[esp+22Ch+var_8], edi
		mov	[esp+22Ch+var_4], ebp
		mov	dword ptr [esp+22Ch+var_22C], eax
		call	sub_71022510
		add	eax, 0C4h
		mov	dword ptr [esp+22Ch+var_22C], eax
		call	ds:_ZNK5QTime7elapsedEv
		mov	[esp+22Ch+var_1B0], eax
		fild	[esp+22Ch+var_1B0]
		fld	qword ptr [ebx+8]
		fucom	st(1)
		fnstsw	ax
		sahf
		ja	loc_710271D1
		cmp	byte ptr [ebx+0D8h], 0
		jnz	loc_710271D7
		fld	qword ptr [ebx+20h]
		fldz
		fld	st
		fxch	st(2)
		fucom	st(2)
		fnstsw	ax
		sahf
		jnz	loc_71027200
		jp	loc_71027206
		fstp	st
		fstp	st(2)
		fstp	st
		fstp	st(1)
		fstp	[esp+22Ch+var_1CC]

loc_710270CF:				; CODE XREF: sub_71027040+231j
		mov	eax, [ebx+34h]
		sub	eax, 1
		mov	[esp+22Ch+var_1B0], eax
		fild	[esp+22Ch+var_1B0]
		fmul	[esp+22Ch+var_1CC]
		fst	[esp+22Ch+var_22C] ; double
		fstp	[esp+22Ch+var_20C]
		call	floor
		fnstcw	[esp+22Ch+var_1B2]
		movzx	eax, [esp+22Ch+var_1B2]
		mov	ah, 0Ch
		mov	[esp+22Ch+var_1B4], ax
		fldcw	[esp+22Ch+var_1B4]
		fistp	[esp+22Ch+var_1B0]
		fldcw	[esp+22Ch+var_1B2]
		mov	ebp, [esp+22Ch+var_1B0]
		fld	[esp+22Ch+var_20C]
		fstp	[esp+22Ch+var_22C] ; double
		call	ceil
		fnstcw	[esp+22Ch+var_1B2]
		movzx	eax, [esp+22Ch+var_1B2]
		mov	ah, 0Ch
		mov	[esp+22Ch+var_1B4], ax
		fldcw	[esp+22Ch+var_1B4]
		fistp	[esp+22Ch+var_1B0]
		fldcw	[esp+22Ch+var_1B2]
		cmp	dword ptr [ebx+28h], 5 ; switch	6 cases
		mov	esi, [esp+22Ch+var_1B0]
		ja	loc_710271DB	; jumptable 71027146 default case
		mov	eax, [ebx+28h]
		jmp	ds:off_7105A5C0[eax*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_71027150:				; CODE XREF: sub_71027040+106j
					; DATA XREF: .rdata:off_7105A5C0o
		lea	edi, [ebx+30h]	; jumptable 71027146 case 5
		add	ebx, 38h
		lea	eax, [ebp+ebp*2+0]
		mov	dword ptr [esp+22Ch+var_22C+4],	eax
		mov	dword ptr [esp+22Ch+var_22C], edi
		call	sub_7104F080
		fld	qword ptr [eax]
		lea	eax, [esi+esi*2]
		fstp	[esp+22Ch+var_20C]
		mov	dword ptr [esp+22Ch+var_22C+4],	eax
		lea	esi, [esp+22Ch+var_1AC]
		mov	dword ptr [esp+22Ch+var_22C], edi
		call	sub_7104F080
		fld	[esp+22Ch+var_20C]
		fld	qword ptr [eax]
		fsub	st, st(1)
		mov	dword ptr [esp+22Ch+var_22C], esi
		fmul	[esp+22Ch+var_1CC]
		faddp	st(1), st
		fstp	[esp+22Ch+var_1FC]
		call	ds:_ZN10QTransformC1Ev
		mov	dword ptr [esp+22Ch+var_22C+4],	esi
		mov	dword ptr [esp+22Ch+var_22C], ebx
		call	ds:_ZN10QTransformaSERKS_
		fld	[esp+22Ch+var_1FC]
		fmul	ds:dbl_7105A5F8
		fstp	[esp+22Ch+var_22C] ; double
		call	tan
		mov	dword ptr [esp+22Ch+var_22C], ebx
		fstp	[esp+22Ch+var_220]
		fldz
		fstp	[esp+22Ch+var_22C+4]
		call	ds:_ZN10QTransform5shearEdd
		jmp	short loc_710271DB ; jumptable 71027146	default	case
; ---------------------------------------------------------------------------

loc_710271D1:				; CODE XREF: sub_71027040+56j
		fstp	st
		fstp	st
		jmp	short loc_710271DB ; jumptable 71027146	default	case
; ---------------------------------------------------------------------------

loc_710271D7:				; CODE XREF: sub_71027040+63j
		fstp	st
		fstp	st

loc_710271DB:				; CODE XREF: sub_71027040+FDj
					; sub_71027040+106j ...
		mov	ebx, [esp+22Ch+var_10] ; jumptable 71027146 default case
		mov	esi, [esp+22Ch+var_C]
		mov	edi, [esp+22Ch+var_8]
		mov	ebp, [esp+22Ch+var_4]
		add	esp, 22Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71027200:				; CODE XREF: sub_71027040+77j
		fstp	st(1)
		fxch	st(2)
		jmp	short loc_71027210
; ---------------------------------------------------------------------------

loc_71027206:				; CODE XREF: sub_71027040+7Dj
		fstp	st(1)
		fxch	st(2)
		lea	esi, [esi+0]

loc_71027210:				; CODE XREF: sub_71027040+1C4j
		fsubp	st(3), st
		fxch	st(2)
		fdivrp	st(1), st
		fld	qword ptr [ebx+0E0h]
		fucom	st(2)
		fnstsw	ax
		fstp	st(2)
		sahf
		jb	short loc_71027234
		fucom	st(1)
		fnstsw	ax
		sahf
		ja	loc_710275B0
		fstp	st(1)
		jmp	short loc_71027236
; ---------------------------------------------------------------------------

loc_71027234:				; CODE XREF: sub_71027040+1E3j
		fstp	st(1)

loc_71027236:				; CODE XREF: sub_71027040+1F2j
					; sub_71027040+579j
		fld1
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jbe	short loc_7102726D
		fnstcw	[esp+22Ch+var_1B2]
		movzx	eax, [esp+22Ch+var_1B2]
		mov	ah, 0Ch
		mov	[esp+22Ch+var_1B4], ax
		fldcw	[esp+22Ch+var_1B4]
		fist	[esp+22Ch+var_1B0]
		fldcw	[esp+22Ch+var_1B2]
		mov	eax, [esp+22Ch+var_1B0]
		mov	[esp+22Ch+var_1B0], eax
		fild	[esp+22Ch+var_1B0]
		fsubp	st(1), st

loc_7102726D:				; CODE XREF: sub_71027040+201j
		fstp	[esp+22Ch+var_1CC]
		jmp	loc_710270CF
; ---------------------------------------------------------------------------

loc_71027276:				; CODE XREF: sub_71027040+106j
					; DATA XREF: .rdata:off_7105A5C0o
		lea	edi, [ebx+30h]	; jumptable 71027146 case 4
		add	ebx, 38h
		lea	eax, [ebp+ebp*2+0]
		mov	dword ptr [esp+22Ch+var_22C+4],	eax
		mov	dword ptr [esp+22Ch+var_22C], edi
		call	sub_7104F080
		fld	qword ptr [eax]
		lea	eax, [esi+esi*2]
		fstp	[esp+22Ch+var_20C]
		mov	dword ptr [esp+22Ch+var_22C+4],	eax
		lea	esi, [esp+22Ch+var_15C]
		mov	dword ptr [esp+22Ch+var_22C], edi
		call	sub_7104F080
		fld	[esp+22Ch+var_20C]
		fld	qword ptr [eax]
		fsub	st, st(1)
		mov	dword ptr [esp+22Ch+var_22C], esi
		fmul	[esp+22Ch+var_1CC]
		faddp	st(1), st
		fstp	[esp+22Ch+var_1FC]
		call	ds:_ZN10QTransformC1Ev
		mov	dword ptr [esp+22Ch+var_22C+4],	esi
		mov	dword ptr [esp+22Ch+var_22C], ebx
		call	ds:_ZN10QTransformaSERKS_
		fld	[esp+22Ch+var_1FC]
		fmul	ds:dbl_7105A5F8
		fstp	[esp+22Ch+var_22C] ; double
		call	tan
		mov	dword ptr [esp+22Ch+var_22C], ebx
		fldz
		fstp	[esp+22Ch+var_220]
		fstp	[esp+22Ch+var_22C+4]
		call	ds:_ZN10QTransform5shearEdd
		jmp	loc_710271DB	; jumptable 71027146 default case
; ---------------------------------------------------------------------------
		align 10h

loc_71027300:				; CODE XREF: sub_71027040+106j
					; DATA XREF: .rdata:off_7105A5C0o
		lea	ebp, [ebp+ebp*2+0] ; jumptable 71027146	case 3
		lea	edi, [esi+esi*2]
		lea	edx, [ebp+1]
		lea	esi, [ebx+30h]
		add	ebx, 38h
		mov	dword ptr [esp+22Ch+var_22C+4],	ebp
		add	ebp, 2
		mov	dword ptr [esp+22Ch+var_22C], esi
		mov	[esp+22Ch+var_1D0], edx
		call	sub_7104F080
		mov	edx, [esp+22Ch+var_1D0]
		fld	qword ptr [eax]
		fstp	[esp+22Ch+var_1BC]
		mov	dword ptr [esp+22Ch+var_22C+4],	edx
		mov	dword ptr [esp+22Ch+var_22C], esi
		call	sub_7104F080
		fld	qword ptr [eax]
		fstp	[esp+22Ch+var_20C]
		mov	dword ptr [esp+22Ch+var_22C+4],	ebp
		lea	ebp, [edi+1]
		mov	dword ptr [esp+22Ch+var_22C], esi
		call	sub_7104F080
		fld	qword ptr [eax]
		fstp	[esp+22Ch+var_1DC]
		mov	dword ptr [esp+22Ch+var_22C+4],	edi
		add	edi, 2
		mov	dword ptr [esp+22Ch+var_22C], esi
		call	sub_7104F080
		fld	qword ptr [eax]
		fstp	[esp+22Ch+var_1C4]
		mov	dword ptr [esp+22Ch+var_22C], esi
		mov	dword ptr [esp+22Ch+var_22C+4],	ebp
		call	sub_7104F080
		fld	qword ptr [eax]
		fstp	[esp+22Ch+var_1FC]
		mov	dword ptr [esp+22Ch+var_22C], esi
		lea	esi, [esp+22Ch+var_10C]
		mov	dword ptr [esp+22Ch+var_22C+4],	edi
		call	sub_7104F080
		fld	[esp+22Ch+var_1FC]
		fld	[esp+22Ch+var_20C]
		fsub	st(1), st
		fxch	st(1)
		fmul	[esp+22Ch+var_1CC]
		faddp	st(1), st
		fld	[esp+22Ch+var_1DC]
		fld	qword ptr [eax]
		fsub	st, st(1)
		mov	dword ptr [esp+22Ch+var_22C], esi
		fmul	[esp+22Ch+var_1CC]
		faddp	st(1), st
		fxch	st(1)
		fstp	[esp+22Ch+var_1FC]
		fstp	[esp+22Ch+var_20C]
		call	ds:_ZN10QTransformC1Ev
		mov	dword ptr [esp+22Ch+var_22C+4],	esi
		mov	dword ptr [esp+22Ch+var_22C], ebx
		call	ds:_ZN10QTransformaSERKS_
		mov	esi, ds:_ZN10QTransform9translateEdd
		mov	dword ptr [esp+22Ch+var_22C], ebx
		fld	[esp+22Ch+var_20C]
		fstp	[esp+22Ch+var_220]
		fld	[esp+22Ch+var_1FC]
		fstp	[esp+22Ch+var_22C+4]
		call	esi ; _ZN10QTransform9translateEdd
		mov	dword ptr [esp+22Ch+var_220], 2
		mov	dword ptr [esp+22Ch+var_22C], ebx
		fld	[esp+22Ch+var_1C4]
		fsub	[esp+22Ch+var_1BC]
		fmul	[esp+22Ch+var_1CC]
		fstp	[esp+22Ch+var_22C+4]
		call	ds:_ZN10QTransform6rotateEdN2Qt4AxisE
		mov	dword ptr [esp+22Ch+var_22C], ebx
		fld	[esp+22Ch+var_20C]
		fchs
		fstp	[esp+22Ch+var_220]
		fld	[esp+22Ch+var_1FC]
		fchs
		fstp	[esp+22Ch+var_22C+4]
		call	esi ; _ZN10QTransform9translateEdd
		jmp	loc_710271DB	; jumptable 71027146 default case
; ---------------------------------------------------------------------------

loc_71027428:				; CODE XREF: sub_71027040+106j
					; DATA XREF: .rdata:off_7105A5C0o
		lea	edi, [esi+esi*2] ; jumptable 71027146 case 2
		lea	ebp, [ebp+ebp*2+0]
		lea	esi, [ebx+30h]
		mov	dword ptr [esp+22Ch+var_22C+4],	ebp
		add	ebp, 1
		mov	dword ptr [esp+22Ch+var_22C], esi
		call	sub_7104F080
		fld	qword ptr [eax]
		fstp	[esp+22Ch+var_20C]
		mov	dword ptr [esp+22Ch+var_22C+4],	ebp
		mov	dword ptr [esp+22Ch+var_22C], esi
		call	sub_7104F080
		fld	qword ptr [eax]
		fstp	[esp+22Ch+var_1EC]
		mov	dword ptr [esp+22Ch+var_22C+4],	edi
		add	edi, 1
		mov	dword ptr [esp+22Ch+var_22C], esi
		call	sub_7104F080
		fld	qword ptr [eax]
		fstp	[esp+22Ch+var_1FC]
		mov	dword ptr [esp+22Ch+var_22C+4],	edi
		mov	dword ptr [esp+22Ch+var_22C], esi
		call	sub_7104F080
		fld	[esp+22Ch+var_1FC]
		fld	[esp+22Ch+var_20C]
		fsub	st(1), st
		fxch	st(1)
		fmul	[esp+22Ch+var_1CC]
		faddp	st(1), st
		fld	[esp+22Ch+var_1EC]
		fld	qword ptr [eax]
		fsub	st, st(1)
		fmul	[esp+22Ch+var_1CC]
		faddp	st(1), st
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnz	short loc_710274B0
		jp	short loc_710274B4
		fstp	st
		fld	st
		jmp	short loc_710274B6
; ---------------------------------------------------------------------------
		align 10h

loc_710274B0:				; CODE XREF: sub_71027040+465j
		fxch	st(1)
		jmp	short loc_710274B6
; ---------------------------------------------------------------------------

loc_710274B4:				; CODE XREF: sub_71027040+467j
		fxch	st(1)

loc_710274B6:				; CODE XREF: sub_71027040+46Dj
					; sub_71027040+472j
		lea	esi, [esp+22Ch+var_BC]
		add	ebx, 38h
		fstp	[esp+22Ch+var_1FC]
		fstp	[esp+22Ch+var_20C]
		mov	dword ptr [esp+22Ch+var_22C], esi
		call	ds:_ZN10QTransformC1Ev
		mov	dword ptr [esp+22Ch+var_22C+4],	esi
		mov	dword ptr [esp+22Ch+var_22C], ebx
		call	ds:_ZN10QTransformaSERKS_
		mov	dword ptr [esp+22Ch+var_22C], ebx
		fld	[esp+22Ch+var_20C]
		fstp	[esp+22Ch+var_220]
		fld	[esp+22Ch+var_1FC]
		fstp	[esp+22Ch+var_22C+4]
		call	ds:_ZN10QTransform5scaleEdd
		jmp	loc_710271DB	; jumptable 71027146 default case
; ---------------------------------------------------------------------------
		align 10h

loc_71027500:				; CODE XREF: sub_71027040+106j
					; DATA XREF: .rdata:off_7105A5C0o
		lea	edi, [esi+esi*2] ; jumptable 71027146 case 1
		lea	ebp, [ebp+ebp*2+0]
		lea	esi, [ebx+30h]
		add	ebx, 38h
		mov	dword ptr [esp+22Ch+var_22C+4],	ebp
		add	ebp, 1
		mov	dword ptr [esp+22Ch+var_22C], esi
		call	sub_7104F080
		fld	qword ptr [eax]
		fstp	[esp+22Ch+var_1EC]
		mov	dword ptr [esp+22Ch+var_22C], esi
		mov	dword ptr [esp+22Ch+var_22C+4],	ebp
		call	sub_7104F080
		fld	qword ptr [eax]
		fstp	[esp+22Ch+var_1DC]
		mov	dword ptr [esp+22Ch+var_22C+4],	edi
		add	edi, 1
		mov	dword ptr [esp+22Ch+var_22C], esi
		call	sub_7104F080
		fld	qword ptr [eax]
		fstp	[esp+22Ch+var_1FC]
		mov	dword ptr [esp+22Ch+var_22C], esi
		lea	esi, [esp+22Ch+var_6C]
		mov	dword ptr [esp+22Ch+var_22C+4],	edi
		call	sub_7104F080
		fld	[esp+22Ch+var_1DC]
		fld	qword ptr [eax]
		fsub	st, st(1)
		mov	dword ptr [esp+22Ch+var_22C], esi
		fmul	[esp+22Ch+var_1CC]
		faddp	st(1), st
		fstp	[esp+22Ch+var_20C]
		call	ds:_ZN10QTransformC1Ev
		mov	dword ptr [esp+22Ch+var_22C+4],	esi
		mov	dword ptr [esp+22Ch+var_22C], ebx
		call	ds:_ZN10QTransformaSERKS_
		mov	dword ptr [esp+22Ch+var_22C], ebx
		fld	[esp+22Ch+var_20C]
		fstp	[esp+22Ch+var_220]
		fld	[esp+22Ch+var_1FC]
		fld	[esp+22Ch+var_1EC]
		fsub	st(1), st
		fxch	st(1)
		fmul	[esp+22Ch+var_1CC]
		faddp	st(1), st
		fstp	[esp+22Ch+var_22C+4]
		call	ds:_ZN10QTransform9translateEdd
		jmp	loc_710271DB	; jumptable 71027146 default case
; ---------------------------------------------------------------------------

loc_710275B0:				; CODE XREF: sub_71027040+1EAj
		fstp	st
		mov	byte ptr [ebx+0D8h], 1
		jmp	loc_71027236
sub_71027040	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710275C0	proc near		; DATA XREF: .rdata:7105DA94o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_14], 0
		lea	eax, [ebx+88h]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN8QPainter17setWorldTransformERK10QTransformb
		mov	byte ptr [ebx+0E8h], 0
		add	esp, 18h
		pop	ebx
		retn
sub_710275C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71027600	proc near		; DATA XREF: .rdata:7105DA2Co

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_4]
		mov	edx, [esp+0Ch+arg_0]
		mov	[esp+0Ch+arg_8], 0
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_ZN8QPainter17setWorldTransformERK10QTransformb
		add	edx, 58h
		mov	[esp+0Ch+arg_4], edx
		add	esp, 0Ch
		jmp	eax
sub_71027600	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71027630	proc near		; DATA XREF: .rdata:7105DA90o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], esi
		call	ds:_ZNK8QPainter14worldTransformEv
		mov	[esp+1Ch+var_18], eax
		lea	eax, [ebx+88h]
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN10QTransformaSERKS_
		mov	eax, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_71027040
		lea	eax, [ebx+38h]
		mov	[esp+1Ch+var_1C], esi
		mov	[esp+1Ch+var_14], 1
		mov	[esp+1Ch+var_18], eax
		call	ds:_ZN8QPainter17setWorldTransformERK10QTransformb
		mov	byte ptr [ebx+0E8h], 1
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_71027630	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710276A0	proc near		; DATA XREF: .rdata:7105DA28o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], ebx
		call	ds:_ZNK8QPainter14worldTransformEv
		mov	[esp+1Ch+var_18], eax
		lea	eax, [esi+58h]
		add	esi, 8
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN10QTransformaSERKS_
		mov	eax, ds:_ZN8QPainter17setWorldTransformERK10QTransformb
		mov	[esp+1Ch+arg_4], esi
		mov	esi, [esp+1Ch+var_4]
		mov	[esp+1Ch+arg_0], ebx
		mov	ebx, [esp+1Ch+var_8]
		mov	[esp+1Ch+arg_8], 1
		add	esp, 1Ch
		jmp	eax
sub_710276A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71027700	proc near		; DATA XREF: .rdata:7105D744o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 0Ch
		mov	edx, [esp+0Ch+arg_0]
		mov	eax, [esp+0Ch+arg_4]
		mov	edx, [edx+0Ch]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_ZN8QPainter18setCompositionModeENS_15CompositionModeE
		mov	[esp+0Ch+arg_4], edx
		add	esp, 0Ch
		jmp	eax
sub_71027700	endp


; =============== S U B	R O U T	I N E =======================================


sub_71027720	proc near		; DATA XREF: .rdata:7105D740o

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], ebx
		call	ds:_ZNK8QPainter15compositionModeEv
		mov	[esi+0Ch], eax
		mov	eax, [esi+8]
		mov	[esp+1Ch+arg_0], ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		mov	[esp+1Ch+arg_4], eax
		mov	eax, ds:_ZN8QPainter18setCompositionModeENS_15CompositionModeE
		add	esp, 1Ch
		jmp	eax
sub_71027720	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71027760	proc near		; CODE XREF: sub_7100A6C0+239p

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053750
		mov	[ebp+var_18], offset sub_71027827
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_4]
		mov	eax, edx
		add	eax, 8
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx], offset	off_7105DA20
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_ZN7QMatrixC1ERKS_
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_0]
		fld	qword ptr [eax+30h]
		fstp	qword ptr [edx+38h]
		fld	qword ptr [eax+38h]
		fstp	qword ptr [edx+40h]
		fld	qword ptr [eax+40h]
		fstp	qword ptr [edx+48h]
		movzx	edx, byte ptr [eax+48h]
		movzx	eax, byte ptr [ecx+50h]
		and	edx, 1Fh
		and	eax, 0FFFFFFE0h
		or	eax, edx
		mov	[ecx+50h], al
		mov	eax, [ebp+arg_4]
		movzx	edx, word ptr [eax+48h]
		movzx	eax, word ptr [ecx+50h]
		and	dx, 3E0h
		and	ax, 0FC1Fh
		or	eax, edx
		mov	[ecx+50h], ax
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+4Ch]
		mov	[ecx+54h], eax
		mov	eax, ecx
		add	eax, 58h
		mov	[esp], eax
		call	ds:_ZN10QTransformC1Ev
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71027760	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71027827	proc near		; DATA XREF: sub_71027760+20o
		add	ebp, 8
		mov	ecx, [ebp+8]
		mov	eax, [ebp-34h]
		mov	dword ptr [ecx], offset	off_7105D728
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_71027827	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_710525B0
		mov	dword ptr [ebp-20h], offset word_71053756
		mov	dword ptr [ebp-18h], offset loc_71027917
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+8]
		mov	ecx, [ebp+0Ch]
		mov	eax, edx
		add	eax, 8
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx], offset	off_7105DA20
		mov	[esp+4], ecx
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 1
		call	ds:_ZN7QMatrixC1ERKS_
		mov	eax, [ebp+0Ch]
		mov	edx, [ebp+8]
		mov	ecx, [ebp+8]
		fld	qword ptr [eax+30h]
		fstp	qword ptr [edx+38h]
		fld	qword ptr [eax+38h]
		fstp	qword ptr [edx+40h]
		fld	qword ptr [eax+40h]
		fstp	qword ptr [edx+48h]
		movzx	edx, byte ptr [eax+48h]
		movzx	eax, byte ptr [ecx+50h]
		and	edx, 1Fh
		and	eax, 0FFFFFFE0h
		or	eax, edx
		mov	[ecx+50h], al
		mov	eax, [ebp+0Ch]
		movzx	edx, word ptr [eax+48h]
		movzx	eax, word ptr [ecx+50h]
		and	dx, 3E0h
		and	ax, 0FC1Fh
		or	eax, edx
		mov	[ecx+50h], ax
		mov	edx, [ebp+0Ch]
		mov	eax, [edx+4Ch]
		mov	[ecx+54h], eax
		mov	eax, ecx
		add	eax, 58h
		mov	[esp], eax
		call	ds:_ZN10QTransformC1Ev
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71027917:				; DATA XREF: .text:71027870o
		add	ebp, 8
		mov	ecx, [ebp+8]
		mov	eax, [ebp-34h]
		mov	dword ptr [ecx], offset	off_7105D728
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71027940	proc near		; CODE XREF: sub_7100E900+2A4p
					; sub_7100E900+43Fp

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		add	eax, 10h
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_ZN7QMatrixaSERKS_
		add	esp, 0Ch
		jmp	eax
sub_71027940	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71027960	proc near		; CODE XREF: sub_7100F140+313p
					; sub_7100F6F0+2D2p

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053770
		mov	[ebp+var_18], offset sub_710279DF
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		mov	dword ptr [edx+4], 0
		mov	[edx+8], eax
		mov	eax, edx
		add	eax, 10h
		mov	dword ptr [edx], offset	off_7105D968
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_ZN7QMatrixC1Ev
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	edx, [ebp+arg_0]
		mov	[edx+44h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_0]
		mov	byte ptr [eax+48h], 0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71027960	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710279DF	proc near		; DATA XREF: sub_71027960+20o
		add	ebp, 8
		mov	edx, [ebp+8]
		mov	eax, [ebp-34h]
		mov	dword ptr [edx], offset	off_7105D728
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_710279DF	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_710525B0
		mov	dword ptr [ebp-20h], offset word_71053776
		mov	dword ptr [ebp-18h], offset loc_71027A7F
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+8]
		mov	eax, [ebp+0Ch]
		mov	dword ptr [edx+4], 0
		mov	[edx+8], eax
		mov	eax, edx
		add	eax, 10h
		mov	dword ptr [edx], offset	off_7105D968
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 1
		call	ds:_ZN7QMatrixC1Ev
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	edx, [ebp+8]
		mov	[edx+44h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+8]
		mov	byte ptr [eax+48h], 0
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71027A7F:				; DATA XREF: .text:71027A20o
		add	ebp, 8
		mov	edx, [ebp+8]
		mov	eax, [ebp-34h]
		mov	dword ptr [edx], offset	off_7105D728
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71027AA0	proc near		; DATA XREF: .rdata:7105D6D4o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_8]
		lea	eax, [ebx+24h]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN8QPainter7setFontERK5QFont
		mov	eax, [ebx+20h]
		mov	[esi+10h], eax
		mov	eax, [ebx+2Ch]
		mov	[esi+14h], eax
		mov	eax, [ebx+30h]
		mov	[esi+18h], eax
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_71027AA0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71027AF0	proc near		; CODE XREF: sub_71011C90+176p

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_7105377C
		mov	[ebp+var_18], offset sub_71027B8B
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax], offset	off_7105D6C8
		mov	dword ptr [eax+8], 0
		mov	dword ptr [eax+0Ch], 0
		add	eax, 10h
		mov	[ebp+var_40], eax
		mov	[esp], eax
		mov	[ebp+var_38], 2
		call	ds:_ZN5QFontC1Ev
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+1Ch], 0
		add	eax, 24h
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_ZN5QFontC1Ev
		mov	eax, [ebp+arg_0]
		and	byte ptr [eax+34h], 0C0h
		mov	dword ptr [eax+2Ch], 0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71027AF0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71027B8B	proc near		; DATA XREF: sub_71027AF0+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], eax
		jz	short loc_71027BAD
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	ds:_ZN5QFontD1Ev

loc_71027BAD:				; CODE XREF: sub_71027B8B+Dj
		mov	eax, [ebp+8]
		mov	dword ptr [eax], offset	off_7105D728
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71027B8B	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_710525B0
		mov	dword ptr [ebp-20h], offset dword_71053784
		mov	dword ptr [ebp-18h], offset loc_71027C6B
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+8]
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax], offset	off_7105D6C8
		mov	dword ptr [eax+8], 0
		mov	dword ptr [eax+0Ch], 0
		add	eax, 10h
		mov	[ebp-40h], eax
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 2
		call	ds:_ZN5QFontC1Ev
		mov	eax, [ebp+8]
		mov	dword ptr [eax+1Ch], 0
		add	eax, 24h
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 1
		call	ds:_ZN5QFontC1Ev
		mov	eax, [ebp+8]
		and	byte ptr [eax+34h], 0C0h
		mov	dword ptr [eax+2Ch], 0
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71027C6B:				; DATA XREF: .text:71027BF0o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], eax
		jz	short loc_71027C8D
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], eax
		call	ds:_ZN5QFontD1Ev

loc_71027C8D:				; CODE XREF: .text:71027C78j
		mov	eax, [ebp+8]
		mov	dword ptr [eax], offset	off_7105D728
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71027CB0	proc near		; CODE XREF: sub_71011C90+A13p
					; sub_710194B0+2C5p

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_7105378C
		mov	[ebp+var_18], offset sub_71027D49
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		mov	dword ptr [edx+4], 0
		mov	[edx+8], eax
		mov	eax, [ebp+arg_8]
		mov	dword ptr [edx], offset	off_7105D6C8
		mov	[edx+0Ch], eax
		add	edx, 10h
		mov	[ebp+var_40], edx
		mov	[esp], edx
		mov	[ebp+var_38], 2
		call	ds:_ZN5QFontC1Ev
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+1Ch], 0
		add	eax, 24h
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_ZN5QFontC1Ev
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_3C]
		and	byte ptr [edx+34h], 0C0h
		mov	dword ptr [edx+2Ch], 0
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71027CB0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71027D49	proc near		; DATA XREF: sub_71027CB0+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], eax
		jz	short loc_71027D6B
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], edx
		call	ds:_ZN5QFontD1Ev

loc_71027D6B:				; CODE XREF: sub_71027D49+Dj
		mov	eax, [ebp+8]
		mov	edx, [ebp-44h]
		mov	dword ptr [eax], offset	off_7105D728
		mov	[esp+0], edx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_71027D49	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_710525B0
		mov	dword ptr [ebp-20h], offset dword_71053794
		mov	dword ptr [ebp-18h], offset loc_71027E29
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+8]
		mov	eax, [ebp+0Ch]
		mov	dword ptr [edx+4], 0
		mov	[edx+8], eax
		mov	eax, [ebp+10h]
		mov	dword ptr [edx], offset	off_7105D6C8
		mov	[edx+0Ch], eax
		add	edx, 10h
		mov	[ebp-40h], edx
		mov	[esp], edx
		mov	dword ptr [ebp-38h], 2
		call	ds:_ZN5QFontC1Ev
		mov	eax, [ebp+8]
		mov	dword ptr [eax+1Ch], 0
		add	eax, 24h
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 1
		call	ds:_ZN5QFontC1Ev
		mov	edx, [ebp+8]
		lea	eax, [ebp-3Ch]
		and	byte ptr [edx+34h], 0C0h
		mov	dword ptr [edx+2Ch], 0
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71027E29:				; DATA XREF: .text:71027DB0o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], eax
		jz	short loc_71027E4B
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp], edx
		call	ds:_ZN5QFontD1Ev

loc_71027E4B:				; CODE XREF: .text:71027E36j
		mov	eax, [ebp+8]
		mov	edx, [ebp-44h]
		mov	dword ptr [eax], offset	off_7105D728
		mov	[esp], edx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71027E70	proc near		; DATA XREF: .rdata:7105D6D0o

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= byte ptr -14h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_710537D4
		mov	[ebp+var_28], offset sub_7102810E
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], edx
		call	ds:_ZNK8QPainter4fontEv
		mov	edx, [ebp+arg_0]
		add	edx, 24h
		mov	[ebp+var_50], edx
		mov	[esp], edx
		mov	[esp+4], eax
		call	ds:_ZN5QFontaSERKS_
		mov	edx, [ebp+arg_C]
		mov	eax, [edx+10h]
		mov	edx, [ebp+arg_0]
		mov	[edx+20h], eax
		mov	edx, [ebp+arg_C]
		mov	eax, [edx+14h]
		mov	edx, [ebp+arg_0]
		mov	[edx+2Ch], eax
		mov	edx, [ebp+arg_C]
		mov	eax, [edx+18h]
		mov	edx, [ebp+arg_0]
		test	byte ptr [edx+34h], 20h
		mov	[edx+30h], eax
		jz	short loc_71027EFB
		mov	eax, [edx+1Ch]
		mov	edx, [ebp+arg_C]
		mov	[edx+14h], eax

loc_71027EFB:				; CODE XREF: sub_71027E70+80j
		mov	eax, [ebp+var_50]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		call	ds:_ZN5QFontC1ERKS_
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+34h]
		test	al, 1
		jnz	loc_71028050

loc_71027F24:				; CODE XREF: sub_71027E70+237j
					; sub_71027E70+27Aj
		test	al, 2
		jnz	loc_71028017

loc_71027F2C:				; CODE XREF: sub_71027E70+1D4j
		test	al, 4
		jnz	loc_71027FE5

loc_71027F34:				; CODE XREF: sub_71027E70+1A2j
		test	al, 8
		jnz	short loc_71027FB3

loc_71027F38:				; CODE XREF: sub_71027E70+170j
		test	al, 10h
		jz	short loc_71027F79
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+18h]
		cmp	eax, 1
		jz	loc_710280F0
		cmp	eax, 0FFFFFFFFh
		jz	loc_710280B0

loc_71027F54:				; CODE XREF: sub_71027E70+24Cj
					; sub_71027E70+257j ...
		mov	edx, [ebp+arg_C]
		mov	[edx+18h], eax
		mov	[esp], eax
		call	sub_71025370
		mov	[ebp+var_48], 2
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		call	ds:_ZN5QFont9setWeightEi

loc_71027F79:				; CODE XREF: sub_71027E70+CAj
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_48], 2
		mov	[esp], eax
		call	ds:_ZN8QPainter7setFontERK5QFont
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN5QFontD1Ev
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71027FB3:				; CODE XREF: sub_71027E70+C6j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 2
		add	eax, 10h
		mov	[esp], eax
		call	ds:_ZNK5QFont14capitalizationEv
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		call	ds:_ZN5QFont17setCapitalizationENS_14CapitalizationE
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+34h]
		jmp	loc_71027F38
; ---------------------------------------------------------------------------

loc_71027FE5:				; CODE XREF: sub_71027E70+BEj
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 2
		add	eax, 10h
		mov	[esp], eax
		call	ds:_ZNK5QFont5styleEv
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		call	ds:_ZN5QFont8setStyleENS_5StyleE
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+34h]
		jmp	loc_71027F34
; ---------------------------------------------------------------------------

loc_71028017:				; CODE XREF: sub_71027E70+B6j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 2
		add	eax, 10h
		mov	[esp], eax
		call	ds:_ZNK5QFont10pointSizeFEv
		lea	eax, [ebp+var_14]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	ds:_ZN5QFont13setPointSizeFEd
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+34h]
		jmp	loc_71027F2C
; ---------------------------------------------------------------------------
		align 10h

loc_71028050:				; CODE XREF: sub_71027E70+AEj
		mov	eax, [edx+8]
		mov	edx, [ebp+arg_C]
		mov	[edx+10h], eax
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		add	edx, 10h
		mov	[esp+4], edx
		call	ds:_ZNK5QFont6familyEv
		sub	esp, 4
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN5QFont9setFamilyERK7QString
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_710280D0
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+34h]
		jmp	loc_71027F24
; ---------------------------------------------------------------------------
		align 10h

loc_710280B0:				; CODE XREF: sub_71027E70+DEj
		mov	edx, [ebp+arg_C]
		mov	eax, [edx+18h]
		sub	eax, 64h
		cmp	eax, 63h
		jg	loc_71027F54
		mov	eax, 64h
		jmp	loc_71027F54
; ---------------------------------------------------------------------------
		align 10h

loc_710280D0:				; CODE XREF: sub_71027E70+22Ej
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+34h]
		jmp	loc_71027F24
; ---------------------------------------------------------------------------
		align 10h

loc_710280F0:				; CODE XREF: sub_71027E70+D5j
		mov	edx, [ebp+arg_C]
		mov	eax, [edx+18h]
		add	eax, 64h
		cmp	eax, 383h
		jle	loc_71027F54
		mov	eax, 384h
		jmp	loc_71027F54
sub_71027E70	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102810E	proc near		; DATA XREF: sub_71027E70+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-54h], eax
		jz	short loc_7102812F
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_710477B0

loc_7102812F:				; CODE XREF: sub_7102810E+Dj
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN5QFontD1Ev
		mov	edx, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_7102810E	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71028160	proc near		; CODE XREF: sub_71010F70+669p

var_5C		= dword	ptr -5Ch
var_58		= qword	ptr -58h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_710537E8
		mov	[ebp+var_28], offset sub_710282F5
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		test	byte ptr [edx+39h], 4
		jz	loc_710282B0
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_C]
		test	byte ptr [eax+0Ch], 1
		jz	loc_710282D0

loc_710281B7:				; CODE XREF: sub_71028160+190j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 1
		add	eax, 8
		mov	[ebp+var_5C], eax
		mov	[esp], eax
		call	ds:_ZNK4QPen6widthFEv
		fstp	[ebp+var_58]
		fldz
		fld	[ebp+var_58]
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jp	short loc_710281E3
		jz	short loc_71028250

loc_710281E3:				; CODE XREF: sub_71028160+7Fj
		fld1
		fxch	st(1)
		fucompp
		fnstsw	ax
		sahf
		jp	short loc_710281F2
		xchg	ax, ax
		jz	short loc_71028252

loc_710281F2:				; CODE XREF: sub_71028160+8Cj
		mov	eax, [ebp+var_C]
		mov	edx, [eax+8]
		test	edx, edx
		jle	short loc_71028252
		mov	[ebp+var_50], 0

loc_71028203:				; CODE XREF: sub_71028160+E6j
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_71028227
		mov	eax, [eax+4]
		mov	[esp+4], edx
		mov	[ebp+var_48], 1
		mov	[esp+8], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	sub_7104EDA0

loc_71028227:				; CODE XREF: sub_71028160+A8j
		mov	edx, [ebp+var_50]
		mov	eax, [ebp+var_C]
		fld	[ebp+var_58]
		add	[ebp+var_50], 1
		add	edx, 2
		fdivr	qword ptr [eax+edx*8]
		fstp	qword ptr [eax+edx*8]
		mov	eax, [ebp+var_C]
		mov	edx, [eax+8]
		cmp	[ebp+var_50], edx
		jl	short loc_71028203
		jmp	short loc_71028252
; ---------------------------------------------------------------------------
		align 10h

loc_71028250:				; CODE XREF: sub_71028160+81j
		fstp	st

loc_71028252:				; CODE XREF: sub_71028160+90j
					; sub_71028160+9Aj ...
		mov	edx, [ebp+var_5C]
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	[ebp+var_48], 1
		mov	[esp], edx
		call	ds:_ZN4QPen14setDashPatternERK7QVectorIdE
		mov	eax, [ebp+var_C]
		test	eax, eax
		jz	short loc_71028298
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71028298
		mov	eax, [ebp+var_C]
		mov	dword ptr [esp+4], 8
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_71028298:				; CODE XREF: sub_71028160+111j
					; sub_71028160+11Bj ...
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_4C]
		or	byte ptr [edx+38h], 10h
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_710282B0:				; CODE XREF: sub_71028160+36j
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 8
		mov	[esp], eax
		call	ds:_ZN4QPen14setDashPatternERK7QVectorIdE
		jmp	short loc_71028298
; ---------------------------------------------------------------------------
		align 10h

loc_710282D0:				; CODE XREF: sub_71028160+51j
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	sub_7104EDA0
		jmp	loc_710281B7
sub_71028160	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710282F5	proc near		; DATA XREF: sub_71028160+1Do
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-60h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_7104F050
		mov	edx, [ebp-60h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_710282F5	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71028330	proc near		; DATA XREF: .rdata:7105D7F0o

var_90		= qword	ptr -90h
var_85		= byte ptr -85h
var_84		= dword	ptr -84h
var_80		= qword	ptr -80h
var_74		= dword	ptr -74h
var_70		= qword	ptr -70h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= byte ptr -14h
var_10		= byte ptr -10h
var_C		= byte ptr -0Ch
var_8		= byte ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 0A4h
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_710525B0
		mov	[ebp+var_40], offset word_710537EE
		mov	[ebp+var_38], offset sub_710289C5
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	ecx, ds:_ZNK8QPainter3penEv
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], edx
		mov	[ebp+var_60], ecx
		call	ecx ; _ZNK8QPainter3penEv
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 0Ch
		mov	[esp], eax
		call	ds:_ZN4QPenaSERKS_
		mov	ebx, [ebp+arg_C]
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+arg_0]
		fld	qword ptr [ebx+8]
		fstp	qword ptr [eax+18h]
		fld	qword ptr [ebx+20h]
		fstp	qword ptr [eax+28h]
		movzx	eax, byte ptr [ebx+28h]
		and	eax, 1
		lea	edx, ds:0[eax*4]
		movzx	eax, byte ptr [ecx+38h]
		and	eax, 0FFFFFFFBh
		or	eax, edx
		mov	[ecx+38h], al
		mov	ebx, [ebp+arg_4]
		mov	[esp], ebx
		call	[ebp+var_60]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZN4QPenC1ERKS_
		lea	edx, [ebp+var_C]
		mov	[esp], edx
		mov	[ebp+var_58], 6
		call	ds:_ZNK4QPen6widthFEv
		mov	ecx, [ebp+arg_0]
		fstp	[ebp+var_80]
		add	ecx, 8
		mov	[ebp+var_84], ecx
		mov	[esp], ecx
		call	ds:_ZNK4QPen6widthFEv
		fstp	[ebp+var_90]
		fldz
		fld	[ebp+var_80]
		fucompp
		fnstsw	ax
		sahf
		jnz	short loc_7102841A
		jp	short loc_7102841A
		fld1
		fstp	[ebp+var_80]

loc_7102841A:				; CODE XREF: sub_71028330+E1j
					; sub_71028330+E3j
		fldz
		fld	[ebp+var_90]
		fucompp
		fnstsw	ax
		sahf
		jnz	short loc_71028433
		jp	short loc_71028433
		fld1
		fstp	[ebp+var_90]

loc_71028433:				; CODE XREF: sub_71028330+F7j
					; sub_71028330+F9j
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+39h]
		test	al, 2
		jz	short loc_7102844B
		mov	ecx, [ebp+arg_C]
		fld	qword ptr [edx+10h]
		fstp	qword ptr [ecx+8]
		movzx	eax, byte ptr [edx+39h]

loc_7102844B:				; CODE XREF: sub_71028330+10Cj
		test	al, 8
		jz	short loc_71028461
		mov	ebx, [ebp+arg_0]
		mov	edx, [ebp+arg_C]
		movzx	eax, byte ptr [ebx+38h]
		shr	al, 1
		and	eax, 1
		mov	[edx+28h], al

loc_71028461:				; CODE XREF: sub_71028330+11Dj
		mov	ecx, [ebp+arg_0]
		test	byte ptr [ecx+38h], 8
		jz	short loc_710284CB
		mov	eax, [ecx+30h]
		test	eax, eax
		jz	loc_710287C0
		mov	ebx, [ebp+arg_C]
		lea	ecx, [ebp+var_10]
		mov	edx, [eax]
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	[esp+0Ch], ebx
		mov	ebx, [ebp+arg_4]
		mov	[esp+8], ebx
		mov	eax, [edx+14h]
		mov	[ebp+var_58], 6
		call	eax
		sub	esp, 4
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_58], 5
		call	ds:_ZN4QPen8setBrushERK6QBrush
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_58], 6
		call	ds:_ZN6QBrushD1Ev

loc_710284CB:				; CODE XREF: sub_71028330+138j
					; sub_71028330+4DDj
		mov	ecx, [ebp+arg_0]
		test	byte ptr [ecx+39h], 4
		jnz	loc_71028597

loc_710284D8:				; CODE XREF: sub_71028330+28Dj
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+38h]
		mov	[ebp+var_85], 0
		test	al, 20h
		jz	short loc_710284FE
		mov	ebx, [ebp+arg_C]
		fld	qword ptr [edx+20h]
		fstp	qword ptr [ebx+20h]
		movzx	eax, byte ptr [edx+38h]
		mov	[ebp+var_85], 1

loc_710284FE:				; CODE XREF: sub_71028330+1B8j
		test	al, 10h
		jnz	loc_710285C2
		mov	ecx, [ebp+arg_0]
		test	byte ptr [ecx+39h], 4
		jnz	loc_71028780

loc_71028513:				; CODE XREF: sub_71028330+489j
					; sub_71028330+4E9j ...
		test	al, 40h
		jnz	loc_71028684

loc_7102851B:				; CODE XREF: sub_71028330+34Ej
		test	al, al
		lea	esi, [esi+0]
		js	loc_710286B9

loc_71028526:				; CODE XREF: sub_71028330+383j
		mov	edx, [ebp+arg_0]
		test	byte ptr [edx+39h], 1
		lea	esi, [esi+0]
		jnz	loc_710286EC

loc_71028536:				; CODE XREF: sub_71028330+3B6j
		cmp	[ebp+var_85], 0
		jnz	loc_7102871F

loc_71028543:				; CODE XREF: sub_71028330+3E9j
					; sub_71028330+405j ...
		mov	ecx, [ebp+arg_C]
		movzx	eax, byte ptr [ecx+28h]
		mov	[ebp+var_58], 6
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZN4QPen11setCosmeticEb
		mov	ebx, [ebp+arg_4]
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	[esp], ebx
		call	ds:_ZN8QPainter6setPenERK4QPen
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN4QPenD1Ev
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	ebx, [ebp+var_4]
		leave
		retn
; ---------------------------------------------------------------------------

loc_71028597:				; CODE XREF: sub_71028330+1A2j
		mov	ebx, [ebp+var_84]
		mov	[ebp+var_58], 6
		mov	[esp], ebx
		call	ds:_ZNK4QPen6widthFEv
		lea	eax, [ebp+var_C]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	ds:_ZN4QPen9setWidthFEd
		jmp	loc_710284D8
; ---------------------------------------------------------------------------

loc_710285C2:				; CODE XREF: sub_71028330+1D0j
		mov	eax, [ebp+var_84]
		mov	[ebp+var_58], 6
		mov	[esp], eax
		call	ds:_ZNK4QPen5styleEv
		cmp	eax, 1
		jz	loc_710289AC
		mov	edx, [ebp+arg_0]
		test	byte ptr [edx+39h], 4
		jnz	short loc_71028600
		fld1
		fld	[ebp+var_80]
		fucompp
		fnstsw	ax
		sahf
		jnz	loc_71028905
		jp	loc_71028905

loc_71028600:				; CODE XREF: sub_71028330+2B8j
		mov	edx, [ebp+var_84]
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_58], 6
		mov	[esp+4], edx
		call	ds:_ZNK4QPen11dashPatternEv
		sub	esp, 4
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_58], 3
		call	ds:_ZN4QPen14setDashPatternERK7QVectorIdE
		mov	eax, [ebp+var_18]
		test	eax, eax
		jz	loc_710288DF
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_710288F2
		mov	eax, [ebp+var_18]
		mov	dword ptr [esp+4], 8
		mov	[ebp+var_58], 6
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_7102866E:				; CODE XREF: sub_71028330+58Ej
					; sub_71028330+677j
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+38h]
		mov	[ebp+var_85], 1
		test	al, 40h
		jz	loc_7102851B

loc_71028684:				; CODE XREF: sub_71028330+1E5j
		mov	ecx, [ebp+var_84]
		mov	[ebp+var_58], 6
		mov	[esp], ecx
		call	ds:_ZNK4QPen8capStyleEv
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZN4QPen11setCapStyleEN2Qt11PenCapStyleE
		mov	ebx, [ebp+arg_0]
		movzx	eax, byte ptr [ebx+38h]
		test	al, al
		jns	loc_71028526

loc_710286B9:				; CODE XREF: sub_71028330+1F0j
		mov	eax, [ebp+var_84]
		mov	[ebp+var_58], 6
		mov	[esp], eax
		call	ds:_ZNK4QPen9joinStyleEv
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZN4QPen12setJoinStyleEN2Qt12PenJoinStyleE
		mov	edx, [ebp+arg_0]
		test	byte ptr [edx+39h], 1
		jz	loc_71028536

loc_710286EC:				; CODE XREF: sub_71028330+200j
		mov	ecx, [ebp+var_84]
		mov	[ebp+var_58], 6
		mov	[esp], ecx
		call	ds:_ZNK4QPen10miterLimitEv
		lea	eax, [ebp+var_C]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	ds:_ZN4QPen13setMiterLimitEd
		cmp	[ebp+var_85], 0
		jz	loc_71028543

loc_7102871F:				; CODE XREF: sub_71028330+20Dj
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_58], 6
		call	ds:_ZNK4QPen5styleEv
		cmp	eax, 1
		jz	loc_71028543
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZNK4QPen6widthFEv
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnz	short loc_7102875A
		jp	short loc_7102875A
		fstp	st
		fld1

loc_7102875A:				; CODE XREF: sub_71028330+422j
					; sub_71028330+424j
		mov	edx, [ebp+arg_C]
		lea	eax, [ebp+var_C]
		fdivr	qword ptr [edx+20h]
		mov	[esp], eax
		mov	[ebp+var_58], 6
		fstp	qword ptr [esp+4]
		call	ds:_ZN4QPen13setDashOffsetEd
		jmp	loc_71028543
; ---------------------------------------------------------------------------
		align 10h

loc_71028780:				; CODE XREF: sub_71028330+1DDj
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_58], 6
		call	ds:_ZNK4QPen5styleEv
		cmp	eax, 1
		jz	short loc_71028812
		fld	[ebp+var_80]
		fdiv	[ebp+var_90]
		fstp	[ebp+var_70]
		fld1
		fld	[ebp+var_70]
		fucompp
		fnstsw	ax
		sahf
		jnz	short loc_71028820
		jp	short loc_71028820

loc_710287B2:				; CODE XREF: sub_71028330+690j
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+38h]
		jmp	loc_71028513
; ---------------------------------------------------------------------------
		align 10h

loc_710287C0:				; CODE XREF: sub_71028330+13Fj
		mov	edx, [ebp+var_84]
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_58], 6
		mov	[esp+4], edx
		call	ds:_ZNK4QPen5brushEv
		sub	esp, 4
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_58], 4
		call	ds:_ZN4QPen8setBrushERK6QBrush
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_58], 6
		call	ds:_ZN6QBrushD1Ev
		jmp	loc_710284CB
; ---------------------------------------------------------------------------

loc_71028812:				; CODE XREF: sub_71028330+466j
		mov	ebx, [ebp+arg_0]
		movzx	eax, byte ptr [ebx+38h]
		jmp	loc_71028513
; ---------------------------------------------------------------------------
		align 10h

loc_71028820:				; CODE XREF: sub_71028330+47Ej
					; sub_71028330+480j
		lea	eax, [ebp+var_20]
		lea	edx, [ebp+var_C]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_58], 6
		call	ds:_ZNK4QPen11dashPatternEv
		mov	eax, [ebp+var_20]
		sub	esp, 4
		mov	edx, [eax+8]
		test	edx, edx
		jle	short loc_71028895
		mov	[ebp+var_64], 0
		xchg	ax, ax

loc_71028850:				; CODE XREF: sub_71028330+563j
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_71028874
		mov	eax, [eax+4]
		lea	ecx, [ebp+var_20]
		mov	[esp+4], edx
		mov	[esp], ecx
		mov	[ebp+var_58], 1
		mov	[esp+8], eax
		call	sub_7104EDA0

loc_71028874:				; CODE XREF: sub_71028330+525j
		mov	edx, [ebp+var_64]
		mov	eax, [ebp+var_20]
		fld	[ebp+var_70]
		add	[ebp+var_64], 1
		add	edx, 2
		fmul	qword ptr [eax+edx*8]
		fstp	qword ptr [eax+edx*8]
		mov	eax, [ebp+var_20]
		mov	edx, [eax+8]
		cmp	[ebp+var_64], edx
		jl	short loc_71028850

loc_71028895:				; CODE XREF: sub_71028330+515j
		lea	eax, [ebp+var_20]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_58], 1
		call	ds:_ZN4QPen14setDashPatternERK7QVectorIdE
		mov	eax, [ebp+var_20]
		test	eax, eax
		jz	short loc_710288F2
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7102866E
		mov	eax, [ebp+var_20]
		mov	dword ptr [esp+4], 8
		mov	[ebp+var_58], 6
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_710288DF:				; CODE XREF: sub_71028330+30Fj
		mov	ecx, [ebp+arg_0]
		movzx	eax, byte ptr [ecx+38h]
		mov	[ebp+var_85], 1
		jmp	loc_71028513
; ---------------------------------------------------------------------------

loc_710288F2:				; CODE XREF: sub_71028330+31Dj
					; sub_71028330+584j
		mov	ebx, [ebp+arg_0]
		movzx	eax, byte ptr [ebx+38h]
		mov	[ebp+var_85], 1
		jmp	loc_71028513
; ---------------------------------------------------------------------------

loc_71028905:				; CODE XREF: sub_71028330+2C4j
					; sub_71028330+2CAj
		mov	ecx, [ebp+var_84]
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_58], 6
		mov	[esp+4], ecx
		call	ds:_ZNK4QPen11dashPatternEv
		mov	eax, [ebp+var_1C]
		sub	esp, 4
		mov	edx, [eax+8]
		test	edx, edx
		jle	short loc_7102897B
		mov	[ebp+var_74], 0

loc_71028936:				; CODE XREF: sub_71028330+649j
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_7102895A
		mov	eax, [eax+4]
		lea	ebx, [ebp+var_1C]
		mov	[esp+4], edx
		mov	[esp], ebx
		mov	[ebp+var_58], 2
		mov	[esp+8], eax
		call	sub_7104EDA0

loc_7102895A:				; CODE XREF: sub_71028330+60Bj
		mov	edx, [ebp+var_74]
		mov	eax, [ebp+var_1C]
		fld	[ebp+var_80]
		add	[ebp+var_74], 1
		add	edx, 2
		fdivr	qword ptr [eax+edx*8]
		fstp	qword ptr [eax+edx*8]
		mov	eax, [ebp+var_1C]
		mov	edx, [eax+8]
		cmp	[ebp+var_74], edx
		jl	short loc_71028936

loc_7102897B:				; CODE XREF: sub_71028330+5FDj
		lea	eax, [ebp+var_1C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_58], 2
		call	ds:_ZN4QPen14setDashPatternERK7QVectorIdE
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_58], 6
		call	sub_7104F050
		jmp	loc_7102866E
; ---------------------------------------------------------------------------

loc_710289AC:				; CODE XREF: sub_71028330+2ABj
		lea	eax, [ebp+var_C]
		mov	dword ptr [esp+4], 1
		mov	[esp], eax
		call	ds:_ZN4QPen8setStyleEN2Qt8PenStyleE
		jmp	loc_710287B2
sub_71028330	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710289C5	proc near		; DATA XREF: sub_71028330+24o
		add	ebp, 8
		mov	eax, [ebp-58h]
		mov	ebx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-94h], ebx
		jz	loc_71028A6A
		cmp	eax, 2
		jz	short loc_71028A56
		cmp	eax, 3
		jz	short loc_71028A41
		cmp	eax, 4
		jz	short loc_71028A2C
		cmp	eax, 5
		nop
		jz	short loc_71028A04
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_7104F050

loc_71028A04:				; CODE XREF: sub_710289C5+2Bj
					; sub_710289C5+7Aj ...
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	ds:_ZN4QPenD1Ev
		mov	eax, [ebp-94h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71028A2C:				; CODE XREF: sub_710289C5+25j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	ds:_ZN6QBrushD1Ev
		jmp	short loc_71028A04
; ---------------------------------------------------------------------------

loc_71028A41:				; CODE XREF: sub_710289C5+20j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	ds:_ZN6QBrushD1Ev
		jmp	short loc_71028A04
; ---------------------------------------------------------------------------

loc_71028A56:				; CODE XREF: sub_710289C5+1Bj
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_7104F050
		jmp	short loc_71028A04
; ---------------------------------------------------------------------------

loc_71028A6A:				; CODE XREF: sub_710289C5+12j
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_7104F050
		jmp	short loc_71028A04
sub_710289C5	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71028A80	proc near		; CODE XREF: sub_71022E70+E7p
					; sub_7102304B+E3p ...

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_710537FE
		mov	[ebp+var_18], offset sub_71028C88
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+2Ch]
		test	eax, eax
		jz	short loc_71028AD7
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_71028AD7
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 1
		call	eax

loc_71028AD7:				; CODE XREF: sub_71028A80+37j
					; sub_71028A80+44j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+28h]
		test	eax, eax
		jz	short loc_71028AFF
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_71028AFF
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 2
		call	eax

loc_71028AFF:				; CODE XREF: sub_71028A80+5Fj
					; sub_71028A80+6Cj
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 3
		add	eax, 24h
		mov	[esp], eax
		call	sub_71045200
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+20h]
		test	eax, eax
		jz	short loc_71028B3C
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_71028B3C
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 4
		call	eax

loc_71028B3C:				; CODE XREF: sub_71028A80+9Cj
					; sub_71028A80+A9j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+1Ch]
		test	eax, eax
		jz	short loc_71028B64
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_71028B64
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 5
		call	eax

loc_71028B64:				; CODE XREF: sub_71028A80+C4j
					; sub_71028A80+D1j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+18h]
		test	eax, eax
		jz	short loc_71028B8C
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_71028B8C
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 6
		call	eax

loc_71028B8C:				; CODE XREF: sub_71028A80+ECj
					; sub_71028A80+F9j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+14h]
		test	eax, eax
		jz	short loc_71028BB4
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_71028BB4
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 7
		call	eax

loc_71028BB4:				; CODE XREF: sub_71028A80+114j
					; sub_71028A80+121j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+10h]
		test	eax, eax
		jz	short loc_71028BDC
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_71028BDC
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 8
		call	eax

loc_71028BDC:				; CODE XREF: sub_71028A80+13Cj
					; sub_71028A80+149j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		test	eax, eax
		jz	short loc_71028C04
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_71028C04
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 9
		call	eax

loc_71028C04:				; CODE XREF: sub_71028A80+164j
					; sub_71028A80+171j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		test	eax, eax
		jz	short loc_71028C2C
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_71028C2C
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 0Ah
		call	eax

loc_71028C2C:				; CODE XREF: sub_71028A80+18Cj
					; sub_71028A80+199j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		test	eax, eax
		jz	short loc_71028C54
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_71028C54
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 0Bh
		call	eax

loc_71028C54:				; CODE XREF: sub_71028A80+1B4j
					; sub_71028A80+1C1j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_71028C7B
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_71028C7B
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 0FFFFFFFFh
		call	eax

loc_71028C7B:				; CODE XREF: sub_71028A80+1DBj
					; sub_71028A80+1E8j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71028A80	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71028C88	proc near		; DATA XREF: sub_71028A80+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-68h], edx
		jz	short loc_71028D18
		cmp	eax, 2
		jz	loc_71028D2D
		cmp	eax, 3
		jz	loc_71028D52
		cmp	eax, 4
		xchg	ax, ax
		jz	loc_71028D77
		cmp	eax, 5
		jz	loc_71028D9C
		cmp	eax, 6
		jz	loc_71028DC1
		cmp	eax, 7
		nop
		lea	esi, [esi+0]
		jz	loc_71028DE6
		cmp	eax, 8
		jz	loc_71028E0B
		cmp	eax, 9
		jz	loc_71028E30
		cmp	eax, 0Ah
		nop
		lea	esi, [esi+0]
		jz	loc_71028E55
		mov	[ebp-64h], edx
		mov	edx, [ebp+8]
		mov	eax, [edx+28h]
		test	eax, eax
		jz	short loc_71028D12
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0
		call	sub_7103C490

loc_71028D12:				; CODE XREF: sub_71028C88+79j
		mov	eax, [ebp-64h]
		mov	[ebp-68h], eax

loc_71028D18:				; CODE XREF: sub_71028C88+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 24h
		mov	[esp+0], eax
		call	sub_71045200

loc_71028D2D:				; CODE XREF: sub_71028C88+14j
		mov	eax, [ebp-68h]
		mov	edx, [ebp+8]
		mov	[ebp-60h], eax
		mov	eax, [edx+20h]
		test	eax, eax
		jz	short loc_71028D4C
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0
		call	sub_7103C490

loc_71028D4C:				; CODE XREF: sub_71028C88+B3j
		mov	eax, [ebp-60h]
		mov	[ebp-68h], eax

loc_71028D52:				; CODE XREF: sub_71028C88+1Dj
		mov	eax, [ebp-68h]
		mov	edx, [ebp+8]
		mov	[ebp-5Ch], eax
		mov	eax, [edx+1Ch]
		test	eax, eax
		jz	short loc_71028D71
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0
		call	sub_7103C490

loc_71028D71:				; CODE XREF: sub_71028C88+D8j
		mov	eax, [ebp-5Ch]
		mov	[ebp-68h], eax

loc_71028D77:				; CODE XREF: sub_71028C88+28j
		mov	eax, [ebp-68h]
		mov	edx, [ebp+8]
		mov	[ebp-58h], eax
		mov	eax, [edx+18h]
		test	eax, eax
		jz	short loc_71028D96
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0
		call	sub_7103C490

loc_71028D96:				; CODE XREF: sub_71028C88+FDj
		mov	eax, [ebp-58h]
		mov	[ebp-68h], eax

loc_71028D9C:				; CODE XREF: sub_71028C88+31j
		mov	eax, [ebp-68h]
		mov	edx, [ebp+8]
		mov	[ebp-54h], eax
		mov	eax, [edx+14h]
		test	eax, eax
		jz	short loc_71028DBB
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0
		call	sub_7103C490

loc_71028DBB:				; CODE XREF: sub_71028C88+122j
		mov	eax, [ebp-54h]
		mov	[ebp-68h], eax

loc_71028DC1:				; CODE XREF: sub_71028C88+3Aj
		mov	eax, [ebp-68h]
		mov	edx, [ebp+8]
		mov	[ebp-50h], eax
		mov	eax, [edx+10h]
		test	eax, eax
		jz	short loc_71028DE0
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0
		call	sub_7103C490

loc_71028DE0:				; CODE XREF: sub_71028C88+147j
		mov	eax, [ebp-50h]
		mov	[ebp-68h], eax

loc_71028DE6:				; CODE XREF: sub_71028C88+48j
		mov	eax, [ebp-68h]
		mov	edx, [ebp+8]
		mov	[ebp-4Ch], eax
		mov	eax, [edx+0Ch]
		test	eax, eax
		jz	short loc_71028E05
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0
		call	sub_7103C490

loc_71028E05:				; CODE XREF: sub_71028C88+16Cj
		mov	eax, [ebp-4Ch]
		mov	[ebp-68h], eax

loc_71028E0B:				; CODE XREF: sub_71028C88+51j
		mov	eax, [ebp-68h]
		mov	edx, [ebp+8]
		mov	[ebp-48h], eax
		mov	eax, [edx+8]
		test	eax, eax
		jz	short loc_71028E2A
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0
		call	sub_7103C490

loc_71028E2A:				; CODE XREF: sub_71028C88+191j
		mov	eax, [ebp-48h]
		mov	[ebp-68h], eax

loc_71028E30:				; CODE XREF: sub_71028C88+5Aj
		mov	eax, [ebp-68h]
		mov	edx, [ebp+8]
		mov	[ebp-44h], eax
		mov	eax, [edx+4]
		test	eax, eax
		jz	short loc_71028E4F
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0
		call	sub_7103C490

loc_71028E4F:				; CODE XREF: sub_71028C88+1B6j
		mov	eax, [ebp-44h]
		mov	[ebp-68h], eax

loc_71028E55:				; CODE XREF: sub_71028C88+68j
		mov	eax, [ebp-68h]
		mov	edx, [ebp+8]
		mov	[ebp-40h], eax
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_71028E73
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0
		call	sub_7103C490

loc_71028E73:				; CODE XREF: sub_71028C88+1DAj
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71028C88	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		mov	dword ptr [ebp-24h], offset sub_710525B0
		mov	dword ptr [ebp-20h], offset dword_71053818
		mov	dword ptr [ebp-18h], offset loc_71029098
		mov	[ebp-14h], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+8]
		mov	eax, [edx+2Ch]
		test	eax, eax
		jz	short loc_71028EE7
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_71028EE7
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 1
		call	eax

loc_71028EE7:				; CODE XREF: .text:71028EC7j
					; .text:71028ED4j
		mov	edx, [ebp+8]
		mov	eax, [edx+28h]
		test	eax, eax
		jz	short loc_71028F0F
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_71028F0F
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 2
		call	eax

loc_71028F0F:				; CODE XREF: .text:71028EEFj
					; .text:71028EFCj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 3
		add	eax, 24h
		mov	[esp], eax
		call	sub_71045200
		mov	edx, [ebp+8]
		mov	eax, [edx+20h]
		test	eax, eax
		jz	short loc_71028F4C
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_71028F4C
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 4
		call	eax

loc_71028F4C:				; CODE XREF: .text:71028F2Cj
					; .text:71028F39j
		mov	edx, [ebp+8]
		mov	eax, [edx+1Ch]
		test	eax, eax
		jz	short loc_71028F74
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_71028F74
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 5
		call	eax

loc_71028F74:				; CODE XREF: .text:71028F54j
					; .text:71028F61j
		mov	edx, [ebp+8]
		mov	eax, [edx+18h]
		test	eax, eax
		jz	short loc_71028F9C
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_71028F9C
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 6
		call	eax

loc_71028F9C:				; CODE XREF: .text:71028F7Cj
					; .text:71028F89j
		mov	edx, [ebp+8]
		mov	eax, [edx+14h]
		test	eax, eax
		jz	short loc_71028FC4
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_71028FC4
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 7
		call	eax

loc_71028FC4:				; CODE XREF: .text:71028FA4j
					; .text:71028FB1j
		mov	edx, [ebp+8]
		mov	eax, [edx+10h]
		test	eax, eax
		jz	short loc_71028FEC
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_71028FEC
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 8
		call	eax

loc_71028FEC:				; CODE XREF: .text:71028FCCj
					; .text:71028FD9j
		mov	edx, [ebp+8]
		mov	eax, [edx+0Ch]
		test	eax, eax
		jz	short loc_71029014
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_71029014
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 9
		call	eax

loc_71029014:				; CODE XREF: .text:71028FF4j
					; .text:71029001j
		mov	edx, [ebp+8]
		mov	eax, [edx+8]
		test	eax, eax
		jz	short loc_7102903C
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_7102903C
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 0Ah
		call	eax

loc_7102903C:				; CODE XREF: .text:7102901Cj
					; .text:71029029j
		mov	edx, [ebp+8]
		mov	eax, [edx+4]
		test	eax, eax
		jz	short loc_71029064
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_71029064
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 0Bh
		call	eax

loc_71029064:				; CODE XREF: .text:71029044j
					; .text:71029051j
		mov	edx, [ebp+8]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_7102908B
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_7102908B
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	eax

loc_7102908B:				; CODE XREF: .text:7102906Bj
					; .text:71029078j
		lea	eax, [ebp-3Ch]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71029098:				; DATA XREF: .text:71028EB0o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-68h], edx
		jz	short loc_71029128
		cmp	eax, 2
		jz	loc_7102913D
		cmp	eax, 3
		jz	loc_71029162
		cmp	eax, 4
		xchg	ax, ax
		jz	loc_71029187
		cmp	eax, 5
		jz	loc_710291AC
		cmp	eax, 6
		jz	loc_710291D1
		cmp	eax, 7
		nop
		lea	esi, [esi+0]
		jz	loc_710291F6
		cmp	eax, 8
		jz	loc_7102921B
		cmp	eax, 9
		jz	loc_71029240
		cmp	eax, 0Ah
		nop
		lea	esi, [esi+0]
		jz	loc_71029265
		mov	[ebp-64h], edx
		mov	edx, [ebp+8]
		mov	eax, [edx+28h]
		test	eax, eax
		jz	short loc_71029122
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 0
		call	sub_7103C490

loc_71029122:				; CODE XREF: .text:71029111j
		mov	eax, [ebp-64h]
		mov	[ebp-68h], eax

loc_71029128:				; CODE XREF: .text:710290A7j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 24h
		mov	[esp], eax
		call	sub_71045200

loc_7102913D:				; CODE XREF: .text:710290ACj
		mov	eax, [ebp-68h]
		mov	edx, [ebp+8]
		mov	[ebp-60h], eax
		mov	eax, [edx+20h]
		test	eax, eax
		jz	short loc_7102915C
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 0
		call	sub_7103C490

loc_7102915C:				; CODE XREF: .text:7102914Bj
		mov	eax, [ebp-60h]
		mov	[ebp-68h], eax

loc_71029162:				; CODE XREF: .text:710290B5j
		mov	eax, [ebp-68h]
		mov	edx, [ebp+8]
		mov	[ebp-5Ch], eax
		mov	eax, [edx+1Ch]
		test	eax, eax
		jz	short loc_71029181
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 0
		call	sub_7103C490

loc_71029181:				; CODE XREF: .text:71029170j
		mov	eax, [ebp-5Ch]
		mov	[ebp-68h], eax

loc_71029187:				; CODE XREF: .text:710290C0j
		mov	eax, [ebp-68h]
		mov	edx, [ebp+8]
		mov	[ebp-58h], eax
		mov	eax, [edx+18h]
		test	eax, eax
		jz	short loc_710291A6
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 0
		call	sub_7103C490

loc_710291A6:				; CODE XREF: .text:71029195j
		mov	eax, [ebp-58h]
		mov	[ebp-68h], eax

loc_710291AC:				; CODE XREF: .text:710290C9j
		mov	eax, [ebp-68h]
		mov	edx, [ebp+8]
		mov	[ebp-54h], eax
		mov	eax, [edx+14h]
		test	eax, eax
		jz	short loc_710291CB
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 0
		call	sub_7103C490

loc_710291CB:				; CODE XREF: .text:710291BAj
		mov	eax, [ebp-54h]
		mov	[ebp-68h], eax

loc_710291D1:				; CODE XREF: .text:710290D2j
		mov	eax, [ebp-68h]
		mov	edx, [ebp+8]
		mov	[ebp-50h], eax
		mov	eax, [edx+10h]
		test	eax, eax
		jz	short loc_710291F0
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 0
		call	sub_7103C490

loc_710291F0:				; CODE XREF: .text:710291DFj
		mov	eax, [ebp-50h]
		mov	[ebp-68h], eax

loc_710291F6:				; CODE XREF: .text:710290E0j
		mov	eax, [ebp-68h]
		mov	edx, [ebp+8]
		mov	[ebp-4Ch], eax
		mov	eax, [edx+0Ch]
		test	eax, eax
		jz	short loc_71029215
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 0
		call	sub_7103C490

loc_71029215:				; CODE XREF: .text:71029204j
		mov	eax, [ebp-4Ch]
		mov	[ebp-68h], eax

loc_7102921B:				; CODE XREF: .text:710290E9j
		mov	eax, [ebp-68h]
		mov	edx, [ebp+8]
		mov	[ebp-48h], eax
		mov	eax, [edx+8]
		test	eax, eax
		jz	short loc_7102923A
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 0
		call	sub_7103C490

loc_7102923A:				; CODE XREF: .text:71029229j
		mov	eax, [ebp-48h]
		mov	[ebp-68h], eax

loc_71029240:				; CODE XREF: .text:710290F2j
		mov	eax, [ebp-68h]
		mov	edx, [ebp+8]
		mov	[ebp-44h], eax
		mov	eax, [edx+4]
		test	eax, eax
		jz	short loc_7102925F
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 0
		call	sub_7103C490

loc_7102925F:				; CODE XREF: .text:7102924Ej
		mov	eax, [ebp-44h]
		mov	[ebp-68h], eax

loc_71029265:				; CODE XREF: .text:71029100j
		mov	eax, [ebp-68h]
		mov	edx, [ebp+8]
		mov	[ebp-40h], eax
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_71029283
		mov	[esp], eax
		mov	dword ptr [ebp-38h], 0
		call	sub_7103C490

loc_71029283:				; CODE XREF: .text:71029272j
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710292A0	proc near		; CODE XREF: sub_710292A0+166p
					; sub_71029530+304p

var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset word_71053832
		mov	[ebp+var_28], offset sub_7102947D
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+44h]
		mov	ecx, [eax+8]
		test	ecx, ecx
		jz	short loc_7102934B
		mov	eax, [edx+40h]
		test	eax, eax
		jz	short loc_7102934B
		add	edx, 44h
		mov	[ebp+var_54], edx
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_71024020
		test	eax, eax
		mov	[ebp+var_50], eax
		jz	short loc_71029378
		mov	edx, eax
		mov	eax, [eax]
		mov	[esp], edx
		call	dword ptr [eax+10h]
		cmp	eax, 6
		jz	loc_71029400

loc_71029316:				; CODE XREF: sub_710292A0+154j
					; sub_710292A0+1D8j
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_18], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		mov	edx, [ebp+var_54]
		mov	[esp], edx
		mov	[ebp+var_48], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71029358

loc_7102934B:				; CODE XREF: sub_710292A0+3Aj
					; sub_710292A0+41j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71029358:				; CODE XREF: sub_710292A0+A9j
		mov	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71029378:				; CODE XREF: sub_710292A0+61j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+44h]
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_14]
		lea	edx, [ebp+var_10]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	ds:_ZNK7QString11toLocal8BitEv
		mov	eax, [ebp+var_14]
		sub	esp, 4
		mov	eax, [eax+0Ch]
		mov	dword ptr [esp], offset	aCouldNotReso_0	; "Could not resolve property :	%s"
		mov	[esp+4], eax
		mov	[ebp+var_48], 2
		call	ds:_Z8qWarningPKcz
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710293E2
		mov	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	ds:_Z5qFreePv

loc_710293E2:				; CODE XREF: sub_710292A0+12Dj
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_710477B0
		jmp	loc_71029316
; ---------------------------------------------------------------------------
		align 10h

loc_71029400:				; CODE XREF: sub_710292A0+70j
		mov	eax, [ebp+var_50]
		mov	[esp], eax
		call	sub_710292A0
		mov	edx, [ebp+var_50]
		mov	eax, [edx+8]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZNK9QGradient5stopsEv
		lea	edx, [ebp+var_C]
		sub	esp, 4
		mov	[esp+4], edx
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		mov	[esp], eax
		mov	[ebp+var_48], 4
		call	ds:_ZN9QGradient8setStopsERK7QVectorI5QPairId6QColorEE
		mov	eax, [ebp+var_C]
		test	eax, eax
		jz	short loc_7102946B
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7102946B
		mov	eax, [ebp+var_C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_71048810

loc_7102946B:				; CODE XREF: sub_710292A0+1A6j
					; sub_710292A0+1B0j
		mov	edx, [ebp+var_50]
		movzx	eax, byte ptr [edx+48h]
		mov	edx, [ebp+arg_0]
		mov	[edx+48h], al
		jmp	loc_71029316
sub_710292A0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102947D	proc near		; DATA XREF: sub_710292A0+1Do

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-60h], edx
		jz	short loc_710294BC
		cmp	eax, 2
		jz	short loc_710294E8
		cmp	eax, 3
		jz	short loc_710294ED
		lea	eax, [ebp-18h]

loc_7102949B:				; CODE XREF: sub_7102947D+6Ej
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_710477B0
		mov	eax, [ebp-60h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_710294BC:				; CODE XREF: sub_7102947D+Fj
		mov	eax, [ebp-60h]
		mov	[ebp-58h], eax
		mov	eax, [ebp-14h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710294E2
		mov	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_Z5qFreePv

loc_710294E2:				; CODE XREF: sub_7102947D+50j
		mov	edx, [ebp-58h]
		mov	[ebp-60h], edx

loc_710294E8:				; CODE XREF: sub_7102947D+14j
		lea	eax, [ebp-10h]
		jmp	short loc_7102949B
; ---------------------------------------------------------------------------

loc_710294ED:				; CODE XREF: sub_7102947D+19j
		mov	eax, [ebp-60h]
		mov	[ebp-5Ch], eax
		mov	eax, [ebp-0Ch]
		test	eax, eax
		jz	short loc_7102951D
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7102951D
		mov	eax, [ebp-0Ch]
		mov	[esp+arg_0], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_71048810

loc_7102951D:				; CODE XREF: sub_7102947D+7Bj
					; sub_7102947D+85j
		mov	edx, [ebp-5Ch]
		mov	[esp+0], edx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_7102947D	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71029530	proc near		; DATA XREF: .rdata:7105D97Co

var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= byte ptr -8Ch
var_88		= dword	ptr -88h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= word ptr -3Ch
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= word ptr -24h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= word ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0C8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_6C], eax
		lea	eax, [ebp+var_8C]
		mov	[esp], eax
		mov	[ebp+var_74], offset sub_710525B0
		mov	[ebp+var_70], offset word_7105383E
		mov	[ebp+var_68], offset sub_7102988E
		mov	[ebp+var_64], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+44h]
		mov	eax, [eax+8]
		test	eax, eax
		jnz	loc_71029827

loc_71029576:				; CODE XREF: sub_71029530+309j
		mov	ecx, [ebp+arg_4]
		cmp	byte ptr [ecx+48h], 0
		jnz	loc_710296DC
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 0
		mov	dword ptr [esp+4], 0
		mov	[ebp+var_88], 0FFFFFFFFh
		call	ds:_ZN6QColor6setRgbEiiii
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_94], eax
		mov	eax, [ebp+var_18]
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_14]
		mov	[ebp+var_28], eax
		movzx	eax, [ebp+var_10]
		mov	[ebp+var_24], ax
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_C]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_71029840
		mov	edx, [eax+8]

loc_710295F5:				; CODE XREF: sub_71029530+316j
		mov	eax, [ebp+var_2C]
		add	edx, 1
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 18h
		mov	[esp+4], edx
		mov	[ebp+var_44], eax
		mov	eax, [ebp+var_28]
		mov	dword ptr [esp], 28h
		mov	[ebp+var_88], 2
		mov	[ebp+var_40], eax
		movzx	eax, [ebp+var_24]
		mov	[ebp+var_3C], ax
		call	ds:_ZN11QVectorData4growEiiib
		mov	[esp+8], eax
		mov	eax, [ebp+var_C]
		mov	eax, [eax+8]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	sub_71048940
		mov	eax, [ebp+var_C]
		fldz
		mov	edx, [eax+8]
		lea	edx, [edx+edx*2]
		lea	edx, [eax+edx*8]
		lea	eax, [edx+10h]
		fstp	qword ptr [edx+10h]
		mov	edx, [ebp+var_94]
		mov	[eax+8], edx
		mov	edx, [ebp+var_44]
		mov	[eax+0Ch], edx
		mov	edx, [ebp+var_40]
		mov	[eax+10h], edx
		movzx	edx, [ebp+var_3C]
		mov	[eax+14h], dx
		mov	eax, [ebp+var_C]

loc_71029684:				; CODE XREF: sub_71029530+347j
		mov	ecx, [ebp+arg_4]
		add	dword ptr [eax+8], 1
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ecx+8]
		mov	[ebp+var_88], 2
		mov	[esp], eax
		call	ds:_ZN9QGradient8setStopsERK7QVectorI5QPairId6QColorEE
		mov	eax, [ebp+var_C]
		test	eax, eax
		jz	short loc_710296D5
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710296D5
		mov	eax, [ebp+var_C]
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	sub_71048810

loc_710296D5:				; CODE XREF: sub_71029530+17Dj
					; sub_71029530+187j
		mov	ecx, [ebp+arg_4]
		mov	byte ptr [ecx+48h], 1

loc_710296DC:				; CODE XREF: sub_71029530+4Dj
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_90], eax
		mov	eax, [edx+8]
		mov	[esp], ecx
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[esp+4], eax
		call	ds:_ZN6QBrushC1ERK9QGradient
		mov	eax, [ebp+arg_4]
		fld1
		fsubr	qword ptr [eax+10h]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_7102971C
		fchs

loc_7102971C:				; CODE XREF: sub_71029530+1E8j
		fld	ds:dbl_7105A600
		fucompp
		fnstsw	ax
		sahf
		jb	short loc_7102974F
		mov	edx, [ebp+arg_4]
		fld1
		fsubr	qword ptr [edx+28h]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jb	loc_71029820

loc_71029742:				; CODE XREF: sub_71029530+2F2j
		fld	ds:dbl_7105A600
		fucompp
		fnstsw	ax
		sahf
		jnb	short loc_71029784

loc_7102974F:				; CODE XREF: sub_71029530+1F7j
					; sub_71029530+276j ...
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_88], 1
		add	eax, 10h
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	ds:_ZN6QBrush9setMatrixERK7QMatrix

loc_7102976F:				; CODE XREF: sub_71029530+2E2j
		lea	eax, [ebp+var_8C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------

loc_71029784:				; CODE XREF: sub_71029530+21Dj
		mov	edx, [ebp+arg_4]
		fld	qword ptr [edx+18h]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jb	loc_71029880

loc_7102979B:				; CODE XREF: sub_71029530+352j
		fld	ds:dbl_7105A600
		fucompp
		fnstsw	ax
		sahf
		jb	short loc_7102974F
		mov	edx, [ebp+arg_4]
		fld	qword ptr [edx+20h]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_710297BD
		fchs

loc_710297BD:				; CODE XREF: sub_71029530+289j
		fld	ds:dbl_7105A600
		fucompp
		fnstsw	ax
		sahf
		jb	short loc_7102974F
		mov	edx, [ebp+arg_4]
		fld	qword ptr [edx+30h]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jb	loc_71029887

loc_710297E1:				; CODE XREF: sub_71029530+359j
		fld	ds:dbl_7105A600
		fucompp
		fnstsw	ax
		sahf
		jb	loc_7102974F
		mov	edx, [ebp+arg_4]
		fld	qword ptr [edx+38h]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_71029807
		fchs

loc_71029807:				; CODE XREF: sub_71029530+2D3j
		fld	ds:dbl_7105A600
		fucompp
		fnstsw	ax
		sahf
		jnb	loc_7102976F
		jmp	loc_7102974F
; ---------------------------------------------------------------------------
		align 10h

loc_71029820:				; CODE XREF: sub_71029530+20Cj
		fchs
		jmp	loc_71029742
; ---------------------------------------------------------------------------

loc_71029827:				; CODE XREF: sub_71029530+40j
		mov	[esp], edx
		mov	[ebp+var_88], 0FFFFFFFFh
		call	sub_710292A0
		jmp	loc_71029576
; ---------------------------------------------------------------------------
		align 10h

loc_71029840:				; CODE XREF: sub_71029530+BCj
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jge	loc_710295F5
		lea	edx, [edx+edx*2]
		lea	ecx, [eax+edx*8]
		fldz
		lea	edx, [ecx+10h]
		fstp	qword ptr [ecx+10h]
		mov	ecx, [ebp+var_94]
		mov	[edx+8], ecx
		mov	ecx, [ebp+var_2C]
		mov	[edx+0Ch], ecx
		mov	ecx, [ebp+var_28]
		mov	[edx+10h], ecx
		movzx	ecx, [ebp+var_24]
		mov	[edx+14h], cx
		jmp	loc_71029684
; ---------------------------------------------------------------------------
		align 10h

loc_71029880:				; CODE XREF: sub_71029530+265j
		fchs
		jmp	loc_7102979B
; ---------------------------------------------------------------------------

loc_71029887:				; CODE XREF: sub_71029530+2ABj
		fchs
		jmp	loc_710297E1
sub_71029530	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102988E	proc near		; DATA XREF: sub_71029530+26o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	edx, [ebp-84h]
		cmp	dword ptr [ebp-88h], 1
		mov	[ebp-9Ch], edx
		jz	short loc_710298D7
		mov	ecx, [ebp-90h]
		mov	dword ptr [ebp-88h], 0
		mov	[esp+0], ecx
		call	ds:_ZN6QBrushD1Ev
		mov	eax, [ebp-9Ch]
		mov	dword ptr [ebp-88h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_710298D7:				; CODE XREF: sub_7102988E+16j
		mov	eax, [ebp-9Ch]
		mov	[ebp-98h], eax
		mov	eax, [ebp-0Ch]
		test	eax, eax
		jz	short loc_71029910
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71029910
		mov	eax, [ebp-0Ch]
		mov	dword ptr [ebp-88h], 0
		mov	[esp+arg_0], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_71048810

loc_71029910:				; CODE XREF: sub_7102988E+5Aj
					; sub_7102988E+64j
		mov	edx, [ebp-98h]
		mov	dword ptr [ebp-88h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_7102988E	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		mov	edx, ds:_ZN7QString11shared_nullE
		fld	qword ptr [esp+8]
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax], offset	off_7105DBE8
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, ds:_ZN9QHashData11shared_nullE
		fstp	qword ptr [eax+28h]
		mov	[eax+30h], edx
		lock inc dword ptr [edx+8]
		setnz	al
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_71029970(int,	double)
sub_71029970	proc near		; CODE XREF: sub_710194B0+1BCp

arg_0		= dword	ptr  4
arg_4		= qword	ptr  8

		mov	eax, [esp+arg_0]
		mov	edx, ds:_ZN7QString11shared_nullE
		fld	[esp+arg_4]
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax], offset	off_7105DBE8
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, ds:_ZN9QHashData11shared_nullE
		fstp	qword ptr [eax+28h]
		mov	[eax+30h], edx
		lock inc dword ptr [edx+8]
		setnz	al
		retn
sub_71029970	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710299B0	proc near		; CODE XREF: sub_7100E610+16Dp
					; sub_7100E610+1ADp ...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx+8]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
sub_710299B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_710299D0(int,	double)
sub_710299D0	proc near		; CODE XREF: sub_7100E610+15Bp

arg_0		= dword	ptr  4
arg_4		= qword	ptr  8

		mov	eax, [esp+arg_0]
		fld	[esp+arg_4]
		fstp	qword ptr [eax+10h]
		retn
sub_710299D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710299E0	proc near		; CODE XREF: sub_7100E610+142p
					; sub_71010D50+C8p ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		add	eax, 8
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_ZN7QStringaSERKS_
		add	esp, 0Ch
		jmp	eax
sub_710299E0	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+30h]
		movzx	eax, word ptr [esp+34h]
		fld	qword ptr [esp+3Ch]
		fstp	qword ptr [esp+10h]
		mov	[ebx], ax
		mov	eax, [esp+38h]
		mov	[esp+4], eax
		lea	eax, [ebx+4]
		mov	[esp], eax
		call	ds:_ZN12QPainterPathC1ERKS_
		fld	qword ptr [esp+10h]
		fstp	qword ptr [ebx+8]
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+30h]
		movzx	eax, word ptr [esp+34h]
		fld	qword ptr [esp+3Ch]
		fstp	qword ptr [esp+10h]
		mov	[ebx], ax
		mov	eax, [esp+38h]
		mov	[esp+4], eax
		lea	eax, [ebx+4]
		mov	[esp], eax
		call	ds:_ZN12QPainterPathC1ERKS_
		fld	qword ptr [esp+10h]
		fstp	qword ptr [ebx+8]
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_71029A80(int,	__int16, int, double)
sub_71029A80	proc near		; CODE XREF: sub_710099A0+163p

var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= qword	ptr -68h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= word ptr -20h
var_1C		= byte ptr -1Ch
var_18		= qword	ptr -18h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= word ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= qword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 0A8h
		lea	eax, [ebp+var_8]
		fld	[ebp+arg_C]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		fstp	[ebp+var_68]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_710525B0
		mov	[ebp+var_40], offset word_7105384E
		mov	[ebp+var_38], offset sub_71029CD0
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		fld1
		fchs
		fld	[ebp+var_68]
		fucompp
		fnstsw	ax
		sahf
		jnz	short loc_71029AD1
		jp	short loc_71029AD1
		mov	eax, [ebp+arg_0]
		fld	qword ptr [eax+28h]
		fstp	[ebp+var_68]

loc_71029AD1:				; CODE XREF: sub_71029A80+44j
					; sub_71029A80+46j
		movzx	eax, [ebp+arg_4]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[ebp+var_20], ax
		mov	eax, [ebp+arg_8]
		mov	[esp+4], eax
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		call	ds:_ZN12QPainterPathC1ERKS_
		mov	edx, [ebp+arg_0]
		fld	[ebp+var_68]
		fstp	[ebp+var_18]
		mov	eax, [edx+30h]
		mov	edx, [eax+8]
		cmp	edx, 1
		jz	short loc_71029B58
		mov	dword ptr [esp+10h], 8
		mov	dword ptr [esp+0Ch], 20h
		mov	dword ptr [esp+8], offset sub_710444A0
		mov	dword ptr [esp+4], offset sub_710444C0
		mov	[esp], eax
		mov	[ebp+var_58], 2
		call	ds:_ZN9QHashData14detach_helper2EPFvPNS_4NodeEPvEPFvS1_Eii
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_78], eax
		mov	eax, [edx+30h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_71029C78

loc_71029B4F:				; CODE XREF: sub_71029A80+20Fj
		mov	edx, [ebp+var_78]
		mov	eax, [ebp+arg_0]
		mov	[eax+30h], edx

loc_71029B58:				; CODE XREF: sub_71029A80+85j
		mov	eax, [ebp+arg_0]
		add	eax, 30h
		mov	[ebp+var_74], eax
		mov	edx, [ebp+var_74]
		lea	eax, [ebp+var_C]
		mov	[esp+8], eax
		lea	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_710512E0
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_6C], eax
		mov	eax, [eax]
		mov	[ebp+var_60], eax
		cmp	eax, [edx+30h]
		jz	short loc_71029BE0
		movzx	eax, [ebp+var_20]
		mov	edx, [ebp+var_60]
		mov	[edx+10h], ax
		lea	eax, [ebp+var_1C]
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 14h
		mov	[esp], eax
		mov	[ebp+var_58], 2
		call	ds:_ZN12QPainterPathaSERKS_
		mov	eax, [ebp+var_60]
		fld	[ebp+var_18]
		fstp	qword ptr [eax+18h]

loc_71029BBA:				; CODE XREF: sub_71029A80+1F3j
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN12QPainterPathD1Ev
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71029BE0:				; CODE XREF: sub_71029A80+108j
		mov	edx, eax
		mov	eax, [eax+0Ch]
		cmp	eax, [edx+18h]
		jge	loc_71029C94

loc_71029BEE:				; CODE XREF: sub_71029A80+24Bj
		mov	eax, [ebp+var_C]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], 8
		mov	[ebp+var_7C], eax
		mov	eax, [edx+30h]
		mov	[ebp+var_58], 2
		mov	[esp], eax
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		mov	[ebp+var_70], eax
		jz	short loc_71029C51
		movzx	eax, [ebp+arg_4]
		mov	edx, [ebp+var_70]
		mov	[edx+8], ax
		movzx	eax, [ebp+var_20]
		mov	[edx+10h], ax
		lea	eax, [ebp+var_1C]
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 14h
		mov	[esp], eax
		mov	[ebp+var_58], 1
		call	ds:_ZN12QPainterPathC1ERKS_
		mov	eax, [ebp+var_70]
		fld	[ebp+var_18]
		fstp	qword ptr [eax+18h]

loc_71029C51:				; CODE XREF: sub_71029A80+197j
		mov	eax, [ebp+var_7C]
		mov	edx, [ebp+var_70]
		mov	[edx+4], eax
		mov	edx, [ebp+var_6C]
		mov	eax, [edx]
		mov	edx, [ebp+var_70]
		mov	[edx], eax
		mov	eax, [ebp+var_6C]
		mov	[eax], edx
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+30h]
		add	dword ptr [eax+0Ch], 1
		jmp	loc_71029BBA
; ---------------------------------------------------------------------------

loc_71029C78:				; CODE XREF: sub_71029A80+C9j
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_710444A0
		mov	eax, [edx+30h]
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_71029B4F
; ---------------------------------------------------------------------------

loc_71029C94:				; CODE XREF: sub_71029A80+168j
		movsx	eax, word ptr [edx+16h]
		mov	[esp], edx
		mov	[ebp+var_58], 2
		add	eax, 1
		mov	[esp+4], eax
		call	ds:_ZN9QHashData6rehashEi
		mov	edx, [ebp+var_74]
		lea	eax, [ebp+var_C]
		mov	[esp+8], eax
		lea	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_710512E0
		mov	[ebp+var_6C], eax
		jmp	loc_71029BEE
sub_71029A80	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71029CD0	proc near		; DATA XREF: sub_71029A80+29o
		add	ebp, 8
		mov	edx, [ebp-54h]
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	[ebp-80h], edx
		mov	dword ptr [ebp-58h], 0
		call	ds:_ZN12QPainterPathD1Ev
		mov	eax, [ebp-80h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71029CD0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_71029D00(int,	int, int, int, double, int)
sub_71029D00	proc near		; CODE XREF: sub_71003F90+E97p

var_D8		= qword	ptr -0D8h
var_D0		= qword	ptr -0D0h
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= word ptr -0A0h
var_9E		= word ptr -9Eh
var_9C		= byte ptr -9Ch
var_98		= dword	ptr -98h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_60		= qword	ptr -60h
var_58		= qword	ptr -58h
var_50		= qword	ptr -50h
var_48		= qword	ptr -48h
var_40		= word ptr -40h
var_3C		= byte ptr -3Ch
var_38		= qword	ptr -38h
var_30		= word ptr -30h
var_2C		= byte ptr -2Ch
var_28		= qword	ptr -28h
var_20		= word ptr -20h
var_1C		= byte ptr -1Ch
var_18		= qword	ptr -18h
var_10		= byte ptr -10h
var_A		= word ptr -0Ah
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= qword	ptr  18h
arg_18		= dword	ptr  20h

		push	ebp
		mov	ebp, esp
		sub	esp, 108h
		lea	eax, [ebp+var_8]
		fld	[ebp+arg_10]
		mov	[ebp+var_7C], eax
		lea	eax, [ebp+var_9C]
		fstp	[ebp+var_D8]
		mov	[esp], eax
		mov	[ebp+var_84], offset sub_710525B0
		mov	[ebp+var_80], offset word_71053866
		mov	[ebp+var_78], offset sub_7102A2E4
		mov	[ebp+var_74], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp], edx
		call	ds:_ZN8QPainter4saveEv
		mov	eax, [ebp+arg_8]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		call	ds:_ZN8QPainter9translateERK7QPointF
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		fld	qword ptr [edx+10h]
		fld	[ebp+var_D8]
		fchs
		fdiv	st, st(1)
		mov	[esp], eax
		fstp	qword ptr [esp+0Ch]
		fdivr	[ebp+var_D8]
		fstp	qword ptr [esp+4]
		call	ds:_ZN8QPainter5scaleEdd
		mov	edx, [ebp+arg_C]
		mov	[ebp+var_C0], 0
		mov	eax, [edx]
		mov	edx, [eax+0Ch]
		mov	eax, [eax+8]
		add	eax, eax
		jz	loc_71029F40
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_BC], edx
		add	eax, 30h
		mov	[ebp+var_C4], eax
		jmp	short loc_71029E24
; ---------------------------------------------------------------------------

loc_71029DC5:				; CODE XREF: sub_71029D00+164j
					; sub_71029D00+195j
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_20], 0
		mov	[ebp+var_98], 0FFFFFFFFh
		call	ds:_ZN12QPainterPathC1Ev
		xor	eax, eax
		fldz
		fstp	[ebp+var_18]

loc_71029DE8:				; CODE XREF: sub_71029D00+202j
		add	[ebp+var_C0], eax
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_98], 0FFFFFFFFh
		call	ds:_ZN12QPainterPathD1Ev

loc_71029E04:				; CODE XREF: sub_71029D00+238j
		mov	eax, [ebp+arg_C]
		add	[ebp+var_BC], 2
		mov	edx, [eax]
		mov	eax, [edx+8]
		add	eax, eax
		add	eax, [edx+0Ch]
		cmp	[ebp+var_BC], eax
		jz	loc_71029F40

loc_71029E24:				; CODE XREF: sub_71029D00+C3j
		mov	edx, [ebp+var_BC]
		movzx	eax, word ptr [edx]
		mov	[esp+4], edx
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_A], ax
		mov	eax, [ebp+var_C4]
		mov	[esp], eax
		call	sub_710512E0
		mov	edx, [ebp+arg_0]
		mov	eax, [eax]
		cmp	eax, [edx+30h]
		jz	loc_71029F07

loc_71029E59:				; CODE XREF: sub_71029D00+232j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+30h]
		mov	eax, [eax+0Ch]
		test	eax, eax
		jz	loc_71029DC5
		mov	edx, [ebp+var_C4]
		lea	eax, [ebp+var_A]
		mov	dword ptr [esp+8], 0
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_710512E0
		mov	edx, [ebp+arg_0]
		mov	eax, [eax]
		mov	[ebp+var_C8], eax
		cmp	eax, [edx+30h]
		jz	loc_71029DC5
		mov	edx, [ebp+var_C8]
		movzx	eax, word ptr [edx+10h]
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[ebp+var_20], ax
		mov	eax, edx
		add	eax, 14h
		mov	[esp+4], eax
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		call	ds:_ZN12QPainterPathC1ERKS_
		mov	edx, [ebp+var_C8]
		fld	qword ptr [edx+18h]
		fnstcw	[ebp+var_9E]
		fst	[ebp+var_18]
		movzx	eax, [ebp+var_9E]
		mov	ah, 0Ch
		mov	[ebp+var_A0], ax
		fldcw	[ebp+var_A0]
		fistp	[ebp+var_A4]
		fldcw	[ebp+var_9E]
		mov	eax, [ebp+var_A4]
		jmp	loc_71029DE8
; ---------------------------------------------------------------------------

loc_71029F07:				; CODE XREF: sub_71029D00+153j
		mov	edx, [ebp+var_C4]
		lea	eax, [ebp+var_A]
		mov	[ebp+var_A], 0
		mov	dword ptr [esp+8], 0
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_710512E0
		mov	edx, [ebp+arg_0]
		mov	eax, [eax]
		cmp	eax, [edx+30h]
		jnz	loc_71029E59
		jmp	loc_71029E04
; ---------------------------------------------------------------------------
		align 10h

loc_71029F40:				; CODE XREF: sub_71029D00+ABj
					; sub_71029D00+11Ej
		mov	eax, [ebp+arg_18]
		mov	edx, [eax]
		cmp	edx, 4
		jz	loc_7102A2CC
		mov	eax, [ebp+var_C0]
		neg	eax
		cmp	edx, 2
		setnz	dl
		movzx	edx, dl
		sub	edx, 1
		and	eax, edx

loc_71029F64:				; CODE XREF: sub_71029D00+5DFj
		mov	[ebp+var_A4], eax
		lea	eax, [ebp+var_50]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_4]
		fild	[ebp+var_A4]
		fstp	[ebp+var_50]
		fldz
		fstp	[ebp+var_48]
		mov	[esp], eax
		mov	[ebp+var_98], 0FFFFFFFFh
		call	ds:_ZN8QPainter9translateERK7QPointF
		mov	edx, [ebp+arg_4]
		mov	eax, ds:_ZNK8QPainter3penEv
		mov	[esp], edx
		mov	[ebp+var_A8], eax
		call	eax ; _ZNK8QPainter3penEv
		mov	[esp], eax
		call	ds:_ZNK4QPen6widthFEv
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		fstp	[ebp+var_D0]
		fld	[ebp+var_D8]
		fdiv	qword ptr [edx+10h]
		mov	[esp], eax
		fdivr	[ebp+var_D0]
		fstp	[ebp+var_D0]
		call	[ebp+var_A8]
		lea	edx, [ebp+var_10]
		mov	[esp], edx
		mov	[esp+4], eax
		call	ds:_ZN4QPenC1ERKS_
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_98], 3
		fld	[ebp+var_D0]
		fstp	qword ptr [esp+4]
		call	ds:_ZN4QPen9setWidthFEd
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZN8QPainter6setPenERK4QPen
		mov	eax, [ebp+arg_C]
		mov	edx, [eax]
		mov	eax, [edx+0Ch]
		mov	[ebp+var_AC], eax
		mov	eax, [edx+8]
		add	eax, eax
		add	eax, [edx+0Ch]
		cmp	[ebp+var_AC], eax
		jz	loc_7102A290
		mov	edx, [ebp+arg_0]
		add	edx, 30h
		mov	[ebp+var_B0], edx
		jmp	loc_7102A132
; ---------------------------------------------------------------------------

loc_7102A051:				; CODE XREF: sub_71029D00+472j
					; sub_71029D00+4A3j
		lea	eax, [ebp+var_2C]
		mov	[ebp+var_30], 0
		mov	[esp], eax
		mov	[ebp+var_98], 3
		call	ds:_ZN12QPainterPathC1Ev
		fldz
		fstp	[ebp+var_28]

loc_7102A072:				; CODE XREF: sub_71029D00+4E2j
		mov	eax, [ebp+arg_4]
		lea	edx, [ebp+var_2C]
		mov	[esp+4], edx
		mov	[ebp+var_98], 2
		mov	[esp], eax
		call	ds:_ZN8QPainter8drawPathERK12QPainterPath
		lea	edx, [ebp+var_2C]
		mov	[esp], edx
		mov	[ebp+var_98], 3
		call	ds:_ZN12QPainterPathD1Ev
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+30h]
		mov	edx, [eax+0Ch]
		test	edx, edx
		jnz	loc_7102A1E7

loc_7102A0B6:				; CODE XREF: sub_71029D00+512j
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_40], 0
		mov	[esp], eax
		mov	[ebp+var_98], 3
		call	ds:_ZN12QPainterPathC1Ev
		fldz
		fst	[ebp+var_38]

loc_7102A0D7:				; CODE XREF: sub_71029D00+551j
		mov	edx, [ebp+arg_4]
		fstp	[ebp+var_60]
		fldz
		lea	eax, [ebp+var_60]
		fstp	[ebp+var_58]
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_98], 1
		call	ds:_ZN8QPainter9translateERK7QPointF
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_98], 3
		call	ds:_ZN12QPainterPathD1Ev

loc_7102A112:				; CODE XREF: sub_71029D00+587j
		mov	eax, [ebp+arg_C]
		add	[ebp+var_AC], 2
		mov	edx, [eax]
		mov	eax, [edx+8]
		add	eax, eax
		add	eax, [edx+0Ch]
		cmp	[ebp+var_AC], eax
		jz	loc_7102A290

loc_7102A132:				; CODE XREF: sub_71029D00+34Cj
		mov	edx, [ebp+var_AC]
		movzx	eax, word ptr [edx]
		mov	[esp+4], edx
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_A], ax
		mov	eax, [ebp+var_B0]
		mov	[esp], eax
		call	sub_710512E0
		mov	edx, [ebp+arg_0]
		mov	eax, [eax]
		cmp	eax, [edx+30h]
		jz	loc_7102A256

loc_7102A167:				; CODE XREF: sub_71029D00+581j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+30h]
		mov	ecx, [eax+0Ch]
		test	ecx, ecx
		jz	loc_7102A051
		lea	eax, [ebp+var_A]
		mov	[esp+4], eax
		mov	eax, [ebp+var_B0]
		mov	dword ptr [esp+8], 0
		mov	[esp], eax
		call	sub_710512E0
		mov	edx, [ebp+arg_0]
		mov	eax, [eax]
		mov	[ebp+var_B8], eax
		cmp	eax, [edx+30h]
		jz	loc_7102A051
		mov	edx, [ebp+var_B8]
		movzx	eax, word ptr [edx+10h]
		mov	[ebp+var_98], 3
		mov	[ebp+var_30], ax
		mov	eax, edx
		add	eax, 14h
		mov	[esp+4], eax
		lea	eax, [ebp+var_2C]
		mov	[esp], eax
		call	ds:_ZN12QPainterPathC1ERKS_
		mov	eax, [ebp+var_B8]
		fld	qword ptr [eax+18h]
		fstp	[ebp+var_28]
		jmp	loc_7102A072
; ---------------------------------------------------------------------------

loc_7102A1E7:				; CODE XREF: sub_71029D00+3B0j
		lea	eax, [ebp+var_A]
		mov	[esp+4], eax
		mov	eax, [ebp+var_B0]
		mov	dword ptr [esp+8], 0
		mov	[esp], eax
		call	sub_710512E0
		mov	edx, [ebp+arg_0]
		mov	eax, [eax]
		mov	[ebp+var_B4], eax
		cmp	eax, [edx+30h]
		jz	loc_7102A0B6
		mov	edx, [ebp+var_B4]
		movzx	eax, word ptr [edx+10h]
		mov	[ebp+var_98], 3
		mov	[ebp+var_40], ax
		mov	eax, edx
		add	eax, 14h
		mov	[esp+4], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	ds:_ZN12QPainterPathC1ERKS_
		mov	eax, [ebp+var_B4]
		fld	qword ptr [eax+18h]
		fst	[ebp+var_38]
		jmp	loc_7102A0D7
; ---------------------------------------------------------------------------

loc_7102A256:				; CODE XREF: sub_71029D00+461j
		lea	eax, [ebp+var_A]
		mov	[esp+4], eax
		mov	eax, [ebp+var_B0]
		mov	[ebp+var_A], 0
		mov	dword ptr [esp+8], 0
		mov	[esp], eax
		call	sub_710512E0
		mov	edx, [ebp+arg_0]
		mov	eax, [eax]
		cmp	eax, [edx+30h]
		jnz	loc_7102A167
		jmp	loc_7102A112
; ---------------------------------------------------------------------------
		align 10h

loc_7102A290:				; CODE XREF: sub_71029D00+33Aj
					; sub_71029D00+42Cj
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_98], 3
		mov	[esp], edx
		call	ds:_ZN8QPainter7restoreEv
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_98], 0FFFFFFFFh
		call	ds:_ZN4QPenD1Ev
		lea	eax, [ebp+var_9C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_7102A2CC:				; CODE XREF: sub_71029D00+248j
		mov	eax, [ebp+var_C0]
		shr	eax, 1Fh
		add	eax, [ebp+var_C0]
		sar	eax, 1
		neg	eax
		jmp	loc_71029F64
sub_71029D00	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102A2E4	proc near		; DATA XREF: sub_71029D00+32o
		add	ebp, 8
		mov	eax, [ebp-98h]
		mov	edx, [ebp-94h]
		cmp	eax, 1
		mov	[ebp-0DCh], edx
		jz	short loc_7102A347
		cmp	eax, 2
		jz	short loc_7102A319
		lea	eax, [ebp-3Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	ds:_ZN12QPainterPathD1Ev

loc_7102A319:				; CODE XREF: sub_7102A2E4+1Dj
					; sub_7102A2E4+79j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	ds:_ZN4QPenD1Ev
		mov	eax, [ebp-0DCh]
		mov	dword ptr [ebp-98h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7102A347:				; CODE XREF: sub_7102A2E4+18j
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	ds:_ZN12QPainterPathD1Ev
		jmp	short loc_7102A319
sub_7102A2E4	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 130. _ZNK16QSvgTinyDocument4typeEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QSvgTinyDocument4typeEv
_ZNK16QSvgTinyDocument4typeEv proc near	; DATA XREF: .rdata:7105D954o
		xor	eax, eax
		retn
_ZNK16QSvgTinyDocument4typeEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  86. _ZN16QSvgTinyDocument8setWidthEib

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QSvgTinyDocument8setWidthEib
_ZN16QSvgTinyDocument8setWidthEib proc near ; CODE XREF: sub_7100FC80+811p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, [esp+arg_0]
		mov	edx, [esp+arg_4]
		mov	[eax+8Ch], edx
		mov	edx, [esp+arg_8]
		mov	[eax+94h], dl
		retn
_ZN16QSvgTinyDocument8setWidthEib endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  87. _ZN16QSvgTinyDocument9setHeightEib

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QSvgTinyDocument9setHeightEib
_ZN16QSvgTinyDocument9setHeightEib proc	near ; CODE XREF: sub_7100FC80+761p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, [esp+arg_0]
		mov	edx, [esp+arg_4]
		mov	[eax+90h], edx
		mov	edx, [esp+arg_8]
		mov	[eax+95h], dl
		retn
_ZN16QSvgTinyDocument9setHeightEib endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  71. _ZN16QSvgTinyDocument10setViewBoxERK6QRectF

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QSvgTinyDocument10setViewBoxERK6QRectF
_ZN16QSvgTinyDocument10setViewBoxERK6QRectF proc near ;	CODE XREF: sub_7100FC80+310p
					; sub_7100FC80+664p ...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	ecx, [edx]
		mov	[eax+98h], ecx
		mov	ecx, [edx+4]
		mov	[eax+9Ch], ecx
		mov	ecx, [edx+8]
		mov	[eax+0A0h], ecx
		mov	ecx, [edx+0Ch]
		mov	[eax+0A4h], ecx
		mov	ecx, [edx+10h]
		mov	[eax+0A8h], ecx
		mov	ecx, [edx+14h]
		mov	[eax+0ACh], ecx
		mov	ecx, [edx+18h]
		mov	[eax+0B0h], ecx
		mov	edx, [edx+1Ch]
		mov	[eax+0B4h], edx
		retn
_ZN16QSvgTinyDocument10setViewBoxERK6QRectF endp

; Exported entry 132. _ZNK16QSvgTinyDocument8animatedEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QSvgTinyDocument8animatedEv
_ZNK16QSvgTinyDocument8animatedEv proc near ; CODE XREF: _ZNK12QSvgRenderer8animatedEv+18j
					; _ZN12QSvgRenderer4loadEP16QXmlStreamReader+73p ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		movzx	eax, byte ptr [eax+0C8h]
		retn
_ZNK16QSvgTinyDocument8animatedEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  72. _ZN16QSvgTinyDocument11setAnimatedEb

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QSvgTinyDocument11setAnimatedEb
_ZN16QSvgTinyDocument11setAnimatedEb proc near ; CODE XREF: sub_71019980+70Ap
					; sub_7101A880+8AEp

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	[eax+0C8h], dl
		retn
_ZN16QSvgTinyDocument11setAnimatedEb endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  78. _ZN16QSvgTinyDocument18setFramesPerSecondEi

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QSvgTinyDocument18setFramesPerSecondEi
_ZN16QSvgTinyDocument18setFramesPerSecondEi proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	[eax+0D0h], edx
		retn
_ZN16QSvgTinyDocument18setFramesPerSecondEi endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 126. _ZNK16QSvgTinyDocument12currentFrameEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QSvgTinyDocument12currentFrameEv
_ZNK16QSvgTinyDocument12currentFrameEv proc near
					; CODE XREF: _ZNK12QSvgRenderer12currentFrameEv+14j
					; _ZN12QSvgRenderer11qt_metacallEN11QMetaObject4CallEiPPv+179p

var_2C		= dword	ptr -2Ch
var_14		= word ptr -14h
var_12		= word ptr -12h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		lea	eax, [ebx+0C4h]
		mov	[esp+2Ch+var_2C], eax
		call	ds:_ZNK5QTime7elapsedEv
		mov	edx, [ebx+0CCh]
		mov	[esp+2Ch+var_10], eax
		fild	[esp+2Ch+var_10]
		mov	[esp+2Ch+var_10], edx
		fild	[esp+2Ch+var_10]
		fdivp	st(1), st
		fld1
		fld	st
		fucomp	st(2)
		fnstsw	ax
		sahf
		ja	short loc_7102A470
		fstp	st(1)
		jmp	short loc_7102A472
; ---------------------------------------------------------------------------
		align 10h

loc_7102A470:				; CODE XREF: _ZNK16QSvgTinyDocument12currentFrameEv+38j
		fstp	st

loc_7102A472:				; CODE XREF: _ZNK16QSvgTinyDocument12currentFrameEv+3Cj
		imul	edx, [ebx+0D0h]
		fnstcw	[esp+2Ch+var_12]
		mov	[esp+2Ch+var_10], edx
		movzx	eax, [esp+2Ch+var_12]
		fild	[esp+2Ch+var_10]
		fmulp	st(1), st
		mov	ah, 0Ch
		mov	[esp+2Ch+var_14], ax
		fldcw	[esp+2Ch+var_14]
		fistp	[esp+2Ch+var_10]
		fldcw	[esp+2Ch+var_12]
		mov	eax, [esp+2Ch+var_10]
		add	esp, 28h
		pop	ebx
		retn
_ZNK16QSvgTinyDocument12currentFrameEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  75. _ZN16QSvgTinyDocument15setCurrentFrameEi

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QSvgTinyDocument15setCurrentFrameEi
_ZN16QSvgTinyDocument15setCurrentFrameEi proc near
					; CODE XREF: _ZN12QSvgRenderer15setCurrentFrameEi+14j
					; _ZN12QSvgRenderer11qt_metacallEN11QMetaObject4CallEiPPv+152p

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_2C		= qword	ptr -2Ch
var_14		= word ptr -14h
var_12		= word ptr -12h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 34h
		mov	ebx, [esp+3Ch+arg_0]
		mov	eax, [ebx+0CCh]
		lea	esi, [ebx+0C4h]
		mov	[esp+3Ch+var_10], eax
		imul	eax, [ebx+0D0h]
		fild	[esp+3Ch+var_10]
		fild	[esp+3Ch+arg_4]
		mov	[esp+3Ch+var_3C], esi
		mov	[esp+3Ch+var_10], eax
		fild	[esp+3Ch+var_10]
		fdivp	st(1), st
		fmulp	st(1), st
		fstp	[esp+3Ch+var_2C]
		call	ds:_ZNK5QTime7elapsedEv
		mov	[esp+3Ch+var_3C], esi
		fld	[esp+3Ch+var_2C]
		fmul	ds:flt_7105A6FC
		fnstcw	[esp+3Ch+var_12]
		mov	[esp+3Ch+var_10], eax
		movzx	eax, [esp+3Ch+var_12]
		fild	[esp+3Ch+var_10]
		fsubp	st(1), st
		mov	ah, 0Ch
		mov	[esp+3Ch+var_14], ax
		fldcw	[esp+3Ch+var_14]
		fistp	[esp+3Ch+var_38]
		fldcw	[esp+3Ch+var_12]
		call	ds:_ZNK5QTime8addMSecsEi
		mov	[ebx+0C4h], eax
		add	esp, 34h
		pop	ebx
		pop	esi
		retn
_ZN16QSvgTinyDocument15setCurrentFrameEi endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 127. _ZNK16QSvgTinyDocument13elementExistsERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QSvgTinyDocument13elementExistsERK7QString
_ZNK16QSvgTinyDocument13elementExistsERK7QString proc near
					; CODE XREF: _ZNK12QSvgRenderer13elementExistsERK7QString+20j

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], eax
		call	sub_710241E0
		test	eax, eax
		setnz	al
		add	esp, 1Ch
		retn
_ZNK16QSvgTinyDocument13elementExistsERK7QString endp

; Exported entry 128. _ZNK16QSvgTinyDocument15boundsOnElementERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QSvgTinyDocument15boundsOnElementERK7QString
_ZNK16QSvgTinyDocument15boundsOnElementERK7QString proc	near
					; CODE XREF: _ZNK12QSvgRenderer15boundsOnElementERK7QString+32p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	[esp+1Ch+var_4], esi
		mov	eax, [esp+1Ch+arg_8]
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_18], eax
		mov	[esp+1Ch+var_1C], esi
		call	sub_710241E0
		test	eax, eax
		jz	short loc_7102A5A6

loc_7102A587:				; CODE XREF: _ZNK16QSvgTinyDocument15boundsOnElementERK7QString+48j
		mov	[esp+1Ch+var_18], eax
		mov	[esp+1Ch+var_1C], ebx
		call	sub_71022860
		mov	eax, ebx
		sub	esp, 4
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn	4
; ---------------------------------------------------------------------------

loc_7102A5A6:				; CODE XREF: _ZNK16QSvgTinyDocument15boundsOnElementERK7QString+25j
		mov	eax, esi
		jmp	short loc_7102A587
_ZNK16QSvgTinyDocument15boundsOnElementERK7QString endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  76. _ZN16QSvgTinyDocument16restartAnimationEv

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QSvgTinyDocument16restartAnimationEv
_ZN16QSvgTinyDocument16restartAnimationEv proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, ds:_ZN5QTime7restartEv
		add	[esp+0Ch+arg_0], 0C4h
		add	esp, 0Ch
		jmp	eax
_ZN16QSvgTinyDocument16restartAnimationEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 133. _ZNK16QSvgTinyDocument9namedNodeERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QSvgTinyDocument9namedNodeERK7QString
_ZNK16QSvgTinyDocument9namedNodeERK7QString proc near ;	CODE XREF: sub_710241E0+24j

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [ebx+0BCh]
		mov	eax, [eax+0Ch]
		test	eax, eax
		jnz	short loc_7102A5F0

loc_7102A5E5:				; CODE XREF: _ZNK16QSvgTinyDocument9namedNodeERK7QString+46j
		xor	eax, eax
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7102A5F0:				; CODE XREF: _ZNK16QSvgTinyDocument9namedNodeERK7QString+13j
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_14], 0
		mov	[esp+1Ch+var_18], eax
		lea	eax, [ebx+0BCh]
		mov	[esp+1Ch+var_1C], eax
		call	sub_710514A0
		mov	eax, [eax]
		cmp	eax, [ebx+0BCh]
		jz	short loc_7102A5E5
		mov	eax, [eax+0Ch]
		add	esp, 18h
		pop	ebx
		retn
_ZNK16QSvgTinyDocument9namedNodeERK7QString endp

; Exported entry  73. _ZN16QSvgTinyDocument12addNamedNodeERK7QStringP8QSvgNode

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QSvgTinyDocument12addNamedNodeERK7QStringP8QSvgNode
_ZN16QSvgTinyDocument12addNamedNodeERK7QStringP8QSvgNode proc near
					; CODE XREF: sub_71024E40+5Bp

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 5Ch
		mov	[esp+5Ch+var_10], ebx
		mov	ebx, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_8], edi
		mov	edi, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_4], ebp
		mov	[esp+5Ch+var_C], esi
		mov	eax, [ebx+0BCh]
		lea	ebp, [ebx+0BCh]
		mov	edx, [eax+8]
		cmp	edx, 1
		jz	short loc_7102A68F
		mov	[esp+5Ch+var_4C], 4
		mov	[esp+5Ch+var_50], 10h
		mov	[esp+5Ch+var_54], offset sub_71044A30
		mov	[esp+5Ch+var_58], offset sub_71044A60
		mov	[esp+5Ch+var_5C], eax
		call	ds:_ZN9QHashData14detach_helper2EPFvPNS_4NodeEPvEPFvS1_Eii
		mov	edx, [ebx+0BCh]
		lock dec dword ptr [edx+8]
		setnz	cl
		test	cl, cl
		jz	short loc_7102A6D0

loc_7102A689:				; CODE XREF: _ZN16QSvgTinyDocument12addNamedNodeERK7QStringP8QSvgNode+CFj
		mov	[ebx+0BCh], eax

loc_7102A68F:				; CODE XREF: _ZN16QSvgTinyDocument12addNamedNodeERK7QStringP8QSvgNode+2Dj
		lea	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_54], eax
		mov	[esp+5Ch+var_58], edi
		mov	[esp+5Ch+var_5C], ebp
		call	sub_710514A0
		mov	esi, eax
		mov	eax, [eax]
		cmp	eax, [ebx+0BCh]
		jz	short loc_7102A6F1
		mov	edx, [esp+5Ch+arg_8]
		mov	[eax+0Ch], edx

loc_7102A6B6:				; CODE XREF: _ZN16QSvgTinyDocument12addNamedNodeERK7QStringP8QSvgNode+11Dj
		mov	ebx, [esp+5Ch+var_10]
		mov	esi, [esp+5Ch+var_C]
		mov	edi, [esp+5Ch+var_8]
		mov	ebp, [esp+5Ch+var_4]
		add	esp, 5Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7102A6D0:				; CODE XREF: _ZN16QSvgTinyDocument12addNamedNodeERK7QStringP8QSvgNode+67j
		mov	[esp+5Ch+var_58], offset sub_71044A30
		mov	edx, [ebx+0BCh]
		mov	[esp+5Ch+var_30], eax
		mov	[esp+5Ch+var_5C], edx
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		mov	eax, [esp+5Ch+var_30]
		jmp	short loc_7102A689
; ---------------------------------------------------------------------------

loc_7102A6F1:				; CODE XREF: _ZN16QSvgTinyDocument12addNamedNodeERK7QStringP8QSvgNode+8Dj
		mov	edx, [eax+0Ch]
		cmp	edx, [eax+18h]
		jge	short loc_7102A742

loc_7102A6F9:				; CODE XREF: _ZN16QSvgTinyDocument12addNamedNodeERK7QStringP8QSvgNode+14Cj
		mov	[esp+5Ch+var_58], 4
		mov	eax, [ebx+0BCh]
		mov	ebp, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_5C], eax
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		jz	short loc_7102A72A
		mov	edx, [edi]
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [esp+5Ch+arg_8]
		mov	[eax+0Ch], edx

loc_7102A72A:				; CODE XREF: _ZN16QSvgTinyDocument12addNamedNodeERK7QStringP8QSvgNode+F6j
		mov	[eax+4], ebp
		mov	edx, [esi]
		mov	[eax], edx
		mov	[esi], eax
		mov	eax, [ebx+0BCh]
		add	dword ptr [eax+0Ch], 1
		jmp	loc_7102A6B6
; ---------------------------------------------------------------------------

loc_7102A742:				; CODE XREF: _ZN16QSvgTinyDocument12addNamedNodeERK7QStringP8QSvgNode+D7j
		movsx	edx, word ptr [eax+16h]
		mov	[esp+5Ch+var_5C], eax
		add	edx, 1
		mov	[esp+5Ch+var_58], edx
		call	ds:_ZN9QHashData6rehashEi
		lea	edx, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_54], edx
		mov	[esp+5Ch+var_58], edi
		mov	[esp+5Ch+var_5C], ebp
		call	sub_710514A0
		mov	esi, eax
		jmp	short loc_7102A6F9
_ZN16QSvgTinyDocument12addNamedNodeERK7QStringP8QSvgNode endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  89. _ZN16QSvgTinyDocumentC2Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QSvgTinyDocumentC2Ev
_ZN16QSvgTinyDocumentC2Ev proc near

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053880
		mov	[ebp+var_18], offset sub_7102A87C
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], 0
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_71024280
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D948
		mov	dword ptr [eax+90h], 0FFFFFFFFh
		fldz
		fst	qword ptr [eax+0A0h]
		mov	dword ptr [eax+8Ch], 0FFFFFFFFh
		fst	qword ptr [eax+98h]
		mov	byte ptr [eax+94h], 0
		fst	qword ptr [eax+0B0h]
		mov	byte ptr [eax+95h], 0
		fstp	qword ptr [eax+0A8h]
		mov	eax, ds:_ZN9QHashData11shared_nullE
		mov	[edx+0B8h], eax
		lock inc dword ptr [eax+8]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	[edx+0BCh], eax
		lock inc dword ptr [eax+8]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	[edx+0C0h], eax
		lock inc dword ptr [eax+8]
		setnz	dl
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+0C4h], 0FFFFFFFFh
		mov	byte ptr [eax+0C8h], 0
		mov	dword ptr [eax+0CCh], 0
		mov	dword ptr [eax+0D0h], 1Eh
		add	eax, 0D8h
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	sub_71025260
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QSvgTinyDocumentC2Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102A87C	proc near		; DATA XREF: _ZN16QSvgTinyDocumentC2Ev+20o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	edx, [ebp-34h]
		mov	[ebp-40h], edx
		mov	edx, [ebp+8]
		mov	eax, [edx+0C0h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jnz	short loc_7102A8BA
		mov	edx, [ebp+8]
		mov	[esp+arg_0], offset sub_71044560
		mov	eax, [edx+0C0h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_7102A8BA:				; CODE XREF: sub_7102A87C+1Bj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0BCh
		mov	[esp+0], eax
		call	sub_71044A90
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0B8h
		mov	[esp+0], eax
		call	sub_71044740
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_710243A0
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_7102A87C	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  91. _ZN16QSvgTinyDocumentD1Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QSvgTinyDocumentD1Ev
_ZN16QSvgTinyDocumentD1Ev proc near	; DATA XREF: .rdata:off_7105D948o

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_71053886
		mov	[ebp+var_18], offset sub_7102AA0C
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_7105D948
		mov	eax, [edx+0C0h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	short loc_7102A9A0

loc_7102A959:				; CODE XREF: _ZN16QSvgTinyDocumentD1Ev+B1j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0BCh]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	short loc_7102A9E6

loc_7102A96D:				; CODE XREF: _ZN16QSvgTinyDocumentD1Ev+F7j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0B8h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	short loc_7102A9C3

loc_7102A981:				; CODE XREF: _ZN16QSvgTinyDocumentD1Ev+D4j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_710243A0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_7102A9A0:				; CODE XREF: _ZN16QSvgTinyDocumentD1Ev+47j
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_71044560
		mov	eax, [edx+0C0h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	short loc_7102A959
; ---------------------------------------------------------------------------

loc_7102A9C3:				; CODE XREF: _ZN16QSvgTinyDocumentD1Ev+6Fj
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_71044650
		mov	eax, [edx+0B8h]
		mov	[ebp+var_38], 3
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	short loc_7102A981
; ---------------------------------------------------------------------------

loc_7102A9E6:				; CODE XREF: _ZN16QSvgTinyDocumentD1Ev+5Bj
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_71044A30
		mov	eax, [edx+0BCh]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_7102A96D
_ZN16QSvgTinyDocumentD1Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102AA0C	proc near		; DATA XREF: _ZN16QSvgTinyDocumentD1Ev+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-40h], edx
		jz	short loc_7102AA39
		cmp	eax, 2
		jz	short loc_7102AA50
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0BCh
		mov	[esp+0], eax
		call	sub_71044A90

loc_7102AA39:				; CODE XREF: sub_7102AA0C+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0B8h
		mov	[esp+0], eax
		call	sub_71044740

loc_7102AA50:				; CODE XREF: sub_7102AA0C+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_710243A0
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_7102AA0C	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  92. _ZN16QSvgTinyDocumentD2Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QSvgTinyDocumentD2Ev
_ZN16QSvgTinyDocumentD2Ev proc near

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053890
		mov	[ebp+var_18], offset sub_7102AB7C
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_7105D948
		mov	eax, [edx+0C0h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	short loc_7102AB10

loc_7102AAC9:				; CODE XREF: _ZN16QSvgTinyDocumentD2Ev+B1j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0BCh]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	short loc_7102AB56

loc_7102AADD:				; CODE XREF: _ZN16QSvgTinyDocumentD2Ev+F7j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0B8h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	short loc_7102AB33

loc_7102AAF1:				; CODE XREF: _ZN16QSvgTinyDocumentD2Ev+D4j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_710243A0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_7102AB10:				; CODE XREF: _ZN16QSvgTinyDocumentD2Ev+47j
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_71044560
		mov	eax, [edx+0C0h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	short loc_7102AAC9
; ---------------------------------------------------------------------------

loc_7102AB33:				; CODE XREF: _ZN16QSvgTinyDocumentD2Ev+6Fj
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_71044650
		mov	eax, [edx+0B8h]
		mov	[ebp+var_38], 3
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	short loc_7102AAF1
; ---------------------------------------------------------------------------

loc_7102AB56:				; CODE XREF: _ZN16QSvgTinyDocumentD2Ev+5Bj
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_71044A30
		mov	eax, [edx+0BCh]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_7102AADD
_ZN16QSvgTinyDocumentD2Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102AB7C	proc near		; DATA XREF: _ZN16QSvgTinyDocumentD2Ev+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-40h], edx
		jz	short loc_7102ABA9
		cmp	eax, 2
		jz	short loc_7102ABC0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0BCh
		mov	[esp+0], eax
		call	sub_71044A90

loc_7102ABA9:				; CODE XREF: sub_7102AB7C+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0B8h
		mov	[esp+0], eax
		call	sub_71044740

loc_7102ABC0:				; CODE XREF: sub_7102AB7C+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_710243A0
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_7102AB7C	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  90. _ZN16QSvgTinyDocumentD0Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QSvgTinyDocumentD0Ev
_ZN16QSvgTinyDocumentD0Ev proc near	; DATA XREF: .rdata:7105D94Co

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_7105389A
		mov	[ebp+var_18], offset sub_7102ACFC
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_7105D948
		mov	eax, [edx+0C0h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	short loc_7102AC90

loc_7102AC39:				; CODE XREF: _ZN16QSvgTinyDocumentD0Ev+C1j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0BCh]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_7102ACD6

loc_7102AC51:				; CODE XREF: _ZN16QSvgTinyDocumentD0Ev+107j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0B8h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	short loc_7102ACB3

loc_7102AC65:				; CODE XREF: _ZN16QSvgTinyDocumentD0Ev+E4j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_710243A0
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		call	sub_710517D0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7102AC90:				; CODE XREF: _ZN16QSvgTinyDocumentD0Ev+47j
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_71044560
		mov	eax, [edx+0C0h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	short loc_7102AC39
; ---------------------------------------------------------------------------

loc_7102ACB3:				; CODE XREF: _ZN16QSvgTinyDocumentD0Ev+73j
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_71044650
		mov	eax, [edx+0B8h]
		mov	[ebp+var_38], 3
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	short loc_7102AC65
; ---------------------------------------------------------------------------

loc_7102ACD6:				; CODE XREF: _ZN16QSvgTinyDocumentD0Ev+5Bj
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_71044A30
		mov	eax, [edx+0BCh]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_7102AC51
_ZN16QSvgTinyDocumentD0Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102ACFC	proc near		; DATA XREF: _ZN16QSvgTinyDocumentD0Ev+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-40h], edx
		jz	short loc_7102AD29
		cmp	eax, 2
		jz	short loc_7102AD40
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0BCh
		mov	[esp+0], eax
		call	sub_71044A90

loc_7102AD29:				; CODE XREF: sub_7102ACFC+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0B8h
		mov	[esp+0], eax
		call	sub_71044740

loc_7102AD40:				; CODE XREF: sub_7102ACFC+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_710243A0
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_7102ACFC	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7102AD70	proc near		; CODE XREF: _ZN16QSvgTinyDocument4loadERK10QByteArray+89p
					; _ZN16QSvgTinyDocument4loadERK7QString+1E6p

var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= byte ptr -8Ch
var_88		= dword	ptr -88h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_38		= dword	ptr -38h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0B8h
		mov	[ebp+var_9C], eax
		lea	eax, [ebp+var_8]
		mov	[ebp+var_6C], eax
		lea	eax, [ebp+var_8C]
		mov	[ebp+var_98], edx
		mov	[ebp+var_74], offset sub_710525B0
		mov	[ebp+var_70], offset dword_710538A4
		mov	[ebp+var_68], offset sub_7102B1C9
		mov	[ebp+var_64], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+var_98]
		test	edx, edx
		jz	loc_7102B161
		mov	eax, [ebp+var_98]
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZNK9QIODevice6isOpenEv
		test	al, al
		jz	loc_7102B138

loc_7102ADE0:				; CODE XREF: sub_7102AD70+3ECj
		mov	eax, ds:_ZN10QByteArray11shared_nullE
		mov	[ebp+var_90], eax
		mov	edx, eax
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax]
		setnz	al
		mov	[ebp+var_14], edx
		lock inc dword ptr [edx]
		setnz	al
		lea	eax, [ebp+var_50]
		mov	[ebp+var_50], 0
		mov	[ebp+var_4C], 0
		mov	[ebp+var_40], 0
		mov	[ebp+var_30], 0
		mov	[ebp+var_2C], 0
		mov	[ebp+var_28], 0
		mov	dword ptr [esp+0Ch], 38h
		mov	dword ptr [esp+8], offset a1_2_5 ; "1.2.5"
		mov	dword ptr [esp+4], 1Fh
		mov	[esp], eax
		mov	[ebp+var_88], 2
		call	inflateInit2_
		test	eax, eax
		jnz	loc_7102B085
		xchg	ax, ax

loc_7102AE60:				; CODE XREF: sub_7102AD70+202j
					; sub_7102AD70+444j
		mov	eax, [ebp+var_4C]
		test	eax, eax
		jz	loc_7102AFE0
		nop
		lea	esi, [esi+0]

loc_7102AE70:				; CODE XREF: sub_7102AD70+1F9j
					; sub_7102AD70+310j
		mov	eax, [ebp+var_14]
		mov	eax, [eax+8]
		mov	[ebp+var_88], 2
		mov	[ebp+var_94], eax
		add	eax, 1000h
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		call	ds:_ZN10QByteArray6resizeEi
		mov	eax, [ebp+var_14]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_7102AFC6

loc_7102AEA9:				; CODE XREF: sub_7102AD70+25Ej
		mov	eax, [eax+8]
		lea	edx, [ebp+var_14]
		mov	[esp], edx
		mov	[ebp+var_88], 2
		mov	[esp+4], eax
		call	ds:_ZN10QByteArray7reallocEi
		mov	eax, [ebp+var_14]
		mov	edx, [eax+0Ch]

loc_7102AECC:				; CODE XREF: sub_7102AD70+264j
		mov	eax, [ebp+var_94]
		sub	eax, [ebp+var_40]
		mov	dword ptr [esp+4], 0
		add	[ebp+var_40], 1000h
		add	edx, eax
		lea	eax, [ebp+var_50]
		mov	[ebp+var_44], edx
		mov	[esp], eax
		mov	[ebp+var_88], 2
		call	inflate
		lea	ecx, [eax+4]
		cmp	ecx, 6
		ja	short loc_7102AF64
		mov	edx, 1
		shl	edx, cl
		mov	ecx, edx
		and	ecx, 47h
		jz	short loc_7102AF64
		lea	eax, [ebp+var_50]
		mov	[esp], eax
		mov	[ebp+var_88], 2
		call	inflateEnd
		mov	eax, [ebp+var_38]
		test	eax, eax
		jz	loc_7102B193

loc_7102AF34:				; CODE XREF: sub_7102AD70+428j
		mov	[esp+4], eax
		mov	dword ptr [esp], offset	aErrorWhileInfl	; "Error while inflating gzip file: %s"
		mov	[ebp+var_88], 2
		call	ds:_Z8qWarningPKcz
		mov	eax, [ebp+var_40]
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		call	ds:_ZN10QByteArray4chopEi
		jmp	short loc_7102AFB0
; ---------------------------------------------------------------------------

loc_7102AF64:				; CODE XREF: sub_7102AD70+194j
					; sub_7102AD70+1A2j
		mov	ecx, [ebp+var_40]
		test	ecx, ecx
		jz	loc_7102AE70
		cmp	eax, 1
		jnz	loc_7102AE60
		mov	edx, [ebp+var_4C]
		test	edx, edx
		jnz	loc_7102B19D

loc_7102AF83:				; CODE XREF: sub_7102AD70+2D9j
					; sub_7102AD70+44Aj
		mov	eax, [ebp+var_40]
		mov	[ebp+var_88], 2
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		call	ds:_ZN10QByteArray4chopEi
		lea	eax, [ebp+var_50]
		mov	[esp], eax
		call	inflateEnd
		nop
		lea	esi, [esi+0]

loc_7102AFB0:				; CODE XREF: sub_7102AD70+1F2j
		mov	eax, [ebp+var_14]
		mov	edx, [ebp+var_9C]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		jmp	loc_7102B0BF
; ---------------------------------------------------------------------------

loc_7102AFC6:				; CODE XREF: sub_7102AD70+133j
		mov	edx, [eax+0Ch]
		lea	ecx, [eax+10h]
		cmp	edx, ecx
		jnz	loc_7102AEA9
		jmp	loc_7102AECC
; ---------------------------------------------------------------------------
		align 10h

loc_7102AFE0:				; CODE XREF: sub_7102AD70+F5j
		mov	eax, [ebp+var_98]
		lea	edx, [ebp+var_18]
		mov	dword ptr [esp+8], 1000h
		mov	dword ptr [esp+0Ch], 0
		mov	[esp], edx
		mov	[esp+4], eax
		mov	[ebp+var_88], 2
		call	ds:_ZN9QIODevice4readEx
		sub	esp, 4
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_88], 1
		call	ds:_ZN10QByteArrayaSERKS_
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7102B105

loc_7102B041:				; CODE XREF: sub_7102AD70+3ABj
		mov	edx, [ebp+var_10]
		mov	eax, [edx+8]
		test	eax, eax
		jz	loc_7102AF83
		mov	[ebp+var_4C], eax
		mov	ecx, [edx]
		cmp	ecx, 1
		jz	loc_7102B180

loc_7102B05D:				; CODE XREF: sub_7102AD70+418j
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_88], 2
		call	ds:_ZN10QByteArray7reallocEi
		mov	eax, [ebp+var_10]
		mov	ecx, [eax+0Ch]

loc_7102B07D:				; CODE XREF: sub_7102AD70+41Ej
		mov	[ebp+var_50], ecx
		jmp	loc_7102AE70
; ---------------------------------------------------------------------------

loc_7102B085:				; CODE XREF: sub_7102AD70+E8j
		mov	eax, [ebp+var_38]
		test	eax, eax
		jz	loc_7102B1BF

loc_7102B090:				; CODE XREF: sub_7102AD70+454j
		mov	[esp+4], eax
		mov	dword ptr [esp], offset	aCannotInitiali	; "Cannot initialize zlib, because: %s"
		mov	[ebp+var_88], 2
		call	ds:_Z8qWarningPKcz
		mov	edx, [ebp+var_90]
		mov	eax, [ebp+var_9C]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	al

loc_7102B0BF:				; CODE XREF: sub_7102AD70+251j
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7102B120

loc_7102B0CC:				; CODE XREF: sub_7102AD70+3C6j
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7102B0EF
		mov	eax, [ebp+var_10]
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_Z5qFreePv

loc_7102B0EF:				; CODE XREF: sub_7102AD70+367j
					; sub_7102AD70+404j
		lea	eax, [ebp+var_8C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_9C]
		leave
		retn
; ---------------------------------------------------------------------------

loc_7102B105:				; CODE XREF: sub_7102AD70+2CBj
		mov	eax, [ebp+var_18]
		mov	[ebp+var_88], 2
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	loc_7102B041
; ---------------------------------------------------------------------------

loc_7102B120:				; CODE XREF: sub_7102AD70+35Aj
		mov	eax, [ebp+var_14]
		mov	[ebp+var_88], 3
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	short loc_7102B0CC
; ---------------------------------------------------------------------------

loc_7102B138:				; CODE XREF: sub_7102AD70+6Aj
		mov	edx, [ebp+var_98]
		mov	[ebp+var_C], 1
		mov	eax, [edx]
		lea	edx, [ebp+var_C]
		mov	eax, [eax+34h]
		mov	[esp+4], edx
		mov	edx, [ebp+var_98]
		mov	[esp], edx
		call	eax
		jmp	loc_7102ADE0
; ---------------------------------------------------------------------------

loc_7102B161:				; CODE XREF: sub_7102AD70+49j
		mov	eax, ds:_ZN10QByteArray11shared_nullE
		mov	edx, [ebp+var_9C]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		jmp	loc_7102B0EF
; ---------------------------------------------------------------------------
		align 10h

loc_7102B180:				; CODE XREF: sub_7102AD70+2E7j
		mov	ecx, [edx+0Ch]
		add	edx, 10h
		cmp	ecx, edx
		jnz	loc_7102B05D
		jmp	loc_7102B07D
; ---------------------------------------------------------------------------

loc_7102B193:				; CODE XREF: sub_7102AD70+1BEj
		mov	eax, offset aUnknownError ; "Unknown error"
		jmp	loc_7102AF34
; ---------------------------------------------------------------------------

loc_7102B19D:				; CODE XREF: sub_7102AD70+20Dj
		lea	eax, [ebp+var_50]
		mov	[esp], eax
		mov	[ebp+var_88], 2
		call	inflateReset
		test	eax, eax
		jz	loc_7102AE60
		jmp	loc_7102AF83
; ---------------------------------------------------------------------------

loc_7102B1BF:				; CODE XREF: sub_7102AD70+31Aj
		mov	eax, offset aUnknownError ; "Unknown error"
		jmp	loc_7102B090
sub_7102AD70	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102B1C9	proc near		; DATA XREF: sub_7102AD70+2Fo
		add	ebp, 8
		mov	eax, [ebp-88h]
		mov	edx, [ebp-84h]
		cmp	eax, 1
		mov	[ebp-0A0h], edx
		jz	short loc_7102B1FD
		cmp	eax, 2
		jz	short loc_7102B212
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_7103B6E0

loc_7102B1FD:				; CODE XREF: sub_7102B1C9+18j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_7103B6E0

loc_7102B212:				; CODE XREF: sub_7102B1C9+1Dj
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-88h], 0
		call	sub_7103B6E0
		mov	eax, [ebp-0A0h]
		mov	dword ptr [ebp-88h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7102B1C9	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  83. _ZN16QSvgTinyDocument4loadEP16QXmlStreamReader

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QSvgTinyDocument4loadEP16QXmlStreamReader
_ZN16QSvgTinyDocument4loadEP16QXmlStreamReader proc near
					; CODE XREF: _ZN12QSvgRenderer4loadEP16QXmlStreamReader+5Dp

var_90		= dword	ptr -90h
var_8C		= byte ptr -8Ch
var_88		= dword	ptr -88h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_58		= byte ptr -58h
var_28		= dword	ptr -28h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0A8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_6C], eax
		lea	eax, [ebp+var_8C]
		mov	[esp], eax
		mov	[ebp+var_74], offset sub_710525B0
		mov	[ebp+var_70], offset word_710538AE
		mov	[ebp+var_68], offset sub_7102B31A
		mov	[ebp+var_64], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		lea	edx, [ebp+var_58]
		mov	[esp], edx
		mov	[ebp+var_88], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_710206E0
		lea	eax, [ebp+var_58]
		mov	[esp], eax
		mov	[ebp+var_88], 1
		call	sub_71006C10
		test	eax, eax
		jz	short loc_7102B2BA
		mov	eax, [ebp+var_28]
		mov	[esp], eax
		call	ds:_ZNK16QXmlStreamReader5errorEv
		test	eax, eax
		jz	short loc_7102B2F0

loc_7102B2BA:				; CODE XREF: _ZN16QSvgTinyDocument4loadEP16QXmlStreamReader+68j
		mov	[ebp+var_90], 0

loc_7102B2C4:				; CODE XREF: _ZN16QSvgTinyDocument4loadEP16QXmlStreamReader+D8j
		lea	eax, [ebp+var_58]
		mov	[esp], eax
		mov	[ebp+var_88], 0FFFFFFFFh
		call	sub_71014990
		lea	eax, [ebp+var_8C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_90]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7102B2F0:				; CODE XREF: _ZN16QSvgTinyDocument4loadEP16QXmlStreamReader+78j
		lea	eax, [ebp+var_58]
		mov	[esp], eax
		call	sub_71006C10
		mov	[ebp+var_90], eax
		lea	eax, [ebp+var_58]
		mov	[esp], eax
		call	sub_71006C90
		mov	edx, [ebp+var_90]
		mov	[edx+0CCh], eax
		jmp	short loc_7102B2C4
_ZN16QSvgTinyDocument4loadEP16QXmlStreamReader endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102B31A	proc near		; DATA XREF: _ZN16QSvgTinyDocument4loadEP16QXmlStreamReader+26o
		add	ebp, 8
		mov	eax, [ebp-84h]
		mov	dword ptr [ebp-88h], 0
		mov	[ebp-94h], eax
		lea	eax, [ebp-58h]
		mov	[esp+0], eax
		call	sub_71014990
		mov	edx, [ebp-94h]
		mov	dword ptr [ebp-88h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_7102B31A	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 125. _ZNK16QSvgTinyDocument10namedStyleERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QSvgTinyDocument10namedStyleERK7QString
_ZNK16QSvgTinyDocument10namedStyleERK7QString proc near	; CODE XREF: sub_71024020+B3p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	eax, [ebx+0C0h]
		mov	ecx, [eax+0Ch]
		test	ecx, ecx
		jnz	short loc_7102B380

loc_7102B375:				; CODE XREF: _ZNK16QSvgTinyDocument10namedStyleERK7QString+46j
		xor	eax, eax

loc_7102B377:				; CODE XREF: _ZNK16QSvgTinyDocument10namedStyleERK7QString+4Dj
					; _ZNK16QSvgTinyDocument10namedStyleERK7QString+54j
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7102B380:				; CODE XREF: _ZNK16QSvgTinyDocument10namedStyleERK7QString+13j
		mov	eax, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_24], 0
		mov	[esp+2Ch+var_28], eax
		lea	eax, [ebx+0C0h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_71051360
		mov	eax, [eax]
		cmp	eax, [ebx+0C0h]
		jz	short loc_7102B375
		mov	eax, [eax+0Ch]
		test	eax, eax
		jz	short loc_7102B377
		mov	edx, [eax+4]
		test	edx, edx
		jnz	short loc_7102B377
		mov	edx, [eax]
		mov	[esp+2Ch+var_10], eax
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [edx+4]
		mov	eax, [esp+2Ch+var_10]
		add	esp, 28h
		pop	ebx
		retn
_ZNK16QSvgTinyDocument10namedStyleERK7QString endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 131. _ZNK16QSvgTinyDocument7svgFontERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QSvgTinyDocument7svgFontERK7QString
_ZNK16QSvgTinyDocument7svgFontERK7QString proc near ; CODE XREF: sub_7100E610+1CCp
					; sub_71010D50+13Ap ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	eax, [ebx+0B8h]
		mov	eax, [eax+0Ch]
		test	eax, eax
		jnz	short loc_7102B3F0

loc_7102B3E5:				; CODE XREF: _ZNK16QSvgTinyDocument7svgFontERK7QString+46j
		xor	eax, eax

loc_7102B3E7:				; CODE XREF: _ZNK16QSvgTinyDocument7svgFontERK7QString+4Dj
					; _ZNK16QSvgTinyDocument7svgFontERK7QString+54j
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7102B3F0:				; CODE XREF: _ZNK16QSvgTinyDocument7svgFontERK7QString+13j
		mov	eax, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_24], 0
		mov	[esp+2Ch+var_28], eax
		lea	eax, [ebx+0B8h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_71051400
		mov	eax, [eax]
		cmp	eax, [ebx+0B8h]
		jz	short loc_7102B3E5
		mov	eax, [eax+0Ch]
		test	eax, eax
		jz	short loc_7102B3E7
		mov	edx, [eax+4]
		test	edx, edx
		jnz	short loc_7102B3E7
		mov	edx, [eax]
		mov	[esp+2Ch+var_10], eax
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [edx+4]
		mov	eax, [esp+2Ch+var_10]
		add	esp, 28h
		pop	ebx
		retn
_ZNK16QSvgTinyDocument7svgFontERK7QString endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  74. _ZN16QSvgTinyDocument13addNamedStyleERK7QStringP21QSvgFillStyleProperty

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QSvgTinyDocument13addNamedStyleERK7QStringP21QSvgFillStyleProperty
_ZN16QSvgTinyDocument13addNamedStyleERK7QStringP21QSvgFillStyleProperty	proc near
					; CODE XREF: sub_71023700+27Cp

var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_710538C0
		mov	[ebp+var_28], offset sub_7102B66C
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_8]
		test	eax, eax
		jz	short loc_7102B480
		mov	edx, [ebp+arg_8]
		add	dword ptr [edx+4], 1

loc_7102B480:				; CODE XREF: _ZN16QSvgTinyDocument13addNamedStyleERK7QStringP21QSvgFillStyleProperty+37j
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+0C0h]
		mov	edx, [eax+8]
		cmp	edx, 1
		jz	short loc_7102B4E8
		mov	dword ptr [esp+10h], 4
		mov	dword ptr [esp+0Ch], 10h
		mov	dword ptr [esp+8], offset sub_71044560
		mov	dword ptr [esp+4], offset sub_71044620
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN9QHashData14detach_helper2EPFvPNS_4NodeEPvEPFvS1_Eii
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_5C], eax
		mov	eax, [edx+0C0h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_7102B5A0

loc_7102B4DC:				; CODE XREF: _ZN16QSvgTinyDocument13addNamedStyleERK7QStringP21QSvgFillStyleProperty+17Aj
		mov	edx, [ebp+var_5C]
		mov	eax, [ebp+arg_0]
		mov	[eax+0C0h], edx

loc_7102B4E8:				; CODE XREF: _ZN16QSvgTinyDocument13addNamedStyleERK7QStringP21QSvgFillStyleProperty+4Fj
		lea	eax, [ebp+var_C]
		mov	ecx, [ebp+arg_0]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_48], 1
		add	ecx, 0C0h
		mov	[ebp+var_58], ecx
		mov	[esp+4], eax
		mov	[esp], ecx
		call	sub_71051360
		mov	[ebp+var_54], eax
		mov	ecx, [ebp+arg_0]
		mov	edx, [eax]
		mov	[ebp+var_50], edx
		cmp	edx, [ecx+0C0h]
		jz	loc_7102B5C0
		mov	ecx, [ebp+arg_8]
		test	ecx, ecx
		jz	short loc_7102B536
		mov	ecx, [ebp+arg_8]
		add	dword ptr [ecx+4], 1

loc_7102B536:				; CODE XREF: _ZN16QSvgTinyDocument13addNamedStyleERK7QStringP21QSvgFillStyleProperty+EDj
		mov	edx, [ebp+var_50]
		mov	eax, [edx+0Ch]
		test	eax, eax
		jz	short loc_7102B55E
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_7102B55E
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_48], 1
		call	eax

loc_7102B55E:				; CODE XREF: _ZN16QSvgTinyDocument13addNamedStyleERK7QStringP21QSvgFillStyleProperty+FEj
					; _ZN16QSvgTinyDocument13addNamedStyleERK7QStringP21QSvgFillStyleProperty+10Bj
		mov	eax, [ebp+arg_8]
		mov	ecx, [ebp+var_50]
		mov	[ecx+0Ch], eax

loc_7102B567:				; CODE XREF: _ZN16QSvgTinyDocument13addNamedStyleERK7QStringP21QSvgFillStyleProperty+1EBj
		mov	edx, [ebp+arg_8]
		test	edx, edx
		jz	short loc_7102B58F
		mov	edx, [ebp+arg_8]
		mov	eax, [edx+4]
		sub	eax, 1
		test	eax, eax
		mov	[edx+4], eax
		jnz	short loc_7102B58F
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+4]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	eax

loc_7102B58F:				; CODE XREF: _ZN16QSvgTinyDocument13addNamedStyleERK7QStringP21QSvgFillStyleProperty+12Cj
					; _ZN16QSvgTinyDocument13addNamedStyleERK7QStringP21QSvgFillStyleProperty+13Cj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7102B5A0:				; CODE XREF: _ZN16QSvgTinyDocument13addNamedStyleERK7QStringP21QSvgFillStyleProperty+96j
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_71044560
		mov	eax, [ecx+0C0h]
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_7102B4DC
; ---------------------------------------------------------------------------
		align 10h

loc_7102B5C0:				; CODE XREF: _ZN16QSvgTinyDocument13addNamedStyleERK7QStringP21QSvgFillStyleProperty+E2j
		mov	eax, [edx+0Ch]
		cmp	eax, [edx+18h]
		jge	short loc_7102B630

loc_7102B5C8:				; CODE XREF: _ZN16QSvgTinyDocument13addNamedStyleERK7QStringP21QSvgFillStyleProperty+227j
		mov	eax, [ebp+var_C]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_60], eax
		mov	eax, [edx+0C0h]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		jz	short loc_7102B60F
		mov	ecx, [ebp+arg_4]
		mov	edx, [ecx]
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+arg_8]
		test	edx, edx
		mov	[eax+0Ch], edx
		jz	short loc_7102B60F
		add	dword ptr [edx+4], 1

loc_7102B60F:				; CODE XREF: _ZN16QSvgTinyDocument13addNamedStyleERK7QStringP21QSvgFillStyleProperty+1B1j
					; _ZN16QSvgTinyDocument13addNamedStyleERK7QStringP21QSvgFillStyleProperty+1C9j
		mov	ecx, [ebp+var_60]
		mov	[eax+4], ecx
		mov	ecx, [ebp+var_54]
		mov	edx, [ecx]
		mov	[eax], edx
		mov	[ecx], eax
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0C0h]
		add	dword ptr [eax+0Ch], 1
		jmp	loc_7102B567
; ---------------------------------------------------------------------------

loc_7102B630:				; CODE XREF: _ZN16QSvgTinyDocument13addNamedStyleERK7QStringP21QSvgFillStyleProperty+186j
		movsx	eax, word ptr [edx+16h]
		mov	[esp], edx
		add	eax, 1
		mov	[esp+4], eax
		call	ds:_ZN9QHashData6rehashEi
		lea	eax, [ebp+var_C]
		mov	ecx, [ebp+arg_4]
		mov	[esp+8], eax
		mov	eax, [ebp+var_58]
		mov	[ebp+var_48], 1
		mov	[esp+4], ecx
		mov	[esp], eax
		call	sub_71051360
		mov	[ebp+var_54], eax
		jmp	loc_7102B5C8
_ZN16QSvgTinyDocument13addNamedStyleERK7QStringP21QSvgFillStyleProperty	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102B66C	proc near		; DATA XREF: _ZN16QSvgTinyDocument13addNamedStyleERK7QStringP21QSvgFillStyleProperty+23o
		add	ebp, 8
		mov	edx, [ebp-44h]
		cmp	dword ptr [ebp+10h], 0
		mov	[ebp-64h], edx
		jz	short loc_7102B69C
		mov	ecx, [ebp+10h]
		mov	eax, [ecx+4]
		sub	eax, 1
		test	eax, eax
		mov	[ecx+4], eax
		jnz	short loc_7102B69C
		mov	eax, [ecx]
		mov	[esp+0], ecx
		mov	eax, [eax+4]
		mov	dword ptr [ebp-48h], 0
		call	eax

loc_7102B69C:				; CODE XREF: sub_7102B66C+Dj
					; sub_7102B66C+1Dj
		mov	eax, [ebp-64h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7102B66C	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 129. _ZNK16QSvgTinyDocument16matrixForElementERK7QString

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZNK16QSvgTinyDocument16matrixForElementERK7QString
_ZNK16QSvgTinyDocument16matrixForElementERK7QString proc near
					; CODE XREF: _ZNK12QSvgRenderer16matrixForElementERK7QString+39p

var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= byte ptr -9Ch
var_98		= dword	ptr -98h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_60		= byte ptr -60h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0B8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_7C], eax
		lea	eax, [ebp+var_9C]
		mov	[esp], eax
		mov	[ebp+var_84], offset sub_710525B0
		mov	[ebp+var_80], offset word_710538C6
		mov	[ebp+var_78], offset sub_7102B86A
		mov	[ebp+var_74], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_8]
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp+4], edx
		mov	[esp], eax
		call	sub_710241E0
		test	eax, eax
		mov	[ebp+var_A4], eax
		jz	loc_7102B7B8
		lea	edx, [ebp+var_60]
		mov	[esp], edx
		mov	[ebp+var_98], 0FFFFFFFFh
		call	ds:_ZN10QTransformC1Ev
		mov	eax, [ebp+var_A4]
		mov	eax, [eax+34h]
		test	eax, eax
		mov	[ebp+var_A0], eax
		jz	short loc_7102B77D
		nop
		lea	esi, [esi+0]

loc_7102B740:				; CODE XREF: _ZNK16QSvgTinyDocument16matrixForElementERK7QString+CBj
		mov	edx, [ebp+var_A0]
		mov	eax, [edx+20h]
		test	eax, eax
		jz	short loc_7102B76A
		add	eax, 8
		mov	[esp+4], eax
		lea	eax, [ebp+var_60]
		mov	[esp], eax
		mov	[ebp+var_98], 0FFFFFFFFh
		call	ds:_ZN10QTransformmLERKS_

loc_7102B76A:				; CODE XREF: _ZNK16QSvgTinyDocument16matrixForElementERK7QString+9Bj
		mov	edx, [ebp+var_A0]
		mov	edx, [edx+34h]
		test	edx, edx
		mov	[ebp+var_A0], edx
		jnz	short loc_7102B740

loc_7102B77D:				; CODE XREF: _ZNK16QSvgTinyDocument16matrixForElementERK7QString+89j
		lea	eax, [ebp+var_60]
		mov	[esp], eax
		mov	[ebp+var_98], 0FFFFFFFFh
		call	ds:_ZNK10QTransform8toAffineEv
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	ds:_ZN7QMatrixC1ERKS_

loc_7102B7A3:				; CODE XREF: _ZNK16QSvgTinyDocument16matrixForElementERK7QString+19Dj
		lea	eax, [ebp+var_9C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------

loc_7102B7B8:				; CODE XREF: _ZNK16QSvgTinyDocument16matrixForElementERK7QString+5Cj
		mov	edx, [ebp+arg_8]
		mov	eax, [edx]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_10]
		lea	edx, [ebp+var_C]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_98], 2
		call	ds:_ZNK7QString11toLocal8BitEv
		mov	eax, [ebp+var_10]
		sub	esp, 4
		mov	eax, [eax+0Ch]
		mov	dword ptr [esp], offset	aCouldnTFindNod	; "Couldn't find node %s. Skipping renderi"...
		mov	[ebp+var_98], 1
		mov	[esp+4], eax
		call	ds:_Z6qDebugPKcz
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7102B852

loc_7102B814:				; CODE XREF: _ZNK16QSvgTinyDocument16matrixForElementERK7QString+1B8j
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7102B837
		mov	eax, [ebp+var_C]
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7102B837:				; CODE XREF: _ZNK16QSvgTinyDocument16matrixForElementERK7QString+16Fj
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QMatrixC1Ev
		jmp	loc_7102B7A3
; ---------------------------------------------------------------------------

loc_7102B852:				; CODE XREF: _ZNK16QSvgTinyDocument16matrixForElementERK7QString+162j
		mov	eax, [ebp+var_10]
		mov	[ebp+var_98], 2
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	short loc_7102B814
_ZNK16QSvgTinyDocument16matrixForElementERK7QString endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102B86A	proc near		; DATA XREF: _ZNK16QSvgTinyDocument16matrixForElementERK7QString+29o
		add	ebp, 8
		mov	eax, [ebp-94h]
		cmp	dword ptr [ebp-98h], 1
		mov	[ebp-0A8h], eax
		jz	short loc_7102B897
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_7103B6E0

loc_7102B897:				; CODE XREF: sub_7102B86A+16j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0
		mov	edx, [ebp-0A8h]
		mov	dword ptr [ebp-98h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_7102B86A	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  84. _ZN16QSvgTinyDocument4loadERK10QByteArray

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QSvgTinyDocument4loadERK10QByteArray
_ZN16QSvgTinyDocument4loadERK10QByteArray proc near
					; CODE XREF: _ZN16QSvgTinyDocument4loadERK10QByteArray+9Ep
					; _ZN16QSvgTinyDocument4loadERK7QString+1FBp ...

var_A0		= dword	ptr -0A0h
var_9C		= byte ptr -9Ch
var_98		= dword	ptr -98h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_64		= byte ptr -64h
var_34		= dword	ptr -34h
var_14		= byte ptr -14h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0B8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_7C], eax
		lea	eax, [ebp+var_9C]
		mov	[esp], eax
		mov	[ebp+var_84], offset sub_710525B0
		mov	[ebp+var_80], offset word_710538CE
		mov	[ebp+var_78], offset sub_7102BA6A
		mov	[ebp+var_74], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset byte_7105A68F
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp], edx
		call	ds:_ZNK10QByteArray10startsWithEPKc
		test	al, al
		jz	loc_7102B9B6
		mov	eax, [ebp+arg_0]
		lea	edx, [ebp+var_14]
		mov	[esp], edx
		mov	dword ptr [esp+8], 0
		mov	[esp+4], eax
		call	ds:_ZN7QBufferC1EP10QByteArrayP7QObject
		lea	eax, [ebp+var_C]
		lea	edx, [ebp+var_14]
		mov	[ebp+var_98], 3
		call	sub_7102AD70
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_98], 2
		call	_ZN16QSvgTinyDocument4loadERK10QByteArray
		mov	[ebp+var_A0], eax
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7102BA20

loc_7102B98A:				; CODE XREF: _ZN16QSvgTinyDocument4loadERK10QByteArray+166j
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_98], 0FFFFFFFFh
		call	ds:_ZN7QBufferD1Ev

loc_7102B9A0:				; CODE XREF: _ZN16QSvgTinyDocument4loadERK10QByteArray+14Aj
		lea	eax, [ebp+var_9C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_A0]
		leave
		retn
; ---------------------------------------------------------------------------

loc_7102B9B6:				; CODE XREF: _ZN16QSvgTinyDocument4loadERK10QByteArray+58j
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_64]
		mov	[esp], eax
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp+4], edx
		call	sub_71020A60
		lea	edx, [ebp+var_64]
		mov	[esp], edx
		mov	[ebp+var_98], 1
		call	sub_71006C10
		test	eax, eax
		jz	short loc_7102B9FB
		mov	eax, [ebp+var_34]
		mov	[esp], eax
		call	ds:_ZNK16QXmlStreamReader5errorEv
		test	eax, eax
		jz	short loc_7102BA40

loc_7102B9FB:				; CODE XREF: _ZN16QSvgTinyDocument4loadERK10QByteArray+119j
		mov	[ebp+var_A0], 0

loc_7102BA05:				; CODE XREF: _ZN16QSvgTinyDocument4loadERK10QByteArray+198j
		lea	eax, [ebp+var_64]
		mov	[esp], eax
		mov	[ebp+var_98], 0FFFFFFFFh
		call	sub_71014990
		jmp	short loc_7102B9A0
; ---------------------------------------------------------------------------
		align 10h

loc_7102BA20:				; CODE XREF: _ZN16QSvgTinyDocument4loadERK10QByteArray+B4j
		mov	eax, [ebp+var_C]
		mov	[ebp+var_98], 3
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	loc_7102B98A
; ---------------------------------------------------------------------------
		align 10h

loc_7102BA40:				; CODE XREF: _ZN16QSvgTinyDocument4loadERK10QByteArray+129j
		lea	eax, [ebp+var_64]
		mov	[esp], eax
		call	sub_71006C10
		mov	[ebp+var_A0], eax
		lea	eax, [ebp+var_64]
		mov	[esp], eax
		call	sub_71006C90
		mov	edx, [ebp+var_A0]
		mov	[edx+0CCh], eax
		jmp	short loc_7102BA05
_ZN16QSvgTinyDocument4loadERK10QByteArray endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102BA6A	proc near		; DATA XREF: _ZN16QSvgTinyDocument4loadERK10QByteArray+29o
		add	ebp, 8
		mov	eax, [ebp-98h]
		mov	edx, [ebp-94h]
		cmp	eax, 1
		mov	[ebp-0A4h], edx
		jz	short loc_7102BAB6
		cmp	eax, 2
		jz	short loc_7102BACB
		lea	eax, [ebp-64h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_71014990
		mov	eax, [ebp-0A4h]
		mov	dword ptr [ebp-98h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7102BAB6:				; CODE XREF: sub_7102BA6A+18j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_7103B6E0

loc_7102BACB:				; CODE XREF: sub_7102BA6A+1Dj
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	ds:_ZN7QBufferD1Ev
		mov	eax, [ebp-0A4h]
		mov	dword ptr [ebp-98h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7102BA6A	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  85. _ZN16QSvgTinyDocument4loadERK7QString

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QSvgTinyDocument4loadERK7QString
_ZN16QSvgTinyDocument4loadERK7QString proc near
					; CODE XREF: _ZN12QSvgRenderer4loadERK7QString+5Dp

var_DC		= dword	ptr -0DCh
var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_D0		= dword	ptr -0D0h
var_CC		= byte ptr -0CCh
var_C8		= dword	ptr -0C8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_90		= byte ptr -90h
var_60		= dword	ptr -60h
var_40		= byte ptr -40h
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0F8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_AC], eax
		lea	eax, [ebp+var_CC]
		mov	[esp], eax
		mov	[ebp+var_B4], offset sub_710525B0
		mov	[ebp+var_B0], offset dword_710538D8
		mov	[ebp+var_A8], offset sub_7102C00B
		mov	[ebp+var_A4], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_40]
		mov	[esp], eax
		mov	[ebp+var_C8], 0FFFFFFFFh
		mov	[esp+4], edx
		call	ds:_ZN5QFileC1ERK7QString
		lea	eax, [ebp+var_C]
		lea	edx, [ebp+var_40]
		mov	[ebp+var_C], 1
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_C8], 0Bh
		call	ds:_ZN5QFile4openE6QFlagsIN9QIODevice12OpenModeFlagEE
		test	al, al
		jnz	loc_7102BCA2
		lea	eax, [ebp+var_18]
		lea	edx, [ebp+var_40]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK9QIODevice11errorStringEv
		sub	esp, 4
		lea	eax, [ebp+var_1C]
		lea	edx, [ebp+var_18]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_C8], 0Ah
		call	ds:_ZNK7QString11toLocal8BitEv
		mov	eax, [ebp+var_1C]
		sub	esp, 4
		mov	edx, [ebp+arg_0]
		mov	eax, [eax+0Ch]
		mov	[ebp+var_D4], eax
		mov	eax, [edx]
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_14]
		lea	edx, [ebp+var_10]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_C8], 8
		call	ds:_ZNK7QString11toLocal8BitEv
		mov	eax, [ebp+var_D4]
		sub	esp, 4
		mov	[esp+8], eax
		mov	eax, [ebp+var_14]
		mov	eax, [eax+0Ch]
		mov	dword ptr [esp], offset	aCannotOpenFile	; "Cannot open file '%s', because: %s"
		mov	[ebp+var_C8], 7
		mov	[esp+4], eax
		call	ds:_Z8qWarningPKcz
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7102BD32

loc_7102BC39:				; CODE XREF: _ZN16QSvgTinyDocument4loadERK7QString+248j
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7102BD50

loc_7102BC4A:				; CODE XREF: _ZN16QSvgTinyDocument4loadERK7QString+266j
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7102BD70

loc_7102BC5B:				; CODE XREF: _ZN16QSvgTinyDocument4loadERK7QString+286j
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		mov	[ebp+var_D0], 0
		jz	loc_7102BD90

loc_7102BC76:				; CODE XREF: _ZN16QSvgTinyDocument4loadERK7QString+211j
					; _ZN16QSvgTinyDocument4loadERK7QString+22Dj ...
		lea	eax, [ebp+var_40]
		mov	[esp], eax
		mov	[ebp+var_C8], 0FFFFFFFFh
		call	ds:_ZN5QFileD1Ev
		lea	eax, [ebp+var_CC]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_D0]
		leave
		retn
; ---------------------------------------------------------------------------

loc_7102BCA2:				; CODE XREF: _ZN16QSvgTinyDocument4loadERK7QString+87j
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_20]
		mov	[ebp+var_20], offset a_svgz ; ".svgz"
		mov	dword ptr [esp+8], 0
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_C8], 0Bh
		call	ds:_ZNK7QString8endsWithERK13QLatin1StringN2Qt15CaseSensitivityE
		test	al, al
		jz	loc_7102BDB5

loc_7102BCD6:				; CODE XREF: _ZN16QSvgTinyDocument4loadERK7QString+2D9j
		lea	eax, [ebp+var_28]
		lea	edx, [ebp+var_40]
		mov	[ebp+var_C8], 0Bh
		call	sub_7102AD70
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_C8], 6
		call	_ZN16QSvgTinyDocument4loadERK10QByteArray
		mov	[ebp+var_D0], eax
		mov	eax, [ebp+var_28]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7102BC76
		mov	eax, [ebp+var_28]
		mov	[ebp+var_C8], 0Bh
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	loc_7102BC76
; ---------------------------------------------------------------------------

loc_7102BD32:				; CODE XREF: _ZN16QSvgTinyDocument4loadERK7QString+133j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_C8], 8
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	loc_7102BC39
; ---------------------------------------------------------------------------
		align 10h

loc_7102BD50:				; CODE XREF: _ZN16QSvgTinyDocument4loadERK7QString+144j
		mov	eax, [ebp+var_10]
		mov	[ebp+var_C8], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7102BC4A
; ---------------------------------------------------------------------------
		align 10h

loc_7102BD70:				; CODE XREF: _ZN16QSvgTinyDocument4loadERK7QString+155j
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_C8], 0Ah
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	loc_7102BC5B
; ---------------------------------------------------------------------------
		align 10h

loc_7102BD90:				; CODE XREF: _ZN16QSvgTinyDocument4loadERK7QString+170j
		mov	eax, [ebp+var_18]
		mov	[ebp+var_C8], 0Bh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_D0], 0
		jmp	loc_7102BC76
; ---------------------------------------------------------------------------

loc_7102BDB5:				; CODE XREF: _ZN16QSvgTinyDocument4loadERK7QString+1D0j
		lea	eax, [ebp+var_24]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_24], offset a_svg_gz ;	".svg.gz"
		mov	dword ptr [esp+8], 0
		mov	[esp], eax
		call	ds:_ZNK7QString8endsWithERK13QLatin1StringN2Qt15CaseSensitivityE
		test	al, al
		jnz	loc_7102BCD6
		lea	eax, [ebp+var_40]
		mov	[esp+4], eax
		lea	eax, [ebp+var_90]
		mov	[esp], eax
		mov	[ebp+var_C8], 0Bh
		call	sub_71020E80
		lea	eax, [ebp+var_90]
		mov	[esp], eax
		mov	[ebp+var_C8], 5
		call	sub_71006C10
		test	eax, eax
		jz	short loc_7102BE2E
		mov	eax, [ebp+var_60]
		mov	[esp], eax
		call	ds:_ZNK16QXmlStreamReader5errorEv
		test	eax, eax
		jz	loc_7102BF60

loc_7102BE2E:				; CODE XREF: _ZN16QSvgTinyDocument4loadERK7QString+318j
		mov	eax, [ebp+var_60]
		mov	[ebp+var_C8], 5
		mov	[esp], eax
		call	ds:_ZNK16QXmlStreamReader10lineNumberEv
		mov	edx, [ebp+var_60]
		mov	[ebp+var_D8], eax
		lea	eax, [ebp+var_34]
		mov	[esp], eax
		mov	[ebp+var_C8], 5
		mov	[esp+4], edx
		call	ds:_ZNK16QXmlStreamReader11errorStringEv
		sub	esp, 4
		lea	eax, [ebp+var_38]
		lea	edx, [ebp+var_34]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_C8], 4
		call	ds:_ZNK7QString11toLocal8BitEv
		mov	eax, [ebp+var_38]
		sub	esp, 4
		mov	edx, [ebp+arg_0]
		mov	eax, [eax+0Ch]
		mov	[ebp+var_DC], eax
		mov	eax, [edx]
		mov	[ebp+var_2C], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_30]
		lea	edx, [ebp+var_2C]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_C8], 2
		call	ds:_ZNK7QString11toLocal8BitEv
		mov	eax, [ebp+var_D8]
		sub	esp, 4
		mov	edx, [ebp+var_DC]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+var_30]
		mov	[esp+8], edx
		mov	eax, [eax+0Ch]
		mov	dword ptr [esp], offset	aCannotReadFile	; "Cannot read file '%s', because: %s (lin"...
		mov	[ebp+var_C8], 1
		mov	[esp+4], eax
		call	ds:_Z8qWarningPKcz
		mov	eax, [ebp+var_30]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7102BF90

loc_7102BF0A:				; CODE XREF: _ZN16QSvgTinyDocument4loadERK7QString+4A6j
		mov	eax, [ebp+var_2C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7102BFF0

loc_7102BF1B:				; CODE XREF: _ZN16QSvgTinyDocument4loadERK7QString+506j
		mov	eax, [ebp+var_38]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7102BFD5

loc_7102BF2C:				; CODE XREF: _ZN16QSvgTinyDocument4loadERK7QString+4EBj
		mov	eax, [ebp+var_34]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		mov	[ebp+var_D0], 0
		jz	short loc_7102BFB0

loc_7102BF43:				; CODE XREF: _ZN16QSvgTinyDocument4loadERK7QString+48Ej
					; _ZN16QSvgTinyDocument4loadERK7QString+4D0j
		lea	eax, [ebp+var_90]
		mov	[esp], eax
		mov	[ebp+var_C8], 0Bh
		call	sub_71014990
		jmp	loc_7102BC76
; ---------------------------------------------------------------------------

loc_7102BF60:				; CODE XREF: _ZN16QSvgTinyDocument4loadERK7QString+328j
		lea	eax, [ebp+var_90]
		mov	[esp], eax
		call	sub_71006C10
		mov	[ebp+var_D0], eax
		lea	eax, [ebp+var_90]
		mov	[esp], eax
		call	sub_71006C90
		mov	edx, [ebp+var_D0]
		mov	[edx+0CCh], eax
		jmp	short loc_7102BF43
; ---------------------------------------------------------------------------

loc_7102BF90:				; CODE XREF: _ZN16QSvgTinyDocument4loadERK7QString+404j
		mov	eax, [ebp+var_30]
		mov	[ebp+var_C8], 2
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	loc_7102BF0A
; ---------------------------------------------------------------------------
		align 10h

loc_7102BFB0:				; CODE XREF: _ZN16QSvgTinyDocument4loadERK7QString+441j
		mov	eax, [ebp+var_34]
		mov	[ebp+var_C8], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_D0], 0
		jmp	loc_7102BF43
; ---------------------------------------------------------------------------

loc_7102BFD5:				; CODE XREF: _ZN16QSvgTinyDocument4loadERK7QString+426j
		mov	eax, [ebp+var_38]
		mov	[ebp+var_C8], 4
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	loc_7102BF2C
; ---------------------------------------------------------------------------

loc_7102BFF0:				; CODE XREF: _ZN16QSvgTinyDocument4loadERK7QString+415j
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_C8], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7102BF1B
_ZN16QSvgTinyDocument4loadERK7QString endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102C00B	proc near		; DATA XREF: _ZN16QSvgTinyDocument4loadERK7QString+2Fo
		add	ebp, 8
		mov	eax, [ebp-0C8h]
		mov	edx, [ebp-0C4h]
		cmp	eax, 1
		mov	[ebp-0E0h], edx
		jz	short loc_7102C089
		cmp	eax, 2
		jz	short loc_7102C09E
		cmp	eax, 3
		jz	loc_7102C0B3
		cmp	eax, 4
		jz	loc_7102C0C8
		cmp	eax, 5
		nop
		jz	loc_7102C10E
		cmp	eax, 6
		jz	loc_7102C125
		cmp	eax, 7
		jz	loc_7102C13A
		cmp	eax, 8
		nop
		lea	esi, [esi+0]
		jz	loc_7102C14F
		cmp	eax, 9
		jz	loc_7102C164
		cmp	eax, 0Ah
		jz	short loc_7102C0E0
		lea	eax, [ebp-30h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0C8h], 0
		call	sub_7103B6E0

loc_7102C089:				; CODE XREF: sub_7102C00B+18j
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0C8h], 0
		call	sub_710477B0

loc_7102C09E:				; CODE XREF: sub_7102C00B+1Dj
		lea	eax, [ebp-38h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0C8h], 0
		call	sub_7103B6E0

loc_7102C0B3:				; CODE XREF: sub_7102C00B+22j
		lea	eax, [ebp-34h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0C8h], 0
		call	sub_710477B0

loc_7102C0C8:				; CODE XREF: sub_7102C00B+2Bj
		lea	eax, [ebp-90h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0C8h], 0
		call	sub_71014990

loc_7102C0E0:				; CODE XREF: sub_7102C00B+67j
					; sub_7102C00B+118j ...
		lea	eax, [ebp-40h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0C8h], 0
		call	ds:_ZN5QFileD1Ev
		mov	eax, [ebp-0E0h]
		mov	dword ptr [ebp-0C8h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7102C10E:				; CODE XREF: sub_7102C00B+35j
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0C8h], 0
		call	sub_7103B6E0
		jmp	short loc_7102C0E0
; ---------------------------------------------------------------------------

loc_7102C125:				; CODE XREF: sub_7102C00B+3Ej
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0C8h], 0
		call	sub_7103B6E0

loc_7102C13A:				; CODE XREF: sub_7102C00B+47j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0C8h], 0
		call	sub_710477B0

loc_7102C14F:				; CODE XREF: sub_7102C00B+55j
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0C8h], 0
		call	sub_7103B6E0

loc_7102C164:				; CODE XREF: sub_7102C00B+5Ej
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0C8h], 0
		call	sub_710477B0
		jmp	loc_7102C0E0
sub_7102C00B	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  77. _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_
_ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_	proc near
					; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+DFp
					; _ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF+92p

var_150		= dword	ptr -150h
var_14C		= qword	ptr -14Ch
var_144		= dword	ptr -144h
var_140		= qword	ptr -140h
var_124		= qword	ptr -124h
var_11C		= qword	ptr -11Ch
var_10C		= qword	ptr -10Ch
var_FC		= qword	ptr -0FCh
var_F0		= byte ptr -0F0h
var_EC		= qword	ptr -0ECh
var_E4		= word ptr -0E4h
var_E2		= word ptr -0E2h
var_E0		= dword	ptr -0E0h
var_DC		= dword	ptr -0DCh
var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_D0		= dword	ptr -0D0h
var_CC		= dword	ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= byte ptr -0BCh
var_6C		= byte ptr -6Ch
var_68		= qword	ptr -68h
var_4C		= qword	ptr -4Ch
var_44		= qword	ptr -44h
var_3C		= qword	ptr -3Ch
var_34		= qword	ptr -34h
var_28		= qword	ptr -28h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 13Ch
		mov	eax, [esp+14Ch+arg_8]
		mov	esi, [esp+14Ch+arg_0]
		mov	edi, [esp+14Ch+arg_4]
		mov	ebx, [esp+14Ch+arg_C]
		fld	qword ptr [eax+8]
		fld	qword ptr [eax]
		fld	qword ptr [eax+18h]
		fstp	[esp+14Ch+var_EC]
		fld	qword ptr [eax+10h]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		sahf
		jp	short loc_7102C1DA
		jnz	short loc_7102C1E2
		fld	[esp+14Ch+var_EC]
		fucomp	st(2)
		fnstsw	ax
		sahf
		jp	short loc_7102C1E6
		lea	esi, [esi+0]
		jz	loc_7102C3F0
		fxch	st(2)
		jmp	short loc_7102C1E8
; ---------------------------------------------------------------------------

loc_7102C1DA:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+3Ej
		fxch	st(2)
		lea	esi, [esi+0]
		jmp	short loc_7102C1E8
; ---------------------------------------------------------------------------

loc_7102C1E2:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+40j
		fxch	st(2)
		jmp	short loc_7102C1E8
; ---------------------------------------------------------------------------

loc_7102C1E6:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+4Bj
		fxch	st(2)

loc_7102C1E8:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+58j
					; _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+60j ...
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		setnb	dl

loc_7102C1F2:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+355j
					; _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+60Dj
		mov	eax, [ebx]
		mov	dword ptr [esp+14Ch+var_4C], eax
		mov	eax, [ebx+4]
		mov	dword ptr [esp+14Ch+var_4C+4], eax
		mov	eax, [ebx+8]
		mov	dword ptr [esp+14Ch+var_44], eax
		mov	eax, [ebx+0Ch]
		mov	dword ptr [esp+14Ch+var_44+4], eax
		mov	eax, [ebx+10h]
		mov	dword ptr [esp+14Ch+var_3C], eax
		mov	eax, [ebx+14h]
		mov	dword ptr [esp+14Ch+var_3C+4], eax
		mov	eax, [ebx+18h]
		fld	[esp+14Ch+var_3C]
		fldz
		fxch	st(1)
		mov	dword ptr [esp+14Ch+var_34], eax
		mov	eax, [ebx+1Ch]
		mov	dword ptr [esp+14Ch+var_34+4], eax
		fucom	st(1)
		fnstsw	ax
		sahf
		jp	short loc_7102C26D
		jnz	short loc_7102C272
		fld	[esp+14Ch+var_34]
		fucomp	st(2)
		fnstsw	ax
		sahf
		jp	short loc_7102C276
		jz	loc_7102C4E0
		fstp	st(1)
		jmp	short loc_7102C278
; ---------------------------------------------------------------------------

loc_7102C26D:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+D1j
		fstp	st(1)
		nop
		jmp	short loc_7102C278
; ---------------------------------------------------------------------------

loc_7102C272:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+D3j
		fstp	st(1)
		jmp	short loc_7102C278
; ---------------------------------------------------------------------------

loc_7102C276:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+E1j
		fstp	st(1)

loc_7102C278:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+EBj
					; _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+F0j ...
		fld	[esp+14Ch+var_4C]

loc_7102C27F:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+474j
		fld	st
		fsub	st, st(3)
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_7102C292
		fchs

loc_7102C292:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+10Ej
		test	dl, dl
		fld	st(3)
		jnz	short loc_7102C29A
		fchs

loc_7102C29A:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+116j
		fldz
		fxch	st(3)
		fucom	st(3)
		fnstsw	ax
		fstp	st(3)
		sahf
		jnb	short loc_7102C2AD
		fxch	st(2)
		fchs
		fxch	st(2)

loc_7102C2AD:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+125j
		fucom	st(2)
		fnstsw	ax
		sahf
		ja	short loc_7102C2C0
		fstp	st(2)
		fxch	st(1)
		jmp	short loc_7102C2C4
; ---------------------------------------------------------------------------
		align 10h

loc_7102C2C0:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+132j
		fstp	st
		fxch	st(1)

loc_7102C2C4:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+138j
		fmul	ds:dbl_7105A708
		fucompp
		fnstsw	ax
		sahf
		jnb	loc_7102C600

loc_7102C2D5:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+4DFj
					; _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+53Dj	...
		fldz
		fxch	st(1)
		fucomp	st(1)
		fnstsw	ax
		sahf
		jnz	short loc_7102C2F8
		jp	short loc_7102C302
		fld	[esp+14Ch+var_34]
		fucompp
		fnstsw	ax
		sahf
		jp	short loc_7102C304
		jz	loc_7102C3D0
		jmp	short loc_7102C304
; ---------------------------------------------------------------------------

loc_7102C2F8:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+15Ej
		fstp	st
		lea	esi, [esi+0]
		jmp	short loc_7102C304
; ---------------------------------------------------------------------------

loc_7102C302:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+160j
		fstp	st

loc_7102C304:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+16Ej
					; _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+176j	...
		fstp	[esp+14Ch+var_10C]
		lea	ebx, [esp+14Ch+var_BC]
		fstp	[esp+14Ch+var_11C]
		fstp	[esp+14Ch+var_FC]
		mov	dword ptr [esp+14Ch+var_14C], ebx
		call	ds:_ZN10QTransformC1Ev
		mov	dword ptr [esp+14Ch+var_14C], ebx
		fld	[esp+14Ch+var_EC]
		fdiv	[esp+14Ch+var_34]
		fstp	[esp+14Ch+var_140]
		fld	[esp+14Ch+var_11C]
		fld	[esp+14Ch+var_3C]
		fdivp	st(1), st
		fstp	[esp+14Ch+var_14C+4]
		call	ds:_ZN10QTransform5scaleEdd
		lea	eax, [esp+14Ch+var_6C]
		lea	edx, [esp+14Ch+var_4C]
		mov	[esp+14Ch+var_144], edx
		mov	dword ptr [esp+14Ch+var_14C], eax
		mov	dword ptr [esp+14Ch+var_14C+4],	ebx
		call	ds:_ZNK10QTransform7mapRectERK6QRectF
		sub	esp, 4
		fld	qword ptr [esp+50h]
		lea	eax, [esp+150h+var_34+4]
		fsub	[esp+150h+var_68]
		mov	dword ptr [esp+150h+var_14C], eax
		mov	[esp+150h+var_150], edi
		fld	qword ptr [esp+40h]
		fsub	qword ptr [esp+0E0h]
		fstp	[esp+150h+var_34+4]
		fstp	[esp+150h+var_28]
		call	ds:_ZN8QPainter9translateERK7QPointF
		mov	dword ptr [esp+14Ch+var_14C], edi
		fld	[esp+14Ch+var_EC]
		fdiv	[esp+14Ch+var_34]
		fstp	[esp+14Ch+var_140]
		fld	[esp+14Ch+var_11C]
		fdiv	[esp+14Ch+var_3C]
		fstp	[esp+14Ch+var_14C+4]
		call	ds:_ZN8QPainter5scaleEdd
		jmp	loc_7102C3E0
; ---------------------------------------------------------------------------
		align 10h

loc_7102C3D0:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+170j
		fstp	st
		fstp	st
		fstp	st
		jmp	short loc_7102C3E0
; ---------------------------------------------------------------------------

loc_7102C3D8:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+5B1j
		fstp	st
		fstp	st
		fstp	st
		fstp	st

loc_7102C3E0:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+24Aj
					; _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+256j
		add	esp, 13Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7102C3F0:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+50j
		fstp	st
		fstp	st(1)
		fstp	st(1)
		fstp	[esp+14Ch+var_FC]
		mov	dword ptr [esp+14Ch+var_14C], edi
		call	ds:_ZNK8QPainter6deviceEv
		mov	ebp, eax
		mov	eax, [eax]
		mov	dword ptr [esp+14Ch+var_14C+4],	2
		mov	dword ptr [esp+14Ch+var_14C], ebp
		call	dword ptr [eax+18h]
		mov	[esp+14Ch+var_E0], eax
		mov	eax, [ebp+0]
		fild	[esp+14Ch+var_E0]
		fstp	[esp+14Ch+var_EC]
		mov	dword ptr [esp+14Ch+var_14C+4],	1
		mov	dword ptr [esp+14Ch+var_14C], ebp
		call	dword ptr [eax+18h]
		mov	[esp+14Ch+var_E0], eax
		fild	[esp+14Ch+var_E0]
		fld	[esp+14Ch+var_FC]
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		sahf
		jnz	loc_7102C770
		jp	loc_7102C774
		fld	[esp+14Ch+var_EC]
		fucomp	st(2)
		fnstsw	ax
		sahf
		jnz	loc_7102C778
		jp	loc_7102C77C
		fstp	st
		fld	qword ptr [ebx+10h]
		fucom	st(1)
		fnstsw	ax
		sahf
		jnz	loc_7102C760
		jp	loc_7102C764
		fld	qword ptr [ebx+18h]
		fst	[esp+14Ch+var_EC]
		fucomp	st(2)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnz	loc_7102C780
		jp	loc_7102C780
		fstp	st
		mov	eax, [esi+8Ch]
		test	eax, eax
		jle	loc_7102C7C0
		mov	edx, [esi+90h]
		test	edx, edx
		jle	loc_7102C7C0

loc_7102C4B4:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+6C6j
					; _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+79Dj
		mov	[esp+14Ch+var_E0], eax
		fild	[esp+14Ch+var_E0]
		mov	[esp+14Ch+var_E0], edx
		mov	edx, 1
		fild	[esp+14Ch+var_E0]
		fstp	[esp+14Ch+var_EC]
		fldz
		fld	st
		fxch	st(2)
		fxch	st(1)
		jmp	loc_7102C1F2
; ---------------------------------------------------------------------------
		align 10h

loc_7102C4E0:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+E3j
		fstp	st
		fld	qword ptr [esi+0A8h]
		fucom	st(1)
		fnstsw	ax
		sahf
		jp	loc_7102C792
		jnz	loc_7102C796
		fld	qword ptr [esi+0B0h]
		fucom	st(2)
		fnstsw	ax
		fstp	st(2)
		sahf
		jnz	loc_7102C5C0
		jp	loc_7102C5C4
		fstp	st
		fstp	st
		fstp	[esp+14Ch+var_10C]
		lea	eax, [esp+14Ch+var_DC]
		fstp	[esp+14Ch+var_11C]
		fstp	[esp+14Ch+var_FC]
		mov	dword ptr [esp+14Ch+var_14C], eax
		mov	[esp+14Ch+var_F0], dl
		mov	dword ptr [esp+14Ch+var_14C+4],	esi
		call	sub_71022860
		sub	esp, 4
		mov	eax, [esp+14Ch+var_DC]
		movzx	edx, [esp+14Ch+var_F0]
		mov	[esi+98h], eax
		mov	eax, [esp+14Ch+var_D8]
		mov	[esi+9Ch], eax
		mov	eax, [esp+14Ch+var_D4]
		mov	[esi+0A0h], eax
		mov	eax, [esp+14Ch+var_D0]
		mov	[esi+0A4h], eax
		mov	eax, [esp+14Ch+var_CC]
		mov	[esi+0A8h], eax
		mov	eax, [esp+14Ch+var_C8]
		mov	[esi+0ACh], eax
		mov	eax, [esp+14Ch+var_C4]
		fld	qword ptr [esi+0A8h]
		mov	[esi+0B0h], eax
		mov	eax, [esp+14Ch+var_C0]
		mov	[esi+0B4h], eax
		fld	qword ptr [esi+0B0h]
		fld	[esp+14Ch+var_FC]
		fld	[esp+14Ch+var_11C]
		fld	[esp+14Ch+var_10C]
		fxch	st(2)
		fxch	st(4)
		fxch	st(1)
		fxch	st(3)
		jmp	short loc_7102C5C6
; ---------------------------------------------------------------------------
		align 10h

loc_7102C5C0:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+386j
		fxch	st(1)
		jmp	short loc_7102C5C6
; ---------------------------------------------------------------------------

loc_7102C5C4:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+38Cj
		fxch	st(1)

loc_7102C5C6:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+43Aj
					; _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+442j	...
		fld	qword ptr [esi+0A0h]
		fld	qword ptr [esi+98h]
		fxch	st(2)
		fstp	[esp+14Ch+var_34]
		fxch	st(2)
		fst	[esp+14Ch+var_3C]
		fxch	st(2)
		fstp	[esp+14Ch+var_44]
		fst	[esp+14Ch+var_4C]
		jmp	loc_7102C27F
; ---------------------------------------------------------------------------
		align 10h

loc_7102C600:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+14Fj
		fld	[esp+14Ch+var_44]
		fld	st
		fsub	st, st(5)
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jb	loc_7102C757

loc_7102C61C:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+5D9j
		fld	st(5)
		fldz
		fxch	st(7)
		fucom	st(7)
		fnstsw	ax
		fstp	st(7)
		sahf
		jb	loc_7102C750

loc_7102C62F:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+5D2j
		fldz
		fxch	st(3)
		fucom	st(3)
		fnstsw	ax
		fstp	st(3)
		sahf
		jb	loc_7102C740

loc_7102C640:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+5C6j
		fucom	st(2)
		fnstsw	ax
		sahf
		ja	short loc_7102C650
		fstp	st(2)
		fxch	st(1)
		jmp	short loc_7102C654
; ---------------------------------------------------------------------------
		align 10h

loc_7102C650:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+4C5j
		fstp	st
		fxch	st(1)

loc_7102C654:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+4CBj
		fmul	ds:dbl_7105A708
		fucompp
		fnstsw	ax
		sahf
		jb	loc_7102C2D5
		fld	st
		fsub	st, st(3)
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jb	loc_7102C7B7

loc_7102C67A:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+639j
		fld	st(3)
		fldz
		fxch	st(5)
		fucom	st(5)
		fnstsw	ax
		fstp	st(5)
		sahf
		jb	loc_7102C7B0

loc_7102C68D:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+632j
		fld	st(2)
		fldz
		fxch	st(4)
		fucom	st(4)
		fnstsw	ax
		fstp	st(4)
		sahf
		jb	loc_7102C7A3
		fxch	st(1)

loc_7102C6A2:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+627j
		fucom	st(1)
		fnstsw	ax
		sahf
		ja	short loc_7102C6B0
		fstp	st(1)
		jmp	short loc_7102C6B2
; ---------------------------------------------------------------------------
		align 10h

loc_7102C6B0:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+527j
		fstp	st

loc_7102C6B2:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+52Bj
		fmul	ds:dbl_7105A708
		fucompp
		fnstsw	ax
		sahf
		jb	loc_7102C2D5
		fld	[esp+14Ch+var_34]
		fld	[esp+14Ch+var_EC]
		fsubr	st, st(1)
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_7102C6DF
		fchs

loc_7102C6DF:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+55Bj
		fld	[esp+14Ch+var_EC]
		fst	[esp+14Ch+var_124]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_7102C6FC
		fchs
		fstp	[esp+14Ch+var_124]
		jmp	short loc_7102C6FE
; ---------------------------------------------------------------------------

loc_7102C6FC:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+572j
		fstp	st

loc_7102C6FE:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+57Aj
		fldz
		fxch	st(2)
		fucom	st(2)
		fnstsw	ax
		fstp	st(2)
		sahf
		jnb	short loc_7102C711
		fxch	st(1)
		fchs
		fxch	st(1)

loc_7102C711:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+589j
		fld	[esp+14Ch+var_124]
		fucom	st(2)
		fnstsw	ax
		sahf
		ja	short loc_7102C722
		fstp	st(2)
		fxch	st(1)
		jmp	short loc_7102C726
; ---------------------------------------------------------------------------

loc_7102C722:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+59Aj
		fstp	st
		fxch	st(1)

loc_7102C726:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+5A0j
		fmul	ds:dbl_7105A708
		fucompp
		fnstsw	ax
		sahf
		jnb	loc_7102C3D8
		jmp	loc_7102C2D5
; ---------------------------------------------------------------------------
		align 10h

loc_7102C740:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+4BAj
		fxch	st(2)
		fchs
		fxch	st(2)
		jmp	loc_7102C640
; ---------------------------------------------------------------------------
		align 10h

loc_7102C750:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+4A9j
		fchs
		jmp	loc_7102C62F
; ---------------------------------------------------------------------------

loc_7102C757:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+496j
		fchs
		jmp	loc_7102C61C
; ---------------------------------------------------------------------------
		align 10h

loc_7102C760:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+2F0j
		fstp	st(1)
		jmp	short loc_7102C766
; ---------------------------------------------------------------------------

loc_7102C764:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+2F6j
		fstp	st(1)

loc_7102C766:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+5E2j
		fld	qword ptr [ebx+18h]
		fstp	[esp+14Ch+var_EC]
		jmp	short loc_7102C780
; ---------------------------------------------------------------------------
		align 10h

loc_7102C770:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+2C5j
		fstp	st(1)
		jmp	short loc_7102C780
; ---------------------------------------------------------------------------

loc_7102C774:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+2CBj
		fstp	st(1)
		jmp	short loc_7102C780
; ---------------------------------------------------------------------------

loc_7102C778:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+2DAj
		fstp	st(1)
		jmp	short loc_7102C780
; ---------------------------------------------------------------------------

loc_7102C77C:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+2E0j
		fstp	st(1)
		xchg	ax, ax

loc_7102C780:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+30Aj
					; _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+310j	...
		fldz
		mov	edx, 1
		fld	st
		fxch	st(2)
		fxch	st(1)
		jmp	loc_7102C1F2
; ---------------------------------------------------------------------------

loc_7102C792:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+36Dj
		fstp	st(1)
		jmp	short loc_7102C798
; ---------------------------------------------------------------------------

loc_7102C796:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+373j
		fstp	st(1)

loc_7102C798:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+614j
		fld	qword ptr [esi+0B0h]
		jmp	loc_7102C5C6
; ---------------------------------------------------------------------------

loc_7102C7A3:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+51Aj
		fchs
		fxch	st(1)
		jmp	loc_7102C6A2
; ---------------------------------------------------------------------------
		align 10h

loc_7102C7B0:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+507j
		fchs
		jmp	loc_7102C68D
; ---------------------------------------------------------------------------

loc_7102C7B7:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+4F4j
		fchs
		jmp	loc_7102C67A
; ---------------------------------------------------------------------------
		align 10h

loc_7102C7C0:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+320j
					; _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+32Ej
		fld	qword ptr [esi+0A8h]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		sahf
		jp	short loc_7102C7D7
		jz	short loc_7102C84B
		fstp	st(1)
		jmp	short loc_7102C7D9
; ---------------------------------------------------------------------------

loc_7102C7D7:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+64Fj
		fstp	st(1)

loc_7102C7D9:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+655j
		fld	qword ptr [esi+0B0h]
		nop
		jmp	short loc_7102C7E8
; ---------------------------------------------------------------------------

loc_7102C7E2:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+6D8j
		fxch	st(1)
		jmp	short loc_7102C7E8
; ---------------------------------------------------------------------------

loc_7102C7E6:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+6DAj
		fxch	st(1)

loc_7102C7E8:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+660j
					; _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+664j	...
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jb	loc_7102C922
		fnstcw	[esp+14Ch+var_E2]
		fadd	ds:flt_7105A700
		movzx	eax, [esp+14Ch+var_E2]
		mov	ah, 0Ch
		mov	[esp+14Ch+var_E4], ax
		fldcw	[esp+14Ch+var_E4]
		fistp	[esp+14Ch+var_E0]
		fldcw	[esp+14Ch+var_E2]
		mov	edx, [esp+14Ch+var_E0]

loc_7102C81F:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+7ECj
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jb	loc_7102C8E2
		fadd	ds:flt_7105A700
		fldcw	[esp+14Ch+var_E4]
		fistp	[esp+14Ch+var_E0]
		fldcw	[esp+14Ch+var_E2]
		mov	eax, [esp+14Ch+var_E0]
		jmp	loc_7102C4B4
; ---------------------------------------------------------------------------

loc_7102C84B:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+651j
		fld	qword ptr [esi+0B0h]
		fucom	st(2)
		fnstsw	ax
		fstp	st(2)
		sahf
		jnz	short loc_7102C7E2
		jp	short loc_7102C7E6
		fstp	st
		fstp	st
		lea	eax, [esp+14Ch+var_DC]
		mov	dword ptr [esp+14Ch+var_14C], eax
		mov	dword ptr [esp+14Ch+var_14C+4],	esi
		call	sub_71022860
		sub	esp, 4
		mov	eax, [esp+14Ch+var_DC]
		mov	[esi+98h], eax
		mov	eax, [esp+14Ch+var_D8]
		mov	[esi+9Ch], eax
		mov	eax, [esp+14Ch+var_D4]
		mov	[esi+0A0h], eax
		mov	eax, [esp+14Ch+var_D0]
		mov	[esi+0A4h], eax
		mov	eax, [esp+14Ch+var_CC]
		mov	[esi+0A8h], eax
		mov	eax, [esp+14Ch+var_C8]
		mov	[esi+0ACh], eax
		mov	eax, [esp+14Ch+var_C4]
		mov	[esi+0B0h], eax
		mov	eax, [esp+14Ch+var_C0]
		mov	[esi+0B4h], eax
		fld	qword ptr [esi+0B0h]
		fld	qword ptr [esi+0A8h]
		fxch	st(1)
		jmp	loc_7102C7E8
; ---------------------------------------------------------------------------

loc_7102C8E2:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+6AAj
		fld	st
		fsub	ds:flt_7105A6F8
		fldcw	[esp+14Ch+var_E4]
		fistp	[esp+14Ch+var_E0]
		fldcw	[esp+14Ch+var_E2]
		mov	eax, [esp+14Ch+var_E0]
		mov	[esp+14Ch+var_E0], eax
		fild	[esp+14Ch+var_E0]
		fsubp	st(1), st
		fadd	ds:flt_7105A700
		fldcw	[esp+14Ch+var_E4]
		fistp	[esp+14Ch+var_E0]
		fldcw	[esp+14Ch+var_E2]
		mov	ecx, [esp+14Ch+var_E0]
		lea	eax, [ecx+eax]
		jmp	loc_7102C4B4
; ---------------------------------------------------------------------------

loc_7102C922:				; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+673j
		fnstcw	[esp+14Ch+var_E2]
		fld	st
		fsub	ds:flt_7105A6F8
		movzx	eax, [esp+14Ch+var_E2]
		mov	ah, 0Ch
		mov	[esp+14Ch+var_E4], ax
		fldcw	[esp+14Ch+var_E4]
		fistp	[esp+14Ch+var_E0]
		fldcw	[esp+14Ch+var_E2]
		mov	eax, [esp+14Ch+var_E0]
		mov	[esp+14Ch+var_E0], eax
		fild	[esp+14Ch+var_E0]
		fsubp	st(1), st
		fadd	ds:flt_7105A700
		fldcw	[esp+14Ch+var_E4]
		fistp	[esp+14Ch+var_E0]
		fldcw	[esp+14Ch+var_E2]
		mov	edx, [esp+14Ch+var_E0]
		add	edx, eax
		jmp	loc_7102C81F
_ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  82. _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF
_ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF proc near
					; CODE XREF: _ZN12QSvgRenderer6renderEP8QPainterRK7QStringRK6QRectF+1Aj

var_13C		= dword	ptr -13Ch
var_138		= dword	ptr -138h
var_134		= dword	ptr -134h
var_130		= dword	ptr -130h
var_12C		= dword	ptr -12Ch
var_128		= dword	ptr -128h
var_124		= dword	ptr -124h
var_120		= dword	ptr -120h
var_11C		= byte ptr -11Ch
var_118		= dword	ptr -118h
var_104		= dword	ptr -104h
var_100		= dword	ptr -100h
var_FC		= dword	ptr -0FCh
var_F8		= dword	ptr -0F8h
var_F4		= dword	ptr -0F4h
var_E0		= byte ptr -0E0h
var_B0		= qword	ptr -0B0h
var_A8		= qword	ptr -0A8h
var_A0		= qword	ptr -0A0h
var_98		= word ptr -98h
var_94		= dword	ptr -94h
var_90		= byte ptr -90h
var_60		= qword	ptr -60h
var_58		= qword	ptr -58h
var_50		= qword	ptr -50h
var_48		= word ptr -48h
var_44		= dword	ptr -44h
var_40		= byte ptr -40h
var_20		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_18		= byte ptr -18h
var_14		= byte ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 164h
		mov	[ebp+var_FC], eax
		lea	eax, [ebp+var_11C]
		mov	[esp], eax
		mov	[ebp+var_104], offset sub_710525B0
		mov	[ebp+var_100], offset word_710538F2
		mov	[ebp+var_F8], offset sub_7102CFB9
		mov	[ebp+var_F4], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_8]
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_118], 0FFFFFFFFh
		mov	[esp+4], edx
		mov	[esp], ecx
		call	sub_710241E0
		test	eax, eax
		mov	[ebp+var_134], eax
		jz	loc_7102CCAD
		mov	edx, [ebp+arg_0]
		cmp	dword ptr [edx+0C4h], 0FFFFFFFFh
		jz	loc_7102CF9A

loc_7102C9FF:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+634j
		mov	ecx, [ebp+var_134]
		mov	[ebp+var_118], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_710225E0
		cmp	eax, 10h
		jz	loc_7102CD26
		mov	ebx, [ebp+arg_4]
		mov	[esp], ebx
		call	ds:_ZN8QPainter4saveEv
		mov	eax, [ebp+var_134]
		lea	edx, [ebp+var_40]
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_71022860
		mov	eax, [ebp+arg_C]
		lea	ecx, [ebp+var_40]
		sub	esp, 4
		mov	[esp+4], ebx
		mov	ebx, [ebp+arg_0]
		mov	[esp+0Ch], ecx
		mov	[esp+8], eax
		mov	[esp], ebx
		lea	ebx, [ebp+var_18]
		call	_ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		call	ds:_ZNK8QPainter14worldTransformEv
		mov	[ebp+var_13C], eax
		mov	[esp+4], eax
		lea	eax, [ebp+var_90]
		mov	[esp], eax
		call	ds:_ZN7QMatrixC1ERKS_
		mov	edx, [ebp+var_13C]
		movzx	eax, byte ptr [ebp+var_48]
		mov	ecx, edx
		and	eax, 0FFFFFFE0h
		fld	qword ptr [edx+30h]
		fstp	[ebp+var_60]
		fld	qword ptr [edx+38h]
		fstp	[ebp+var_58]
		fld	qword ptr [edx+40h]
		fstp	[ebp+var_50]
		movzx	edx, byte ptr [edx+48h]
		and	edx, 1Fh
		or	eax, edx
		mov	byte ptr [ebp+var_48], al
		movzx	edx, word ptr [ecx+48h]
		movzx	eax, [ebp+var_48]
		and	dx, 3E0h
		and	ax, 0FC1Fh
		or	eax, edx
		mov	[ebp+var_48], ax
		mov	eax, [ecx+4Ch]
		mov	dword ptr [esp+4], 0
		mov	[esp], ebx
		mov	[ebp+var_44], eax
		call	ds:_ZN6QBrushC1EN2Qt10BrushStyleE
		lea	eax, [ebp+var_14]
		mov	dword ptr [esp+18h], 0
		mov	dword ptr [esp+14h], 0
		mov	dword ptr [esp+10h], 1
		mov	[esp+4], ebx
		mov	[esp], eax
		fld1
		fstp	qword ptr [esp+8]
		mov	[ebp+var_118], 4
		call	ds:_ZN4QPenC1ERK6QBrushdN2Qt8PenStyleENS3_11PenCapStyleENS3_12PenJoinStyleE
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_118], 3
		call	ds:_ZN6QBrushD1Ev
		fld	ds:flt_7105A710
		lea	eax, [ebp+var_14]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	ds:_ZN4QPen13setMiterLimitEd
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		call	ds:_ZN8QPainter6setPenERK4QPen
		lea	eax, [ebp+var_1C]
		mov	dword ptr [esp+8], 1
		mov	dword ptr [esp+4], 2
		mov	[esp], eax
		call	ds:_ZN6QBrushC1EN2Qt11GlobalColorENS0_10BrushStyleE
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_1C]
		mov	[esp+4], eax
		mov	[ebp+var_118], 2
		mov	[esp], edx
		call	ds:_ZN8QPainter8setBrushERK6QBrush
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_118], 3
		call	ds:_ZN6QBrushD1Ev
		mov	ecx, [ebp+arg_4]
		mov	dword ptr [esp+8], 1
		mov	dword ptr [esp+4], 1
		mov	[esp], ecx
		call	ds:_ZN8QPainter13setRenderHintENS_10RenderHintEb
		mov	ebx, [ebp+arg_4]
		mov	dword ptr [esp+8], 1
		mov	dword ptr [esp+4], 4
		mov	[esp], ebx
		call	ds:_ZN8QPainter13setRenderHintENS_10RenderHintEb
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	[ebp+var_20], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_134]
		mov	eax, [eax+34h]
		test	eax, eax
		mov	[ebp+var_128], eax
		jz	loc_7102CD39
		mov	eax, [ebp+var_20]
		mov	edx, [eax+8]
		jmp	short loc_7102CC8A
; ---------------------------------------------------------------------------
		align 10h

loc_7102CC10:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+30Fj
					; _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+318j
		add	edx, 1
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 4
		mov	[esp+4], edx
		mov	dword ptr [esp], 14h
		mov	[ebp+var_118], 1
		call	ds:_ZN11QVectorData4growEiiib
		mov	[esp+8], eax
		mov	eax, [ebp+var_20]
		lea	edx, [ebp+var_20]
		mov	eax, [eax+8]
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_7104E6E0
		mov	eax, [ebp+var_20]
		mov	ecx, [ebp+var_128]
		mov	edx, [eax+8]
		mov	[eax+edx*4+10h], ecx
		mov	eax, [ebp+var_20]

loc_7102CC6A:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+32Bj
		mov	ebx, [ebp+var_128]
		mov	edx, [eax+8]
		mov	ebx, [ebx+34h]
		add	edx, 1
		mov	[eax+8], edx
		test	ebx, ebx
		mov	[ebp+var_128], ebx
		jz	loc_7102CD40

loc_7102CC8A:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+28Dj
		mov	ecx, [eax]
		cmp	ecx, 1
		jnz	loc_7102CC10
		cmp	[eax+4], edx
		jle	loc_7102CC10
		mov	ecx, [ebp+var_20]
		mov	ebx, [ebp+var_128]
		mov	[ecx+edx*4+10h], ebx
		jmp	short loc_7102CC6A
; ---------------------------------------------------------------------------

loc_7102CCAD:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+69j
		mov	ebx, [ebp+arg_8]
		mov	eax, [ebx]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_10]
		lea	edx, [ebp+var_C]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_118], 6
		call	ds:_ZNK7QString11toLocal8BitEv
		mov	eax, [ebp+var_10]
		sub	esp, 4
		mov	eax, [eax+0Ch]
		mov	dword ptr [esp], offset	aCouldnTFindNod	; "Couldn't find node %s. Skipping renderi"...
		mov	[ebp+var_118], 5
		mov	[esp+4], eax
		call	ds:_Z6qDebugPKcz
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_118], 6
		call	sub_7103B6E0
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_118], 0FFFFFFFFh
		call	sub_710477B0

loc_7102CD26:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+9Aj
					; _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+615j
		lea	eax, [ebp+var_11C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	ebx, [ebp+var_4]
		leave
		retn
; ---------------------------------------------------------------------------

loc_7102CD39:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+281j
		mov	eax, [ebp+var_20]
		mov	edx, [eax+8]
		nop

loc_7102CD40:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+304j
		sub	edx, 1
		mov	[ebp+var_120], edx
		js	short loc_7102CDC6
		mov	edx, [ebp+arg_0]
		add	edx, 0D8h
		mov	[ebp+var_130], edx
		jmp	short loc_7102CD63
; ---------------------------------------------------------------------------
		align 10h

loc_7102CD60:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+444j
		mov	eax, [ebp+var_20]

loc_7102CD63:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+3DAj
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_7102CD8D
		mov	edx, [eax+4]
		lea	ecx, [ebp+var_20]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_118], 1
		mov	[esp+4], eax
		call	sub_7104E6E0

loc_7102CD8D:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+3E8j
		mov	eax, [ebp+arg_4]
		mov	ebx, [ebp+var_130]
		mov	edx, [ebp+var_120]
		mov	[esp+4], eax
		mov	eax, [ebp+var_20]
		mov	[esp+8], ebx
		mov	eax, [eax+edx*4+10h]
		mov	[ebp+var_118], 1
		mov	[esp], eax
		call	sub_710227B0
		sub	[ebp+var_120], 1
		jns	short loc_7102CD60

loc_7102CDC6:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+3C9j
		mov	ecx, [ebp+arg_4]
		mov	[ebp+var_118], 1
		mov	[esp], ecx
		call	ds:_ZNK8QPainter14worldTransformEv
		mov	[ebp+var_138], eax
		mov	[esp+4], eax
		lea	eax, [ebp+var_E0]
		mov	[esp], eax
		call	ds:_ZN7QMatrixC1ERKS_
		mov	ebx, [ebp+var_138]
		movzx	eax, byte ptr [ebp+var_98]
		fld	qword ptr [ebx+30h]
		fstp	[ebp+var_B0]
		and	eax, 0FFFFFFE0h
		fld	qword ptr [ebx+38h]
		fstp	[ebp+var_A8]
		fld	qword ptr [ebx+40h]
		fstp	[ebp+var_A0]
		movzx	edx, byte ptr [ebx+48h]
		and	edx, 1Fh
		or	eax, edx
		mov	byte ptr [ebp+var_98], al
		movzx	edx, word ptr [ebx+48h]
		movzx	eax, [ebp+var_98]
		and	dx, 3E0h
		and	ax, 0FC1Fh
		or	eax, edx
		mov	[ebp+var_98], ax
		mov	eax, [ebx+4Ch]
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_94], eax
		lea	eax, [ebp+var_90]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		call	ds:_ZN8QPainter17setWorldTransformERK10QTransformb
		mov	ecx, [ebp+var_134]
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+arg_4]
		mov	eax, [ecx]
		add	edx, 0D8h
		mov	[ebp+var_12C], edx
		mov	[esp+8], edx
		mov	[esp+4], ebx
		mov	[esp], ecx
		call	dword ptr [eax+8]
		lea	eax, [ebp+var_E0]
		mov	dword ptr [esp+8], 0
		mov	[esp+4], eax
		mov	[esp], ebx
		call	ds:_ZN8QPainter17setWorldTransformERK10QTransformb
		mov	eax, [ebp+var_20]
		mov	edx, [eax+8]
		test	edx, edx
		jle	loc_7102CF3A
		mov	[ebp+var_124], 0
		xchg	ax, ax

loc_7102CED0:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+5B8j
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_7102CEF7
		mov	eax, [eax+4]
		mov	[esp+4], edx
		mov	[ebp+var_118], 1
		mov	[esp+8], eax
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		call	sub_7104E6E0

loc_7102CEF7:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+555j
		mov	edx, [ebp+var_12C]
		mov	ecx, [ebp+arg_4]
		mov	eax, [ebp+var_20]
		mov	ebx, [ebp+var_124]
		mov	[esp+8], edx
		mov	[esp+4], ecx
		mov	eax, [eax+ebx*4+10h]
		mov	[ebp+var_118], 1
		mov	[esp], eax
		call	sub_71022790
		mov	eax, [ebp+var_20]
		add	ebx, 1
		mov	[ebp+var_124], ebx
		mov	edx, [eax+8]
		cmp	ebx, edx
		jl	short loc_7102CED0

loc_7102CF3A:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+53Ej
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_118], 1
		mov	[esp], eax
		call	ds:_ZN8QPainter7restoreEv
		mov	eax, [ebp+var_20]
		test	eax, eax
		jz	short loc_7102CF7F
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7102CF7F
		mov	eax, [ebp+var_20]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_118], 3
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_7102CF7F:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+5D5j
					; _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+5DFj
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_118], 0FFFFFFFFh
		call	ds:_ZN4QPenD1Ev
		jmp	loc_7102CD26
; ---------------------------------------------------------------------------

loc_7102CF9A:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+79j
		mov	eax, edx
		add	eax, 0C4h
		mov	[esp], eax
		mov	[ebp+var_118], 0FFFFFFFFh
		call	ds:_ZN5QTime5startEv
		jmp	loc_7102C9FF
_ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102CFB9	proc near		; DATA XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+30o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-118h]
		mov	edx, [ebp-114h]
		cmp	eax, 1
		mov	[ebp-144h], edx
		jz	loc_7102D0D5
		cmp	eax, 2
		jz	short loc_7102D037
		cmp	eax, 3
		jz	loc_7102D0A7
		cmp	eax, 4
		jz	short loc_7102D065
		cmp	eax, 5
		lea	esi, [esi+0]
		jz	loc_7102D07A
		mov	eax, [ebp-20h]
		mov	[ebp-140h], edx
		test	eax, eax
		jz	short loc_7102D02B
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7102D02B
		mov	eax, [ebp-20h]
		mov	[esp+arg_0], 4
		mov	dword ptr [ebp-118h], 0
		mov	[esp+0], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_7102D02B:				; CODE XREF: sub_7102CFB9+48j
					; sub_7102CFB9+52j
		mov	ecx, [ebp-140h]
		mov	[ebp-144h], ecx

loc_7102D037:				; CODE XREF: sub_7102CFB9+21j
					; sub_7102CFB9+132j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-118h], 0
		call	ds:_ZN4QPenD1Ev
		mov	ebx, [ebp-144h]
		mov	dword ptr [ebp-118h], 0FFFFFFFFh
		mov	[esp+0], ebx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7102D065:				; CODE XREF: sub_7102CFB9+2Fj
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-118h], 0
		call	sub_7103B6E0

loc_7102D07A:				; CODE XREF: sub_7102CFB9+37j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-118h], 0
		call	sub_710477B0
		mov	eax, [ebp-144h]
		mov	dword ptr [ebp-118h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7102D0A7:				; CODE XREF: sub_7102CFB9+26j
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-118h], 0
		call	ds:_ZN6QBrushD1Ev
		mov	edx, [ebp-144h]
		mov	dword ptr [ebp-118h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7102D0D5:				; CODE XREF: sub_7102CFB9+18j
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-118h], 0
		call	ds:_ZN6QBrushD1Ev
		jmp	loc_7102D037
sub_7102CFB9	endp

; Exported entry  81. _ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF
_ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF proc near
					; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainter+2Cp
					; _ZN12QSvgRenderer6renderEP8QPainterRK6QRectF+18j

var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_38		= qword	ptr -38h
var_30		= qword	ptr -30h
var_28		= qword	ptr -28h
var_20		= qword	ptr -20h
var_14		= byte ptr -14h
var_10		= byte ptr -10h
var_C		= byte ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0B8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_4C], eax
		lea	eax, [ebp+var_6C]
		mov	[ebp+var_54], offset sub_710525B0
		mov	[ebp+var_50], offset word_71053902
		mov	[ebp+var_48], offset sub_7102D54D
		mov	[ebp+var_44], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		cmp	dword ptr [edx+0C4h], 0FFFFFFFFh
		jz	loc_7102D513

loc_7102D132:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF+43Aj
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_710225E0
		cmp	eax, 10h
		jz	loc_7102D4C5
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		call	ds:_ZN8QPainter4saveEv
		lea	eax, [ebp+var_38]
		mov	edx, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+4], edx
		mov	[esp], ecx
		fldz
		fst	[ebp+var_30]
		mov	[esp+8], eax
		fst	[ebp+var_38]
		fst	[ebp+var_20]
		fstp	[ebp+var_28]
		call	_ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	dword ptr [esp+4], 0
		call	ds:_ZN6QBrushC1EN2Qt10BrushStyleE
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	dword ptr [esp+18h], 0
		mov	dword ptr [esp+14h], 0
		mov	dword ptr [esp+10h], 1
		mov	[esp], eax
		fld1
		fstp	qword ptr [esp+8]
		mov	[ebp+var_68], 3
		call	ds:_ZN4QPenC1ERK6QBrushdN2Qt8PenStyleENS3_11PenCapStyleENS3_12PenJoinStyleE
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_68], 2
		call	ds:_ZN6QBrushD1Ev
		fld	ds:flt_7105A710
		lea	eax, [ebp+var_C]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	ds:_ZN4QPen13setMiterLimitEd
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		call	ds:_ZN8QPainter6setPenERK4QPen
		lea	eax, [ebp+var_14]
		mov	dword ptr [esp+8], 1
		mov	dword ptr [esp+4], 2
		mov	[esp], eax
		call	ds:_ZN6QBrushC1EN2Qt11GlobalColorENS0_10BrushStyleE
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	[ebp+var_68], 1
		mov	[esp], edx
		call	ds:_ZN8QPainter8setBrushERK6QBrush
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_68], 2
		call	ds:_ZN6QBrushD1Ev
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+8], 1
		mov	dword ptr [esp+4], 1
		mov	[esp], eax
		call	ds:_ZN8QPainter13setRenderHintENS_10RenderHintEb
		mov	edx, [ebp+arg_4]
		mov	dword ptr [esp+8], 1
		mov	dword ptr [esp+4], 4
		mov	[esp], edx
		call	ds:_ZN8QPainter13setRenderHintENS_10RenderHintEb
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+80h]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_7102D306
		mov	edx, [eax+8]
		lea	edx, [eax+edx*4+14h]
		mov	eax, [eax+4]
		mov	[ebp+var_94], edx
		mov	[esp+4], eax
		mov	eax, ecx
		sub	eax, 0FFFFFF80h
		mov	[esp], eax
		call	ds:_ZN9QListData6detachEi
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_90], eax
		mov	eax, [edx+80h]
		mov	edx, [eax+8]
		mov	ecx, [eax+0Ch]
		lea	edx, [eax+edx*4+14h]
		cmp	[ebp+var_94], edx
		jz	short loc_7102D2F2
		lea	eax, [eax+ecx*4+14h]
		sub	eax, edx
		cmp	eax, 3
		jg	loc_7102D52F

loc_7102D2F2:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF+1F1j
					; _ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF+458j
		mov	edx, [ebp+var_90]
		lock dec dword ptr [edx]
		setnz	al
		test	al, al
		jz	loc_7102D4FE

loc_7102D306:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF+1AEj
					; _ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF+41Ej
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+80h]
		add	ecx, 0D8h
		mov	[ebp+var_8C], ecx
		mov	edx, [eax+8]
		mov	[esp+8], ecx
		mov	[ebp+var_68], 2
		lea	edx, [eax+edx*4+14h]
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_74], edx
		mov	edx, [ebp+arg_0]
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_710227B0
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+var_74]
		mov	eax, [ecx+80h]
		sub	ecx, 0FFFFFF80h
		mov	[ebp+var_88], ecx
		mov	[ebp+var_70], edx
		jmp	short loc_7102D364
; ---------------------------------------------------------------------------
		align 10h

loc_7102D360:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF+313j
					; _ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF+362j ...
		add	[ebp+var_70], 4

loc_7102D364:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF+26Aj
		mov	edx, [ebp+var_70]
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_78], edx
		mov	edx, [ecx+80h]
		mov	ecx, [edx]
		cmp	ecx, 1
		jz	short loc_7102D3E7
		mov	ecx, [eax+8]
		lea	ecx, [eax+ecx*4+14h]
		mov	eax, [edx+4]
		mov	[ebp+var_84], ecx
		mov	[ebp+var_68], 2
		mov	[esp+4], eax
		mov	eax, [ebp+var_88]
		mov	[esp], eax
		call	ds:_ZN9QListData6detachEi
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_7C], eax
		mov	eax, [edx+80h]
		mov	edx, [eax+8]
		mov	ecx, [eax+0Ch]
		lea	edx, [eax+edx*4+14h]
		cmp	[ebp+var_84], edx
		jz	short loc_7102D3D1
		lea	eax, [eax+ecx*4+14h]
		sub	eax, edx
		cmp	eax, 3
		jg	loc_7102D4D2

loc_7102D3D1:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF+2D0j
					; _ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF+3FBj
		mov	edx, [ebp+var_7C]
		lock dec dword ptr [edx]
		setnz	al
		test	al, al
		jz	short loc_7102D457
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+80h]

loc_7102D3E7:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF+288j
		mov	edx, [eax+0Ch]
		lea	edx, [eax+edx*4+14h]
		cmp	[ebp+var_78], edx
		jz	loc_7102D483

loc_7102D3F7:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF+38Dj
		mov	ecx, [ebp+var_78]
		mov	ecx, [ecx]
		cmp	byte ptr [ecx+4Ch], 0
		mov	[ebp+var_80], ecx
		jz	loc_7102D360
		mov	[esp], ecx
		mov	[ebp+var_68], 2
		call	sub_710225E0
		cmp	eax, 10h
		jz	loc_7102D4F0
		mov	ecx, [ebp+var_80]
		mov	edx, [ebp+var_8C]
		mov	eax, [ecx]
		mov	[esp+8], edx
		mov	ecx, [ebp+arg_4]
		mov	edx, [ebp+var_80]
		mov	[esp+4], ecx
		mov	[esp], edx
		mov	eax, [eax+8]
		mov	[ebp+var_68], 2
		call	eax
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx+80h]
		jmp	loc_7102D360
; ---------------------------------------------------------------------------

loc_7102D457:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF+2ECj
		mov	eax, [ebp+var_7C]
		mov	[ebp+var_68], 2
		mov	[esp], eax
		call	ds:_Z5qFreePv
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+80h]
		mov	edx, [eax+0Ch]
		lea	edx, [eax+edx*4+14h]
		cmp	[ebp+var_78], edx
		jnz	loc_7102D3F7

loc_7102D483:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF+301j
		mov	ecx, [ebp+var_8C]
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_68], 2
		mov	[esp+8], ecx
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_71022790
		mov	ecx, [ebp+arg_4]
		mov	[esp], ecx
		call	ds:_ZN8QPainter7restoreEv
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		call	ds:_ZN4QPenD1Ev

loc_7102D4C5:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF+57j
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_7102D4D2:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF+2DBj
		mov	ecx, [ebp+var_84]
		and	eax, 0FFFFFFFCh
		mov	[esp+8], eax	; size_t
		mov	[esp], edx	; void *
		mov	[esp+4], ecx	; void *
		call	memcpy
		jmp	loc_7102D3D1
; ---------------------------------------------------------------------------

loc_7102D4F0:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF+32Bj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+80h]
		jmp	loc_7102D360
; ---------------------------------------------------------------------------

loc_7102D4FE:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF+210j
		mov	[esp], edx
		mov	[ebp+var_68], 2
		call	ds:_Z5qFreePv
		jmp	loc_7102D306
; ---------------------------------------------------------------------------

loc_7102D513:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF+3Cj
		mov	eax, edx
		add	eax, 0C4h
		mov	[esp], eax
		mov	[ebp+var_68], 0FFFFFFFFh
		call	ds:_ZN5QTime5startEv
		jmp	loc_7102D132
; ---------------------------------------------------------------------------

loc_7102D52F:				; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF+1FCj
		mov	ecx, [ebp+var_94]
		and	eax, 0FFFFFFFCh
		mov	[esp+8], eax	; size_t
		mov	[esp], edx	; void *
		mov	[esp+4], ecx	; void *
		call	memcpy
		jmp	loc_7102D2F2
_ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102D54D	proc near		; DATA XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF+20o
		add	ebp, 8
		mov	eax, [ebp-68h]
		mov	ecx, [ebp-64h]
		cmp	eax, 1
		mov	[ebp-98h], ecx
		jz	short loc_7102D579
		cmp	eax, 2
		jz	short loc_7102D5A1
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	ds:_ZN6QBrushD1Ev

loc_7102D579:				; CODE XREF: sub_7102D54D+12j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	ds:_ZN4QPenD1Ev
		mov	eax, [ebp-98h]
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7102D5A1:				; CODE XREF: sub_7102D54D+17j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-68h], 0
		call	ds:_ZN6QBrushD1Ev
		mov	edx, [ebp-98h]
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_7102D54D	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  79. _ZN16QSvgTinyDocument4drawEP8QPainter

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QSvgTinyDocument4drawEP8QPainter
_ZN16QSvgTinyDocument4drawEP8QPainter proc near
					; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterR15QSvgExtraStates+6j
					; _ZN12QSvgRenderer6renderEP8QPainter+18j

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_2C		= qword	ptr -2Ch
var_24		= qword	ptr -24h
var_1C		= qword	ptr -1Ch
var_14		= qword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 3Ch
		fldz
		fst	[esp+3Ch+var_24]
		lea	eax, [esp+3Ch+var_2C]
		mov	[esp+3Ch+var_34], eax
		mov	eax, [esp+3Ch+arg_4]
		fst	[esp+3Ch+var_2C]
		mov	[esp+3Ch+var_38], eax
		mov	eax, [esp+3Ch+arg_0]
		fst	[esp+3Ch+var_14]
		mov	[esp+3Ch+var_3C], eax
		fstp	[esp+3Ch+var_1C]
		call	_ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF
		add	esp, 3Ch
		retn
_ZN16QSvgTinyDocument4drawEP8QPainter endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  80. _ZN16QSvgTinyDocument4drawEP8QPainterR15QSvgExtraStates

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QSvgTinyDocument4drawEP8QPainterR15QSvgExtraStates
_ZN16QSvgTinyDocument4drawEP8QPainterR15QSvgExtraStates	proc near
					; DATA XREF: .rdata:7105D950o
		sub	esp, 0Ch
		add	esp, 0Ch
		jmp	short _ZN16QSvgTinyDocument4drawEP8QPainter
_ZN16QSvgTinyDocument4drawEP8QPainterR15QSvgExtraStates	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  88. _ZN16QSvgTinyDocumentC1Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QSvgTinyDocumentC1Ev
_ZN16QSvgTinyDocumentC1Ev proc near	; CODE XREF: sub_7100FC80+BBp

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_7105390C
		mov	[ebp+var_18], offset sub_7102D72C
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], 0
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_71024280
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D948
		mov	dword ptr [eax+90h], 0FFFFFFFFh
		fldz
		fst	qword ptr [eax+0A0h]
		mov	dword ptr [eax+8Ch], 0FFFFFFFFh
		fst	qword ptr [eax+98h]
		mov	byte ptr [eax+94h], 0
		fst	qword ptr [eax+0B0h]
		mov	byte ptr [eax+95h], 0
		fstp	qword ptr [eax+0A8h]
		mov	eax, ds:_ZN9QHashData11shared_nullE
		mov	[edx+0B8h], eax
		lock inc dword ptr [eax+8]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	[edx+0BCh], eax
		lock inc dword ptr [eax+8]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	[edx+0C0h], eax
		lock inc dword ptr [eax+8]
		setnz	dl
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+0C4h], 0FFFFFFFFh
		mov	byte ptr [eax+0C8h], 0
		mov	dword ptr [eax+0CCh], 0
		mov	dword ptr [eax+0D0h], 1Eh
		add	eax, 0D8h
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	sub_71025260
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QSvgTinyDocumentC1Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102D72C	proc near		; DATA XREF: _ZN16QSvgTinyDocumentC1Ev+20o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	edx, [ebp-34h]
		mov	[ebp-40h], edx
		mov	edx, [ebp+8]
		mov	eax, [edx+0C0h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jnz	short loc_7102D76A
		mov	edx, [ebp+8]
		mov	[esp+arg_0], offset sub_71044560
		mov	eax, [edx+0C0h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_7102D76A:				; CODE XREF: sub_7102D72C+1Bj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0BCh
		mov	[esp+0], eax
		call	sub_71044A90
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0B8h
		mov	[esp+0], eax
		call	sub_71044740
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_710243A0
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_7102D72C	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  70. _ZN16QSvgTinyDocument10addSvgFontEP8QSvgFont

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QSvgTinyDocument10addSvgFontEP8QSvgFont
_ZN16QSvgTinyDocument10addSvgFontEP8QSvgFont proc near ; CODE XREF: sub_7100E610+26Ep
					; sub_71010D50+1C7p ...

var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset word_71053912
		mov	[ebp+var_28], offset sub_7102DA2C
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_4]
		test	eax, eax
		jz	short loc_7102D800
		mov	edx, [ebp+arg_4]
		add	dword ptr [edx+4], 1

loc_7102D800:				; CODE XREF: _ZN16QSvgTinyDocument10addSvgFontEP8QSvgFont+37j
		mov	ecx, [ebp+arg_4]
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		mov	[esp+4], ecx
		call	sub_710299B0
		mov	edx, [ebp+arg_0]
		sub	esp, 4
		mov	eax, [edx+0B8h]
		mov	edx, [eax+8]
		cmp	edx, 1
		jz	short loc_7102D884
		mov	dword ptr [esp+10h], 4
		mov	dword ptr [esp+0Ch], 10h
		mov	dword ptr [esp+8], offset sub_71044650
		mov	dword ptr [esp+4], offset sub_71044710
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN9QHashData14detach_helper2EPFvPNS_4NodeEPvEPFvS1_Eii
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_5C], eax
		mov	eax, [ecx+0B8h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_7102D960

loc_7102D878:				; CODE XREF: _ZN16QSvgTinyDocument10addSvgFontEP8QSvgFont+1B7j
		mov	edx, [ebp+var_5C]
		mov	eax, [ebp+arg_0]
		mov	[eax+0B8h], edx

loc_7102D884:				; CODE XREF: _ZN16QSvgTinyDocument10addSvgFontEP8QSvgFont+6Bj
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_10]
		mov	[esp+8], eax
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	[ebp+var_48], 1
		add	ecx, 0B8h
		mov	[ebp+var_58], ecx
		mov	[esp], ecx
		call	sub_71051400
		mov	[ebp+var_54], eax
		mov	edx, [ebp+arg_0]
		mov	eax, [eax]
		mov	[ebp+var_50], eax
		cmp	eax, [edx+0B8h]
		jz	loc_7102D980
		mov	ecx, [ebp+arg_4]
		test	ecx, ecx
		jz	short loc_7102D8D2
		mov	ecx, [ebp+arg_4]
		add	dword ptr [ecx+4], 1

loc_7102D8D2:				; CODE XREF: _ZN16QSvgTinyDocument10addSvgFontEP8QSvgFont+109j
		mov	edx, [ebp+var_50]
		mov	eax, [edx+0Ch]
		test	eax, eax
		jz	short loc_7102D8FA
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_7102D8FA
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_48], 1
		call	eax

loc_7102D8FA:				; CODE XREF: _ZN16QSvgTinyDocument10addSvgFontEP8QSvgFont+11Aj
					; _ZN16QSvgTinyDocument10addSvgFontEP8QSvgFont+127j
		mov	eax, [ebp+arg_4]
		mov	ecx, [ebp+var_50]
		mov	[ecx+0Ch], eax

loc_7102D903:				; CODE XREF: _ZN16QSvgTinyDocument10addSvgFontEP8QSvgFont+22Bj
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7102D945

loc_7102D910:				; CODE XREF: _ZN16QSvgTinyDocument10addSvgFontEP8QSvgFont+198j
		mov	edx, [ebp+arg_4]
		test	edx, edx
		jz	short loc_7102D938
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+4]
		sub	eax, 1
		test	eax, eax
		mov	[edx+4], eax
		jnz	short loc_7102D938
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+4]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	eax

loc_7102D938:				; CODE XREF: _ZN16QSvgTinyDocument10addSvgFontEP8QSvgFont+155j
					; _ZN16QSvgTinyDocument10addSvgFontEP8QSvgFont+165j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_7102D945:				; CODE XREF: _ZN16QSvgTinyDocument10addSvgFontEP8QSvgFont+14Ej
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7102D910
; ---------------------------------------------------------------------------
		align 10h

loc_7102D960:				; CODE XREF: _ZN16QSvgTinyDocument10addSvgFontEP8QSvgFont+B2j
		mov	dword ptr [esp+4], offset sub_71044650
		mov	eax, [ecx+0B8h]
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_7102D878
; ---------------------------------------------------------------------------
		align 10h

loc_7102D980:				; CODE XREF: _ZN16QSvgTinyDocument10addSvgFontEP8QSvgFont+FEj
		mov	ecx, eax
		mov	eax, [eax+0Ch]
		cmp	eax, [ecx+18h]
		jge	short loc_7102D9F0

loc_7102D98A:				; CODE XREF: _ZN16QSvgTinyDocument10addSvgFontEP8QSvgFont+267j
		mov	eax, [ebp+var_10]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_60], eax
		mov	eax, [edx+0B8h]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	ds:_ZN9QHashData12allocateNodeEi
		test	eax, eax
		jz	short loc_7102D9CF
		mov	edx, [ebp+var_C]
		mov	[eax+8], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	ecx, [ebp+arg_4]
		test	ecx, ecx
		mov	[eax+0Ch], ecx
		jz	short loc_7102D9CF
		add	dword ptr [ecx+4], 1

loc_7102D9CF:				; CODE XREF: _ZN16QSvgTinyDocument10addSvgFontEP8QSvgFont+1F3j
					; _ZN16QSvgTinyDocument10addSvgFontEP8QSvgFont+209j
		mov	edx, [ebp+var_60]
		mov	[eax+4], edx
		mov	ecx, [ebp+var_54]
		mov	edx, [ecx]
		mov	[eax], edx
		mov	[ecx], eax
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0B8h]
		add	dword ptr [eax+0Ch], 1
		jmp	loc_7102D903
; ---------------------------------------------------------------------------

loc_7102D9F0:				; CODE XREF: _ZN16QSvgTinyDocument10addSvgFontEP8QSvgFont+1C8j
		movsx	eax, word ptr [ecx+16h]
		mov	[esp], ecx
		add	eax, 1
		mov	[esp+4], eax
		call	ds:_ZN9QHashData6rehashEi
		mov	ecx, [ebp+var_58]
		lea	eax, [ebp+var_10]
		mov	[esp+8], eax
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	[ebp+var_48], 1
		mov	[esp], ecx
		call	sub_71051400
		mov	[ebp+var_54], eax
		jmp	loc_7102D98A
_ZN16QSvgTinyDocument10addSvgFontEP8QSvgFont endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102DA2C	proc near		; DATA XREF: _ZN16QSvgTinyDocument10addSvgFontEP8QSvgFont+23o
		add	ebp, 8
		mov	edx, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-68h], edx
		jz	short loc_7102DA4D
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_710477B0

loc_7102DA4D:				; CODE XREF: sub_7102DA2C+Dj
		mov	ecx, [ebp-68h]
		cmp	dword ptr [ebp+0Ch], 0
		mov	[ebp-64h], ecx
		jz	short loc_7102DA7A
		mov	edx, [ebp+0Ch]
		mov	eax, [edx+4]
		sub	eax, 1
		test	eax, eax
		mov	[edx+4], eax
		jnz	short loc_7102DA7A
		mov	eax, [edx]
		mov	[esp+0], edx
		mov	eax, [eax+4]
		mov	dword ptr [ebp-48h], 0
		call	eax

loc_7102DA7A:				; CODE XREF: sub_7102DA2C+2Bj
					; sub_7102DA2C+3Bj
		mov	ecx, [ebp-64h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
sub_7102DA2C	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 104. _ZNK12QSvgRenderer7isValidEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK12QSvgRenderer7isValidEv
_ZNK12QSvgRenderer7isValidEv proc near	; CODE XREF: _ZNK10QSvgWidget8sizeHintEv+14p
					; _ZN16QGraphicsSvgItem5paintEP8QPainterPK24QStyleOptionGraphicsItemP7QWidget+2Bp

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+4]
		mov	eax, [eax+4Ch]
		test	eax, eax
		setnz	al
		retn
_ZNK12QSvgRenderer7isValidEv endp

; Exported entry 101. _ZNK12QSvgRenderer15framesPerSecondEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK12QSvgRenderer15framesPerSecondEv
_ZNK12QSvgRenderer15framesPerSecondEv proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+4]
		mov	eax, [eax+54h]
		retn
_ZNK12QSvgRenderer15framesPerSecondEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 103. _ZNK12QSvgRenderer17animationDurationEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK12QSvgRenderer17animationDurationEv
_ZNK12QSvgRenderer17animationDurationEv	proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+4]
		mov	eax, [eax+4Ch]
		mov	eax, [eax+0CCh]
		retn
_ZNK12QSvgRenderer17animationDurationEv	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  96. _ZNK12QSvgRenderer10metaObjectEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK12QSvgRenderer10metaObjectEv
_ZNK12QSvgRenderer10metaObjectEv proc near ; DATA XREF:	.rdata:off_7105D648o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+4]
		mov	eax, [eax+18h]
		test	eax, eax
		jz	short loc_7102DAE0
		rep retn
; ---------------------------------------------------------------------------

loc_7102DAE0:				; CODE XREF: _ZNK12QSvgRenderer10metaObjectEv+Cj
		mov	eax, offset _ZN12QSvgRenderer16staticMetaObjectE
		retn
_ZNK12QSvgRenderer10metaObjectEv endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7102DAF0	proc near		; DATA XREF: .text:71052BC4o
		mov	eax, ds:_ZN7QObject16staticMetaObjectE
		mov	_ZN12QSvgRenderer16staticMetaObjectE, eax
		retn
sub_7102DAF0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  20. _ZN12QSvgRenderer13repaintNeededEv

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QSvgRenderer13repaintNeededEv
_ZN12QSvgRenderer13repaintNeededEv proc	near ; CODE XREF: .text:7102DB36j
					; _ZN12QSvgRenderer4loadEP16QXmlStreamReader+12Fp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_10], 0
		mov	[esp+1Ch+var_14], 0
		mov	[esp+1Ch+var_18], offset _ZN12QSvgRenderer16staticMetaObjectE
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN11QMetaObject8activateEP7QObjectPKS_iPPv
		add	esp, 1Ch
		retn
_ZN12QSvgRenderer13repaintNeededEv endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		add	esp, 0Ch
		jmp	short _ZN12QSvgRenderer13repaintNeededEv
; ---------------------------------------------------------------------------
		align 10h
; Exported entry  19. _ZN12QSvgRenderer11qt_metacastEPKc

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QSvgRenderer11qt_metacastEPKc
_ZN12QSvgRenderer11qt_metacastEPKc proc	near ; DATA XREF: .rdata:7105D64Co

var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		xor	eax, eax
		mov	edx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_4], ebp
		mov	ebp, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_10], ebx
		mov	[esp+1Ch+var_C], esi
		test	edx, edx
		mov	[esp+1Ch+var_8], edi
		jz	short loc_7102DB7F
		mov	ecx, 0Dh
		mov	esi, edx
		mov	edi, offset aQsvgrenderer ; "QSvgRenderer"
		repe cmpsb
		setnbe	al
		setb	cl
		mov	esi, eax
		mov	eax, ebp
		mov	ebx, esi
		cmp	bl, cl
		jnz	short loc_7102DB93

loc_7102DB7F:				; CODE XREF: _ZN12QSvgRenderer11qt_metacastEPKc+1Fj
		mov	ebx, [esp+1Ch+var_10]
		mov	esi, [esp+1Ch+var_C]
		mov	edi, [esp+1Ch+var_8]
		mov	ebp, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_7102DB93:				; CODE XREF: _ZN12QSvgRenderer11qt_metacastEPKc+3Dj
		mov	eax, ds:_ZN7QObject11qt_metacastEPKc
		mov	ebx, [esp+1Ch+var_10]
		mov	esi, [esp+1Ch+var_C]
		mov	edi, [esp+1Ch+var_8]
		mov	ebp, [esp+1Ch+var_4]
		add	esp, 1Ch
		jmp	eax
_ZN12QSvgRenderer11qt_metacastEPKc endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 102. _ZNK12QSvgRenderer16matrixForElementERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZNK12QSvgRenderer16matrixForElementERK7QString
_ZNK12QSvgRenderer16matrixForElementERK7QString	proc near

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_3C		= byte ptr -3Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 4Ch
		mov	eax, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_8], ebx
		mov	ebx, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_4], esi
		mov	esi, [eax+4]
		mov	[esp+4Ch+var_4C], ebx
		call	ds:_ZN7QMatrixC1Ev
		mov	eax, [esi+4Ch]
		test	eax, eax
		jz	short loc_7102DBFE
		mov	edx, [esp+4Ch+arg_8]
		lea	esi, [esp+4Ch+var_3C]
		mov	[esp+4Ch+var_48], eax
		mov	[esp+4Ch+var_4C], esi
		mov	[esp+4Ch+var_44], edx
		call	_ZNK16QSvgTinyDocument16matrixForElementERK7QString
		sub	esp, 4
		mov	[esp+4Ch+var_48], esi
		mov	[esp+4Ch+var_4C], ebx
		call	ds:_ZN7QMatrixaSERKS_

loc_7102DBFE:				; CODE XREF: _ZNK12QSvgRenderer16matrixForElementERK7QString+24j
		mov	eax, ebx
		mov	esi, [esp+4Ch+var_4]
		mov	ebx, [esp+4Ch+var_8]
		add	esp, 4Ch
		retn	4
_ZNK12QSvgRenderer16matrixForElementERK7QString	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  99. _ZNK12QSvgRenderer13elementExistsERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZNK12QSvgRenderer13elementExistsERK7QString
_ZNK12QSvgRenderer13elementExistsERK7QString proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	edx, [esp+0Ch+arg_4]
		mov	eax, [eax+4]
		mov	eax, [eax+4Ch]
		test	eax, eax
		jz	short loc_7102DC35
		mov	[esp+0Ch+arg_4], edx
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	_ZNK16QSvgTinyDocument13elementExistsERK7QString
; ---------------------------------------------------------------------------

loc_7102DC35:				; CODE XREF: _ZNK12QSvgRenderer13elementExistsERK7QString+13j
		add	esp, 0Ch
		retn
_ZNK12QSvgRenderer13elementExistsERK7QString endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 100. _ZNK12QSvgRenderer15boundsOnElementERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZNK12QSvgRenderer15boundsOnElementERK7QString
_ZNK12QSvgRenderer15boundsOnElementERK7QString proc near
					; CODE XREF: _ZN16QGraphicsSvgItem12setElementIdERK7QString+1A6p
					; _ZN16QGraphicsSvgItem17setSharedRendererEP12QSvgRenderer+1A8p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		fldz
		mov	eax, [esp+1Ch+arg_4]
		fst	qword ptr [ebx+8]
		mov	eax, [eax+4]
		fst	qword ptr [ebx]
		mov	eax, [eax+4Ch]
		fst	qword ptr [ebx+18h]
		test	eax, eax
		fstp	qword ptr [ebx+10h]
		jz	short loc_7102DC7A
		mov	edx, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_18], eax
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_14], edx
		call	_ZNK16QSvgTinyDocument15boundsOnElementERK7QString
		sub	esp, 4

loc_7102DC7A:				; CODE XREF: _ZNK12QSvgRenderer15boundsOnElementERK7QString+21j
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
_ZNK12QSvgRenderer15boundsOnElementERK7QString endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  17. _ZN12QSvgRenderer10setViewBoxERK6QRectF

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QSvgRenderer10setViewBoxERK6QRectF
_ZN12QSvgRenderer10setViewBoxERK6QRectF	proc near
					; CODE XREF: _ZN12QSvgRenderer11qt_metacallEN11QMetaObject4CallEiPPv+B1p

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax+4]
		mov	eax, [eax+4Ch]
		test	eax, eax
		jz	short loc_7102DCB0
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	_ZN16QSvgTinyDocument10setViewBoxERK6QRectF
; ---------------------------------------------------------------------------
		align 10h

loc_7102DCB0:				; CODE XREF: _ZN12QSvgRenderer10setViewBoxERK6QRectF+Fj
		add	esp, 0Ch
		retn
_ZN12QSvgRenderer10setViewBoxERK6QRectF	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  16. _ZN12QSvgRenderer10setViewBoxERK5QRect

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QSvgRenderer10setViewBoxERK5QRect
_ZN12QSvgRenderer10setViewBoxERK5QRect proc near

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_30		= dword	ptr -30h
var_2C		= qword	ptr -2Ch
var_24		= qword	ptr -24h
var_1C		= qword	ptr -1Ch
var_14		= qword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 44h
		mov	edx, [esp+4Ch+arg_0]
		mov	eax, [esp+4Ch+arg_4]
		mov	edx, [edx+4]
		mov	ecx, [edx+4Ch]
		test	ecx, ecx
		jz	short loc_7102DD2C
		mov	esi, [eax]
		mov	[esp+4Ch+var_30], esi
		mov	ebx, [eax+4]
		fild	[esp+4Ch+var_30]
		fstp	[esp+4Ch+var_2C]
		mov	[esp+4Ch+var_30], ebx
		mov	edx, [eax+8]
		fild	[esp+4Ch+var_30]
		fstp	[esp+4Ch+var_24]
		add	edx, 1
		sub	edx, esi
		mov	[esp+4Ch+var_30], edx
		mov	eax, [eax+0Ch]
		fild	[esp+4Ch+var_30]
		fstp	[esp+4Ch+var_1C]
		mov	[esp+4Ch+var_4C], ecx
		add	eax, 1
		sub	eax, ebx
		mov	[esp+4Ch+var_30], eax
		lea	eax, [esp+4Ch+var_2C]
		fild	[esp+4Ch+var_30]
		fstp	[esp+4Ch+var_14]
		mov	[esp+4Ch+var_48], eax
		call	_ZN16QSvgTinyDocument10setViewBoxERK6QRectF

loc_7102DD2C:				; CODE XREF: _ZN12QSvgRenderer10setViewBoxERK5QRect+15j
		add	esp, 44h
		pop	ebx
		pop	esi
		retn
_ZN12QSvgRenderer10setViewBoxERK5QRect endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  97. _ZNK12QSvgRenderer11defaultSizeEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK12QSvgRenderer11defaultSizeEv
_ZNK12QSvgRenderer11defaultSizeEv proc near ; CODE XREF: _ZNK10QSvgWidget8sizeHintEv+39p
					; _ZN16QGraphicsSvgItem12setElementIdERK7QString+44p ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= word ptr -30h
var_2E		= word ptr -2Eh
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		mov	edx, 0FFFFFFFFh
		sub	esp, 48h
		mov	eax, [esp+4Ch+arg_0]
		mov	eax, [eax+4]
		mov	ebx, [eax+4Ch]
		mov	eax, 0FFFFFFFFh
		test	ebx, ebx
		jz	short loc_7102DD70
		mov	eax, [ebx+8Ch]
		test	eax, eax
		jle	short loc_7102DD75
		mov	edx, [ebx+90h]
		test	edx, edx
		jle	short loc_7102DD75

loc_7102DD70:				; CODE XREF: _ZNK12QSvgRenderer11defaultSizeEv+1Aj
		add	esp, 48h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_7102DD75:				; CODE XREF: _ZNK12QSvgRenderer11defaultSizeEv+24j
					; _ZNK12QSvgRenderer11defaultSizeEv+2Ej
		fld	qword ptr [ebx+0A8h]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		sahf
		jp	short loc_7102DD8C
		jz	short loc_7102DE03
		fstp	st(1)
		jmp	short loc_7102DD90
; ---------------------------------------------------------------------------

loc_7102DD8C:				; CODE XREF: _ZNK12QSvgRenderer11defaultSizeEv+44j
		fstp	st(1)
		xchg	ax, ax

loc_7102DD90:				; CODE XREF: _ZNK12QSvgRenderer11defaultSizeEv+4Aj
					; _ZNK12QSvgRenderer11defaultSizeEv+141j
		fld	qword ptr [ebx+0B0h]
		jmp	short loc_7102DDA0
; ---------------------------------------------------------------------------

loc_7102DD98:				; CODE XREF: _ZNK12QSvgRenderer11defaultSizeEv+D0j
		fxch	st(1)
		jmp	short loc_7102DDA0
; ---------------------------------------------------------------------------

loc_7102DD9C:				; CODE XREF: _ZNK12QSvgRenderer11defaultSizeEv+D2j
		fxch	st(1)
		xchg	ax, ax

loc_7102DDA0:				; CODE XREF: _ZNK12QSvgRenderer11defaultSizeEv+56j
					; _ZNK12QSvgRenderer11defaultSizeEv+5Aj
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jb	loc_7102DEC6
		fnstcw	[esp+4Ch+var_2E]
		fadd	ds:flt_7105AA00
		movzx	eax, [esp+4Ch+var_2E]
		mov	ah, 0Ch
		mov	[esp+4Ch+var_30], ax
		fldcw	[esp+4Ch+var_30]
		fistp	[esp+4Ch+var_34]
		fldcw	[esp+4Ch+var_2E]
		mov	edx, [esp+4Ch+var_34]

loc_7102DDD7:				; CODE XREF: _ZNK12QSvgRenderer11defaultSizeEv+1D0j
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jb	loc_7102DE86
		fadd	ds:flt_7105AA00
		fldcw	[esp+4Ch+var_30]
		fistp	[esp+4Ch+var_34]
		fldcw	[esp+4Ch+var_2E]
		mov	eax, [esp+4Ch+var_34]
		add	esp, 48h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_7102DE03:				; CODE XREF: _ZNK12QSvgRenderer11defaultSizeEv+46j
		fld	qword ptr [ebx+0B0h]
		fucom	st(2)
		fnstsw	ax
		fstp	st(2)
		sahf
		jnz	short loc_7102DD98
		jp	short loc_7102DD9C
		fstp	st
		fstp	st
		lea	eax, [esp+4Ch+var_2C]
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_48], ebx
		call	sub_71022860
		sub	esp, 4
		mov	eax, [esp+4Ch+var_2C]
		mov	[ebx+98h], eax
		mov	eax, [esp+4Ch+var_28]
		mov	[ebx+9Ch], eax
		mov	eax, [esp+4Ch+var_24]
		mov	[ebx+0A0h], eax
		mov	eax, [esp+4Ch+var_20]
		mov	[ebx+0A4h], eax
		mov	eax, [esp+4Ch+var_1C]
		mov	[ebx+0A8h], eax
		mov	eax, [esp+4Ch+var_18]
		mov	[ebx+0ACh], eax
		mov	eax, [esp+4Ch+var_14]
		fld	qword ptr [ebx+0A8h]
		mov	[ebx+0B0h], eax
		mov	eax, [esp+4Ch+var_10]
		mov	[ebx+0B4h], eax
		jmp	loc_7102DD90
; ---------------------------------------------------------------------------

loc_7102DE86:				; CODE XREF: _ZNK12QSvgRenderer11defaultSizeEv+A2j
		fld	st
		fsub	ds:flt_7105AA04
		fldcw	[esp+4Ch+var_30]
		fistp	[esp+4Ch+var_34]
		fldcw	[esp+4Ch+var_2E]
		mov	eax, [esp+4Ch+var_34]
		mov	[esp+4Ch+var_34], eax
		fild	[esp+4Ch+var_34]
		fsubp	st(1), st
		fadd	ds:flt_7105AA00
		fldcw	[esp+4Ch+var_30]
		fistp	[esp+4Ch+var_34]
		fldcw	[esp+4Ch+var_2E]
		mov	ecx, [esp+4Ch+var_34]
		add	esp, 48h
		pop	ebx
		lea	eax, [ecx+eax]
		retn
; ---------------------------------------------------------------------------

loc_7102DEC6:				; CODE XREF: _ZNK12QSvgRenderer11defaultSizeEv+6Bj
		fnstcw	[esp+4Ch+var_2E]
		fld	st
		fsub	ds:flt_7105AA04
		movzx	eax, [esp+4Ch+var_2E]
		mov	ah, 0Ch
		mov	[esp+4Ch+var_30], ax
		fldcw	[esp+4Ch+var_30]
		fistp	[esp+4Ch+var_34]
		fldcw	[esp+4Ch+var_2E]
		mov	eax, [esp+4Ch+var_34]
		mov	[esp+4Ch+var_34], eax
		fild	[esp+4Ch+var_34]
		fsubp	st(1), st
		fadd	ds:flt_7105AA00
		fldcw	[esp+4Ch+var_30]
		fistp	[esp+4Ch+var_34]
		fldcw	[esp+4Ch+var_2E]
		mov	edx, [esp+4Ch+var_34]
		add	edx, eax
		jmp	loc_7102DDD7
_ZNK12QSvgRenderer11defaultSizeEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  30. _ZN12QSvgRenderer6renderEP8QPainterRK6QRectF

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QSvgRenderer6renderEP8QPainterRK6QRectF
_ZN12QSvgRenderer6renderEP8QPainterRK6QRectF proc near
					; CODE XREF: _ZN12QSvgRenderer18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv+67p
					; _ZN16QGraphicsSvgItem5paintEP8QPainterPK24QStyleOptionGraphicsItemP7QWidget+BBp

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax+4]
		mov	eax, [eax+4Ch]
		test	eax, eax
		jz	short loc_7102DF40
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	_ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF
; ---------------------------------------------------------------------------
		align 10h

loc_7102DF40:				; CODE XREF: _ZN12QSvgRenderer6renderEP8QPainterRK6QRectF+Fj
		add	esp, 0Ch
		retn
_ZN12QSvgRenderer6renderEP8QPainterRK6QRectF endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  31. _ZN12QSvgRenderer6renderEP8QPainterRK7QStringRK6QRectF

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QSvgRenderer6renderEP8QPainterRK7QStringRK6QRectF
_ZN12QSvgRenderer6renderEP8QPainterRK7QStringRK6QRectF proc near
					; CODE XREF: _ZN12QSvgRenderer18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv+4Ap
					; _ZN16QGraphicsSvgItem5paintEP8QPainterPK24QStyleOptionGraphicsItemP7QWidget+62p

arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 8
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax+4]
		mov	eax, [eax+4Ch]
		test	eax, eax
		jz	short loc_7102DF70
		mov	[esp+0Ch+arg_0], eax
		add	esp, 8
		pop	ebx
		jmp	_ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF
; ---------------------------------------------------------------------------
		align 10h

loc_7102DF70:				; CODE XREF: _ZN12QSvgRenderer6renderEP8QPainterRK7QStringRK6QRectF+10j
		add	esp, 8
		pop	ebx
		retn
_ZN12QSvgRenderer6renderEP8QPainterRK7QStringRK6QRectF endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  29. _ZN12QSvgRenderer6renderEP8QPainter

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QSvgRenderer6renderEP8QPainter
_ZN12QSvgRenderer6renderEP8QPainter proc near
					; CODE XREF: _ZN12QSvgRenderer18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv+7Cp
					; _ZN10QSvgWidget10paintEventEP11QPaintEvent+6Fp

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax+4]
		mov	eax, [eax+4Ch]
		test	eax, eax
		jz	short loc_7102DFA0
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	_ZN16QSvgTinyDocument4drawEP8QPainter
; ---------------------------------------------------------------------------
		align 10h

loc_7102DFA0:				; CODE XREF: _ZN12QSvgRenderer6renderEP8QPainter+Fj
		add	esp, 0Ch
		retn
_ZN12QSvgRenderer6renderEP8QPainter endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 106. _ZNK12QSvgRenderer8animatedEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK12QSvgRenderer8animatedEv
_ZNK12QSvgRenderer8animatedEv proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax+4]
		mov	eax, [eax+4Ch]
		test	eax, eax
		jz	short loc_7102DFD0
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	_ZNK16QSvgTinyDocument8animatedEv
; ---------------------------------------------------------------------------
		align 10h

loc_7102DFD0:				; CODE XREF: _ZNK12QSvgRenderer8animatedEv+Fj
		add	esp, 0Ch
		retn
_ZNK12QSvgRenderer8animatedEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  26. _ZN12QSvgRenderer4loadEP16QXmlStreamReader

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QSvgRenderer4loadEP16QXmlStreamReader
_ZN12QSvgRenderer4loadEP16QXmlStreamReader proc	near
					; CODE XREF: _ZN12QSvgRenderer18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv+8Fp
					; _ZN12QSvgRendererC1EP16QXmlStreamReaderP7QObject+B9p	...

var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_41		= byte ptr -41h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_7105391C
		mov	[ebp+var_18], offset sub_7102E16B
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+4]
		mov	eax, [edx+4Ch]
		mov	[ebp+var_40], edx
		test	eax, eax
		jz	short loc_7102E030
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 0FFFFFFFFh
		call	eax

loc_7102E030:				; CODE XREF: _ZN12QSvgRenderer4loadEP16QXmlStreamReader+3Dj
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	_ZN16QSvgTinyDocument4loadEP16QXmlStreamReader
		mov	ecx, [ebp+var_40]
		test	eax, eax
		mov	[ecx+4Ch], eax
		jz	loc_7102E0E8
		mov	[esp], eax
		call	_ZNK16QSvgTinyDocument8animatedEv
		test	al, al
		jz	loc_7102E0E8
		mov	eax, [ebp+var_40]
		mov	ecx, [eax+54h]
		test	ecx, ecx
		jle	short loc_7102E0E8
		mov	eax, [eax+50h]
		test	eax, eax
		jz	loc_7102E131
		mov	[esp], eax
		mov	[ebp+var_38], 0FFFFFFFFh
		call	ds:_ZN6QTimer4stopEv
		mov	edx, [ebp+var_40]
		mov	eax, [ebp+arg_0]
		mov	edx, [edx+50h]
		mov	[ebp+var_4C], eax
		mov	[ebp+var_48], edx

loc_7102E094:				; CODE XREF: _ZN12QSvgRenderer4loadEP16QXmlStreamReader+186j
		mov	ecx, [ebp+var_4C]
		mov	eax, [ebp+var_48]
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], offset a2repaintneeded ; "2repaintNeeded()"
		mov	[esp+8], ecx
		mov	dword ptr [esp+4], offset a2timeout ; "2timeout()"
		mov	[esp], eax
		mov	[ebp+var_38], 0FFFFFFFFh
		call	ds:_ZN7QObject7connectEPKS_PKcS1_S3_N2Qt14ConnectionTypeE
		mov	ecx, [ebp+var_40]
		mov	edx, 3E8h
		mov	eax, edx
		sar	edx, 1Fh
		idiv	dword ptr [ecx+54h]
		mov	[esp+4], eax
		mov	eax, [ecx+50h]
		mov	[esp], eax
		call	ds:_ZN6QTimer5startEi
		jmp	short loc_7102E102
; ---------------------------------------------------------------------------

loc_7102E0E8:				; CODE XREF: _ZN12QSvgRenderer4loadEP16QXmlStreamReader+6Aj
					; _ZN12QSvgRenderer4loadEP16QXmlStreamReader+7Aj ...
		mov	ecx, [ebp+var_40]
		mov	eax, [ecx+50h]
		test	eax, eax
		jz	short loc_7102E102
		mov	[esp], eax
		mov	[ebp+var_38], 0FFFFFFFFh
		call	ds:_ZN6QTimer4stopEv

loc_7102E102:				; CODE XREF: _ZN12QSvgRenderer4loadEP16QXmlStreamReader+106j
					; _ZN12QSvgRenderer4loadEP16QXmlStreamReader+110j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	_ZN12QSvgRenderer13repaintNeededEv
		mov	edx, [ebp+var_40]
		lea	eax, [ebp+var_3C]
		mov	edx, [edx+4Ch]
		mov	[esp], eax
		test	edx, edx
		setnz	[ebp+var_41]
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_41]
		leave
		retn
; ---------------------------------------------------------------------------

loc_7102E131:				; CODE XREF: _ZN12QSvgRenderer4loadEP16QXmlStreamReader+8Fj
		mov	dword ptr [esp], 18h ; size_t
		call	sub_710517F0
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_38], 1
		mov	[ebp+var_4C], ecx
		mov	[esp+4], ecx
		mov	[ebp+var_50], eax
		mov	[ebp+var_48], eax
		mov	[esp], eax
		call	ds:_ZN6QTimerC1EP7QObject
		mov	ecx, [ebp+var_50]
		mov	edx, [ebp+var_40]
		mov	[edx+50h], ecx
		jmp	loc_7102E094
_ZN12QSvgRenderer4loadEP16QXmlStreamReader endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102E16B	proc near		; DATA XREF: _ZN12QSvgRenderer4loadEP16QXmlStreamReader+20o
		add	ebp, 8
		mov	edx, [ebp-34h]
		mov	ecx, [ebp-50h]
		mov	[ebp-54h], edx
		mov	[esp+0], ecx
		call	sub_710517D0
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7102E16B	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  27. _ZN12QSvgRenderer4loadERK10QByteArray

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QSvgRenderer4loadERK10QByteArray
_ZN12QSvgRenderer4loadERK10QByteArray proc near
					; CODE XREF: _ZN12QSvgRenderer18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv+ABp
					; _ZN12QSvgRendererC1ERK10QByteArrayP7QObject+B9p ...

var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_41		= byte ptr -41h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_71053922
		mov	[ebp+var_18], offset sub_7102E32B
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+4]
		mov	eax, [edx+4Ch]
		mov	[ebp+var_40], edx
		test	eax, eax
		jz	short loc_7102E1F0
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 0FFFFFFFFh
		call	eax

loc_7102E1F0:				; CODE XREF: _ZN12QSvgRenderer4loadERK10QByteArray+3Dj
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	_ZN16QSvgTinyDocument4loadERK10QByteArray
		mov	ecx, [ebp+var_40]
		test	eax, eax
		mov	[ecx+4Ch], eax
		jz	loc_7102E2A8
		mov	[esp], eax
		call	_ZNK16QSvgTinyDocument8animatedEv
		test	al, al
		jz	loc_7102E2A8
		mov	eax, [ebp+var_40]
		mov	edx, [eax+54h]
		test	edx, edx
		jle	short loc_7102E2A8
		mov	eax, [eax+50h]
		test	eax, eax
		jz	loc_7102E2F1
		mov	[esp], eax
		mov	[ebp+var_38], 0FFFFFFFFh
		call	ds:_ZN6QTimer4stopEv
		mov	edx, [ebp+var_40]
		mov	eax, [ebp+arg_0]
		mov	edx, [edx+50h]
		mov	[ebp+var_4C], eax
		mov	[ebp+var_48], edx

loc_7102E254:				; CODE XREF: _ZN12QSvgRenderer4loadERK10QByteArray+186j
		mov	ecx, [ebp+var_4C]
		mov	eax, [ebp+var_48]
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], offset a2repaintneeded ; "2repaintNeeded()"
		mov	[esp+8], ecx
		mov	dword ptr [esp+4], offset a2timeout ; "2timeout()"
		mov	[esp], eax
		mov	[ebp+var_38], 0FFFFFFFFh
		call	ds:_ZN7QObject7connectEPKS_PKcS1_S3_N2Qt14ConnectionTypeE
		mov	ecx, [ebp+var_40]
		mov	edx, 3E8h
		mov	eax, edx
		sar	edx, 1Fh
		idiv	dword ptr [ecx+54h]
		mov	[esp+4], eax
		mov	eax, [ecx+50h]
		mov	[esp], eax
		call	ds:_ZN6QTimer5startEi
		jmp	short loc_7102E2C2
; ---------------------------------------------------------------------------

loc_7102E2A8:				; CODE XREF: _ZN12QSvgRenderer4loadERK10QByteArray+6Aj
					; _ZN12QSvgRenderer4loadERK10QByteArray+7Aj ...
		mov	ecx, [ebp+var_40]
		mov	eax, [ecx+50h]
		test	eax, eax
		jz	short loc_7102E2C2
		mov	[esp], eax
		mov	[ebp+var_38], 0FFFFFFFFh
		call	ds:_ZN6QTimer4stopEv

loc_7102E2C2:				; CODE XREF: _ZN12QSvgRenderer4loadERK10QByteArray+106j
					; _ZN12QSvgRenderer4loadERK10QByteArray+110j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	_ZN12QSvgRenderer13repaintNeededEv
		mov	edx, [ebp+var_40]
		mov	eax, [edx+4Ch]
		test	eax, eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		setnz	[ebp+var_41]
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_41]
		leave
		retn
; ---------------------------------------------------------------------------

loc_7102E2F1:				; CODE XREF: _ZN12QSvgRenderer4loadERK10QByteArray+8Fj
		mov	dword ptr [esp], 18h ; size_t
		call	sub_710517F0
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_38], 1
		mov	[ebp+var_4C], ecx
		mov	[esp+4], ecx
		mov	[ebp+var_50], eax
		mov	[ebp+var_48], eax
		mov	[esp], eax
		call	ds:_ZN6QTimerC1EP7QObject
		mov	ecx, [ebp+var_50]
		mov	edx, [ebp+var_40]
		mov	[edx+50h], ecx
		jmp	loc_7102E254
_ZN12QSvgRenderer4loadERK10QByteArray endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102E32B	proc near		; DATA XREF: _ZN12QSvgRenderer4loadERK10QByteArray+20o
		add	ebp, 8
		mov	edx, [ebp-34h]
		mov	ecx, [ebp-50h]
		mov	[ebp-54h], edx
		mov	[esp+0], ecx
		call	sub_710517D0
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7102E32B	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  28. _ZN12QSvgRenderer4loadERK7QString

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QSvgRenderer4loadERK7QString
_ZN12QSvgRenderer4loadERK7QString proc near
					; CODE XREF: _ZN12QSvgRenderer18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv+CAp
					; _ZN12QSvgRendererC1ERK7QStringP7QObject+B9p ...

var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_41		= byte ptr -41h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053928
		mov	[ebp+var_18], offset sub_7102E4EB
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+4]
		mov	eax, [edx+4Ch]
		mov	[ebp+var_40], edx
		test	eax, eax
		jz	short loc_7102E3B0
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 0FFFFFFFFh
		call	eax

loc_7102E3B0:				; CODE XREF: _ZN12QSvgRenderer4loadERK7QString+3Dj
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	_ZN16QSvgTinyDocument4loadERK7QString
		mov	ecx, [ebp+var_40]
		test	eax, eax
		mov	[ecx+4Ch], eax
		jz	loc_7102E468
		mov	[esp], eax
		call	_ZNK16QSvgTinyDocument8animatedEv
		test	al, al
		jz	loc_7102E468
		mov	eax, [ebp+var_40]
		mov	edx, [eax+54h]
		test	edx, edx
		jle	short loc_7102E468
		mov	eax, [eax+50h]
		test	eax, eax
		jz	loc_7102E4B1
		mov	[esp], eax
		mov	[ebp+var_38], 0FFFFFFFFh
		call	ds:_ZN6QTimer4stopEv
		mov	edx, [ebp+var_40]
		mov	eax, [ebp+arg_0]
		mov	edx, [edx+50h]
		mov	[ebp+var_4C], eax
		mov	[ebp+var_48], edx

loc_7102E414:				; CODE XREF: _ZN12QSvgRenderer4loadERK7QString+186j
		mov	ecx, [ebp+var_4C]
		mov	eax, [ebp+var_48]
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], offset a2repaintneeded ; "2repaintNeeded()"
		mov	[esp+8], ecx
		mov	dword ptr [esp+4], offset a2timeout ; "2timeout()"
		mov	[esp], eax
		mov	[ebp+var_38], 0FFFFFFFFh
		call	ds:_ZN7QObject7connectEPKS_PKcS1_S3_N2Qt14ConnectionTypeE
		mov	ecx, [ebp+var_40]
		mov	edx, 3E8h
		mov	eax, edx
		sar	edx, 1Fh
		idiv	dword ptr [ecx+54h]
		mov	[esp+4], eax
		mov	eax, [ecx+50h]
		mov	[esp], eax
		call	ds:_ZN6QTimer5startEi
		jmp	short loc_7102E482
; ---------------------------------------------------------------------------

loc_7102E468:				; CODE XREF: _ZN12QSvgRenderer4loadERK7QString+6Aj
					; _ZN12QSvgRenderer4loadERK7QString+7Aj ...
		mov	ecx, [ebp+var_40]
		mov	eax, [ecx+50h]
		test	eax, eax
		jz	short loc_7102E482
		mov	[esp], eax
		mov	[ebp+var_38], 0FFFFFFFFh
		call	ds:_ZN6QTimer4stopEv

loc_7102E482:				; CODE XREF: _ZN12QSvgRenderer4loadERK7QString+106j
					; _ZN12QSvgRenderer4loadERK7QString+110j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	_ZN12QSvgRenderer13repaintNeededEv
		mov	edx, [ebp+var_40]
		lea	eax, [ebp+var_3C]
		mov	ecx, [edx+4Ch]
		mov	[esp], eax
		test	ecx, ecx
		setnz	[ebp+var_41]
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_41]
		leave
		retn
; ---------------------------------------------------------------------------

loc_7102E4B1:				; CODE XREF: _ZN12QSvgRenderer4loadERK7QString+8Fj
		mov	dword ptr [esp], 18h ; size_t
		call	sub_710517F0
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_38], 1
		mov	[ebp+var_4C], ecx
		mov	[esp+4], ecx
		mov	[ebp+var_50], eax
		mov	[ebp+var_48], eax
		mov	[esp], eax
		call	ds:_ZN6QTimerC1EP7QObject
		mov	ecx, [ebp+var_50]
		mov	edx, [ebp+var_40]
		mov	[edx+50h], ecx
		jmp	loc_7102E414
_ZN12QSvgRenderer4loadERK7QString endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102E4EB	proc near		; DATA XREF: _ZN12QSvgRenderer4loadERK7QString+20o
		add	ebp, 8
		mov	edx, [ebp-34h]
		mov	ecx, [ebp-50h]
		mov	[ebp-54h], edx
		mov	[esp+0], ecx
		call	sub_710517D0
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7102E4EB	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  23. _ZN12QSvgRenderer18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QSvgRenderer18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv
_ZN12QSvgRenderer18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv	proc near
					; CODE XREF: _ZN12QSvgRenderer11qt_metacallEN11QMetaObject4CallEiPPv+D3p
					; DATA XREF: .rdata:7105A7A0o

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= qword	ptr -2Ch
var_24		= qword	ptr -24h
var_1C		= qword	ptr -1Ch
var_14		= qword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebx
		sub	esp, 38h
		mov	ecx, [esp+3Ch+arg_4]
		mov	edx, [esp+3Ch+arg_0]
		mov	eax, [esp+3Ch+arg_8]
		mov	ebx, [esp+3Ch+arg_C]
		test	ecx, ecx
		jnz	short loc_7102E53D ; jumptable 7102E542	default	case
		cmp	eax, 7		; switch 8 cases
		jbe	short loc_7102E542

loc_7102E53D:				; CODE XREF: _ZN12QSvgRenderer18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv+16j
					; _ZN12QSvgRenderer18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv+6Cj ...
		add	esp, 38h	; jumptable 7102E542 default case
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_7102E542:				; CODE XREF: _ZN12QSvgRenderer18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv+1Bj
		jmp	ds:off_7105A73C[eax*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_7102E550:				; CODE XREF: _ZN12QSvgRenderer18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv:loc_7102E542j
					; DATA XREF: .rdata:off_7105A73Co
		mov	eax, [ebx+0Ch]	; jumptable 7102E542 case 6

loc_7102E553:				; CODE XREF: _ZN12QSvgRenderer18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv+106j
		mov	[esp+3Ch+var_30], eax
		mov	eax, [ebx+8]
		mov	[esp+3Ch+var_34], eax
		mov	eax, [ebx+4]
		mov	eax, [eax]
		mov	[esp+3Ch+var_3C], edx
		mov	[esp+3Ch+var_38], eax
		call	_ZN12QSvgRenderer6renderEP8QPainterRK7QStringRK6QRectF
		add	esp, 38h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_7102E574:				; CODE XREF: _ZN12QSvgRenderer18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv:loc_7102E542j
					; DATA XREF: .rdata:off_7105A73Co
		mov	eax, [ebx+8]	; jumptable 7102E542 case 5
		mov	[esp+3Ch+var_34], eax
		mov	eax, [ebx+4]
		mov	eax, [eax]
		mov	[esp+3Ch+var_3C], edx
		mov	[esp+3Ch+var_38], eax
		call	_ZN12QSvgRenderer6renderEP8QPainterRK6QRectF
		jmp	short loc_7102E53D ; jumptable 7102E542	default	case
; ---------------------------------------------------------------------------
		align 10h

loc_7102E590:				; CODE XREF: _ZN12QSvgRenderer18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv:loc_7102E542j
					; DATA XREF: .rdata:off_7105A73Co
		mov	eax, [ebx+4]	; jumptable 7102E542 case 4
		mov	eax, [eax]
		mov	[esp+3Ch+var_3C], edx
		mov	[esp+3Ch+var_38], eax
		call	_ZN12QSvgRenderer6renderEP8QPainter
		jmp	short loc_7102E53D ; jumptable 7102E542	default	case
; ---------------------------------------------------------------------------

loc_7102E5A3:				; CODE XREF: _ZN12QSvgRenderer18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv:loc_7102E542j
					; DATA XREF: .rdata:off_7105A73Co
		mov	eax, [ebx+4]	; jumptable 7102E542 case 3
		mov	eax, [eax]
		mov	[esp+3Ch+var_3C], edx
		mov	[esp+3Ch+var_38], eax
		call	_ZN12QSvgRenderer4loadEP16QXmlStreamReader
		mov	edx, [ebx]
		test	edx, edx
		jz	short loc_7102E53D ; jumptable 7102E542	default	case
		mov	[edx], al

loc_7102E5BC:				; CODE XREF: _ZN12QSvgRenderer18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv+BCj
					; _ZN12QSvgRenderer18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv+DBj
		add	esp, 38h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_7102E5C1:				; CODE XREF: _ZN12QSvgRenderer18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv:loc_7102E542j
					; DATA XREF: .rdata:off_7105A73Co
		mov	eax, [ebx+4]	; jumptable 7102E542 case 2
		mov	[esp+3Ch+var_3C], edx
		mov	[esp+3Ch+var_38], eax
		call	_ZN12QSvgRenderer4loadERK10QByteArray
		mov	edx, [ebx]
		test	edx, edx
		jz	loc_7102E53D	; jumptable 7102E542 default case
		mov	[edx], al
		jmp	short loc_7102E5BC
; ---------------------------------------------------------------------------
		align 10h

loc_7102E5E0:				; CODE XREF: _ZN12QSvgRenderer18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv:loc_7102E542j
					; DATA XREF: .rdata:off_7105A73Co
		mov	eax, [ebx+4]	; jumptable 7102E542 case 1
		mov	[esp+3Ch+var_3C], edx
		mov	[esp+3Ch+var_38], eax
		call	_ZN12QSvgRenderer4loadERK7QString
		mov	edx, [ebx]
		test	edx, edx
		jz	loc_7102E53D	; jumptable 7102E542 default case
		mov	[edx], al
		jmp	short loc_7102E5BC
; ---------------------------------------------------------------------------
		align 10h

loc_7102E600:				; CODE XREF: _ZN12QSvgRenderer18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv:loc_7102E542j
					; DATA XREF: .rdata:off_7105A73Co
		mov	[esp+3Ch+var_3C], edx ;	jumptable 7102E542 case	0
		call	_ZN12QSvgRenderer13repaintNeededEv
		jmp	loc_7102E53D	; jumptable 7102E542 default case
; ---------------------------------------------------------------------------
		align 10h

loc_7102E610:				; CODE XREF: _ZN12QSvgRenderer18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv:loc_7102E542j
					; DATA XREF: .rdata:off_7105A73Co
		fldz			; jumptable 7102E542 case 7
		fst	[esp+3Ch+var_24]
		lea	eax, [esp+3Ch+var_2C]
		fst	[esp+3Ch+var_2C]
		fst	[esp+3Ch+var_14]
		fstp	[esp+3Ch+var_1C]
		jmp	loc_7102E553
_ZN12QSvgRenderer18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  21. _ZN12QSvgRenderer15setCurrentFrameEi

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QSvgRenderer15setCurrentFrameEi
_ZN12QSvgRenderer15setCurrentFrameEi proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax+4]
		mov	eax, [eax+4Ch]
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	_ZN16QSvgTinyDocument15setCurrentFrameEi
_ZN12QSvgRenderer15setCurrentFrameEi endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  98. _ZNK12QSvgRenderer12currentFrameEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK12QSvgRenderer12currentFrameEv
_ZNK12QSvgRenderer12currentFrameEv proc	near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax+4]
		mov	eax, [eax+4Ch]
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	_ZNK16QSvgTinyDocument12currentFrameEv
_ZNK12QSvgRenderer12currentFrameEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  24. _ZN12QSvgRenderer18setFramesPerSecondEi

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QSvgRenderer18setFramesPerSecondEi
_ZN12QSvgRenderer18setFramesPerSecondEi	proc near
					; CODE XREF: _ZN12QSvgRenderer11qt_metacallEN11QMetaObject4CallEiPPv+18Ep

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_4]
		mov	edx, [esp+0Ch+arg_0]
		test	eax, eax
		mov	edx, [edx+4]
		js	short loc_7102E690
		mov	[edx+54h], eax
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7102E690:				; CODE XREF: _ZN12QSvgRenderer18setFramesPerSecondEi+10j
		mov	eax, ds:_Z8qWarningPKcz
		mov	[esp+0Ch+arg_0], offset	aQsvgrendererSe	; "QSvgRenderer::setFramesPerSecond: Canno"...
		add	esp, 0Ch
		jmp	eax
_ZN12QSvgRenderer18setFramesPerSecondEi	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  40. _ZN12QSvgRendererD0Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QSvgRendererD0Ev
_ZN12QSvgRendererD0Ev proc near		; DATA XREF: .rdata:7105D658o

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_7105D648
		mov	[esp+1Ch+var_1C], ebx
		call	ds:_ZN7QObjectD2Ev
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_710517D0
_ZN12QSvgRendererD0Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  41. _ZN12QSvgRendererD1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QSvgRendererD1Ev
_ZN12QSvgRendererD1Ev proc near		; DATA XREF: .rdata:7105D654o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105D648
		mov	eax, ds:_ZN7QObjectD2Ev
		add	esp, 0Ch
		jmp	eax
_ZN12QSvgRendererD1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  42. _ZN12QSvgRendererD2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QSvgRendererD2Ev
_ZN12QSvgRendererD2Ev proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105D648
		mov	eax, ds:_ZN7QObjectD2Ev
		add	esp, 0Ch
		jmp	eax
_ZN12QSvgRendererD2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  37. _ZN12QSvgRendererC2EP7QObject

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QSvgRendererC2EP7QObject
_ZN12QSvgRendererC2EP7QObject proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_7105392E
		mov	[ebp+var_18], offset sub_7102E7D2
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 58h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_710517F0
		mov	dword ptr [esp+4], 40806h
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	ds:_ZN14QObjectPrivateC2Ei
		mov	eax, [ebp+var_40]
		mov	dword ptr [eax], offset	off_7105DA58
		mov	dword ptr [eax+4Ch], 0
		mov	dword ptr [eax+50h], 0
		mov	dword ptr [eax+54h], 1Eh
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+var_40]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	ds:_ZN7QObjectC2ER14QObjectPrivatePS_
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D648
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN12QSvgRendererC2EP7QObject endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102E7D2	proc near		; DATA XREF: _ZN12QSvgRendererC2EP7QObject+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	[ebp-44h], eax
		mov	eax, [ebp-40h]
		mov	[esp+0], eax
		call	sub_710517D0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7102E7D2	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  32. _ZN12QSvgRendererC1EP16QXmlStreamReaderP7QObject

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QSvgRendererC1EP16QXmlStreamReaderP7QObject
_ZN12QSvgRendererC1EP16QXmlStreamReaderP7QObject proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053940
		mov	[ebp+var_18], offset sub_7102E8CB
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 58h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_710517F0
		mov	dword ptr [esp+4], 40806h
		mov	[ebp+var_38], 2
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	ds:_ZN14QObjectPrivateC2Ei
		mov	eax, [ebp+var_40]
		mov	dword ptr [eax], offset	off_7105DA58
		mov	dword ptr [eax+4Ch], 0
		mov	dword ptr [eax+50h], 0
		mov	dword ptr [eax+54h], 1Eh
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+var_40]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	ds:_ZN7QObjectC2ER14QObjectPrivatePS_
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D648
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	_ZN12QSvgRenderer4loadEP16QXmlStreamReader
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN12QSvgRendererC1EP16QXmlStreamReaderP7QObject endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102E8CB	proc near		; DATA XREF: _ZN12QSvgRendererC1EP16QXmlStreamReaderP7QObject+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], eax
		jz	short loc_7102E8FF
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	ds:_ZN7QObjectD2Ev
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7102E8FF:				; CODE XREF: sub_7102E8CB+Dj
		mov	eax, [ebp-40h]
		mov	[esp+0], eax
		call	sub_710517D0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7102E8CB	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  36. _ZN12QSvgRendererC2EP16QXmlStreamReaderP7QObject

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QSvgRendererC2EP16QXmlStreamReaderP7QObject
_ZN12QSvgRendererC2EP16QXmlStreamReaderP7QObject proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053948
		mov	[ebp+var_18], offset sub_7102E9EB
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 58h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_710517F0
		mov	dword ptr [esp+4], 40806h
		mov	[ebp+var_38], 2
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	ds:_ZN14QObjectPrivateC2Ei
		mov	eax, [ebp+var_40]
		mov	dword ptr [eax], offset	off_7105DA58
		mov	dword ptr [eax+4Ch], 0
		mov	dword ptr [eax+50h], 0
		mov	dword ptr [eax+54h], 1Eh
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+var_40]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	ds:_ZN7QObjectC2ER14QObjectPrivatePS_
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D648
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	_ZN12QSvgRenderer4loadEP16QXmlStreamReader
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN12QSvgRendererC2EP16QXmlStreamReaderP7QObject endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102E9EB	proc near		; DATA XREF: _ZN12QSvgRendererC2EP16QXmlStreamReaderP7QObject+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], eax
		jz	short loc_7102EA1F
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	ds:_ZN7QObjectD2Ev
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7102EA1F:				; CODE XREF: sub_7102E9EB+Dj
		mov	eax, [ebp-40h]
		mov	[esp+0], eax
		call	sub_710517D0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7102E9EB	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  34. _ZN12QSvgRendererC1ERK10QByteArrayP7QObject

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QSvgRendererC1ERK10QByteArrayP7QObject
_ZN12QSvgRendererC1ERK10QByteArrayP7QObject proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053950
		mov	[ebp+var_18], offset sub_7102EB0B
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 58h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_710517F0
		mov	dword ptr [esp+4], 40806h
		mov	[ebp+var_38], 2
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	ds:_ZN14QObjectPrivateC2Ei
		mov	eax, [ebp+var_40]
		mov	dword ptr [eax], offset	off_7105DA58
		mov	dword ptr [eax+4Ch], 0
		mov	dword ptr [eax+50h], 0
		mov	dword ptr [eax+54h], 1Eh
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+var_40]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	ds:_ZN7QObjectC2ER14QObjectPrivatePS_
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D648
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	_ZN12QSvgRenderer4loadERK10QByteArray
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN12QSvgRendererC1ERK10QByteArrayP7QObject endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102EB0B	proc near		; DATA XREF: _ZN12QSvgRendererC1ERK10QByteArrayP7QObject+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], eax
		jz	short loc_7102EB3F
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	ds:_ZN7QObjectD2Ev
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7102EB3F:				; CODE XREF: sub_7102EB0B+Dj
		mov	eax, [ebp-40h]
		mov	[esp+0], eax
		call	sub_710517D0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7102EB0B	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  38. _ZN12QSvgRendererC2ERK10QByteArrayP7QObject

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QSvgRendererC2ERK10QByteArrayP7QObject
_ZN12QSvgRendererC2ERK10QByteArrayP7QObject proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053958
		mov	[ebp+var_18], offset sub_7102EC2B
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 58h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_710517F0
		mov	dword ptr [esp+4], 40806h
		mov	[ebp+var_38], 2
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	ds:_ZN14QObjectPrivateC2Ei
		mov	eax, [ebp+var_40]
		mov	dword ptr [eax], offset	off_7105DA58
		mov	dword ptr [eax+4Ch], 0
		mov	dword ptr [eax+50h], 0
		mov	dword ptr [eax+54h], 1Eh
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+var_40]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	ds:_ZN7QObjectC2ER14QObjectPrivatePS_
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D648
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	_ZN12QSvgRenderer4loadERK10QByteArray
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN12QSvgRendererC2ERK10QByteArrayP7QObject endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102EC2B	proc near		; DATA XREF: _ZN12QSvgRendererC2ERK10QByteArrayP7QObject+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], eax
		jz	short loc_7102EC5F
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	ds:_ZN7QObjectD2Ev
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7102EC5F:				; CODE XREF: sub_7102EC2B+Dj
		mov	eax, [ebp-40h]
		mov	[esp+0], eax
		call	sub_710517D0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7102EC2B	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  35. _ZN12QSvgRendererC1ERK7QStringP7QObject

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QSvgRendererC1ERK7QStringP7QObject
_ZN12QSvgRendererC1ERK7QStringP7QObject	proc near
					; CODE XREF: _ZN10QSvgWidgetC1ERK7QStringP7QWidget+D3p
					; _ZN10QSvgWidgetC2ERK7QStringP7QWidget+D3p

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053960
		mov	[ebp+var_18], offset sub_7102ED4B
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 58h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_710517F0
		mov	dword ptr [esp+4], 40806h
		mov	[ebp+var_38], 2
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	ds:_ZN14QObjectPrivateC2Ei
		mov	eax, [ebp+var_40]
		mov	dword ptr [eax], offset	off_7105DA58
		mov	dword ptr [eax+4Ch], 0
		mov	dword ptr [eax+50h], 0
		mov	dword ptr [eax+54h], 1Eh
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+var_40]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	ds:_ZN7QObjectC2ER14QObjectPrivatePS_
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D648
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	_ZN12QSvgRenderer4loadERK7QString
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN12QSvgRendererC1ERK7QStringP7QObject	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102ED4B	proc near		; DATA XREF: _ZN12QSvgRendererC1ERK7QStringP7QObject+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], eax
		jz	short loc_7102ED7F
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	ds:_ZN7QObjectD2Ev
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7102ED7F:				; CODE XREF: sub_7102ED4B+Dj
		mov	eax, [ebp-40h]
		mov	[esp+0], eax
		call	sub_710517D0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7102ED4B	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  39. _ZN12QSvgRendererC2ERK7QStringP7QObject

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QSvgRendererC2ERK7QStringP7QObject
_ZN12QSvgRendererC2ERK7QStringP7QObject	proc near

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053968
		mov	[ebp+var_18], offset sub_7102EE6B
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 58h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_710517F0
		mov	dword ptr [esp+4], 40806h
		mov	[ebp+var_38], 2
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	ds:_ZN14QObjectPrivateC2Ei
		mov	eax, [ebp+var_40]
		mov	dword ptr [eax], offset	off_7105DA58
		mov	dword ptr [eax+4Ch], 0
		mov	dword ptr [eax+50h], 0
		mov	dword ptr [eax+54h], 1Eh
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+var_40]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	ds:_ZN7QObjectC2ER14QObjectPrivatePS_
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D648
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	_ZN12QSvgRenderer4loadERK7QString
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN12QSvgRendererC2ERK7QStringP7QObject	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102EE6B	proc near		; DATA XREF: _ZN12QSvgRendererC2ERK7QStringP7QObject+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], eax
		jz	short loc_7102EE9F
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	ds:_ZN7QObjectD2Ev
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7102EE9F:				; CODE XREF: sub_7102EE6B+Dj
		mov	eax, [ebp-40h]
		mov	[esp+0], eax
		call	sub_710517D0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7102EE6B	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  33. _ZN12QSvgRendererC1EP7QObject

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN12QSvgRendererC1EP7QObject
_ZN12QSvgRendererC1EP7QObject proc near	; CODE XREF: _ZN10QSvgWidgetC1EP7QWidget+CCp
					; _ZN10QSvgWidgetC2EP7QWidget+CCp ...

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053970
		mov	[ebp+var_18], offset sub_7102EF72
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 58h ; size_t
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_710517F0
		mov	dword ptr [esp+4], 40806h
		mov	[ebp+var_38], 1
		mov	[ebp+var_40], eax
		mov	[esp], eax
		call	ds:_ZN14QObjectPrivateC2Ei
		mov	eax, [ebp+var_40]
		mov	dword ptr [eax], offset	off_7105DA58
		mov	dword ptr [eax+4Ch], 0
		mov	dword ptr [eax+50h], 0
		mov	dword ptr [eax+54h], 1Eh
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+var_40]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	ds:_ZN7QObjectC2ER14QObjectPrivatePS_
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D648
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN12QSvgRendererC1EP7QObject endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102EF72	proc near		; DATA XREF: _ZN12QSvgRendererC1EP7QObject+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	[ebp-44h], eax
		mov	eax, [ebp-40h]
		mov	[esp+0], eax
		call	sub_710517D0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7102EF72	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 105. _ZNK12QSvgRenderer7viewBoxEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK12QSvgRenderer7viewBoxEv
_ZNK12QSvgRenderer7viewBoxEv proc near

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= word ptr -30h
var_2E		= word ptr -2Eh
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		push	esi
		push	ebx
		sub	esp, 40h
		mov	eax, [esp+4Ch+arg_4]
		mov	esi, [esp+4Ch+arg_0]
		mov	eax, [eax+4]
		mov	ebx, [eax+4Ch]
		test	ebx, ebx
		jz	loc_7102F271
		fld	qword ptr [ebx+0A8h]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		sahf
		jp	short loc_7102EFD7
		jz	loc_7102F120
		fstp	st(1)
		jmp	short loc_7102EFE0
; ---------------------------------------------------------------------------

loc_7102EFD7:				; CODE XREF: _ZNK12QSvgRenderer7viewBoxEv+2Bj
		fstp	st(1)
		lea	esi, [esi+0]

loc_7102EFE0:				; CODE XREF: _ZNK12QSvgRenderer7viewBoxEv+35j
					; _ZNK12QSvgRenderer7viewBoxEv+206j
		fld	qword ptr [ebx+0B0h]
		jmp	short loc_7102EFF0
; ---------------------------------------------------------------------------

loc_7102EFE8:				; CODE XREF: _ZNK12QSvgRenderer7viewBoxEv+18Dj
		fxch	st(1)
		jmp	short loc_7102EFF0
; ---------------------------------------------------------------------------

loc_7102EFEC:				; CODE XREF: _ZNK12QSvgRenderer7viewBoxEv+193j
		fxch	st(1)
		xchg	ax, ax

loc_7102EFF0:				; CODE XREF: _ZNK12QSvgRenderer7viewBoxEv+46j
					; _ZNK12QSvgRenderer7viewBoxEv+4Aj
		fld	qword ptr [ebx+98h]
		fld	qword ptr [ebx+0A0h]
		fldz
		fxch	st(3)
		fucom	st(3)
		fnstsw	ax
		fstp	st(3)
		sahf
		jnb	loc_7102F0F0
		fnstcw	[esp+4Ch+var_2E]
		fld	st(2)
		fsub	ds:flt_7105AA04
		movzx	eax, [esp+4Ch+var_2E]
		mov	ah, 0Ch
		mov	[esp+4Ch+var_30], ax
		fldcw	[esp+4Ch+var_30]
		fistp	[esp+4Ch+var_34]
		fldcw	[esp+4Ch+var_2E]
		mov	eax, [esp+4Ch+var_34]
		mov	[esp+4Ch+var_34], eax
		fild	[esp+4Ch+var_34]
		fsubp	st(3), st
		fxch	st(2)
		fadd	ds:flt_7105AA00
		fldcw	[esp+4Ch+var_30]
		fistp	[esp+4Ch+var_34]
		fldcw	[esp+4Ch+var_2E]
		mov	ecx, [esp+4Ch+var_34]
		add	ecx, eax

loc_7102F059:				; CODE XREF: _ZNK12QSvgRenderer7viewBoxEv+178j
		fldz
		fxch	st(3)
		fucom	st(3)
		fnstsw	ax
		fstp	st(3)
		sahf
		jb	loc_7102F230
		fxch	st(2)
		fadd	ds:flt_7105AA00
		fldcw	[esp+4Ch+var_30]
		fistp	[esp+4Ch+var_34]
		fldcw	[esp+4Ch+var_2E]
		mov	ebx, [esp+4Ch+var_34]

loc_7102F082:				; CODE XREF: _ZNK12QSvgRenderer7viewBoxEv+2CCj
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jb	loc_7102F1F0
		fadd	ds:flt_7105AA00
		fldcw	[esp+4Ch+var_30]
		fistp	[esp+4Ch+var_34]
		fldcw	[esp+4Ch+var_2E]
		mov	edx, [esp+4Ch+var_34]

loc_7102F0A9:				; CODE XREF: _ZNK12QSvgRenderer7viewBoxEv+28Aj
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jb	loc_7102F1B0
		fadd	ds:flt_7105AA00
		fldcw	[esp+4Ch+var_30]
		fistp	[esp+4Ch+var_34]
		fldcw	[esp+4Ch+var_2E]
		mov	eax, [esp+4Ch+var_34]

loc_7102F0D0:				; CODE XREF: _ZNK12QSvgRenderer7viewBoxEv+24Bj
		mov	[esi], eax
		lea	eax, [ebx+eax-1]
		mov	[esi+8], eax
		lea	eax, [ecx+edx-1]
		mov	[esi+0Ch], eax
		mov	eax, esi
		mov	[esi+4], edx
		add	esp, 40h
		pop	ebx
		pop	esi
		pop	edi
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_7102F0F0:				; CODE XREF: _ZNK12QSvgRenderer7viewBoxEv+67j
		fxch	st(2)
		fnstcw	[esp+4Ch+var_2E]
		fadd	ds:flt_7105AA00
		movzx	eax, [esp+4Ch+var_2E]
		mov	ah, 0Ch
		mov	[esp+4Ch+var_30], ax
		fldcw	[esp+4Ch+var_30]
		fistp	[esp+4Ch+var_34]
		fldcw	[esp+4Ch+var_2E]
		mov	ecx, [esp+4Ch+var_34]
		jmp	loc_7102F059
; ---------------------------------------------------------------------------
		align 10h

loc_7102F120:				; CODE XREF: _ZNK12QSvgRenderer7viewBoxEv+2Dj
		fld	qword ptr [ebx+0B0h]
		fucom	st(2)
		fnstsw	ax
		fstp	st(2)
		sahf
		jnz	loc_7102EFE8
		jp	loc_7102EFEC
		fstp	st
		fstp	st
		lea	eax, [esp+4Ch+var_2C]
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_48], ebx
		call	sub_71022860
		sub	esp, 4
		mov	eax, [esp+4Ch+var_2C]
		mov	[ebx+98h], eax
		mov	eax, [esp+4Ch+var_28]
		mov	[ebx+9Ch], eax
		mov	eax, [esp+4Ch+var_24]
		mov	[ebx+0A0h], eax
		mov	eax, [esp+4Ch+var_20]
		mov	[ebx+0A4h], eax
		mov	eax, [esp+4Ch+var_1C]
		mov	[ebx+0A8h], eax
		mov	eax, [esp+4Ch+var_18]
		mov	[ebx+0ACh], eax
		mov	eax, [esp+4Ch+var_14]
		fld	qword ptr [ebx+0A8h]
		mov	[ebx+0B0h], eax
		mov	eax, [esp+4Ch+var_10]
		mov	[ebx+0B4h], eax
		jmp	loc_7102EFE0
; ---------------------------------------------------------------------------
		align 10h

loc_7102F1B0:				; CODE XREF: _ZNK12QSvgRenderer7viewBoxEv+114j
		fld	st
		fsub	ds:flt_7105AA04
		fldcw	[esp+4Ch+var_30]
		fistp	[esp+4Ch+var_34]
		fldcw	[esp+4Ch+var_2E]
		mov	eax, [esp+4Ch+var_34]
		mov	[esp+4Ch+var_34], eax
		fild	[esp+4Ch+var_34]
		fsubp	st(1), st
		fadd	ds:flt_7105AA00
		fldcw	[esp+4Ch+var_30]
		fistp	[esp+4Ch+var_34]
		fldcw	[esp+4Ch+var_2E]
		mov	edi, [esp+4Ch+var_34]
		lea	eax, [edi+eax]
		jmp	loc_7102F0D0
; ---------------------------------------------------------------------------

loc_7102F1F0:				; CODE XREF: _ZNK12QSvgRenderer7viewBoxEv+EDj
		fld	st
		fsub	ds:flt_7105AA04
		fldcw	[esp+4Ch+var_30]
		fistp	[esp+4Ch+var_34]
		fldcw	[esp+4Ch+var_2E]
		mov	eax, [esp+4Ch+var_34]
		mov	[esp+4Ch+var_34], eax
		fild	[esp+4Ch+var_34]
		fsubp	st(1), st
		fadd	ds:flt_7105AA00
		fldcw	[esp+4Ch+var_30]
		fistp	[esp+4Ch+var_34]
		fldcw	[esp+4Ch+var_2E]
		mov	edx, [esp+4Ch+var_34]
		add	edx, eax
		jmp	loc_7102F0A9
; ---------------------------------------------------------------------------
		align 10h

loc_7102F230:				; CODE XREF: _ZNK12QSvgRenderer7viewBoxEv+C4j
		fld	st(2)
		fsub	ds:flt_7105AA04
		fldcw	[esp+4Ch+var_30]
		fistp	[esp+4Ch+var_34]
		fldcw	[esp+4Ch+var_2E]
		mov	eax, [esp+4Ch+var_34]
		mov	[esp+4Ch+var_34], eax
		fild	[esp+4Ch+var_34]
		fsubp	st(3), st
		fxch	st(2)
		fadd	ds:flt_7105AA00
		fldcw	[esp+4Ch+var_30]
		fistp	[esp+4Ch+var_34]
		fldcw	[esp+4Ch+var_2E]
		mov	ebx, [esp+4Ch+var_34]
		add	ebx, eax
		jmp	loc_7102F082
; ---------------------------------------------------------------------------

loc_7102F271:				; CODE XREF: _ZNK12QSvgRenderer7viewBoxEv+16j
		mov	dword ptr [esi+4], 0
		mov	eax, esi
		mov	dword ptr [esi], 0
		mov	dword ptr [esi+0Ch], 0FFFFFFFFh
		mov	dword ptr [esi+8], 0FFFFFFFFh
		add	esp, 40h
		pop	ebx
		pop	esi
		pop	edi
		retn	4
_ZNK12QSvgRenderer7viewBoxEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 107. _ZNK12QSvgRenderer8viewBoxFEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK12QSvgRenderer8viewBoxFEv
_ZNK12QSvgRenderer8viewBoxFEv proc near	; CODE XREF: _ZN12QSvgRenderer11qt_metacallEN11QMetaObject4CallEiPPv+FFp

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 34h
		mov	eax, [esp+3Ch+arg_4]
		mov	esi, [esp+3Ch+arg_0]
		mov	eax, [eax+4]
		mov	ebx, [eax+4Ch]
		test	ebx, ebx
		jz	loc_7102F3A0
		fld	qword ptr [ebx+0A8h]
		fldz
		fxch	st(1)
		fucomp	st(1)
		fnstsw	ax
		sahf
		jz	short loc_7102F323
		fstp	st
		jmp	short loc_7102F2D2
; ---------------------------------------------------------------------------

loc_7102F2D0:				; CODE XREF: _ZNK12QSvgRenderer8viewBoxFEv:loc_7102F323j
		fstp	st

loc_7102F2D2:				; CODE XREF: _ZNK12QSvgRenderer8viewBoxFEv+2Ej
					; _ZNK12QSvgRenderer8viewBoxFEv+90j ...
		mov	eax, [ebx+98h]
		mov	[esi], eax
		mov	eax, [ebx+9Ch]
		mov	[esi+4], eax
		mov	eax, [ebx+0A0h]
		mov	[esi+8], eax
		mov	eax, [ebx+0A4h]
		mov	[esi+0Ch], eax
		mov	eax, [ebx+0A8h]
		mov	[esi+10h], eax
		mov	eax, [ebx+0ACh]
		mov	[esi+14h], eax
		mov	eax, [ebx+0B0h]
		mov	[esi+18h], eax
		mov	eax, [ebx+0B4h]
		mov	[esi+1Ch], eax
		mov	eax, esi
		add	esp, 34h
		pop	ebx
		pop	esi
		retn	4
; ---------------------------------------------------------------------------

loc_7102F323:				; CODE XREF: _ZNK12QSvgRenderer8viewBoxFEv+2Aj
		jp	short loc_7102F2D0
		fld	qword ptr [ebx+0B0h]
		fucompp
		fnstsw	ax
		sahf
		jnz	short loc_7102F2D2
		jp	short loc_7102F2D2
		lea	eax, [esp+3Ch+var_2C]
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_38], ebx
		call	sub_71022860
		sub	esp, 4
		mov	eax, [esp+3Ch+var_2C]
		mov	[ebx+98h], eax
		mov	eax, [esp+3Ch+var_28]
		mov	[ebx+9Ch], eax
		mov	eax, [esp+3Ch+var_24]
		mov	[ebx+0A0h], eax
		mov	eax, [esp+3Ch+var_20]
		mov	[ebx+0A4h], eax
		mov	eax, [esp+3Ch+var_1C]
		mov	[ebx+0A8h], eax
		mov	eax, [esp+3Ch+var_18]
		mov	[ebx+0ACh], eax
		mov	eax, [esp+3Ch+var_14]
		mov	[ebx+0B0h], eax
		mov	eax, [esp+3Ch+var_10]
		mov	[ebx+0B4h], eax
		jmp	loc_7102F2D2
; ---------------------------------------------------------------------------
		align 10h

loc_7102F3A0:				; CODE XREF: _ZNK12QSvgRenderer8viewBoxFEv+15j
		fldz
		mov	eax, esi
		fst	qword ptr [esi]
		fst	qword ptr [esi+8]
		fst	qword ptr [esi+10h]
		fstp	qword ptr [esi+18h]
		add	esp, 34h
		pop	ebx
		pop	esi
		retn	4
_ZNK12QSvgRenderer8viewBoxFEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  18. _ZN12QSvgRenderer11qt_metacallEN11QMetaObject4CallEiPPv

; =============== S U B	R O U T	I N E =======================================


		public _ZN12QSvgRenderer11qt_metacallEN11QMetaObject4CallEiPPv
_ZN12QSvgRenderer11qt_metacallEN11QMetaObject4CallEiPPv	proc near
					; DATA XREF: .rdata:7105D650o

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 4Ch
		mov	[esp+4Ch+var_C], esi
		mov	eax, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_8], edi
		mov	esi, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_4], ebp
		mov	edi, [esp+4Ch+arg_C]
		mov	ebp, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_10], ebx
		mov	[esp+4Ch+var_44], eax
		mov	[esp+4Ch+var_40], edi
		mov	[esp+4Ch+var_48], esi
		mov	[esp+4Ch+var_4C], ebp
		call	ds:_ZN7QObject11qt_metacallEN11QMetaObject4CallEiPPv
		test	eax, eax
		mov	ebx, eax
		js	short loc_7102F432
		test	esi, esi
		jz	short loc_7102F448
		cmp	esi, 1
		jz	loc_7102F4A0
		cmp	esi, 2
		xchg	ax, ax
		jz	short loc_7102F452
		cmp	esi, 3
		jz	short loc_7102F476
		cmp	esi, 4
		jz	short loc_7102F476
		cmp	esi, 5
		nop
		jz	short loc_7102F476
		cmp	esi, 6
		jz	short loc_7102F476
		cmp	esi, 7
		jz	short loc_7102F476
		cmp	esi, 8
		nop
		jz	short loc_7102F476

loc_7102F432:				; CODE XREF: _ZN12QSvgRenderer11qt_metacallEN11QMetaObject4CallEiPPv+3Cj
					; _ZN12QSvgRenderer11qt_metacallEN11QMetaObject4CallEiPPv+90j ...
		mov	eax, ebx
		mov	esi, [esp+4Ch+var_C]
		mov	ebx, [esp+4Ch+var_10]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------

loc_7102F448:				; CODE XREF: _ZN12QSvgRenderer11qt_metacallEN11QMetaObject4CallEiPPv+40j
		cmp	eax, 7
		jle	short loc_7102F480

loc_7102F44D:				; CODE XREF: _ZN12QSvgRenderer11qt_metacallEN11QMetaObject4CallEiPPv+D8j
		sub	ebx, 8
		jmp	short loc_7102F432
; ---------------------------------------------------------------------------

loc_7102F452:				; CODE XREF: _ZN12QSvgRenderer11qt_metacallEN11QMetaObject4CallEiPPv+50j
		cmp	ebx, 1
		mov	eax, [edi]
		jz	loc_7102F545
		cmp	ebx, 2
		jz	loc_7102F503
		test	ebx, ebx
		jnz	short loc_7102F476
		mov	[esp+4Ch+var_48], eax
		mov	[esp+4Ch+var_4C], ebp
		call	_ZN12QSvgRenderer10setViewBoxERK6QRectF

loc_7102F476:				; CODE XREF: _ZN12QSvgRenderer11qt_metacallEN11QMetaObject4CallEiPPv+55j
					; _ZN12QSvgRenderer11qt_metacallEN11QMetaObject4CallEiPPv+5Aj ...
		sub	ebx, 3
		jmp	short loc_7102F432
; ---------------------------------------------------------------------------
		align 10h

loc_7102F480:				; CODE XREF: _ZN12QSvgRenderer11qt_metacallEN11QMetaObject4CallEiPPv+8Bj
		mov	[esp+4Ch+var_40], edi
		mov	[esp+4Ch+var_44], eax
		mov	[esp+4Ch+var_48], 0
		mov	[esp+4Ch+var_4C], ebp
		call	_ZN12QSvgRenderer18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv
		jmp	short loc_7102F44D
; ---------------------------------------------------------------------------
		align 10h

loc_7102F4A0:				; CODE XREF: _ZN12QSvgRenderer11qt_metacallEN11QMetaObject4CallEiPPv+45j
		cmp	eax, 1
		mov	esi, [edi]
		jz	short loc_7102F520
		cmp	eax, 2
		jz	loc_7102F530
		test	eax, eax
		jnz	short loc_7102F476
		lea	eax, [esp+4Ch+var_3C]
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_48], ebp
		call	_ZNK12QSvgRenderer8viewBoxFEv
		sub	esp, 4
		mov	eax, [esp+4Ch+var_3C]
		mov	[esi], eax
		mov	eax, [esp+4Ch+var_38]
		mov	[esi+4], eax
		mov	eax, [esp+4Ch+var_34]
		mov	[esi+8], eax
		mov	eax, [esp+4Ch+var_30]
		mov	[esi+0Ch], eax
		mov	eax, [esp+4Ch+var_2C]
		mov	[esi+10h], eax
		mov	eax, [esp+4Ch+var_28]
		mov	[esi+14h], eax
		mov	eax, [esp+4Ch+var_24]
		mov	[esi+18h], eax
		mov	eax, [esp+4Ch+var_20]
		mov	[esi+1Ch], eax
		jmp	loc_7102F476
; ---------------------------------------------------------------------------

loc_7102F503:				; CODE XREF: _ZN12QSvgRenderer11qt_metacallEN11QMetaObject4CallEiPPv+A0j
		mov	eax, [eax]
		mov	[esp+4Ch+var_48], eax
		mov	eax, [ebp+4]
		mov	eax, [eax+4Ch]
		mov	[esp+4Ch+var_4C], eax
		call	_ZN16QSvgTinyDocument15setCurrentFrameEi
		jmp	loc_7102F476
; ---------------------------------------------------------------------------
		align 10h

loc_7102F520:				; CODE XREF: _ZN12QSvgRenderer11qt_metacallEN11QMetaObject4CallEiPPv+E5j
		mov	eax, [ebp+4]
		mov	eax, [eax+54h]
		mov	[esi], eax
		jmp	loc_7102F476
; ---------------------------------------------------------------------------
		align 10h

loc_7102F530:				; CODE XREF: _ZN12QSvgRenderer11qt_metacallEN11QMetaObject4CallEiPPv+EAj
		mov	eax, [ebp+4]
		mov	eax, [eax+4Ch]
		mov	[esp+4Ch+var_4C], eax
		call	_ZNK16QSvgTinyDocument12currentFrameEv
		mov	[esi], eax
		jmp	loc_7102F476
; ---------------------------------------------------------------------------

loc_7102F545:				; CODE XREF: _ZN12QSvgRenderer11qt_metacallEN11QMetaObject4CallEiPPv+97j
		mov	eax, [eax]
		mov	[esp+4Ch+var_4C], ebp
		mov	[esp+4Ch+var_48], eax
		call	_ZN12QSvgRenderer18setFramesPerSecondEi
		jmp	loc_7102F476
_ZN12QSvgRenderer11qt_metacallEN11QMetaObject4CallEiPPv	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  94. _ZNK10QSvgWidget8rendererEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK10QSvgWidget8rendererEv
_ZNK10QSvgWidget8rendererEv proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+4]
		mov	eax, [eax+120h]
		retn
_ZNK10QSvgWidget8rendererEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry   7. _ZN10QSvgWidget4loadERK10QByteArray

; =============== S U B	R O U T	I N E =======================================


		public _ZN10QSvgWidget4loadERK10QByteArray
_ZN10QSvgWidget4loadERK10QByteArray proc near
					; CODE XREF: _ZN10QSvgWidget18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv+4Ej

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax+4]
		mov	eax, [eax+120h]
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	_ZN12QSvgRenderer4loadERK10QByteArray
_ZN10QSvgWidget4loadERK10QByteArray endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry   8. _ZN10QSvgWidget4loadERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN10QSvgWidget4loadERK7QString
_ZN10QSvgWidget4loadERK7QString	proc near
					; CODE XREF: _ZN10QSvgWidget18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv+28j

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax+4]
		mov	eax, [eax+120h]
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	_ZN12QSvgRenderer4loadERK7QString
_ZN10QSvgWidget4loadERK7QString	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry   1. _ZN10QSvgWidget10paintEventEP11QPaintEvent

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN10QSvgWidget10paintEventEP11QPaintEvent
_ZN10QSvgWidget10paintEventEP11QPaintEvent proc	near ; DATA XREF: .rdata:7105D544o

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= byte ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71053978
		mov	[ebp+var_28], offset sub_7102F644
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_0]
		mov	edx, [edx+4]
		add	eax, 8
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_50], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN8QPainterC1EP12QPaintDevice
		lea	edx, [ebp+var_C]
		mov	[esp+4], edx
		mov	edx, [ebp+var_50]
		mov	eax, [edx+120h]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	_ZN12QSvgRenderer6renderEP8QPainter
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN8QPainterD1Ev
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN10QSvgWidget10paintEventEP11QPaintEvent endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102F644	proc near		; DATA XREF: _ZN10QSvgWidget10paintEventEP11QPaintEvent+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-54h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	ds:_ZN8QPainterD1Ev
		mov	edx, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_7102F644	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  95. _ZNK10QSvgWidget8sizeHintEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK10QSvgWidget8sizeHintEv
_ZNK10QSvgWidget8sizeHintEv proc near	; DATA XREF: .rdata:7105D500o

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_0]
		mov	ebx, [eax+4]
		mov	eax, [ebx+120h]
		mov	[esp+1Ch+var_1C], eax
		call	_ZNK12QSvgRenderer7isValidEv
		mov	edx, 40h
		mov	ecx, eax
		mov	eax, 80h
		test	cl, cl
		jnz	short loc_7102F6B0
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7102F6B0:				; CODE XREF: _ZNK10QSvgWidget8sizeHintEv+27j
		mov	eax, [ebx+120h]
		mov	[esp+1Ch+var_1C], eax
		call	_ZNK12QSvgRenderer11defaultSizeEv
		add	esp, 18h
		pop	ebx
		retn
_ZNK10QSvgWidget8sizeHintEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 140. _ZThn8_N10QSvgWidgetD1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZThn8_N10QSvgWidgetD1Ev
_ZThn8_N10QSvgWidgetD1Ev proc near	; DATA XREF: .rdata:off_7105D5B0o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF8h
		jmp	short _ZN10QSvgWidgetD1Ev
_ZThn8_N10QSvgWidgetD1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  14. _ZN10QSvgWidgetD1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN10QSvgWidgetD1Ev
_ZN10QSvgWidgetD1Ev proc near		; CODE XREF: _ZThn8_N10QSvgWidgetD1Ev+5j
					; DATA XREF: .rdata:7105D4D4o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105D4C8
		mov	dword ptr [eax+8], offset off_7105D5B0
		mov	eax, ds:_ZN7QWidgetD2Ev
		add	esp, 0Ch
		jmp	eax
_ZN10QSvgWidgetD1Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  15. _ZN10QSvgWidgetD2Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN10QSvgWidgetD2Ev
_ZN10QSvgWidgetD2Ev proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105D4C8
		mov	dword ptr [eax+8], offset off_7105D5B0
		mov	eax, ds:_ZN7QWidgetD2Ev
		add	esp, 0Ch
		jmp	eax
_ZN10QSvgWidgetD2Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 139. _ZThn8_N10QSvgWidgetD0Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZThn8_N10QSvgWidgetD0Ev
_ZThn8_N10QSvgWidgetD0Ev proc near	; DATA XREF: .rdata:7105D5B4o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF8h
		jmp	short _ZN10QSvgWidgetD0Ev
_ZThn8_N10QSvgWidgetD0Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  13. _ZN10QSvgWidgetD0Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZN10QSvgWidgetD0Ev
_ZN10QSvgWidgetD0Ev proc near		; CODE XREF: _ZThn8_N10QSvgWidgetD0Ev+5j
					; DATA XREF: .rdata:7105D4D8o

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_7105D4C8
		mov	dword ptr [ebx+8], offset off_7105D5B0
		mov	[esp+1Ch+var_1C], ebx
		call	ds:_ZN7QWidgetD2Ev
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_710517D0
_ZN10QSvgWidgetD0Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  10. _ZN10QSvgWidgetC1ERK7QStringP7QWidget

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN10QSvgWidgetC1ERK7QStringP7QWidget
_ZN10QSvgWidgetC1ERK7QStringP7QWidget proc near

var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset word_7105397E
		mov	[ebp+var_28], offset sub_7102F889
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	[ebp+var_C], 0
		mov	dword ptr [esp], 124h ;	size_t
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_710517F0
		mov	dword ptr [esp+4], 40806h
		mov	[ebp+var_48], 3
		mov	[ebp+var_50], eax
		mov	[esp], eax
		call	ds:_ZN14QWidgetPrivateC2Ei
		mov	edx, [ebp+var_50]
		lea	eax, [ebp+var_C]
		mov	dword ptr [edx], offset	off_7105DA08
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+4], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	ds:_ZN7QWidgetC2ER14QWidgetPrivatePS_6QFlagsIN2Qt10WindowTypeEE
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_7105D4C8
		mov	dword ptr [edx+8], offset off_7105D5B0
		mov	dword ptr [esp], 8 ; size_t
		mov	[ebp+var_48], 2
		call	sub_710517F0
		mov	[ebp+var_54], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_54]
		mov	[ebp+var_48], 1
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], edx
		mov	[esp+4], eax
		call	_ZN12QSvgRendererC1ERK7QStringP7QObject
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	edx, [ebp+var_54]
		mov	[eax+120h], edx
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], offset a1update ; "1update()"
		mov	dword ptr [esp+4], offset a2repaintneed_0 ; "2repaintNeeded()"
		mov	[esp+8], edx
		mov	eax, [eax+120h]
		mov	[ebp+var_48], 2
		mov	[esp], eax
		call	ds:_ZN7QObject7connectEPKS_PKcS1_S3_N2Qt14ConnectionTypeE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN10QSvgWidgetC1ERK7QStringP7QWidget endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102F889	proc near		; DATA XREF: _ZN10QSvgWidgetC1ERK7QStringP7QWidget+20o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-58h], edx
		jz	short loc_7102F8AA
		cmp	eax, 2
		jz	short loc_7102F8CF
		mov	eax, [ebp-54h]
		mov	[esp+0], eax
		call	sub_710517D0

loc_7102F8AA:				; CODE XREF: sub_7102F889+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], eax
		call	ds:_ZN7QWidgetD2Ev
		mov	edx, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7102F8CF:				; CODE XREF: sub_7102F889+14j
		mov	eax, [ebp-50h]
		mov	[esp+0], eax
		call	sub_710517D0
		mov	edx, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_7102F889	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  12. _ZN10QSvgWidgetC2ERK7QStringP7QWidget

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN10QSvgWidgetC2ERK7QStringP7QWidget
_ZN10QSvgWidgetC2ERK7QStringP7QWidget proc near

var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71053988
		mov	[ebp+var_28], offset sub_7102FA19
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	[ebp+var_C], 0
		mov	dword ptr [esp], 124h ;	size_t
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_710517F0
		mov	dword ptr [esp+4], 40806h
		mov	[ebp+var_48], 3
		mov	[ebp+var_50], eax
		mov	[esp], eax
		call	ds:_ZN14QWidgetPrivateC2Ei
		mov	edx, [ebp+var_50]
		lea	eax, [ebp+var_C]
		mov	dword ptr [edx], offset	off_7105DA08
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+4], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	ds:_ZN7QWidgetC2ER14QWidgetPrivatePS_6QFlagsIN2Qt10WindowTypeEE
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_7105D4C8
		mov	dword ptr [edx+8], offset off_7105D5B0
		mov	dword ptr [esp], 8 ; size_t
		mov	[ebp+var_48], 2
		call	sub_710517F0
		mov	[ebp+var_54], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_54]
		mov	[ebp+var_48], 1
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp], edx
		mov	[esp+4], eax
		call	_ZN12QSvgRendererC1ERK7QStringP7QObject
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	edx, [ebp+var_54]
		mov	[eax+120h], edx
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], offset a1update ; "1update()"
		mov	dword ptr [esp+4], offset a2repaintneed_0 ; "2repaintNeeded()"
		mov	[esp+8], edx
		mov	eax, [eax+120h]
		mov	[ebp+var_48], 2
		mov	[esp], eax
		call	ds:_ZN7QObject7connectEPKS_PKcS1_S3_N2Qt14ConnectionTypeE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN10QSvgWidgetC2ERK7QStringP7QWidget endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102FA19	proc near		; DATA XREF: _ZN10QSvgWidgetC2ERK7QStringP7QWidget+20o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-58h], edx
		jz	short loc_7102FA3A
		cmp	eax, 2
		jz	short loc_7102FA5F
		mov	eax, [ebp-54h]
		mov	[esp+0], eax
		call	sub_710517D0

loc_7102FA3A:				; CODE XREF: sub_7102FA19+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], eax
		call	ds:_ZN7QWidgetD2Ev
		mov	edx, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7102FA5F:				; CODE XREF: sub_7102FA19+14j
		mov	eax, [ebp-50h]
		mov	[esp+0], eax
		call	sub_710517D0
		mov	edx, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_7102FA19	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry   9. _ZN10QSvgWidgetC1EP7QWidget

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN10QSvgWidgetC1EP7QWidget
_ZN10QSvgWidgetC1EP7QWidget proc near

var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset word_71053992
		mov	[ebp+var_28], offset sub_7102FBA2
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	[ebp+var_C], 0
		mov	dword ptr [esp], 124h ;	size_t
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_710517F0
		mov	dword ptr [esp+4], 40806h
		mov	[ebp+var_48], 3
		mov	[ebp+var_50], eax
		mov	[esp], eax
		call	ds:_ZN14QWidgetPrivateC2Ei
		mov	edx, [ebp+var_50]
		lea	eax, [ebp+var_C]
		mov	dword ptr [edx], offset	off_7105DA08
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	ds:_ZN7QWidgetC2ER14QWidgetPrivatePS_6QFlagsIN2Qt10WindowTypeEE
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_7105D4C8
		mov	dword ptr [edx+8], offset off_7105D5B0
		mov	dword ptr [esp], 8 ; size_t
		mov	[ebp+var_48], 2
		call	sub_710517F0
		mov	[ebp+var_54], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_54]
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		mov	[esp], edx
		call	_ZN12QSvgRendererC1EP7QObject
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	edx, [ebp+var_54]
		mov	[eax+120h], edx
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], offset a1update ; "1update()"
		mov	dword ptr [esp+4], offset a2repaintneed_0 ; "2repaintNeeded()"
		mov	[esp+8], edx
		mov	eax, [eax+120h]
		mov	[ebp+var_48], 2
		mov	[esp], eax
		call	ds:_ZN7QObject7connectEPKS_PKcS1_S3_N2Qt14ConnectionTypeE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN10QSvgWidgetC1EP7QWidget endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102FBA2	proc near		; DATA XREF: _ZN10QSvgWidgetC1EP7QWidget+20o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-58h], edx
		jz	short loc_7102FBC3
		cmp	eax, 2
		jz	short loc_7102FBE8
		mov	eax, [ebp-54h]
		mov	[esp+0], eax
		call	sub_710517D0

loc_7102FBC3:				; CODE XREF: sub_7102FBA2+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], eax
		call	ds:_ZN7QWidgetD2Ev
		mov	edx, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7102FBE8:				; CODE XREF: sub_7102FBA2+14j
		mov	eax, [ebp-50h]
		mov	[esp+0], eax
		call	sub_710517D0
		mov	edx, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_7102FBA2	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  11. _ZN10QSvgWidgetC2EP7QWidget

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN10QSvgWidgetC2EP7QWidget
_ZN10QSvgWidgetC2EP7QWidget proc near

var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_7105399C
		mov	[ebp+var_28], offset sub_7102FD32
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	[ebp+var_C], 0
		mov	dword ptr [esp], 124h ;	size_t
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_710517F0
		mov	dword ptr [esp+4], 40806h
		mov	[ebp+var_48], 3
		mov	[ebp+var_50], eax
		mov	[esp], eax
		call	ds:_ZN14QWidgetPrivateC2Ei
		mov	edx, [ebp+var_50]
		lea	eax, [ebp+var_C]
		mov	dword ptr [edx], offset	off_7105DA08
		mov	[esp+0Ch], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	ds:_ZN7QWidgetC2ER14QWidgetPrivatePS_6QFlagsIN2Qt10WindowTypeEE
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_7105D4C8
		mov	dword ptr [edx+8], offset off_7105D5B0
		mov	dword ptr [esp], 8 ; size_t
		mov	[ebp+var_48], 2
		call	sub_710517F0
		mov	[ebp+var_54], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_54]
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		mov	[esp], edx
		call	_ZN12QSvgRendererC1EP7QObject
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	edx, [ebp+var_54]
		mov	[eax+120h], edx
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], offset a1update ; "1update()"
		mov	dword ptr [esp+4], offset a2repaintneed_0 ; "2repaintNeeded()"
		mov	[esp+8], edx
		mov	eax, [eax+120h]
		mov	[ebp+var_48], 2
		mov	[esp], eax
		call	ds:_ZN7QObject7connectEPKS_PKcS1_S3_N2Qt14ConnectionTypeE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN10QSvgWidgetC2EP7QWidget endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7102FD32	proc near		; DATA XREF: _ZN10QSvgWidgetC2EP7QWidget+20o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-58h], edx
		jz	short loc_7102FD53
		cmp	eax, 2
		jz	short loc_7102FD78
		mov	eax, [ebp-54h]
		mov	[esp+0], eax
		call	sub_710517D0

loc_7102FD53:				; CODE XREF: sub_7102FD32+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], eax
		call	ds:_ZN7QWidgetD2Ev
		mov	edx, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7102FD78:				; CODE XREF: sub_7102FD32+14j
		mov	eax, [ebp-50h]
		mov	[esp+0], eax
		call	sub_710517D0
		mov	edx, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_7102FD32	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 123. _ZNK16QGraphicsSvgItem8rendererEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QGraphicsSvgItem8rendererEv
_ZNK16QGraphicsSvgItem8rendererEv proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+0Ch]
		mov	eax, [eax+114h]
		retn
_ZNK16QGraphicsSvgItem8rendererEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 144. _ZThn8_NK16QGraphicsSvgItem12boundingRectEv

; =============== S U B	R O U T	I N E =======================================


		public _ZThn8_NK16QGraphicsSvgItem12boundingRectEv
_ZThn8_NK16QGraphicsSvgItem12boundingRectEv proc near ;	DATA XREF: .rdata:7105D858o

arg_4		= dword	ptr  8

		add	[esp+arg_4], 0FFFFFFF8h
		jmp	short _ZNK16QGraphicsSvgItem12boundingRectEv
_ZThn8_NK16QGraphicsSvgItem12boundingRectEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 119. _ZNK16QGraphicsSvgItem12boundingRectEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QGraphicsSvgItem12boundingRectEv
_ZNK16QGraphicsSvgItem12boundingRectEv proc near
					; CODE XREF: _ZThn8_NK16QGraphicsSvgItem12boundingRectEv+5j
					; DATA XREF: .rdata:7105D838o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx+0Ch]
		mov	ecx, [edx+118h]
		mov	[eax], ecx
		mov	ecx, [edx+11Ch]
		mov	[eax+4], ecx
		mov	ecx, [edx+120h]
		mov	[eax+8], ecx
		mov	ecx, [edx+124h]
		mov	[eax+0Ch], ecx
		mov	ecx, [edx+128h]
		mov	[eax+10h], ecx
		mov	ecx, [edx+12Ch]
		mov	[eax+14h], ecx
		mov	ecx, [edx+130h]
		mov	[eax+18h], ecx
		mov	edx, [edx+134h]
		mov	[eax+1Ch], edx
		retn	4
_ZNK16QGraphicsSvgItem12boundingRectEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 145. _ZThn8_NK16QGraphicsSvgItem4typeEv

; =============== S U B	R O U T	I N E =======================================


		public _ZThn8_NK16QGraphicsSvgItem4typeEv
_ZThn8_NK16QGraphicsSvgItem4typeEv proc	near ; DATA XREF: .rdata:7105D878o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF8h
		jmp	short _ZNK16QGraphicsSvgItem4typeEv
_ZThn8_NK16QGraphicsSvgItem4typeEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 122. _ZNK16QGraphicsSvgItem4typeEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QGraphicsSvgItem4typeEv
_ZNK16QGraphicsSvgItem4typeEv proc near	; CODE XREF: _ZThn8_NK16QGraphicsSvgItem4typeEv+5j
					; DATA XREF: .rdata:7105D840o
		mov	eax, 0Dh
		retn
_ZNK16QGraphicsSvgItem4typeEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 124. _ZNK16QGraphicsSvgItem9elementIdEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QGraphicsSvgItem9elementIdEv
_ZNK16QGraphicsSvgItem9elementIdEv proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx+0Ch]
		mov	edx, [edx+13Ch]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK16QGraphicsSvgItem9elementIdEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 118. _ZNK16QGraphicsSvgItem10metaObjectEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QGraphicsSvgItem10metaObjectEv
_ZNK16QGraphicsSvgItem10metaObjectEv proc near ; DATA XREF: .rdata:off_7105D808o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+4]
		mov	eax, [eax+18h]
		test	eax, eax
		jz	short loc_7102FE70
		rep retn
; ---------------------------------------------------------------------------

loc_7102FE70:				; CODE XREF: _ZNK16QGraphicsSvgItem10metaObjectEv+Cj
		mov	eax, offset _ZN16QGraphicsSvgItem16staticMetaObjectE
		retn
_ZNK16QGraphicsSvgItem10metaObjectEv endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7102FE80	proc near		; DATA XREF: .text:71052BC8o
		mov	eax, ds:_ZN15QGraphicsObject16staticMetaObjectE
		mov	_ZN16QGraphicsSvgItem16staticMetaObjectE, eax
		retn
sub_7102FE80	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  57. _ZN16QGraphicsSvgItem11qt_metacastEPKc

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QGraphicsSvgItem11qt_metacastEPKc
_ZN16QGraphicsSvgItem11qt_metacastEPKc proc near ; DATA	XREF: .rdata:7105D80Co

var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		xor	eax, eax
		mov	edx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_4], ebp
		mov	ebp, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_10], ebx
		mov	[esp+1Ch+var_C], esi
		test	edx, edx
		mov	[esp+1Ch+var_8], edi
		jz	short loc_7102FEE2
		mov	ecx, 11h
		mov	esi, edx
		mov	edi, offset aQgraphicssvgit ; "QGraphicsSvgItem"
		repe cmpsb
		setnbe	al
		setb	cl
		mov	esi, eax
		mov	eax, ebp
		mov	ebx, esi
		cmp	bl, cl
		jz	short loc_7102FEE2
		mov	edi, offset aCom_trolltech_ ; "com.trolltech.Qt.QGraphicsItem"
		mov	ecx, 1Fh
		mov	esi, edx
		repe cmpsb
		jnz	short loc_7102FEF6
		lea	eax, [ebp+8]

loc_7102FEE2:				; CODE XREF: _ZN16QGraphicsSvgItem11qt_metacastEPKc+1Fj
					; _ZN16QGraphicsSvgItem11qt_metacastEPKc+3Dj
		mov	ebx, [esp+1Ch+var_10]
		mov	esi, [esp+1Ch+var_C]
		mov	edi, [esp+1Ch+var_8]
		mov	ebp, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_7102FEF6:				; CODE XREF: _ZN16QGraphicsSvgItem11qt_metacastEPKc+4Dj
		mov	eax, ds:_ZN15QGraphicsObject11qt_metacastEPKc
		mov	[esp+1Ch+arg_0], ebp
		mov	ebx, [esp+1Ch+var_10]
		mov	[esp+1Ch+arg_4], edx
		mov	esi, [esp+1Ch+var_C]
		mov	edi, [esp+1Ch+var_8]
		mov	ebp, [esp+1Ch+var_4]
		add	esp, 1Ch
		jmp	eax
_ZN16QGraphicsSvgItem11qt_metacastEPKc endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  62. _ZN16QGraphicsSvgItem18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QGraphicsSvgItem18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv
_ZN16QGraphicsSvgItem18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv proc near
					; CODE XREF: _ZN16QGraphicsSvgItem11qt_metacallEN11QMetaObject4CallEiPPv+1BDp
					; DATA XREF: .rdata:7105AAB0o

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_2C		= qword	ptr -2Ch
var_24		= qword	ptr -24h
var_1C		= qword	ptr -1Ch
var_14		= qword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 3Ch
		mov	edx, [esp+3Ch+arg_4]
		test	edx, edx
		jnz	short loc_7102FF72
		mov	eax, [esp+3Ch+arg_8]
		test	eax, eax
		jnz	short loc_7102FF72
		mov	eax, [esp+3Ch+arg_0]
		fldz
		fst	[esp+3Ch+var_24]
		mov	eax, [eax+0Ch]
		fst	[esp+3Ch+var_2C]
		mov	edx, [eax+110h]
		fst	[esp+3Ch+var_14]
		cmp	edx, 1
		lea	eax, [edx-8]
		sbb	edx, edx
		not	edx
		and	eax, edx
		add	eax, 8
		lea	edx, [esp+3Ch+var_2C]
		fstp	[esp+3Ch+var_1C]
		mov	[esp+3Ch+var_38], edx
		mov	[esp+3Ch+var_3C], eax
		call	ds:_ZN13QGraphicsItem6updateERK6QRectF

loc_7102FF72:				; CODE XREF: _ZN16QGraphicsSvgItem18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv+9j
					; _ZN16QGraphicsSvgItem18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv+11j
		add	esp, 3Ch
		retn
_ZN16QGraphicsSvgItem18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 120. _ZNK16QGraphicsSvgItem16isCachingEnabledEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK16QGraphicsSvgItem16isCachingEnabledEv
_ZNK16QGraphicsSvgItem16isCachingEnabledEv proc	near

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		add	eax, 8
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZNK13QGraphicsItem9cacheModeEv
		test	eax, eax
		setnz	al
		add	esp, 1Ch
		retn
_ZNK16QGraphicsSvgItem16isCachingEnabledEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  60. _ZN16QGraphicsSvgItem17setCachingEnabledEb

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QGraphicsSvgItem17setCachingEnabledEb
_ZN16QGraphicsSvgItem17setCachingEnabledEb proc	near

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= byte ptr  8

		sub	esp, 2Ch
		cmp	[esp+2Ch+arg_4], 1
		lea	edx, [esp+2Ch+var_14]
		mov	[esp+2Ch+var_10], 0FFFFFFFFh
		sbb	eax, eax
		not	eax
		and	eax, 2
		mov	[esp+2Ch+var_28], eax
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_14], 0FFFFFFFFh
		mov	[esp+2Ch+var_24], edx
		add	eax, 8
		mov	[esp+2Ch+var_2C], eax
		call	ds:_ZN13QGraphicsItem12setCacheModeENS_9CacheModeERK5QSize
		add	esp, 2Ch
		retn
_ZN16QGraphicsSvgItem17setCachingEnabledEb endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  58. _ZN16QGraphicsSvgItem12setElementIdERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QGraphicsSvgItem12setElementIdERK7QString
_ZN16QGraphicsSvgItem12setElementIdERK7QString proc near
					; CODE XREF: _ZN16QGraphicsSvgItem11qt_metacallEN11QMetaObject4CallEiPPv+1D8p

var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_6C		= qword	ptr -6Ch
var_5C		= qword	ptr -5Ch
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_3C		= qword	ptr -3Ch
var_34		= qword	ptr -34h
var_2C		= qword	ptr -2Ch
var_24		= qword	ptr -24h
var_1C		= qword	ptr -1Ch
var_14		= qword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		push	esi
		push	ebx
		sub	esp, 70h
		mov	esi, [esp+7Ch+arg_0]
		mov	eax, [esp+7Ch+arg_4]
		mov	ebx, [esi+0Ch]
		mov	[esp+7Ch+var_78], eax
		lea	edi, [ebx+13Ch]
		mov	[esp+7Ch+var_7C], edi
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebx+13Ch]
		mov	ecx, [eax+8]
		test	ecx, ecx
		jnz	loc_71030171
		mov	eax, [ebx+114h]
		mov	[esp+7Ch+var_7C], eax
		call	_ZNK12QSvgRenderer11defaultSizeEv
		mov	[esp+7Ch+var_50], eax
		fild	[esp+7Ch+var_50]
		mov	[esp+7Ch+var_50], edx
		fild	[esp+7Ch+var_50]

loc_71030039:				; CODE XREF: _ZN16QGraphicsSvgItem12setElementIdERK7QString+1B6j
		fld	qword ptr [ebx+130h]
		fld	qword ptr [ebx+128h]
		fld	st
		fsub	st, st(4)
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_71030058
		fchs

loc_71030058:				; CODE XREF: _ZN16QGraphicsSvgItem12setElementIdERK7QString+74j
		fld	st(4)
		fldz
		fxch	st(6)
		fucom	st(6)
		fnstsw	ax
		fstp	st(6)
		sahf
		jnb	short loc_71030069
		fchs

loc_71030069:				; CODE XREF: _ZN16QGraphicsSvgItem12setElementIdERK7QString+85j
		fldz
		fxch	st(3)
		fucom	st(3)
		fnstsw	ax
		fstp	st(3)
		sahf
		jnb	short loc_7103007C
		fxch	st(2)
		fchs
		fxch	st(2)

loc_7103007C:				; CODE XREF: _ZN16QGraphicsSvgItem12setElementIdERK7QString+94j
		fucom	st(2)
		fnstsw	ax
		sahf
		ja	short loc_71030090
		fstp	st(2)
		fxch	st(1)
		jmp	short loc_71030094
; ---------------------------------------------------------------------------
		align 10h

loc_71030090:				; CODE XREF: _ZN16QGraphicsSvgItem12setElementIdERK7QString+A1j
		fstp	st
		fxch	st(1)

loc_71030094:				; CODE XREF: _ZN16QGraphicsSvgItem12setElementIdERK7QString+A7j
		fmul	ds:dbl_7105AB88
		fucompp
		fnstsw	ax
		sahf
		jb	short loc_71030100
		fld	st
		fsub	st, st(2)
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jb	loc_710301C7

loc_710300B6:				; CODE XREF: _ZN16QGraphicsSvgItem12setElementIdERK7QString+1E9j
		fld	st(2)
		fldz
		fxch	st(4)
		fucom	st(4)
		fnstsw	ax
		fstp	st(4)
		sahf
		jb	loc_710301C0

loc_710300C9:				; CODE XREF: _ZN16QGraphicsSvgItem12setElementIdERK7QString+1E2j
		fldz
		fxch	st(3)
		fucom	st(3)
		fnstsw	ax
		fstp	st(3)
		sahf
		jb	loc_710301B0

loc_710300DA:				; CODE XREF: _ZN16QGraphicsSvgItem12setElementIdERK7QString+1D6j
		fucom	st(2)
		fnstsw	ax
		sahf
		jbe	loc_710301A0
		fstp	st
		fxch	st(1)

loc_710300E9:				; CODE XREF: _ZN16QGraphicsSvgItem12setElementIdERK7QString+1C4j
		fmul	ds:dbl_7105AB88
		fucompp
		fnstsw	ax
		sahf
		jnb	short loc_71030140
		fxch	st(1)
		jmp	short loc_71030104
; ---------------------------------------------------------------------------
		align 10h

loc_71030100:				; CODE XREF: _ZN16QGraphicsSvgItem12setElementIdERK7QString+BFj
		fstp	st
		fxch	st(1)

loc_71030104:				; CODE XREF: _ZN16QGraphicsSvgItem12setElementIdERK7QString+118j
		mov	edx, [ebx+110h]
		fstp	[esp+7Ch+var_5C]
		fstp	[esp+7Ch+var_6C]
		cmp	edx, 1
		lea	eax, [edx-8]
		sbb	edx, edx
		not	edx
		and	eax, edx
		add	eax, 8
		mov	[esp+7Ch+var_7C], eax
		call	ds:_ZN13QGraphicsItem21prepareGeometryChangeEv
		fld	[esp+7Ch+var_5C]
		fstp	qword ptr [ebx+128h]
		fld	[esp+7Ch+var_6C]
		fstp	qword ptr [ebx+130h]
		jmp	short loc_71030144
; ---------------------------------------------------------------------------

loc_71030140:				; CODE XREF: _ZN16QGraphicsSvgItem12setElementIdERK7QString+114j
		fstp	st
		fstp	st

loc_71030144:				; CODE XREF: _ZN16QGraphicsSvgItem12setElementIdERK7QString+15Ej
		fldz
		add	esi, 8
		fst	[esp+7Ch+var_24]
		lea	eax, [esp+7Ch+var_2C]
		fst	[esp+7Ch+var_2C]
		mov	[esp+7Ch+var_7C], esi
		fst	[esp+7Ch+var_14]
		mov	[esp+7Ch+var_78], eax
		fstp	[esp+7Ch+var_1C]
		call	ds:_ZN13QGraphicsItem6updateERK6QRectF
		add	esp, 70h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_71030171:				; CODE XREF: _ZN16QGraphicsSvgItem12setElementIdERK7QString+35j
		mov	[esp+7Ch+var_74], edi
		mov	edx, [ebx+114h]
		lea	eax, [esp+7Ch+var_4C]
		mov	[esp+7Ch+var_7C], eax
		mov	[esp+7Ch+var_78], edx
		call	_ZNK12QSvgRenderer15boundsOnElementERK7QString
		sub	esp, 4
		fld	[esp+7Ch+var_3C]
		fld	[esp+7Ch+var_34]
		jmp	loc_71030039
; ---------------------------------------------------------------------------
		align 10h

loc_710301A0:				; CODE XREF: _ZN16QGraphicsSvgItem12setElementIdERK7QString+FFj
		fstp	st(2)
		fxch	st(1)
		jmp	loc_710300E9
; ---------------------------------------------------------------------------
		align 10h

loc_710301B0:				; CODE XREF: _ZN16QGraphicsSvgItem12setElementIdERK7QString+F4j
		fxch	st(2)
		fchs
		fxch	st(2)
		jmp	loc_710300DA
; ---------------------------------------------------------------------------
		align 10h

loc_710301C0:				; CODE XREF: _ZN16QGraphicsSvgItem12setElementIdERK7QString+E3j
		fchs
		jmp	loc_710300C9
; ---------------------------------------------------------------------------

loc_710301C7:				; CODE XREF: _ZN16QGraphicsSvgItem12setElementIdERK7QString+D0j
		fchs
		jmp	loc_710300B6
_ZN16QGraphicsSvgItem12setElementIdERK7QString endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 121. _ZNK16QGraphicsSvgItem16maximumCacheSizeEv

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZNK16QGraphicsSvgItem16maximumCacheSizeEv
_ZNK16QGraphicsSvgItem16maximumCacheSizeEv proc	near
					; CODE XREF: _ZN16QGraphicsSvgItem11qt_metacallEN11QMetaObject4CallEiPPv+187p

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= dword	ptr -18h
var_10		= dword	ptr -10h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		lea	eax, [ebp+var_8]
		sub	esp, 70h
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset word_710539AE
		mov	[ebp+var_28], offset sub_710302AD
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0Ch]
		mov	ebx, [eax+4]
		mov	esi, [ebx+8]
		mov	ecx, [ebx+0Ch]
		sub	ecx, esi
		test	ecx, ecx
		jle	short loc_71030237
		mov	edx, [ebx+esi*4+14h]
		xor	eax, eax
		cmp	dword ptr [edx], 3
		jnz	short loc_71030230
		jmp	short loc_71030291
; ---------------------------------------------------------------------------

loc_71030223:				; CODE XREF: _ZNK16QGraphicsSvgItem16maximumCacheSizeEv+65j
		lea	edx, [eax+esi+4]
		mov	edx, [ebx+edx*4+4]
		cmp	dword ptr [edx], 3
		jz	short loc_71030291

loc_71030230:				; CODE XREF: _ZNK16QGraphicsSvgItem16maximumCacheSizeEv+4Fj
		add	eax, 1
		cmp	eax, ecx
		jl	short loc_71030223

loc_71030237:				; CODE XREF: _ZNK16QGraphicsSvgItem16maximumCacheSizeEv+44j
		mov	eax, [ebp+var_10]
		mov	[ebp+var_18], 0
		and	eax, 0C0000000h
		mov	[ebp+var_10], eax
		mov	byte ptr [ebp+var_10+3], 80h

loc_7103024D:				; CODE XREF: _ZNK16QGraphicsSvgItem16maximumCacheSizeEv+DBj
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZNK8QVariant6toSizeEv
		mov	[ebp+var_58], eax
		lea	eax, [ebp+var_18]
		mov	[ebp+var_54], edx
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN8QVariantD1Ev
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_58]
		mov	edx, [ebp+var_54]
		add	esp, 70h
		pop	ebx
		pop	esi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_71030291:				; CODE XREF: _ZNK16QGraphicsSvgItem16maximumCacheSizeEv+51j
					; _ZNK16QGraphicsSvgItem16maximumCacheSizeEv+5Ej
		add	edx, 8
		lea	eax, [ebp+var_18]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN8QVariantC1ERKS_
		jmp	short loc_7103024D
_ZNK16QGraphicsSvgItem16maximumCacheSizeEv endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710302AD	proc near		; DATA XREF: _ZNK16QGraphicsSvgItem16maximumCacheSizeEv+22o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-5Ch], eax
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		call	ds:_ZN8QVariantD1Ev
		mov	eax, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_710302AD	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710302E0	proc near		; CODE XREF: _ZN16QGraphicsSvgItem5paintEP8QPainterPK24QStyleOptionGraphicsItemP7QWidget+88j

var_1C8		= qword	ptr -1C8h
var_1BC		= dword	ptr -1BCh
var_1B8		= qword	ptr -1B8h
var_1AC		= dword	ptr -1ACh
var_1A8		= dword	ptr -1A8h
var_1A4		= dword	ptr -1A4h
var_1A0		= qword	ptr -1A0h
var_194		= dword	ptr -194h
var_190		= dword	ptr -190h
var_18C		= byte ptr -18Ch
var_188		= dword	ptr -188h
var_174		= dword	ptr -174h
var_170		= dword	ptr -170h
var_16C		= dword	ptr -16Ch
var_168		= dword	ptr -168h
var_164		= dword	ptr -164h
var_150		= qword	ptr -150h
var_148		= qword	ptr -148h
var_140		= qword	ptr -140h
var_138		= qword	ptr -138h
var_130		= qword	ptr -130h
var_128		= qword	ptr -128h
var_120		= qword	ptr -120h
var_118		= qword	ptr -118h
var_110		= qword	ptr -110h
var_108		= qword	ptr -108h
var_100		= qword	ptr -100h
var_F8		= qword	ptr -0F8h
var_F0		= qword	ptr -0F0h
var_E8		= qword	ptr -0E8h
var_E0		= qword	ptr -0E0h
var_D8		= qword	ptr -0D8h
var_D0		= byte ptr -0D0h
var_B0		= byte ptr -0B0h
var_A0		= qword	ptr -0A0h
var_98		= qword	ptr -98h
var_90		= qword	ptr -90h
var_88		= qword	ptr -88h
var_80		= qword	ptr -80h
var_78		= qword	ptr -78h
var_70		= byte ptr -70h
var_60		= qword	ptr -60h
var_58		= qword	ptr -58h
var_4C		= byte ptr -4Ch
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= word ptr -30h
var_2C		= byte ptr -2Ch
var_28		= byte ptr -28h
var_24		= byte ptr -24h
var_20		= byte ptr -20h
var_1C		= byte ptr -1Ch
var_18		= byte ptr -18h
var_14		= byte ptr -14h
var_10		= byte ptr -10h
var_C		= byte ptr -0Ch
var_8		= byte ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 1F8h
		mov	[ebp+var_194], eax
		lea	eax, [ebp+var_8]
		mov	[ebp+var_16C], eax
		lea	eax, [ebp+var_18C]
		mov	[ebp+var_1A4], ecx
		mov	[ebp+var_190], edx
		mov	[ebp+var_164], esp
		mov	[ebp+var_174], offset sub_710525B0
		mov	[ebp+var_170], offset dword_710539B4
		mov	[ebp+var_168], offset sub_71030A5A
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+var_190]
		fldz
		fst	[ebp+var_90]
		fstp	[ebp+var_88]
		fld1
		fst	[ebp+var_80]
		fstp	[ebp+var_78]
		mov	[esp], edx
		mov	[ebp+var_188], 0FFFFFFFFh
		call	ds:_ZNK8QPainter9transformEv
		lea	edx, [ebp+var_70]
		lea	ecx, [ebp+var_90]
		mov	[esp+8], ecx
		mov	[esp], edx
		mov	[esp+4], eax
		call	ds:_ZNK10QTransform7mapRectERK6QRectF
		fld	[ebp+var_58]
		sub	esp, 4
		fld	[ebp+var_60]
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		sahf
		ja	short loc_71030395
		fstp	st
		jmp	short loc_71030397
; ---------------------------------------------------------------------------

loc_71030395:				; CODE XREF: sub_710302E0+AFj
		fstp	st(1)

loc_71030397:				; CODE XREF: sub_710302E0+B3j
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_710303A6
		fchs

loc_710303A6:				; CODE XREF: sub_710302E0+C2j
		fld	ds:dbl_7105AB88
		fucompp
		fnstsw	ax
		sahf
		jb	short loc_710303C3

loc_710303B3:				; CODE XREF: sub_710302E0+15Bj
		lea	eax, [ebp+var_18C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_710303C3:				; CODE XREF: sub_710302E0+D1j
		mov	edx, [ebp+var_194]
		lea	ecx, [ebp+var_D0]
		mov	eax, [edx]
		mov	[esp+4], edx
		mov	[esp], ecx
		mov	eax, [eax+0Ch]
		mov	[ebp+var_188], 0FFFFFFFFh
		call	eax
		mov	eax, [ebp+var_190]
		sub	esp, 4
		mov	[esp], eax
		call	ds:_ZNK8QPainter9transformEv
		lea	edx, [ebp+var_B0]
		lea	ecx, [ebp+var_D0]
		mov	[esp+8], ecx
		mov	[esp], edx
		mov	[esp+4], eax
		call	ds:_ZNK10QTransform7mapRectERK6QRectF
		fld	[ebp+var_98]
		sub	esp, 4
		fld	[ebp+var_A0]
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		sahf
		jbe	loc_71030810
		fstp	st

loc_71030434:				; CODE XREF: sub_710302E0+532j
		fld1
		fucompp
		fnstsw	ax
		sahf
		ja	loc_710303B3
		mov	edx, [ebp+var_194]
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+2Ch]
		mov	[ebp+var_188], 0FFFFFFFFh
		call	eax
		cmp	eax, 9		; switch 10 cases
		jbe	loc_71030817

loc_71030464:				; CODE XREF: sub_710302E0+540j
					; DATA XREF: .rdata:off_7105AA60o
		fld1			; jumptable 71030820 default case
		fstp	[ebp+var_1C8]
		lea	esi, [esi+0]

loc_71030470:				; CODE XREF: sub_710302E0+59Cj
					; sub_710302E0+5F6j ...
		mov	eax, [ebp+var_1A4]
		add	eax, 24h
		mov	[ebp+var_1BC], eax
		mov	dword ptr [esp+8], 0
		mov	dword ptr [esp+4], 4
		mov	[esp], eax
		mov	[ebp+var_188], 0FFFFFFFFh
		call	ds:_ZNK8QPalette5brushENS_10ColorGroupENS_9ColorRoleE
		mov	eax, [eax]
		mov	edx, [eax+8]
		mov	[ebp+var_3C], edx
		mov	edx, [eax+0Ch]
		mov	[ebp+var_38], edx
		mov	edx, [eax+10h]
		mov	[ebp+var_34], edx
		movzx	eax, word ptr [eax+14h]
		lea	edx, [ebp+var_3C]
		mov	[ebp+var_30], ax
		mov	[esp], edx
		call	ds:_ZNK6QColor4blueEv
		lea	ecx, [ebp+var_3C]
		cmp	eax, 7Fh
		setnle	al
		movzx	eax, al
		sub	eax, 1
		and	eax, 0FFh
		mov	[ebp+var_1AC], eax
		mov	[esp], ecx
		mov	[ebp+var_188], 0FFFFFFFFh
		call	ds:_ZNK6QColor5greenEv
		cmp	eax, 7Fh
		setnle	al
		movzx	eax, al
		sub	eax, 1
		and	eax, 0FFh
		mov	[ebp+var_1A8], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_188], 0FFFFFFFFh
		call	ds:_ZNK6QColor3redEv
		mov	dword ptr [esp+10h], 0FFh
		mov	edx, [ebp+var_1AC]
		mov	[esp+0Ch], edx
		mov	ecx, [ebp+var_1A8]
		cmp	eax, 7Fh
		setnle	al
		movzx	eax, al
		sub	eax, 1
		and	eax, 0FFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[esp+8], ecx
		mov	[ebp+var_188], 0FFFFFFFFh
		call	ds:_ZN6QColor6setRgbEiiii
		lea	edx, [ebp+var_4C]
		lea	ecx, [ebp+var_24]
		mov	dword ptr [esp+8], 1
		mov	[esp+4], edx
		mov	[esp], ecx
		call	ds:_ZN6QBrushC1ERK6QColorN2Qt10BrushStyleE
		lea	eax, [ebp+var_24]
		mov	[esp+4], eax
		lea	eax, [ebp+var_28]
		mov	dword ptr [esp+18h], 40h
		mov	dword ptr [esp+14h], 10h
		mov	dword ptr [esp+10h], 1
		mov	[esp], eax
		fldz
		fstp	qword ptr [esp+8]
		mov	[ebp+var_188], 3
		call	ds:_ZN4QPenC1ERK6QBrushdN2Qt8PenStyleENS3_11PenCapStyleENS3_12PenJoinStyleE
		lea	eax, [ebp+var_28]
		mov	[esp+4], eax
		mov	edx, [ebp+var_190]
		mov	[esp], edx
		mov	[ebp+var_188], 2
		call	ds:_ZN8QPainter6setPenERK4QPen
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_188], 3
		call	ds:_ZN4QPenD1Ev
		fld	[ebp+var_1C8]
		lea	eax, [ebp+var_24]
		fmul	ds:flt_7105AB90
		fstp	[ebp+var_1A0]
		mov	[esp], eax
		mov	[ebp+var_188], 0FFFFFFFFh
		call	ds:_ZN6QBrushD1Ev
		mov	dword ptr [esp+4], 0
		mov	eax, [ebp+var_190]
		mov	[esp], eax
		call	ds:_ZN8QPainter8setBrushEN2Qt10BrushStyleE
		mov	ecx, [ebp+var_194]
		lea	edx, [ebp+var_F0]
		mov	eax, [ecx]
		fld	[ebp+var_1A0]
		fchs
		fstp	[ebp+var_1B8]
		mov	[esp+4], ecx
		mov	[esp], edx
		call	dword ptr [eax+0Ch]
		lea	eax, [ebp+var_110]
		fld	[ebp+var_1B8]
		sub	esp, 4
		fadd	[ebp+var_D8]
		fsub	[ebp+var_1A0]
		fld	[ebp+var_1B8]
		fadd	[ebp+var_E0]
		fsub	[ebp+var_1A0]
		fld	[ebp+var_1A0]
		fadd	[ebp+var_E8]
		fld	[ebp+var_1A0]
		fadd	[ebp+var_F0]
		fstp	[ebp+var_110]
		fstp	[ebp+var_108]
		fstp	[ebp+var_100]
		fstp	[ebp+var_F8]
		mov	dword ptr [esp+8], 1
		mov	[esp+4], eax
		mov	eax, [ebp+var_190]
		mov	[esp], eax
		call	ds:_ZN8QPainter9drawRectsEPK6QRectFi
		mov	dword ptr [esp+8], 0
		mov	dword ptr [esp+4], 4
		mov	edx, [ebp+var_1BC]
		mov	[esp], edx
		call	ds:_ZNK8QPalette5brushENS_10ColorGroupENS_9ColorRoleE
		mov	dword ptr [esp+18h], 40h
		mov	dword ptr [esp+14h], 10h
		mov	dword ptr [esp+10h], 2
		mov	[esp+4], eax
		fldz
		lea	eax, [ebp+var_2C]
		fstp	qword ptr [esp+8]
		mov	[esp], eax
		call	ds:_ZN4QPenC1ERK6QBrushdN2Qt8PenStyleENS3_11PenCapStyleENS3_12PenJoinStyleE
		lea	edx, [ebp+var_2C]
		mov	[esp+4], edx
		mov	ecx, [ebp+var_190]
		mov	[esp], ecx
		mov	[ebp+var_188], 1
		call	ds:_ZN8QPainter6setPenERK4QPen
		lea	eax, [ebp+var_2C]
		mov	[esp], eax
		mov	[ebp+var_188], 0FFFFFFFFh
		call	ds:_ZN4QPenD1Ev
		mov	dword ptr [esp+4], 0
		mov	eax, [ebp+var_190]
		mov	[esp], eax
		call	ds:_ZN8QPainter8setBrushEN2Qt10BrushStyleE
		mov	ecx, [ebp+var_194]
		lea	edx, [ebp+var_130]
		mov	eax, [ecx]
		mov	[esp+4], ecx
		mov	[esp], edx
		call	dword ptr [eax+0Ch]
		lea	eax, [ebp+var_150]
		fld	[ebp+var_1B8]
		sub	esp, 4
		fadd	[ebp+var_118]
		fsub	[ebp+var_1A0]
		fld	[ebp+var_1B8]
		fadd	[ebp+var_120]
		fsub	[ebp+var_1A0]
		fld	[ebp+var_1A0]
		fadd	[ebp+var_128]
		fld	[ebp+var_1A0]
		fadd	[ebp+var_130]
		fstp	[ebp+var_150]
		fstp	[ebp+var_148]
		fstp	[ebp+var_140]
		fstp	[ebp+var_138]
		mov	dword ptr [esp+8], 1
		mov	[esp+4], eax
		mov	eax, [ebp+var_190]
		mov	[esp], eax
		call	ds:_ZN8QPainter9drawRectsEPK6QRectFi
		lea	eax, [ebp+var_18C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71030810:				; CODE XREF: sub_710302E0+14Cj
		fstp	st(1)
		jmp	loc_71030434
; ---------------------------------------------------------------------------

loc_71030817:				; CODE XREF: sub_710302E0+17Ej
		mov	esi, esi
		lea	edi, [edi+0]
		jmp	ds:off_7105AA60[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_71030827:				; CODE XREF: sub_710302E0+540j
					; DATA XREF: .rdata:off_7105AA60o
		mov	eax, [ebp+var_194] ; jumptable 71030820	case 9
		lea	edx, [ebp+var_1C]
		mov	[esp], edx
		mov	[esp+4], eax
		mov	[ebp+var_188], 0FFFFFFFFh
		call	ds:_ZNK26QAbstractGraphicsShapeItem3penEv
		lea	ecx, [ebp+var_1C]
		sub	esp, 4
		mov	[esp], ecx
		mov	[ebp+var_188], 5
		call	ds:_ZNK4QPen6widthFEv
		lea	eax, [ebp+var_1C]
		fstp	[ebp+var_1C8]
		mov	[esp], eax
		mov	[ebp+var_188], 0FFFFFFFFh
		call	ds:_ZN4QPenD1Ev
		jmp	loc_71030470
; ---------------------------------------------------------------------------

loc_71030881:				; CODE XREF: sub_710302E0+540j
					; DATA XREF: .rdata:off_7105AA60o
		mov	edx, [ebp+var_194] ; jumptable 71030820	case 6
		lea	ecx, [ebp+var_20]
		mov	[esp], ecx
		mov	[esp+4], edx
		mov	[ebp+var_188], 0FFFFFFFFh
		call	ds:_ZNK17QGraphicsLineItem3penEv
		lea	eax, [ebp+var_20]
		sub	esp, 4
		mov	[esp], eax
		mov	[ebp+var_188], 4
		call	ds:_ZNK4QPen6widthFEv
		lea	eax, [ebp+var_20]
		fstp	[ebp+var_1C8]
		mov	[esp], eax
		mov	[ebp+var_188], 0FFFFFFFFh
		call	ds:_ZN4QPenD1Ev
		jmp	loc_71030470
; ---------------------------------------------------------------------------
		align 10h

loc_710308E0:				; CODE XREF: sub_710302E0+540j
					; DATA XREF: .rdata:off_7105AA60o
		mov	edx, [ebp+var_194] ; jumptable 71030820	case 5
		lea	ecx, [ebp+var_14]
		mov	[esp], ecx
		mov	[esp+4], edx
		mov	[ebp+var_188], 0FFFFFFFFh
		call	ds:_ZNK26QAbstractGraphicsShapeItem3penEv
		lea	eax, [ebp+var_14]
		sub	esp, 4
		mov	[esp], eax
		mov	[ebp+var_188], 7
		call	ds:_ZNK4QPen6widthFEv
		lea	eax, [ebp+var_14]
		fstp	[ebp+var_1C8]
		mov	[esp], eax
		mov	[ebp+var_188], 0FFFFFFFFh
		call	ds:_ZN4QPenD1Ev
		jmp	loc_71030470
; ---------------------------------------------------------------------------
		align 10h

loc_71030940:				; CODE XREF: sub_710302E0+540j
					; DATA XREF: .rdata:off_7105AA60o
		mov	ecx, [ebp+var_194] ; jumptable 71030820	case 4
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[esp+4], ecx
		mov	[ebp+var_188], 0FFFFFFFFh
		call	ds:_ZNK26QAbstractGraphicsShapeItem3penEv
		lea	edx, [ebp+var_C]
		sub	esp, 4
		mov	[esp], edx
		mov	[ebp+var_188], 9
		call	ds:_ZNK4QPen6widthFEv
		lea	eax, [ebp+var_C]
		fstp	[ebp+var_1C8]
		mov	[esp], eax
		mov	[ebp+var_188], 0FFFFFFFFh
		call	ds:_ZN4QPenD1Ev
		jmp	loc_71030470
; ---------------------------------------------------------------------------
		align 10h

loc_710309A0:				; CODE XREF: sub_710302E0+540j
					; DATA XREF: .rdata:off_7105AA60o
		mov	ecx, [ebp+var_194] ; jumptable 71030820	case 3
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[esp+4], ecx
		mov	[ebp+var_188], 0FFFFFFFFh
		call	ds:_ZNK26QAbstractGraphicsShapeItem3penEv
		lea	edx, [ebp+var_18]
		sub	esp, 4
		mov	[esp], edx
		mov	[ebp+var_188], 6
		call	ds:_ZNK4QPen6widthFEv
		lea	eax, [ebp+var_18]
		fstp	[ebp+var_1C8]
		mov	[esp], eax
		mov	[ebp+var_188], 0FFFFFFFFh
		call	ds:_ZN4QPenD1Ev
		jmp	loc_71030470
; ---------------------------------------------------------------------------
		align 10h

loc_71030A00:				; CODE XREF: sub_710302E0+540j
					; DATA XREF: .rdata:off_7105AA60o
		mov	eax, [ebp+var_194] ; jumptable 71030820	case 2
		lea	edx, [ebp+var_10]
		mov	[esp], edx
		mov	[esp+4], eax
		mov	[ebp+var_188], 0FFFFFFFFh
		call	ds:_ZNK26QAbstractGraphicsShapeItem3penEv
		lea	ecx, [ebp+var_10]
		sub	esp, 4
		mov	[esp], ecx
		mov	[ebp+var_188], 8
		call	ds:_ZNK4QPen6widthFEv
		lea	eax, [ebp+var_10]
		fstp	[ebp+var_1C8]
		mov	[esp], eax
		mov	[ebp+var_188], 0FFFFFFFFh
		call	ds:_ZN4QPenD1Ev
		jmp	loc_71030470
sub_710302E0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71030A5A	proc near		; DATA XREF: sub_710302E0+44o
		add	ebp, 8
		mov	eax, [ebp-188h]
		mov	edx, [ebp-184h]
		cmp	eax, 1
		mov	[ebp-1CCh], edx
		jz	short loc_71030AD7
		cmp	eax, 2
		jz	short loc_71030AED
		cmp	eax, 3
		jz	loc_71030B84
		cmp	eax, 4
		jz	loc_71030B89
		cmp	eax, 5
		xchg	ax, ax
		jz	loc_71030B7C
		cmp	eax, 6
		jz	loc_71030B4E
		cmp	eax, 7
		jz	short loc_71030B20
		cmp	eax, 8
		jz	short loc_71030B1B
		lea	eax, [ebp-2Ch]

loc_71030AAC:				; CODE XREF: sub_71030A5A+C4j
					; sub_71030A5A+125j
		mov	[esp+0], eax
		mov	dword ptr [ebp-188h], 0
		call	ds:_ZN4QPenD1Ev
		mov	ecx, [ebp-1CCh]
		mov	[esp+0], ecx
		mov	dword ptr [ebp-188h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71030AD7:				; CODE XREF: sub_71030A5A+18j
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-188h], 0
		call	ds:_ZN4QPenD1Ev

loc_71030AED:				; CODE XREF: sub_71030A5A+1Dj
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-188h], 0
		call	ds:_ZN6QBrushD1Ev
		mov	ecx, [ebp-1CCh]
		mov	[esp+0], ecx
		mov	dword ptr [ebp-188h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71030B1B:				; CODE XREF: sub_71030A5A+4Dj
		lea	eax, [ebp-0Ch]
		jmp	short loc_71030AAC
; ---------------------------------------------------------------------------

loc_71030B20:				; CODE XREF: sub_71030A5A+48j
		lea	eax, [ebp-10h]

loc_71030B23:				; CODE XREF: sub_71030A5A+136j
		mov	[esp+0], eax
		mov	dword ptr [ebp-188h], 0
		call	ds:_ZN4QPenD1Ev
		mov	eax, [ebp-1CCh]
		mov	[esp+0], eax
		mov	dword ptr [ebp-188h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71030B4E:				; CODE XREF: sub_71030A5A+3Fj
		lea	eax, [ebp-14h]

loc_71030B51:				; CODE XREF: sub_71030A5A+12Dj
		mov	[esp+0], eax
		mov	dword ptr [ebp-188h], 0
		call	ds:_ZN4QPenD1Ev
		mov	edx, [ebp-1CCh]
		mov	[esp+0], edx
		mov	dword ptr [ebp-188h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71030B7C:				; CODE XREF: sub_71030A5A+36j
		lea	eax, [ebp-18h]
		jmp	loc_71030AAC
; ---------------------------------------------------------------------------

loc_71030B84:				; CODE XREF: sub_71030A5A+22j
		lea	eax, [ebp-20h]
		jmp	short loc_71030B51
; ---------------------------------------------------------------------------

loc_71030B89:				; CODE XREF: sub_71030A5A+2Bj
		lea	eax, [ebp-1Ch]
		lea	esi, [esi+0]
		jmp	short loc_71030B23
sub_71030A5A	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 141. _ZThn8_N16QGraphicsSvgItem5paintEP8QPainterPK24QStyleOptionGraphicsItemP7QWidget

; =============== S U B	R O U T	I N E =======================================


		public _ZThn8_N16QGraphicsSvgItem5paintEP8QPainterPK24QStyleOptionGraphicsItemP7QWidget
_ZThn8_N16QGraphicsSvgItem5paintEP8QPainterPK24QStyleOptionGraphicsItemP7QWidget proc near
					; DATA XREF: .rdata:7105D874o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF8h
		jmp	short _ZN16QGraphicsSvgItem5paintEP8QPainterPK24QStyleOptionGraphicsItemP7QWidget
_ZThn8_N16QGraphicsSvgItem5paintEP8QPainterPK24QStyleOptionGraphicsItemP7QWidget endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  65. _ZN16QGraphicsSvgItem5paintEP8QPainterPK24QStyleOptionGraphicsItemP7QWidget

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QGraphicsSvgItem5paintEP8QPainterPK24QStyleOptionGraphicsItemP7QWidget
_ZN16QGraphicsSvgItem5paintEP8QPainterPK24QStyleOptionGraphicsItemP7QWidget proc near
					; CODE XREF: _ZThn8_N16QGraphicsSvgItem5paintEP8QPainterPK24QStyleOptionGraphicsItemP7QWidget+5j
					; DATA XREF: .rdata:7105D83Co

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 2Ch
		mov	[esp+2Ch+var_8], edi
		mov	edi, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_10], ebx
		mov	ebx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_4], ebp
		mov	ebp, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_C], esi
		mov	esi, [edi+0Ch]
		mov	eax, [esi+114h]
		mov	[esp+2Ch+var_2C], eax
		call	_ZNK12QSvgRenderer7isValidEv
		test	al, al
		jz	short loc_71030C40
		mov	eax, [esi+13Ch]
		mov	eax, [eax+8]
		test	eax, eax
		jz	short loc_71030C54
		lea	eax, [esi+118h]
		mov	[esp+2Ch+var_20], eax
		lea	eax, [esi+13Ch]
		mov	[esp+2Ch+var_24], eax
		mov	[esp+2Ch+var_28], ebx
		mov	eax, [esi+114h]
		mov	[esp+2Ch+var_2C], eax
		call	_ZN12QSvgRenderer6renderEP8QPainterRK7QStringRK6QRectF

loc_71030C17:				; CODE XREF: _ZN16QGraphicsSvgItem5paintEP8QPainterPK24QStyleOptionGraphicsItemP7QWidget+C0j
		cmp	word ptr [ebp+8], 0
		jns	short loc_71030C40
		lea	eax, [edi+8]
		mov	ecx, ebp
		mov	esi, [esp+2Ch+var_C]
		mov	edx, ebx
		mov	edi, [esp+2Ch+var_8]
		mov	ebx, [esp+2Ch+var_10]
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		jmp	sub_710302E0
; ---------------------------------------------------------------------------
		align 10h

loc_71030C40:				; CODE XREF: _ZN16QGraphicsSvgItem5paintEP8QPainterPK24QStyleOptionGraphicsItemP7QWidget+32j
					; _ZN16QGraphicsSvgItem5paintEP8QPainterPK24QStyleOptionGraphicsItemP7QWidget+6Cj
		mov	ebx, [esp+2Ch+var_10]
		mov	esi, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_8]
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_71030C54:				; CODE XREF: _ZN16QGraphicsSvgItem5paintEP8QPainterPK24QStyleOptionGraphicsItemP7QWidget+3Fj
		lea	eax, [esi+118h]
		mov	[esp+2Ch+var_24], eax
		mov	[esp+2Ch+var_28], ebx
		mov	eax, [esi+114h]
		mov	[esp+2Ch+var_2C], eax
		call	_ZN12QSvgRenderer6renderEP8QPainterRK6QRectF
		jmp	short loc_71030C17
_ZN16QGraphicsSvgItem5paintEP8QPainterPK24QStyleOptionGraphicsItemP7QWidget endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  61. _ZN16QGraphicsSvgItem17setSharedRendererEP12QSvgRenderer

; =============== S U B	R O U T	I N E =======================================


		public _ZN16QGraphicsSvgItem17setSharedRendererEP12QSvgRenderer
_ZN16QGraphicsSvgItem17setSharedRendererEP12QSvgRenderer proc near

var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_6C		= qword	ptr -6Ch
var_5C		= qword	ptr -5Ch
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_3C		= qword	ptr -3Ch
var_34		= qword	ptr -34h
var_2C		= qword	ptr -2Ch
var_24		= qword	ptr -24h
var_1C		= qword	ptr -1Ch
var_14		= qword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		push	esi
		push	ebx
		sub	esp, 70h
		mov	esi, [esp+7Ch+arg_0]
		mov	edi, [esp+7Ch+arg_4]
		mov	ebx, [esi+0Ch]
		cmp	byte ptr [ebx+138h], 0
		jnz	short loc_71030CB2
		mov	eax, [ebx+114h]
		test	eax, eax
		jz	short loc_71030CB2
		mov	edx, [eax]
		mov	[esp+7Ch+var_7C], eax
		call	dword ptr [edx+10h]

loc_71030CB2:				; CODE XREF: _ZN16QGraphicsSvgItem17setSharedRendererEP12QSvgRenderer+1Ej
					; _ZN16QGraphicsSvgItem17setSharedRendererEP12QSvgRenderer+28j
		mov	eax, [ebx+13Ch]
		mov	[ebx+114h], edi
		mov	byte ptr [ebx+138h], 1
		mov	edx, [eax+8]
		test	edx, edx
		jnz	loc_71030E13
		mov	[esp+7Ch+var_7C], edi
		call	_ZNK12QSvgRenderer11defaultSizeEv
		mov	[esp+7Ch+var_50], eax
		fild	[esp+7Ch+var_50]
		mov	[esp+7Ch+var_50], edx
		fild	[esp+7Ch+var_50]

loc_71030CE8:				; CODE XREF: _ZN16QGraphicsSvgItem17setSharedRendererEP12QSvgRenderer+1B8j
		fld	qword ptr [ebx+130h]
		fld	qword ptr [ebx+128h]
		fld	st
		fsub	st, st(4)
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_71030D07
		fchs

loc_71030D07:				; CODE XREF: _ZN16QGraphicsSvgItem17setSharedRendererEP12QSvgRenderer+83j
		fld	st(4)
		fldz
		fxch	st(6)
		fucom	st(6)
		fnstsw	ax
		fstp	st(6)
		sahf
		jnb	short loc_71030D18
		fchs

loc_71030D18:				; CODE XREF: _ZN16QGraphicsSvgItem17setSharedRendererEP12QSvgRenderer+94j
		fldz
		fxch	st(3)
		fucom	st(3)
		fnstsw	ax
		fstp	st(3)
		sahf
		jnb	short loc_71030D2B
		fxch	st(2)
		fchs
		fxch	st(2)

loc_71030D2B:				; CODE XREF: _ZN16QGraphicsSvgItem17setSharedRendererEP12QSvgRenderer+A3j
		fucom	st(2)
		fnstsw	ax
		sahf
		ja	short loc_71030D38
		fstp	st(2)
		fxch	st(1)
		jmp	short loc_71030D3C
; ---------------------------------------------------------------------------

loc_71030D38:				; CODE XREF: _ZN16QGraphicsSvgItem17setSharedRendererEP12QSvgRenderer+B0j
		fstp	st
		fxch	st(1)

loc_71030D3C:				; CODE XREF: _ZN16QGraphicsSvgItem17setSharedRendererEP12QSvgRenderer+B6j
		fmul	ds:dbl_7105AB88
		fucompp
		fnstsw	ax
		sahf
		jb	short loc_71030DA2
		fld	st
		fsub	st, st(2)
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jb	loc_71030E67

loc_71030D5E:				; CODE XREF: _ZN16QGraphicsSvgItem17setSharedRendererEP12QSvgRenderer+1E9j
		fld	st(2)
		fldz
		fxch	st(4)
		fucom	st(4)
		fnstsw	ax
		fstp	st(4)
		sahf
		jb	loc_71030E60

loc_71030D71:				; CODE XREF: _ZN16QGraphicsSvgItem17setSharedRendererEP12QSvgRenderer+1E2j
		fldz
		fxch	st(3)
		fucom	st(3)
		fnstsw	ax
		fstp	st(3)
		sahf
		jb	loc_71030E50

loc_71030D82:				; CODE XREF: _ZN16QGraphicsSvgItem17setSharedRendererEP12QSvgRenderer+1D6j
		fucom	st(2)
		fnstsw	ax
		sahf
		jbe	loc_71030E40
		fstp	st
		fxch	st(1)

loc_71030D91:				; CODE XREF: _ZN16QGraphicsSvgItem17setSharedRendererEP12QSvgRenderer+1C4j
		fmul	ds:dbl_7105AB88
		fucompp
		fnstsw	ax
		sahf
		jnb	short loc_71030DE2
		fxch	st(1)
		jmp	short loc_71030DA6
; ---------------------------------------------------------------------------

loc_71030DA2:				; CODE XREF: _ZN16QGraphicsSvgItem17setSharedRendererEP12QSvgRenderer+C7j
		fstp	st
		fxch	st(1)

loc_71030DA6:				; CODE XREF: _ZN16QGraphicsSvgItem17setSharedRendererEP12QSvgRenderer+120j
		mov	edx, [ebx+110h]
		fstp	[esp+7Ch+var_5C]
		fstp	[esp+7Ch+var_6C]
		cmp	edx, 1
		lea	eax, [edx-8]
		sbb	edx, edx
		not	edx
		and	eax, edx
		add	eax, 8
		mov	[esp+7Ch+var_7C], eax
		call	ds:_ZN13QGraphicsItem21prepareGeometryChangeEv
		fld	[esp+7Ch+var_5C]
		fstp	qword ptr [ebx+128h]
		fld	[esp+7Ch+var_6C]
		fstp	qword ptr [ebx+130h]
		jmp	short loc_71030DE6
; ---------------------------------------------------------------------------

loc_71030DE2:				; CODE XREF: _ZN16QGraphicsSvgItem17setSharedRendererEP12QSvgRenderer+11Cj
		fstp	st
		fstp	st

loc_71030DE6:				; CODE XREF: _ZN16QGraphicsSvgItem17setSharedRendererEP12QSvgRenderer+160j
		fldz
		add	esi, 8
		fst	[esp+7Ch+var_24]
		lea	eax, [esp+7Ch+var_2C]
		fst	[esp+7Ch+var_2C]
		mov	[esp+7Ch+var_7C], esi
		fst	[esp+7Ch+var_14]
		mov	[esp+7Ch+var_78], eax
		fstp	[esp+7Ch+var_1C]
		call	ds:_ZN13QGraphicsItem6updateERK6QRectF
		add	esp, 70h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_71030E13:				; CODE XREF: _ZN16QGraphicsSvgItem17setSharedRendererEP12QSvgRenderer+4Aj
		lea	eax, [esp+7Ch+var_4C]
		lea	edx, [ebx+13Ch]
		mov	[esp+7Ch+var_74], edx
		mov	[esp+7Ch+var_78], edi
		mov	[esp+7Ch+var_7C], eax
		call	_ZNK12QSvgRenderer15boundsOnElementERK7QString
		sub	esp, 4
		fld	[esp+7Ch+var_3C]
		fld	[esp+7Ch+var_34]
		jmp	loc_71030CE8
; ---------------------------------------------------------------------------
		align 10h

loc_71030E40:				; CODE XREF: _ZN16QGraphicsSvgItem17setSharedRendererEP12QSvgRenderer+107j
		fstp	st(2)
		fxch	st(1)
		jmp	loc_71030D91
; ---------------------------------------------------------------------------
		align 10h

loc_71030E50:				; CODE XREF: _ZN16QGraphicsSvgItem17setSharedRendererEP12QSvgRenderer+FCj
		fxch	st(2)
		fchs
		fxch	st(2)
		jmp	loc_71030D82
; ---------------------------------------------------------------------------
		align 10h

loc_71030E60:				; CODE XREF: _ZN16QGraphicsSvgItem17setSharedRendererEP12QSvgRenderer+EBj
		fchs
		jmp	loc_71030D71
; ---------------------------------------------------------------------------

loc_71030E67:				; CODE XREF: _ZN16QGraphicsSvgItem17setSharedRendererEP12QSvgRenderer+D8j
		fchs
		jmp	loc_71030D5E
_ZN16QGraphicsSvgItem17setSharedRendererEP12QSvgRenderer endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  63. _ZN16QGraphicsSvgItem19setMaximumCacheSizeERK5QSize

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QGraphicsSvgItem19setMaximumCacheSizeERK5QSize
_ZN16QGraphicsSvgItem19setMaximumCacheSizeERK5QSize proc near
					; CODE XREF: _ZN16QGraphicsSvgItem11qt_metacallEN11QMetaObject4CallEiPPv+F7p
					; _ZN16QGraphicsSvgItemC2EP13QGraphicsItem+323p ...

var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= byte ptr -9Ch
var_98		= dword	ptr -98h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_60		= qword	ptr -60h
var_58		= qword	ptr -58h
var_50		= qword	ptr -50h
var_48		= qword	ptr -48h
var_40		= dword	ptr -40h
var_38		= byte ptr -38h
var_28		= byte ptr -28h
var_18		= byte ptr -18h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		lea	eax, [ebp+var_8]
		sub	esp, 0B0h
		mov	[ebp+var_7C], eax
		lea	eax, [ebp+var_9C]
		mov	[esp], eax
		mov	[ebp+var_84], offset sub_710525B0
		mov	[ebp+var_80], offset dword_71053A28
		mov	[ebp+var_78], offset sub_7103107F
		mov	[ebp+var_74], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		call	ds:_ZN8QVariantC1ERK5QSize
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+0Ch]
		mov	[ebp+var_A4], edx
		mov	edx, [edx+4]
		mov	ebx, [edx+8]
		mov	ecx, [edx+0Ch]
		sub	ecx, ebx
		test	ecx, ecx
		jle	short loc_71030F26
		mov	eax, [edx+ebx*4+14h]
		mov	[ebp+var_A0], 0
		cmp	dword ptr [eax], 3
		jnz	short loc_71030F17
		jmp	loc_71031007
; ---------------------------------------------------------------------------
		align 10h

loc_71030F00:				; CODE XREF: _ZN16QGraphicsSvgItem19setMaximumCacheSizeERK5QSize+B4j
		mov	esi, [ebp+var_A0]
		lea	eax, [ebx+esi+4]
		mov	eax, [edx+eax*4+4]
		cmp	dword ptr [eax], 3
		jz	loc_71031011

loc_71030F17:				; CODE XREF: _ZN16QGraphicsSvgItem19setMaximumCacheSizeERK5QSize+83j
		add	[ebp+var_A0], 1
		cmp	ecx, [ebp+var_A0]
		jg	short loc_71030F00

loc_71030F26:				; CODE XREF: _ZN16QGraphicsSvgItem19setMaximumCacheSizeERK5QSize+70j
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_98], 3
		call	ds:_ZN8QVariantC1ERKS_
		lea	eax, [ebp+var_28]
		mov	[esp+4], eax
		lea	eax, [ebp+var_38]
		mov	[ebp+var_40], 3
		mov	[esp], eax
		mov	[ebp+var_98], 2
		call	ds:_ZN8QVariantC1ERKS_
		lea	eax, [ebp+var_40]
		mov	[esp+4], eax
		mov	eax, [ebp+var_A4]
		mov	[ebp+var_98], 1
		add	eax, 4
		mov	[esp], eax
		call	sub_71046730
		lea	eax, [ebp+var_38]
		mov	[esp], eax
		mov	[ebp+var_98], 2
		call	ds:_ZN8QVariantD1Ev
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		mov	[ebp+var_98], 3
		call	ds:_ZN8QVariantD1Ev

loc_71030FB5:				; CODE XREF: _ZN16QGraphicsSvgItem19setMaximumCacheSizeERK5QSize+20Aj
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_98], 0FFFFFFFFh
		call	ds:_ZN8QVariantD1Ev
		lea	eax, [ebp+var_60]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		add	eax, 8
		fldz
		fst	[ebp+var_58]
		mov	[esp], eax
		fst	[ebp+var_60]
		fst	[ebp+var_48]
		fstp	[ebp+var_50]
		call	ds:_ZN13QGraphicsItem6updateERK6QRectF
		lea	eax, [ebp+var_9C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 0B0h
		pop	ebx
		pop	esi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_71031007:				; CODE XREF: _ZN16QGraphicsSvgItem19setMaximumCacheSizeERK5QSize+85j
		mov	[ebp+var_A0], 0

loc_71031011:				; CODE XREF: _ZN16QGraphicsSvgItem19setMaximumCacheSizeERK5QSize+A1j
		mov	ecx, [ebp+var_A4]
		mov	eax, [ecx+4]
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	short loc_7103104F
		mov	eax, [eax+4]
		mov	[ebp+var_98], 3
		mov	[esp+4], eax
		mov	eax, [ebp+var_A4]
		add	eax, 4
		mov	[esp], eax
		call	sub_710464C0
		mov	eax, [ebp+var_A4]
		mov	edx, [eax+4]
		mov	ebx, [edx+8]

loc_7103104F:				; CODE XREF: _ZN16QGraphicsSvgItem19setMaximumCacheSizeERK5QSize+1AFj
		mov	ecx, [ebp+var_A0]
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		lea	eax, [ebx+ecx+4]
		mov	eax, [edx+eax*4+4]
		mov	[ebp+var_98], 3
		add	eax, 8
		mov	[esp], eax
		call	ds:_ZN8QVariantaSERKS_
		jmp	loc_71030FB5
_ZN16QGraphicsSvgItem19setMaximumCacheSizeERK5QSize endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7103107F	proc near		; DATA XREF: _ZN16QGraphicsSvgItem19setMaximumCacheSizeERK5QSize+2Bo
		add	ebp, 8
		mov	eax, [ebp-98h]
		mov	esi, [ebp-94h]
		cmp	eax, 1
		mov	[ebp-0A8h], esi
		jz	short loc_710310B4
		cmp	eax, 2
		jz	short loc_710310CA
		lea	eax, [ebp-38h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	ds:_ZN8QVariantD1Ev

loc_710310B4:				; CODE XREF: sub_7103107F+18j
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	ds:_ZN8QVariantD1Ev

loc_710310CA:				; CODE XREF: sub_7103107F+1Dj
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	ds:_ZN8QVariantD1Ev
		mov	esi, [ebp-0A8h]
		mov	dword ptr [ebp-98h], 0FFFFFFFFh
		mov	[esp+0], esi
		call	_Unwind_SjLj_Resume
sub_7103107F	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  56. _ZN16QGraphicsSvgItem11qt_metacallEN11QMetaObject4CallEiPPv

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QGraphicsSvgItem11qt_metacallEN11QMetaObject4CallEiPPv
_ZN16QGraphicsSvgItem11qt_metacallEN11QMetaObject4CallEiPPv proc near
					; DATA XREF: .rdata:7105D810o

var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset word_71053A32
		mov	[ebp+var_28], offset sub_710312E2
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_C]
		mov	[esp+0Ch], edx
		mov	eax, [ebp+arg_8]
		mov	[esp+8], eax
		mov	ecx, [ebp+arg_4]
		mov	[esp+4], ecx
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN15QGraphicsObject11qt_metacallEN11QMetaObject4CallEiPPv
		test	eax, eax
		mov	[ebp+var_50], eax
		js	short loc_710311A2
		mov	edx, [ebp+arg_4]
		test	edx, edx
		jz	short loc_710311B2
		cmp	[ebp+arg_4], 1
		jz	loc_71031214
		cmp	[ebp+arg_4], 2
		jz	short loc_710311D0
		cmp	[ebp+arg_4], 3
		jz	loc_71031200
		cmp	[ebp+arg_4], 4
		jz	short loc_71031200
		cmp	[ebp+arg_4], 5
		jz	short loc_71031200
		cmp	[ebp+arg_4], 6
		nop
		jz	short loc_71031200
		cmp	[ebp+arg_4], 7
		jz	short loc_71031200
		cmp	[ebp+arg_4], 8
		lea	esi, [esi+0]
		jz	short loc_71031200

loc_710311A2:				; CODE XREF: _ZN16QGraphicsSvgItem11qt_metacallEN11QMetaObject4CallEiPPv+5Cj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_50]
		leave
		retn
; ---------------------------------------------------------------------------

loc_710311B2:				; CODE XREF: _ZN16QGraphicsSvgItem11qt_metacallEN11QMetaObject4CallEiPPv+63j
		test	eax, eax
		jz	loc_710312A0

loc_710311BA:				; CODE XREF: _ZN16QGraphicsSvgItem11qt_metacallEN11QMetaObject4CallEiPPv+1C2j
		sub	[ebp+var_50], 1
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_50]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_710311D0:				; CODE XREF: _ZN16QGraphicsSvgItem11qt_metacallEN11QMetaObject4CallEiPPv+73j
		mov	ecx, [ebp+var_50]
		mov	edx, [ebp+arg_C]
		test	ecx, ecx
		mov	eax, [edx]
		jz	loc_710312C7
		cmp	[ebp+var_50], 1
		jnz	short loc_71031200
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	_ZN16QGraphicsSvgItem19setMaximumCacheSizeERK5QSize
		lea	esi, [esi+0]

loc_71031200:				; CODE XREF: _ZN16QGraphicsSvgItem11qt_metacallEN11QMetaObject4CallEiPPv+79j
					; _ZN16QGraphicsSvgItem11qt_metacallEN11QMetaObject4CallEiPPv+83j ...
		sub	[ebp+var_50], 2
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_50]
		leave
		retn
; ---------------------------------------------------------------------------

loc_71031214:				; CODE XREF: _ZN16QGraphicsSvgItem11qt_metacallEN11QMetaObject4CallEiPPv+69j
		mov	eax, [ebp+arg_C]
		mov	eax, [eax]
		mov	[ebp+var_54], eax
		mov	eax, [ebp+var_50]
		test	eax, eax
		jnz	short loc_71031274
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		mov	eax, [eax+13Ch]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	ecx, [ebp+var_54]
		mov	[esp], ecx
		mov	[ebp+var_48], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71031200
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_71031200
; ---------------------------------------------------------------------------

loc_71031274:				; CODE XREF: _ZN16QGraphicsSvgItem11qt_metacallEN11QMetaObject4CallEiPPv+121j
		cmp	[ebp+var_50], 1
		jnz	short loc_71031200
		mov	ecx, [ebp+arg_0]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	_ZNK16QGraphicsSvgItem16maximumCacheSizeEv
		mov	ecx, [ebp+var_54]
		mov	[ecx], eax
		mov	[ecx+4], edx
		jmp	loc_71031200
; ---------------------------------------------------------------------------
		align 10h

loc_710312A0:				; CODE XREF: _ZN16QGraphicsSvgItem11qt_metacallEN11QMetaObject4CallEiPPv+B4j
		mov	edx, [ebp+arg_C]
		mov	dword ptr [esp+8], 0
		mov	dword ptr [esp+4], 0
		mov	[esp+0Ch], edx
		mov	ecx, [ebp+arg_0]
		mov	[esp], ecx
		call	_ZN16QGraphicsSvgItem18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv
		jmp	loc_710311BA
; ---------------------------------------------------------------------------

loc_710312C7:				; CODE XREF: _ZN16QGraphicsSvgItem11qt_metacallEN11QMetaObject4CallEiPPv+DAj
		mov	[esp+4], eax
		mov	ecx, [ebp+arg_0]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	_ZN16QGraphicsSvgItem12setElementIdERK7QString
		jmp	loc_71031200
_ZN16QGraphicsSvgItem11qt_metacallEN11QMetaObject4CallEiPPv endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710312E2	proc near		; DATA XREF: _ZN16QGraphicsSvgItem11qt_metacallEN11QMetaObject4CallEiPPv+1Do
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	[ebp-58h], eax
		mov	eax, [ebp-0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7103130B
		mov	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7103130B:				; CODE XREF: sub_710312E2+14j
		mov	edx, [ebp-58h]
		mov	[esp+0], edx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_710312E2	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  68. _ZN16QGraphicsSvgItemC2EP13QGraphicsItem

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QGraphicsSvgItemC2EP13QGraphicsItem
_ZN16QGraphicsSvgItemC2EP13QGraphicsItem proc near

var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 98h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71053A38
		mov	[ebp+var_28], offset sub_71031655
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 140h ;	size_t
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_710517F0
		mov	[ebp+var_58], eax
		mov	eax, ds:_ZTV20QGraphicsItemPrivate
		mov	edx, [ebp+var_58]
		add	eax, 8
		mov	[edx], eax
		mov	eax, ds:_ZN9QListData11shared_nullE
		mov	[ebp+var_54], eax
		mov	[edx+4], eax
		mov	edx, [ebp+var_54]
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+var_58]
		fldz
		mov	edx, ds:_ZN8QMapData11shared_nullE
		fst	qword ptr [eax+10h]
		mov	[ebp+var_50], edx
		fst	qword ptr [eax+8]
		mov	[eax+48h], edx
		fst	qword ptr [eax+20h]
		fst	qword ptr [eax+18h]
		fst	qword ptr [eax+30h]
		fst	qword ptr [eax+28h]
		fst	qword ptr [eax+40h]
		fst	qword ptr [eax+38h]
		lock inc dword ptr [edx+34h]
		setnz	al
		mov	eax, [ebp+var_58]
		fst	qword ptr [eax+50h]
		fst	qword ptr [eax+58h]
		fstp	qword ptr [eax+60h]
		fld1
		fstp	qword ptr [eax+68h]
		mov	dword ptr [eax+70h], 0
		mov	edx, [ebp+var_54]
		mov	dword ptr [eax+74h], 0
		mov	[eax+78h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+var_58]
		mov	dword ptr [eax+7Ch], 0
		mov	dword ptr [eax+80h], 0
		add	eax, 88h
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN10QTransformC1Ev
		mov	edx, [ebp+var_58]
		mov	eax, [ebp+var_54]
		mov	dword ptr [edx+0D8h], 0FFFFFFFFh
		mov	[edx+0E8h], eax
		mov	dword ptr [edx+0DCh], 0FFFFFFFFh
		mov	dword ptr [edx+0E0h], 0FFFFFFFFh
		mov	dword ptr [edx+0E4h], 0
		mov	edx, [ebp+var_54]
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+var_58]
		mov	edx, [ebp+var_50]
		mov	dword ptr [eax+0ECh], 0
		mov	[eax+0FCh], edx
		mov	dword ptr [eax+0F0h], 0
		mov	dword ptr [eax+0F4h], 0
		mov	dword ptr [eax+0F8h], 0
		lock inc dword ptr [edx+34h]
		setnz	al
		mov	eax, [ebp+var_58]
		fldz
		mov	byte ptr [eax+100h], 0BFh
		mov	byte ptr [eax+101h], 0
		mov	byte ptr [eax+102h], 0
		mov	byte ptr [eax+103h], 80h
		mov	edx, [ebp+var_58]
		mov	eax, [edx+104h]
		and	eax, 0FFF80000h
		mov	[edx+104h], eax
		mov	byte ptr [edx+106h], 30h
		mov	byte ptr [edx+107h], 0
		mov	byte ptr [edx+108h], 11h
		mov	eax, ds:_ZN7QString11shared_nullE
		fst	qword ptr [edx+120h]
		and	byte ptr [edx+109h], 0F8h
		fst	qword ptr [edx+118h]
		mov	dword ptr [edx+10Ch], 0FFFFFFFFh
		fst	qword ptr [edx+130h]
		mov	dword ptr [edx+110h], 0
		mov	dword ptr [edx], offset	off_7105DB08
		mov	dword ptr [edx+114h], 0
		fstp	qword ptr [edx+128h]
		mov	byte ptr [edx+138h], 0
		mov	[edx+13Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_58]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 0
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN15QGraphicsObjectC2ER20QGraphicsItemPrivateP13QGraphicsItemP14QGraphicsScene
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+0Ch]
		mov	dword ptr [eax], offset	off_7105D808
		mov	dword ptr [eax+8], offset off_7105D84C
		mov	eax, [edx+110h]
		mov	[ebp+var_68], edx
		mov	[ebp+var_48], 3
		cmp	eax, 1
		lea	edx, [eax-8]
		sbb	eax, eax
		not	eax
		and	edx, eax
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_5C], edx
		add	edx, 8
		mov	[ebp+var_64], edx
		mov	[esp], edx
		mov	[esp+4], eax
		call	ds:_ZN13QGraphicsItem13setParentItemEPS_
		mov	dword ptr [esp], 8 ; size_t
		call	sub_710517F0
		mov	[ebp+var_60], eax
		mov	eax, [ebp+var_5C]
		mov	edx, [ebp+var_60]
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		mov	[esp], edx
		call	_ZN12QSvgRendererC1EP7QObject
		mov	eax, [ebp+var_60]
		mov	edx, [ebp+var_68]
		mov	[edx+114h], eax
		mov	edx, [ebp+var_5C]
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], offset a1_q_repaintite ; "1_q_repaintItem()"
		mov	dword ptr [esp+4], offset a2repaintneed_1 ; "2repaintNeeded()"
		mov	[esp+8], edx
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	ds:_ZN7QObject7connectEPKS_PKcS1_S3_N2Qt14ConnectionTypeE
		lea	eax, [ebp+var_18]
		mov	[esp+8], eax
		mov	eax, [ebp+var_64]
		mov	[ebp+var_14], 0FFFFFFFFh
		mov	[ebp+var_18], 0FFFFFFFFh
		mov	dword ptr [esp+4], 2
		mov	[esp], eax
		call	ds:_ZN13QGraphicsItem12setCacheModeENS_9CacheModeERK5QSize
		mov	edx, [ebp+var_5C]
		lea	eax, [ebp+var_10]
		mov	[ebp+var_10], 400h
		mov	[ebp+var_C], 300h
		mov	[esp+4], eax
		mov	[esp], edx
		call	_ZN16QGraphicsSvgItem19setMaximumCacheSizeERK5QSize
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QGraphicsSvgItemC2EP13QGraphicsItem endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71031655	proc near		; DATA XREF: _ZN16QGraphicsSvgItemC2EP13QGraphicsItem+23o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-70h], edx
		jz	short loc_7103169A
		cmp	eax, 2
		jz	short loc_71031676
		mov	eax, [ebp-60h]
		mov	[esp+0], eax
		call	sub_710517D0

loc_71031676:				; CODE XREF: sub_71031655+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], eax
		call	sub_7103C530
		mov	edx, [ebp-70h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7103169A:				; CODE XREF: sub_71031655+Fj
		mov	eax, [ebp-70h]
		mov	edx, [ebp-58h]
		mov	[ebp-6Ch], eax
		mov	eax, [edx+78h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710316C6
		mov	edx, [ebp-58h]
		mov	eax, [edx+78h]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], eax
		call	ds:_Z5qFreePv

loc_710316C6:				; CODE XREF: sub_71031655+59j
		mov	eax, [ebp-58h]
		mov	dword ptr [ebp-48h], 0
		add	eax, 48h
		mov	[esp+0], eax
		call	sub_71044460
		mov	edx, [ebp-58h]
		mov	eax, [edx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71031709
		mov	edx, [ebp-58h]
		mov	eax, [edx+4]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+arg_0], eax
		mov	eax, edx
		add	eax, 4
		mov	[esp+0], eax
		call	sub_710466C0

loc_71031709:				; CODE XREF: sub_71031655+94j
		mov	eax, [ebp-58h]
		mov	[esp+0], eax
		call	sub_710517D0
		mov	edx, [ebp-6Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_71031655	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  67. _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem
_ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem proc	near

var_A4		= dword	ptr -0A4h
var_A0		= qword	ptr -0A0h
var_94		= dword	ptr -94h
var_90		= qword	ptr -90h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_38		= byte ptr -38h
var_28		= qword	ptr -28h
var_20		= qword	ptr -20h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_4C], eax
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		mov	[ebp+var_54], offset sub_710525B0
		mov	[ebp+var_50], offset word_71053A5E
		mov	[ebp+var_48], offset sub_71031C3E
		mov	[ebp+var_44], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 140h ;	size_t
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_710517F0
		mov	ecx, ds:_ZN9QListData11shared_nullE
		mov	[ebp+var_78], ecx
		mov	[ebp+var_7C], eax
		mov	eax, ds:_ZTV20QGraphicsItemPrivate
		mov	edx, [ebp+var_7C]
		add	eax, 8
		mov	[edx+4], ecx
		mov	[edx], eax
		lock inc dword ptr [ecx]
		setnz	al
		fldz
		mov	eax, ds:_ZN8QMapData11shared_nullE
		fst	qword ptr [edx+10h]
		fst	qword ptr [edx+8]
		mov	[ebp+var_74], eax
		fst	qword ptr [edx+20h]
		mov	[edx+48h], eax
		fst	qword ptr [edx+18h]
		fst	qword ptr [edx+30h]
		fst	qword ptr [edx+28h]
		fst	qword ptr [edx+40h]
		fst	qword ptr [edx+38h]
		mov	edx, [ebp+var_74]
		lock inc dword ptr [edx+34h]
		setnz	al
		mov	ecx, [ebp+var_7C]
		fst	qword ptr [ecx+50h]
		mov	dword ptr [ecx+70h], 0
		fst	qword ptr [ecx+58h]
		fstp	qword ptr [ecx+60h]
		fld1
		fstp	qword ptr [ecx+68h]
		mov	dword ptr [ecx+74h], 0
		mov	eax, [ebp+var_78]
		mov	[ecx+78h], eax
		mov	edx, [ebp+var_78]
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, ecx
		add	eax, 88h
		mov	dword ptr [ecx+7Ch], 0
		mov	dword ptr [ecx+80h], 0
		mov	[esp], eax
		mov	[ebp+var_68], 2
		call	ds:_ZN10QTransformC1Ev
		mov	ecx, [ebp+var_7C]
		mov	eax, [ebp+var_78]
		mov	dword ptr [ecx+0D8h], 0FFFFFFFFh
		mov	[ecx+0E8h], eax
		mov	edx, [ebp+var_78]
		mov	dword ptr [ecx+0DCh], 0FFFFFFFFh
		mov	dword ptr [ecx+0E0h], 0FFFFFFFFh
		mov	dword ptr [ecx+0E4h], 0
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+var_74]
		mov	dword ptr [ecx+0ECh], 0
		mov	dword ptr [ecx+0F0h], 0
		mov	dword ptr [ecx+0F4h], 0
		mov	[ecx+0FCh], eax
		mov	edx, [ebp+var_74]
		mov	dword ptr [ecx+0F8h], 0
		lock inc dword ptr [edx+34h]
		setnz	al
		mov	eax, [ecx+104h]
		fldz
		mov	byte ptr [ecx+100h], 0BFh
		mov	byte ptr [ecx+101h], 0
		mov	byte ptr [ecx+102h], 0
		and	eax, 0FFF80000h
		mov	[ecx+104h], eax
		mov	byte ptr [ecx+103h], 80h
		mov	byte ptr [ecx+106h], 30h
		mov	byte ptr [ecx+107h], 0
		mov	byte ptr [ecx+108h], 11h
		and	byte ptr [ecx+109h], 0F8h
		mov	dword ptr [ecx+10Ch], 0FFFFFFFFh
		mov	eax, ds:_ZN7QString11shared_nullE
		fst	qword ptr [ecx+120h]
		mov	dword ptr [ecx+110h], 0
		fst	qword ptr [ecx+118h]
		mov	dword ptr [ecx], offset	off_7105DB08
		fst	qword ptr [ecx+130h]
		mov	dword ptr [ecx+114h], 0
		fstp	qword ptr [ecx+128h]
		mov	byte ptr [ecx+138h], 0
		mov	[ecx+13Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[esp+4], ecx
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], ecx
		call	ds:_ZN15QGraphicsObjectC2ER20QGraphicsItemPrivateP13QGraphicsItemP14QGraphicsScene
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+0Ch]
		mov	dword ptr [eax], offset	off_7105D808
		mov	dword ptr [eax+8], offset off_7105D84C
		mov	eax, [edx+110h]
		mov	[ebp+var_80], edx
		mov	[ebp+var_68], 3
		cmp	eax, 1
		lea	ecx, [eax-8]
		sbb	eax, eax
		not	eax
		and	ecx, eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_84], ecx
		add	ecx, 8
		mov	[ebp+var_A4], ecx
		mov	[esp], ecx
		mov	[esp+4], eax
		call	ds:_ZN13QGraphicsItem13setParentItemEPS_
		mov	dword ptr [esp], 8 ; size_t
		call	sub_710517F0
		mov	ecx, [ebp+var_84]
		mov	[ebp+var_94], eax
		mov	[esp], eax
		mov	[ebp+var_68], 1
		mov	[esp+4], ecx
		call	_ZN12QSvgRendererC1EP7QObject
		mov	edx, [ebp+var_94]
		mov	eax, [ebp+var_80]
		mov	ecx, [ebp+var_84]
		mov	[eax+114h], edx
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], offset a1_q_repaintite ; "1_q_repaintItem()"
		mov	[esp+8], ecx
		mov	dword ptr [esp+4], offset a2repaintneed_1 ; "2repaintNeeded()"
		mov	[esp], edx
		mov	[ebp+var_68], 3
		call	ds:_ZN7QObject7connectEPKS_PKcS1_S3_N2Qt14ConnectionTypeE
		lea	eax, [ebp+var_18]
		mov	[esp+8], eax
		mov	eax, [ebp+var_A4]
		mov	[ebp+var_14], 0FFFFFFFFh
		mov	[ebp+var_18], 0FFFFFFFFh
		mov	dword ptr [esp+4], 2
		mov	[esp], eax
		call	ds:_ZN13QGraphicsItem12setCacheModeENS_9CacheModeERK5QSize
		mov	edx, [ebp+var_84]
		lea	eax, [ebp+var_10]
		mov	[ebp+var_10], 400h
		mov	[ebp+var_C], 300h
		mov	[esp+4], eax
		mov	[esp], edx
		call	_ZN16QGraphicsSvgItem19setMaximumCacheSizeERK5QSize
		mov	eax, [ebp+arg_4]
		mov	ecx, [ebp+var_80]
		mov	[esp+4], eax
		mov	eax, [ecx+114h]
		mov	[esp], eax
		call	_ZN12QSvgRenderer4loadERK7QString
		mov	edx, [ebp+var_80]
		mov	eax, [edx+13Ch]
		mov	ecx, [eax+8]
		test	ecx, ecx
		jnz	loc_71031BD2
		mov	eax, [edx+114h]
		mov	[esp], eax
		call	_ZNK12QSvgRenderer11defaultSizeEv
		mov	[ebp+var_70], eax
		fild	[ebp+var_70]
		fstp	[ebp+var_90]
		mov	[ebp+var_70], edx
		fild	[ebp+var_70]
		fstp	[ebp+var_A0]

loc_71031AB5:				; CODE XREF: _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem+4E3j
		mov	eax, [ebp+var_80]
		fld	qword ptr [eax+130h]
		fld	qword ptr [eax+128h]
		fld	[ebp+var_90]
		fsubr	st, st(1)
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_71031ADB
		fchs

loc_71031ADB:				; CODE XREF: _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem+3A7j
		fld	[ebp+var_90]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_71031AF0
		fchs

loc_71031AF0:				; CODE XREF: _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem+3BCj
		fldz
		fxch	st(3)
		fucom	st(3)
		fnstsw	ax
		fstp	st(3)
		sahf
		jnb	short loc_71031B03
		fxch	st(2)
		fchs
		fxch	st(2)

loc_71031B03:				; CODE XREF: _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem+3CBj
		fucom	st(2)
		fnstsw	ax
		sahf
		ja	short loc_71031B10
		fstp	st(2)
		fxch	st(1)
		jmp	short loc_71031B14
; ---------------------------------------------------------------------------

loc_71031B10:				; CODE XREF: _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem+3D8j
		fstp	st
		fxch	st(1)

loc_71031B14:				; CODE XREF: _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem+3DEj
		fmul	ds:dbl_7105AB88
		fucompp
		fnstsw	ax
		sahf
		jb	short loc_71031B80
		fld	[ebp+var_A0]
		fsubr	st, st(1)
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jb	loc_71031C37

loc_71031B3A:				; CODE XREF: _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem+509j
		fld	[ebp+var_A0]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jb	loc_71031C30

loc_71031B51:				; CODE XREF: _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem+502j
		fldz
		fxch	st(3)
		fucom	st(3)
		fnstsw	ax
		fstp	st(3)
		sahf
		jb	loc_71031C21

loc_71031B62:				; CODE XREF: _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem+4F7j
		fucom	st(2)
		fnstsw	ax
		sahf
		jbe	loc_71031C18
		fstp	st
		fxch	st(1)

loc_71031B71:				; CODE XREF: _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem+4ECj
		fmul	ds:dbl_7105AB88
		fucompp
		fnstsw	ax
		sahf
		jnb	short loc_71031BC5
		jmp	short loc_71031B82
; ---------------------------------------------------------------------------

loc_71031B80:				; CODE XREF: _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem+3EFj
		fstp	st

loc_71031B82:				; CODE XREF: _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem+44Ej
		mov	ecx, [ebp+var_80]
		mov	edx, [ecx+110h]
		mov	[ebp+var_68], 3
		cmp	edx, 1
		lea	eax, [edx-8]
		sbb	edx, edx
		not	edx
		and	eax, edx
		add	eax, 8
		mov	[esp], eax
		call	ds:_ZN13QGraphicsItem21prepareGeometryChangeEv
		mov	eax, [ebp+var_80]
		fld	[ebp+var_90]
		fstp	qword ptr [eax+128h]
		fld	[ebp+var_A0]
		fstp	qword ptr [eax+130h]

loc_71031BC5:				; CODE XREF: _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem+44Cj
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71031BD2:				; CODE XREF: _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem+359j
		mov	edx, [ebp+var_80]
		lea	eax, [ebp+var_38]
		mov	ecx, [ebp+var_80]
		add	edx, 13Ch
		mov	[esp+8], edx
		mov	edx, [ecx+114h]
		mov	[esp], eax
		mov	[ebp+var_68], 3
		mov	[esp+4], edx
		call	_ZNK12QSvgRenderer15boundsOnElementERK7QString
		fld	[ebp+var_28]
		sub	esp, 4
		fstp	[ebp+var_90]
		fld	[ebp+var_20]
		fstp	[ebp+var_A0]
		jmp	loc_71031AB5
; ---------------------------------------------------------------------------

loc_71031C18:				; CODE XREF: _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem+437j
		fstp	st(2)
		fxch	st(1)
		jmp	loc_71031B71
; ---------------------------------------------------------------------------

loc_71031C21:				; CODE XREF: _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem+42Cj
		fxch	st(2)
		fchs
		fxch	st(2)
		jmp	loc_71031B62
; ---------------------------------------------------------------------------
		align 10h

loc_71031C30:				; CODE XREF: _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem+41Bj
		fchs
		jmp	loc_71031B51
; ---------------------------------------------------------------------------

loc_71031C37:				; CODE XREF: _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem+404j
		fchs
		jmp	loc_71031B3A
_ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71031C3E	proc near		; DATA XREF: _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem+23o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-68h]
		mov	edx, [ebp-64h]
		cmp	eax, 1
		mov	[ebp-0ACh], edx
		jz	short loc_71031C8C
		cmp	eax, 2
		jz	short loc_71031C65
		mov	ecx, [ebp-94h]
		mov	[esp+0], ecx
		call	sub_710517D0

loc_71031C65:				; CODE XREF: sub_71031C3E+17j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-68h], 0
		mov	[esp+0], eax
		call	sub_7103C530
		mov	edx, [ebp-0ACh]
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71031C8C:				; CODE XREF: sub_71031C3E+12j
		mov	eax, [ebp-0ACh]
		mov	edx, [ebp-7Ch]
		mov	[ebp-0A8h], eax
		mov	eax, [edx+78h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71031CBE
		mov	ecx, [ebp-7Ch]
		mov	eax, [ecx+78h]
		mov	dword ptr [ebp-68h], 0
		mov	[esp+0], eax
		call	ds:_Z5qFreePv

loc_71031CBE:				; CODE XREF: sub_71031C3E+68j
		mov	eax, [ebp-7Ch]
		mov	dword ptr [ebp-68h], 0
		add	eax, 48h
		mov	[esp+0], eax
		call	sub_71044460
		mov	edx, [ebp-7Ch]
		mov	eax, [edx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71031D01
		mov	ecx, [ebp-7Ch]
		mov	eax, [ecx+4]
		mov	dword ptr [ebp-68h], 0
		mov	[esp+arg_0], eax
		mov	eax, ecx
		add	eax, 4
		mov	[esp+0], eax
		call	sub_710466C0

loc_71031D01:				; CODE XREF: sub_71031C3E+A3j
		mov	eax, [ebp-7Ch]
		mov	[esp+0], eax
		call	sub_710517D0
		mov	edx, [ebp-0A8h]
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_71031C3E	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  69. _ZN16QGraphicsSvgItemC2ERK7QStringP13QGraphicsItem

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QGraphicsSvgItemC2ERK7QStringP13QGraphicsItem
_ZN16QGraphicsSvgItemC2ERK7QStringP13QGraphicsItem proc	near

var_A4		= dword	ptr -0A4h
var_A0		= qword	ptr -0A0h
var_94		= dword	ptr -94h
var_90		= qword	ptr -90h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_38		= byte ptr -38h
var_28		= qword	ptr -28h
var_20		= qword	ptr -20h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_4C], eax
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		mov	[ebp+var_54], offset sub_710525B0
		mov	[ebp+var_50], offset dword_71053A68
		mov	[ebp+var_48], offset sub_7103223E
		mov	[ebp+var_44], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 140h ;	size_t
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_710517F0
		mov	ecx, ds:_ZN9QListData11shared_nullE
		mov	[ebp+var_78], ecx
		mov	[ebp+var_7C], eax
		mov	eax, ds:_ZTV20QGraphicsItemPrivate
		mov	edx, [ebp+var_7C]
		add	eax, 8
		mov	[edx+4], ecx
		mov	[edx], eax
		lock inc dword ptr [ecx]
		setnz	al
		fldz
		mov	eax, ds:_ZN8QMapData11shared_nullE
		fst	qword ptr [edx+10h]
		fst	qword ptr [edx+8]
		mov	[ebp+var_74], eax
		fst	qword ptr [edx+20h]
		mov	[edx+48h], eax
		fst	qword ptr [edx+18h]
		fst	qword ptr [edx+30h]
		fst	qword ptr [edx+28h]
		fst	qword ptr [edx+40h]
		fst	qword ptr [edx+38h]
		mov	edx, [ebp+var_74]
		lock inc dword ptr [edx+34h]
		setnz	al
		mov	ecx, [ebp+var_7C]
		fst	qword ptr [ecx+50h]
		mov	dword ptr [ecx+70h], 0
		fst	qword ptr [ecx+58h]
		fstp	qword ptr [ecx+60h]
		fld1
		fstp	qword ptr [ecx+68h]
		mov	dword ptr [ecx+74h], 0
		mov	eax, [ebp+var_78]
		mov	[ecx+78h], eax
		mov	edx, [ebp+var_78]
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, ecx
		add	eax, 88h
		mov	dword ptr [ecx+7Ch], 0
		mov	dword ptr [ecx+80h], 0
		mov	[esp], eax
		mov	[ebp+var_68], 2
		call	ds:_ZN10QTransformC1Ev
		mov	ecx, [ebp+var_7C]
		mov	eax, [ebp+var_78]
		mov	dword ptr [ecx+0D8h], 0FFFFFFFFh
		mov	[ecx+0E8h], eax
		mov	edx, [ebp+var_78]
		mov	dword ptr [ecx+0DCh], 0FFFFFFFFh
		mov	dword ptr [ecx+0E0h], 0FFFFFFFFh
		mov	dword ptr [ecx+0E4h], 0
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+var_74]
		mov	dword ptr [ecx+0ECh], 0
		mov	dword ptr [ecx+0F0h], 0
		mov	dword ptr [ecx+0F4h], 0
		mov	[ecx+0FCh], eax
		mov	edx, [ebp+var_74]
		mov	dword ptr [ecx+0F8h], 0
		lock inc dword ptr [edx+34h]
		setnz	al
		mov	eax, [ecx+104h]
		fldz
		mov	byte ptr [ecx+100h], 0BFh
		mov	byte ptr [ecx+101h], 0
		mov	byte ptr [ecx+102h], 0
		and	eax, 0FFF80000h
		mov	[ecx+104h], eax
		mov	byte ptr [ecx+103h], 80h
		mov	byte ptr [ecx+106h], 30h
		mov	byte ptr [ecx+107h], 0
		mov	byte ptr [ecx+108h], 11h
		and	byte ptr [ecx+109h], 0F8h
		mov	dword ptr [ecx+10Ch], 0FFFFFFFFh
		mov	eax, ds:_ZN7QString11shared_nullE
		fst	qword ptr [ecx+120h]
		mov	dword ptr [ecx+110h], 0
		fst	qword ptr [ecx+118h]
		mov	dword ptr [ecx], offset	off_7105DB08
		fst	qword ptr [ecx+130h]
		mov	dword ptr [ecx+114h], 0
		fstp	qword ptr [ecx+128h]
		mov	byte ptr [ecx+138h], 0
		mov	[ecx+13Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[esp+4], ecx
		mov	ecx, [ebp+arg_0]
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], ecx
		call	ds:_ZN15QGraphicsObjectC2ER20QGraphicsItemPrivateP13QGraphicsItemP14QGraphicsScene
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+0Ch]
		mov	dword ptr [eax], offset	off_7105D808
		mov	dword ptr [eax+8], offset off_7105D84C
		mov	eax, [edx+110h]
		mov	[ebp+var_80], edx
		mov	[ebp+var_68], 3
		cmp	eax, 1
		lea	ecx, [eax-8]
		sbb	eax, eax
		not	eax
		and	ecx, eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_84], ecx
		add	ecx, 8
		mov	[ebp+var_A4], ecx
		mov	[esp], ecx
		mov	[esp+4], eax
		call	ds:_ZN13QGraphicsItem13setParentItemEPS_
		mov	dword ptr [esp], 8 ; size_t
		call	sub_710517F0
		mov	ecx, [ebp+var_84]
		mov	[ebp+var_94], eax
		mov	[esp], eax
		mov	[ebp+var_68], 1
		mov	[esp+4], ecx
		call	_ZN12QSvgRendererC1EP7QObject
		mov	edx, [ebp+var_94]
		mov	eax, [ebp+var_80]
		mov	ecx, [ebp+var_84]
		mov	[eax+114h], edx
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], offset a1_q_repaintite ; "1_q_repaintItem()"
		mov	[esp+8], ecx
		mov	dword ptr [esp+4], offset a2repaintneed_1 ; "2repaintNeeded()"
		mov	[esp], edx
		mov	[ebp+var_68], 3
		call	ds:_ZN7QObject7connectEPKS_PKcS1_S3_N2Qt14ConnectionTypeE
		lea	eax, [ebp+var_18]
		mov	[esp+8], eax
		mov	eax, [ebp+var_A4]
		mov	[ebp+var_14], 0FFFFFFFFh
		mov	[ebp+var_18], 0FFFFFFFFh
		mov	dword ptr [esp+4], 2
		mov	[esp], eax
		call	ds:_ZN13QGraphicsItem12setCacheModeENS_9CacheModeERK5QSize
		mov	edx, [ebp+var_84]
		lea	eax, [ebp+var_10]
		mov	[ebp+var_10], 400h
		mov	[ebp+var_C], 300h
		mov	[esp+4], eax
		mov	[esp], edx
		call	_ZN16QGraphicsSvgItem19setMaximumCacheSizeERK5QSize
		mov	eax, [ebp+arg_4]
		mov	ecx, [ebp+var_80]
		mov	[esp+4], eax
		mov	eax, [ecx+114h]
		mov	[esp], eax
		call	_ZN12QSvgRenderer4loadERK7QString
		mov	edx, [ebp+var_80]
		mov	eax, [edx+13Ch]
		mov	eax, [eax+8]
		test	eax, eax
		jnz	loc_710321D2
		mov	eax, [edx+114h]
		mov	[esp], eax
		call	_ZNK12QSvgRenderer11defaultSizeEv
		mov	[ebp+var_70], eax
		fild	[ebp+var_70]
		fstp	[ebp+var_90]
		mov	[ebp+var_70], edx
		fild	[ebp+var_70]
		fstp	[ebp+var_A0]

loc_710320B5:				; CODE XREF: _ZN16QGraphicsSvgItemC2ERK7QStringP13QGraphicsItem+4E3j
		mov	eax, [ebp+var_80]
		fld	qword ptr [eax+130h]
		fld	qword ptr [eax+128h]
		fld	[ebp+var_90]
		fsubr	st, st(1)
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_710320DB
		fchs

loc_710320DB:				; CODE XREF: _ZN16QGraphicsSvgItemC2ERK7QStringP13QGraphicsItem+3A7j
		fld	[ebp+var_90]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	short loc_710320F0
		fchs

loc_710320F0:				; CODE XREF: _ZN16QGraphicsSvgItemC2ERK7QStringP13QGraphicsItem+3BCj
		fldz
		fxch	st(3)
		fucom	st(3)
		fnstsw	ax
		fstp	st(3)
		sahf
		jnb	short loc_71032103
		fxch	st(2)
		fchs
		fxch	st(2)

loc_71032103:				; CODE XREF: _ZN16QGraphicsSvgItemC2ERK7QStringP13QGraphicsItem+3CBj
		fucom	st(2)
		fnstsw	ax
		sahf
		ja	short loc_71032110
		fstp	st(2)
		fxch	st(1)
		jmp	short loc_71032114
; ---------------------------------------------------------------------------

loc_71032110:				; CODE XREF: _ZN16QGraphicsSvgItemC2ERK7QStringP13QGraphicsItem+3D8j
		fstp	st
		fxch	st(1)

loc_71032114:				; CODE XREF: _ZN16QGraphicsSvgItemC2ERK7QStringP13QGraphicsItem+3DEj
		fmul	ds:dbl_7105AB88
		fucompp
		fnstsw	ax
		sahf
		jb	short loc_71032180
		fld	[ebp+var_A0]
		fsubr	st, st(1)
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jb	loc_71032237

loc_7103213A:				; CODE XREF: _ZN16QGraphicsSvgItemC2ERK7QStringP13QGraphicsItem+509j
		fld	[ebp+var_A0]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jb	loc_71032230

loc_71032151:				; CODE XREF: _ZN16QGraphicsSvgItemC2ERK7QStringP13QGraphicsItem+502j
		fldz
		fxch	st(3)
		fucom	st(3)
		fnstsw	ax
		fstp	st(3)
		sahf
		jb	loc_71032221

loc_71032162:				; CODE XREF: _ZN16QGraphicsSvgItemC2ERK7QStringP13QGraphicsItem+4F7j
		fucom	st(2)
		fnstsw	ax
		sahf
		jbe	loc_71032218
		fstp	st
		fxch	st(1)

loc_71032171:				; CODE XREF: _ZN16QGraphicsSvgItemC2ERK7QStringP13QGraphicsItem+4ECj
		fmul	ds:dbl_7105AB88
		fucompp
		fnstsw	ax
		sahf
		jnb	short loc_710321C5
		jmp	short loc_71032182
; ---------------------------------------------------------------------------

loc_71032180:				; CODE XREF: _ZN16QGraphicsSvgItemC2ERK7QStringP13QGraphicsItem+3EFj
		fstp	st

loc_71032182:				; CODE XREF: _ZN16QGraphicsSvgItemC2ERK7QStringP13QGraphicsItem+44Ej
		mov	ecx, [ebp+var_80]
		mov	edx, [ecx+110h]
		mov	[ebp+var_68], 3
		cmp	edx, 1
		lea	eax, [edx-8]
		sbb	edx, edx
		not	edx
		and	eax, edx
		add	eax, 8
		mov	[esp], eax
		call	ds:_ZN13QGraphicsItem21prepareGeometryChangeEv
		mov	eax, [ebp+var_80]
		fld	[ebp+var_90]
		fstp	qword ptr [eax+128h]
		fld	[ebp+var_A0]
		fstp	qword ptr [eax+130h]

loc_710321C5:				; CODE XREF: _ZN16QGraphicsSvgItemC2ERK7QStringP13QGraphicsItem+44Cj
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_710321D2:				; CODE XREF: _ZN16QGraphicsSvgItemC2ERK7QStringP13QGraphicsItem+359j
		mov	edx, [ebp+var_80]
		lea	eax, [ebp+var_38]
		mov	ecx, [ebp+var_80]
		add	edx, 13Ch
		mov	[esp+8], edx
		mov	edx, [ecx+114h]
		mov	[esp], eax
		mov	[ebp+var_68], 3
		mov	[esp+4], edx
		call	_ZNK12QSvgRenderer15boundsOnElementERK7QString
		fld	[ebp+var_28]
		sub	esp, 4
		fstp	[ebp+var_90]
		fld	[ebp+var_20]
		fstp	[ebp+var_A0]
		jmp	loc_710320B5
; ---------------------------------------------------------------------------

loc_71032218:				; CODE XREF: _ZN16QGraphicsSvgItemC2ERK7QStringP13QGraphicsItem+437j
		fstp	st(2)
		fxch	st(1)
		jmp	loc_71032171
; ---------------------------------------------------------------------------

loc_71032221:				; CODE XREF: _ZN16QGraphicsSvgItemC2ERK7QStringP13QGraphicsItem+42Cj
		fxch	st(2)
		fchs
		fxch	st(2)
		jmp	loc_71032162
; ---------------------------------------------------------------------------
		align 10h

loc_71032230:				; CODE XREF: _ZN16QGraphicsSvgItemC2ERK7QStringP13QGraphicsItem+41Bj
		fchs
		jmp	loc_71032151
; ---------------------------------------------------------------------------

loc_71032237:				; CODE XREF: _ZN16QGraphicsSvgItemC2ERK7QStringP13QGraphicsItem+404j
		fchs
		jmp	loc_7103213A
_ZN16QGraphicsSvgItemC2ERK7QStringP13QGraphicsItem endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7103223E	proc near		; DATA XREF: _ZN16QGraphicsSvgItemC2ERK7QStringP13QGraphicsItem+23o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-68h]
		mov	edx, [ebp-64h]
		cmp	eax, 1
		mov	[ebp-0ACh], edx
		jz	short loc_7103228C
		cmp	eax, 2
		jz	short loc_71032265
		mov	ecx, [ebp-94h]
		mov	[esp+0], ecx
		call	sub_710517D0

loc_71032265:				; CODE XREF: sub_7103223E+17j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-68h], 0
		mov	[esp+0], eax
		call	sub_7103C530
		mov	edx, [ebp-0ACh]
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7103228C:				; CODE XREF: sub_7103223E+12j
		mov	eax, [ebp-0ACh]
		mov	edx, [ebp-7Ch]
		mov	[ebp-0A8h], eax
		mov	eax, [edx+78h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710322BE
		mov	ecx, [ebp-7Ch]
		mov	eax, [ecx+78h]
		mov	dword ptr [ebp-68h], 0
		mov	[esp+0], eax
		call	ds:_Z5qFreePv

loc_710322BE:				; CODE XREF: sub_7103223E+68j
		mov	eax, [ebp-7Ch]
		mov	dword ptr [ebp-68h], 0
		add	eax, 48h
		mov	[esp+0], eax
		call	sub_71044460
		mov	edx, [ebp-7Ch]
		mov	eax, [edx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71032301
		mov	ecx, [ebp-7Ch]
		mov	eax, [ecx+4]
		mov	dword ptr [ebp-68h], 0
		mov	[esp+arg_0], eax
		mov	eax, ecx
		add	eax, 4
		mov	[esp+0], eax
		call	sub_710466C0

loc_71032301:				; CODE XREF: sub_7103223E+A3j
		mov	eax, [ebp-7Ch]
		mov	[esp+0], eax
		call	sub_710517D0
		mov	edx, [ebp-0A8h]
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_7103223E	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  66. _ZN16QGraphicsSvgItemC1EP13QGraphicsItem

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN16QGraphicsSvgItemC1EP13QGraphicsItem
_ZN16QGraphicsSvgItemC1EP13QGraphicsItem proc near

var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 98h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset word_71053A72
		mov	[ebp+var_28], offset sub_71032665
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 140h ;	size_t
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_710517F0
		mov	[ebp+var_58], eax
		mov	eax, ds:_ZTV20QGraphicsItemPrivate
		mov	edx, [ebp+var_58]
		add	eax, 8
		mov	[edx], eax
		mov	eax, ds:_ZN9QListData11shared_nullE
		mov	[ebp+var_54], eax
		mov	[edx+4], eax
		mov	edx, [ebp+var_54]
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+var_58]
		fldz
		mov	edx, ds:_ZN8QMapData11shared_nullE
		fst	qword ptr [eax+10h]
		mov	[ebp+var_50], edx
		fst	qword ptr [eax+8]
		mov	[eax+48h], edx
		fst	qword ptr [eax+20h]
		fst	qword ptr [eax+18h]
		fst	qword ptr [eax+30h]
		fst	qword ptr [eax+28h]
		fst	qword ptr [eax+40h]
		fst	qword ptr [eax+38h]
		lock inc dword ptr [edx+34h]
		setnz	al
		mov	eax, [ebp+var_58]
		fst	qword ptr [eax+50h]
		fst	qword ptr [eax+58h]
		fstp	qword ptr [eax+60h]
		fld1
		fstp	qword ptr [eax+68h]
		mov	dword ptr [eax+70h], 0
		mov	edx, [ebp+var_54]
		mov	dword ptr [eax+74h], 0
		mov	[eax+78h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+var_58]
		mov	dword ptr [eax+7Ch], 0
		mov	dword ptr [eax+80h], 0
		add	eax, 88h
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN10QTransformC1Ev
		mov	edx, [ebp+var_58]
		mov	eax, [ebp+var_54]
		mov	dword ptr [edx+0D8h], 0FFFFFFFFh
		mov	[edx+0E8h], eax
		mov	dword ptr [edx+0DCh], 0FFFFFFFFh
		mov	dword ptr [edx+0E0h], 0FFFFFFFFh
		mov	dword ptr [edx+0E4h], 0
		mov	edx, [ebp+var_54]
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+var_58]
		mov	edx, [ebp+var_50]
		mov	dword ptr [eax+0ECh], 0
		mov	[eax+0FCh], edx
		mov	dword ptr [eax+0F0h], 0
		mov	dword ptr [eax+0F4h], 0
		mov	dword ptr [eax+0F8h], 0
		lock inc dword ptr [edx+34h]
		setnz	al
		mov	eax, [ebp+var_58]
		fldz
		mov	byte ptr [eax+100h], 0BFh
		mov	byte ptr [eax+101h], 0
		mov	byte ptr [eax+102h], 0
		mov	byte ptr [eax+103h], 80h
		mov	edx, [ebp+var_58]
		mov	eax, [edx+104h]
		and	eax, 0FFF80000h
		mov	[edx+104h], eax
		mov	byte ptr [edx+106h], 30h
		mov	byte ptr [edx+107h], 0
		mov	byte ptr [edx+108h], 11h
		mov	eax, ds:_ZN7QString11shared_nullE
		fst	qword ptr [edx+120h]
		and	byte ptr [edx+109h], 0F8h
		fst	qword ptr [edx+118h]
		mov	dword ptr [edx+10Ch], 0FFFFFFFFh
		fst	qword ptr [edx+130h]
		mov	dword ptr [edx+110h], 0
		mov	dword ptr [edx], offset	off_7105DB08
		mov	dword ptr [edx+114h], 0
		fstp	qword ptr [edx+128h]
		mov	byte ptr [edx+138h], 0
		mov	[edx+13Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_58]
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 0
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN15QGraphicsObjectC2ER20QGraphicsItemPrivateP13QGraphicsItemP14QGraphicsScene
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+0Ch]
		mov	dword ptr [eax], offset	off_7105D808
		mov	dword ptr [eax+8], offset off_7105D84C
		mov	eax, [edx+110h]
		mov	[ebp+var_68], edx
		mov	[ebp+var_48], 3
		cmp	eax, 1
		lea	edx, [eax-8]
		sbb	eax, eax
		not	eax
		and	edx, eax
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_5C], edx
		add	edx, 8
		mov	[ebp+var_64], edx
		mov	[esp], edx
		mov	[esp+4], eax
		call	ds:_ZN13QGraphicsItem13setParentItemEPS_
		mov	dword ptr [esp], 8 ; size_t
		call	sub_710517F0
		mov	[ebp+var_60], eax
		mov	eax, [ebp+var_5C]
		mov	edx, [ebp+var_60]
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		mov	[esp], edx
		call	_ZN12QSvgRendererC1EP7QObject
		mov	eax, [ebp+var_60]
		mov	edx, [ebp+var_68]
		mov	[edx+114h], eax
		mov	edx, [ebp+var_5C]
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], offset a1_q_repaintite ; "1_q_repaintItem()"
		mov	dword ptr [esp+4], offset a2repaintneed_1 ; "2repaintNeeded()"
		mov	[esp+8], edx
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	ds:_ZN7QObject7connectEPKS_PKcS1_S3_N2Qt14ConnectionTypeE
		lea	eax, [ebp+var_18]
		mov	[esp+8], eax
		mov	eax, [ebp+var_64]
		mov	[ebp+var_14], 0FFFFFFFFh
		mov	[ebp+var_18], 0FFFFFFFFh
		mov	dword ptr [esp+4], 2
		mov	[esp], eax
		call	ds:_ZN13QGraphicsItem12setCacheModeENS_9CacheModeERK5QSize
		mov	edx, [ebp+var_5C]
		lea	eax, [ebp+var_10]
		mov	[ebp+var_10], 400h
		mov	[ebp+var_C], 300h
		mov	[esp+4], eax
		mov	[esp], edx
		call	_ZN16QGraphicsSvgItem19setMaximumCacheSizeERK5QSize
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN16QGraphicsSvgItemC1EP13QGraphicsItem endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71032665	proc near		; DATA XREF: _ZN16QGraphicsSvgItemC1EP13QGraphicsItem+23o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-70h], edx
		jz	short loc_710326AA
		cmp	eax, 2
		jz	short loc_71032686
		mov	eax, [ebp-60h]
		mov	[esp+0], eax
		call	sub_710517D0

loc_71032686:				; CODE XREF: sub_71032665+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], eax
		call	sub_7103C530
		mov	edx, [ebp-70h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_710326AA:				; CODE XREF: sub_71032665+Fj
		mov	eax, [ebp-70h]
		mov	edx, [ebp-58h]
		mov	[ebp-6Ch], eax
		mov	eax, [edx+78h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710326D6
		mov	edx, [ebp-58h]
		mov	eax, [edx+78h]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], eax
		call	ds:_Z5qFreePv

loc_710326D6:				; CODE XREF: sub_71032665+59j
		mov	eax, [ebp-58h]
		mov	dword ptr [ebp-48h], 0
		add	eax, 48h
		mov	[esp+0], eax
		call	sub_71044460
		mov	edx, [ebp-58h]
		mov	eax, [edx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71032719
		mov	edx, [ebp-58h]
		mov	eax, [edx+4]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+arg_0], eax
		mov	eax, edx
		add	eax, 4
		mov	[esp+0], eax
		call	sub_710466C0

loc_71032719:				; CODE XREF: sub_71032665+94j
		mov	eax, [ebp-58h]
		mov	[esp+0], eax
		call	sub_710517D0
		mov	edx, [ebp-6Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_71032665	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 113. _ZNK13QSvgGenerator5titleEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK13QSvgGenerator5titleEv
_ZNK13QSvgGenerator5titleEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx+8]
		mov	edx, [edx]
		mov	edx, [edx+10h]
		mov	edx, [edx+110h]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK13QSvgGenerator5titleEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 109. _ZNK13QSvgGenerator11descriptionEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK13QSvgGenerator11descriptionEv
_ZNK13QSvgGenerator11descriptionEv proc	near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx+8]
		mov	edx, [edx]
		mov	edx, [edx+10h]
		mov	edx, [edx+114h]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK13QSvgGenerator11descriptionEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 112. _ZNK13QSvgGenerator4sizeEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK13QSvgGenerator4sizeEv
_ZNK13QSvgGenerator4sizeEv proc	near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+8]
		mov	eax, [eax]
		mov	edx, [eax+10h]
		mov	eax, [edx+80h]
		mov	edx, [edx+84h]
		retn
_ZNK13QSvgGenerator4sizeEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 117. _ZNK13QSvgGenerator8viewBoxFEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK13QSvgGenerator8viewBoxFEv
_ZNK13QSvgGenerator8viewBoxFEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx+8]
		mov	edx, [edx]
		mov	edx, [edx+10h]
		mov	ecx, [edx+88h]
		mov	[eax], ecx
		mov	ecx, [edx+8Ch]
		mov	[eax+4], ecx
		mov	ecx, [edx+90h]
		mov	[eax+8], ecx
		mov	ecx, [edx+94h]
		mov	[eax+0Ch], ecx
		mov	ecx, [edx+98h]
		mov	[eax+10h], ecx
		mov	ecx, [edx+9Ch]
		mov	[eax+14h], ecx
		mov	ecx, [edx+0A0h]
		mov	[eax+18h], ecx
		mov	edx, [edx+0A4h]
		mov	[eax+1Ch], edx
		retn	4
_ZNK13QSvgGenerator8viewBoxFEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 115. _ZNK13QSvgGenerator7viewBoxEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK13QSvgGenerator7viewBoxEv
_ZNK13QSvgGenerator7viewBoxEv proc near

var_14		= dword	ptr -14h
var_10		= word ptr -10h
var_E		= word ptr -0Eh
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		push	esi
		push	ebx
		sub	esp, 8
		mov	eax, [esp+14h+arg_4]
		mov	edx, [esp+14h+arg_0]
		mov	eax, [eax+8]
		mov	eax, [eax]
		mov	eax, [eax+10h]
		fld	qword ptr [eax+88h]
		fld	qword ptr [eax+90h]
		fld	qword ptr [eax+98h]
		fld	qword ptr [eax+0A0h]
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jb	loc_71032931
		fnstcw	[esp+14h+var_E]
		fadd	ds:flt_7105B41C
		movzx	eax, [esp+14h+var_E]
		mov	ah, 0Ch
		mov	[esp+14h+var_10], ax
		fldcw	[esp+14h+var_10]
		fistp	[esp+14h+var_14]
		fldcw	[esp+14h+var_E]
		mov	ebx, [esp+14h+var_14]

loc_71032883:				; CODE XREF: _ZNK13QSvgGenerator7viewBoxEv+155j
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jb	loc_710329C0
		fadd	ds:flt_7105B41C
		fldcw	[esp+14h+var_10]
		fistp	[esp+14h+var_14]
		fldcw	[esp+14h+var_E]
		mov	esi, [esp+14h+var_14]

loc_710328A8:				; CODE XREF: _ZNK13QSvgGenerator7viewBoxEv+1D4j
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jb	loc_71032980
		fadd	ds:flt_7105B41C
		fldcw	[esp+14h+var_10]
		fistp	[esp+14h+var_14]
		fldcw	[esp+14h+var_E]
		mov	ecx, [esp+14h+var_14]

loc_710328CD:				; CODE XREF: _ZNK13QSvgGenerator7viewBoxEv+194j
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jnb	loc_71032A00
		fld	st
		fsub	ds:flt_7105B420
		fldcw	[esp+14h+var_10]
		fistp	[esp+14h+var_14]
		fldcw	[esp+14h+var_E]
		mov	eax, [esp+14h+var_14]
		mov	[esp+14h+var_14], eax
		fild	[esp+14h+var_14]
		fsubp	st(1), st
		fadd	ds:flt_7105B41C
		fldcw	[esp+14h+var_10]
		fistp	[esp+14h+var_14]
		fldcw	[esp+14h+var_E]
		mov	edi, [esp+14h+var_14]
		lea	eax, [edi+eax]

loc_71032913:				; CODE XREF: _ZNK13QSvgGenerator7viewBoxEv+1F4j
		mov	[edx], eax
		lea	eax, [esi+eax-1]
		mov	[edx+8], eax
		lea	eax, [ebx+ecx-1]
		mov	[edx+0Ch], eax
		mov	eax, edx
		mov	[edx+4], ecx
		add	esp, 8
		pop	ebx
		pop	esi
		pop	edi
		retn	4
; ---------------------------------------------------------------------------

loc_71032931:				; CODE XREF: _ZNK13QSvgGenerator7viewBoxEv+39j
		fnstcw	[esp+14h+var_E]
		fld	st
		fsub	ds:flt_7105B420
		movzx	eax, [esp+14h+var_E]
		mov	ah, 0Ch
		mov	[esp+14h+var_10], ax
		fldcw	[esp+14h+var_10]
		fistp	[esp+14h+var_14]
		fldcw	[esp+14h+var_E]
		mov	eax, [esp+14h+var_14]
		mov	[esp+14h+var_14], eax
		fild	[esp+14h+var_14]
		fsubp	st(1), st
		fadd	ds:flt_7105B41C
		fldcw	[esp+14h+var_10]
		fistp	[esp+14h+var_14]
		fldcw	[esp+14h+var_E]
		mov	ebx, [esp+14h+var_14]
		add	ebx, eax
		jmp	loc_71032883
; ---------------------------------------------------------------------------
		align 10h

loc_71032980:				; CODE XREF: _ZNK13QSvgGenerator7viewBoxEv+93j
		fld	st
		fsub	ds:flt_7105B420
		fldcw	[esp+14h+var_10]
		fistp	[esp+14h+var_14]
		fldcw	[esp+14h+var_E]
		mov	eax, [esp+14h+var_14]
		mov	[esp+14h+var_14], eax
		fild	[esp+14h+var_14]
		fsubp	st(1), st
		fadd	ds:flt_7105B41C
		fldcw	[esp+14h+var_10]
		fistp	[esp+14h+var_14]
		fldcw	[esp+14h+var_E]
		mov	ecx, [esp+14h+var_14]
		add	ecx, eax
		jmp	loc_710328CD
; ---------------------------------------------------------------------------
		align 10h

loc_710329C0:				; CODE XREF: _ZNK13QSvgGenerator7viewBoxEv+6Ej
		fld	st
		fsub	ds:flt_7105B420
		fldcw	[esp+14h+var_10]
		fistp	[esp+14h+var_14]
		fldcw	[esp+14h+var_E]
		mov	eax, [esp+14h+var_14]
		mov	[esp+14h+var_14], eax
		fild	[esp+14h+var_14]
		fsubp	st(1), st
		fadd	ds:flt_7105B41C
		fldcw	[esp+14h+var_10]
		fistp	[esp+14h+var_14]
		fldcw	[esp+14h+var_E]
		mov	esi, [esp+14h+var_14]
		add	esi, eax
		jmp	loc_710328A8
; ---------------------------------------------------------------------------
		align 10h

loc_71032A00:				; CODE XREF: _ZNK13QSvgGenerator7viewBoxEv+B8j
		fadd	ds:flt_7105B41C
		fldcw	[esp+14h+var_10]
		fistp	[esp+14h+var_14]
		fldcw	[esp+14h+var_E]
		mov	eax, [esp+14h+var_14]
		jmp	loc_71032913
_ZNK13QSvgGenerator7viewBoxEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 116. _ZNK13QSvgGenerator8fileNameEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK13QSvgGenerator8fileNameEv
_ZNK13QSvgGenerator8fileNameEv proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_0]
		mov	edx, [edx+8]
		mov	edx, [edx+8]
		mov	[eax], edx
		lock inc dword ptr [edx]
		setnz	cl
		retn	4
_ZNK13QSvgGenerator8fileNameEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 111. _ZNK13QSvgGenerator12outputDeviceEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK13QSvgGenerator12outputDeviceEv
_ZNK13QSvgGenerator12outputDeviceEv proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+8]
		mov	eax, [eax]
		mov	eax, [eax+10h]
		mov	eax, [eax+0A8h]
		retn
_ZNK13QSvgGenerator12outputDeviceEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 108. _ZNK13QSvgGenerator10resolutionEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK13QSvgGenerator10resolutionEv
_ZNK13QSvgGenerator10resolutionEv proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+8]
		mov	eax, [eax]
		mov	eax, [eax+10h]
		mov	eax, [eax+0B0h]
		retn
_ZNK13QSvgGenerator10resolutionEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  46. _ZN13QSvgGenerator13setResolutionEi

; =============== S U B	R O U T	I N E =======================================


		public _ZN13QSvgGenerator13setResolutionEi
_ZN13QSvgGenerator13setResolutionEi proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		mov	edx, [esp+arg_4]
		mov	eax, [eax+8]
		mov	eax, [eax]
		mov	eax, [eax+10h]
		mov	[eax+0B0h], edx
		retn
_ZN13QSvgGenerator13setResolutionEi endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 110. _ZNK13QSvgGenerator11paintEngineEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK13QSvgGenerator11paintEngineEv
_ZNK13QSvgGenerator11paintEngineEv proc	near ; DATA XREF: .rdata:7105D6F4o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+8]
		mov	eax, [eax]
		retn
_ZNK13QSvgGenerator11paintEngineEv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  47. _ZN13QSvgGenerator14setDescriptionERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN13QSvgGenerator14setDescriptionERK7QString
_ZN13QSvgGenerator14setDescriptionERK7QString proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax+8]
		mov	eax, [eax]
		mov	eax, [eax+10h]
		add	eax, 114h
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_ZN7QStringaSERKS_
		add	esp, 0Ch
		jmp	eax
_ZN13QSvgGenerator14setDescriptionERK7QString endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  50. _ZN13QSvgGenerator8setTitleERK7QString

; =============== S U B	R O U T	I N E =======================================


		public _ZN13QSvgGenerator8setTitleERK7QString
_ZN13QSvgGenerator8setTitleERK7QString proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax+8]
		mov	eax, [eax]
		mov	eax, [eax+10h]
		add	eax, 110h
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_ZN7QStringaSERKS_
		add	esp, 0Ch
		jmp	eax
_ZN13QSvgGenerator8setTitleERK7QString endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71032B10	proc near		; DATA XREF: .rdata:7105D7A0o

var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= qword	ptr -70h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= byte ptr -10h
var_C		= byte ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 98h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71053A7C
		mov	[ebp+var_28], offset sub_71032D57
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		lea	ecx, [ebp+var_C]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], edx
		call	ds:_ZN12QPainterPathC1ERK7QPointF
		cmp	[ebp+arg_8], 1
		jle	short loc_71032BA7
		mov	eax, [ebp+arg_4]
		mov	edx, ds:_ZN12QPainterPath6lineToERK7QPointF
		mov	[ebp+var_60], 1
		add	eax, 10h
		mov	[ebp+var_5C], eax
		mov	[ebp+var_58], edx
		nop
		lea	esi, [esi+0]

loc_71032B80:				; CODE XREF: sub_71032B10+95j
		mov	ecx, [ebp+var_5C]
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		mov	[esp+4], ecx
		call	[ebp+var_58]
		add	[ebp+var_60], 1
		mov	edx, [ebp+var_60]
		add	[ebp+var_5C], 10h
		cmp	[ebp+arg_8], edx
		jg	short loc_71032B80

loc_71032BA7:				; CODE XREF: sub_71032B10+50j
		cmp	[ebp+arg_C], 3
		jz	short loc_71032BF2
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN12QPainterPath12closeSubpathEv
		mov	ecx, [ebp+arg_0]
		lea	edx, [ebp+var_C]
		mov	eax, [ecx]
		mov	[esp+4], edx
		mov	[esp], ecx
		call	dword ptr [eax+2Ch]

loc_71032BD2:				; CODE XREF: sub_71032B10+236j
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN12QPainterPathD1Ev
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71032BF2:				; CODE XREF: sub_71032B10+9Bj
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_10]
		mov	edx, [ecx+4]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		mov	[esp+4], edx
		call	ds:_ZNK17QPaintEngineState3penEv
		sub	esp, 4
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZNK4QPen10isCosmeticEv
		test	al, al
		mov	[ebp+var_78], offset aNonScalingSt_0 ; "non-scaling-stroke"
		jz	loc_71032D4B

loc_71032C34:				; CODE XREF: sub_71032B10+242j
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset aPolylineFillNo ; "<polyline fill=\"none\" vector-effect=\"...
		mov	eax, [edx+10h]
		mov	eax, [eax+0ACh]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		mov	ecx, [ebp+var_78]
		mov	[esp], eax
		mov	[esp+4], ecx
		call	ds:_ZN11QTextStreamlsEPKc
		mov	dword ptr [esp+4], offset aPoints_0 ; "\" points=\""
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN4QPenD1Ev
		mov	eax, [ebp+arg_8]
		test	eax, eax
		jle	loc_71032D19
		mov	edx, ds:_ZN11QTextStreamlsEd
		mov	ecx, ds:_ZN11QTextStreamlsEc
		mov	[ebp+var_64], 0
		mov	[ebp+var_50], edx
		mov	[ebp+var_54], edx
		mov	[ebp+var_74], ecx

loc_71032CB3:				; CODE XREF: sub_71032B10+207j
		mov	eax, [ebp+var_64]
		mov	edx, [ebp+arg_0]
		shl	eax, 4
		add	eax, [ebp+arg_4]
		fld	qword ptr [eax+8]
		fstp	[ebp+var_70]
		fld	qword ptr [eax]
		fstp	qword ptr [esp+4]
		mov	eax, [edx+10h]
		mov	eax, [eax+0ACh]
		mov	[ebp+var_48], 2
		mov	[esp], eax
		call	[ebp+var_50]
		mov	dword ptr [esp+4], 2Ch
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEc
		fld	[ebp+var_70]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	[ebp+var_54]
		mov	dword ptr [esp+4], 20h
		mov	[esp], eax
		call	[ebp+var_74]
		add	[ebp+var_64], 1
		mov	eax, [ebp+var_64]
		cmp	[ebp+arg_8], eax
		jg	short loc_71032CB3

loc_71032D19:				; CODE XREF: sub_71032B10+181j
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset asc_7105ABE9 ; "\" />"
		mov	eax, [edx+10h]
		mov	eax, [eax+0ACh]
		mov	[ebp+var_48], 2
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		mov	[esp], eax
		call	ds:_Z4endlR11QTextStream
		jmp	loc_71032BD2
; ---------------------------------------------------------------------------

loc_71032D4B:				; CODE XREF: sub_71032B10+11Ej
		mov	[ebp+var_78], offset aNone_0 ; "none"
		jmp	loc_71032C34
sub_71032B10	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71032D57	proc near		; DATA XREF: sub_71032B10+23o
		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-7Ch], eax
		jz	short loc_71032D79
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN4QPenD1Ev

loc_71032D79:				; CODE XREF: sub_71032D57+Dj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN12QPainterPathD1Ev
		mov	eax, [ebp-7Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71032D57	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71032DA0	proc near		; DATA XREF: .rdata:7105D794o

var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= qword	ptr -0A8h
var_A0		= qword	ptr -0A0h
var_98		= qword	ptr -98h
var_90		= qword	ptr -90h
var_88		= qword	ptr -88h
var_80		= qword	ptr -80h
var_78		= qword	ptr -78h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= byte ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0C8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71053A84
		mov	[ebp+var_28], offset sub_710331C9
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_4]
		mov	edx, [edx+10h]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[ebp+var_AC], edx
		call	ds:_ZNK12QPainterPath8fillRuleEv
		mov	edx, offset aEvenodd_0 ; "evenodd"
		test	eax, eax
		jz	short loc_71032DFF
		mov	edx, offset aNonzero_0 ; "nonzero"

loc_71032DFF:				; CODE XREF: sub_71032DA0+58j
		mov	[ebp+var_B4], edx
		mov	edx, [ebp+arg_0]
		lea	ecx, [ebp+var_C]
		mov	eax, [edx+4]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	ds:_ZNK17QPaintEngineState3penEv
		lea	eax, [ebp+var_C]
		mov	[ebp+var_48], 1
		sub	esp, 4
		mov	[esp], eax
		call	ds:_ZNK4QPen10isCosmeticEv
		test	al, al
		mov	[ebp+var_B0], offset aNonScalingSt_0 ; "non-scaling-stroke"
		jnz	short loc_71032E50
		mov	[ebp+var_B0], offset aNone_0 ; "none"

loc_71032E50:				; CODE XREF: sub_71032DA0+A4j
		mov	edx, [ebp+var_AC]
		mov	dword ptr [esp+4], offset aPathVectorEffe ; "<path vector-effect=\""
		mov	eax, [edx+0ACh]
		mov	[ebp+var_6C], edx
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		mov	edx, [ebp+var_B0]
		mov	[esp], eax
		mov	[esp+4], edx
		call	ds:_ZN11QTextStreamlsEPKc
		mov	dword ptr [esp+4], offset aFillRule_0 ;	"\" fill-rule=\""
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		mov	ecx, [ebp+var_B4]
		mov	[esp], eax
		mov	[esp+4], ecx
		call	ds:_ZN11QTextStreamlsEPKc
		mov	dword ptr [esp+4], offset aD ; "\" d=\""
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN4QPenD1Ev
		mov	ecx, [ebp+arg_4]
		mov	edx, ds:_ZN11QTextStreamlsEc
		mov	[ebp+var_64], 0
		mov	eax, [ecx]
		mov	[ebp+var_70], edx
		jmp	loc_71032FAF
; ---------------------------------------------------------------------------
		align 10h

loc_71032EF0:				; CODE XREF: sub_71032DA0+238j
		cmp	ecx, 2
		jz	loc_71033060
		test	ecx, ecx
		jnz	short loc_71032F6F
		fld	qword ptr [edx+18h]
		fstp	[ebp+var_A8]
		mov	ecx, ds:_ZN11QTextStreamlsEc
		fld	qword ptr [edx+10h]
		mov	edx, [ebp+var_6C]
		fstp	[ebp+var_A0]
		mov	dword ptr [esp+4], 4Dh
		mov	[ebp+var_50], ecx
		mov	eax, [edx+0ACh]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ecx ; _ZN11QTextStreamlsEc
		mov	[esp], eax
		mov	eax, ds:_ZN11QTextStreamlsEd
		fld	[ebp+var_A0]
		fstp	qword ptr [esp+4]
		mov	[ebp+var_54], eax
		call	eax ; _ZN11QTextStreamlsEd
		mov	dword ptr [esp+4], 2Ch
		mov	[esp], eax
		call	[ebp+var_50]
		fld	[ebp+var_A8]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	[ebp+var_54]
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]

loc_71032F6F:				; CODE XREF: sub_71032DA0+15Bj
					; sub_71032DA0+339j ...
		test	eax, eax
		jz	loc_71033056

loc_71032F77:				; CODE XREF: sub_71032DA0+2B0j
		mov	edx, [eax+4]
		mov	edx, [edx+8]
		sub	edx, 1

loc_71032F80:				; CODE XREF: sub_71032DA0+2BBj
		cmp	[ebp+var_64], edx
		jz	short loc_71032FAB
		mov	ecx, [ebp+var_6C]
		mov	dword ptr [esp+4], 20h
		mov	eax, [ecx+0ACh]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEc
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]

loc_71032FAB:				; CODE XREF: sub_71032DA0+1E3j
		add	[ebp+var_64], 1

loc_71032FAF:				; CODE XREF: sub_71032DA0+147j
		test	eax, eax
		jz	loc_71033170
		mov	edx, [eax+4]
		mov	edx, [edx+8]
		cmp	[ebp+var_64], edx
		jge	loc_71033180

loc_71032FC6:				; CODE XREF: sub_71032DA0+3D5j
		mov	ecx, [ebp+var_64]
		lea	edx, [ecx+ecx*2]
		shl	edx, 3
		add	edx, [eax+4]
		mov	ecx, [edx+20h]
		cmp	ecx, 1
		jnz	loc_71032EF0
		fld	qword ptr [edx+18h]
		fstp	[ebp+var_98]
		fld	qword ptr [edx+10h]
		mov	edx, [ebp+var_6C]
		fstp	[ebp+var_90]
		mov	dword ptr [esp+4], 4Ch
		mov	eax, [edx+0ACh]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEc
		mov	[esp], eax
		mov	eax, ds:_ZN11QTextStreamlsEd
		fld	[ebp+var_90]
		fstp	qword ptr [esp+4]
		mov	[ebp+var_58], eax
		call	eax ; _ZN11QTextStreamlsEd
		mov	dword ptr [esp+4], 2Ch
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEc
		fld	[ebp+var_98]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	[ebp+var_58]
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		test	eax, eax
		jnz	loc_71032F77

loc_71033056:				; CODE XREF: sub_71032DA0+1D1j
		mov	edx, 0FFFFFFFFh
		jmp	loc_71032F80
; ---------------------------------------------------------------------------

loc_71033060:				; CODE XREF: sub_71032DA0+153j
		fld	qword ptr [edx+18h]
		fstp	[ebp+var_88]
		mov	ecx, ds:_ZN11QTextStreamlsEc
		fld	qword ptr [edx+10h]
		mov	edx, [ebp+var_6C]
		fstp	[ebp+var_80]
		mov	dword ptr [esp+4], 43h
		mov	[ebp+var_5C], ecx
		mov	eax, [edx+0ACh]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ecx ; _ZN11QTextStreamlsEc
		mov	[esp], eax
		mov	eax, ds:_ZN11QTextStreamlsEd
		fld	[ebp+var_80]
		fstp	qword ptr [esp+4]
		mov	[ebp+var_60], eax
		call	eax ; _ZN11QTextStreamlsEd
		mov	dword ptr [esp+4], 2Ch
		mov	[esp], eax
		call	[ebp+var_5C]
		fld	[ebp+var_88]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	[ebp+var_60]
		add	[ebp+var_64], 1
		jmp	loc_7103315A
; ---------------------------------------------------------------------------

loc_710330D0:				; CODE XREF: sub_71032DA0+3C1j
		mov	edx, [eax+4]
		mov	edx, [edx+8]

loc_710330D6:				; CODE XREF: sub_71032DA0+3C9j
		cmp	[ebp+var_64], edx
		jge	loc_71032F6F
		mov	ecx, [ebp+var_64]
		lea	edx, [ecx+ecx*2]
		mov	ecx, [eax+4]
		lea	edx, [ecx+edx*8]
		cmp	dword ptr [edx+20h], 3
		mov	[ebp+var_68], edx
		jnz	loc_710331C0
		mov	edx, [ebp+var_6C]
		mov	dword ptr [esp+4], 20h
		mov	eax, [edx+0ACh]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	[ebp+var_70]
		mov	ecx, [ebp+var_68]
		mov	edx, [ebp+var_6C]
		fld	qword ptr [ecx+18h]
		fstp	[ebp+var_78]
		fld	qword ptr [ecx+10h]
		fstp	qword ptr [esp+4]
		mov	eax, [edx+0ACh]
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEd
		mov	dword ptr [esp+4], 2Ch
		mov	[esp], eax
		call	[ebp+var_70]
		fld	[ebp+var_78]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEd
		add	[ebp+var_64], 1

loc_7103315A:				; CODE XREF: sub_71032DA0+32Bj
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		test	eax, eax
		jnz	loc_710330D0
		xor	edx, edx
		jmp	loc_710330D6
; ---------------------------------------------------------------------------
		align 10h

loc_71033170:				; CODE XREF: sub_71032DA0+211j
		xor	edx, edx
		cmp	[ebp+var_64], edx
		jl	loc_71032FC6
		nop
		lea	esi, [esi+0]

loc_71033180:				; CODE XREF: sub_71032DA0+220j
		mov	ecx, [ebp+var_AC]
		mov	dword ptr [esp+4], offset asc_7105AC28 ; "\"/>"
		mov	eax, [ecx+0ACh]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		mov	[esp], eax
		call	ds:_Z4endlR11QTextStream
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_710331C0:				; CODE XREF: sub_71032DA0+352j
		sub	[ebp+var_64], 1
		jmp	loc_71032F6F
sub_71032DA0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710331C9	proc near		; DATA XREF: sub_71032DA0+23o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-0B8h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	ds:_ZN4QPenD1Ev
		mov	edx, [ebp-0B8h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_710331C9	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 114. _ZNK13QSvgGenerator6metricEN12QPaintDevice17PaintDeviceMetricE

; =============== S U B	R O U T	I N E =======================================


		public _ZNK13QSvgGenerator6metricEN12QPaintDevice17PaintDeviceMetricE
_ZNK13QSvgGenerator6metricEN12QPaintDevice17PaintDeviceMetricE proc near
					; DATA XREF: .rdata:7105D700o

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_14		= dword	ptr -14h
var_10		= word ptr -10h
var_E		= word ptr -0Eh
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 2Ch
		mov	eax, [esp+2Ch+arg_4]
		mov	edx, [esp+2Ch+arg_0]
		cmp	eax, 0Ah	; switch 11 cases
		mov	edx, [edx+8]
		jbe	short loc_71033230

loc_71033213:				; CODE XREF: _ZNK13QSvgGenerator6metricEN12QPaintDevice17PaintDeviceMetricE:loc_71033230j
					; DATA XREF: .rdata:off_7105AC5Co
		mov	[esp+2Ch+var_28], eax ;	jumptable 71033230 default case
		mov	[esp+2Ch+var_2C], offset aQsvggeneratorM ; "QSvgGenerator::metric(), unhandled metr"...
		call	ds:_Z8qWarningPKcz
		xor	eax, eax

loc_71033226:				; CODE XREF: _ZNK13QSvgGenerator6metricEN12QPaintDevice17PaintDeviceMetricE+4Bj
					; _ZNK13QSvgGenerator6metricEN12QPaintDevice17PaintDeviceMetricE+5Bj ...
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71033230:				; CODE XREF: _ZNK13QSvgGenerator6metricEN12QPaintDevice17PaintDeviceMetricE+11j
		jmp	ds:off_7105AC5C[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_71033237:				; CODE XREF: _ZNK13QSvgGenerator6metricEN12QPaintDevice17PaintDeviceMetricE:loc_71033230j
					; DATA XREF: .rdata:off_7105AC5Co
		mov	eax, [edx]	; jumptable 71033230 cases 7-10
		mov	eax, [eax+10h]
		mov	eax, [eax+0B0h]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_71033246:				; CODE XREF: _ZNK13QSvgGenerator6metricEN12QPaintDevice17PaintDeviceMetricE:loc_71033230j
					; DATA XREF: .rdata:off_7105AC5Co
		mov	eax, 20h	; jumptable 71033230 case 6
		jmp	short loc_71033226
; ---------------------------------------------------------------------------
		align 10h

loc_71033250:				; CODE XREF: _ZNK13QSvgGenerator6metricEN12QPaintDevice17PaintDeviceMetricE:loc_71033230j
					; DATA XREF: .rdata:off_7105AC5Co
		mov	eax, [edx]	; jumptable 71033230 case 1
		mov	eax, [eax+10h]
		mov	eax, [eax+80h]
		jmp	short loc_71033226
; ---------------------------------------------------------------------------
		align 10h

loc_71033260:				; CODE XREF: _ZNK13QSvgGenerator6metricEN12QPaintDevice17PaintDeviceMetricE:loc_71033230j
					; DATA XREF: .rdata:off_7105AC5Co
		mov	eax, [edx]	; jumptable 71033230 case 2
		mov	eax, [eax+10h]
		mov	eax, [eax+84h]
		jmp	short loc_71033226
; ---------------------------------------------------------------------------
		align 10h

loc_71033270:				; CODE XREF: _ZNK13QSvgGenerator6metricEN12QPaintDevice17PaintDeviceMetricE:loc_71033230j
					; DATA XREF: .rdata:off_7105AC5Co
		mov	eax, [edx]	; jumptable 71033230 case 3
		mov	eax, [eax+10h]
		fild	dword ptr [eax+80h]

loc_7103327B:				; CODE XREF: _ZNK13QSvgGenerator6metricEN12QPaintDevice17PaintDeviceMetricE+CCj
		fmul	ds:dbl_7105B428
		fild	dword ptr [eax+0B0h]
		fdivp	st(1), st
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jb	short loc_710332E0
		fnstcw	[esp+2Ch+var_E]
		fadd	ds:flt_7105B41C
		movzx	eax, [esp+2Ch+var_E]
		mov	ah, 0Ch
		mov	[esp+2Ch+var_10], ax
		fldcw	[esp+2Ch+var_10]
		fistp	[esp+2Ch+var_14]
		fldcw	[esp+2Ch+var_E]
		mov	eax, [esp+2Ch+var_14]
		jmp	loc_71033226
; ---------------------------------------------------------------------------

loc_710332C1:				; CODE XREF: _ZNK13QSvgGenerator6metricEN12QPaintDevice17PaintDeviceMetricE:loc_71033230j
					; DATA XREF: .rdata:off_7105AC5Co
		mov	eax, [edx]	; jumptable 71033230 case 4
		mov	eax, [eax+10h]
		fild	dword ptr [eax+84h]
		jmp	short loc_7103327B
; ---------------------------------------------------------------------------
		align 10h

loc_710332D0:				; CODE XREF: _ZNK13QSvgGenerator6metricEN12QPaintDevice17PaintDeviceMetricE:loc_71033230j
					; DATA XREF: .rdata:off_7105AC5Co
		mov	eax, 0FFFFFFFFh	; jumptable 71033230 case 5
		jmp	loc_71033226
; ---------------------------------------------------------------------------
		align 10h

loc_710332E0:				; CODE XREF: _ZNK13QSvgGenerator6metricEN12QPaintDevice17PaintDeviceMetricE+94j
		fnstcw	[esp+2Ch+var_E]
		fld	st
		fsub	ds:flt_7105B420
		movzx	eax, [esp+2Ch+var_E]
		mov	ah, 0Ch
		mov	[esp+2Ch+var_10], ax
		fldcw	[esp+2Ch+var_10]
		fistp	[esp+2Ch+var_14]
		fldcw	[esp+2Ch+var_E]
		mov	eax, [esp+2Ch+var_14]
		mov	[esp+2Ch+var_14], eax
		fild	[esp+2Ch+var_14]
		fsubp	st(1), st
		fadd	ds:flt_7105B41C
		fldcw	[esp+2Ch+var_10]
		fistp	[esp+2Ch+var_14]
		fldcw	[esp+2Ch+var_E]
		mov	edx, [esp+2Ch+var_14]
		lea	eax, [edx+eax]
		jmp	loc_71033226
_ZNK13QSvgGenerator6metricEN12QPaintDevice17PaintDeviceMetricE endp

; Exported entry  44. _ZN13QSvgGenerator10setViewBoxERK6QRectF

; =============== S U B	R O U T	I N E =======================================


		public _ZN13QSvgGenerator10setViewBoxERK6QRectF
_ZN13QSvgGenerator10setViewBoxERK6QRectF proc near
					; CODE XREF: _ZN13QSvgGenerator10setViewBoxERK5QRect+5Cp

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 0Ch
		mov	edx, [esp+0Ch+arg_0]
		mov	eax, [esp+0Ch+arg_4]
		mov	edx, [edx+8]
		mov	edx, [edx]
		test	byte ptr [edx+0Ch], 1
		jnz	short loc_71033394
		mov	ecx, [eax]
		mov	edx, [edx+10h]
		mov	[edx+88h], ecx
		mov	ecx, [eax+4]
		mov	[edx+8Ch], ecx
		mov	ecx, [eax+8]
		mov	[edx+90h], ecx
		mov	ecx, [eax+0Ch]
		mov	[edx+94h], ecx
		mov	ecx, [eax+10h]
		mov	[edx+98h], ecx
		mov	ecx, [eax+14h]
		mov	[edx+9Ch], ecx
		mov	ecx, [eax+18h]
		mov	[edx+0A0h], ecx
		mov	eax, [eax+1Ch]
		mov	[edx+0A4h], eax
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_71033394:				; CODE XREF: _ZN13QSvgGenerator10setViewBoxERK6QRectF+14j
		mov	eax, ds:_Z8qWarningPKcz
		mov	[esp+0Ch+arg_0], offset	aQsvggeneratorS	; "QSvgGenerator::setViewBox(),	cannot set"...
		add	esp, 0Ch
		jmp	eax
_ZN13QSvgGenerator10setViewBoxERK6QRectF endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  43. _ZN13QSvgGenerator10setViewBoxERK5QRect

; =============== S U B	R O U T	I N E =======================================


		public _ZN13QSvgGenerator10setViewBoxERK5QRect
_ZN13QSvgGenerator10setViewBoxERK5QRect	proc near

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_30		= dword	ptr -30h
var_2C		= qword	ptr -2Ch
var_24		= qword	ptr -24h
var_1C		= qword	ptr -1Ch
var_14		= qword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 48h
		mov	eax, [esp+4Ch+arg_4]
		mov	ebx, [eax]
		mov	[esp+4Ch+var_30], ebx
		mov	ecx, [eax+4]
		fild	[esp+4Ch+var_30]
		fstp	[esp+4Ch+var_2C]
		mov	[esp+4Ch+var_30], ecx
		mov	edx, [eax+8]
		fild	[esp+4Ch+var_30]
		fstp	[esp+4Ch+var_24]
		add	edx, 1
		sub	edx, ebx
		mov	[esp+4Ch+var_30], edx
		mov	eax, [eax+0Ch]
		fild	[esp+4Ch+var_30]
		fstp	[esp+4Ch+var_1C]
		add	eax, 1
		sub	eax, ecx
		mov	[esp+4Ch+var_30], eax
		lea	eax, [esp+4Ch+var_2C]
		mov	[esp+4Ch+var_48], eax
		mov	eax, [esp+4Ch+arg_0]
		fild	[esp+4Ch+var_30]
		fstp	[esp+4Ch+var_14]
		mov	[esp+4Ch+var_4C], eax
		call	_ZN13QSvgGenerator10setViewBoxERK6QRectF
		add	esp, 48h
		pop	ebx
		retn
_ZN13QSvgGenerator10setViewBoxERK5QRect	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  49. _ZN13QSvgGenerator7setSizeERK5QSize

; =============== S U B	R O U T	I N E =======================================


		public _ZN13QSvgGenerator7setSizeERK5QSize
_ZN13QSvgGenerator7setSizeERK5QSize proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	edx, [esp+0Ch+arg_4]
		mov	eax, [eax+8]
		mov	eax, [eax]
		test	byte ptr [eax+0Ch], 1
		jnz	short loc_71033450
		mov	ecx, [edx+4]
		mov	eax, [eax+10h]
		mov	edx, [edx]
		mov	[eax+84h], ecx
		mov	[eax+80h], edx
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71033450:				; CODE XREF: _ZN13QSvgGenerator7setSizeERK5QSize+14j
		mov	eax, ds:_Z8qWarningPKcz
		mov	[esp+0Ch+arg_0], offset	aQsvggenerato_0	; "QSvgGenerator::setSize(), cannot set	si"...
		add	esp, 0Ch
		jmp	eax
_ZN13QSvgGenerator7setSizeERK5QSize endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  45. _ZN13QSvgGenerator11setFileNameERK7QString

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN13QSvgGenerator11setFileNameERK7QString
_ZN13QSvgGenerator11setFileNameERK7QString proc	near

var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053AB0
		mov	[ebp+var_18], offset sub_71033571
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+8]
		mov	[ebp+var_40], eax
		mov	eax, [eax]
		test	byte ptr [eax+0Ch], 1
		jnz	loc_71033550
		mov	edx, [ebp+var_40]
		test	byte ptr [edx+4], 1
		jnz	short loc_71033528

loc_710334BD:				; CODE XREF: _ZN13QSvgGenerator11setFileNameERK7QString+C3j
					; _ZN13QSvgGenerator11setFileNameERK7QString+D6j
		mov	eax, [ebp+var_40]
		or	byte ptr [eax+4], 1
		mov	edx, [ebp+arg_4]
		mov	[esp+4], edx
		mov	eax, [ebp+var_40]
		add	eax, 8
		mov	[esp], eax
		mov	[ebp+var_38], 0FFFFFFFFh
		call	ds:_ZN7QStringaSERKS_
		mov	dword ptr [esp], 8 ; size_t
		call	sub_710517F0
		mov	[ebp+var_44], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+4], eax
		mov	edx, [ebp+var_44]
		mov	[esp], edx
		mov	[ebp+var_38], 1
		call	ds:_ZN5QFileC1ERK7QString
		mov	edx, [ebp+var_40]
		mov	eax, [edx]
		mov	edx, [ebp+var_44]
		mov	eax, [eax+10h]
		mov	[eax+0A8h], edx
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71033528:				; CODE XREF: _ZN13QSvgGenerator11setFileNameERK7QString+4Bj
		mov	eax, [eax+10h]
		mov	eax, [eax+0A8h]
		test	eax, eax
		jz	short loc_710334BD
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+10h]
		mov	[ebp+var_38], 0FFFFFFFFh
		call	eax
		jmp	loc_710334BD
; ---------------------------------------------------------------------------
		align 10h

loc_71033550:				; CODE XREF: _ZN13QSvgGenerator11setFileNameERK7QString+3Ej
		mov	dword ptr [esp], offset	aQsvggenerato_1	; "QSvgGenerator::setFileName(), cannot	se"...
		mov	[ebp+var_38], 0FFFFFFFFh
		call	ds:_Z8qWarningPKcz
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN13QSvgGenerator11setFileNameERK7QString endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71033571	proc near		; DATA XREF: _ZN13QSvgGenerator11setFileNameERK7QString+1Do
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-44h]
		mov	[ebp-48h], eax
		mov	[esp+0], edx
		call	sub_710517D0
		mov	eax, [ebp-48h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_71033571	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710335A0	proc near		; DATA XREF: .rdata:7105D774o

var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset word_71053AEA
		mov	[ebp+var_28], offset sub_710337AF
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], 3
		mov	eax, [eax+10h]
		mov	[ebp+var_5C], eax
		add	eax, 0B8h
		mov	[ebp+var_60], eax
		mov	edx, [ebp+var_60]
		lea	eax, [ebp+var_C]
		mov	[esp+8], eax
		mov	[esp+4], edx
		mov	edx, [ebp+var_5C]
		mov	eax, [edx+0ACh]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QTextStream9setStringEP7QString6QFlagsIN9QIODevice12OpenModeFlagEE
		mov	edx, [ebp+var_5C]
		mov	dword ptr [esp+4], offset aDefs	; "</defs>\n"
		mov	eax, [edx+0ACh]
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		mov	edx, [ebp+var_5C]
		mov	eax, [edx+0A8h]
		mov	[esp+4], eax
		mov	eax, [edx+0ACh]
		mov	[esp], eax
		call	ds:_ZN11QTextStream9setDeviceEP9QIODevice
		lea	eax, [ebp+var_10]
		mov	dword ptr [esp+4], offset aUtf8	; "UTF-8"
		mov	[esp], eax
		call	ds:_ZN10QByteArrayC1EPKc
		lea	edx, [ebp+var_10]
		mov	[esp], edx
		mov	[ebp+var_48], 1
		call	ds:_ZN10QTextCodec12codecForNameERK10QByteArray
		mov	[ebp+var_64], eax
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7103368E
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_Z5qFreePv

loc_7103368E:				; CODE XREF: sub_710335A0+D9j
		mov	eax, [ebp+var_64]
		mov	edx, [ebp+var_5C]
		mov	[esp+4], eax
		mov	eax, [edx+0ACh]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QTextStream8setCodecEP10QTextCodec
		mov	eax, [ebp+var_5C]
		mov	edx, [ebp+var_5C]
		add	eax, 0B4h
		mov	[esp+4], eax
		mov	eax, [edx+0ACh]
		mov	[esp], eax
		mov	eax, ds:_ZN11QTextStreamlsERK7QString
		mov	[ebp+var_50], eax
		call	eax ; _ZN11QTextStreamlsERK7QString
		mov	edx, [ebp+var_60]
		mov	[esp+4], edx
		mov	edx, [ebp+var_5C]
		mov	eax, [edx+0ACh]
		mov	[esp], eax
		call	[ebp+var_50]
		mov	eax, [ebp+var_5C]
		mov	edx, [ebp+var_5C]
		add	eax, 0BCh
		mov	[esp+4], eax
		mov	eax, [edx+0ACh]
		mov	[esp], eax
		call	[ebp+var_50]
		mov	eax, [ebp+var_5C]
		cmp	byte ptr [eax+0C0h], 0
		jnz	short loc_71033780

loc_7103370D:				; CODE XREF: sub_710335A0+20Aj
		mov	edx, [ebp+var_5C]
		mov	dword ptr [esp+4], offset aG ; "</g>"
		mov	eax, [edx+0ACh]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		mov	eax, ds:_ZN11QTextStreamlsEPKc
		mov	[ebp+var_54], eax
		call	eax ; _ZN11QTextStreamlsEPKc
		mov	edx, ds:_Z4endlR11QTextStream
		mov	[ebp+var_58], edx
		mov	[esp], eax
		call	edx ; _Z4endlR11QTextStream
		mov	dword ptr [esp+4], offset aSvg_0 ; "</svg>"
		mov	[esp], eax
		call	[ebp+var_54]
		mov	[esp], eax
		call	[ebp+var_58]
		mov	edx, [ebp+var_5C]
		mov	eax, [edx+0ACh]
		test	eax, eax
		jz	short loc_71033769
		mov	edx, [eax]
		mov	[esp], eax
		call	dword ptr [edx+4]

loc_71033769:				; CODE XREF: sub_710335A0+1BFj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, 1
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71033780:				; CODE XREF: sub_710335A0+16Bj
		mov	edx, [ebp+var_5C]
		mov	dword ptr [esp+4], offset aG ; "</g>"
		mov	eax, [edx+0ACh]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		mov	[esp], eax
		call	ds:_Z4endlR11QTextStream
		jmp	loc_7103370D
sub_710335A0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710337AF	proc near		; DATA XREF: sub_710335A0+20o
		add	ebp, 8
		mov	edx, [ebp-44h]
		mov	eax, [ebp-10h]
		mov	[ebp-68h], edx
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710337D8
		mov	eax, [ebp-10h]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], eax
		call	ds:_Z5qFreePv

loc_710337D8:				; CODE XREF: sub_710337AF+14j
		mov	eax, [ebp-68h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_710337AF	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710337F0	proc near		; CODE XREF: sub_71033AE0+76p

var_88		= qword	ptr -88h
var_80		= qword	ptr -80h
var_78		= qword	ptr -78h
var_70		= qword	ptr -70h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_1C		= byte ptr -1Ch
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0A8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_710525B0
		mov	[ebp+var_40], offset dword_71053AF0
		mov	[ebp+var_38], offset sub_71033A35
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset aImage ; "<image "
		mov	eax, [edx+10h]
		mov	eax, [eax+0ACh]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		mov	eax, ds:_ZN11QTextStreamlsEPKc
		mov	[ebp+var_60], eax
		call	eax ; _ZN11QTextStreamlsEPKc
		mov	edx, [ebp+arg_4]
		fld	qword ptr [edx+18h]
		fstp	[ebp+var_88]
		fld	qword ptr [edx+10h]
		fstp	[ebp+var_80]
		fld	qword ptr [edx+8]
		fstp	[ebp+var_78]
		fld	qword ptr [edx]
		mov	edx, [ebp+arg_0]
		fstp	[ebp+var_70]
		mov	dword ptr [esp+4], offset asc_7105ADD3 ; "x=\""
		mov	eax, [edx+10h]
		mov	eax, [eax+0ACh]
		mov	[esp], eax
		call	[ebp+var_60]
		mov	[esp], eax
		mov	eax, ds:_ZN11QTextStreamlsEd
		fld	[ebp+var_70]
		fstp	qword ptr [esp+4]
		mov	[ebp+var_64], eax
		call	eax ; _ZN11QTextStreamlsEd
		mov	dword ptr [esp+4], offset aY_0 ; "\" y=\""
		mov	[esp], eax
		call	[ebp+var_60]
		fld	[ebp+var_78]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	[ebp+var_64]
		mov	dword ptr [esp+4], offset aWidth_1 ; "\" width=\""
		mov	[esp], eax
		call	[ebp+var_60]
		fld	[ebp+var_80]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	[ebp+var_64]
		mov	dword ptr [esp+4], offset aHeight_0 ; "\" height=\""
		mov	[esp], eax
		call	[ebp+var_60]
		fld	[ebp+var_88]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	[ebp+var_64]
		mov	dword ptr [esp+4], offset aPreserveaspect ; "\"	preserveAspectRatio=\"none\" "
		mov	[esp], eax
		call	[ebp+var_60]
		mov	eax, ds:_ZN10QByteArray11shared_nullE
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_1C]
		mov	dword ptr [esp+8], 0
		mov	[esp], eax
		mov	[ebp+var_58], 3
		call	ds:_ZN7QBufferC1EP10QByteArrayP7QObject
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		lea	eax, [ebp+var_1C]
		mov	[ebp+var_10], 3
		mov	[esp], eax
		mov	[ebp+var_58], 2
		call	ds:_ZN7QBuffer4openE6QFlagsIN9QIODevice12OpenModeFlagEE
		lea	eax, [ebp+var_1C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_8]
		mov	dword ptr [esp+0Ch], 0FFFFFFFFh
		mov	dword ptr [esp+8], offset aPng ; "PNG"
		mov	[esp], eax
		call	ds:_ZNK6QImage4saveEP9QIODevicePKci
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		call	ds:_ZN7QBuffer5closeEv
		lea	eax, [ebp+var_14]
		lea	edx, [ebp+var_C]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK10QByteArray8toBase64Ev
		mov	edx, [ebp+arg_0]
		sub	esp, 4
		mov	dword ptr [esp+4], offset aXlinkHrefDataI ; "xlink:href=\"data:image/png;base64,"
		mov	eax, [edx+10h]
		mov	eax, [eax+0ACh]
		mov	[ebp+var_58], 1
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		lea	edx, [ebp+var_14]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK10QByteArray
		mov	dword ptr [esp+4], offset asc_7105AD78 ; "\" />\n"
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71033A20

loc_710339DF:				; CODE XREF: sub_710337F0+243j
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_58], 3
		call	ds:_ZN7QBufferD1Ev
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71033A12
		mov	eax, [ebp+var_C]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_Z5qFreePv

loc_71033A12:				; CODE XREF: sub_710337F0+20Dj
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71033A20:				; CODE XREF: sub_710337F0+1EDj
		mov	eax, [ebp+var_14]
		mov	[ebp+var_58], 2
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	short loc_710339DF
sub_710337F0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71033A35	proc near		; DATA XREF: sub_710337F0+23o
		add	ebp, 8
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-94h], edx
		jz	short loc_71033A80
		cmp	eax, 2
		jz	short loc_71033A93
		mov	[ebp-90h], edx
		mov	eax, [ebp-14h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71033A74
		mov	eax, [ebp-14h]
		mov	dword ptr [ebp-58h], 0
		mov	[esp+0], eax
		call	ds:_Z5qFreePv

loc_71033A74:				; CODE XREF: sub_71033A35+2Aj
		mov	eax, [ebp-90h]
		mov	[ebp-94h], eax

loc_71033A80:				; CODE XREF: sub_71033A35+12j
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	ds:_ZN7QBufferD1Ev

loc_71033A93:				; CODE XREF: sub_71033A35+17j
		mov	edx, [ebp-94h]
		mov	eax, [ebp-0Ch]
		mov	[ebp-8Ch], edx
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71033ABF
		mov	eax, [ebp-0Ch]
		mov	dword ptr [ebp-58h], 0
		mov	[esp+0], eax
		call	ds:_Z5qFreePv

loc_71033ABF:				; CODE XREF: sub_71033A35+75j
		mov	eax, [ebp-8Ch]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71033A35	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71033AE0	proc near		; DATA XREF: .rdata:7105D7A8o

var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= byte ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_24], esp
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset word_71053AFA
		mov	[ebp+var_28], offset sub_71033B7B
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		call	ds:_ZNK7QPixmap7toImageEv
		mov	eax, [ebp+arg_C]
		mov	[ebp+var_48], 1
		sub	esp, 4
		mov	[esp+0Ch], eax
		lea	eax, [ebp+var_14]
		mov	[esp+8], eax
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+10h], 0
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_710337F0
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN6QImageD1Ev
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71033AE0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71033B7B	proc near		; DATA XREF: sub_71033AE0+23o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-50h], eax
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		call	ds:_ZN6QImageD1Ev
		mov	eax, [ebp-50h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71033B7B	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71033BB0	proc near		; CODE XREF: sub_7103CA30+85Fp
					; sub_71040150+297p ...

var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= byte ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 98h
		mov	[ebp+var_60], eax
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[ebp+var_74], ecx
		mov	[esp], eax
		mov	[ebp+var_70], edx
		mov	[ebp+var_34], esp
		mov	[ebp+var_44], offset sub_710525B0
		mov	[ebp+var_40], offset dword_71053B00
		mov	[ebp+var_38], offset sub_71033E50
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+var_60]
		mov	[ebp+var_E], 30h
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], edx
		call	ds:_ZNK6QColor4blueEv
		mov	[ebp+var_C], 30h
		mov	[ebp+var_6C], eax
		mov	eax, [ebp+var_60]
		mov	[esp], eax
		call	ds:_ZNK6QColor5greenEv
		mov	edx, [ebp+var_60]
		mov	[ebp+var_A], 30h
		mov	[esp], edx
		mov	[ebp+var_68], eax
		call	ds:_ZNK6QColor3redEv
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset a123 ; "#%1%2%3"
		mov	[ebp+var_64], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		call	ds:_ZN7QString10fromLatin1EPKci
		mov	eax, [ebp+var_64]
		lea	edx, [ebp+var_A]
		lea	ecx, [ebp+var_18]
		mov	[ebp+var_58], 5
		sub	esp, 4
		mov	[esp+18h], edx
		mov	edx, eax
		sar	edx, 1Fh
		mov	[esp+0Ch], edx
		lea	edx, [ebp+var_14]
		mov	dword ptr [esp+14h], 10h
		mov	dword ptr [esp+10h], 2
		mov	[esp+8], eax
		mov	[esp+4], edx
		mov	[esp], ecx
		call	ds:_ZNK7QString3argExiiRK5QChar
		mov	eax, [ebp+var_68]
		sub	esp, 4
		lea	edx, [ebp+var_C]
		mov	[esp+18h], edx
		lea	ecx, [ebp+var_1C]
		mov	dword ptr [esp+14h], 10h
		mov	edx, eax
		sar	edx, 1Fh
		mov	[esp+0Ch], edx
		lea	edx, [ebp+var_18]
		mov	dword ptr [esp+10h], 2
		mov	[esp+8], eax
		mov	[esp+4], edx
		mov	[esp], ecx
		mov	[ebp+var_58], 4
		call	ds:_ZNK7QString3argExiiRK5QChar
		mov	eax, [ebp+var_6C]
		sub	esp, 4
		lea	edx, [ebp+var_E]
		mov	[esp+18h], edx
		lea	ecx, [ebp+var_20]
		mov	dword ptr [esp+14h], 10h
		mov	edx, eax
		sar	edx, 1Fh
		mov	[esp+0Ch], edx
		lea	edx, [ebp+var_1C]
		mov	dword ptr [esp+10h], 2
		mov	[esp+8], eax
		mov	[esp+4], edx
		mov	[esp], ecx
		mov	[ebp+var_58], 3
		call	ds:_ZNK7QString3argExiiRK5QChar
		mov	edx, [ebp+var_70]
		sub	esp, 4
		lea	eax, [ebp+var_20]
		mov	[esp+4], eax
		mov	[ebp+var_58], 2
		mov	[esp], edx
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71033E38

loc_71033D47:				; CODE XREF: sub_71033BB0+29Bj
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71033E20

loc_71033D58:				; CODE XREF: sub_71033BB0+283j
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71033E06

loc_71033D69:				; CODE XREF: sub_71033BB0+269j
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71033D89
		mov	eax, [ebp+var_14]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_71033D89:				; CODE XREF: sub_71033BB0+1C4j
		mov	edx, [ebp+var_60]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], edx
		call	ds:_ZNK6QColor6alphaFEv
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		mov	dword ptr [esp+10h], 6
		mov	dword ptr [esp+0Ch], 67h
		fstp	qword ptr [esp+4]
		call	ds:_ZN7QString6numberEdci
		mov	eax, [ebp+var_74]
		lea	edx, [ebp+var_24]
		mov	[ebp+var_58], 1
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71033DF9
		mov	eax, [ebp+var_24]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_71033DF9:				; CODE XREF: sub_71033BB0+234j
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71033E06:				; CODE XREF: sub_71033BB0+1B3j
		mov	eax, [ebp+var_18]
		mov	[ebp+var_58], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71033D69
; ---------------------------------------------------------------------------
		align 10h

loc_71033E20:				; CODE XREF: sub_71033BB0+1A2j
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_58], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71033D58
; ---------------------------------------------------------------------------

loc_71033E38:				; CODE XREF: sub_71033BB0+191j
		mov	eax, [ebp+var_20]
		mov	[ebp+var_58], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71033D47
sub_71033BB0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71033E50	proc near		; DATA XREF: sub_71033BB0+2Fo
		add	ebp, 8
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-78h], edx
		jz	short loc_71033E96
		cmp	eax, 2
		jz	short loc_71033EA8
		cmp	eax, 3
		jz	short loc_71033EBA
		cmp	eax, 4
		xchg	ax, ax
		jz	short loc_71033ECC
		lea	eax, [ebp-24h]

loc_71033E75:				; CODE XREF: sub_71033E50+7Fj
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_710477B0
		mov	eax, [ebp-78h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71033E96:				; CODE XREF: sub_71033E50+Fj
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_710477B0

loc_71033EA8:				; CODE XREF: sub_71033E50+14j
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_710477B0

loc_71033EBA:				; CODE XREF: sub_71033E50+19j
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_710477B0

loc_71033ECC:				; CODE XREF: sub_71033E50+20j
		lea	eax, [ebp-14h]
		jmp	short loc_71033E75
sub_71033E50	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  51. _ZN13QSvgGeneratorC1Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN13QSvgGeneratorC1Ev
_ZN13QSvgGeneratorC1Ev proc near

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset word_71053B82
		mov	[ebp+var_28], offset sub_71033FDD
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], edx
		call	ds:_ZN12QPaintDeviceC2Ev
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D6E8
		mov	dword ptr [esp], 0Ch ; size_t
		mov	[ebp+var_48], 4
		call	sub_710517F0
		mov	[ebp+var_50], eax
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	edx, [ebp+var_50]
		mov	[edx+8], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+var_50]
		mov	eax, [ebp+arg_0]
		mov	[eax+8], edx
		mov	dword ptr [esp], 14h ; size_t
		mov	[ebp+var_48], 3
		call	sub_710517F0
		mov	[ebp+var_54], eax
		mov	[ebp+var_C], 0FFFFBEB7h
		mov	dword ptr [esp], 140h ;	size_t
		mov	[ebp+var_48], 2
		call	sub_710517F0
		mov	[ebp+var_58], eax
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	sub_71042D80
		lea	eax, [ebp+var_C]
		mov	edx, [ebp+var_58]
		mov	[esp+8], eax
		mov	eax, [ebp+var_54]
		mov	[ebp+var_48], 2
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN12QPaintEngineC2ER19QPaintEnginePrivate6QFlagsINS_18PaintEngineFeatureEE
		mov	edx, [ebp+var_54]
		mov	eax, [ebp+var_50]
		mov	dword ptr [edx], offset	off_7105D768
		and	byte ptr [eax+4], 0FEh
		mov	[eax], edx
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN13QSvgGeneratorC1Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71033FDD	proc near		; DATA XREF: _ZN13QSvgGeneratorC1Ev+20o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-5Ch], edx
		jz	short loc_71034003
		cmp	eax, 2
		jz	short loc_7103400E
		cmp	eax, 3
		jz	short loc_71034023
		mov	eax, [ebp-58h]
		mov	[esp+0], eax
		call	sub_710517D0

loc_71034003:				; CODE XREF: sub_71033FDD+Fj
		mov	edx, [ebp-54h]
		mov	[esp+0], edx
		call	sub_710517D0

loc_7103400E:				; CODE XREF: sub_71033FDD+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-48h], 0
		add	eax, 8
		mov	[esp+0], eax
		call	sub_7103C370

loc_71034023:				; CODE XREF: sub_71033FDD+19j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], eax
		call	ds:_ZN12QPaintDeviceD2Ev
		mov	edx, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_71033FDD	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  52. _ZN13QSvgGeneratorC2Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN13QSvgGeneratorC2Ev
_ZN13QSvgGeneratorC2Ev proc near

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset word_71053B8E
		mov	[ebp+var_28], offset sub_7103414D
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], edx
		call	ds:_ZN12QPaintDeviceC2Ev
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D6E8
		mov	dword ptr [esp], 0Ch ; size_t
		mov	[ebp+var_48], 4
		call	sub_710517F0
		mov	[ebp+var_50], eax
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	edx, [ebp+var_50]
		mov	[edx+8], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+var_50]
		mov	eax, [ebp+arg_0]
		mov	[eax+8], edx
		mov	dword ptr [esp], 14h ; size_t
		mov	[ebp+var_48], 3
		call	sub_710517F0
		mov	[ebp+var_54], eax
		mov	[ebp+var_C], 0FFFFBEB7h
		mov	dword ptr [esp], 140h ;	size_t
		mov	[ebp+var_48], 2
		call	sub_710517F0
		mov	[ebp+var_58], eax
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	sub_71042D80
		lea	eax, [ebp+var_C]
		mov	edx, [ebp+var_58]
		mov	[esp+8], eax
		mov	eax, [ebp+var_54]
		mov	[ebp+var_48], 2
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN12QPaintEngineC2ER19QPaintEnginePrivate6QFlagsINS_18PaintEngineFeatureEE
		mov	edx, [ebp+var_54]
		mov	eax, [ebp+var_50]
		mov	dword ptr [edx], offset	off_7105D768
		and	byte ptr [eax+4], 0FEh
		mov	[eax], edx
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN13QSvgGeneratorC2Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7103414D	proc near		; DATA XREF: _ZN13QSvgGeneratorC2Ev+20o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-5Ch], edx
		jz	short loc_71034173
		cmp	eax, 2
		jz	short loc_7103417E
		cmp	eax, 3
		jz	short loc_71034193
		mov	eax, [ebp-58h]
		mov	[esp+0], eax
		call	sub_710517D0

loc_71034173:				; CODE XREF: sub_7103414D+Fj
		mov	edx, [ebp-54h]
		mov	[esp+0], edx
		call	sub_710517D0

loc_7103417E:				; CODE XREF: sub_7103414D+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-48h], 0
		add	eax, 8
		mov	[esp+0], eax
		call	sub_7103C370

loc_71034193:				; CODE XREF: sub_7103414D+19j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], eax
		call	ds:_ZN12QPaintDeviceD2Ev
		mov	edx, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_7103414D	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  53. _ZN13QSvgGeneratorD0Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN13QSvgGeneratorD0Ev
_ZN13QSvgGeneratorD0Ev proc near	; DATA XREF: .rdata:7105D6ECo

var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_71053B9A
		mov	[ebp+var_18], offset sub_710342BB
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		mov	dword ptr [edx], offset	off_7105D6E8
		mov	[ebp+var_44], eax
		test	byte ptr [eax+4], 1
		jnz	short loc_71034272
		mov	eax, [eax]

loc_71034206:				; CODE XREF: _ZN13QSvgGeneratorD0Ev+C2j
					; _ZN13QSvgGeneratorD0Ev+DAj
		test	eax, eax
		jz	short loc_7103421B
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 1
		call	eax

loc_7103421B:				; CODE XREF: _ZN13QSvgGeneratorD0Ev+48j
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+8]
		test	edx, edx
		mov	[ebp+var_40], edx
		jz	short loc_71034240
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_710342A0

loc_71034235:				; CODE XREF: _ZN13QSvgGeneratorD0Ev+F6j
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_710517D0

loc_71034240:				; CODE XREF: _ZN13QSvgGeneratorD0Ev+66j
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+8], 0
		mov	[esp], edx
		mov	[ebp+var_38], 0FFFFFFFFh
		call	ds:_ZN12QPaintDeviceD2Ev
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_710517D0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71034272:				; CODE XREF: _ZN13QSvgGeneratorD0Ev+42j
		mov	edx, [ebp+var_44]
		mov	eax, [edx]
		mov	edx, [eax+10h]
		mov	edx, [edx+0A8h]
		test	edx, edx
		jz	short loc_71034206
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+10h]
		mov	[ebp+var_38], 1
		call	eax
		mov	edx, [ebp+var_44]
		mov	eax, [edx]
		jmp	loc_71034206
; ---------------------------------------------------------------------------
		align 10h

loc_710342A0:				; CODE XREF: _ZN13QSvgGeneratorD0Ev+73j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+8]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71034235
_ZN13QSvgGeneratorD0Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710342BB	proc near		; DATA XREF: _ZN13QSvgGeneratorD0Ev+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-48h], eax
		jz	short loc_710342DF
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp+0], eax
		call	sub_7103C370

loc_710342DF:				; CODE XREF: sub_710342BB+Dj
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], edx
		call	ds:_ZN12QPaintDeviceD2Ev
		mov	eax, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_710342BB	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  54. _ZN13QSvgGeneratorD1Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN13QSvgGeneratorD1Ev
_ZN13QSvgGeneratorD1Ev proc near	; DATA XREF: .rdata:off_7105D6E8o

var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_71053BA2
		mov	[ebp+var_18], offset sub_710343FC
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		mov	dword ptr [edx], offset	off_7105D6E8
		mov	[ebp+var_44], eax
		test	byte ptr [eax+4], 1
		jnz	short loc_710343B7
		mov	eax, [eax]

loc_71034356:				; CODE XREF: _ZN13QSvgGeneratorD1Ev+B7j
					; _ZN13QSvgGeneratorD1Ev+CFj
		test	eax, eax
		jz	short loc_7103436B
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 1
		call	eax

loc_7103436B:				; CODE XREF: _ZN13QSvgGeneratorD1Ev+48j
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+8]
		test	edx, edx
		mov	[ebp+var_40], edx
		jz	short loc_71034390
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_710343E4

loc_71034385:				; CODE XREF: _ZN13QSvgGeneratorD1Ev+EAj
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_710517D0

loc_71034390:				; CODE XREF: _ZN13QSvgGeneratorD1Ev+66j
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+8], 0
		mov	[esp], edx
		mov	[ebp+var_38], 0FFFFFFFFh
		call	ds:_ZN12QPaintDeviceD2Ev
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_710343B7:				; CODE XREF: _ZN13QSvgGeneratorD1Ev+42j
		mov	edx, [ebp+var_44]
		mov	eax, [edx]
		mov	edx, [eax+10h]
		mov	edx, [edx+0A8h]
		test	edx, edx
		jz	short loc_71034356
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+10h]
		mov	[ebp+var_38], 1
		call	eax
		mov	edx, [ebp+var_44]
		mov	eax, [edx]
		jmp	loc_71034356
; ---------------------------------------------------------------------------

loc_710343E4:				; CODE XREF: _ZN13QSvgGeneratorD1Ev+73j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+8]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_71034385
_ZN13QSvgGeneratorD1Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710343FC	proc near		; DATA XREF: _ZN13QSvgGeneratorD1Ev+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-48h], eax
		jz	short loc_71034420
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp+0], eax
		call	sub_7103C370

loc_71034420:				; CODE XREF: sub_710343FC+Dj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	ds:_ZN12QPaintDeviceD2Ev
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_710343FC	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  55. _ZN13QSvgGeneratorD2Ev

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN13QSvgGeneratorD2Ev
_ZN13QSvgGeneratorD2Ev proc near

var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_71053BAA
		mov	[ebp+var_18], offset sub_7103453C
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		mov	dword ptr [edx], offset	off_7105D6E8
		mov	[ebp+var_44], eax
		test	byte ptr [eax+4], 1
		jnz	short loc_710344F7
		mov	eax, [eax]

loc_71034496:				; CODE XREF: _ZN13QSvgGeneratorD2Ev+B7j
					; _ZN13QSvgGeneratorD2Ev+CFj
		test	eax, eax
		jz	short loc_710344AB
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 1
		call	eax

loc_710344AB:				; CODE XREF: _ZN13QSvgGeneratorD2Ev+48j
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+8]
		test	edx, edx
		mov	[ebp+var_40], edx
		jz	short loc_710344D0
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71034524

loc_710344C5:				; CODE XREF: _ZN13QSvgGeneratorD2Ev+EAj
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_710517D0

loc_710344D0:				; CODE XREF: _ZN13QSvgGeneratorD2Ev+66j
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+8], 0
		mov	[esp], edx
		mov	[ebp+var_38], 0FFFFFFFFh
		call	ds:_ZN12QPaintDeviceD2Ev
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_710344F7:				; CODE XREF: _ZN13QSvgGeneratorD2Ev+42j
		mov	edx, [ebp+var_44]
		mov	eax, [edx]
		mov	edx, [eax+10h]
		mov	edx, [edx+0A8h]
		test	edx, edx
		jz	short loc_71034496
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+10h]
		mov	[ebp+var_38], 1
		call	eax
		mov	edx, [ebp+var_44]
		mov	eax, [edx]
		jmp	loc_71034496
; ---------------------------------------------------------------------------

loc_71034524:				; CODE XREF: _ZN13QSvgGeneratorD2Ev+73j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+8]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_710344C5
_ZN13QSvgGeneratorD2Ev endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7103453C	proc near		; DATA XREF: _ZN13QSvgGeneratorD2Ev+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-48h], eax
		jz	short loc_71034560
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp+0], eax
		call	sub_7103C370

loc_71034560:				; CODE XREF: sub_7103453C+Dj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	ds:_ZN12QPaintDeviceD2Ev
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_7103453C	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  48. _ZN13QSvgGenerator15setOutputDeviceEP9QIODevice

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ZN13QSvgGenerator15setOutputDeviceEP9QIODevice
_ZN13QSvgGenerator15setOutputDeviceEP9QIODevice	proc near

var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset word_71053BB2
		mov	[ebp+var_28], offset sub_71034661
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+8]
		mov	edx, [eax]
		test	byte ptr [edx+0Ch], 1
		jnz	short loc_71034640
		and	byte ptr [eax+4], 0FEh
		mov	edx, [edx+10h]
		mov	ecx, [ebp+arg_4]
		mov	[edx+0A8h], ecx
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_C], edx
		lock inc dword ptr [edx]
		setnz	cl
		lea	edx, [ebp+var_C]
		add	eax, 8
		mov	[esp+4], edx
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71034620
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71034620:				; CODE XREF: _ZN13QSvgGenerator15setOutputDeviceEP9QIODevice+81j
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71034640:				; CODE XREF: _ZN13QSvgGenerator15setOutputDeviceEP9QIODevice+3Bj
		mov	dword ptr [esp], offset	aQsvggenerato_2	; "QSvgGenerator::setOutputDevice(), canno"...
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_Z8qWarningPKcz
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
_ZN13QSvgGenerator15setOutputDeviceEP9QIODevice	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71034661	proc near		; DATA XREF: _ZN13QSvgGenerator15setOutputDeviceEP9QIODevice+1Do
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	[ebp-50h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_710477B0
		mov	eax, [ebp-50h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_71034661	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71034690	proc near		; DATA XREF: .rdata:7105D7ACo

var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= qword	ptr -60h
var_58		= qword	ptr -58h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset word_71053BF6
		mov	[ebp+var_28], offset sub_710348D5
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+10h]
		mov	eax, edx
		add	eax, 0C8h
		mov	[ebp+var_50], edx
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZNK4QPen5styleEv
		test	eax, eax
		jnz	short loc_710346F3

loc_710346E6:				; CODE XREF: sub_71034690+208j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_710346F3:				; CODE XREF: sub_71034690+54j
		mov	ecx, [ebp+arg_8]
		lea	eax, [ebp+var_C]
		mov	edx, [ecx+20h]
		mov	[esp+8], edx
		mov	edx, [ecx+24h]
		mov	[esp], eax
		mov	[esp+4], edx
		call	ds:_ZN7QString11fromRawDataEPK5QChari
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+var_50]
		add	edx, 128h
		fld	qword ptr [eax+8]
		sub	esp, 4
		fstp	[ebp+var_60]
		fld	qword ptr [eax]
		mov	eax, [ebp+var_50]
		fstp	[ebp+var_58]
		mov	[ebp+var_64], edx
		add	eax, 12Ch
		mov	[ebp+var_68], eax
		mov	dword ptr [esp+4], offset aTextFill ; "<text fill=\""
		mov	ecx, [ebp+var_50]
		mov	eax, [ecx+0ACh]
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	ds:_ZN11QTextStreamlsEPKc
		mov	edx, [ebp+var_64]
		mov	[esp], eax
		mov	[esp+4], edx
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	dword ptr [esp+4], offset aFillOpacity_0 ; "\" fill-opacity=\""
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		mov	ecx, [ebp+var_68]
		mov	[esp], eax
		mov	[esp+4], ecx
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	dword ptr [esp+4], offset aStrokeNoneXmlS ; "\"	stroke=\"none\"	xml:space=\"preserve"...
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		fld	[ebp+var_58]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEd
		mov	dword ptr [esp+4], offset aY_0 ; "\" y=\""
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		fld	[ebp+var_60]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEd
		mov	dword ptr [esp+4], offset asc_7105AD8D ; "\" "
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		mov	edx, [ebp+arg_8]
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[esp+4], edx
		call	ds:_ZNK9QTextItem4fontEv
		sub	esp, 4
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		mov	ecx, [ebp+arg_0]
		mov	[esp], ecx
		mov	[ebp+var_48], 2
		call	sub_7103C610
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	ds:_ZN5QFontD1Ev
		lea	eax, [ebp+var_10]
		lea	edx, [ebp+var_C]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN2Qt6escapeERK7QString
		sub	esp, 4
		mov	dword ptr [esp+4], offset asc_7105B049 ; " >"
		mov	edx, [ebp+var_50]
		mov	eax, [edx+0ACh]
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN11QTextStreamlsEPKc
		lea	edx, [ebp+var_10]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	dword ptr [esp+4], offset aText	; "</text>"
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		mov	[esp], eax
		call	ds:_Z4endlR11QTextStream
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_710348C0

loc_7103488D:				; CODE XREF: sub_71034690+243j
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_710346E6
		mov	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN7QString4freeEPNS_4DataE
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_710348C0:				; CODE XREF: sub_71034690+1FBj
		mov	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_48], 3
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7103488D
sub_71034690	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710348D5	proc near		; DATA XREF: sub_71034690+20o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	ecx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-6Ch], ecx
		jz	short loc_71034921
		cmp	eax, 2
		jz	short loc_710348FD
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_710477B0

loc_710348FD:				; CODE XREF: sub_710348D5+14j
					; sub_710348D5+5Fj
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_710477B0
		mov	eax, [ebp-6Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71034921:				; CODE XREF: sub_710348D5+Fj
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	ds:_ZN5QFontD1Ev
		jmp	short loc_710348FD
sub_710348D5	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71034940	proc near		; DATA XREF: .rdata:7105D770o

var_C8		= qword	ptr -0C8h
var_C0		= qword	ptr -0C0h
var_B8		= qword	ptr -0B8h
var_B0		= qword	ptr -0B0h
var_A8		= qword	ptr -0A8h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_91		= byte ptr -91h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0E8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_710525B0
		mov	[ebp+var_40], offset dword_71053C00
		mov	[ebp+var_38], offset sub_71034FF0
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+10h]
		mov	eax, [edx+0A8h]
		mov	[ebp+var_8C], edx
		test	eax, eax
		jz	loc_71034F80
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZNK9QIODevice6isOpenEv
		test	al, al
		jz	loc_71034C97
		mov	edx, [ebp+var_8C]
		mov	eax, [edx+0A8h]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZNK9QIODevice10isWritableEv
		test	al, al
		jz	loc_71034EE0

loc_710349C8:				; CODE XREF: sub_71034940+37Dj
		mov	[ebp+var_20], 3
		mov	dword ptr [esp], 8 ; size_t
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_710517F0
		mov	[ebp+var_58], 1
		mov	[ebp+var_90], eax
		lea	eax, [ebp+var_20]
		mov	edx, [ebp+var_90]
		mov	[esp+8], eax
		mov	eax, [ebp+var_8C]
		mov	[esp], edx
		add	eax, 0B4h
		mov	[esp+4], eax
		call	ds:_ZN11QTextStreamC1EP7QString6QFlagsIN9QIODevice12OpenModeFlagEE
		mov	edx, [ebp+var_90]
		mov	eax, [ebp+var_8C]
		mov	[eax+0ACh], edx
		mov	eax, ds:_ZN11QTextStreamlsEPKc
		mov	[esp], edx
		mov	dword ptr [esp+4], offset a?xmlVersion1_0 ; "<?xml version=\"1.0\" encoding=\"UTF-8\"...
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[ebp+var_64], eax
		call	eax ; _ZN11QTextStreamlsEPKc
		mov	edx, ds:_Z4endlR11QTextStream
		mov	[ebp+var_68], edx
		mov	[esp], eax
		call	edx ; _Z4endlR11QTextStream
		mov	dword ptr [esp+4], offset aSvg_1 ; "<svg"
		mov	[esp], eax
		call	[ebp+var_64]
		mov	eax, [ebp+var_8C]
		mov	eax, [eax+80h]
		test	eax, eax
		mov	[ebp+var_98], eax
		js	loc_71034B19
		mov	edx, [ebp+var_8C]
		mov	edx, [edx+84h]
		test	edx, edx
		mov	[ebp+var_9C], edx
		js	loc_71034B19
		mov	eax, [ebp+var_8C]
		fild	dword ptr [eax+0B0h]
		mov	dword ptr [esp+4], offset aWidth_2 ; " width=\""
		mov	eax, [eax+0ACh]
		fstp	[ebp+var_A8]
		mov	[esp], eax
		call	[ebp+var_64]
		fild	[ebp+var_98]
		fmul	ds:dbl_7105B428
		mov	[esp], eax
		mov	eax, ds:_ZN11QTextStreamlsEd
		mov	[ebp+var_6C], eax
		fdiv	[ebp+var_A8]
		fstp	qword ptr [esp+4]
		call	eax ; _ZN11QTextStreamlsEd
		mov	dword ptr [esp+4], offset aMmHeight ; "mm\" height=\""
		mov	[esp], eax
		call	[ebp+var_64]
		fild	[ebp+var_9C]
		fmul	ds:dbl_7105B428
		mov	[esp], eax
		fdiv	[ebp+var_A8]
		fstp	qword ptr [esp+4]
		call	[ebp+var_6C]
		mov	dword ptr [esp+4], offset aMm_0	; "mm\""
		mov	[esp], eax
		call	[ebp+var_64]
		mov	[esp], eax
		call	[ebp+var_68]

loc_71034B19:				; CODE XREF: sub_71034940+132j
					; sub_71034940+14Cj
		mov	edx, [ebp+var_8C]
		fld	qword ptr [edx+98h]
		fldz
		fxch	st(1)
		fucomp	st(1)
		fnstsw	ax
		sahf
		jbe	short loc_71034B43
		fld	qword ptr [edx+0A0h]
		fucompp
		fnstsw	ax
		sahf
		ja	loc_71034D50
		jmp	short loc_71034B45
; ---------------------------------------------------------------------------

loc_71034B43:				; CODE XREF: sub_71034940+1EEj
		fstp	st

loc_71034B45:				; CODE XREF: sub_71034940+201j
					; sub_71034940+4FAj
		mov	edx, [ebp+var_8C]
		mov	dword ptr [esp+4], offset aXmlnsHttpWww_w ; " xmlns=\"http://www.w3.org/2000/svg\" x"...
		mov	eax, [edx+0ACh]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		mov	eax, ds:_ZN11QTextStreamlsEPKc
		mov	[ebp+var_78], eax
		call	eax ; _ZN11QTextStreamlsEPKc
		mov	edx, ds:_Z4endlR11QTextStream
		mov	[ebp+var_7C], edx
		mov	[esp], eax
		call	edx ; _Z4endlR11QTextStream
		mov	edx, [ebp+var_8C]
		mov	eax, [edx+110h]
		mov	eax, [eax+8]
		test	eax, eax
		jnz	loc_71034E40

loc_71034B92:				; CODE XREF: sub_71034940+541j
		mov	edx, [ebp+var_8C]
		mov	eax, [edx+114h]
		mov	ecx, [eax+8]
		test	ecx, ecx
		jnz	loc_71034E86

loc_71034BA9:				; CODE XREF: sub_71034940+598j
		lea	eax, [ebp+var_24]
		mov	edx, [ebp+var_8C]
		mov	[esp+8], eax
		mov	eax, [ebp+var_8C]
		mov	[ebp+var_24], 3
		add	eax, 0B8h
		mov	[esp+4], eax
		mov	eax, [edx+0ACh]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		mov	eax, ds:_ZN11QTextStream9setStringEP7QString6QFlagsIN9QIODevice12OpenModeFlagEE
		mov	[ebp+var_84], eax
		call	eax ; _ZN11QTextStream9setStringEP7QString6QFlagsIN9QIODevice12OpenModeFlagEE
		mov	edx, [ebp+var_8C]
		mov	dword ptr [esp+4], offset aDefs_0 ; "<defs>\n"
		mov	eax, [edx+0ACh]
		mov	[esp], eax
		mov	eax, ds:_ZN11QTextStreamlsEPKc
		mov	[ebp+var_88], eax
		call	eax ; _ZN11QTextStreamlsEPKc
		lea	eax, [ebp+var_28]
		mov	edx, [ebp+var_8C]
		mov	[esp+8], eax
		mov	eax, [ebp+var_8C]
		mov	[ebp+var_28], 3
		add	eax, 0BCh
		mov	[esp+4], eax
		mov	eax, [edx+0ACh]
		mov	[esp], eax
		call	[ebp+var_84]
		mov	edx, [ebp+var_8C]
		mov	dword ptr [esp+4], offset aG_0 ; "<g "
		mov	eax, [edx+0ACh]
		mov	[esp], eax
		call	[ebp+var_88]
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_7103E3E0
		mov	edx, [ebp+var_8C]
		mov	eax, [edx+0ACh]
		mov	[esp], eax
		call	ds:_Z4endlR11QTextStream
		mov	[ebp+var_91], 1

loc_71034C83:				; CODE XREF: sub_71034940+406j
					; sub_71034940+636j ...
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_91]
		leave
		retn
; ---------------------------------------------------------------------------

loc_71034C97:				; CODE XREF: sub_71034940+5Ej
		mov	edx, [ebp+var_8C]
		lea	ecx, [ebp+var_C]
		mov	[ebp+var_C], 12h
		mov	eax, [edx+0A8h]
		mov	edx, [eax]
		mov	edx, [edx+34h]
		mov	[esp+4], ecx
		mov	[esp], eax
		call	edx
		test	al, al
		jnz	loc_710349C8
		mov	edx, [ebp+var_8C]
		mov	eax, [edx+0A8h]
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	ds:_ZNK9QIODevice11errorStringEv
		lea	eax, [ebp+var_14]
		lea	edx, [ebp+var_10]
		mov	[ebp+var_58], 5
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK7QString11toLocal8BitEv
		mov	eax, [ebp+var_14]
		sub	esp, 4
		mov	eax, [eax+0Ch]
		mov	dword ptr [esp], offset	aQsvgpaintengin	; "QSvgPaintEngine::begin(), could not ope"...
		mov	[ebp+var_58], 4
		mov	[esp+4], eax
		call	ds:_Z8qWarningPKcz
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71034FC0

loc_71034D2E:				; CODE XREF: sub_71034940+693j
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71034FA0

loc_71034D3F:				; CODE XREF: sub_71034940+616j
		mov	[ebp+var_91], 0
		jmp	loc_71034C83
; ---------------------------------------------------------------------------
		align 10h

loc_71034D50:				; CODE XREF: sub_71034940+1FBj
		fld	qword ptr [edx+90h]
		fstp	[ebp+var_C8]
		fld	qword ptr [edx+88h]
		mov	dword ptr [esp+4], offset aViewbox_0 ; " viewBox=\""
		mov	eax, [edx+0ACh]
		fstp	[ebp+var_C0]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		mov	[esp], eax
		mov	eax, ds:_ZN11QTextStreamlsEd
		fld	[ebp+var_C0]
		fstp	qword ptr [esp+4]
		mov	[ebp+var_70], eax
		call	eax ; _ZN11QTextStreamlsEd
		mov	edx, ds:_ZN11QTextStreamlsEc
		mov	dword ptr [esp+4], 20h
		mov	[ebp+var_74], edx
		mov	[esp], eax
		call	edx ; _ZN11QTextStreamlsEc
		fld	[ebp+var_C8]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	[ebp+var_70]
		mov	eax, [ebp+var_8C]
		fld	qword ptr [eax+0A0h]
		fstp	[ebp+var_B8]
		fld	qword ptr [eax+98h]
		mov	dword ptr [esp+4], 20h
		mov	eax, [eax+0ACh]
		fstp	[ebp+var_B0]
		mov	[esp], eax
		call	[ebp+var_74]
		fld	[ebp+var_B0]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	[ebp+var_70]
		mov	dword ptr [esp+4], 20h
		mov	[esp], eax
		call	[ebp+var_74]
		fld	[ebp+var_B8]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	[ebp+var_70]
		mov	dword ptr [esp+4], 22h
		mov	[esp], eax
		call	[ebp+var_74]
		mov	[esp], eax
		call	ds:_Z4endlR11QTextStream
		jmp	loc_71034B45
; ---------------------------------------------------------------------------
		align 10h

loc_71034E40:				; CODE XREF: sub_71034940+24Cj
		mov	dword ptr [esp+4], offset aTitle ; "<title>"
		mov	eax, [edx+0ACh]
		mov	[esp], eax
		call	[ebp+var_78]
		mov	edx, [ebp+var_8C]
		add	edx, 110h
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	dword ptr [esp+4], offset aTitle_0 ; "</title>"
		mov	[esp], eax
		call	[ebp+var_78]
		mov	[esp], eax
		call	[ebp+var_7C]
		jmp	loc_71034B92
; ---------------------------------------------------------------------------

loc_71034E86:				; CODE XREF: sub_71034940+263j
		mov	dword ptr [esp+4], offset aDesc	; "<desc>"
		mov	eax, [edx+0ACh]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		mov	eax, ds:_ZN11QTextStreamlsEPKc
		mov	[ebp+var_80], eax
		call	eax ; _ZN11QTextStreamlsEPKc
		mov	edx, [ebp+var_8C]
		add	edx, 114h
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	dword ptr [esp+4], offset aDesc_0 ; "</desc>"
		mov	[esp], eax
		call	[ebp+var_80]
		mov	[esp], eax
		call	ds:_Z4endlR11QTextStream
		jmp	loc_71034BA9
; ---------------------------------------------------------------------------
		align 10h

loc_71034EE0:				; CODE XREF: sub_71034940+82j
		mov	edx, [ebp+var_8C]
		mov	eax, [edx+0A8h]
		mov	[esp+4], eax
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		call	ds:_ZNK9QIODevice11errorStringEv
		lea	eax, [ebp+var_1C]
		lea	edx, [ebp+var_18]
		mov	[ebp+var_58], 3
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZNK7QString11toLocal8BitEv
		mov	eax, [ebp+var_1C]
		sub	esp, 4
		mov	eax, [eax+0Ch]
		mov	dword ptr [esp], offset	aQsvgpainteng_0	; "QSvgPaintEngine::begin(), could not wri"...
		mov	[ebp+var_58], 2
		mov	[esp+4], eax
		call	ds:_Z8qWarningPKcz
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71034FD8

loc_71034F4B:				; CODE XREF: sub_71034940+6ABj
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_71034D3F
		mov	eax, [ebp+var_18]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_91], 0
		jmp	loc_71034C83
; ---------------------------------------------------------------------------
		align 10h

loc_71034F80:				; CODE XREF: sub_71034940+46j
		mov	dword ptr [esp], offset	aQsvgpainteng_1	; "QSvgPaintEngine::begin(), no	output dev"...
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_Z8qWarningPKcz
		mov	[ebp+var_91], 0
		jmp	loc_71034C83
; ---------------------------------------------------------------------------

loc_71034FA0:				; CODE XREF: sub_71034940+3F9j
		mov	eax, [ebp+var_10]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_91], 0
		jmp	loc_71034C83
; ---------------------------------------------------------------------------
		align 10h

loc_71034FC0:				; CODE XREF: sub_71034940+3E8j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_58], 5
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	loc_71034D2E
; ---------------------------------------------------------------------------

loc_71034FD8:				; CODE XREF: sub_71034940+605j
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_58], 3
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	loc_71034F4B
sub_71034940	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71034FF0	proc near		; DATA XREF: sub_71034940+23o
		add	ebp, 8
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-0D4h], edx
		jz	short loc_7103503E
		cmp	eax, 2
		jz	short loc_71035076
		cmp	eax, 3
		jz	loc_7103509D
		cmp	eax, 4
		jz	loc_710350D5
		mov	eax, [ebp-90h]
		mov	[esp+0], eax
		call	sub_710517D0
		mov	edx, [ebp-0D4h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7103503E:				; CODE XREF: sub_71034FF0+12j
		mov	eax, [ebp-0D4h]
		mov	[ebp-0CCh], eax
		mov	eax, [ebp-1Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7103506A
		mov	eax, [ebp-1Ch]
		mov	dword ptr [ebp-58h], 0
		mov	[esp+0], eax
		call	ds:_Z5qFreePv

loc_7103506A:				; CODE XREF: sub_71034FF0+65j
		mov	edx, [ebp-0CCh]
		mov	[ebp-0D4h], edx

loc_71035076:				; CODE XREF: sub_71034FF0+17j
		lea	eax, [ebp-18h]

loc_71035079:				; CODE XREF: sub_71034FF0+E8j
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_710477B0
		mov	eax, [ebp-0D4h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7103509D:				; CODE XREF: sub_71034FF0+1Cj
		mov	eax, [ebp-0D4h]
		mov	[ebp-0D0h], eax
		mov	eax, [ebp-14h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710350C9
		mov	eax, [ebp-14h]
		mov	dword ptr [ebp-58h], 0
		mov	[esp+0], eax
		call	ds:_Z5qFreePv

loc_710350C9:				; CODE XREF: sub_71034FF0+C4j
		mov	edx, [ebp-0D0h]
		mov	[ebp-0D4h], edx

loc_710350D5:				; CODE XREF: sub_71034FF0+25j
		lea	eax, [ebp-10h]
		jmp	short loc_71035079
sub_71034FF0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710350E0	proc near		; DATA XREF: .rdata:7105D778o

var_C8		= qword	ptr -0C8h
var_C0		= qword	ptr -0C0h
var_B8		= qword	ptr -0B8h
var_B0		= qword	ptr -0B0h
var_A8		= qword	ptr -0A8h
var_A0		= qword	ptr -0A0h
var_98		= qword	ptr -98h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= byte ptr -7Ch
var_78		= dword	ptr -78h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_48		= byte ptr -48h
var_18		= byte ptr -18h
var_10		= byte ptr -10h
var_C		= byte ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0E8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_5C], eax
		lea	eax, [ebp+var_7C]
		mov	[ebp+var_64], offset sub_710525B0
		mov	[ebp+var_60], offset dword_71053CA0
		mov	[ebp+var_58], offset sub_7103549E
		mov	[ebp+var_54], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+10h]
		cmp	byte ptr [edx+0C0h], 0
		mov	[ebp+var_90], edx
		jnz	loc_71035474

loc_7103512B:				; CODE XREF: sub_710350E0+3B2j
		mov	edx, [ebp+var_90]
		mov	dword ptr [esp+4], offset aG_0 ; "<g "
		mov	eax, [edx+0ACh]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		mov	eax, [ebp+arg_4]
		lea	edx, [ebp+var_C]
		mov	[esp], edx
		mov	[esp+4], eax
		call	ds:_ZNK17QPaintEngineState5brushEv
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_C]
		mov	[ebp+var_78], 3
		sub	esp, 4
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_7103CA30
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZN6QBrushD1Ev
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[esp+4], edx
		call	ds:_ZNK17QPaintEngineState3penEv
		mov	eax, [ebp+arg_0]
		lea	edx, [ebp+var_10]
		mov	[ebp+var_78], 2
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	sub_71040150
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZN4QPenD1Ev
		mov	eax, [ebp+arg_4]
		lea	edx, [ebp+var_48]
		mov	[esp], edx
		mov	[esp+4], eax
		call	ds:_ZNK17QPaintEngineState6matrixEv
		lea	eax, [ebp+var_48]
		sub	esp, 4
		mov	[esp+4], eax
		mov	eax, [ebp+var_90]
		add	eax, 0D0h
		mov	[esp], eax
		call	ds:_ZN7QMatrixaSERKS_
		mov	edx, [ebp+var_90]
		fld	qword ptr [edx+0F8h]
		fstp	[ebp+var_C0]
		fld	qword ptr [edx+0F0h]
		fstp	[ebp+var_B8]
		fld	qword ptr [edx+0E8h]
		fstp	[ebp+var_B0]
		fld	qword ptr [edx+0E0h]
		fstp	[ebp+var_A8]
		fld	qword ptr [edx+0D8h]
		fstp	[ebp+var_A0]
		fld	qword ptr [edx+0D0h]
		mov	dword ptr [esp+4], offset aTransformMatri ; "transform=\"matrix("
		mov	eax, [edx+0ACh]
		fstp	[ebp+var_98]
		mov	[esp], eax
		mov	eax, ds:_ZN11QTextStreamlsEPKc
		mov	[ebp+var_80], eax
		call	eax ; _ZN11QTextStreamlsEPKc
		mov	[esp], eax
		mov	eax, ds:_ZN11QTextStreamlsEd
		fld	[ebp+var_98]
		fstp	qword ptr [esp+4]
		mov	[ebp+var_84], eax
		call	eax ; _ZN11QTextStreamlsEd
		mov	edx, ds:_ZN11QTextStreamlsEc
		mov	dword ptr [esp+4], 2Ch
		mov	[ebp+var_88], edx
		mov	[esp], eax
		call	edx ; _ZN11QTextStreamlsEc
		fld	[ebp+var_A0]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	[ebp+var_84]
		mov	dword ptr [esp+4], 2Ch
		mov	[esp], eax
		call	[ebp+var_88]
		fld	[ebp+var_A8]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	[ebp+var_84]
		mov	dword ptr [esp+4], 2Ch
		mov	[esp], eax
		call	[ebp+var_88]
		fld	[ebp+var_B0]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	[ebp+var_84]
		mov	dword ptr [esp+4], 2Ch
		mov	[esp], eax
		call	[ebp+var_88]
		fld	[ebp+var_B8]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	[ebp+var_84]
		mov	dword ptr [esp+4], 2Ch
		mov	[esp], eax
		call	[ebp+var_88]
		fld	[ebp+var_C0]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	[ebp+var_84]
		mov	dword ptr [esp+4], offset asc_7105B40C ; ")\""
		mov	[esp], eax
		call	[ebp+var_80]
		mov	[esp], eax
		call	ds:_Z4endlR11QTextStream
		mov	eax, [ebp+arg_4]
		lea	edx, [ebp+var_18]
		mov	[esp], edx
		mov	[esp+4], eax
		call	ds:_ZNK17QPaintEngineState4fontEv
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_18]
		mov	[ebp+var_78], 1
		sub	esp, 4
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_7103C610
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_78], 0FFFFFFFFh
		call	ds:_ZN5QFontD1Ev
		mov	edx, [ebp+arg_4]
		mov	[esp], edx
		call	ds:_ZNK17QPaintEngineState7opacityEv
		fsub	ds:flt_7105B420
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		sahf
		jb	loc_71035497

loc_710353BF:				; CODE XREF: sub_710350E0+3B9j
		fld	ds:dbl_7105B440
		fucompp
		fnstsw	ax
		sahf
		jnb	short loc_7103542D
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], edx
		call	ds:_ZNK17QPaintEngineState7opacityEv
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset aOpacity_1 ; "opacity=\""
		mov	eax, [edx+10h]
		fstp	[ebp+var_C8]
		mov	eax, [eax+0ACh]
		mov	[esp], eax
		mov	eax, ds:_ZN11QTextStreamlsEPKc
		mov	[ebp+var_8C], eax
		call	eax ; _ZN11QTextStreamlsEPKc
		fld	[ebp+var_C8]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEd
		mov	dword ptr [esp+4], offset asc_7105AD8D ; "\" "
		mov	[esp], eax
		call	[ebp+var_8C]

loc_7103542D:				; CODE XREF: sub_710350E0+2EAj
		mov	edx, [ebp+var_90]
		mov	dword ptr [esp+4], 3Eh
		mov	eax, [edx+0ACh]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEc
		mov	[esp], eax
		call	ds:_Z4endlR11QTextStream
		mov	eax, [ebp+var_90]
		mov	byte ptr [eax+0C0h], 1
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71035474:				; CODE XREF: sub_710350E0+45j
		mov	dword ptr [esp+4], offset aG_1 ; "</g>\n\n"
		mov	eax, [edx+0ACh]
		mov	[ebp+var_78], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		jmp	loc_7103512B
; ---------------------------------------------------------------------------

loc_71035497:				; CODE XREF: sub_710350E0+2D9j
		fchs
		jmp	loc_710353BF
sub_710350E0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7103549E	proc near		; DATA XREF: sub_710350E0+20o
		add	ebp, 8
		mov	eax, [ebp-78h]
		mov	edx, [ebp-74h]
		cmp	eax, 1
		mov	[ebp-0CCh], edx
		jz	short loc_710354DF
		cmp	eax, 2
		jz	short loc_71035507
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	ds:_ZN5QFontD1Ev
		mov	eax, [ebp-0CCh]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_710354DF:				; CODE XREF: sub_7103549E+12j
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	ds:_ZN4QPenD1Ev
		mov	edx, [ebp-0CCh]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71035507:				; CODE XREF: sub_7103549E+17j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-78h], 0
		call	ds:_ZN6QBrushD1Ev
		mov	eax, [ebp-0CCh]
		mov	dword ptr [ebp-78h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7103549E	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  93. _ZNK10QSvgWidget10metaObjectEv

; =============== S U B	R O U T	I N E =======================================


		public _ZNK10QSvgWidget10metaObjectEv
_ZNK10QSvgWidget10metaObjectEv proc near ; DATA	XREF: .rdata:off_7105D4C8o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+4]
		mov	eax, [eax+18h]
		test	eax, eax
		jz	short loc_71035540
		rep retn
; ---------------------------------------------------------------------------

loc_71035540:				; CODE XREF: _ZNK10QSvgWidget10metaObjectEv+Cj
		mov	eax, offset _ZN10QSvgWidget16staticMetaObjectE
		retn
_ZNK10QSvgWidget10metaObjectEv endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71035550	proc near		; DATA XREF: .text:71052BCCo
		mov	eax, ds:_ZN7QWidget16staticMetaObjectE
		mov	_ZN10QSvgWidget16staticMetaObjectE, eax
		retn
sub_71035550	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry   3. _ZN10QSvgWidget11qt_metacastEPKc

; =============== S U B	R O U T	I N E =======================================


		public _ZN10QSvgWidget11qt_metacastEPKc
_ZN10QSvgWidget11qt_metacastEPKc proc near ; DATA XREF:	.rdata:7105D4CCo

var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		xor	eax, eax
		mov	edx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_4], ebp
		mov	ebp, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_10], ebx
		mov	[esp+1Ch+var_C], esi
		test	edx, edx
		mov	[esp+1Ch+var_8], edi
		jz	short loc_7103559F
		mov	ecx, 0Bh
		mov	esi, edx
		mov	edi, offset aQsvgwidget	; "QSvgWidget"
		repe cmpsb
		setnbe	al
		setb	cl
		mov	esi, eax
		mov	eax, ebp
		mov	ebx, esi
		cmp	bl, cl
		jnz	short loc_710355B3

loc_7103559F:				; CODE XREF: _ZN10QSvgWidget11qt_metacastEPKc+1Fj
		mov	ebx, [esp+1Ch+var_10]
		mov	esi, [esp+1Ch+var_C]
		mov	edi, [esp+1Ch+var_8]
		mov	ebp, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_710355B3:				; CODE XREF: _ZN10QSvgWidget11qt_metacastEPKc+3Dj
		mov	eax, ds:_ZN7QWidget11qt_metacastEPKc
		mov	ebx, [esp+1Ch+var_10]
		mov	esi, [esp+1Ch+var_C]
		mov	edi, [esp+1Ch+var_8]
		mov	ebp, [esp+1Ch+var_4]
		add	esp, 1Ch
		jmp	eax
_ZN10QSvgWidget11qt_metacastEPKc endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry   5. _ZN10QSvgWidget18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv

; =============== S U B	R O U T	I N E =======================================


		public _ZN10QSvgWidget18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv
_ZN10QSvgWidget18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv proc near
					; CODE XREF: _ZN10QSvgWidget11qt_metacallEN11QMetaObject4CallEiPPv+6Cp
					; DATA XREF: .rdata:7105B464o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 0Ch
		cmp	[esp+0Ch+arg_4], 0
		mov	edx, [esp+0Ch+arg_0]
		mov	eax, [esp+0Ch+arg_8]
		mov	ecx, [esp+0Ch+arg_C]
		jnz	short loc_71035605
		test	eax, eax
		jnz	short loc_71035600
		mov	eax, [ecx+4]
		mov	[esp+0Ch+arg_0], edx
		mov	[esp+0Ch+arg_4], eax
		add	esp, 0Ch
		jmp	_ZN10QSvgWidget4loadERK7QString
; ---------------------------------------------------------------------------
		align 10h

loc_71035600:				; CODE XREF: _ZN10QSvgWidget18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv+18j
		cmp	eax, 1
		jz	short loc_71035610

loc_71035605:				; CODE XREF: _ZN10QSvgWidget18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv+14j
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71035610:				; CODE XREF: _ZN10QSvgWidget18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv+33j
		mov	eax, [ecx+4]
		mov	[esp+0Ch+arg_0], edx
		mov	[esp+0Ch+arg_4], eax
		add	esp, 0Ch
		jmp	_ZN10QSvgWidget4loadERK10QByteArray
_ZN10QSvgWidget18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry   2. _ZN10QSvgWidget11qt_metacallEN11QMetaObject4CallEiPPv

; =============== S U B	R O U T	I N E =======================================


		public _ZN10QSvgWidget11qt_metacallEN11QMetaObject4CallEiPPv
_ZN10QSvgWidget11qt_metacallEN11QMetaObject4CallEiPPv proc near
					; DATA XREF: .rdata:7105D4D0o

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 2Ch
		mov	[esp+2Ch+var_C], ebx
		mov	eax, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_8], esi
		mov	ebx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_4], edi
		mov	esi, [esp+2Ch+arg_0]
		mov	edi, [esp+2Ch+arg_C]
		mov	[esp+2Ch+var_24], eax
		mov	[esp+2Ch+var_28], ebx
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_20], edi
		call	ds:_ZN7QWidget11qt_metacallEN11QMetaObject4CallEiPPv
		test	eax, eax
		js	short loc_71035675
		test	ebx, ebx
		jnz	short loc_71035675
		cmp	eax, 1
		nop
		jle	short loc_71035685

loc_71035672:				; CODE XREF: _ZN10QSvgWidget11qt_metacallEN11QMetaObject4CallEiPPv+75j
		sub	eax, 2

loc_71035675:				; CODE XREF: _ZN10QSvgWidget11qt_metacallEN11QMetaObject4CallEiPPv+36j
					; _ZN10QSvgWidget11qt_metacallEN11QMetaObject4CallEiPPv+3Aj
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_71035685:				; CODE XREF: _ZN10QSvgWidget11qt_metacallEN11QMetaObject4CallEiPPv+40j
		mov	[esp+2Ch+var_24], eax
		mov	[esp+2Ch+var_10], eax
		mov	[esp+2Ch+var_20], edi
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], esi
		call	_ZN10QSvgWidget18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv
		mov	eax, [esp+2Ch+var_10]
		jmp	short loc_71035672
_ZN10QSvgWidget11qt_metacallEN11QMetaObject4CallEiPPv endp

; ---------------------------------------------------------------------------
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZNK14QWidgetPrivate17hasHeightForWidthEv]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN13QGraphicsItem7advanceEi]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZNK13QGraphicsItem5shapeEv]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZNK13QGraphicsItem8containsERK7QPointF]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZNK13QGraphicsItem16collidesWithItemEPKS_N2Qt17ItemSelectionModeE]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZNK13QGraphicsItem16collidesWithPathERK12QPainterPathN2Qt17ItemSelectionModeE]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZNK13QGraphicsItem12isObscuredByEPKS_]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZNK13QGraphicsItem10opaqueAreaEv]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN13QGraphicsItem16sceneEventFilterEPS_P6QEvent]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN13QGraphicsItem10sceneEventEP6QEvent]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN13QGraphicsItem16contextMenuEventEP30QGraphicsSceneContextMenuEvent]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN13QGraphicsItem14dragEnterEventEP27QGraphicsSceneDragDropEvent]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN13QGraphicsItem14dragLeaveEventEP27QGraphicsSceneDragDropEvent]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN13QGraphicsItem13dragMoveEventEP27QGraphicsSceneDragDropEvent]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN13QGraphicsItem9dropEventEP27QGraphicsSceneDragDropEvent]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN13QGraphicsItem12focusInEventEP11QFocusEvent]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN13QGraphicsItem13focusOutEventEP11QFocusEvent]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN13QGraphicsItem15hoverEnterEventEP24QGraphicsSceneHoverEvent]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN13QGraphicsItem14hoverMoveEventEP24QGraphicsSceneHoverEvent]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN13QGraphicsItem15hoverLeaveEventEP24QGraphicsSceneHoverEvent]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN13QGraphicsItem13keyPressEventEP9QKeyEvent]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN13QGraphicsItem15keyReleaseEventEP9QKeyEvent]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN13QGraphicsItem15mousePressEventEP24QGraphicsSceneMouseEvent]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN13QGraphicsItem14mouseMoveEventEP24QGraphicsSceneMouseEvent]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN13QGraphicsItem17mouseReleaseEventEP24QGraphicsSceneMouseEvent]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN13QGraphicsItem21mouseDoubleClickEventEP24QGraphicsSceneMouseEvent]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN13QGraphicsItem10wheelEventEP24QGraphicsSceneWheelEvent]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN13QGraphicsItem16inputMethodEventEP17QInputMethodEvent]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZNK13QGraphicsItem16inputMethodQueryEN2Qt16InputMethodQueryE]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN13QGraphicsItem10itemChangeENS_18GraphicsItemChangeERK8QVariant]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZNK13QGraphicsItem17supportsExtensionENS_9ExtensionE]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN13QGraphicsItem12setExtensionENS_9ExtensionERK8QVariant]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZNK13QGraphicsItem9extensionERK8QVariant]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN20QGraphicsItemPrivate30updateSceneTransformFromParentEv]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZNK20QGraphicsItemPrivate22inputMethodQueryHelperEN2Qt16InputMethodQueryE]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN20QGraphicsItemPrivate12setPosHelperERK7QPointF]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZNK20QGraphicsItemPrivate13isProxyWidgetEv]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN20QGraphicsItemPrivate18subFocusItemChangeEv]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN20QGraphicsItemPrivate20focusScopeItemChangeEb]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN20QGraphicsItemPrivate18siblingOrderChangeEv]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZNK20QGraphicsItemPrivate5widthEv]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN20QGraphicsItemPrivate8setWidthEd]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN20QGraphicsItemPrivate10resetWidthEv]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZNK20QGraphicsItemPrivate6heightEv]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN20QGraphicsItemPrivate9setHeightEd]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN20QGraphicsItemPrivate11resetHeightEv]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN12QPaintEngine9drawRectsEPK5QRecti]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN12QPaintEngine9drawRectsEPK6QRectFi]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN12QPaintEngine9drawLinesEPK5QLinei]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN12QPaintEngine9drawLinesEPK6QLineFi]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN12QPaintEngine11drawEllipseERK6QRectF]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN12QPaintEngine11drawEllipseERK5QRect]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN12QPaintEngine10drawPointsEPK7QPointFi]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN12QPaintEngine10drawPointsEPK6QPointi]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN12QPaintEngine11drawPolygonEPK6QPointiNS_15PolygonDrawModeE]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN12QPaintEngine15drawTiledPixmapERK6QRectFRK7QPixmapRK7QPointF]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN12QPaintEngine9drawImageERK6QRectFRK6QImageS2_6QFlagsIN2Qt19ImageConversionFlagEE]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZNK12QPaintEngine5getDCEv]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZNK12QPaintEngine9releaseDCEP5HDC__]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZNK12QPaintEngine16coordinateOffsetEv]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZNK12QPaintDevice5getDCEv]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZNK12QPaintDevice9releaseDCEP5HDC__]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget5eventEP6QEvent]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZNK7QWidget7devTypeEv]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget10setVisibleEb]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZNK7QWidget15minimumSizeHintEv]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZNK7QWidget14heightForWidthEi]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZNK7QWidget5getDCEv]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZNK7QWidget9releaseDCEP5HDC__]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZNK7QWidget11paintEngineEv]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget15mousePressEventEP11QMouseEvent]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget17mouseReleaseEventEP11QMouseEvent]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget21mouseDoubleClickEventEP11QMouseEvent]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget14mouseMoveEventEP11QMouseEvent]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget10wheelEventEP11QWheelEvent]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget13keyPressEventEP9QKeyEvent]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget15keyReleaseEventEP9QKeyEvent]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget12focusInEventEP11QFocusEvent]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget13focusOutEventEP11QFocusEvent]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget10enterEventEP6QEvent]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget10leaveEventEP6QEvent]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget9moveEventEP10QMoveEvent]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget11resizeEventEP12QResizeEvent]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget10closeEventEP11QCloseEvent]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget16contextMenuEventEP17QContextMenuEvent]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget11tabletEventEP12QTabletEvent]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget11actionEventEP12QActionEvent]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget14dragEnterEventEP15QDragEnterEvent]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget13dragMoveEventEP14QDragMoveEvent]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget14dragLeaveEventEP15QDragLeaveEvent]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget9dropEventEP10QDropEvent]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget9showEventEP10QShowEvent]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget9hideEventEP10QHideEvent]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget8winEventEP6tagMSGPl]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget11changeEventEP6QEvent]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZNK7QWidget6metricEN12QPaintDevice17PaintDeviceMetricE]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget16inputMethodEventEP17QInputMethodEvent]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZNK7QWidget16inputMethodQueryEN2Qt16InputMethodQueryE]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget18focusNextPrevChildEb]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget11styleChangeER6QStyle]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget13enabledChangeEb]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget13paletteChangeERK8QPalette]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget10fontChangeERK5QFont]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget22windowActivationChangeEb]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QWidget14languageChangeEv]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZThn8_NK7QWidget7devTypeEv]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZThn8_NK7QWidget11paintEngineEv]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZThn8_NK7QWidget5getDCEv]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZThn8_NK7QWidget9releaseDCEP5HDC__]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZThn8_NK7QWidget6metricEN12QPaintDevice17PaintDeviceMetricE]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION inflateInit2_]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION inflate]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION inflateEnd]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION inflateReset]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QObject5eventEP6QEvent]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QObject11eventFilterEPS_P6QEvent]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QObject10timerEventEP11QTimerEvent]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QObject10childEventEP11QChildEvent]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QObject11customEventEP6QEvent]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QObject13connectNotifyEPKc]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _ZN7QObject16disconnectNotifyEPKc]
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71035A80	proc near		; CODE XREF: sub_71035C20+3Ap
					; sub_710360D0+1AAp ...

var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 0Ch
		cmp	edx, 3Ch	; switch 61 cases
		mov	[esp+0Ch+var_4], edi
		mov	edi, [esp+0Ch+arg_0]
		mov	[esp+0Ch+var_C], ebx
		mov	[esp+0Ch+var_8], esi
		jbe	short loc_71035AB0

loc_71035A97:				; CODE XREF: sub_71035A80:loc_71035AB0j
					; sub_71035A80+39j ...
		xor	ebx, ebx	; jumptable 71035AB0 default case

loc_71035A99:				; CODE XREF: sub_71035A80+54j
					; sub_71035A80+5Ej
		mov	eax, ebx
		mov	esi, [esp+0Ch+var_8]
		mov	ebx, [esp+0Ch+var_C]
		mov	edi, [esp+0Ch+var_4]
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71035AB0:				; CODE XREF: sub_71035A80+15j
		jmp	ds:off_7105B6A0[edx*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_71035AB7:				; CODE XREF: sub_71035A80:loc_71035AB0j
					; DATA XREF: .rdata:off_7105B6A0o
		test	edi, edi	; jumptable 71035AB0 case 38
		jz	short loc_71035A97 ; jumptable 71035AB0	default	case

loc_71035ABB:				; CODE XREF: sub_71035A80:loc_71035AB0j
					; DATA XREF: .rdata:off_7105B6A0o
		mov	esi, [eax+14h]	; jumptable 71035AB0 cases 23-28,37,41,42
		cmp	esi, [eax+18h]
		jge	short loc_71035A97 ; jumptable 71035AB0	default	case

loc_71035AC3:				; CODE XREF: sub_71035A80+72j
		lea	ebx, [esi+esi*2]
		add	esi, 1
		shl	ebx, 2
		add	ebx, [eax+10h]
		mov	[eax+14h], esi
		test	ebx, ebx
		jz	short loc_71035A99
		mov	[ebx], edx
		mov	[ebx+4], ecx
		mov	[ebx+8], edi
		jmp	short loc_71035A99
; ---------------------------------------------------------------------------

loc_71035AE0:				; CODE XREF: sub_71035A80:loc_71035AB0j
					; DATA XREF: .rdata:off_7105B6A0o
		test	edi, edi	; jumptable 71035AB0 cases 1-4,11,29,39,46-53,55
		jz	short loc_71035A97 ; jumptable 71035AB0	default	case

loc_71035AE4:				; CODE XREF: sub_71035A80:loc_71035AB0j
					; DATA XREF: .rdata:off_7105B6A0o
		test	ecx, ecx	; jumptable 71035AB0 cases 9,10,12-21,30-34,36,45,54,57-60
		jz	short loc_71035A97 ; jumptable 71035AB0	default	case
		mov	esi, [eax+14h]
		cmp	esi, [eax+18h]
		xchg	ax, ax
		jge	short loc_71035A97 ; jumptable 71035AB0	default	case
		jmp	short loc_71035AC3
sub_71035A80	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71035B00	proc near		; CODE XREF: sub_71036000+6Fp
					; sub_71036000+B9p ...

var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 8
		mov	[esp+8+var_8], ebx
		mov	[esp+8+var_4], esi
		mov	esi, [eax+14h]
		cmp	esi, [eax+18h]
		jge	short loc_71035B25
		lea	ebx, [esi+esi*2]
		add	esi, 1
		shl	ebx, 2
		add	ebx, [eax+10h]
		mov	[eax+14h], esi
		test	ebx, ebx
		jnz	short loc_71035B34

loc_71035B25:				; CODE XREF: sub_71035B00+10j
					; sub_71035B00+36j ...
		xor	ebx, ebx
		mov	esi, [esp+8+var_4]
		mov	eax, ebx
		mov	ebx, [esp+8+var_8]
		add	esp, 8
		retn
; ---------------------------------------------------------------------------

loc_71035B34:				; CODE XREF: sub_71035B00+23j
		test	edx, edx
		jz	short loc_71035B25
		test	ecx, ecx
		jz	short loc_71035B25
		mov	dword ptr [ebx], 0
		mov	eax, ebx
		mov	[ebx+4], edx
		mov	[ebx+8], ecx
		mov	ebx, [esp+8+var_8]
		mov	esi, [esp+8+var_4]
		add	esp, 8
		retn
sub_71035B00	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71035B60	proc near		; CODE XREF: sub_71035BC0+2Ap
					; sub_71035BC0+3Fp ...
		push	edi
		xor	edi, edi
		push	esi
		mov	esi, eax
		push	ebx
		mov	eax, [eax+0Ch]
		movzx	ecx, byte ptr [eax]
		cmp	cl, 6Eh
		jz	short loc_71035BA5

loc_71035B72:				; CODE XREF: sub_71035B60+53j
		lea	eax, [ecx-30h]
		cmp	al, 9
		ja	short loc_71035BB5
		mov	edx, [esi+0Ch]
		xor	eax, eax
		xchg	ax, ax

loc_71035B80:				; CODE XREF: sub_71035B60+39j
		add	edx, 1
		movsx	ecx, cl
		lea	eax, [eax+eax*4]
		lea	eax, [ecx+eax*2-30h]
		mov	[esi+0Ch], edx
		movzx	ecx, byte ptr [edx]
		lea	ebx, [ecx-30h]
		cmp	bl, 9
		jbe	short loc_71035B80

loc_71035B9B:				; CODE XREF: sub_71035B60+57j
		test	edi, edi
		jz	short loc_71035BA1
		neg	eax

loc_71035BA1:				; CODE XREF: sub_71035B60+3Dj
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_71035BA5:				; CODE XREF: sub_71035B60+10j
		lea	edx, [eax+1]
		mov	di, 1
		mov	[esi+0Ch], edx
		movzx	ecx, byte ptr [eax+1]
		jmp	short loc_71035B72
; ---------------------------------------------------------------------------

loc_71035BB5:				; CODE XREF: sub_71035B60+17j
		xor	eax, eax
		jmp	short loc_71035B9B
sub_71035B60	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71035BC0	proc near		; CODE XREF: sub_710374B0+1D7p
					; sub_710374B0+212p ...
		test	edx, edx
		push	ebx
		mov	ebx, eax
		jnz	short loc_71035BDA
		mov	eax, [eax+0Ch]
		movzx	edx, byte ptr [eax]
		test	dl, dl
		jz	short loc_71035BE4
		add	eax, 1
		movsx	edx, dl
		mov	[ebx+0Ch], eax

loc_71035BDA:				; CODE XREF: sub_71035BC0+5j
		cmp	edx, 68h
		jz	short loc_71035BFD
		cmp	edx, 76h
		jz	short loc_71035BE8

loc_71035BE4:				; CODE XREF: sub_71035BC0+Fj
					; sub_71035BC0+35j ...
		xor	eax, eax
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_71035BE8:				; CODE XREF: sub_71035BC0+22j
		mov	eax, ebx
		call	sub_71035B60
		mov	eax, [ebx+0Ch]
		cmp	byte ptr [eax],	5Fh
		jnz	short loc_71035BE4
		add	eax, 1
		mov	[ebx+0Ch], eax

loc_71035BFD:				; CODE XREF: sub_71035BC0+1Dj
		mov	eax, ebx
		call	sub_71035B60
		mov	eax, [ebx+0Ch]
		cmp	byte ptr [eax],	5Fh
		jnz	short loc_71035BE4
		add	eax, 1
		mov	[ebx+0Ch], eax
		mov	eax, 1
		pop	ebx
		retn
sub_71035BC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71035C20	proc near		; CODE XREF: sub_71036410+5Ap
					; sub_71036410+31Fp ...

var_10		= dword	ptr -10h

		push	edi
		mov	edi, ecx
		push	esi
		mov	esi, edx
		push	ebx
		mov	ebx, eax
		sub	esp, 4
		mov	eax, [eax+0Ch]
		movzx	eax, byte ptr [eax]
		jmp	short loc_71035C6E
; ---------------------------------------------------------------------------

loc_71035C34:				; CODE XREF: sub_71035C20+58j
		test	dl, dl
		jnz	short loc_71035C7A
		cmp	al, 4Bh
		jnz	short loc_71035C95
		add	dword ptr [ebx+0Ch], 1

loc_71035C40:				; CODE XREF: sub_71035C20+80j
		cmp	edi, 1
		sbb	edx, edx
		add	dword ptr [ebx+30h], 6
		and	edx, 0FFFFFFFDh
		add	edx, 1Ch

loc_71035C4F:				; CODE XREF: sub_71035C20+71j
					; sub_71035C20+91j
		xor	ecx, ecx
		mov	eax, ebx
		mov	[esp+10h+var_10], 0
		call	sub_71035A80
		test	eax, eax
		mov	[esi], eax
		jz	short loc_71035C93
		lea	esi, [eax+4]
		mov	eax, [ebx+0Ch]
		movzx	eax, byte ptr [eax]

loc_71035C6E:				; CODE XREF: sub_71035C20+12j
		cmp	al, 72h
		setz	dl
		cmp	al, 56h
		setz	cl
		jnz	short loc_71035C34

loc_71035C7A:				; CODE XREF: sub_71035C20+16j
		add	dword ptr [ebx+0Ch], 1
		test	dl, dl
		jz	short loc_71035C9E
		cmp	edi, 1
		sbb	edx, edx
		and	edx, 0FFFFFFFDh
		add	edx, 1Ah
		add	dword ptr [ebx+30h], 9
		jmp	short loc_71035C4F
; ---------------------------------------------------------------------------

loc_71035C93:				; CODE XREF: sub_71035C20+43j
		xor	esi, esi

loc_71035C95:				; CODE XREF: sub_71035C20+1Aj
		add	esp, 4
		mov	eax, esi
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_71035C9E:				; CODE XREF: sub_71035C20+60j
		test	cl, cl
		jz	short loc_71035C40
		cmp	edi, 1
		sbb	edx, edx
		and	edx, 0FFFFFFFDh
		add	edx, 1Bh
		add	dword ptr [ebx+30h], 9
		jmp	short loc_71035C4F
sub_71035C20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71035CC0	proc near		; CODE XREF: sub_710360D0+1CBj
					; sub_71036410+219p ...
		push	ebx
		mov	ebx, eax
		mov	eax, [eax+0Ch]
		cmp	byte ptr [eax],	54h
		jz	short loc_71035CD0

loc_71035CCB:				; CODE XREF: sub_71035CC0+27j
					; sub_71035CC0+2Fj ...
		xor	eax, eax

loc_71035CCD:				; CODE XREF: sub_71035CC0+57j
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71035CD0:				; CODE XREF: sub_71035CC0+9j
		lea	edx, [eax+1]
		xor	ecx, ecx
		mov	[ebx+0Ch], edx
		cmp	byte ptr [eax+1], 5Fh
		jz	short loc_71035CF4
		mov	eax, ebx
		call	sub_71035B60
		test	eax, eax
		js	short loc_71035CCB
		mov	edx, [ebx+0Ch]
		cmp	byte ptr [edx],	5Fh
		jnz	short loc_71035CCB
		lea	ecx, [eax+1]

loc_71035CF4:				; CODE XREF: sub_71035CC0+1Cj
		add	edx, 1
		mov	[ebx+0Ch], edx
		mov	edx, [ebx+14h]
		add	dword ptr [ebx+28h], 1
		cmp	edx, [ebx+18h]
		jge	short loc_71035CCB
		lea	eax, [edx+edx*2]
		add	edx, 1
		shl	eax, 2
		add	eax, [ebx+10h]
		mov	[ebx+14h], edx
		test	eax, eax
		jz	short loc_71035CCD
		mov	dword ptr [eax], 5
		mov	[eax+4], ecx
		pop	ebx
		retn
sub_71035CC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71035D30	proc near		; CODE XREF: sub_71036410+1DFp
					; sub_710371A0+9Dp ...
		push	ebp
		push	edi
		push	esi
		push	ebx
		mov	ebx, [eax+0Ch]
		cmp	byte ptr [ebx],	53h
		jz	short loc_71035D45

loc_71035D3C:				; CODE XREF: sub_71035D30+50j
					; sub_71035D30+74j ...
		xor	edx, edx

loc_71035D3E:				; CODE XREF: sub_71035D30+161j
					; sub_71035D30+173j
		mov	eax, edx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_71035D45:				; CODE XREF: sub_71035D30+Aj
		lea	ecx, [ebx+1]
		mov	[eax+0Ch], ecx
		movzx	ecx, byte ptr [ebx+1]
		test	cl, cl
		jnz	short loc_71035DA6

loc_71035D53:				; CODE XREF: sub_71035D30+19Aj
		mov	ebx, [eax+8]
		shr	ebx, 3
		and	ebx, 1
		test	edx, edx
		jz	short loc_71035D75
		test	ebx, ebx
		jnz	short loc_71035D75
		mov	edx, [eax+0Ch]
		xor	ebx, ebx
		movzx	edx, byte ptr [edx]
		sub	edx, 43h
		cmp	dl, 1
		setbe	bl

loc_71035D75:				; CODE XREF: sub_71035D30+2Ej
					; sub_71035D30+32j
		mov	edx, offset dword_7105C5A4
		cmp	edx, offset aT	; "t"
		jbe	short loc_71035D3C
		cmp	cl, 74h
		mov	edx, offset aT	; "t"
		jnz	short loc_71035D99
		jmp	loc_71035E31
; ---------------------------------------------------------------------------

loc_71035D91:				; CODE XREF: sub_71035D30+72j
		cmp	cl, [edx]
		jz	loc_71035E31

loc_71035D99:				; CODE XREF: sub_71035D30+5Aj
		add	edx, 1Ch
		cmp	edx, offset dword_7105C5A4
		jnz	short loc_71035D91
		jmp	short loc_71035D3C
; ---------------------------------------------------------------------------

loc_71035DA6:				; CODE XREF: sub_71035D30+21j
		add	ebx, 2
		mov	[eax+0Ch], ebx
		lea	ebx, [ecx-30h]
		cmp	bl, 9
		ja	loc_71035EB5
		cmp	cl, 5Fh
		jz	short loc_71035E2D

loc_71035DBD:				; CODE XREF: sub_71035D30+194j
		lea	ebx, [ecx-30h]
		xor	edx, edx
		cmp	bl, 9
		ja	short loc_71035DF8

loc_71035DC7:				; CODE XREF: sub_71035D30+C6j
		lea	ebx, [edx+edx*8]
		movsx	ecx, cl
		lea	ebx, [ecx+ebx*4-30h]

loc_71035DD1:				; CODE XREF: sub_71035D30+DEj
		cmp	edx, ebx
		ja	loc_71035D3C
		mov	edx, [eax+0Ch]
		movzx	ecx, byte ptr [edx]
		test	cl, cl
		jz	short loc_71035DEE
		add	edx, 1
		cmp	cl, 5Fh
		mov	[eax+0Ch], edx
		jz	short loc_71035E10

loc_71035DEE:				; CODE XREF: sub_71035D30+B1j
		mov	edx, ebx
		lea	ebx, [ecx-30h]
		cmp	bl, 9
		jbe	short loc_71035DC7

loc_71035DF8:				; CODE XREF: sub_71035D30+95j
		lea	ebx, [ecx-41h]
		cmp	bl, 19h
		ja	loc_71035D3C
		lea	ebx, [edx+edx*8]
		movsx	ecx, cl
		lea	ebx, [ecx+ebx*4-37h]
		jmp	short loc_71035DD1
; ---------------------------------------------------------------------------

loc_71035E10:				; CODE XREF: sub_71035D30+BCj
		add	ebx, 1

loc_71035E13:				; CODE XREF: sub_71035D30+FFj
		cmp	ebx, [eax+20h]
		jnb	loc_71035D3C
		add	dword ptr [eax+28h], 1
		mov	eax, [eax+1Ch]
		mov	edx, [eax+ebx*4]
		pop	ebx
		pop	esi
		pop	edi
		mov	eax, edx
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_71035E2D:				; CODE XREF: sub_71035D30+8Bj
					; sub_71035D30+188j
		xor	ebx, ebx
		jmp	short loc_71035E13
; ---------------------------------------------------------------------------

loc_71035E31:				; CODE XREF: sub_71035D30+5Cj
					; sub_71035D30+63j
		mov	edi, [edx+14h]
		test	edi, edi
		jz	short loc_71035EB0
		mov	ecx, [eax+14h]
		xor	esi, esi
		cmp	ecx, [eax+18h]
		mov	ebp, [edx+18h]
		jge	short loc_71035E67
		lea	esi, [ecx+ecx*2]
		add	ecx, 1
		shl	esi, 2
		add	esi, [eax+10h]
		mov	[eax+14h], ecx
		test	esi, esi
		jz	short loc_71035E67
		mov	[esi+4], edi
		mov	[esi+8], ebp
		mov	ecx, [eax+14h]
		mov	dword ptr [esi], 16h

loc_71035E67:				; CODE XREF: sub_71035D30+113j
					; sub_71035D30+126j
		mov	[eax+2Ch], esi

loc_71035E6A:				; CODE XREF: sub_71035D30+183j
		test	ebx, ebx
		jz	short loc_71035EA8
		mov	esi, [edx+0Ch]
		mov	ebx, [edx+10h]

loc_71035E74:				; CODE XREF: sub_71035D30+17Ej
		add	[eax+30h], ebx
		cmp	ecx, [eax+18h]
		jge	loc_71035D3C
		lea	edx, [ecx+ecx*2]
		add	ecx, 1
		shl	edx, 2
		add	edx, [eax+10h]
		mov	[eax+14h], ecx
		test	edx, edx
		jz	loc_71035D3E
		mov	dword ptr [edx], 16h
		mov	[edx+4], esi
		mov	[edx+8], ebx
		jmp	loc_71035D3E
; ---------------------------------------------------------------------------

loc_71035EA8:				; CODE XREF: sub_71035D30+13Cj
		mov	esi, [edx+4]
		mov	ebx, [edx+8]
		jmp	short loc_71035E74
; ---------------------------------------------------------------------------

loc_71035EB0:				; CODE XREF: sub_71035D30+106j
		mov	ecx, [eax+14h]
		jmp	short loc_71035E6A
; ---------------------------------------------------------------------------

loc_71035EB5:				; CODE XREF: sub_71035D30+82j
		cmp	cl, 5Fh
		jz	loc_71035E2D
		lea	ebx, [ecx-41h]
		cmp	bl, 19h
		jbe	loc_71035DBD
		jmp	loc_71035D53
sub_71035D30	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71035ED0	proc near		; CODE XREF: sub_71038000+120p
					; sub_71038460+CBp ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h

		push	ebx
		mov	ebx, edx
		sub	esp, 28h
		mov	ecx, [eax+104h]
		cmp	ecx, 0FFh
		lea	edx, [ecx+1]
		jz	short loc_71035F00

loc_71035EE7:				; CODE XREF: sub_71035ED0+75j
		mov	[eax+ecx+4], bl
		mov	[eax+104h], edx
		mov	[eax+108h], bl
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71035F00:				; CODE XREF: sub_71035ED0+15j
		mov	edx, [eax+110h]
		mov	byte ptr [eax+103h], 0
		mov	[esp+2Ch+var_10], eax
		mov	[esp+2Ch+var_28], 0FFh
		mov	[esp+2Ch+var_24], edx
		lea	edx, [eax+4]
		mov	[esp+2Ch+var_2C], edx
		call	dword ptr [eax+10Ch]
		mov	eax, [esp+2Ch+var_10]
		mov	edx, 1
		xor	ecx, ecx
		mov	dword ptr [eax+104h], 0
		add	dword ptr [eax+124h], 1
		jmp	short loc_71035EE7
sub_71035ED0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71035F50	proc near		; CODE XREF: sub_71035F50+17p
					; sub_71038460+FDp
		push	esi
		mov	esi, eax
		push	ebx
		mov	ebx, edx
		sub	esp, 4
		test	edx, edx
		jz	short loc_71035F77 ; jumptable 71035F82	cases 0,6,22,35,43,56,60

loc_71035F5D:				; CODE XREF: sub_71035F50+25j
		cmp	dword ptr [ebx], 3Ch ; switch 61 cases
		jbe	short loc_71035F80

loc_71035F62:				; CODE XREF: sub_71035F50+32j
					; DATA XREF: .rdata:off_7105B794o
		mov	edx, [ebx+4]	; jumptable 71035F82 default case
		mov	eax, esi
		call	sub_71035F50
		test	eax, eax
		jnz	short loc_71035F79

loc_71035F70:				; CODE XREF: sub_71035F50+32j
					; DATA XREF: .rdata:off_7105B794o
		mov	ebx, [ebx+8]	; jumptable 71035F82 cases 7,8,44
		test	ebx, ebx
		jnz	short loc_71035F5D

loc_71035F77:				; CODE XREF: sub_71035F50+Bj
					; sub_71035F50+32j ...
		xor	eax, eax	; jumptable 71035F82 cases 0,6,22,35,43,56,60

loc_71035F79:				; CODE XREF: sub_71035F50+1Ej
					; sub_71035F50+87j ...
		add	esp, 4
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71035F80:				; CODE XREF: sub_71035F50+10j
		mov	eax, [ebx]
		jmp	ds:off_7105B794[eax*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_71035F90:				; CODE XREF: sub_71035F50+32j
					; DATA XREF: .rdata:off_7105B794o
		mov	eax, [esi+114h]	; jumptable 71035F82 case 5
		test	eax, eax
		jz	short loc_71035FE2
		mov	eax, [eax+4]
		mov	edx, [ebx+4]
		mov	eax, [eax+8]
		test	eax, eax
		jnz	short loc_71035FBE
		jmp	short loc_71035F77 ; jumptable 71035F82	cases 0,6,22,35,43,56,60
; ---------------------------------------------------------------------------
		align 10h

loc_71035FB0:				; CODE XREF: sub_71035F50+71j
		test	edx, edx
		jle	short loc_71035FC5
		mov	eax, [eax+8]
		sub	edx, 1
		test	eax, eax
		jz	short loc_71035F77 ; jumptable 71035F82	cases 0,6,22,35,43,56,60

loc_71035FBE:				; CODE XREF: sub_71035F50+55j
		cmp	dword ptr [eax], 2Ah
		jz	short loc_71035FB0
		jmp	short loc_71035F77 ; jumptable 71035F82	cases 0,6,22,35,43,56,60
; ---------------------------------------------------------------------------

loc_71035FC5:				; CODE XREF: sub_71035F50+62j
		test	eax, eax
		jz	short loc_71035F77 ; jumptable 71035F82	cases 0,6,22,35,43,56,60
		test	edx, edx
		nop
		lea	esi, [esi+0]
		jnz	short loc_71035F77 ; jumptable 71035F82	cases 0,6,22,35,43,56,60
		mov	eax, [eax+4]
		test	eax, eax
		jz	short loc_71035F79
		cmp	dword ptr [eax], 2Ah
		jnz	short loc_71035F77 ; jumptable 71035F82	cases 0,6,22,35,43,56,60
		xchg	ax, ax
		jmp	short loc_71035F79
; ---------------------------------------------------------------------------

loc_71035FE2:				; CODE XREF: sub_71035F50+48j
		mov	dword ptr [esi+11Ch], 1
		lea	esi, [esi+0]
		jmp	short loc_71035F79
sub_71035F50	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71036000	proc near		; CODE XREF: sub_71036410+278p
					; sub_71036410+2E0p ...

var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 10h
		mov	[esp+10h+var_10], ebx
		mov	ebx, eax
		mov	[esp+10h+var_C], esi
		mov	[esp+10h+var_8], edi
		mov	[esp+10h+var_4], ebp
		call	sub_71035B60
		xor	ecx, ecx
		test	eax, eax
		jle	short loc_71036079
		mov	ebp, [ebx+0Ch]
		mov	esi, [ebx+4]
		sub	esi, ebp
		cmp	eax, esi
		jg	short loc_71036076
		test	byte ptr [ebx+8], 4
		lea	ecx, [ebp+eax+0]
		mov	[ebx+0Ch], ecx
		jz	short loc_7103603D
		cmp	byte ptr [ecx],	24h
		jz	short loc_71036090

loc_7103603D:				; CODE XREF: sub_71036000+36j
					; sub_71036000+96j
		cmp	eax, 9
		jle	short loc_71036069
		mov	edi, offset a_global_ ;	"_GLOBAL_"
		mov	ecx, 8
		mov	esi, ebp
		repe cmpsb
		jnz	short loc_71036069
		movzx	ecx, byte ptr [ebp+8]
		lea	esi, [ebp+8]
		cmp	cl, 5Fh
		jz	short loc_71036063
		cmp	cl, 2Eh
		jnz	short loc_71036098

loc_71036063:				; CODE XREF: sub_71036000+5Cj
					; sub_71036000+A0j
		cmp	byte ptr [esi+1], 4Eh
		jz	short loc_710360A2

loc_71036069:				; CODE XREF: sub_71036000+40j
					; sub_71036000+50j ...
		mov	ecx, eax
		mov	edx, ebp
		mov	eax, ebx
		call	sub_71035B00
		mov	ecx, eax

loc_71036076:				; CODE XREF: sub_71036000+29j
					; sub_71036000+C0j
		mov	[ebx+2Ch], ecx

loc_71036079:				; CODE XREF: sub_71036000+1Dj
		mov	eax, ecx
		mov	ebx, [esp+10h+var_10]
		mov	esi, [esp+10h+var_C]
		mov	edi, [esp+10h+var_8]
		mov	ebp, [esp+10h+var_4]
		add	esp, 10h
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71036090:				; CODE XREF: sub_71036000+3Bj
		add	ecx, 1
		mov	[ebx+0Ch], ecx
		jmp	short loc_7103603D
; ---------------------------------------------------------------------------

loc_71036098:				; CODE XREF: sub_71036000+61j
		cmp	cl, 24h
		jnz	short loc_71036069
		lea	esi, [esi+0]
		jmp	short loc_71036063
; ---------------------------------------------------------------------------

loc_710360A2:				; CODE XREF: sub_71036000+67j
		mov	edx, [ebx+30h]
		mov	ecx, 15h
		add	edx, 16h
		sub	edx, eax
		mov	eax, ebx
		mov	[ebx+30h], edx
		mov	edx, offset aAnonymousNames ; "(anonymous namespace)"
		call	sub_71035B00
		mov	ecx, eax
		jmp	short loc_71036076
sub_71036000	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710360D0	proc near		; CODE XREF: sub_710360D0+148p
					; sub_710360D0+220p ...

var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 3Ch
		mov	[esp+3Ch+var_10], ebx
		mov	ebx, eax
		mov	[esp+3Ch+var_C], esi
		mov	[esp+3Ch+var_8], edi
		mov	[esp+3Ch+var_4], ebp
		mov	edx, [eax+0Ch]
		movzx	eax, byte ptr [edx]
		cmp	al, 4Ch
		jz	loc_71036227
		cmp	al, 54h
		jz	loc_71036286
		cmp	al, 73h
		jz	loc_710361A6
		cmp	al, 66h
		jz	short loc_71036141

loc_71036107:				; CODE XREF: sub_710360D0+75j
		sub	eax, 30h
		cmp	al, 9
		ja	loc_710361BA
		mov	eax, ebx
		call	sub_71036DB0
		test	eax, eax
		mov	esi, eax
		jz	short loc_7103612B
		mov	eax, [ebx+0Ch]
		cmp	byte ptr [eax],	49h
		jz	loc_71036311

loc_7103612B:				; CODE XREF: sub_710360D0+4Dj
					; sub_710360D0+C9j ...
		mov	eax, esi
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_71036141:				; CODE XREF: sub_710360D0+35j
		cmp	byte ptr [edx+1], 70h
		jnz	short loc_71036107
		lea	ecx, [edx+2]
		mov	eax, 1
		mov	[ebx+0Ch], ecx
		cmp	byte ptr [edx+2], 5Fh
		jz	short loc_71036176
		mov	eax, ebx
		call	sub_71035B60
		test	eax, eax
		js	loc_71036220
		mov	ecx, [ebx+0Ch]
		cmp	byte ptr [ecx],	5Fh
		jnz	loc_71036220
		add	eax, 2

loc_71036176:				; CODE XREF: sub_710360D0+86j
		mov	edx, [ebx+14h]
		add	ecx, 1
		cmp	edx, [ebx+18h]
		mov	[ebx+0Ch], ecx
		jge	loc_71036220
		lea	esi, [edx+edx*2]
		add	edx, 1
		shl	esi, 2
		add	esi, [ebx+10h]
		mov	[ebx+14h], edx
		test	esi, esi
		jz	short loc_7103612B
		mov	dword ptr [esi], 6
		mov	[esi+4], eax
		jmp	short loc_7103612B
; ---------------------------------------------------------------------------

loc_710361A6:				; CODE XREF: sub_710360D0+2Dj
		movzx	eax, byte ptr [edx+1]
		cmp	al, 72h
		jz	loc_710362A0
		cmp	al, 70h
		jz	loc_710362E8

loc_710361BA:				; CODE XREF: sub_710360D0+3Cj
		mov	eax, ebx
		call	sub_71036C30
		test	eax, eax
		mov	ebp, eax
		jz	short loc_71036220
		mov	eax, [eax]
		cmp	eax, 2Bh
		jz	short loc_71036241
		cmp	eax, 2Ch
		jz	loc_710362E0
		cmp	eax, 2Dh
		jz	short loc_71036209
		cmp	eax, 2Bh
		nop
		jnz	short loc_71036220
		mov	eax, [ebp+4]

loc_710361E5:				; CODE XREF: sub_710360D0+191j
		mov	edx, [eax+0Ch]
		mov	eax, 2Bh

loc_710361ED:				; CODE XREF: sub_710360D0+213j
		cmp	edx, 2
		jz	loc_71036383
		cmp	edx, 3
		jz	loc_71036330
		cmp	edx, 1
		jnz	short loc_71036220
		cmp	eax, 2Dh
		jnz	short loc_71036216

loc_71036209:				; CODE XREF: sub_710360D0+10Aj
		mov	eax, [ebx+0Ch]
		cmp	byte ptr [eax],	5Fh
		nop
		jz	loc_710363FC

loc_71036216:				; CODE XREF: sub_710360D0+137j
		mov	eax, ebx
		call	sub_710360D0
		jmp	short loc_7103626E
; ---------------------------------------------------------------------------
		align 10h

loc_71036220:				; CODE XREF: sub_710360D0+91j
					; sub_710360D0+9Dj ...
		xor	esi, esi
		jmp	loc_7103612B
; ---------------------------------------------------------------------------

loc_71036227:				; CODE XREF: sub_710360D0+1Dj
		mov	eax, ebx
		mov	esi, [esp+3Ch+var_C]
		mov	ebx, [esp+3Ch+var_10]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		jmp	sub_71036F70
; ---------------------------------------------------------------------------

loc_71036241:				; CODE XREF: sub_710360D0+FCj
		mov	edx, [ebp+4]
		mov	edi, offset aSt	; "st"
		mov	ecx, 3
		mov	eax, [ebx+30h]
		add	eax, [edx+8]
		sub	eax, 2
		mov	[ebx+30h], eax
		mov	eax, [ebp+4]
		mov	esi, [eax]
		repe cmpsb
		jnz	loc_710361E5
		mov	eax, ebx
		call	sub_71036410

loc_7103626E:				; CODE XREF: sub_710360D0+14Dj
					; sub_710360D0+339j
		mov	[esp+3Ch+var_3C], eax
		mov	ecx, ebp
		mov	edx, 2Eh
		mov	eax, ebx
		call	sub_71035A80
		mov	esi, eax
		jmp	loc_7103612B
; ---------------------------------------------------------------------------

loc_71036286:				; CODE XREF: sub_710360D0+25j
		mov	eax, ebx
		mov	esi, [esp+3Ch+var_C]
		mov	ebx, [esp+3Ch+var_10]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		jmp	sub_71035CC0
; ---------------------------------------------------------------------------

loc_710362A0:				; CODE XREF: sub_710360D0+DCj
		add	edx, 2
		mov	eax, ebx
		mov	[ebx+0Ch], edx
		call	sub_71036410
		mov	esi, eax
		mov	eax, ebx
		call	sub_71036DB0
		mov	edi, eax
		mov	eax, [ebx+0Ch]
		cmp	byte ptr [eax],	49h
		jz	loc_710363DC
		mov	[esp+3Ch+var_3C], edi

loc_710362C7:				; CODE XREF: sub_710360D0+327j
		mov	ecx, esi
		mov	edx, 1
		mov	eax, ebx
		call	sub_71035A80
		mov	esi, eax
		jmp	loc_7103612B
; ---------------------------------------------------------------------------
		align 10h

loc_710362E0:				; CODE XREF: sub_710360D0+101j
		mov	edx, [ebp+4]
		jmp	loc_710361ED
; ---------------------------------------------------------------------------

loc_710362E8:				; CODE XREF: sub_710360D0+E4j
		add	edx, 2
		mov	eax, ebx
		mov	[ebx+0Ch], edx
		call	sub_710360D0
		mov	edx, 3Ch
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_71035A80
		mov	esi, eax
		jmp	loc_7103612B
; ---------------------------------------------------------------------------

loc_71036311:				; CODE XREF: sub_710360D0+55j
		mov	eax, ebx
		call	sub_710370A0
		mov	ecx, esi
		mov	edx, 4
		mov	[esp+3Ch+var_3C], eax
		mov	eax, ebx
		call	sub_71035A80
		mov	esi, eax
		jmp	loc_7103612B
; ---------------------------------------------------------------------------

loc_71036330:				; CODE XREF: sub_710360D0+129j
		mov	eax, ebx
		call	sub_710360D0
		mov	esi, eax
		mov	eax, ebx
		call	sub_710360D0
		mov	edi, eax
		mov	eax, ebx
		call	sub_710360D0
		mov	ecx, edi
		mov	edx, 33h
		mov	[esp+3Ch+var_3C], eax
		mov	eax, ebx
		call	sub_71035A80
		mov	ecx, esi
		mov	edx, 32h
		mov	[esp+3Ch+var_3C], eax
		mov	eax, ebx
		call	sub_71035A80
		mov	ecx, ebp
		mov	edx, 31h
		mov	[esp+3Ch+var_3C], eax
		mov	eax, ebx
		call	sub_71035A80
		mov	esi, eax
		jmp	loc_7103612B
; ---------------------------------------------------------------------------

loc_71036383:				; CODE XREF: sub_710360D0+120j
		mov	eax, ebx
		mov	edi, offset aCl	; "cl"
		call	sub_710360D0
		mov	ecx, 3
		mov	[esp+3Ch+var_20], eax
		mov	eax, [ebp+4]
		mov	esi, [eax]
		repe cmpsb
		jnz	short loc_710363D3
		mov	eax, ebx
		call	sub_71037A10

loc_710363A8:				; CODE XREF: sub_710360D0+30Aj
		mov	ecx, [esp+3Ch+var_20]
		mov	edx, 30h
		mov	[esp+3Ch+var_3C], eax
		mov	eax, ebx
		call	sub_71035A80
		mov	ecx, ebp
		mov	edx, 2Fh
		mov	[esp+3Ch+var_3C], eax
		mov	eax, ebx
		call	sub_71035A80
		mov	esi, eax
		jmp	loc_7103612B
; ---------------------------------------------------------------------------

loc_710363D3:				; CODE XREF: sub_710360D0+2CFj
		mov	eax, ebx
		call	sub_710360D0
		jmp	short loc_710363A8
; ---------------------------------------------------------------------------

loc_710363DC:				; CODE XREF: sub_710360D0+1EEj
		mov	eax, ebx
		call	sub_710370A0
		mov	ecx, edi
		mov	edx, 4
		mov	[esp+3Ch+var_3C], eax
		mov	eax, ebx
		call	sub_71035A80
		mov	[esp+3Ch+var_3C], eax
		jmp	loc_710362C7
; ---------------------------------------------------------------------------

loc_710363FC:				; CODE XREF: sub_710360D0+140j
		add	eax, 1
		mov	[ebx+0Ch], eax
		mov	eax, ebx
		call	sub_71037A10
		jmp	loc_7103626E
sub_710360D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71036410	proc near		; CODE XREF: sub_710360D0+199p
					; sub_710360D0+1D8p ...

var_3C		= dword	ptr -3Ch
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 3Ch
		mov	[esp+3Ch+var_10], ebx
		mov	ebx, eax
		mov	[esp+3Ch+var_C], esi
		mov	[esp+3Ch+var_8], edi
		mov	[esp+3Ch+var_4], ebp
		mov	ecx, [eax+0Ch]
		movzx	eax, byte ptr [ecx]
		cmp	al, 56h
		jz	short loc_71036462
		cmp	al, 72h
		jz	short loc_71036462
		cmp	al, 4Bh
		jz	short loc_71036462
		lea	edx, [eax-30h]
		cmp	dl, 4Ah		; switch 75 cases
		lea	esi, [esi+0]
		jbe	short loc_71036458

loc_71036442:				; CODE XREF: sub_71036410+4Bj
					; sub_71036410+63j ...
		xor	eax, eax	; jumptable 7103645B default case

loc_71036444:				; CODE XREF: sub_71036410+96j
					; sub_71036410+A7j ...
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_71036458:				; CODE XREF: sub_71036410+30j
		movzx	edx, dl
		jmp	ds:off_7105B8B0[edx*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_71036462:				; CODE XREF: sub_71036410+1Dj
					; sub_71036410+21j ...
		xor	ecx, ecx
		mov	eax, ebx
		lea	edx, [esp+3Ch+var_20]
		call	sub_71035C20
		test	eax, eax
		mov	esi, eax
		jz	short loc_71036442 ; jumptable 7103645B	default	case
		mov	eax, ebx
		call	sub_71036410
		test	eax, eax
		mov	[esi], eax
		jz	short loc_71036442 ; jumptable 7103645B	default	case
		mov	eax, [esp+3Ch+var_20]
		test	eax, eax
		jz	short loc_71036442 ; jumptable 7103645B	default	case
		lea	esi, [esi+0]

loc_71036490:				; CODE XREF: sub_71036410+A5j
					; sub_71036410+6A8j
		mov	edx, [ebx+20h]
		cmp	edx, [ebx+24h]
		jge	short loc_71036442 ; jumptable 7103645B	default	case
		mov	ecx, [ebx+1Ch]
		add	dword ptr [ebx+20h], 1
		mov	[ecx+edx*4], eax
		mov	eax, [esp+3Ch+var_20]
		jmp	short loc_71036444
; ---------------------------------------------------------------------------

loc_710364A8:				; CODE XREF: sub_71036410+4Bj
					; DATA XREF: .rdata:off_7105B8B0o
		mov	eax, ebx	; jumptable 7103645B cases 0-9,30,42
		call	sub_710371A0
		mov	[esp+3Ch+var_20], eax

loc_710364B3:				; CODE XREF: sub_71036410+D6j
					; sub_71036410+12Bj ...
		test	eax, eax
		jnz	short loc_71036490
		jmp	short loc_71036444
; ---------------------------------------------------------------------------
		align 10h

loc_710364C0:				; CODE XREF: sub_71036410+4Bj
					; DATA XREF: .rdata:off_7105B8B0o
		add	ecx, 1		; jumptable 7103645B case 19
		mov	eax, ebx
		mov	[ebx+0Ch], ecx
		call	sub_71036410
		mov	edx, 21h
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_71035A80
		mov	[esp+3Ch+var_20], eax
		jmp	short loc_710364B3
; ---------------------------------------------------------------------------

loc_710364E8:				; CODE XREF: sub_71036410+4Bj
					; DATA XREF: .rdata:off_7105B8B0o
		lea	eax, [ecx+1]	; jumptable 7103645B case 20
		mov	[ebx+0Ch], eax
		movzx	eax, byte ptr [ecx+1]
		test	al, al
		jz	loc_71036442	; jumptable 7103645B default case
		sub	eax, 46h
		add	ecx, 2
		cmp	al, 2Eh		; switch 47 cases
		mov	[ebx+0Ch], ecx
		ja	loc_71036442	; jumptable 7103645B default case
		movzx	eax, al
		jmp	ds:off_7105B9DC[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_71036515:				; CODE XREF: sub_71036410+4Bj
					; DATA XREF: .rdata:off_7105B8B0o
		add	ecx, 1		; jumptable 7103645B case 23
		mov	eax, ebx
		mov	[ebx+0Ch], ecx
		call	sub_71036410
		mov	edx, 22h
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_71035A80
		mov	[esp+3Ch+var_20], eax
		jmp	loc_710364B3
; ---------------------------------------------------------------------------

loc_71036540:				; CODE XREF: sub_71036410+4Bj
					; DATA XREF: .rdata:off_7105B8B0o
		add	ecx, 1		; jumptable 7103645B case 31
		mov	eax, ebx
		mov	[ebx+0Ch], ecx
		call	sub_71036410
		mov	edx, 20h
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_71035A80
		mov	[esp+3Ch+var_20], eax
		jmp	loc_710364B3
; ---------------------------------------------------------------------------
		align 10h

loc_71036570:				; CODE XREF: sub_71036410+4Bj
					; DATA XREF: .rdata:off_7105B8B0o
		add	ecx, 1		; jumptable 7103645B case 32
		mov	eax, ebx
		mov	[ebx+0Ch], ecx
		call	sub_71036410
		mov	edx, 1Eh
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_71035A80
		mov	[esp+3Ch+var_20], eax
		jmp	loc_710364B3
; ---------------------------------------------------------------------------
		align 10h

loc_710365A0:				; CODE XREF: sub_71036410+4Bj
					; DATA XREF: .rdata:off_7105B8B0o
		add	ecx, 1		; jumptable 7103645B case 34
		mov	eax, ebx
		mov	[ebx+0Ch], ecx
		call	sub_71036410
		mov	edx, 1Fh
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_71035A80
		mov	[esp+3Ch+var_20], eax
		jmp	loc_710364B3
; ---------------------------------------------------------------------------
		align 10h

loc_710365D0:				; CODE XREF: sub_71036410+4Bj
					; DATA XREF: .rdata:off_7105B8B0o
		movzx	eax, byte ptr [ecx+1] ;	jumptable 7103645B case	35
		lea	edx, [eax-30h]
		cmp	dl, 9
		jbe	short loc_710365EB
		cmp	al, 5Fh
		jz	short loc_710365EB
		sub	eax, 41h
		cmp	al, 19h
		ja	loc_71036AA2

loc_710365EB:				; CODE XREF: sub_71036410+1CAj
					; sub_71036410+1CEj
		xor	edx, edx
		mov	eax, ebx
		call	sub_71035D30
		mov	edx, [ebx+0Ch]
		mov	[esp+3Ch+var_20], eax
		cmp	byte ptr [edx],	49h
		jnz	loc_71036444
		mov	eax, ebx
		call	sub_710370A0
		mov	ecx, [esp+3Ch+var_20]
		mov	edx, 4
		mov	[esp+3Ch+var_3C], eax
		mov	eax, ebx
		call	sub_71035A80
		mov	[esp+3Ch+var_20], eax
		jmp	loc_710364B3
; ---------------------------------------------------------------------------

loc_71036627:				; CODE XREF: sub_71036410+4Bj
					; DATA XREF: .rdata:off_7105B8B0o
		mov	eax, ebx	; jumptable 7103645B case 36
		call	sub_71035CC0
		mov	edx, [ebx+0Ch]
		mov	[esp+3Ch+var_20], eax
		cmp	byte ptr [edx],	49h
		jnz	loc_710364B3
		test	eax, eax
		jz	loc_71036444
		mov	edx, [ebx+20h]
		cmp	edx, [ebx+24h]
		jge	loc_71036442	; jumptable 7103645B default case
		mov	ecx, [ebx+1Ch]
		add	dword ptr [ebx+20h], 1
		mov	[ecx+edx*4], eax
		mov	eax, ebx
		call	sub_710370A0
		mov	ecx, [esp+3Ch+var_20]
		mov	edx, 4
		mov	[esp+3Ch+var_3C], eax
		mov	eax, ebx
		call	sub_71035A80

loc_71036676:				; CODE XREF: sub_71036410+29Bj
					; sub_71036410+330j ...
		mov	[esp+3Ch+var_20], eax
		jmp	loc_710364B3
; ---------------------------------------------------------------------------
		align 10h

loc_71036680:				; CODE XREF: sub_71036410+4Bj
					; DATA XREF: .rdata:off_7105B8B0o
		add	ecx, 1		; jumptable 7103645B case 37
		mov	eax, ebx
		mov	[ebx+0Ch], ecx
		call	sub_71036000
		mov	esi, eax
		mov	[esp+3Ch+var_20], eax
		mov	eax, ebx
		call	sub_71036410
		mov	edx, 1Dh
		mov	[esp+3Ch+var_3C], esi
		mov	ecx, eax
		mov	eax, ebx
		call	sub_71035A80
		jmp	short loc_71036676
; ---------------------------------------------------------------------------
		align 10h

loc_710366B0:				; CODE XREF: sub_71036410+4Bj
					; DATA XREF: .rdata:off_7105B8B0o
		movsx	eax, al		; jumptable 7103645B cases 49-58,60-63,67,68,70-74
		lea	eax, [eax+eax*4]
		lea	edx, (off_7105B8B0+9Ch)[eax*4]
		test	edx, edx
		jz	loc_71036ADD
		mov	ecx, [ebx+14h]
		cmp	ecx, [ebx+18h]
		jl	loc_71036A70
		mov	edx, large ds:4
		xor	eax, eax

loc_710366D9:				; CODE XREF: sub_71036410+680j
					; sub_71036410+6D2j ...
		mov	edx, [edx+4]
		add	[ebx+30h], edx
		add	dword ptr [ebx+0Ch], 1
		jmp	loc_71036444
; ---------------------------------------------------------------------------

loc_710366E8:				; CODE XREF: sub_71036410+4Bj
					; DATA XREF: .rdata:off_7105B8B0o
		add	ecx, 1		; jumptable 7103645B case 69
		mov	eax, ebx
		mov	[ebx+0Ch], ecx
		call	sub_71036000
		mov	edx, 24h
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_71035A80
		mov	[esp+3Ch+var_20], eax
		jmp	loc_710364B3
; ---------------------------------------------------------------------------

loc_71036713:				; CODE XREF: sub_71036410+4Bj
					; DATA XREF: .rdata:off_7105B8B0o
		add	ecx, 1		; jumptable 7103645B case 29
		mov	eax, ebx
		mov	[ebx+0Ch], ecx
		lea	esi, [esp+3Ch+var_24]
		call	sub_71036410
		mov	ecx, 1
		mov	edx, esi
		mov	edi, eax
		mov	eax, ebx
		call	sub_71035C20
		test	eax, eax
		mov	ebp, eax
		jnz	loc_710367E3

loc_7103673E:				; CODE XREF: sub_71036410+36Fj
					; sub_71036410+377j ...
		xor	eax, eax
		jmp	loc_71036676
; ---------------------------------------------------------------------------

loc_71036745:				; CODE XREF: sub_71036410+4Bj
					; DATA XREF: .rdata:off_7105B8B0o
		lea	edx, [ecx+1]	; jumptable 7103645B case 17
		xor	esi, esi
		mov	[ebx+0Ch], edx
		movzx	eax, byte ptr [ecx+1]
		cmp	al, 5Fh
		jz	short loc_71036789
		sub	eax, 30h
		cmp	al, 9
		ja	loc_71036AC5
		mov	ecx, edx

loc_71036762:				; CODE XREF: sub_71036410+360j
		add	ecx, 1
		mov	[ebx+0Ch], ecx
		movzx	eax, byte ptr [ecx]
		sub	eax, 30h
		cmp	al, 9
		jbe	short loc_71036762
		sub	ecx, edx
		mov	eax, ebx
		call	sub_71035B00
		test	eax, eax
		mov	esi, eax
		jz	short loc_7103673E

loc_71036781:				; CODE XREF: sub_71036410+6C0j
		mov	edx, [ebx+0Ch]
		cmp	byte ptr [edx],	5Fh
		jnz	short loc_7103673E

loc_71036789:				; CODE XREF: sub_71036410+343j
		add	edx, 1
		mov	eax, ebx
		mov	[ebx+0Ch], edx
		call	sub_71036410
		mov	ecx, esi
		mov	edx, 26h
		mov	[esp+3Ch+var_3C], eax
		mov	eax, ebx
		call	sub_71035A80
		jmp	loc_71036676
; ---------------------------------------------------------------------------
		align 10h

loc_710367B0:				; CODE XREF: sub_71036410+4Bj
					; DATA XREF: .rdata:off_7105B8B0o
		lea	eax, [ecx+1]	; jumptable 7103645B case 22
		mov	[ebx+0Ch], eax
		cmp	byte ptr [ecx+1], 59h
		jz	loc_71036AF7

loc_710367C0:				; CODE XREF: sub_71036410+6EDj
		mov	edx, 1
		mov	eax, ebx
		call	sub_71036B40
		mov	edx, [ebx+0Ch]
		cmp	byte ptr [edx],	45h
		jnz	loc_7103673E
		add	edx, 1
		mov	[ebx+0Ch], edx
		jmp	loc_71036676
; ---------------------------------------------------------------------------

loc_710367E3:				; CODE XREF: sub_71036410+328j
		mov	eax, ebx
		call	sub_71036410
		test	eax, eax
		mov	[ebp+0], eax
		jz	loc_7103673E
		cmp	ebp, esi
		jz	short loc_71036802
		cmp	dword ptr [eax], 25h
		jnz	loc_71036B02

loc_71036802:				; CODE XREF: sub_71036410+3E7j
					; sub_71036410+714j
		mov	eax, [esp+3Ch+var_24]
		mov	ecx, edi
		mov	edx, 27h
		mov	[esp+3Ch+var_3C], eax
		mov	eax, ebx
		call	sub_71035A80
		jmp	loc_71036676
; ---------------------------------------------------------------------------
		align 10h

loc_71036820:				; CODE XREF: sub_71036410+FEj
					; DATA XREF: .rdata:off_7105B9DCo
		mov	edx, [ebx+14h]	; jumptable 7103650E case 45
		cmp	edx, [ebx+18h]
		jge	loc_71036A95
		lea	eax, [edx+edx*2]
		add	edx, 1
		shl	eax, 2
		add	eax, [ebx+10h]
		mov	[ebx+14h], edx
		test	eax, eax
		jz	loc_71036B29
		mov	dword ptr [eax], 23h
		mov	edx, offset off_7105C338
		mov	dword ptr [eax+4], offset off_7105C338

loc_71036855:				; CODE XREF: sub_71036410+4A6j
					; sub_71036410+4DDj ...
		mov	edx, [edx+4]
		add	[ebx+30h], edx
		jmp	loc_71036444
; ---------------------------------------------------------------------------

loc_71036860:				; CODE XREF: sub_71036410+FEj
					; DATA XREF: .rdata:off_7105B9DCo
		mov	eax, ebx	; jumptable 7103650E case 42
		call	sub_71036410
		mov	edx, 3Ch
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_71035A80
		jmp	loc_71036444
; ---------------------------------------------------------------------------

loc_71036881:				; CODE XREF: sub_71036410+FEj
					; DATA XREF: .rdata:off_7105B9DCo
		mov	edx, [ebx+14h]	; jumptable 7103650E case 35
		cmp	edx, [ebx+18h]
		jge	loc_71036A95
		lea	eax, [edx+edx*2]
		add	edx, 1
		shl	eax, 2
		add	eax, [ebx+10h]
		mov	[ebx+14h], edx
		test	eax, eax
		jz	loc_71036B29
		mov	dword ptr [eax], 23h
		mov	edx, offset off_7105C34C
		mov	dword ptr [eax+4], offset off_7105C34C
		jmp	short loc_71036855
; ---------------------------------------------------------------------------

loc_710368B8:				; CODE XREF: sub_71036410+FEj
					; DATA XREF: .rdata:off_7105B9DCo
		mov	edx, [ebx+14h]	; jumptable 7103650E case 31
		cmp	edx, [ebx+18h]
		jge	loc_71036A95
		lea	eax, [edx+edx*2]
		add	edx, 1
		shl	eax, 2
		add	eax, [ebx+10h]
		mov	[ebx+14h], edx
		test	eax, eax
		jz	loc_71036B29
		mov	dword ptr [eax], 23h
		mov	edx, offset off_7105C310
		mov	dword ptr [eax+4], offset off_7105C310
		jmp	loc_71036855
; ---------------------------------------------------------------------------

loc_710368F2:				; CODE XREF: sub_71036410+FEj
					; DATA XREF: .rdata:off_7105B9DCo
		mov	edx, [ebx+14h]	; jumptable 7103650E case 30
		cmp	edx, [ebx+18h]
		jge	loc_71036A95
		lea	eax, [edx+edx*2]
		add	edx, 1
		shl	eax, 2
		add	eax, [ebx+10h]
		mov	[ebx+14h], edx
		test	eax, eax
		jz	loc_71036B29
		mov	dword ptr [eax], 23h
		mov	edx, offset off_7105C2FC
		mov	dword ptr [eax+4], offset off_7105C2FC
		jmp	loc_71036855
; ---------------------------------------------------------------------------

loc_7103692C:				; CODE XREF: sub_71036410+FEj
					; DATA XREF: .rdata:off_7105B9DCo
		mov	eax, ebx	; jumptable 7103650E cases 14,46
		call	sub_710360D0
		mov	edx, 39h
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_71035A80
		test	eax, eax
		mov	[esp+3Ch+var_20], eax
		jz	loc_71036444
		mov	ecx, [ebx+0Ch]
		movzx	edx, byte ptr [ecx]
		test	dl, dl
		jz	loc_71036442	; jumptable 7103645B default case
		add	ecx, 1
		cmp	dl, 45h
		mov	[ebx+0Ch], ecx
		jnz	loc_71036442	; jumptable 7103645B default case
		jmp	loc_71036444
; ---------------------------------------------------------------------------

loc_71036976:				; CODE XREF: sub_71036410+FEj
					; DATA XREF: .rdata:off_7105B9DCo
		mov	eax, [ebx+14h]	; jumptable 7103650E case 0
		xor	esi, esi
		cmp	eax, [ebx+18h]
		jge	short loc_7103698F
		lea	esi, [eax+eax*2]
		add	eax, 1
		shl	esi, 2
		add	esi, [ebx+10h]
		mov	[ebx+14h], eax

loc_7103698F:				; CODE XREF: sub_71036410+56Ej
		mov	eax, [ebx+0Ch]
		mov	[esp+3Ch+var_20], esi
		mov	dword ptr [esi], 28h
		movzx	eax, byte ptr [eax]
		sub	eax, 30h
		cmp	al, 9
		setbe	al
		movzx	eax, al
		test	ax, ax
		mov	[esi+8], ax
		jnz	loc_71036AE7

loc_710369B7:				; CODE XREF: sub_71036410+6E2j
		mov	eax, ebx
		call	sub_71036410
		mov	[esi+4], eax
		mov	eax, [esp+3Ch+var_20]
		mov	eax, [eax+4]
		test	eax, eax
		jz	loc_71036442	; jumptable 7103645B default case
		mov	eax, ebx
		call	sub_71035B60
		mov	ecx, [ebx+0Ch]
		xor	edx, edx
		movzx	eax, byte ptr [ecx]
		test	al, al
		jz	short loc_710369F0
		add	ecx, 1
		xor	edx, edx
		cmp	al, 73h
		mov	[ebx+0Ch], ecx
		setz	dl

loc_710369F0:				; CODE XREF: sub_71036410+5D1j
		mov	eax, [esp+3Ch+var_20]
		mov	[eax+0Ah], dx
		jmp	loc_71036444
; ---------------------------------------------------------------------------

loc_710369FD:				; CODE XREF: sub_71036410+FEj
					; DATA XREF: .rdata:off_7105B9DCo
		mov	edx, [ebx+14h]	; jumptable 7103650E case 34
		cmp	edx, [ebx+18h]
		jge	loc_71036A95
		lea	eax, [edx+edx*2]
		add	edx, 1
		shl	eax, 2
		add	eax, [ebx+10h]
		mov	[ebx+14h], edx
		test	eax, eax
		jz	loc_71036B29
		mov	dword ptr [eax], 23h
		mov	edx, offset off_7105C324
		mov	dword ptr [eax+4], offset off_7105C324
		jmp	loc_71036855
; ---------------------------------------------------------------------------

loc_71036A37:				; CODE XREF: sub_71036410+FEj
					; DATA XREF: .rdata:off_7105B9DCo
		mov	edx, [ebx+14h]	; jumptable 7103650E case 32
		cmp	edx, [ebx+18h]
		jge	short loc_71036A95
		lea	eax, [edx+edx*2]
		add	edx, 1
		shl	eax, 2
		add	eax, [ebx+10h]
		mov	[ebx+14h], edx
		test	eax, eax
		jz	loc_71036B29
		mov	dword ptr [eax], 23h
		mov	edx, offset off_7105C2E8
		mov	dword ptr [eax+4], offset off_7105C2E8
		jmp	loc_71036855
; ---------------------------------------------------------------------------
		align 10h

loc_71036A70:				; CODE XREF: sub_71036410+2BBj
		lea	eax, [ecx+ecx*2]
		add	ecx, 1
		shl	eax, 2
		add	eax, [ebx+10h]
		mov	[ebx+14h], ecx
		test	eax, eax
		jz	loc_71036B31
		mov	dword ptr [eax], 23h
		mov	[eax+4], edx
		jmp	loc_710366D9
; ---------------------------------------------------------------------------

loc_71036A95:				; CODE XREF: sub_71036410+416j
					; sub_71036410+477j ...
		mov	edx, large ds:4
		xor	eax, eax
		jmp	loc_71036855
; ---------------------------------------------------------------------------

loc_71036AA2:				; CODE XREF: sub_71036410+1D5j
		mov	eax, ebx
		call	sub_710371A0
		test	eax, eax
		jz	loc_71036444
		cmp	dword ptr [eax], 16h
		mov	[esp+3Ch+var_20], eax
		jnz	loc_71036490
		xchg	ax, ax
		jmp	loc_71036444
; ---------------------------------------------------------------------------

loc_71036AC5:				; CODE XREF: sub_71036410+34Aj
		mov	eax, ebx
		call	sub_710360D0
		test	eax, eax
		mov	esi, eax
		jnz	loc_71036781
		xor	eax, eax
		jmp	loc_71036676
; ---------------------------------------------------------------------------

loc_71036ADD:				; CODE XREF: sub_71036410+2AFj
		mov	edx, [edx+4]
		xor	eax, eax
		jmp	loc_710366D9
; ---------------------------------------------------------------------------

loc_71036AE7:				; CODE XREF: sub_71036410+5A1j
		mov	eax, ebx
		call	sub_71035B60
		mov	esi, [esp+3Ch+var_20]
		jmp	loc_710369B7
; ---------------------------------------------------------------------------

loc_71036AF7:				; CODE XREF: sub_71036410+3AAj
		add	ecx, 2
		mov	[ebx+0Ch], ecx
		jmp	loc_710367C0
; ---------------------------------------------------------------------------

loc_71036B02:				; CODE XREF: sub_71036410+3ECj
		mov	edx, [esp+3Ch+var_24]
		test	edx, edx
		jz	loc_7103673E
		mov	eax, [ebx+20h]
		cmp	eax, [ebx+24h]
		jge	loc_7103673E
		mov	ecx, [ebx+1Ch]
		add	dword ptr [ebx+20h], 1
		mov	[ecx+eax*4], edx
		jmp	loc_71036802
; ---------------------------------------------------------------------------

loc_71036B29:				; CODE XREF: sub_71036410+42Dj
					; sub_71036410+48Ej ...
		mov	edx, [eax+4]
		jmp	loc_71036855
; ---------------------------------------------------------------------------

loc_71036B31:				; CODE XREF: sub_71036410+671j
		mov	edx, [eax+4]
		jmp	loc_710366D9
sub_71036410	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71036B40	proc near		; CODE XREF: sub_71036410+3B7p
					; sub_710374B0+71p

var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h

		push	ebp
		push	edi
		push	esi
		mov	esi, edx
		push	ebx
		mov	ebx, eax
		sub	esp, 2Ch
		mov	edx, [eax+0Ch]
		cmp	byte ptr [edx],	4Ah
		jz	loc_71036BF0

loc_71036B57:				; CODE XREF: sub_71036B40+BBj
		mov	[esp+3Ch+var_20], 0
		lea	ebp, [esp+3Ch+var_20]
		xor	edi, edi
		jmp	short loc_71036B6E
; ---------------------------------------------------------------------------

loc_71036B67:				; CODE XREF: sub_71036B40+46j
		mov	edx, [ebx+0Ch]
		xor	esi, esi
		mov	edi, eax

loc_71036B6E:				; CODE XREF: sub_71036B40+25j
		movzx	eax, byte ptr [edx]
		cmp	al, 45h
		jz	short loc_71036BB1

loc_71036B75:				; CODE XREF: sub_71036B40+6Fj
		test	al, al
		jz	short loc_71036BB1
		mov	eax, ebx
		call	sub_71036410
		test	eax, eax
		jz	short loc_71036BE0
		test	esi, esi
		jnz	short loc_71036B67
		mov	ecx, eax
		mov	edx, 29h
		mov	eax, ebx
		mov	[esp+3Ch+var_3C], 0
		call	sub_71035A80
		test	eax, eax
		mov	[ebp+0], eax
		jz	short loc_71036BE0
		mov	edx, [ebx+0Ch]
		lea	ebp, [eax+8]
		movzx	eax, byte ptr [edx]
		cmp	al, 45h
		jnz	short loc_71036B75

loc_71036BB1:				; CODE XREF: sub_71036B40+33j
					; sub_71036B40+37j
		mov	eax, [esp+3Ch+var_20]
		test	eax, eax
		jz	short loc_71036BE0
		mov	edx, [eax+8]
		test	edx, edx
		jz	short loc_71036C00

loc_71036BC0:				; CODE XREF: sub_71036B40+C6j
					; sub_71036B40+CFj ...
		mov	[esp+3Ch+var_3C], eax
		mov	ecx, edi
		mov	eax, ebx
		mov	edx, 25h
		call	sub_71035A80
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71036BE0:				; CODE XREF: sub_71036B40+42j
					; sub_71036B40+62j ...
		add	esp, 2Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71036BF0:				; CODE XREF: sub_71036B40+11j
		add	edx, 1
		mov	esi, 1
		mov	[eax+0Ch], edx
		jmp	loc_71036B57
; ---------------------------------------------------------------------------

loc_71036C00:				; CODE XREF: sub_71036B40+7Ej
		mov	edx, [eax+4]
		cmp	dword ptr [edx], 23h
		jnz	short loc_71036BC0
		mov	edx, [edx+4]
		cmp	dword ptr [edx+10h], 9
		jnz	short loc_71036BC0
		mov	eax, [edx+4]
		sub	[ebx+30h], eax
		xor	eax, eax
		mov	[esp+3Ch+var_20], 0
		jmp	short loc_71036BC0
sub_71036B40	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71036C30	proc near		; CODE XREF: sub_710360D0+ECp
					; sub_71036DB0+55p

var_4C		= dword	ptr -4Ch
var_2D		= byte ptr -2Dh
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h

		push	ebp
		push	edi
		push	esi
		push	ebx
		xor	ebx, ebx
		sub	esp, 3Ch
		mov	[esp+4Ch+var_20], eax
		mov	eax, [eax+0Ch]
		movzx	ebp, byte ptr [eax]
		mov	ecx, ebp
		test	cl, cl
		jz	short loc_71036C76
		mov	ebx, [esp+4Ch+var_20]
		lea	edx, [eax+1]
		mov	[ebx+0Ch], edx
		movzx	ebx, byte ptr [eax+1]
		test	bl, bl
		jz	short loc_71036C65
		mov	esi, [esp+4Ch+var_20]
		add	eax, 2
		mov	[esi+0Ch], eax

loc_71036C65:				; CODE XREF: sub_71036C30+29j
		mov	eax, ebp
		cmp	al, 76h
		jnz	short loc_71036CE5
		lea	eax, [ebx-30h]
		cmp	al, 9
		jbe	loc_71036D20

loc_71036C76:				; CODE XREF: sub_71036C30+17j
					; sub_71036C30+B8j ...
		mov	esi, 34h
		xor	eax, eax
		mov	edi, ebx
		nop

loc_71036C80:				; CODE XREF: sub_71036C30+9Cj
		mov	edx, esi
		sub	edx, eax
		mov	ecx, edx
		shr	ecx, 1Fh
		lea	edx, [ecx+edx]
		sar	edx, 1
		add	edx, eax
		mov	ecx, edx
		shl	ecx, 4
		lea	ebx, off_7105C6E0[ecx]
		mov	ecx, ds:off_7105C6E0[ecx]
		mov	[esp+4Ch+var_24], ebx
		movzx	ebx, byte ptr [ecx]
		mov	[esp+4Ch+var_2D], bl
		mov	ebx, ebp
		cmp	bl, [esp+4Ch+var_2D]
		jnz	short loc_71036CD8
		movzx	ecx, byte ptr [ecx+1]
		mov	ebx, edi
		cmp	bl, cl
		jz	loc_71036D70
		mov	ebx, edi
		cmp	cl, bl
		jle	short loc_71036CE0

loc_71036CC8:				; CODE XREF: sub_71036C30+AEj
		mov	esi, edx

loc_71036CCA:				; CODE XREF: sub_71036C30+B3j
		cmp	eax, esi
		jnz	short loc_71036C80

loc_71036CCE:				; CODE XREF: sub_71036C30+105j
					; sub_71036C30+11Cj ...
		xor	eax, eax

loc_71036CD0:				; CODE XREF: sub_71036C30+118j
					; sub_71036C30+134j ...
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_71036CD8:				; CODE XREF: sub_71036C30+82j
		mov	ecx, ebp
		cmp	[esp+4Ch+var_2D], cl
		jg	short loc_71036CC8

loc_71036CE0:				; CODE XREF: sub_71036C30+96j
		lea	eax, [edx+1]
		jmp	short loc_71036CCA
; ---------------------------------------------------------------------------

loc_71036CE5:				; CODE XREF: sub_71036C30+39j
		cmp	bl, 76h
		jnz	short loc_71036C76
		mov	eax, ebp
		cmp	al, 63h
		xchg	ax, ax
		jnz	short loc_71036C76
		mov	eax, [esp+4Ch+var_20]
		call	sub_71036410
		mov	edx, 2Dh
		mov	[esp+4Ch+var_4C], 0
		mov	ecx, eax
		mov	eax, [esp+4Ch+var_20]
		call	sub_71035A80
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71036D20:				; CODE XREF: sub_71036C30+40j
		mov	eax, [esp+4Ch+var_20]
		call	sub_71036000
		mov	esi, [esp+4Ch+var_20]
		mov	edx, [esi+14h]
		cmp	edx, [esi+18h]
		mov	ecx, eax
		jge	short loc_71036CCE
		lea	eax, [edx+edx*2]
		add	edx, 1
		shl	eax, 2
		add	eax, [esi+10h]
		mov	[esi+14h], edx
		test	eax, eax
		jz	short loc_71036CD0
		test	ecx, ecx
		jz	loc_71036CCE
		movsx	edx, bl
		sub	edx, 30h
		mov	dword ptr [eax], 2Ch
		mov	[eax+4], edx
		mov	[eax+8], ecx
		jmp	loc_71036CD0
; ---------------------------------------------------------------------------
		align 10h

loc_71036D70:				; CODE XREF: sub_71036C30+8Cj
		mov	esi, [esp+4Ch+var_20]
		mov	edx, [esi+14h]
		cmp	edx, [esi+18h]
		jge	loc_71036CCE
		lea	eax, [edx+edx*2]
		add	edx, 1
		shl	eax, 2
		add	eax, [esi+10h]
		mov	[esi+14h], edx
		test	eax, eax
		jz	loc_71036CD0
		mov	edx, [esp+4Ch+var_24]
		mov	dword ptr [eax], 2Bh
		mov	[eax+4], edx
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_71036C30	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71036DB0	proc near		; CODE XREF: sub_710360D0+44p
					; sub_710360D0+1E1p ...
		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 4
		mov	edx, [eax+0Ch]
		movzx	eax, byte ptr [edx]
		lea	ecx, [eax-30h]
		cmp	cl, 9
		jbe	short loc_71036E24
		lea	ecx, [eax-61h]
		cmp	cl, 19h
		jbe	short loc_71036E03
		lea	ecx, [eax-43h]
		cmp	cl, 1
		ja	loc_71036E91
		mov	ecx, [ebx+2Ch]
		test	ecx, ecx
		jz	short loc_71036DEF
		mov	esi, [ecx]
		test	esi, esi
		jnz	short loc_71036E30

loc_71036DE6:				; CODE XREF: sub_71036DB0+83j
		mov	eax, [ecx+8]
		add	[ebx+30h], eax
		movzx	eax, byte ptr [edx]

loc_71036DEF:				; CODE XREF: sub_71036DB0+2Ej
		cmp	al, 43h
		jz	short loc_71036E39

loc_71036DF3:				; CODE XREF: sub_71036DB0+87j
		cmp	al, 44h
		jz	loc_71036EC0

loc_71036DFB:				; CODE XREF: sub_71036DB0+A0j
					; sub_71036DB0+B3j ...
		xor	eax, eax

loc_71036DFD:				; CODE XREF: sub_71036DB0+5Cj
					; sub_71036DB0+61j ...
		add	esp, 4
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_71036E03:				; CODE XREF: sub_71036DB0+1Bj
		mov	eax, ebx
		call	sub_71036C30
		test	eax, eax
		jz	short loc_71036DFD
		cmp	dword ptr [eax], 2Bh
		jnz	short loc_71036DFD
		mov	ecx, [eax+4]
		mov	edx, [ebx+30h]
		add	edx, [ecx+8]
		add	edx, 7
		mov	[ebx+30h], edx
		jmp	short loc_71036DFD
; ---------------------------------------------------------------------------

loc_71036E24:				; CODE XREF: sub_71036DB0+13j
		add	esp, 4
		mov	eax, ebx
		pop	ebx
		pop	esi
		jmp	sub_71036000
; ---------------------------------------------------------------------------

loc_71036E30:				; CODE XREF: sub_71036DB0+34j
		cmp	esi, 16h
		jz	short loc_71036DE6
		cmp	al, 43h
		jnz	short loc_71036DF3

loc_71036E39:				; CODE XREF: sub_71036DB0+41j
		movzx	eax, byte ptr [edx+1]
		cmp	al, 32h
		nop
		jz	loc_71036F60
		cmp	al, 33h
		jz	loc_71036F52
		cmp	al, 31h
		jnz	short loc_71036DFB
		mov	esi, 1

loc_71036E57:				; CODE XREF: sub_71036DB0+1A7j
					; sub_71036DB0+1B5j
		add	edx, 2
		mov	[ebx+0Ch], edx
		mov	edx, [ebx+14h]
		cmp	edx, [ebx+18h]
		jge	short loc_71036DFB
		lea	eax, [edx+edx*2]
		add	edx, 1
		shl	eax, 2
		add	eax, [ebx+10h]
		mov	[ebx+14h], edx
		test	eax, eax
		jz	short loc_71036DFB
		test	ecx, ecx
		jz	loc_71036DFB
		mov	dword ptr [eax], 7
		mov	[eax+4], esi
		mov	[eax+8], ecx
		jmp	loc_71036DFD
; ---------------------------------------------------------------------------

loc_71036E91:				; CODE XREF: sub_71036DB0+23j
		cmp	al, 4Ch
		jnz	loc_71036DFB
		add	edx, 1
		mov	eax, ebx
		mov	[ebx+0Ch], edx
		call	sub_71036000
		test	eax, eax
		mov	esi, eax
		jz	loc_71036DFB
		mov	eax, [ebx+0Ch]
		cmp	byte ptr [eax],	5Fh
		jz	short loc_71036F1D
		mov	eax, esi
		jmp	loc_71036DFD
; ---------------------------------------------------------------------------
		align 10h

loc_71036EC0:				; CODE XREF: sub_71036DB0+45j
		movzx	eax, byte ptr [edx+1]
		cmp	al, 31h
		jz	short loc_71036F47
		cmp	al, 32h
		jz	short loc_71036F40
		cmp	al, 30h
		xchg	ax, ax
		jnz	loc_71036DFB
		mov	esi, 1

loc_71036EDB:				; CODE XREF: sub_71036DB0+195j
					; sub_71036DB0+1A0j
		add	edx, 2
		mov	[ebx+0Ch], edx
		mov	edx, [ebx+14h]
		cmp	edx, [ebx+18h]
		jge	loc_71036DFB
		lea	eax, [edx+edx*2]
		add	edx, 1
		shl	eax, 2
		add	eax, [ebx+10h]
		mov	[ebx+14h], edx
		test	eax, eax
		jz	loc_71036DFB
		test	ecx, ecx
		jz	loc_71036DFB
		mov	dword ptr [eax], 8
		mov	[eax+4], esi
		mov	[eax+8], ecx
		jmp	loc_71036DFD
; ---------------------------------------------------------------------------

loc_71036F1D:				; CODE XREF: sub_71036DB0+106j
		add	eax, 1
		mov	[ebx+0Ch], eax
		mov	eax, ebx
		call	sub_71035B60
		test	eax, eax
		js	loc_71036DFB
		mov	eax, esi
		jmp	loc_71036DFD
; ---------------------------------------------------------------------------
		align 10h

loc_71036F40:				; CODE XREF: sub_71036DB0+11Aj
		mov	esi, 3
		jmp	short loc_71036EDB
; ---------------------------------------------------------------------------

loc_71036F47:				; CODE XREF: sub_71036DB0+116j
		mov	esi, 2
		lea	esi, [esi+0]
		jmp	short loc_71036EDB
; ---------------------------------------------------------------------------

loc_71036F52:				; CODE XREF: sub_71036DB0+98j
		mov	esi, 3
		jmp	loc_71036E57
; ---------------------------------------------------------------------------
		align 10h

loc_71036F60:				; CODE XREF: sub_71036DB0+90j
		mov	esi, 2
		jmp	loc_71036E57
sub_71036DB0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71036F70	proc near		; CODE XREF: sub_710360D0+16Cj
					; sub_710370A0+ADp

var_1C		= dword	ptr -1Ch
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 1Ch
		mov	[esp+1Ch+var_C], ebx
		mov	ebx, eax
		mov	[esp+1Ch+var_8], esi
		mov	[esp+1Ch+var_4], edi
		mov	eax, [eax+0Ch]
		cmp	byte ptr [eax],	4Ch
		jz	short loc_71036FA0

loc_71036F89:				; CODE XREF: sub_71036F70+5Dj
					; sub_71036F70+9Bj ...
		xor	eax, eax
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71036FA0:				; CODE XREF: sub_71036F70+17j
		lea	edi, [eax+1]
		mov	[ebx+0Ch], edi
		movzx	edx, byte ptr [eax+1]
		cmp	dl, 5Fh
		setz	cl
		cmp	dl, 5Ah
		jnz	short loc_71036FE5

loc_71036FB5:				; CODE XREF: sub_71036F70+8Aj
		lea	ecx, [edi+1]
		xor	edx, edx
		mov	[ebx+0Ch], ecx
		mov	eax, ebx
		call	sub_710374B0
		mov	edi, [ebx+0Ch]
		movzx	edx, byte ptr [edi]

loc_71036FCA:				; CODE XREF: sub_71036F70+88j
					; sub_71036F70+F8j
		cmp	dl, 45h
		jnz	short loc_71036F89
		lea	ecx, [edi+1]
		mov	[ebx+0Ch], ecx
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_71036FE5:				; CODE XREF: sub_71036F70+43j
		test	cl, cl
		jz	short loc_71037000
		lea	edi, [eax+2]
		mov	[ebx+0Ch], edi
		movzx	edx, byte ptr [eax+2]
		xor	eax, eax
		cmp	dl, 5Ah
		jnz	short loc_71036FCA
		jmp	short loc_71036FB5
; ---------------------------------------------------------------------------
		align 10h

loc_71037000:				; CODE XREF: sub_71036F70+77j
		mov	eax, ebx
		call	sub_71036410
		test	eax, eax
		mov	esi, eax
		jz	loc_71036F89
		cmp	dword ptr [eax], 23h
		jz	short loc_71037070

loc_71037016:				; CODE XREF: sub_71036F70+108j
					; sub_71036F70+110j
		mov	edx, [ebx+0Ch]
		mov	edi, 34h
		movzx	eax, byte ptr [edx]
		cmp	al, 6Eh
		jz	short loc_71037082

loc_71037025:				; CODE XREF: sub_71036F70+11Fj
		xor	ecx, ecx
		cmp	al, 45h
		jz	short loc_7103704D
		test	al, al
		mov	ecx, edx
		jnz	short loc_7103703E
		jmp	loc_71036F89
; ---------------------------------------------------------------------------

loc_71037036:				; CODE XREF: sub_71036F70+D9j
		test	al, al
		jz	loc_71036F89

loc_7103703E:				; CODE XREF: sub_71036F70+BFj
		add	ecx, 1
		mov	[ebx+0Ch], ecx
		movzx	eax, byte ptr [ecx]
		cmp	al, 45h
		jnz	short loc_71037036
		sub	ecx, edx

loc_7103704D:				; CODE XREF: sub_71036F70+B9j
		mov	eax, ebx
		call	sub_71035B00
		mov	edx, edi
		mov	ecx, esi
		mov	[esp+1Ch+var_1C], eax
		mov	eax, ebx
		call	sub_71035A80
		mov	edi, [ebx+0Ch]
		movzx	edx, byte ptr [edi]
		jmp	loc_71036FCA
; ---------------------------------------------------------------------------
		align 10h

loc_71037070:				; CODE XREF: sub_71036F70+A4j
		mov	eax, [eax+4]
		mov	ecx, [eax+10h]
		test	ecx, ecx
		jz	short loc_71037016
		mov	eax, [eax+4]
		sub	[ebx+30h], eax
		jmp	short loc_71037016
; ---------------------------------------------------------------------------

loc_71037082:				; CODE XREF: sub_71036F70+B3j
		add	edx, 1
		mov	di, 35h
		mov	[ebx+0Ch], edx
		movzx	eax, byte ptr [edx]
		jmp	short loc_71037025
sub_71036F70	endp

; ---------------------------------------------------------------------------
		jmp	short sub_710370A0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710370A0	proc near		; CODE XREF: sub_710360D0+243p
					; sub_710360D0+30Ep ...

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h

		push	edi
		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 20h
		mov	edi, [eax+2Ch]
		mov	eax, [eax+0Ch]
		cmp	byte ptr [eax],	49h
		jz	short loc_710370C0

loc_710370B3:				; CODE XREF: sub_710370A0+77j
					; sub_710370A0+92j ...
		add	esp, 20h
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_710370C0:				; CODE XREF: sub_710370A0+11j
		lea	ecx, [eax+1]
		mov	[ebx+0Ch], ecx
		cmp	byte ptr [eax+1], 45h
		jnz	short loc_710370F0
		add	eax, 2
		xor	ecx, ecx
		mov	[ebx+0Ch], eax
		mov	edx, 2Ah
		mov	eax, ebx
		mov	[esp+2Ch+var_2C], 0
		call	sub_71035A80
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_710370F0:				; CODE XREF: sub_710370A0+2Aj
		mov	[esp+2Ch+var_10], 0
		lea	esi, [esp+2Ch+var_10]
		movzx	edx, byte ptr [eax+1]
		jmp	short loc_71037146
; ---------------------------------------------------------------------------

loc_71037102:				; CODE XREF: sub_710370A0+A9j
		cmp	dl, 58h
		jz	short loc_71037162
		cmp	dl, 49h
		jz	short loc_71037154
		mov	eax, ebx
		xchg	ax, ax
		call	sub_71036410

loc_71037115:				; CODE XREF: sub_710370A0+B2j
					; sub_710370A0+C0j ...
		test	eax, eax
		jz	short loc_710370B3
		mov	ecx, eax
		mov	edx, 2Ah
		mov	eax, ebx
		mov	[esp+2Ch+var_2C], 0
		call	sub_71035A80
		test	eax, eax
		mov	[esi], eax
		jz	loc_710370B3
		mov	ecx, [ebx+0Ch]
		movzx	edx, byte ptr [ecx]
		cmp	dl, 45h
		jz	short loc_71037183
		lea	esi, [eax+8]

loc_71037146:				; CODE XREF: sub_710370A0+60j
		cmp	dl, 4Ch
		jnz	short loc_71037102
		mov	eax, ebx
		call	sub_71036F70
		jmp	short loc_71037115
; ---------------------------------------------------------------------------

loc_71037154:				; CODE XREF: sub_710370A0+6Aj
		mov	eax, ebx
		call	sub_710370A0
		nop
		lea	esi, [esi+0]
		jmp	short loc_71037115
; ---------------------------------------------------------------------------

loc_71037162:				; CODE XREF: sub_710370A0+65j
		add	ecx, 1
		mov	eax, ebx
		mov	[ebx+0Ch], ecx
		call	sub_710360D0
		mov	edx, [ebx+0Ch]
		cmp	byte ptr [edx],	45h
		jnz	loc_710370B3
		add	edx, 1
		mov	[ebx+0Ch], edx
		jmp	short loc_71037115
; ---------------------------------------------------------------------------

loc_71037183:				; CODE XREF: sub_710370A0+A1j
		add	ecx, 1
		mov	[ebx+2Ch], edi
		mov	eax, [esp+2Ch+var_10]
		mov	[ebx+0Ch], ecx
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
sub_710370A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710371A0	proc near		; CODE XREF: sub_71036410+9Ap
					; sub_71036410+694p ...

var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h

		push	ebp
		push	edi
		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 2Ch
		mov	edx, [eax+0Ch]
		movzx	eax, byte ptr [edx]
		cmp	al, 4Eh
		jz	loc_710372B0
		jle	short loc_710371F0
		cmp	al, 53h
		jz	short loc_71037233
		cmp	al, 5Ah
		nop
		jnz	short loc_710371F4
		add	edx, 1
		mov	eax, ebx
		mov	[ebx+0Ch], edx
		xor	edx, edx
		call	sub_710374B0
		mov	esi, eax
		mov	eax, [ebx+0Ch]
		cmp	byte ptr [eax],	45h
		jz	loc_71037383

loc_710371DF:				; CODE XREF: sub_710371A0+6Fj
					; sub_710371A0+12Aj ...
		xor	esi, esi

loc_710371E1:				; CODE XREF: sub_710371A0+63j
					; sub_710371A0+67j ...
		add	esp, 2Ch
		mov	eax, esi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_710371F0:				; CODE XREF: sub_710371A0+17j
		cmp	al, 4Ch
		jz	short loc_71037220

loc_710371F4:				; CODE XREF: sub_710371A0+20j
		mov	eax, ebx
		call	sub_71036DB0
		mov	esi, eax
		mov	eax, [ebx+0Ch]
		cmp	byte ptr [eax],	49h
		jnz	short loc_710371E1

loc_71037205:				; CODE XREF: sub_710371A0+B3j
		test	esi, esi
		jz	short loc_710371E1
		mov	eax, [ebx+20h]
		cmp	eax, [ebx+24h]
		jge	short loc_710371DF
		mov	edx, [ebx+1Ch]
		add	dword ptr [ebx+20h], 1
		mov	[edx+eax*4], esi
		jmp	short loc_71037255
; ---------------------------------------------------------------------------
		align 10h

loc_71037220:				; CODE XREF: sub_710371A0+52j
		mov	eax, ebx
		call	sub_71036DB0
		add	esp, 2Ch
		pop	ebx
		mov	esi, eax
		mov	eax, esi
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_71037233:				; CODE XREF: sub_710371A0+1Bj
		cmp	byte ptr [edx+1], 74h
		jz	short loc_71037274
		xor	edx, edx
		mov	eax, ebx
		call	sub_71035D30
		mov	edx, 1
		mov	esi, eax

loc_71037249:				; CODE XREF: sub_710371A0+10Dj
		mov	eax, [ebx+0Ch]
		cmp	byte ptr [eax],	49h
		jnz	short loc_710371E1
		test	edx, edx
		jz	short loc_71037205

loc_71037255:				; CODE XREF: sub_710371A0+7Bj
		mov	eax, ebx
		call	sub_710370A0
		mov	ecx, esi
		mov	edx, 4
		mov	[esp+3Ch+var_3C], eax
		mov	eax, ebx
		call	sub_71035A80
		mov	esi, eax
		jmp	loc_710371E1
; ---------------------------------------------------------------------------

loc_71037274:				; CODE XREF: sub_710371A0+97j
		add	edx, 2
		mov	eax, ebx
		mov	[ebx+0Ch], edx
		call	sub_71036DB0
		mov	ecx, 3
		mov	edx, offset aStd ; "std"
		mov	esi, eax
		mov	eax, ebx
		call	sub_71035B00
		mov	edx, 1
		mov	[esp+3Ch+var_3C], esi
		mov	ecx, eax
		mov	eax, ebx
		call	sub_71035A80
		xor	edx, edx
		add	dword ptr [ebx+30h], 3
		mov	esi, eax
		jmp	short loc_71037249
; ---------------------------------------------------------------------------
		align 10h

loc_710372B0:				; CODE XREF: sub_710371A0+11j
		add	edx, 1
		mov	ecx, 1
		mov	[ebx+0Ch], edx
		mov	eax, ebx
		lea	edx, [esp+3Ch+var_20]
		call	sub_71035C20
		test	eax, eax
		mov	ebp, eax
		jz	loc_710371DF
		mov	edx, [ebx+0Ch]
		xor	edi, edi
		movzx	esi, byte ptr [edx]

loc_710372D8:				; CODE XREF: sub_710371A0+238j
					; sub_710371A0+25Fj
		mov	eax, esi
		test	al, al
		jz	loc_71037370
		lea	eax, [esi-61h]
		cmp	al, 19h
		jbe	loc_710373E0
		lea	eax, [esi-30h]
		cmp	al, 9
		jbe	loc_710373E0
		mov	eax, esi
		cmp	al, 44h
		jz	loc_710373E0
		cmp	al, 43h
		jz	loc_710373E0
		cmp	al, 4Ch
		jz	loc_710373E0
		mov	eax, esi
		cmp	al, 53h
		jz	loc_71037404
		mov	eax, esi
		cmp	al, 49h
		jz	loc_71037415
		mov	eax, esi
		cmp	al, 54h
		jnz	loc_7103742F
		mov	eax, ebx
		call	sub_71035CC0

loc_71037337:				; CODE XREF: sub_710371A0+247j
					; sub_710371A0+270j
		test	edi, edi
		jz	short loc_7103734C
		mov	edx, 1

loc_71037340:				; CODE XREF: sub_710371A0+28Aj
		mov	[esp+3Ch+var_3C], eax
		mov	ecx, edi
		mov	eax, ebx
		call	sub_71035A80

loc_7103734C:				; CODE XREF: sub_710371A0+199j
		mov	edx, esi
		cmp	dl, 53h
		jz	short loc_710373D0
		mov	edx, [ebx+0Ch]
		mov	esi, 45h
		cmp	byte ptr [edx],	45h
		jz	short loc_710373D6
		test	eax, eax
		jz	short loc_71037370
		mov	ecx, [ebx+20h]
		cmp	ecx, [ebx+24h]
		jl	loc_710373F0

loc_71037370:				; CODE XREF: sub_710371A0+13Cj
					; sub_710371A0+1C2j ...
		xor	esi, esi
		mov	dword ptr [ebp+0], 0
		mov	eax, esi
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_71037383:				; CODE XREF: sub_710371A0+39j
		lea	edx, [eax+1]
		mov	[ebx+0Ch], edx
		cmp	byte ptr [eax+1], 73h
		jnz	loc_7103745C
		lea	edx, [eax+2]
		mov	[ebx+0Ch], edx
		cmp	byte ptr [eax+2], 5Fh
		jz	loc_7103748D

loc_710373A3:				; CODE XREF: sub_710371A0+2FCj
		mov	ecx, 0Eh
		mov	edx, offset aStringLiteral ; "string literal"
		mov	eax, ebx
		call	sub_71035B00
		mov	[esp+3Ch+var_3C], eax

loc_710373B7:				; CODE XREF: sub_710371A0+2D0j
		mov	ecx, esi
		mov	edx, 2
		mov	eax, ebx
		call	sub_71035A80
		mov	esi, eax
		jmp	loc_710371E1
; ---------------------------------------------------------------------------
		align 10h

loc_710373D0:				; CODE XREF: sub_710371A0+1B1j
		mov	edx, [ebx+0Ch]
		movzx	esi, byte ptr [edx]

loc_710373D6:				; CODE XREF: sub_710371A0+1BEj
		mov	edi, eax
		jmp	loc_710372D8
; ---------------------------------------------------------------------------
		align 10h

loc_710373E0:				; CODE XREF: sub_710371A0+147j
					; sub_710371A0+152j ...
		mov	eax, ebx
		call	sub_71036DB0
		jmp	loc_71037337
; ---------------------------------------------------------------------------
		align 10h

loc_710373F0:				; CODE XREF: sub_710371A0+1CAj
		mov	esi, [ebx+1Ch]
		mov	edi, eax
		add	dword ptr [ebx+20h], 1
		mov	[esi+ecx*4], eax
		movzx	esi, byte ptr [edx]
		jmp	loc_710372D8
; ---------------------------------------------------------------------------

loc_71037404:				; CODE XREF: sub_710371A0+176j
		mov	edx, 1
		mov	eax, ebx
		call	sub_71035D30
		jmp	loc_71037337
; ---------------------------------------------------------------------------

loc_71037415:				; CODE XREF: sub_710371A0+180j
		test	edi, edi
		jz	loc_71037370
		mov	eax, ebx
		nop
		call	sub_710370A0
		mov	edx, 4
		jmp	loc_71037340
; ---------------------------------------------------------------------------

loc_7103742F:				; CODE XREF: sub_710371A0+18Aj
		mov	eax, esi
		cmp	al, 45h
		jnz	loc_71037370
		test	edi, edi
		mov	[ebp+0], edi
		jz	loc_710371DF
		cmp	byte ptr [edx],	45h
		jnz	loc_710371DF
		add	edx, 1
		mov	esi, [esp+3Ch+var_20]
		mov	[ebx+0Ch], edx
		jmp	loc_710371E1
; ---------------------------------------------------------------------------

loc_7103745C:				; CODE XREF: sub_710371A0+1EDj
		mov	eax, ebx
		call	sub_710371A0
		mov	edi, eax
		mov	eax, [ebx+0Ch]
		cmp	byte ptr [eax],	5Fh
		jz	short loc_71037475

loc_7103746D:				; CODE XREF: sub_710371A0+2E4j
		mov	[esp+3Ch+var_3C], edi
		jmp	loc_710373B7
; ---------------------------------------------------------------------------

loc_71037475:				; CODE XREF: sub_710371A0+2CBj
		add	eax, 1
		mov	[ebx+0Ch], eax
		mov	eax, ebx
		call	sub_71035B60
		test	eax, eax
		jns	short loc_7103746D
		xor	esi, esi
		jmp	loc_710371E1
; ---------------------------------------------------------------------------

loc_7103748D:				; CODE XREF: sub_710371A0+1FDj
		add	eax, 3
		mov	[ebx+0Ch], eax
		mov	eax, ebx
		call	sub_71035B60
		test	eax, eax
		jns	loc_710373A3
		xor	esi, esi
		jmp	loc_710371E1
sub_710371A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710374B0	proc near		; CODE XREF: sub_71036F70+4Fp
					; sub_710371A0+2Cp ...

var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 3Ch
		mov	[esp+3Ch+var_10], ebx
		mov	ebx, eax
		mov	[esp+3Ch+var_8], edi
		mov	edi, edx
		mov	[esp+3Ch+var_C], esi
		mov	[esp+3Ch+var_4], ebp
		mov	eax, [eax+0Ch]
		movzx	edx, byte ptr [eax]
		cmp	dl, 54h
		jz	loc_71037585
		cmp	dl, 47h
		jz	loc_71037585
		mov	eax, ebx
		call	sub_710371A0
		test	eax, eax
		mov	esi, eax
		jnz	short loc_71037540

loc_710374EC:				; CODE XREF: sub_710374B0+92j
					; sub_710374B0+98j
		mov	eax, [ebx+0Ch]
		test	esi, esi
		movzx	eax, byte ptr [eax]
		jz	loc_710375A1
		test	al, al
		jz	loc_710375A1
		cmp	al, 45h
		jz	loc_710375A1
		mov	eax, esi

loc_7103750C:				; CODE XREF: sub_710374B0+118j
		mov	edx, [eax]
		cmp	edx, 4
		jz	loc_71037650
		jnb	loc_710375B7

loc_7103751D:				; CODE XREF: sub_710374B0+10Dj
					; sub_710374B0+120j ...
		xor	edx, edx	; jumptable 71037668 cases 7,8,45

loc_7103751F:				; CODE XREF: sub_710374B0+1B1j
		mov	eax, ebx
		call	sub_71036B40
		mov	ecx, esi
		mov	edx, 3
		mov	[esp+3Ch+var_3C], eax
		mov	eax, ebx
		call	sub_71035A80
		mov	esi, eax
		jmp	short loc_710375A1
; ---------------------------------------------------------------------------
		align 10h

loc_71037540:				; CODE XREF: sub_710374B0+3Aj
		test	edi, edi
		jz	short loc_710374EC
		test	byte ptr [ebx+8], 1
		jnz	short loc_710374EC
		mov	eax, [esi]
		lea	edx, [eax-1Ah]
		cmp	edx, 2
		ja	short loc_71037561

loc_71037554:				; CODE XREF: sub_710374B0+AFj
		mov	esi, [esi+4]
		mov	eax, [esi]
		lea	edx, [eax-1Ah]
		cmp	edx, 2
		jbe	short loc_71037554

loc_71037561:				; CODE XREF: sub_710374B0+A2j
		cmp	eax, 2
		jnz	short loc_710375A1
		mov	eax, [esi+8]
		mov	edx, [eax]
		sub	edx, 1Ah
		cmp	edx, 2
		ja	short loc_71037580

loc_71037573:				; CODE XREF: sub_710374B0+CEj
		mov	eax, [eax+4]
		mov	edx, [eax]
		sub	edx, 1Ah
		cmp	edx, 2
		jbe	short loc_71037573

loc_71037580:				; CODE XREF: sub_710374B0+C1j
		mov	[esi+8], eax
		jmp	short loc_710375A1
; ---------------------------------------------------------------------------

loc_71037585:				; CODE XREF: sub_710374B0+20j
					; sub_710374B0+29j
		mov	ecx, [ebx+30h]
		add	ecx, 14h
		mov	[ebx+30h], ecx
		movzx	edx, byte ptr [eax]
		cmp	dl, 54h
		jz	loc_71037622
		cmp	dl, 47h
		jz	short loc_710375D5

loc_7103759F:				; CODE XREF: sub_710374B0+131j
					; sub_710374B0+14Bj ...
		xor	esi, esi	; jumptable 71037649 default case

loc_710375A1:				; CODE XREF: sub_710374B0+44j
					; sub_710374B0+4Cj ...
		mov	eax, esi
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_710375B7:				; CODE XREF: sub_710374B0+67j
		sub	edx, 1Ah
		cmp	edx, 2
		ja	loc_7103751D	; jumptable 71037668 cases 7,8,45
		mov	eax, [eax+4]
		test	eax, eax
		jnz	loc_7103750C
		xchg	ax, ax
		jmp	loc_7103751D	; jumptable 71037668 cases 7,8,45
; ---------------------------------------------------------------------------

loc_710375D5:				; CODE XREF: sub_710374B0+EDj
		lea	edx, [eax+1]
		mov	[ebx+0Ch], edx
		movzx	edx, byte ptr [eax+1]
		test	dl, dl
		jz	short loc_7103759F ; jumptable 71037649	default	case
		add	eax, 2
		cmp	dl, 52h
		mov	[ebx+0Ch], eax
		jz	loc_7103786B
		jg	loc_7103788E
		cmp	dl, 41h
		jnz	short loc_7103759F ; jumptable 71037649	default	case
		xor	edx, edx
		mov	eax, ebx
		call	sub_710374B0
		mov	edx, 15h
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_71035A80
		mov	esi, eax
		jmp	loc_710375A1
; ---------------------------------------------------------------------------

loc_71037622:				; CODE XREF: sub_710374B0+E4j
		lea	edx, [eax+1]
		mov	[ebx+0Ch], edx
		movzx	edx, byte ptr [eax+1]
		test	dl, dl
		jz	loc_7103759F	; jumptable 71037649 default case
		sub	edx, 43h
		add	eax, 2
		cmp	dl, 33h		; switch 52 cases
		mov	[ebx+0Ch], eax
		ja	loc_7103759F	; jumptable 71037649 default case
		movzx	edx, dl
		jmp	ds:off_7105BAAC[edx*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_71037650:				; CODE XREF: sub_710374B0+61j
		mov	eax, [eax+4]
		test	eax, eax
		jz	short loc_7103765C ; jumptable 71037668	default	case

loc_71037657:				; CODE XREF: sub_710374B0+1C5j
		cmp	dword ptr [eax], 2Dh ; switch 46 cases
		jbe	short loc_71037666

loc_7103765C:				; CODE XREF: sub_710374B0+1A5j
					; sub_710374B0+1B8j ...
		mov	edx, 1		; jumptable 71037668 default case
		jmp	loc_7103751F
; ---------------------------------------------------------------------------

loc_71037666:				; CODE XREF: sub_710374B0+1AAj
		mov	edx, [eax]
		jmp	ds:off_7105BB7C[edx*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_71037670:				; CODE XREF: sub_710374B0+1B8j
					; DATA XREF: .rdata:off_7105BB7Co
		mov	eax, [eax+8]	; jumptable 71037668 cases 1,2
		test	eax, eax
		jnz	short loc_71037657
		jmp	short loc_7103765C ; jumptable 71037668	default	case
; ---------------------------------------------------------------------------
		align 10h

loc_71037680:				; CODE XREF: sub_710374B0+199j
					; DATA XREF: .rdata:off_7105BAACo
		mov	edx, 76h	; jumptable 71037649 case 51
		mov	eax, ebx
		call	sub_71035BC0
		test	eax, eax
		xchg	ax, ax
		jz	loc_7103759F	; jumptable 71037649 default case
		xor	edx, edx
		mov	eax, ebx
		call	sub_710374B0
		mov	edx, 10h
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_71035A80
		mov	esi, eax
		jmp	loc_710375A1
; ---------------------------------------------------------------------------

loc_710376BB:				; CODE XREF: sub_710374B0+199j
					; DATA XREF: .rdata:off_7105BAACo
		mov	edx, 68h	; jumptable 71037649 case 37
		mov	eax, ebx
		call	sub_71035BC0
		test	eax, eax
		jz	loc_7103759F	; jumptable 71037649 default case
		xor	edx, edx
		mov	eax, ebx
		call	sub_710374B0
		mov	edx, 0Fh
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_71035A80
		mov	esi, eax
		jmp	loc_710375A1
; ---------------------------------------------------------------------------

loc_710376F4:				; CODE XREF: sub_710374B0+199j
					; DATA XREF: .rdata:off_7105BAACo
		xor	edx, edx	; jumptable 71037649 case 32
		mov	eax, ebx
		call	sub_71035BC0
		test	eax, eax
		jz	loc_7103759F	; jumptable 71037649 default case
		xor	edx, edx
		mov	eax, ebx
		call	sub_71035BC0
		test	eax, eax
		jz	loc_7103759F	; jumptable 71037649 default case
		xor	edx, edx
		mov	eax, ebx
		call	sub_710374B0
		mov	edx, 11h
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_71035A80
		mov	esi, eax
		jmp	loc_710375A1
; ---------------------------------------------------------------------------
		align 10h

loc_71037740:				; CODE XREF: sub_710374B0+199j
					; DATA XREF: .rdata:off_7105BAACo
		sub	ecx, 5		; jumptable 71037649 case 19
		mov	eax, ebx
		mov	[ebx+30h], ecx
		call	sub_71036410
		mov	edx, 9
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_71035A80
		mov	esi, eax
		jmp	loc_710375A1
; ---------------------------------------------------------------------------

loc_71037769:				; CODE XREF: sub_710374B0+199j
					; DATA XREF: .rdata:off_7105BAACo
		sub	ecx, 0Ah	; jumptable 71037649 case 17
		mov	eax, ebx
		mov	[ebx+30h], ecx
		call	sub_71036410
		mov	edx, 0Ah
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_71035A80
		mov	esi, eax
		jmp	loc_710375A1
; ---------------------------------------------------------------------------

loc_71037792:				; CODE XREF: sub_710374B0+199j
					; DATA XREF: .rdata:off_7105BAACo
		mov	eax, ebx	; jumptable 71037649 case 16
		call	sub_71036410
		mov	edx, 0Dh
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_71035A80
		mov	esi, eax
		jmp	loc_710375A1
; ---------------------------------------------------------------------------

loc_710377B5:				; CODE XREF: sub_710374B0+199j
					; DATA XREF: .rdata:off_7105BAACo
		mov	eax, ebx	; jumptable 71037649 case 7
		call	sub_71036410
		mov	edx, 12h
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_71035A80
		mov	esi, eax
		jmp	loc_710375A1
; ---------------------------------------------------------------------------

loc_710377D8:				; CODE XREF: sub_710374B0+199j
					; DATA XREF: .rdata:off_7105BAACo
		mov	eax, ebx	; jumptable 71037649 case 6
		call	sub_71036410
		mov	edx, 0Ch
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_71035A80
		mov	esi, eax
		jmp	loc_710375A1
; ---------------------------------------------------------------------------

loc_710377FB:				; CODE XREF: sub_710374B0+199j
					; DATA XREF: .rdata:off_7105BAACo
		mov	eax, ebx	; jumptable 71037649 case 3
		call	sub_71036410
		mov	edx, 0Eh
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_71035A80
		mov	esi, eax
		jmp	loc_710375A1
; ---------------------------------------------------------------------------

loc_7103781E:				; CODE XREF: sub_710374B0+199j
					; DATA XREF: .rdata:off_7105BAACo
		mov	eax, ebx	; jumptable 71037649 case 0
		call	sub_71036410
		mov	esi, eax
		mov	eax, ebx
		call	sub_71035B60
		test	eax, eax
		js	loc_7103759F	; jumptable 71037649 default case
		mov	eax, [ebx+0Ch]
		cmp	byte ptr [eax],	5Fh
		jnz	loc_7103759F	; jumptable 71037649 default case
		add	eax, 1
		mov	[ebx+0Ch], eax
		mov	eax, ebx
		call	sub_71036410
		mov	edx, 0Bh
		add	dword ptr [ebx+30h], 5
		mov	[esp+3Ch+var_3C], esi
		mov	ecx, eax
		mov	eax, ebx
		call	sub_71035A80
		mov	esi, eax
		jmp	loc_710375A1
; ---------------------------------------------------------------------------

loc_7103786B:				; CODE XREF: sub_710374B0+13Cj
		mov	eax, ebx
		call	sub_710371A0
		mov	edx, 14h
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_71035A80
		mov	esi, eax
		jmp	loc_710375A1
; ---------------------------------------------------------------------------

loc_7103788E:				; CODE XREF: sub_710374B0+142j
		cmp	dl, 56h
		jz	loc_71037935
		cmp	dl, 72h
		jnz	loc_7103759F	; jumptable 71037649 default case
		mov	eax, ebx
		call	sub_71035B60
		cmp	eax, 1
		jle	loc_7103759F	; jumptable 71037649 default case
		mov	esi, [ebx+0Ch]
		movzx	edx, byte ptr [esi]
		test	dl, dl
		jz	loc_7103759F	; jumptable 71037649 default case
		add	esi, 1
		cmp	dl, 5Fh
		mov	[ebx+0Ch], esi
		jnz	loc_7103759F	; jumptable 71037649 default case
		lea	ebp, [eax-1]
		mov	[esp+3Ch+var_20], 0

loc_710378D8:				; CODE XREF: sub_710374B0+483j
		movzx	eax, byte ptr [esi]
		test	al, al
		jz	loc_7103759F	; jumptable 71037649 default case
		xor	edi, edi
		cmp	al, 24h
		jnz	short loc_710378FC
		jmp	short loc_71037958
; ---------------------------------------------------------------------------
		align 10h

loc_710378F0:				; CODE XREF: sub_710374B0+451j
		movzx	eax, byte ptr [esi+edi]
		test	al, al
		jz	short loc_71037903
		cmp	al, 24h
		jz	short loc_71037903

loc_710378FC:				; CODE XREF: sub_710374B0+437j
		add	edi, 1
		cmp	edi, ebp
		jl	short loc_710378F0

loc_71037903:				; CODE XREF: sub_710374B0+446j
					; sub_710374B0+44Aj
		mov	edx, esi
		mov	ecx, edi
		mov	eax, ebx
		call	sub_71035B00
		mov	esi, [ebx+0Ch]
		add	esi, edi
		mov	[ebx+0Ch], esi
		test	eax, eax
		jz	loc_7103759F	; jumptable 71037649 default case
		sub	ebp, edi

loc_71037920:				; CODE XREF: sub_710374B0+4F8j
		cmp	[esp+3Ch+var_20], 0
		jnz	loc_710379C9

loc_7103792B:				; CODE XREF: sub_710374B0+52Ej
		test	ebp, ebp
		jle	short loc_710379AD
		mov	[esp+3Ch+var_20], eax
		jmp	short loc_710378D8
; ---------------------------------------------------------------------------

loc_71037935:				; CODE XREF: sub_710374B0+3E1j
		mov	eax, ebx
		call	sub_710371A0
		mov	edx, 13h
		mov	[esp+3Ch+var_3C], 0
		mov	ecx, eax
		mov	eax, ebx
		call	sub_71035A80
		mov	esi, eax
		jmp	loc_710375A1
; ---------------------------------------------------------------------------

loc_71037958:				; CODE XREF: sub_710374B0+439j
		movzx	eax, byte ptr [esi+1]
		cmp	al, 53h
		jz	loc_710379FF
		cmp	al, 5Fh
		jz	loc_710379F5
		cmp	al, 24h
		xchg	ax, ax
		jnz	loc_7103759F	; jumptable 71037649 default case
		mov	edx, 24h

loc_7103797B:				; CODE XREF: sub_710374B0+54Aj
					; sub_710374B0+554j
		mov	ecx, [ebx+14h]
		cmp	ecx, [ebx+18h]
		jge	short loc_710379E9
		imul	eax, ecx, 0Ch
		add	ecx, 1
		add	eax, [ebx+10h]
		mov	[ebx+14h], ecx
		test	eax, eax
		jz	short loc_710379E9
		mov	[eax+4], edx
		mov	esi, [ebx+0Ch]
		sub	ebp, 2
		mov	dword ptr [eax], 38h
		add	esi, 2
		mov	[ebx+0Ch], esi
		jmp	loc_71037920
; ---------------------------------------------------------------------------

loc_710379AD:				; CODE XREF: sub_710374B0+47Dj
		mov	ecx, eax
		mov	edx, 36h
		mov	eax, ebx
		mov	[esp+3Ch+var_3C], 0
		call	sub_71035A80
		mov	esi, eax
		jmp	loc_710375A1
; ---------------------------------------------------------------------------

loc_710379C9:				; CODE XREF: sub_710374B0+475j
		mov	ecx, [esp+3Ch+var_20]
		mov	edx, 37h
		mov	[esp+3Ch+var_3C], eax
		mov	eax, ebx
		call	sub_71035A80
		test	eax, eax
		jnz	loc_7103792B
		jmp	loc_7103759F	; jumptable 71037649 default case
; ---------------------------------------------------------------------------

loc_710379E9:				; CODE XREF: sub_710374B0+4D1j
					; sub_710374B0+4E1j
		add	dword ptr [ebx+0Ch], 2
		xor	esi, esi
		nop
		jmp	loc_710375A1
; ---------------------------------------------------------------------------

loc_710379F5:				; CODE XREF: sub_710374B0+4B6j
		mov	edx, 2Eh
		jmp	loc_7103797B
; ---------------------------------------------------------------------------

loc_710379FF:				; CODE XREF: sub_710374B0+4AEj
		mov	edx, 2Fh
		jmp	loc_7103797B
sub_710374B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71037A10	proc near		; CODE XREF: sub_710360D0+2D3p
					; sub_710360D0+334p

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h

		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 24h
		mov	eax, [eax+0Ch]
		mov	[esp+2Ch+var_10], 0
		cmp	byte ptr [eax],	45h
		jnz	short loc_71037A48
		add	eax, 1
		xor	ecx, ecx
		mov	[ebx+0Ch], eax
		mov	edx, 29h
		mov	eax, ebx
		mov	[esp+2Ch+var_2C], 0
		call	sub_71035A80
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_71037A48:				; CODE XREF: sub_71037A10+15j
		lea	esi, [esp+2Ch+var_10]
		jmp	short loc_71037A53
; ---------------------------------------------------------------------------
		align 10h

loc_71037A50:				; CODE XREF: sub_71037A10+6Fj
		lea	esi, [eax+8]

loc_71037A53:				; CODE XREF: sub_71037A10+3Cj
		mov	eax, ebx
		call	sub_710360D0
		test	eax, eax
		jz	short loc_71037A91
		mov	ecx, eax
		mov	edx, 29h
		mov	eax, ebx
		mov	[esp+2Ch+var_2C], 0
		call	sub_71035A80
		test	eax, eax
		mov	[esi], eax
		jz	short loc_71037A91
		mov	edx, [ebx+0Ch]
		cmp	byte ptr [edx],	45h
		jnz	short loc_71037A50
		add	edx, 1
		mov	eax, [esp+2Ch+var_10]
		mov	[ebx+0Ch], edx
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_71037A91:				; CODE XREF: sub_71037A10+4Cj
					; sub_71037A10+67j
		add	esp, 24h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
sub_71037A10	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_71037AA0(void	*, size_t, int)
sub_71037AA0	proc near		; DATA XREF: sub_71039640+37o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], esi
		mov	esi, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_4], edi
		mov	edi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_C], ebx
		mov	eax, [esi+4]
		mov	ebx, [esi+8]
		lea	eax, [edi+eax+1]
		cmp	eax, ebx
		ja	short loc_71037B17

loc_71037AC5:				; CODE XREF: sub_71037AA0+ADj
		mov	ebx, [esi+0Ch]
		test	ebx, ebx
		jz	short loc_71037AE0

loc_71037ACC:				; CODE XREF: sub_71037AA0+7Cj
					; sub_71037AA0+D7j
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71037AE0:				; CODE XREF: sub_71037AA0+2Aj
		mov	eax, [esi]
		mov	edx, [esp+1Ch+arg_0]
		add	eax, [esi+4]
		mov	[esp+1Ch+var_14], edi ;	size_t
		mov	[esp+1Ch+var_18], edx ;	void *
		mov	[esp+1Ch+var_1C], eax ;	void *
		call	memcpy
		mov	edx, [esi]
		mov	eax, [esi+4]
		add	edx, edi
		mov	byte ptr [edx+eax], 0
		add	[esi+4], edi
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_71037B17:				; CODE XREF: sub_71037AA0+23j
		mov	edx, [esi+0Ch]
		test	edx, edx
		jnz	short loc_71037ACC
		test	ebx, ebx
		jnz	short loc_71037B30
		cmp	eax, 2
		mov	bl, 2
		jbe	short loc_71037B36
		lea	esi, [esi+0]

loc_71037B30:				; CODE XREF: sub_71037AA0+80j
					; sub_71037AA0+94j
		add	ebx, ebx
		cmp	eax, ebx
		ja	short loc_71037B30

loc_71037B36:				; CODE XREF: sub_71037AA0+87j
		mov	[esp+1Ch+var_18], ebx ;	size_t
		mov	eax, [esi]
		mov	[esp+1Ch+var_1C], eax ;	void *
		call	realloc
		test	eax, eax
		jz	short loc_71037B52
		mov	[esi], eax
		mov	[esi+8], ebx
		jmp	loc_71037AC5
; ---------------------------------------------------------------------------

loc_71037B52:				; CODE XREF: sub_71037AA0+A6j
		mov	eax, [esi]
		mov	[esp+1Ch+var_1C], eax ;	void *
		call	free
		mov	dword ptr [esi], 0
		mov	dword ptr [esi+4], 0
		mov	dword ptr [esi+8], 0
		mov	dword ptr [esi+0Ch], 1
		jmp	loc_71037ACC
sub_71037AA0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71037B80	proc near		; CODE XREF: sub_71038460+BDp
					; sub_71038460+7F4p ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_28		= dword	ptr -28h
var_24		= byte ptr -24h
var_20		= dword	ptr -20h

		push	ebp
		push	edi
		push	esi
		mov	esi, edx
		push	ebx
		mov	ebx, eax
		sub	esp, 2Ch
		test	ecx, ecx
		jz	loc_71037C20
		lea	edx, [ebx+4]
		mov	eax, [eax+104h]
		xor	edi, edi
		mov	[esp+3Ch+var_20], edx
		jmp	short loc_71037BBD
; ---------------------------------------------------------------------------

loc_71037BA4:				; CODE XREF: sub_71037B80+49j
					; sub_71037B80+9Cj
		add	edi, 1
		cmp	ecx, edi
		mov	[ebx+eax+4], dl
		mov	[ebx+104h], ebp
		mov	[ebx+108h], dl
		jbe	short loc_71037C20
		mov	eax, ebp

loc_71037BBD:				; CODE XREF: sub_71037B80+22j
		cmp	eax, 0FFh
		movzx	edx, byte ptr [esi+edi]
		lea	ebp, [eax+1]
		jnz	short loc_71037BA4
		mov	eax, [ebx+110h]
		mov	ebp, 1
		mov	[esp+3Ch+var_24], dl
		mov	[esp+3Ch+var_28], ecx
		mov	byte ptr [ebx+103h], 0
		mov	[esp+3Ch+var_34], eax
		mov	eax, [ebx+104h]
		mov	[esp+3Ch+var_38], eax
		mov	eax, [esp+3Ch+var_20]
		mov	[esp+3Ch+var_3C], eax
		call	dword ptr [ebx+10Ch]
		xor	eax, eax
		mov	ecx, [esp+3Ch+var_28]
		mov	dword ptr [ebx+104h], 0
		movzx	edx, [esp+3Ch+var_24]
		add	dword ptr [ebx+124h], 1
		jmp	short loc_71037BA4
; ---------------------------------------------------------------------------
		align 10h

loc_71037C20:				; CODE XREF: sub_71037B80+Dj
					; sub_71037B80+39j
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_71037B80	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71037C30	proc near		; CODE XREF: sub_71038000+E2p
					; sub_71038460+76p ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_28		= dword	ptr -28h
var_24		= byte ptr -24h
var_20		= dword	ptr -20h

		push	ebp
		push	edi
		push	esi
		mov	esi, edx
		push	ebx
		mov	ebx, eax
		sub	esp, 2Ch
		mov	[esp+3Ch+var_3C], edx ;	char *
		call	strlen
		test	eax, eax
		jz	loc_71037CE0
		lea	ecx, [ebx+4]
		mov	edx, [ebx+104h]
		xor	edi, edi
		mov	[esp+3Ch+var_20], ecx
		jmp	short loc_71037C79
; ---------------------------------------------------------------------------
		align 10h

loc_71037C60:				; CODE XREF: sub_71037C30+56j
					; sub_71037C30+A9j
		add	edi, 1
		cmp	eax, edi
		mov	[ebx+edx+4], cl
		mov	[ebx+104h], ebp
		mov	[ebx+108h], cl
		jbe	short loc_71037CE0
		mov	edx, ebp

loc_71037C79:				; CODE XREF: sub_71037C30+2Aj
		cmp	edx, 0FFh
		movzx	ecx, byte ptr [esi+edi]
		lea	ebp, [edx+1]
		jnz	short loc_71037C60
		mov	edx, [ebx+110h]
		mov	ebp, 1
		mov	[esp+3Ch+var_28], eax
		mov	[esp+3Ch+var_24], cl
		mov	byte ptr [ebx+103h], 0
		mov	[esp+3Ch+var_34], edx
		mov	edx, [ebx+104h]
		mov	[esp+3Ch+var_38], edx
		mov	edx, [esp+3Ch+var_20]
		mov	[esp+3Ch+var_3C], edx
		call	dword ptr [ebx+10Ch]
		xor	edx, edx
		movzx	ecx, [esp+3Ch+var_24]
		mov	dword ptr [ebx+104h], 0
		mov	eax, [esp+3Ch+var_28]
		add	dword ptr [ebx+124h], 1
		jmp	short loc_71037C60
; ---------------------------------------------------------------------------
		align 10h

loc_71037CE0:				; CODE XREF: sub_71037C30+15j
					; sub_71037C30+45j
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_71037C30	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71037CF0	proc near		; CODE XREF: sub_71038000+A3p
					; sub_71038460+6DBp

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h

		push	edi
		push	esi
		mov	esi, edx
		push	ebx
		mov	edx, ecx
		sub	esp, 20h
		test	ecx, ecx
		mov	ebx, eax
		jz	short loc_71037D2B
		mov	edi, [ecx+8]
		mov	eax, ecx
		test	edi, edi
		jnz	short loc_71037D1B
		jmp	loc_71037DB0
; ---------------------------------------------------------------------------
		align 10h

loc_71037D10:				; CODE XREF: sub_71037CF0+30j
		mov	ecx, [eax+8]
		test	ecx, ecx
		jz	loc_71037DB0

loc_71037D1B:				; CODE XREF: sub_71037CF0+17j
		mov	eax, [eax]
		test	eax, eax
		nop
		jnz	short loc_71037D10
		xor	ecx, ecx
		mov	eax, ebx
		call	sub_71038000

loc_71037D2B:				; CODE XREF: sub_71037CF0+Ej
		mov	eax, [ebx+104h]

loc_71037D31:				; CODE XREF: sub_71037CF0+142j
		cmp	eax, 0FFh
		lea	edx, [eax+1]
		jz	loc_71037E7E

loc_71037D3F:				; CODE XREF: sub_71037CF0+1CDj
		mov	byte ptr [ebx+eax+4], 20h
		mov	[ebx+104h], edx
		mov	byte ptr [ebx+108h], 20h

loc_71037D51:				; CODE XREF: sub_71037CF0+26Fj
		cmp	edx, 0FFh
		lea	eax, [edx+1]
		jz	loc_71037F06

loc_71037D60:				; CODE XREF: sub_71037CF0+255j
		mov	byte ptr [ebx+edx+4], 5Bh
		mov	[ebx+104h], eax
		mov	byte ptr [ebx+108h], 5Bh
		mov	edx, [esi+4]
		test	edx, edx
		jz	short loc_71037D86
		mov	eax, ebx
		call	sub_71038460
		mov	eax, [ebx+104h]

loc_71037D86:				; CODE XREF: sub_71037CF0+87j
		cmp	eax, 0FFh
		lea	edx, [eax+1]
		jz	loc_71037EC2

loc_71037D94:				; CODE XREF: sub_71037CF0+211j
		mov	byte ptr [ebx+eax+4], 5Dh
		mov	[ebx+104h], edx
		mov	byte ptr [ebx+108h], 5Dh
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71037DB0:				; CODE XREF: sub_71037CF0+19j
					; sub_71037CF0+25j
		mov	eax, [eax+4]
		cmp	dword ptr [eax], 26h
		jz	loc_71037F50
		mov	ecx, [ebx+104h]
		lea	edi, [ebx+4]
		cmp	ecx, 0FFh
		jz	loc_71037F64
		lea	eax, [ecx+1]
		cmp	eax, 0FFh
		mov	byte ptr [ebx+ecx+4], 20h
		mov	[ebx+104h], eax
		mov	byte ptr [ebx+108h], 20h
		jz	short loc_71037E37

loc_71037DED:				; CODE XREF: sub_71037CF0+2BFj
		lea	ecx, [eax+1]

loc_71037DF0:				; CODE XREF: sub_71037CF0+189j
		mov	byte ptr [ebx+eax+4], 28h
		mov	eax, ebx
		mov	[ebx+104h], ecx
		xor	ecx, ecx
		mov	byte ptr [ebx+108h], 28h
		call	sub_71038000
		mov	edx, [ebx+104h]
		cmp	edx, 0FFh
		lea	eax, [edx+1]
		jz	loc_71037FB4

loc_71037E20:				; CODE XREF: sub_71037CF0+2FEj
		mov	byte ptr [ebx+edx+4], 29h
		mov	[ebx+104h], eax
		mov	byte ptr [ebx+108h], 29h
		jmp	loc_71037D31
; ---------------------------------------------------------------------------

loc_71037E37:				; CODE XREF: sub_71037CF0+FBj
		mov	eax, [ebx+110h]
		mov	[esp+2Ch+var_10], edx
		mov	byte ptr [ebx+103h], 0
		mov	[esp+2Ch+var_28], 0FFh
		mov	[esp+2Ch+var_24], eax
		mov	[esp+2Ch+var_2C], edi
		call	dword ptr [ebx+10Ch]
		mov	ecx, 1
		xor	eax, eax
		mov	dword ptr [ebx+104h], 0
		mov	edx, [esp+2Ch+var_10]
		add	dword ptr [ebx+124h], 1
		jmp	loc_71037DF0
; ---------------------------------------------------------------------------

loc_71037E7E:				; CODE XREF: sub_71037CF0+49j
		mov	eax, [ebx+110h]
		mov	byte ptr [ebx+103h], 0
		mov	[esp+2Ch+var_24], eax
		mov	eax, [ebx+104h]
		mov	[esp+2Ch+var_28], eax
		lea	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [ebx+10Ch]
		mov	edx, 1
		xor	eax, eax
		mov	dword ptr [ebx+104h], 0
		add	dword ptr [ebx+124h], 1
		jmp	loc_71037D3F
; ---------------------------------------------------------------------------

loc_71037EC2:				; CODE XREF: sub_71037CF0+9Ej
		mov	eax, [ebx+110h]
		mov	byte ptr [ebx+103h], 0
		mov	[esp+2Ch+var_24], eax
		mov	eax, [ebx+104h]
		mov	[esp+2Ch+var_28], eax
		lea	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [ebx+10Ch]
		mov	edx, 1
		xor	eax, eax
		mov	dword ptr [ebx+104h], 0
		add	dword ptr [ebx+124h], 1
		jmp	loc_71037D94
; ---------------------------------------------------------------------------

loc_71037F06:				; CODE XREF: sub_71037CF0+6Aj
		mov	eax, [ebx+110h]
		mov	byte ptr [ebx+103h], 0
		mov	[esp+2Ch+var_24], eax
		mov	eax, [ebx+104h]
		mov	[esp+2Ch+var_28], eax
		lea	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [ebx+10Ch]
		mov	eax, 1
		xor	edx, edx
		mov	dword ptr [ebx+104h], 0
		add	dword ptr [ebx+124h], 1
		jmp	loc_71037D60
; ---------------------------------------------------------------------------
		align 10h

loc_71037F50:				; CODE XREF: sub_71037CF0+C6j
		xor	ecx, ecx
		mov	eax, ebx
		call	sub_71038000
		mov	edx, [ebx+104h]
		jmp	loc_71037D51
; ---------------------------------------------------------------------------

loc_71037F64:				; CODE XREF: sub_71037CF0+DBj
		mov	eax, [ebx+110h]
		mov	[esp+2Ch+var_10], edx
		mov	byte ptr [ebx+103h], 0
		mov	[esp+2Ch+var_28], 0FFh
		mov	[esp+2Ch+var_24], eax
		mov	[esp+2Ch+var_2C], edi
		call	dword ptr [ebx+10Ch]
		mov	eax, 1
		mov	edx, [esp+2Ch+var_10]
		add	dword ptr [ebx+124h], 1
		mov	byte ptr [ebx+4], 20h
		mov	dword ptr [ebx+104h], 1
		mov	byte ptr [ebx+108h], 20h
		jmp	loc_71037DED
; ---------------------------------------------------------------------------

loc_71037FB4:				; CODE XREF: sub_71037CF0+12Aj
		mov	eax, [ebx+110h]
		mov	byte ptr [ebx+103h], 0
		mov	[esp+2Ch+var_28], 0FFh
		mov	[esp+2Ch+var_2C], edi
		mov	[esp+2Ch+var_24], eax
		call	dword ptr [ebx+10Ch]
		mov	eax, 1
		xor	edx, edx
		mov	dword ptr [ebx+104h], 0
		add	dword ptr [ebx+124h], 1
		jmp	loc_71037E20
sub_71037CF0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71038000	proc near		; CODE XREF: sub_71037CF0+36p
					; sub_71037CF0+116p ...
		push	ebp
		mov	ebp, ecx
		push	edi
		push	esi
		mov	esi, eax
		push	ebx
		mov	ebx, edx
		sub	esp, 0Ch
		test	edx, edx
		jnz	short loc_71038051
		jmp	short loc_71038080
; ---------------------------------------------------------------------------

loc_71038013:				; CODE XREF: sub_71038000+64j
		mov	edx, [ebx+4]

loc_71038016:				; CODE XREF: sub_71038000+71j
		mov	eax, [ebx+0Ch]
		mov	edi, [esi+114h]
		mov	dword ptr [ebx+8], 1
		mov	[esi+114h], eax
		mov	eax, [edx]
		cmp	eax, 25h
		jz	short loc_71038088
		cmp	eax, 26h
		jz	short loc_7103809F
		cmp	eax, 2
		jz	short loc_710380B6
		mov	eax, esi
		nop
		call	sub_710397A0
		mov	[esi+114h], edi

loc_7103804B:				; CODE XREF: sub_71038000+60j
		mov	ebx, [ebx]
		test	ebx, ebx
		jz	short loc_71038080

loc_71038051:				; CODE XREF: sub_71038000+Fj
					; sub_71038000+77j
		mov	edx, [esi+11Ch]
		test	edx, edx
		jnz	short loc_71038080
		mov	eax, [ebx+8]
		test	eax, eax
		jnz	short loc_7103804B
		test	ebp, ebp
		jnz	short loc_71038013
		mov	edx, [ebx+4]
		mov	eax, [edx]
		sub	eax, 1Ah
		cmp	eax, 2
		ja	short loc_71038016
		mov	ebx, [ebx]
		test	ebx, ebx
		jnz	short loc_71038051
		lea	esi, [esi+0]

loc_71038080:				; CODE XREF: sub_71038000+11j
					; sub_71038000+4Fj ...
		add	esp, 0Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_71038088:				; CODE XREF: sub_71038000+31j
		mov	ecx, [ebx]
		mov	eax, esi
		call	sub_71038130
		mov	[esi+114h], edi
		add	esp, 0Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_7103809F:				; CODE XREF: sub_71038000+36j
		mov	ecx, [ebx]
		mov	eax, esi
		call	sub_71037CF0
		mov	[esi+114h], edi
		add	esp, 0Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_710380B6:				; CODE XREF: sub_71038000+3Bj
		mov	ebp, [esi+118h]
		mov	eax, esi
		mov	dword ptr [esi+118h], 0
		mov	edx, [edx+4]
		call	sub_71038460
		test	byte ptr [esi],	4
		mov	[esi+118h], ebp
		jnz	short loc_71038119
		mov	edx, offset byte_7105BC34
		mov	eax, esi
		call	sub_71037C30

loc_710380E7:				; CODE XREF: sub_71038000+125j
		mov	eax, [ebx+4]
		mov	edx, [eax+8]
		mov	eax, [edx]
		sub	eax, 1Ah
		cmp	eax, 2
		ja	short loc_71038104

loc_710380F7:				; CODE XREF: sub_71038000+102j
		mov	edx, [edx+4]
		mov	eax, [edx]
		sub	eax, 1Ah
		cmp	eax, 2
		jbe	short loc_710380F7

loc_71038104:				; CODE XREF: sub_71038000+F5j
		mov	eax, esi
		call	sub_71038460
		mov	[esi+114h], edi
		add	esp, 0Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_71038119:				; CODE XREF: sub_71038000+D9j
		mov	edx, 2Eh
		mov	eax, esi
		call	sub_71035ED0
		jmp	short loc_710380E7
sub_71038000	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71038130	proc near		; CODE XREF: sub_71038000+8Cp
					; sub_71038460+A49p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h

		push	ebp
		push	edi
		mov	edi, edx
		push	esi
		mov	esi, ecx
		push	ebx
		mov	ebx, eax
		sub	esp, 1Ch
		test	ecx, ecx
		jz	loc_710383C4
		mov	eax, ecx
		mov	ecx, [ecx+8]
		mov	edx, 1
		test	ecx, ecx
		jnz	loc_710383C4

loc_71038157:				; CODE XREF: sub_71038130+DDj
		mov	ecx, [eax+4]
		mov	ecx, [ecx]
		sub	ecx, 17h
		cmp	ecx, 10h
		ja	loc_71038202
		mov	ebp, edx
		shl	ebp, cl
		test	ebp, 10C47h
		mov	ecx, ebp
		jz	loc_710382A5
		movzx	eax, byte ptr [ebx+108h]

loc_71038181:				; CODE XREF: sub_71038130+18Ej
		cmp	al, 20h
		jz	loc_710382C4
		mov	edx, [ebx+104h]
		cmp	edx, 0FFh
		lea	eax, [edx+1]
		jz	loc_71038416

loc_7103819E:				; CODE XREF: sub_71038130+323j
		cmp	eax, 0FFh
		mov	byte ptr [ebx+edx+4], 20h
		lea	edx, [eax+1]
		mov	[ebx+104h], eax
		mov	byte ptr [ebx+108h], 20h
		jnz	loc_710382D8

loc_710381BE:				; CODE XREF: sub_71038130+1A2j
		mov	eax, [ebx+110h]
		mov	byte ptr [ebx+103h], 0
		mov	[esp+2Ch+var_24], eax
		mov	eax, [ebx+104h]
		mov	[esp+2Ch+var_28], eax
		lea	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [ebx+10Ch]
		mov	edx, 1
		xor	eax, eax
		mov	dword ptr [ebx+104h], 0
		add	dword ptr [ebx+124h], 1
		jmp	loc_710382D8
; ---------------------------------------------------------------------------

loc_71038202:				; CODE XREF: sub_71038130+32j
					; sub_71038130+17Bj
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_71038213
		mov	ebp, [eax+8]
		test	ebp, ebp
		jz	loc_71038157

loc_71038213:				; CODE XREF: sub_71038130+D6j
					; sub_71038130+29Fj
		mov	ebp, [ebx+118h]
		xor	ecx, ecx
		mov	edx, esi
		mov	eax, ebx
		mov	dword ptr [ebx+118h], 0
		call	sub_71038000
		mov	edx, [ebx+104h]
		cmp	edx, 0FFh
		lea	eax, [edx+1]
		jz	loc_7103833A

loc_71038243:				; CODE XREF: sub_71038130+204j
					; sub_71038130+249j
		mov	byte ptr [ebx+edx+4], 28h
		mov	[ebx+104h], eax
		mov	byte ptr [ebx+108h], 28h
		mov	edx, [edi+8]
		test	edx, edx
		jz	short loc_71038269
		mov	eax, ebx
		call	sub_71038460
		mov	eax, [ebx+104h]

loc_71038269:				; CODE XREF: sub_71038130+12Aj
		cmp	eax, 0FFh
		lea	edx, [eax+1]
		jz	loc_71038380

loc_71038277:				; CODE XREF: sub_71038130+28Fj
		mov	byte ptr [ebx+eax+4], 29h
		mov	ecx, 1
		mov	eax, ebx
		mov	[ebx+104h], edx
		mov	edx, esi
		mov	byte ptr [ebx+108h], 29h
		call	sub_71038000
		mov	[ebx+118h], ebp
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_710382A5:				; CODE XREF: sub_71038130+44j
		and	ecx, 380h
		jz	loc_71038202

loc_710382B1:				; CODE XREF: sub_71038130+299j
		movzx	eax, byte ptr [ebx+108h]
		cmp	al, 28h
		jz	short loc_710382C4
		cmp	al, 2Ah
		jnz	loc_71038181

loc_710382C4:				; CODE XREF: sub_71038130+53j
					; sub_71038130+18Aj
		mov	eax, [ebx+104h]
		cmp	eax, 0FFh
		lea	edx, [eax+1]
		jz	loc_710381BE

loc_710382D8:				; CODE XREF: sub_71038130+88j
					; sub_71038130+CDj
		mov	byte ptr [ebx+eax+4], 28h
		mov	ebp, [ebx+118h]
		xor	ecx, ecx
		mov	[ebx+104h], edx
		mov	eax, ebx
		mov	edx, esi
		mov	byte ptr [ebx+108h], 28h
		mov	dword ptr [ebx+118h], 0
		call	sub_71038000
		mov	eax, [ebx+104h]
		cmp	eax, 0FFh
		lea	edx, [eax+1]
		jz	loc_710383D4

loc_71038319:				; CODE XREF: sub_71038130+2E1j
		cmp	edx, 0FFh
		mov	byte ptr [ebx+eax+4], 29h
		lea	eax, [edx+1]
		mov	[ebx+104h], edx
		mov	byte ptr [ebx+108h], 29h
		jnz	loc_71038243

loc_7103833A:				; CODE XREF: sub_71038130+10Dj
		mov	eax, [ebx+110h]
		mov	byte ptr [ebx+103h], 0
		mov	[esp+2Ch+var_24], eax
		mov	eax, [ebx+104h]
		mov	[esp+2Ch+var_28], eax
		lea	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [ebx+10Ch]
		mov	eax, 1
		xor	edx, edx
		mov	dword ptr [ebx+104h], 0
		add	dword ptr [ebx+124h], 1
		jmp	loc_71038243
; ---------------------------------------------------------------------------
		align 10h

loc_71038380:				; CODE XREF: sub_71038130+141j
		mov	eax, [ebx+110h]
		mov	byte ptr [ebx+103h], 0
		mov	[esp+2Ch+var_24], eax
		mov	eax, [ebx+104h]
		mov	[esp+2Ch+var_28], eax
		lea	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [ebx+10Ch]
		mov	edx, 1
		xor	eax, eax
		mov	dword ptr [ebx+104h], 0
		add	dword ptr [ebx+124h], 1
		jmp	loc_71038277
; ---------------------------------------------------------------------------

loc_710383C4:				; CODE XREF: sub_71038130+Fj
					; sub_71038130+21j
		mov	ecx, [edi+4]
		test	ecx, ecx
		jnz	loc_710382B1
		jmp	loc_71038213
; ---------------------------------------------------------------------------

loc_710383D4:				; CODE XREF: sub_71038130+1E3j
		mov	eax, [ebx+110h]
		mov	byte ptr [ebx+103h], 0
		mov	[esp+2Ch+var_28], 0FFh
		mov	[esp+2Ch+var_24], eax
		lea	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [ebx+10Ch]
		mov	edx, 1
		xor	eax, eax
		mov	dword ptr [ebx+104h], 0
		add	dword ptr [ebx+124h], 1
		jmp	loc_71038319
; ---------------------------------------------------------------------------

loc_71038416:				; CODE XREF: sub_71038130+68j
		mov	eax, [ebx+110h]
		mov	byte ptr [ebx+103h], 0
		mov	[esp+2Ch+var_28], 0FFh
		mov	[esp+2Ch+var_24], eax
		lea	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [ebx+10Ch]
		mov	eax, 1
		xor	edx, edx
		mov	dword ptr [ebx+104h], 0
		add	dword ptr [ebx+124h], 1
		jmp	loc_7103819E
sub_71038130	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71038460	proc near		; CODE XREF: sub_71037CF0+8Bp
					; sub_71038000+CBp ...

var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_64		= byte ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= byte ptr -54h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 9Ch
		test	edx, edx
		mov	[esp+9Ch+var_10], ebx
		mov	ebx, eax
		mov	[esp+9Ch+var_4], ebp
		mov	ebp, edx
		mov	[esp+9Ch+var_C], esi
		mov	[esp+9Ch+var_8], edi
		jz	short loc_7103849B ; jumptable 710384C8	default	case
		mov	eax, [eax+11Ch]
		test	eax, eax
		jnz	short loc_710384A5 ; jumptable 71039139	default	case
		mov	eax, [edx]
		cmp	eax, 3Ch	; switch 61 cases
		jbe	short loc_710384C8

loc_7103849B:				; CODE XREF: sub_71038460+28j
					; sub_71038460:loc_710384C8j ...
		mov	dword ptr [ebx+11Ch], 1	; jumptable 710384C8 default case

loc_710384A5:				; CODE XREF: sub_71038460+32j
					; sub_71038460+85j ...
		mov	ebx, [esp+9Ch+var_10] ;	jumptable 71039139 default case
		mov	esi, [esp+9Ch+var_C]
		mov	edi, [esp+9Ch+var_8]
		mov	ebp, [esp+9Ch+var_4]
		add	esp, 9Ch
		retn
; ---------------------------------------------------------------------------

loc_710384C8:				; CODE XREF: sub_71038460+39j
		jmp	ds:off_7105BDE8[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_710384CF:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	edx, offset aVtableFor ; jumptable 710384C8 case 9

loc_710384D4:				; CODE XREF: sub_71038460+D7j
					; sub_71038460+DEj ...
		mov	eax, ebx
		call	sub_71037C30

loc_710384DB:				; CODE XREF: sub_71038460:loc_710384C8j
					; sub_71038460+786j
					; DATA XREF: ...
		mov	edx, [ebp+4]	; jumptable 710384C8 case 36
		mov	eax, ebx
		call	sub_71038460
		jmp	short loc_710384A5 ; jumptable 71039139	default	case
; ---------------------------------------------------------------------------

loc_710384E7:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	edx, offset aConstructionVt ; jumptable	710384C8 case 11
		mov	eax, ebx
		call	sub_71037C30
		mov	edx, [ebp+4]
		mov	eax, ebx
		call	sub_71038460
		mov	edx, offset aIn_0 ; "-in-"

loc_71038502:				; CODE XREF: sub_71038460+803j
		mov	eax, ebx
		call	sub_71037C30

loc_71038509:				; CODE XREF: sub_71038460:loc_710384C8j
					; sub_71038460+D0j ...
		mov	edx, [ebp+8]	; jumptable 710384C8 case 7
		mov	eax, ebx
		call	sub_71038460
		jmp	short loc_710384A5 ; jumptable 71039139	default	case
; ---------------------------------------------------------------------------

loc_71038515:				; CODE XREF: sub_71038460:loc_710384C8j
					; sub_71038460+181j
					; DATA XREF: ...
		mov	ecx, [ebp+8]	; jumptable 710384C8 case 22
		mov	eax, ebx
		mov	edx, [ebp+4]
		call	sub_71037B80
		jmp	short loc_710384A5 ; jumptable 71039139	default	case
; ---------------------------------------------------------------------------

loc_71038524:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	edx, 7Eh	; jumptable 710384C8 case 8
		mov	eax, ebx
		call	sub_71035ED0
		jmp	short loc_71038509 ; jumptable 710384C8	case 7
; ---------------------------------------------------------------------------

loc_71038532:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	edx, offset aVttFor ; jumptable	710384C8 case 10
		jmp	short loc_710384D4
; ---------------------------------------------------------------------------

loc_71038539:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	edx, offset aTypeinfoFor ; jumptable 710384C8 case 12
		jmp	short loc_710384D4
; ---------------------------------------------------------------------------

loc_71038540:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	edx, offset aTypeinfoNameFo ; jumptable	710384C8 case 13
		jmp	short loc_710384D4
; ---------------------------------------------------------------------------

loc_71038547:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	edx, offset aTypeinfoFnFor ; jumptable 710384C8	case 14
		jmp	short loc_710384D4
; ---------------------------------------------------------------------------

loc_7103854E:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	edx, offset aNonVirtualThun ; jumptable	710384C8 case 15
		jmp	loc_710384D4
; ---------------------------------------------------------------------------

loc_71038558:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	edx, [edx+4]	; jumptable 710384C8 case 60
		mov	eax, ebx
		call	sub_71035F50
		test	eax, eax
		jz	loc_710392DF
		cmp	dword ptr [eax], 2Ah
		jnz	loc_710384A5	; jumptable 71039139 default case
		mov	edx, [eax+4]
		xor	esi, esi
		test	edx, edx
		jnz	short loc_71038594
		jmp	loc_710384A5	; jumptable 71039139 default case
; ---------------------------------------------------------------------------

loc_71038581:				; CODE XREF: sub_71038460+13Cj
		cmp	dword ptr [eax], 2Ah
		jnz	short loc_7103859E
		mov	edi, [eax+4]
		test	edi, edi
		nop
		lea	esi, [esi+0]
		jz	short loc_7103859E
		mov	esi, edx

loc_71038594:				; CODE XREF: sub_71038460+11Aj
		mov	eax, [eax+8]
		lea	edx, [esi+1]
		test	eax, eax
		jnz	short loc_71038581

loc_7103859E:				; CODE XREF: sub_71038460+124j
					; sub_71038460+130j
		mov	[esp+9Ch+var_7C], edx
		xor	edi, edi
		mov	ebp, [ebp+4]
		jmp	short loc_710385BD
; ---------------------------------------------------------------------------
		align 10h

loc_710385B0:				; CODE XREF: sub_71038460+16Ej
					; sub_71038460+17Cj
		add	edi, 1
		cmp	[esp+9Ch+var_7C], edi
		jle	loc_710384A5	; jumptable 71039139 default case

loc_710385BD:				; CODE XREF: sub_71038460+147j
		mov	[ebx+120h], edi
		mov	edx, ebp
		mov	eax, ebx
		call	sub_71038460
		cmp	esi, edi
		jle	short loc_710385B0
		mov	edx, offset asc_7105BD50 ; ", "
		mov	eax, ebx
		call	sub_71037C30
		jmp	short loc_710385B0
; ---------------------------------------------------------------------------

loc_710385DE:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		test	byte ptr [ebx],	4 ; jumptable 710384C8 case 0
		jz	loc_71038515	; jumptable 710384C8 case 22
		mov	eax, [edx+4]
		mov	edi, [edx+8]
		add	edi, eax
		cmp	eax, edi
		jb	short loc_7103861B
		jmp	loc_710384A5	; jumptable 71039139 default case
; ---------------------------------------------------------------------------

loc_710385F8:				; CODE XREF: sub_71038460+1C2j
		movzx	edx, byte ptr [eax]
		lea	esi, [eax+1]
		cmp	dl, 5Fh
		jz	loc_71038F2C

loc_71038607:				; CODE XREF: sub_71038460+1CAj
					; sub_71038460+AD3j ...
		movsx	edx, dl
		mov	eax, ebx
		call	sub_71035ED0

loc_71038611:				; CODE XREF: sub_71038460+ECBj
		cmp	esi, edi
		jnb	loc_710384A5	; jumptable 71039139 default case
		mov	eax, esi

loc_7103861B:				; CODE XREF: sub_71038460+191j
		mov	edx, edi
		sub	edx, eax
		cmp	edx, 3
		jg	short loc_710385F8
		lea	esi, [eax+1]
		movzx	edx, byte ptr [eax]
		jmp	short loc_71038607
; ---------------------------------------------------------------------------

loc_7103862C:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	edx, [edx+4]	; jumptable 710384C8 cases 1,2
		mov	eax, ebx
		call	sub_71038460
		test	byte ptr [ebx],	4
		jnz	loc_71038FA2
		mov	edx, offset byte_7105BC34
		mov	eax, ebx
		call	sub_71037C30
		jmp	loc_71038509	; jumptable 710384C8 case 7
; ---------------------------------------------------------------------------

loc_71038650:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	eax, [ebx+118h]	; jumptable 710384C8 case 3
		mov	dword ptr [ebx+118h], 0
		mov	[esp+9Ch+var_74], eax
		mov	esi, [edx+4]
		test	esi, esi
		jz	loc_7103849B	; jumptable 710384C8 default case
		lea	edx, [esp+9Ch+var_64]
		mov	ecx, [ebx+114h]
		mov	[esp+9Ch+var_7C], edx
		mov	[ebx+118h], edx
		mov	edx, [esi]
		mov	dword ptr [esp+9Ch+var_64], 0
		mov	[esp+9Ch+var_60], esi
		mov	[esp+9Ch+var_5C], 0
		lea	eax, [edx-1Ah]
		cmp	eax, 2
		mov	[esp+9Ch+var_78], ecx
		mov	[esp+9Ch+var_58], ecx
		ja	loc_71039330
		lea	eax, [esp+9Ch+var_54]
		mov	edi, 1

loc_710386B6:				; CODE XREF: sub_71038460+297j
		mov	esi, [esi+4]
		test	esi, esi
		jz	loc_7103849B	; jumptable 710384C8 default case
		cmp	edi, 4
		jz	loc_7103849B	; jumptable 710384C8 default case
		mov	edx, [ebx+118h]
		add	edi, 1
		mov	[eax+4], esi
		mov	dword ptr [eax+8], 0
		mov	[eax], edx
		mov	edx, [esp+9Ch+var_78]
		mov	[ebx+118h], eax
		mov	[eax+0Ch], edx
		mov	edx, [esi]
		add	eax, 10h
		lea	ecx, [edx-1Ah]
		cmp	ecx, 2
		jbe	short loc_710386B6

loc_710386F9:				; CODE XREF: sub_71038460+ED5j
		cmp	edx, 4
		jz	loc_710392B5
		cmp	edx, 2
		jnz	loc_710387BE
		mov	edx, [esi+8]
		mov	eax, [edx]
		sub	eax, 1Ah
		cmp	eax, 2
		ja	loc_710387BE
		cmp	edi, 3
		ja	loc_7103849B	; jumptable 710384C8 default case
		mov	ecx, [esp+9Ch+var_7C]
		mov	eax, edi
		shl	eax, 4
		lea	eax, [eax+ecx-10h]
		mov	[esp+9Ch+var_80], eax
		mov	eax, edi
		shl	eax, 4
		lea	ecx, [eax+ecx-10h]
		mov	eax, edi
		mov	[esp+9Ch+var_70], ecx
		mov	ecx, [esp+9Ch+var_7C]
		shl	eax, 4
		add	ecx, eax
		mov	[esp+9Ch+var_78], ecx
		mov	ecx, [esp+9Ch+var_70]
		mov	[esp+9Ch+var_70], esi
		mov	esi, [esp+9Ch+var_78]
		mov	[esp+9Ch+var_78], ebp
		mov	eax, ecx
		jmp	short loc_71038778
; ---------------------------------------------------------------------------

loc_71038766:				; CODE XREF: sub_71038460+354j
		add	eax, 10h
		add	ecx, 10h
		add	esi, 10h
		cmp	edi, 3
		ja	loc_7103849B	; jumptable 710384C8 default case

loc_71038778:				; CODE XREF: sub_71038460+304j
		mov	ebp, [eax+4]
		add	edi, 1
		mov	[eax+10h], ecx
		mov	[eax+4], edx
		mov	[eax+14h], ebp
		mov	ebp, [eax+8]
		mov	dword ptr [eax+8], 0
		mov	[eax+18h], ebp
		mov	ebp, [eax+0Ch]
		mov	[eax+1Ch], ebp
		mov	ebp, [ebx+114h]
		mov	[ebx+118h], esi
		mov	[eax+0Ch], ebp
		mov	edx, [edx+4]
		mov	ebp, [edx]
		sub	ebp, 1Ah
		cmp	ebp, 2
		jbe	short loc_71038766
		mov	esi, [esp+9Ch+var_70]
		mov	ebp, [esp+9Ch+var_78]

loc_710387BE:				; CODE XREF: sub_71038460+2A5j
					; sub_71038460+2B6j ...
		mov	edx, [ebp+8]
		mov	eax, ebx
		call	sub_71038460
		cmp	dword ptr [esi], 4
		jz	loc_710392D0

loc_710387D1:				; CODE XREF: sub_71038460+E7Aj
		test	edi, edi
		jz	loc_710391A6
		mov	edx, [esp+9Ch+var_7C]
		mov	eax, edi
		shl	eax, 4
		lea	esi, [edx+eax-8]
		jmp	short loc_710387F3
; ---------------------------------------------------------------------------

loc_710387E8:				; CODE XREF: sub_71038460+39Aj
					; sub_71038460+3B2j
		sub	esi, 10h
		test	edi, edi
		jz	loc_710391A6

loc_710387F3:				; CODE XREF: sub_71038460+386j
		mov	ebp, [esi]
		sub	edi, 1
		test	ebp, ebp
		jnz	short loc_710387E8
		mov	eax, ebx
		mov	edx, 20h
		call	sub_71035ED0
		mov	edx, [esi-4]
		mov	eax, ebx
		call	sub_710397A0
		jmp	short loc_710387E8
; ---------------------------------------------------------------------------

loc_71038814:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	edx, offset aJavaClassFor ; jumptable 710384C8 case 18
		jmp	loc_710384D4
; ---------------------------------------------------------------------------

loc_7103881E:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	edx, offset aGuardVariableF ; jumptable	710384C8 case 19
		jmp	loc_710384D4
; ---------------------------------------------------------------------------

loc_71038828:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		cmp	word ptr [edx+0Ah], 0 ;	jumptable 710384C8 case	40
		jnz	loc_71038FD9

loc_71038833:				; CODE XREF: sub_71038460+B85j
		mov	edx, [ebp+4]
		cmp	dword ptr [edx+4], offset off_7105C180
		jz	short loc_71038852
		mov	eax, ebx
		call	sub_71038460
		mov	edx, 20h
		mov	eax, ebx
		call	sub_71035ED0

loc_71038852:				; CODE XREF: sub_71038460+3DDj
		cmp	word ptr [ebp+8], 0
		jz	loc_71038FC8
		mov	edx, offset a_accum ; "_Accum"
		mov	eax, ebx
		call	sub_71037C30
		jmp	loc_710384A5	; jumptable 71039139 default case
; ---------------------------------------------------------------------------

loc_7103886E:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	edx, [edx+4]	; jumptable 710384C8 cases 41,42
		test	edx, edx
		jz	short loc_7103887C
		mov	eax, ebx
		call	sub_71038460

loc_7103887C:				; CODE XREF: sub_71038460+413j
		mov	eax, [ebp+8]
		test	eax, eax
		jz	loc_710384A5	; jumptable 71039139 default case
		mov	eax, [ebx+104h]
		cmp	eax, 0FDh
		ja	loc_71039060

loc_71038898:				; CODE XREF: sub_71038460+C30j
		mov	edx, offset asc_7105BD50 ; ", "
		mov	eax, ebx
		call	sub_71037C30
		mov	edx, [ebp+8]
		mov	eax, ebx
		mov	esi, [ebx+124h]
		mov	edi, [ebx+104h]
		call	sub_71038460
		cmp	[ebx+124h], esi
		jnz	loc_710384A5	; jumptable 71039139 default case
		mov	eax, [ebx+104h]
		cmp	eax, edi
		jnz	loc_710384A5	; jumptable 71039139 default case
		sub	eax, 2
		mov	[ebx+104h], eax
		jmp	loc_710384A5	; jumptable 71039139 default case
; ---------------------------------------------------------------------------

loc_710388E2:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	edi, [ebx+118h]	; jumptable 710384C8 cases 26-34

loc_710388E8:				; CODE XREF: sub_71038460+754j
					; sub_71038460+764j ...
		lea	eax, [esp+9Ch+var_64]
		mov	[ebx+118h], eax
		mov	eax, [ebx+114h]
		mov	dword ptr [esp+9Ch+var_64], edi
		mov	[esp+9Ch+var_60], ebp
		mov	[esp+9Ch+var_5C], 0
		mov	[esp+9Ch+var_58], eax
		mov	edx, [ebp+4]
		mov	eax, ebx
		call	sub_71038460
		mov	esi, [esp+9Ch+var_5C]
		test	esi, esi
		jnz	short loc_71038927
		mov	edx, ebp
		mov	eax, ebx
		call	sub_710397A0

loc_71038927:				; CODE XREF: sub_71038460+4BCj
					; sub_71038460+71Fj ...
		mov	eax, dword ptr [esp+9Ch+var_64]
		mov	[ebx+118h], eax
		jmp	loc_710384A5	; jumptable 71039139 default case
; ---------------------------------------------------------------------------

loc_71038936:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	eax, ebx	; jumptable 710384C8 case 45
		mov	edx, offset aOperator ;	"operator "
		call	sub_71037C30
		mov	edx, ebp
		mov	eax, ebx
		call	sub_71039890
		jmp	loc_710384A5	; jumptable 71039139 default case
; ---------------------------------------------------------------------------

loc_71038950:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	edx, [edx+4]	; jumptable 710384C8 case 46
		cmp	dword ptr [edx], 2Dh
		jz	loc_71038FFC
		mov	eax, ebx
		xchg	ax, ax
		call	sub_71039A30

loc_71038965:				; CODE XREF: sub_71038460+BBEj
		mov	edx, [ebp+8]
		mov	eax, ebx
		call	sub_71039B10
		jmp	loc_710384A5	; jumptable 71039139 default case
; ---------------------------------------------------------------------------

loc_71038974:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	eax, [edx+8]	; jumptable 710384C8 case 47
		cmp	dword ptr [eax], 30h
		jnz	loc_7103849B	; jumptable 710384C8 default case
		mov	edx, [edx+4]
		cmp	dword ptr [edx], 2Bh
		jz	loc_71039212

loc_7103898C:				; CODE XREF: sub_71038460+DB9j
					; sub_71038460+DC5j ...
		mov	edx, [eax+4]
		mov	eax, ebx
		mov	edi, offset aIx	; "ix"
		call	sub_71039B10
		mov	edx, [ebp+4]
		mov	ecx, 3
		mov	eax, [edx+4]
		mov	eax, [eax]
		mov	[esp+9Ch+var_7C], eax
		mov	esi, eax
		repe cmpsb
		jz	loc_710391E8
		mov	esi, [esp+9Ch+var_7C]
		mov	edi, offset aCl	; "cl"
		mov	ecx, 3
		repe cmpsb
		jnz	loc_7103929B

loc_710389CC:				; CODE XREF: sub_71038460+E45j
		mov	eax, [ebp+8]
		mov	edx, [eax+8]
		mov	eax, ebx
		call	sub_71039B10

loc_710389D9:				; CODE XREF: sub_71038460+DADj
		mov	eax, [ebp+4]
		cmp	dword ptr [eax], 2Bh
		jnz	loc_710384A5	; jumptable 71039139 default case
		mov	eax, [eax+4]
		cmp	dword ptr [eax+8], 1
		jnz	loc_710384A5	; jumptable 71039139 default case
		mov	eax, [eax+4]
		cmp	byte ptr [eax],	3Eh
		jnz	loc_710384A5	; jumptable 71039139 default case

loc_710389FE:				; CODE XREF: sub_71038460+AAEj
		mov	edx, 29h
		mov	eax, ebx
		call	sub_71035ED0
		jmp	loc_710384A5	; jumptable 71039139 default case
; ---------------------------------------------------------------------------

loc_71038A0F:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		movsx	edx, byte ptr [edx+4] ;	jumptable 710384C8 case	56
		mov	eax, ebx
		call	sub_71035ED0
		jmp	loc_710384A5	; jumptable 71039139 default case
; ---------------------------------------------------------------------------

loc_71038A1F:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	esi, [ebx+118h]	; jumptable 710384C8 case 38
		lea	ecx, [esp+9Ch+var_64]
		mov	eax, [ebx+114h]
		mov	[esp+9Ch+var_7C], ecx
		mov	[ebx+118h], ecx
		mov	[esp+9Ch+var_78], esi
		mov	[esp+9Ch+var_58], eax
		mov	eax, [esp+9Ch+var_78]
		mov	dword ptr [esp+9Ch+var_64], esi
		mov	esi, ecx
		mov	[esp+9Ch+var_60], edx
		mov	[esp+9Ch+var_5C], 0
		test	eax, eax
		jz	loc_710392AA
		mov	edx, [esp+9Ch+var_78]
		mov	eax, [edx+4]
		mov	eax, [eax]
		sub	eax, 17h
		cmp	eax, 2
		ja	loc_710392AA
		mov	eax, edx
		mov	edi, 1
		mov	[esp+9Ch+var_74], ebp
		jmp	short loc_71038A8E
; ---------------------------------------------------------------------------

loc_71038A81:				; CODE XREF: sub_71038460+67Dj
		mov	edx, [eax+4]
		mov	edx, [edx]
		sub	edx, 17h
		cmp	edx, 2
		ja	short loc_71038ADF

loc_71038A8E:				; CODE XREF: sub_71038460+61Fj
		mov	ebp, [eax+8]
		test	ebp, ebp
		jnz	short loc_71038AD9
		cmp	edi, 3
		ja	loc_7103849B	; jumptable 710384C8 default case
		mov	ebp, [eax]
		mov	edx, edi
		add	edi, 1
		shl	edx, 4
		lea	ecx, [esp+edx+9Ch+var_64]
		mov	dword ptr [esp+edx+9Ch+var_64],	ebp
		mov	ebp, [eax+4]
		mov	[ecx+4], ebp
		mov	ebp, [eax+8]
		mov	[ecx+8], ebp
		mov	ebp, [eax+0Ch]
		mov	[ecx+0Ch], ebp
		mov	dword ptr [esp+edx+9Ch+var_64],	esi
		mov	esi, [esp+9Ch+var_7C]
		mov	dword ptr [eax+8], 1
		add	esi, edx
		mov	[ebx+118h], esi

loc_71038AD9:				; CODE XREF: sub_71038460+633j
		mov	eax, [eax]
		test	eax, eax
		jnz	short loc_71038A81

loc_71038ADF:				; CODE XREF: sub_71038460+62Cj
		mov	ebp, [esp+9Ch+var_74]

loc_71038AE3:				; CODE XREF: sub_71038460+E50j
		mov	edx, [ebp+8]
		mov	eax, ebx
		call	sub_71038460
		mov	ecx, [esp+9Ch+var_78]
		mov	[ebx+118h], ecx
		mov	ecx, [esp+9Ch+var_5C]
		test	ecx, ecx
		jnz	loc_710384A5	; jumptable 71039139 default case
		cmp	edi, 1
		jz	short loc_71038B33
		mov	edx, [esp+9Ch+var_7C]
		mov	eax, edi
		shl	eax, 4
		lea	esi, [edx+eax-0Ch]

loc_71038B15:				; CODE XREF: sub_71038460+6C7j
		mov	edx, [esi]
		sub	edi, 1
		mov	eax, ebx
		sub	esi, 10h
		call	sub_710397A0
		cmp	edi, 1
		ja	short loc_71038B15
		mov	ecx, [ebx+118h]
		mov	[esp+9Ch+var_78], ecx

loc_71038B33:				; CODE XREF: sub_71038460+6A6j
		mov	ecx, [esp+9Ch+var_78]
		mov	edx, ebp
		mov	eax, ebx
		call	sub_71037CF0
		jmp	loc_710384A5	; jumptable 71039139 default case
; ---------------------------------------------------------------------------

loc_71038B45:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	eax, [ebx+118h]	; jumptable 710384C8 case 39
		mov	[esp+9Ch+var_60], edx
		mov	[esp+9Ch+var_5C], 0
		mov	dword ptr [esp+9Ch+var_64], eax
		lea	eax, [esp+9Ch+var_64]
		mov	[ebx+118h], eax
		mov	eax, [ebx+114h]
		mov	[esp+9Ch+var_58], eax
		mov	edx, [edx+8]
		mov	eax, ebx
		call	sub_71038460
		mov	edx, [esp+9Ch+var_5C]
		test	edx, edx
		jnz	loc_71038927
		mov	eax, ebx
		mov	edx, 20h
		call	sub_71035ED0
		mov	edx, [ebp+4]
		mov	eax, ebx
		call	sub_71038460
		mov	edx, offset asc_7105BD38 ; "::*"
		mov	eax, ebx
		call	sub_71037C30
		jmp	loc_71038927
; ---------------------------------------------------------------------------

loc_71038BAC:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	edi, [ebx+118h]	; jumptable 710384C8 cases 23-25
		test	edi, edi
		jz	loc_710388E8
		mov	edx, edi
		jmp	short loc_71038BCA
; ---------------------------------------------------------------------------
		align 10h

loc_71038BC0:				; CODE XREF: sub_71038460+76Fj
					; sub_71038460+784j
		mov	edx, [edx]
		test	edx, edx
		jz	loc_710388E8

loc_71038BCA:				; CODE XREF: sub_71038460+75Cj
		mov	ecx, [edx+8]
		test	ecx, ecx
		jnz	short loc_71038BC0
		mov	ecx, [edx+4]
		mov	ecx, [ecx]
		lea	esi, [ecx-17h]
		cmp	esi, 2
		ja	loc_710388E8
		cmp	eax, ecx
		jnz	short loc_71038BC0
		jmp	loc_710384DB	; jumptable 710384C8 case 36
; ---------------------------------------------------------------------------

loc_71038BEB:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	edx, offset aParm ; jumptable 710384C8 case 6
		mov	eax, ebx
		call	sub_71037C30
		mov	eax, [ebp+4]
		lea	esi, [esp+9Ch+var_64]
		mov	[esp+9Ch+var_98], offset aLd ; "%ld"
		mov	[esp+9Ch+var_9C], esi ;	char *
		mov	[esp+9Ch+var_94], eax
		call	sprintf
		mov	edx, esi
		mov	eax, ebx
		call	sub_71037C30
		jmp	loc_710384A5	; jumptable 71039139 default case
; ---------------------------------------------------------------------------

loc_71038C20:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	edx, offset aOperator_0	; jumptable 710384C8 case 43
		mov	eax, ebx
		call	sub_71037C30
		mov	eax, [ebp+4]
		mov	edx, [eax+4]
		movzx	ecx, byte ptr [edx]
		sub	ecx, 61h
		cmp	cl, 19h
		ja	short loc_71038C4F
		mov	edx, 20h
		mov	eax, ebx
		call	sub_71035ED0
		mov	eax, [ebp+4]
		mov	edx, [eax+4]

loc_71038C4F:				; CODE XREF: sub_71038460+7DBj
		mov	ecx, [eax+8]
		mov	eax, ebx
		call	sub_71037B80
		jmp	loc_710384A5	; jumptable 71039139 default case
; ---------------------------------------------------------------------------

loc_71038C5E:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	edx, offset aOperator ;	jumptable 710384C8 case	44
		jmp	loc_71038502
; ---------------------------------------------------------------------------

loc_71038C68:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	edx, offset aReferenceTempo ; jumptable	710384C8 case 20
		jmp	loc_710384D4
; ---------------------------------------------------------------------------

loc_71038C72:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	edx, offset aHiddenAliasFor ; jumptable	710384C8 case 21
		jmp	loc_710384D4
; ---------------------------------------------------------------------------

loc_71038C7C:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	edx, offset aGlobalDestruct ; jumptable	710384C8 case 59
		jmp	loc_710384D4
; ---------------------------------------------------------------------------

loc_71038C86:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	edx, [edx+4]	; jumptable 710384C8 cases 52,53
		xor	esi, esi
		cmp	dword ptr [edx], 23h
		jnz	short loc_71038CAD
		mov	edx, [edx+4]
		mov	esi, [edx+10h]
		cmp	esi, 1
		jb	short loc_71038CAD
		cmp	esi, 6
		jbe	loc_71039110
		cmp	esi, 7
		jz	loc_710390C5

loc_71038CAD:				; CODE XREF: sub_71038460+82Ej
					; sub_71038460+839j ...
		mov	edx, 28h
		mov	eax, ebx
		call	sub_71035ED0
		mov	edx, [ebp+4]
		mov	eax, ebx
		call	sub_71038460
		mov	edx, 29h
		mov	eax, ebx
		call	sub_71035ED0
		cmp	dword ptr [ebp+0], 35h
		jz	loc_710391D7

loc_71038CD9:				; CODE XREF: sub_71038460+D83j
		cmp	esi, 8
		jnz	loc_71038509	; jumptable 710384C8 case 7
		mov	eax, ebx
		mov	edx, 5Bh
		call	sub_71035ED0
		mov	edx, [ebp+8]
		mov	eax, ebx
		call	sub_71038460
		mov	edx, 5Dh
		mov	eax, ebx
		call	sub_71035ED0
		jmp	loc_710384A5	; jumptable 71039139 default case
; ---------------------------------------------------------------------------

loc_71038D09:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	eax, [ebx+118h]	; jumptable 710384C8 case 4
		test	byte ptr [ebx],	4
		mov	dword ptr [ebx+118h], 0
		mov	[esp+9Ch+var_7C], eax
		mov	edx, [edx+4]
		jz	short loc_71038D35
		mov	esi, [edx]
		test	esi, esi
		jnz	short loc_71038D35
		cmp	dword ptr [edx+8], 6
		jz	loc_71039249

loc_71038D35:				; CODE XREF: sub_71038460+8C3j
					; sub_71038460+8C9j ...
		mov	eax, ebx
		call	sub_71038460
		cmp	byte ptr [ebx+108h], 3Ch
		jz	loc_710391C6

loc_71038D49:				; CODE XREF: sub_71038460+D72j
		mov	edx, 3Ch
		mov	eax, ebx
		call	sub_71035ED0
		mov	edx, [ebp+8]
		mov	eax, ebx
		call	sub_71038460
		cmp	byte ptr [ebx+108h], 3Eh
		jz	loc_710391B5

loc_71038D6C:				; CODE XREF: sub_71038460+D61j
		mov	edx, 3Eh
		mov	eax, ebx
		call	sub_71035ED0

loc_71038D78:				; CODE XREF: sub_71038460+E14j
		mov	edx, [esp+9Ch+var_7C]
		mov	[ebx+118h], edx
		jmp	loc_710384A5	; jumptable 71039139 default case
; ---------------------------------------------------------------------------

loc_71038D87:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	esi, [ebx+114h]	; jumptable 710384C8 case 5
		test	esi, esi
		jz	loc_71039197
		mov	eax, [esi+4]
		mov	edx, [edx+4]
		mov	eax, [eax+8]
		test	eax, eax
		jnz	short loc_71038DBD
		jmp	loc_7103849B	; jumptable 710384C8 default case
; ---------------------------------------------------------------------------

loc_71038DA7:				; CODE XREF: sub_71038460+960j
		test	edx, edx
		jle	loc_71039023
		mov	eax, [eax+8]
		sub	edx, 1
		test	eax, eax
		jz	loc_7103849B	; jumptable 710384C8 default case

loc_71038DBD:				; CODE XREF: sub_71038460+940j
		cmp	dword ptr [eax], 2Ah
		jz	short loc_71038DA7
		jmp	loc_7103849B	; jumptable 710384C8 default case
; ---------------------------------------------------------------------------

loc_71038DC7:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	eax, [edx+8]	; jumptable 710384C8 case 49
		cmp	dword ptr [eax], 32h
		lea	esi, [esi+0]
		jnz	loc_7103849B	; jumptable 710384C8 default case
		mov	edx, [eax+8]
		cmp	dword ptr [edx], 33h
		jnz	loc_7103849B	; jumptable 710384C8 default case
		mov	edx, [eax+4]
		mov	eax, ebx
		call	sub_71039B10
		mov	edx, [ebp+4]
		mov	eax, ebx
		call	sub_71039A30
		mov	eax, [ebp+8]
		mov	eax, [eax+8]
		mov	edx, [eax+4]
		mov	eax, ebx
		call	sub_71039B10
		mov	eax, ebx
		mov	edx, offset asc_7105BD69 ; " : "
		call	sub_71037C30
		mov	eax, [ebp+8]
		mov	eax, [eax+8]
		mov	edx, [eax+8]
		mov	eax, ebx
		call	sub_71039B10
		jmp	loc_710384A5	; jumptable 71039139 default case
; ---------------------------------------------------------------------------

loc_71038E27:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		test	byte ptr [ebx],	20h ; jumptable	710384C8 case 37
		jnz	loc_71038FEA

loc_71038E30:				; CODE XREF: sub_71038460+B97j
		mov	ecx, [ebp+4]
		test	ecx, ecx
		jz	short loc_71038E96
		mov	eax, [ebx+118h]
		mov	[esp+9Ch+var_60], ebp
		mov	[esp+9Ch+var_5C], 0
		mov	dword ptr [esp+9Ch+var_64], eax
		lea	eax, [esp+9Ch+var_64]
		mov	[ebx+118h], eax
		mov	eax, [ebx+114h]
		mov	[esp+9Ch+var_58], eax
		mov	edx, [ebp+4]
		mov	eax, ebx
		call	sub_71038460
		mov	edx, [esp+9Ch+var_5C]
		mov	eax, dword ptr [esp+9Ch+var_64]
		test	edx, edx
		mov	[ebx+118h], eax
		jnz	loc_710384A5	; jumptable 71039139 default case
		test	byte ptr [ebx],	20h
		jnz	loc_710384A5	; jumptable 71039139 default case
		mov	edx, 20h
		mov	eax, ebx
		call	sub_71035ED0

loc_71038E96:				; CODE XREF: sub_71038460+9D5j
		test	byte ptr [ebx],	20h
		jnz	loc_710384A5	; jumptable 71039139 default case
		mov	ecx, [ebx+118h]
		mov	edx, ebp
		mov	eax, ebx
		call	sub_71038130
		jmp	loc_710384A5	; jumptable 71039139 default case
; ---------------------------------------------------------------------------

loc_71038EB3:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	edx, offset aGlobalConstruc ; jumptable	710384C8 case 58
		jmp	loc_710384D4
; ---------------------------------------------------------------------------

loc_71038EBD:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	edx, offset aVirtualThunkTo ; jumptable	710384C8 case 16
		jmp	loc_710384D4
; ---------------------------------------------------------------------------

loc_71038EC7:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	edx, offset aCovariantRetur ; jumptable	710384C8 case 17
		jmp	loc_710384D4
; ---------------------------------------------------------------------------

loc_71038ED1:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		test	byte ptr [ebx],	4 ; jumptable 710384C8 case 35
		jnz	loc_71038FB3
		mov	eax, [edx+4]
		mov	ecx, [eax+4]
		mov	edx, [eax]
		mov	eax, ebx
		call	sub_71037B80
		jmp	loc_710384A5	; jumptable 71039139 default case
; ---------------------------------------------------------------------------

loc_71038EEE:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	edx, offset aJavaResource ; jumptable 710384C8 case 54
		jmp	loc_710384D4
; ---------------------------------------------------------------------------

loc_71038EF8:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	eax, ebx	; jumptable 710384C8 case 57
		mov	edx, offset aDecltype ;	"decltype ("
		call	sub_71037C30
		mov	edx, [ebp+4]
		mov	eax, ebx
		call	sub_71038460
		jmp	loc_710389FE
; ---------------------------------------------------------------------------

loc_71038F13:				; CODE XREF: sub_71038460:loc_710384C8j
					; DATA XREF: .rdata:off_7105BDE8o
		mov	edx, [edx+4]	; jumptable 710384C8 case 55
		mov	eax, ebx
		call	sub_71038460
		mov	edx, [ebp+8]
		mov	eax, ebx
		call	sub_71038460
		jmp	loc_710384A5	; jumptable 71039139 default case
; ---------------------------------------------------------------------------

loc_71038F2C:				; CODE XREF: sub_71038460+1A1j
		cmp	byte ptr [eax+1], 5Fh
		lea	esi, [eax+1]
		jnz	loc_71038607
		cmp	byte ptr [eax+2], 55h
		lea	esi, [esi+0]
		jnz	loc_71038607
		lea	ebp, [eax+3]
		cmp	edi, ebp
		jbe	loc_71038607
		xor	ecx, ecx
		mov	[esp+9Ch+var_7C], esi
		mov	esi, ecx
		jmp	short loc_71038F72
; ---------------------------------------------------------------------------

loc_71038F5B:				; CODE XREF: sub_71038460+B1Cj
		movsx	eax, al
		sub	eax, 30h

loc_71038F61:				; CODE XREF: sub_71038460+B2Cj
					; sub_71038460+B40j
		add	ebp, 1
		cmp	edi, ebp
		jbe	loc_71039240
		shl	esi, 4
		lea	esi, [eax+esi]

loc_71038F72:				; CODE XREF: sub_71038460+AF9j
		movzx	eax, byte ptr [ebp+0]
		lea	ecx, [eax-30h]
		cmp	cl, 9
		jbe	short loc_71038F5B
		lea	ecx, [eax-41h]
		cmp	cl, 5
		ja	short loc_71038F8E
		movsx	eax, al
		sub	eax, 37h
		jmp	short loc_71038F61
; ---------------------------------------------------------------------------

loc_71038F8E:				; CODE XREF: sub_71038460+B24j
		lea	ecx, [eax-61h]
		cmp	cl, 5
		ja	loc_710392FA
		movsx	eax, al
		sub	eax, 57h
		jmp	short loc_71038F61
; ---------------------------------------------------------------------------

loc_71038FA2:				; CODE XREF: sub_71038460+1D9j
		mov	edx, 2Eh
		mov	eax, ebx
		call	sub_71035ED0
		jmp	loc_71038509	; jumptable 710384C8 case 7
; ---------------------------------------------------------------------------

loc_71038FB3:				; CODE XREF: sub_71038460+A74j
		mov	eax, [edx+4]
		mov	ecx, [eax+0Ch]
		mov	edx, [eax+8]
		mov	eax, ebx
		call	sub_71037B80
		jmp	loc_710384A5	; jumptable 71039139 default case
; ---------------------------------------------------------------------------

loc_71038FC8:				; CODE XREF: sub_71038460+3F7j
		mov	edx, offset a_fract ; "_Fract"
		mov	eax, ebx
		call	sub_71037C30
		jmp	loc_710384A5	; jumptable 71039139 default case
; ---------------------------------------------------------------------------

loc_71038FD9:				; CODE XREF: sub_71038460+3CDj
		mov	edx, offset a_sat ; "_Sat "
		mov	eax, ebx
		call	sub_71037C30
		jmp	loc_71038833
; ---------------------------------------------------------------------------

loc_71038FEA:				; CODE XREF: sub_71038460+9CAj
		mov	ecx, [ebx+118h]
		mov	eax, ebx
		call	sub_71038130
		jmp	loc_71038E30
; ---------------------------------------------------------------------------

loc_71038FFC:				; CODE XREF: sub_71038460+4F6j
		mov	eax, ebx
		mov	edx, 28h
		call	sub_71035ED0
		mov	edx, [ebp+4]
		mov	eax, ebx
		call	sub_71039890
		mov	edx, 29h
		mov	eax, ebx
		call	sub_71035ED0
		jmp	loc_71038965
; ---------------------------------------------------------------------------

loc_71039023:				; CODE XREF: sub_71038460+949j
		test	eax, eax
		jz	loc_7103849B	; jumptable 710384C8 default case
		test	edx, edx
		lea	esi, [esi+0]
		jnz	loc_7103849B	; jumptable 710384C8 default case
		mov	edx, [eax+4]
		test	edx, edx
		jz	loc_7103849B	; jumptable 710384C8 default case
		cmp	dword ptr [edx], 2Ah
		jz	short loc_71039095

loc_71039046:				; CODE XREF: sub_71038460+E30j
		mov	eax, [esi]
		mov	[ebx+114h], eax
		mov	eax, ebx
		call	sub_71038460
		mov	[ebx+114h], esi
		jmp	loc_710384A5	; jumptable 71039139 default case
; ---------------------------------------------------------------------------

loc_71039060:				; CODE XREF: sub_71038460+432j
		mov	edx, [ebx+110h]
		mov	byte ptr [ebx+eax+4], 0
		mov	[esp+9Ch+var_98], eax
		lea	eax, [ebx+4]
		mov	[esp+9Ch+var_9C], eax
		mov	[esp+9Ch+var_94], edx
		call	dword ptr [ebx+10Ch]
		mov	dword ptr [ebx+104h], 0
		add	dword ptr [ebx+124h], 1
		jmp	loc_71038898
; ---------------------------------------------------------------------------

loc_71039095:				; CODE XREF: sub_71038460+BE4j
		mov	eax, [ebx+120h]
		test	eax, eax
		jg	short loc_710390B6
		jmp	loc_71039279
; ---------------------------------------------------------------------------

loc_710390A4:				; CODE XREF: sub_71038460+C5Ej
		cmp	dword ptr [edx], 2Ah
		jnz	loc_7103849B	; jumptable 710384C8 default case
		test	eax, eax
		nop
		jle	loc_71039279

loc_710390B6:				; CODE XREF: sub_71038460+C3Dj
		mov	edx, [edx+8]
		sub	eax, 1
		test	edx, edx
		jnz	short loc_710390A4
		jmp	loc_7103849B	; jumptable 710384C8 default case
; ---------------------------------------------------------------------------

loc_710390C5:				; CODE XREF: sub_71038460+847j
		mov	edx, [ebp+8]
		mov	ecx, [edx]
		test	ecx, ecx
		jnz	loc_71038CAD
		cmp	dword ptr [edx+8], 1
		jnz	loc_71038CAD
		cmp	eax, 34h
		jnz	loc_71038CAD
		mov	eax, [edx+4]
		movzx	eax, byte ptr [eax]
		cmp	al, 30h
		jz	loc_7103934E
		cmp	al, 31h
		jnz	loc_71038CAD
		mov	edx, offset aTrue ; "true"
		mov	eax, ebx
		call	sub_71037C30
		jmp	loc_710384A5	; jumptable 71039139 default case
; ---------------------------------------------------------------------------
		align 10h

loc_71039110:				; CODE XREF: sub_71038460+83Ej
		mov	edx, [ebp+8]
		mov	edi, [edx]
		test	edi, edi
		jnz	loc_71038CAD
		cmp	eax, 35h
		jz	loc_7103933A

loc_71039126:				; CODE XREF: sub_71038460+EE9j
		mov	eax, ebx
		sub	esi, 2
		call	sub_71038460
		cmp	esi, 4		; switch 5 cases
		ja	loc_710384A5	; jumptable 71039139 default case
		jmp	ds:off_7105BEDC[esi*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_71039140:				; CODE XREF: sub_71038460+CD9j
					; DATA XREF: .rdata:off_7105BEDCo
		mov	edx, offset aLl	; jumptable 71039139 case 3
		mov	eax, ebx
		call	sub_71037C30
		jmp	loc_710384A5	; jumptable 71039139 default case
; ---------------------------------------------------------------------------

loc_71039151:				; CODE XREF: sub_71038460+CD9j
					; DATA XREF: .rdata:off_7105BEDCo
		mov	edx, offset aUl	; jumptable 71039139 case 2
		mov	eax, ebx
		call	sub_71037C30
		jmp	loc_710384A5	; jumptable 71039139 default case
; ---------------------------------------------------------------------------

loc_71039162:				; CODE XREF: sub_71038460+CD9j
					; DATA XREF: .rdata:off_7105BEDCo
		mov	edx, 6Ch	; jumptable 71039139 case 1
		mov	eax, ebx
		call	sub_71035ED0
		xchg	ax, ax
		jmp	loc_710384A5	; jumptable 71039139 default case
; ---------------------------------------------------------------------------

loc_71039175:				; CODE XREF: sub_71038460+CD9j
					; DATA XREF: .rdata:off_7105BEDCo
		mov	edx, 75h	; jumptable 71039139 case 0
		mov	eax, ebx
		call	sub_71035ED0
		jmp	loc_710384A5	; jumptable 71039139 default case
; ---------------------------------------------------------------------------

loc_71039186:				; CODE XREF: sub_71038460+CD9j
					; DATA XREF: .rdata:off_7105BEDCo
		mov	edx, offset aUll ; jumptable 71039139 case 4
		mov	eax, ebx
		call	sub_71037C30
		jmp	loc_710384A5	; jumptable 71039139 default case
; ---------------------------------------------------------------------------

loc_71039197:				; CODE XREF: sub_71038460+92Fj
		mov	dword ptr [ebx+11Ch], 1
		jmp	loc_7103849B	; jumptable 710384C8 default case
; ---------------------------------------------------------------------------

loc_710391A6:				; CODE XREF: sub_71038460+373j
					; sub_71038460+38Dj
		mov	ecx, [esp+9Ch+var_74]
		mov	[ebx+118h], ecx
		jmp	loc_710384A5	; jumptable 71039139 default case
; ---------------------------------------------------------------------------

loc_710391B5:				; CODE XREF: sub_71038460+906j
		mov	edx, 20h
		mov	eax, ebx
		call	sub_71035ED0
		jmp	loc_71038D6C
; ---------------------------------------------------------------------------

loc_710391C6:				; CODE XREF: sub_71038460+8E3j
		mov	edx, 20h
		mov	eax, ebx
		call	sub_71035ED0
		jmp	loc_71038D49
; ---------------------------------------------------------------------------

loc_710391D7:				; CODE XREF: sub_71038460+873j
		mov	edx, 2Dh
		mov	eax, ebx
		call	sub_71035ED0
		jmp	loc_71038CD9
; ---------------------------------------------------------------------------

loc_710391E8:				; CODE XREF: sub_71038460+550j
		mov	eax, ebx
		mov	edx, 5Bh
		call	sub_71035ED0
		mov	eax, [ebp+8]
		mov	edx, [eax+8]
		mov	eax, ebx
		call	sub_71038460
		mov	edx, 5Dh
		mov	eax, ebx
		call	sub_71035ED0
		jmp	loc_710389D9
; ---------------------------------------------------------------------------

loc_71039212:				; CODE XREF: sub_71038460+526j
		mov	edx, [edx+4]
		cmp	dword ptr [edx+8], 1
		jnz	loc_7103898C
		mov	edx, [edx+4]
		cmp	byte ptr [edx],	3Eh
		jnz	loc_7103898C
		mov	eax, ebx
		mov	edx, 28h
		call	sub_71035ED0
		mov	eax, [ebp+8]
		jmp	loc_7103898C
; ---------------------------------------------------------------------------
		align 10h

loc_71039240:				; CODE XREF: sub_71038460+B06j
		mov	esi, [esp+9Ch+var_7C]
		jmp	loc_71038607
; ---------------------------------------------------------------------------

loc_71039249:				; CODE XREF: sub_71038460+8CFj
		mov	esi, [edx+4]
		mov	edi, offset aJarray ; "JArray"
		mov	ecx, 6
		repe cmpsb
		jnz	loc_71038D35
		mov	edx, [ebp+8]
		mov	eax, ebx
		call	sub_71038460
		mov	edx, offset asc_7105BC3E ; "[]"
		mov	eax, ebx
		call	sub_71037C30
		jmp	loc_71038D78
; ---------------------------------------------------------------------------

loc_71039279:				; CODE XREF: sub_71038460+C3Fj
					; sub_71038460+C50j
		test	edx, edx
		jz	loc_7103849B	; jumptable 710384C8 default case
		test	eax, eax
		jnz	loc_7103849B	; jumptable 710384C8 default case
		mov	edx, [edx+4]
		test	edx, edx
		xchg	ax, ax
		jnz	loc_71039046
		jmp	loc_7103849B	; jumptable 710384C8 default case
; ---------------------------------------------------------------------------

loc_7103929B:				; CODE XREF: sub_71038460+566j
		mov	eax, ebx
		lea	esi, [esi+0]
		call	sub_71039A30
		jmp	loc_710389CC
; ---------------------------------------------------------------------------

loc_710392AA:				; CODE XREF: sub_71038460+5F9j
					; sub_71038460+60Ej
		mov	edi, 1
		nop
		jmp	loc_71038AE3
; ---------------------------------------------------------------------------

loc_710392B5:				; CODE XREF: sub_71038460+29Cj
		mov	ecx, [esp+9Ch+var_78]
		lea	eax, [esp+9Ch+var_24]
		mov	[ebx+114h], eax
		mov	[esp+9Ch+var_20], esi
		mov	[esp+9Ch+var_24], ecx
		jmp	loc_710387BE
; ---------------------------------------------------------------------------

loc_710392D0:				; CODE XREF: sub_71038460+36Bj
		mov	eax, [esp+9Ch+var_24]
		mov	[ebx+114h], eax
		jmp	loc_710387D1
; ---------------------------------------------------------------------------

loc_710392DF:				; CODE XREF: sub_71038460+104j
		mov	edx, [ebp+4]
		mov	eax, ebx
		call	sub_71039B10
		mov	edx, offset a___ ; "..."
		mov	eax, ebx
		call	sub_71037C30
		jmp	loc_710384A5	; jumptable 71039139 default case
; ---------------------------------------------------------------------------

loc_710392FA:				; CODE XREF: sub_71038460+B34j
		cmp	ebp, edi
		mov	ecx, esi
		mov	esi, [esp+9Ch+var_7C]
		jnb	loc_71038607
		cmp	ecx, 0FFh
		xchg	ax, ax
		ja	loc_71038607
		cmp	al, 5Fh
		jnz	loc_71038607
		movsx	edx, cl
		mov	eax, ebx
		call	sub_71035ED0
		lea	esi, [ebp+1]
		jmp	loc_71038611
; ---------------------------------------------------------------------------

loc_71039330:				; CODE XREF: sub_71038460+247j
		mov	edi, 1
		jmp	loc_710386F9
; ---------------------------------------------------------------------------

loc_7103933A:				; CODE XREF: sub_71038460+CC0j
		mov	edx, 2Dh
		mov	eax, ebx
		call	sub_71035ED0
		mov	edx, [ebp+8]
		jmp	loc_71039126
; ---------------------------------------------------------------------------

loc_7103934E:				; CODE XREF: sub_71038460+C8Dj
		mov	edx, offset aFalse ; "false"
		mov	eax, ebx
		call	sub_71037C30
		jmp	loc_710384A5	; jumptable 71039139 default case
sub_71038460	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71039360	proc near		; CODE XREF: .text:71039628p
					; sub_71039640+64p

var_184		= dword	ptr -184h
var_180		= dword	ptr -180h
var_17C		= dword	ptr -17Ch
var_174		= dword	ptr -174h
var_170		= byte ptr -170h
var_70		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 18Ch
		mov	[ebp+var_17C], edx
		mov	[ebp+var_180], ecx
		cmp	byte ptr [eax],	5Fh
		jz	loc_71039530

loc_71039383:				; CODE XREF: sub_71039360+1D9j
		mov	edi, offset a_global_ ;	"_GLOBAL_"
		mov	ecx, 8
		mov	esi, ebx
		repe cmpsb
		jnz	short loc_710393C0
		movzx	eax, byte ptr [ebx+8]
		cmp	al, 5Fh
		jz	short loc_710393A3
		cmp	al, 2Eh
		jnz	loc_71039520

loc_710393A3:				; CODE XREF: sub_71039360+39j
					; sub_71039360+1C8j
		movzx	eax, byte ptr [ebx+9]
		cmp	al, 49h
		setz	dl
		jz	short loc_710393B2
		cmp	al, 44h
		jnz	short loc_710393C0

loc_710393B2:				; CODE XREF: sub_71039360+4Cj
		cmp	byte ptr [ebx+0Ah], 5Fh
		jz	loc_710395E6
		lea	esi, [esi+0]

loc_710393C0:				; CODE XREF: sub_71039360+31j
					; sub_71039360+50j ...
		xor	esi, esi
		xor	eax, eax
		test	byte ptr [ebp+var_17C],	10h
		jz	loc_71039512

loc_710393D1:				; CODE XREF: sub_71039360+1E0j
					; sub_71039360+291j
		mov	[esp], ebx	; char *
		mov	edi, esp
		call	strlen
		mov	[ebp+var_4C], ebx
		mov	[ebp+var_40], ebx
		mov	[ebp+var_38], 0
		mov	[ebp+var_2C], 0
		mov	[ebp+var_24], 0
		lea	edx, [ebx+eax]
		mov	[ebp+var_48], edx
		mov	edx, [ebp+var_17C]
		lea	ecx, ds:0[eax*4]
		mov	[ebp+var_28], eax
		mov	[ebp+var_20], 0
		mov	[ebp+var_1C], 0
		mov	[ebp+var_44], edx
		lea	edx, [eax+eax]
		mov	[ebp+var_34], edx
		lea	edx, [ecx+edx]
		lea	eax, ds:1Eh[edx*4]
		and	eax, 0FFFFFFF0h
		call	sub_7103AFB0
		lea	edx, [esp+1Bh]
		lea	eax, [ecx+1Eh]
		and	edx, 0FFFFFFF0h
		and	eax, 0FFFFFFF0h
		call	sub_7103AFB0
		lea	eax, [esp+1Bh]
		and	eax, 0FFFFFFF0h
		cmp	esi, 1
		mov	[ebp+var_3C], edx
		mov	[ebp+var_30], eax
		jz	loc_710395A5
		jnb	loc_71039545

loc_71039463:				; CODE XREF: sub_71039360+1E8j
		lea	eax, [ebp+var_4C]
		call	sub_71036410
		mov	edx, eax

loc_7103946D:				; CODE XREF: sub_71039360+240j
					; sub_71039360+24Cj ...
		test	byte ptr [ebp+var_17C],	1
		jz	short loc_71039482
		mov	eax, [ebp+var_40]
		cmp	byte ptr [eax],	0
		jnz	loc_710395B1

loc_71039482:				; CODE XREF: sub_71039360+114j
		test	edx, edx
		jz	loc_710395B1
		mov	eax, [ebp+var_17C]
		mov	[ebp+var_70], 0
		mov	[ebp+var_6C], 0
		mov	[ebp+var_60], 0
		mov	[ebp+var_174], eax
		mov	eax, [ebp+var_180]
		mov	[ebp+var_5C], 0
		mov	[ebp+var_50], 0
		mov	[ebp+var_58], 0
		mov	[ebp+var_68], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_64], eax
		lea	eax, [ebp+var_174]
		call	sub_71038460
		mov	eax, [ebp+var_70]
		mov	[ebp+eax+var_170], 0
		mov	eax, [ebp+var_64]
		mov	[esp+8], eax
		mov	eax, [ebp+var_70]
		mov	[esp+4], eax
		lea	eax, [ebp+var_170]
		mov	[esp], eax
		call	[ebp+var_68]
		xor	eax, eax
		add	[ebp+var_50], 1
		cmp	[ebp+var_58], 0
		mov	[ebp+var_70], 0
		mov	esp, edi
		setz	al

loc_71039512:				; CODE XREF: sub_71039360+6Bj
					; sub_71039360+255j
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71039520:				; CODE XREF: sub_71039360+3Dj
		cmp	al, 24h
		jnz	loc_710393C0
		jmp	loc_710393A3
; ---------------------------------------------------------------------------
		align 10h

loc_71039530:				; CODE XREF: sub_71039360+1Dj
		cmp	byte ptr [eax+1], 5Ah
		mov	esi, 1
		jnz	loc_71039383
		nop
		jmp	loc_710393D1
; ---------------------------------------------------------------------------

loc_71039545:				; CODE XREF: sub_71039360+FDj
		cmp	esi, 3
		ja	loc_71039463
		add	ebx, 0Bh
		mov	[ebp+var_40], ebx
		mov	[esp], ebx	; char *
		call	strlen
		mov	edx, ebx
		mov	ecx, eax
		lea	eax, [ebp+var_4C]
		call	sub_71035B00
		xor	edx, edx
		cmp	esi, 2
		setnz	dl
		add	edx, 3Ah
		mov	dword ptr [esp], 0
		mov	ecx, eax
		lea	eax, [ebp+var_4C]
		call	sub_71035A80
		mov	ebx, [ebp+var_40]
		mov	[esp], ebx	; char *
		mov	[ebp+var_184], eax
		call	strlen
		mov	edx, [ebp+var_184]
		add	ebx, eax
		mov	[ebp+var_40], ebx
		jmp	loc_7103946D
; ---------------------------------------------------------------------------

loc_710395A5:				; CODE XREF: sub_71039360+F7j
		cmp	byte ptr [ebx],	5Fh
		jz	short loc_710395C0

loc_710395AA:				; CODE XREF: sub_71039360+26Aj
		xor	edx, edx
		jmp	loc_7103946D
; ---------------------------------------------------------------------------

loc_710395B1:				; CODE XREF: sub_71039360+11Cj
					; sub_71039360+124j
		xor	eax, eax
		mov	esp, edi
		jmp	loc_71039512
; ---------------------------------------------------------------------------
		align 10h

loc_710395C0:				; CODE XREF: sub_71039360+248j
		lea	eax, [ebx+1]
		mov	[ebp+var_40], eax
		cmp	byte ptr [ebx+1], 5Ah
		jnz	short loc_710395AA
		mov	edx, 1
		add	ebx, 2
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_40], ebx
		call	sub_710374B0
		mov	edx, eax
		jmp	loc_7103946D
; ---------------------------------------------------------------------------

loc_710395E6:				; CODE XREF: sub_71039360+56j
		mov	esi, edx
		shl	esi, 1Fh
		sar	esi, 1Fh
		add	esi, 3
		jmp	loc_710393D1
sub_71039360	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 1Ch
		mov	ecx, [esp+24h]
		mov	eax, [esp+20h]
		test	ecx, ecx
		jnz	short loc_71039618

loc_7103960F:				; CODE XREF: .text:7103961Aj
		mov	eax, 0FFFFFFFDh

loc_71039614:				; CODE XREF: .text:71039635j
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_71039618:				; CODE XREF: .text:7103960Dj
		test	eax, eax
		jz	short loc_7103960F
		mov	edx, [esp+28h]
		mov	[esp], edx
		mov	edx, 11h
		call	sub_71039360
		cmp	eax, 1
		sbb	eax, eax
		and	eax, 0FFFFFFFEh
		jmp	short loc_71039614
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_71039640(int,	char *,	int, int)
sub_71039640	proc near		; CODE XREF: sub_7104FC60+B5p

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 4Ch
		mov	eax, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_10], ebx
		mov	ebx, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_C], esi
		mov	esi, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_8], edi
		mov	edi, [esp+4Ch+arg_C]
		test	eax, eax
		mov	[esp+4Ch+var_4], ebp
		jz	loc_7103973A
		test	ebx, ebx
		jz	loc_71039732

loc_71039673:				; CODE XREF: sub_71039640+F4j
		lea	edx, [esp+4Ch+var_2C]
		mov	ecx, offset sub_71037AA0
		mov	[esp+4Ch+var_4C], edx
		mov	edx, 11h
		mov	[esp+4Ch+var_2C], 0
		mov	[esp+4Ch+var_28], 0
		mov	[esp+4Ch+var_24], 0
		mov	[esp+4Ch+var_20], 0
		call	sub_71039360
		test	eax, eax
		jz	loc_71039742
		mov	edx, [esp+4Ch+var_20]
		mov	[esp+4Ch+var_30], 1
		test	edx, edx
		jz	short loc_71039728

loc_710396C1:				; CODE XREF: sub_71039640+F0j
		mov	ebp, [esp+4Ch+var_2C]
		test	ebp, ebp
		jz	loc_71039756
		test	esi, esi
		jz	loc_71039780
		mov	[esp+4Ch+var_4C], ebp ;	char *
		call	strlen
		cmp	eax, [ebx]
		nop
		jb	short loc_71039710
		mov	[esp+4Ch+var_4C], esi ;	void *
		call	free

loc_710396EA:				; CODE XREF: sub_71039640+142j
		mov	eax, [esp+4Ch+var_30]
		mov	[ebx], eax

loc_710396F0:				; CODE XREF: sub_71039640+E6j
					; sub_71039640+148j
		test	edi, edi
		jz	short loc_710396FA
		mov	dword ptr [edi], 0

loc_710396FA:				; CODE XREF: sub_71039640+B2j
					; sub_71039640+100j ...
		mov	eax, ebp
		mov	ebx, [esp+4Ch+var_10]
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------

loc_71039710:				; CODE XREF: sub_71039640+A0j
		mov	[esp+4Ch+var_48], ebp ;	char *
		mov	[esp+4Ch+var_4C], esi ;	char *
		call	strcpy
		mov	[esp+4Ch+var_4C], ebp ;	void *
		mov	ebp, esi
		call	free
		jmp	short loc_710396F0
; ---------------------------------------------------------------------------

loc_71039728:				; CODE XREF: sub_71039640+7Fj
		mov	eax, [esp+4Ch+var_24]
		mov	[esp+4Ch+var_30], eax
		jmp	short loc_710396C1
; ---------------------------------------------------------------------------

loc_71039732:				; CODE XREF: sub_71039640+2Dj
		test	esi, esi
		jz	loc_71039673

loc_7103973A:				; CODE XREF: sub_71039640+25j
		test	edi, edi
		jnz	short loc_71039770

loc_7103973E:				; CODE XREF: sub_71039640+118j
		xor	ebp, ebp
		jmp	short loc_710396FA
; ---------------------------------------------------------------------------

loc_71039742:				; CODE XREF: sub_71039640+6Bj
		mov	eax, [esp+4Ch+var_2C]
		mov	[esp+4Ch+var_4C], eax ;	void *
		call	free
		mov	[esp+4Ch+var_30], 0

loc_71039756:				; CODE XREF: sub_71039640+87j
		test	edi, edi
		jz	short loc_7103973E
		cmp	[esp+4Ch+var_30], 1
		jz	short loc_7103978D
		mov	dword ptr [edi], 0FFFFFFFEh
		xor	ebp, ebp
		jmp	short loc_710396FA
; ---------------------------------------------------------------------------
		align 10h

loc_71039770:				; CODE XREF: sub_71039640+FCj
		mov	dword ptr [edi], 0FFFFFFFDh
		xor	ebp, ebp
		jmp	loc_710396FA
; ---------------------------------------------------------------------------
		align 10h

loc_71039780:				; CODE XREF: sub_71039640+8Fj
		test	ebx, ebx
		jnz	loc_710396EA
		jmp	loc_710396F0
; ---------------------------------------------------------------------------

loc_7103978D:				; CODE XREF: sub_71039640+11Fj
		mov	dword ptr [edi], 0FFFFFFFFh
		xor	ebp, ebp
		jmp	loc_710396FA
sub_71039640	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710397A0	proc near		; CODE XREF: sub_71038000+40p
					; sub_71038460+3ADp ...

var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 0Ch
		mov	[esp+0Ch+var_8], ebx
		mov	ebx, edx
		mov	[esp+0Ch+var_4], esi
		mov	esi, eax
		mov	eax, [edx]
		sub	eax, 3
		cmp	eax, 24h	; switch 37 cases
		jbe	short loc_710397D0

loc_710397B9:				; CODE XREF: sub_710397A0:loc_710397D0j
					; DATA XREF: .rdata:off_7105BF24o
		mov	edx, ebx	; jumptable 710397D0 default case

loc_710397BB:				; CODE XREF: sub_710397A0+3Aj
					; sub_710397A0+76j
		mov	eax, esi
		mov	ebx, [esp+0Ch+var_8]
		mov	esi, [esp+0Ch+var_4]
		add	esp, 0Ch
		jmp	sub_71038460
; ---------------------------------------------------------------------------
		align 10h

loc_710397D0:				; CODE XREF: sub_710397A0+17j
		jmp	ds:off_7105BF24[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_710397D7:				; CODE XREF: sub_710397A0:loc_710397D0j
					; DATA XREF: .rdata:off_7105BF24o
		mov	edx, [edx+4]	; jumptable 710397D0 case 0
		jmp	short loc_710397BB
; ---------------------------------------------------------------------------
		align 10h

loc_710397E0:				; CODE XREF: sub_710397A0:loc_710397D0j
					; DATA XREF: .rdata:off_7105BF24o
		mov	edx, offset aRestrict ;	jumptable 710397D0 cases 20,23

loc_710397E5:				; CODE XREF: sub_710397A0+5Cj
					; sub_710397A0+65j ...
		mov	eax, esi
		mov	ebx, [esp+0Ch+var_8]
		mov	esi, [esp+0Ch+var_4]
		add	esp, 0Ch
		jmp	sub_71037C30
; ---------------------------------------------------------------------------

loc_710397F7:				; CODE XREF: sub_710397A0:loc_710397D0j
					; DATA XREF: .rdata:off_7105BF24o
		mov	edx, offset aVolatile ;	jumptable 710397D0 cases 21,24
		jmp	short loc_710397E5
; ---------------------------------------------------------------------------
		align 10h

loc_71039800:				; CODE XREF: sub_710397A0:loc_710397D0j
					; DATA XREF: .rdata:off_7105BF24o
		mov	edx, offset aConst ; jumptable 710397D0	cases 22,25
		jmp	short loc_710397E5
; ---------------------------------------------------------------------------

loc_71039807:				; CODE XREF: sub_710397A0:loc_710397D0j
					; DATA XREF: .rdata:off_7105BF24o
		mov	edx, 20h	; jumptable 710397D0 case 26
		mov	eax, esi
		call	sub_71035ED0
		mov	edx, [ebx+8]
		jmp	short loc_710397BB
; ---------------------------------------------------------------------------

loc_71039818:				; CODE XREF: sub_710397A0:loc_710397D0j
					; DATA XREF: .rdata:off_7105BF24o
		test	byte ptr [esi],	4 ; jumptable 710397D0 case 27
		mov	edx, 2Ah
		jz	short loc_71039835
		mov	ebx, [esp+0Ch+var_8]
		mov	esi, [esp+0Ch+var_4]
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71039830:				; CODE XREF: sub_710397A0:loc_710397D0j
					; DATA XREF: .rdata:off_7105BF24o
		mov	edx, 26h	; jumptable 710397D0 case 28

loc_71039835:				; CODE XREF: sub_710397A0+80j
		mov	eax, esi
		mov	ebx, [esp+0Ch+var_8]
		mov	esi, [esp+0Ch+var_4]
		add	esp, 0Ch
		jmp	sub_71035ED0
; ---------------------------------------------------------------------------

loc_71039847:				; CODE XREF: sub_710397A0:loc_710397D0j
					; DATA XREF: .rdata:off_7105BF24o
		mov	edx, offset asc_7105BF0B ; jumptable 710397D0 case 29
		jmp	short loc_710397E5
; ---------------------------------------------------------------------------
		align 10h

loc_71039850:				; CODE XREF: sub_710397A0:loc_710397D0j
					; DATA XREF: .rdata:off_7105BF24o
		mov	edx, offset aComplex ; jumptable 710397D0 case 30
		jmp	short loc_710397E5
; ---------------------------------------------------------------------------

loc_71039857:				; CODE XREF: sub_710397A0:loc_710397D0j
					; DATA XREF: .rdata:off_7105BF24o
		mov	edx, offset aImaginary ; jumptable 710397D0 case 31
		jmp	short loc_710397E5
; ---------------------------------------------------------------------------
		align 10h

loc_71039860:				; CODE XREF: sub_710397A0:loc_710397D0j
					; DATA XREF: .rdata:off_7105BF24o
		cmp	byte ptr [esi+108h], 28h ; jumptable 710397D0 case 36
		jz	short loc_71039875
		mov	edx, 20h
		mov	eax, esi
		call	sub_71035ED0

loc_71039875:				; CODE XREF: sub_710397A0+C7j
		mov	edx, [ebx+4]
		mov	eax, esi
		call	sub_71038460
		mov	edx, offset asc_7105BD38 ; "::*"
		jmp	loc_710397E5
sub_710397A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71039890	proc near		; CODE XREF: sub_71038460+4E6p
					; sub_71038460+BADp

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 2Ch
		mov	[esp+2Ch+var_C], ebx
		mov	ebx, eax
		mov	[esp+2Ch+var_8], esi
		mov	esi, edx
		mov	[esp+2Ch+var_4], edi
		mov	edx, [edx+4]
		cmp	dword ptr [edx], 4
		jz	short loc_710398C0
		call	sub_71038460
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_710398C0:				; CODE XREF: sub_71039890+19j
		mov	edi, [eax+118h]
		mov	dword ptr [eax+118h], 0
		mov	eax, [eax+114h]
		mov	[esp+2Ch+var_14], eax
		lea	eax, [esp+2Ch+var_14]
		mov	[ebx+114h], eax
		mov	eax, [esi+4]
		mov	[esp+2Ch+var_10], eax
		mov	edx, [eax+4]
		mov	eax, ebx
		call	sub_71038460
		mov	eax, [esp+2Ch+var_14]
		cmp	byte ptr [ebx+108h], 3Ch
		mov	[ebx+114h], eax
		jz	loc_71039A04

loc_7103990C:				; CODE XREF: sub_71039890+180j
		mov	eax, [ebx+104h]
		cmp	eax, 0FFh
		lea	edx, [eax+1]
		jz	short loc_71039980

loc_7103991C:				; CODE XREF: sub_71039890+12Dj
		mov	byte ptr [ebx+eax+4], 3Ch
		mov	[ebx+104h], edx
		mov	byte ptr [ebx+108h], 3Ch
		mov	eax, [esi+4]
		mov	edx, [eax+8]
		mov	eax, ebx
		call	sub_71038460
		cmp	byte ptr [ebx+108h], 3Eh
		jz	loc_71039A15

loc_71039948:				; CODE XREF: sub_71039890+191j
		mov	eax, [ebx+104h]
		cmp	eax, 0FFh
		lea	edx, [eax+1]
		jz	short loc_710399C2

loc_71039958:				; CODE XREF: sub_71039890+16Fj
		mov	byte ptr [ebx+eax+4], 3Eh
		mov	[ebx+104h], edx
		mov	byte ptr [ebx+108h], 3Eh
		mov	[ebx+118h], edi
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_71039980:				; CODE XREF: sub_71039890+8Aj
		mov	eax, [ebx+110h]
		mov	byte ptr [ebx+103h], 0
		mov	[esp+2Ch+var_28], 0FFh
		mov	[esp+2Ch+var_24], eax
		lea	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [ebx+10Ch]
		mov	edx, 1
		xor	eax, eax
		mov	dword ptr [ebx+104h], 0
		add	dword ptr [ebx+124h], 1
		jmp	loc_7103991C
; ---------------------------------------------------------------------------

loc_710399C2:				; CODE XREF: sub_71039890+C6j
		mov	eax, [ebx+110h]
		mov	byte ptr [ebx+103h], 0
		mov	[esp+2Ch+var_28], 0FFh
		mov	[esp+2Ch+var_24], eax
		lea	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [ebx+10Ch]
		mov	edx, 1
		xor	eax, eax
		mov	dword ptr [ebx+104h], 0
		add	dword ptr [ebx+124h], 1
		jmp	loc_71039958
; ---------------------------------------------------------------------------

loc_71039A04:				; CODE XREF: sub_71039890+76j
		mov	edx, 20h
		mov	eax, ebx
		call	sub_71035ED0
		jmp	loc_7103990C
; ---------------------------------------------------------------------------

loc_71039A15:				; CODE XREF: sub_71039890+B2j
		mov	edx, 20h
		mov	eax, ebx
		call	sub_71035ED0
		jmp	loc_71039948
sub_71039890	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71039A30	proc near		; CODE XREF: sub_71038460+500p
					; sub_71038460+991p ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_24		= byte ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 3Ch
		mov	[esp+3Ch+var_10], ebx
		mov	[esp+3Ch+var_C], esi
		mov	[esp+3Ch+var_8], edi
		mov	[esp+3Ch+var_4], ebp
		cmp	dword ptr [edx], 2Bh
		jz	short loc_71039A60
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		jmp	sub_71038460
; ---------------------------------------------------------------------------

loc_71039A60:				; CODE XREF: sub_71039A30+16j
		mov	edx, [edx+4]
		mov	edi, [edx+8]
		mov	ebp, [edx+4]
		test	edi, edi
		jz	loc_71039AF8
		lea	ecx, [eax+4]
		mov	edx, [eax+104h]
		xor	ebx, ebx
		mov	[esp+3Ch+var_20], ecx
		mov	esi, eax
		jmp	short loc_71039A9D
; ---------------------------------------------------------------------------

loc_71039A84:				; CODE XREF: sub_71039A30+7Bj
					; sub_71039A30+C6j
		add	ebx, 1
		cmp	edi, ebx
		mov	[esi+edx+4], al
		mov	[esi+104h], ecx
		mov	[esi+108h], al
		jbe	short loc_71039AF8
		mov	edx, ecx

loc_71039A9D:				; CODE XREF: sub_71039A30+52j
		cmp	edx, 0FFh
		movzx	eax, byte ptr [ebp+ebx+0]
		lea	ecx, [edx+1]
		jnz	short loc_71039A84
		mov	edx, [esi+110h]
		mov	byte ptr [esi+103h], 0
		mov	[esp+3Ch+var_24], al
		mov	[esp+3Ch+var_34], edx
		mov	edx, [esi+104h]
		mov	[esp+3Ch+var_38], edx
		mov	edx, [esp+3Ch+var_20]
		mov	[esp+3Ch+var_3C], edx
		call	dword ptr [esi+10Ch]
		mov	ecx, 1
		xor	edx, edx
		mov	dword ptr [esi+104h], 0
		movzx	eax, [esp+3Ch+var_24]
		add	dword ptr [esi+124h], 1
		jmp	short loc_71039A84
; ---------------------------------------------------------------------------

loc_71039AF8:				; CODE XREF: sub_71039A30+3Bj
					; sub_71039A30+69j
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
sub_71039A30	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71039B10	proc near		; CODE XREF: sub_71038460+50Ap
					; sub_71038460+536p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h

		push	ebx
		mov	ebx, eax
		sub	esp, 28h
		mov	eax, [edx]
		cmp	eax, 6
		jz	short loc_71039B21
		test	eax, eax
		jnz	short loc_71039B30

loc_71039B21:				; CODE XREF: sub_71039B10+Bj
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		jmp	sub_71038460
; ---------------------------------------------------------------------------
		align 10h

loc_71039B30:				; CODE XREF: sub_71039B10+Fj
		mov	eax, [ebx+104h]
		cmp	eax, 0FFh
		lea	ecx, [eax+1]
		jz	short loc_71039B80

loc_71039B40:				; CODE XREF: sub_71039B10+B5j
		mov	byte ptr [ebx+eax+4], 28h
		mov	eax, ebx
		mov	[ebx+104h], ecx
		mov	byte ptr [ebx+108h], 28h
		call	sub_71038460
		mov	eax, [ebx+104h]
		cmp	eax, 0FFh
		lea	edx, [eax+1]
		jz	short loc_71039BD0

loc_71039B69:				; CODE XREF: sub_71039B10+FDj
		mov	byte ptr [ebx+eax+4], 29h
		mov	[ebx+104h], edx
		mov	byte ptr [ebx+108h], 29h
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_71039B80:				; CODE XREF: sub_71039B10+2Ej
		mov	eax, [ebx+110h]
		mov	byte ptr [ebx+103h], 0
		mov	[esp+2Ch+var_10], edx
		mov	[esp+2Ch+var_28], 0FFh
		mov	[esp+2Ch+var_24], eax
		lea	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [ebx+10Ch]
		mov	ecx, 1
		xor	eax, eax
		mov	dword ptr [ebx+104h], 0
		mov	edx, [esp+2Ch+var_10]
		add	dword ptr [ebx+124h], 1
		jmp	loc_71039B40
; ---------------------------------------------------------------------------
		align 10h

loc_71039BD0:				; CODE XREF: sub_71039B10+57j
		mov	eax, [ebx+110h]
		mov	byte ptr [ebx+103h], 0
		mov	[esp+2Ch+var_28], 0FFh
		mov	[esp+2Ch+var_24], eax
		lea	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [ebx+10Ch]
		mov	edx, 1
		xor	eax, eax
		mov	dword ptr [ebx+104h], 0
		add	dword ptr [ebx+124h], 1
		jmp	loc_71039B69
sub_71039B10	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_71039C20(_onexit_t)
sub_71039C20	proc near		; CODE XREF: sub_71039CE0+Ap

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	eax, ds:dword_7105E3AC
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], eax
		call	sub_71039DE0
		cmp	eax, 0FFFFFFFFh
		mov	[esp+2Ch+var_10], eax
		jz	loc_71039CC0
		mov	[esp+2Ch+var_2C], 8
		call	_lock
		mov	eax, ds:dword_7105E3AC
		mov	[esp+2Ch+var_2C], eax
		call	sub_71039DE0
		mov	[esp+2Ch+var_10], eax
		mov	eax, ds:dword_7105E3A8
		mov	[esp+2Ch+var_2C], eax
		call	sub_71039DE0
		mov	[esp+2Ch+var_2C], ebx
		mov	[esp+2Ch+var_14], eax
		lea	eax, [esp+2Ch+var_14]
		mov	[esp+2Ch+var_24], eax
		lea	eax, [esp+2Ch+var_10]
		mov	[esp+2Ch+var_28], eax
		call	__dllonexit
		mov	ebx, eax
		mov	eax, [esp+2Ch+var_10]
		mov	[esp+2Ch+var_2C], eax
		call	sub_71039DF0
		mov	ds:dword_7105E3AC, eax
		mov	eax, [esp+2Ch+var_14]
		mov	[esp+2Ch+var_2C], eax
		call	sub_71039DF0
		mov	[esp+2Ch+var_2C], 8
		mov	ds:dword_7105E3A8, eax
		call	_unlock
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71039CC0:				; CODE XREF: sub_71039C20+1Cj
		mov	[esp+2Ch+var_2C], ebx ;	_onexit_t
		call	ds:_onexit
		add	esp, 28h
		mov	ebx, eax
		mov	eax, ebx
		pop	ebx
		retn
sub_71039C20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_71039CE0(_onexit_t)
sub_71039CE0	proc near		; CODE XREF: sub_7103A2C0-2Fp
					; sub_7103B1F0+12p ...

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], eax ;	_onexit_t
		call	sub_71039C20
		cmp	eax, 1
		sbb	eax, eax
		add	esp, 1Ch
		retn
sub_71039CE0	endp

; ---------------------------------------------------------------------------
		align 10h
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


		public TlsCallback_1
TlsCallback_1	proc near		; DATA XREF: .CRT:7106801Co

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_4]
		test	eax, eax
		jz	short loc_71039D30
		cmp	eax, 3
		jz	short loc_71039D30
		mov	eax, 1
		add	esp, 1Ch
		retn	0Ch
; ---------------------------------------------------------------------------
		align 10h

loc_71039D30:				; CODE XREF: TlsCallback_1+9j
					; TlsCallback_1+Ej
		mov	edx, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_14], edx
		mov	[esp+1Ch+var_1C], eax
		call	sub_7103A4E0
		mov	eax, 1
		add	esp, 1Ch
		retn	0Ch
TlsCallback_1	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


		public TlsCallback_0
TlsCallback_0	proc near		; CODE XREF: sub_71001040+117p
					; DATA XREF: .rdata:off_7105CA40o ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 18h
		cmp	dword_7105403C,	2
		mov	eax, [esp+1Ch+arg_4]
		jz	short loc_71039D7B
		mov	dword_7105403C,	2

loc_71039D7B:				; CODE XREF: TlsCallback_0+Fj
		cmp	eax, 2
		jz	short loc_71039D91
		cmp	eax, 1
		jz	short loc_71039DC0

loc_71039D85:				; CODE XREF: TlsCallback_0+3Cj
					; TlsCallback_0+7Cj
		mov	eax, 1
		add	esp, 18h
		pop	ebx
		retn	0Ch
; ---------------------------------------------------------------------------

loc_71039D91:				; CODE XREF: TlsCallback_0+1Ej
		mov	ebx, offset dword_71068028
		cmp	ebx, offset dword_71068028
		jz	short loc_71039D85
		xchg	ax, ax

loc_71039DA0:				; CODE XREF: TlsCallback_0+51j
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_71039DA8
		call	eax

loc_71039DA8:				; CODE XREF: TlsCallback_0+44j
		add	ebx, 4
		cmp	ebx, offset dword_71068028
		jnz	short loc_71039DA0
		mov	eax, 1
		add	esp, 18h
		pop	ebx
		retn	0Ch
; ---------------------------------------------------------------------------
		align 10h

loc_71039DC0:				; CODE XREF: TlsCallback_0+23j
		mov	eax, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_18], 1
		mov	[esp+1Ch+var_14], eax
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], eax
		call	sub_7103A4E0
		jmp	short loc_71039D85
TlsCallback_0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71039DE0	proc near		; CODE XREF: sub_71001040+138p
					; sub_71001040+14Bp ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		retn
sub_71039DE0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71039DF0	proc near		; CODE XREF: sub_71001000+15p
					; sub_71039C20+71p ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		retn
sub_71039DF0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

; int __cdecl sub_71039E00(char	*, char)
sub_71039E00	proc near		; CODE XREF: sub_71039E60+131p
					; sub_71039E60+141p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= byte ptr  8

		push	ebx
		sub	esp, 18h
		mov	eax, ds:_iob
		mov	[esp+1Ch+var_14], 1Bh ;	size_t
		lea	ebx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_18], 1 ; size_t
		mov	[esp+1Ch+var_1C], offset aMingwW64Runtim ; "Mingw-w64 runtime failure:\n"
		add	eax, 40h
		mov	[esp+1Ch+var_10], eax ;	FILE *
		call	fwrite
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_14], ebx ;	va_list
		mov	[esp+1Ch+var_18], eax ;	char *
		mov	eax, ds:_iob
		add	eax, 40h
		mov	[esp+1Ch+var_1C], eax ;	FILE *
		call	vfprintf
		call	abort
sub_71039E00	endp

; ---------------------------------------------------------------------------
		jmp	short sub_71039E60
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __fastcall sub_71039E60(size_t)
sub_71039E60	proc near		; CODE XREF: .text:71039E51j
					; sub_71039FB0+12Ap ...

lpAddress	= dword	ptr -5Ch
lpBuffer	= dword	ptr -58h
dwLength	= dword	ptr -54h
lpflOldProtect	= dword	ptr -50h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
Buffer		= _MEMORY_BASIC_INFORMATION ptr	-38h

		push	ebp
		push	edi
		mov	edi, ecx
		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 4Ch
		test	ecx, ecx
		mov	[esp+5Ch+var_40], edx
		jnz	short loc_71039E80
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71039E80:				; CODE XREF: sub_71039E60+11j
		mov	ecx, ds:dword_7105E01C
		xor	esi, esi
		test	ecx, ecx
		jle	short loc_71039EB0
		mov	eax, ds:dword_7105E018

loc_71039E91:				; CODE XREF: sub_71039E60+4Ej
		mov	edx, [eax+4]
		cmp	edx, ebx
		ja	short loc_71039EA6
		mov	ebp, [eax+8]
		add	edx, [ebp+8]
		cmp	ebx, edx
		jb	loc_71039F29

loc_71039EA6:				; CODE XREF: sub_71039E60+36j
		add	esi, 1
		add	eax, 0Ch
		cmp	esi, ecx
		jl	short loc_71039E91

loc_71039EB0:				; CODE XREF: sub_71039E60+2Aj
		mov	[esp+5Ch+lpAddress], ebx
		call	sub_7103A700
		test	eax, eax
		mov	ebp, eax
		jz	loc_71039F96
		lea	edx, [esi+esi*2]
		mov	esi, ds:dword_7105E018
		shl	edx, 2
		mov	[esp+5Ch+var_44], edx
		add	esi, edx
		mov	[esi+8], eax
		mov	dword ptr [esi], 0
		call	sub_7103A820
		mov	edx, [esp+5Ch+var_44]
		add	eax, [ebp+0Ch]
		mov	[esi+4], eax
		lea	eax, [esp+5Ch+Buffer]
		mov	[esp+5Ch+lpBuffer], eax	; lpBuffer
		mov	eax, ds:dword_7105E018
		mov	[esp+5Ch+dwLength], 1Ch	; dwLength
		mov	eax, [eax+edx+4]
		mov	[esp+5Ch+lpAddress], eax ; lpAddress
		call	ds:VirtualQuery
		sub	esp, 0Ch
		test	eax, eax
		mov	edx, [esp+5Ch+var_44]
		jz	short loc_71039F76
		mov	eax, [esp+5Ch+Buffer.Protect]
		cmp	eax, 4
		jnz	short loc_71039F45

loc_71039F22:				; CODE XREF: sub_71039E60+E8j
					; sub_71039E60+114j
		add	ds:dword_7105E01C, 1

loc_71039F29:				; CODE XREF: sub_71039E60+40j
		mov	eax, [esp+5Ch+var_40]
		mov	[esp+5Ch+dwLength], edi	; size_t
		mov	[esp+5Ch+lpAddress], ebx ; void	*
		mov	[esp+5Ch+lpBuffer], eax	; void *
		call	memcpy
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_71039F45:				; CODE XREF: sub_71039E60+C0j
		cmp	eax, 40h
		jz	short loc_71039F22
		mov	eax, [esp+5Ch+Buffer.RegionSize]
		add	edx, ds:dword_7105E018
		mov	[esp+5Ch+dwLength], 40h	; flNewProtect
		mov	[esp+5Ch+lpBuffer], eax	; dwSize
		mov	eax, [esp+5Ch+Buffer.BaseAddress]
		mov	[esp+5Ch+lpflOldProtect], edx ;	lpflOldProtect
		mov	[esp+5Ch+lpAddress], eax ; lpAddress
		call	ds:VirtualProtect
		sub	esp, 10h
		jmp	short loc_71039F22
; ---------------------------------------------------------------------------

loc_71039F76:				; CODE XREF: sub_71039E60+B7j
		mov	eax, ds:dword_7105E018
		mov	eax, [eax+edx+4]
		mov	[esp+5Ch+dwLength], eax
		mov	eax, [ebp+8]
		mov	[esp+5Ch+lpAddress], offset aVirtualqueryFa ; "	 VirtualQuery failed for %d bytes at a"...
		mov	[esp+5Ch+lpBuffer], eax	; char
		call	sub_71039E00
; ---------------------------------------------------------------------------

loc_71039F96:				; CODE XREF: sub_71039E60+5Cj
		mov	[esp+5Ch+lpBuffer], ebx	; char
		mov	[esp+5Ch+lpAddress], offset aAddressPHasNoI ; "Address %p has no image-section"
		call	sub_71039E00
sub_71039E60	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71039FB0	proc near		; CODE XREF: sub_71001260+30p
					; sub_71001260:loc_710012E8p

Buffer		= _MEMORY_BASIC_INFORMATION ptr	-3Ch
flOldProtect	= dword	ptr -20h
var_1C		= dword	ptr -1Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	ebx, ds:dword_7105E020
		test	ebx, ebx
		jz	short loc_71039FD0

loc_71039FC3:				; CODE XREF: sub_71039FB0+64j
					; sub_71039FB0+B4j ...
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71039FD0:				; CODE XREF: sub_71039FB0+11j
		mov	ds:dword_7105E020, 1
		call	sub_7103A770
		lea	eax, [eax+eax*2]
		lea	eax, ds:1Eh[eax*4]
		and	eax, 0FFFFFFF0h
		call	sub_7103AFB0
		mov	ds:dword_7105E01C, 0
		lea	eax, [esp+1Fh]
		and	eax, 0FFFFFFF0h
		mov	ds:dword_7105E018, eax
		mov	eax, offset dword_7105DEA0
		sub	eax, offset dword_7105DEA0
		cmp	eax, 7
		jle	short loc_71039FC3
		cmp	eax, 0Bh
		mov	ebx, offset dword_7105DEA0
		jle	short loc_7103A042
		mov	ecx, ds:dword_7105DEA0
		test	ecx, ecx
		jnz	short loc_7103A042
		mov	edx, ds:dword_7105DEA4
		test	edx, edx
		jnz	short loc_7103A042
		mov	eax, ds:dword_7105DEA8
		test	eax, eax
		jnz	short loc_7103A042
		mov	ebx, offset dword_7105DEAC

loc_7103A042:				; CODE XREF: sub_71039FB0+6Ej
					; sub_71039FB0+78j ...
		mov	edi, [ebx]
		test	edi, edi
		jnz	short loc_7103A0B0
		mov	esi, [ebx+4]
		test	esi, esi
		jnz	short loc_7103A0B0
		mov	eax, [ebx+8]
		cmp	eax, 1
		jnz	loc_7103A213
		add	ebx, 0Ch
		cmp	ebx, offset dword_7105DEA0
		jnb	loc_71039FC3
		mov	esi, 71000000h

loc_7103A06F:				; CODE XREF: sub_71039FB0+217j
		mov	eax, [ebx+4]
		mov	ecx, [ebx]
		movzx	edx, byte ptr [ebx+8]
		add	eax, esi
		add	ecx, esi
		cmp	edx, 10h
		mov	edi, [ecx]
		jz	loc_7103A16D
		cmp	edx, 20h
		jz	loc_7103A1AA
		cmp	edx, 8
		jz	loc_7103A18C
		mov	[ebp+var_1C], 0
		mov	[esp+4], edx	; char
		mov	dword ptr [esp], offset	aUnknownPseudoR	; "  Unknown pseudo relocation bit size	%d"...
		call	sub_71039E00
; ---------------------------------------------------------------------------

loc_7103A0B0:				; CODE XREF: sub_71039FB0+96j
					; sub_71039FB0+9Dj
		cmp	ebx, offset dword_7105DEA0
		jnb	loc_71039FC3
		mov	esi, 71000000h
		lea	edi, [ebp+flOldProtect]

loc_7103A0C4:				; CODE XREF: sub_71039FB0+135j
		mov	eax, [ebx+4]
		mov	ecx, 4		; size_t
		add	eax, esi
		mov	edx, [eax]
		add	edx, [ebx]
		add	ebx, 8
		mov	[ebp+flOldProtect], edx
		mov	edx, edi
		call	sub_71039E60
		cmp	ebx, offset dword_7105DEA0
		jb	short loc_7103A0C4

loc_7103A0E7:				; CODE XREF: sub_71039FB0+21Dj
		mov	ecx, ds:dword_7105E01C
		test	ecx, ecx
		jle	loc_71039FC3
		xor	ebx, ebx
		xor	esi, esi
		lea	edi, [ebp+flOldProtect]
		jmp	short loc_7103A112
; ---------------------------------------------------------------------------
		align 10h

loc_7103A100:				; CODE XREF: sub_71039FB0+16Dj
					; sub_71039FB0+1BBj
		add	esi, 1
		add	ebx, 0Ch
		cmp	esi, ds:dword_7105E01C
		jge	loc_71039FC3

loc_7103A112:				; CODE XREF: sub_71039FB0+14Cj
		mov	eax, ds:dword_7105E018
		add	eax, ebx
		mov	edx, [eax]
		test	edx, edx
		jz	short loc_7103A100
		lea	edx, [ebp+Buffer]
		mov	dword ptr [esp+8], 1Ch ; dwLength
		mov	[esp+4], edx	; lpBuffer
		mov	eax, [eax+4]
		mov	[esp], eax	; lpAddress
		call	ds:VirtualQuery
		sub	esp, 0Ch
		test	eax, eax
		jz	loc_7103A1F0
		mov	eax, ds:dword_7105E018
		mov	[esp+0Ch], edi	; lpflOldProtect
		mov	eax, [eax+ebx]
		mov	[esp+8], eax	; flNewProtect
		mov	eax, [ebp+Buffer.RegionSize]
		mov	[esp+4], eax	; dwSize
		mov	eax, [ebp+Buffer.BaseAddress]
		mov	[esp], eax	; lpAddress
		call	ds:VirtualProtect
		sub	esp, 10h
		jmp	short loc_7103A100
; ---------------------------------------------------------------------------

loc_7103A16D:				; CODE XREF: sub_71039FB0+D1j
		movzx	edx, word ptr [eax]
		test	dx, dx
		js	short loc_7103A1E1
		sub	edx, ecx
		lea	edi, [edx+edi]
		mov	[ebp+var_1C], edi

loc_7103A17D:				; CODE XREF: sub_71039FB0+23Ej
		mov	ecx, 2		; size_t
		lea	edx, [ebp+var_1C]
		call	sub_71039E60
		jmp	short loc_7103A1BE
; ---------------------------------------------------------------------------

loc_7103A18C:				; CODE XREF: sub_71039FB0+E3j
		movzx	edx, byte ptr [eax]
		test	dl, dl
		js	short loc_7103A1D2
		sub	edx, ecx
		lea	edi, [edx+edi]
		mov	[ebp+var_1C], edi

loc_7103A19B:				; CODE XREF: sub_71039FB0+22Fj
		mov	ecx, 1		; size_t
		lea	edx, [ebp+var_1C]
		call	sub_71039E60
		jmp	short loc_7103A1BE
; ---------------------------------------------------------------------------

loc_7103A1AA:				; CODE XREF: sub_71039FB0+DAj
		add	edi, [eax]
		lea	edx, [ebp+var_1C]
		sub	edi, ecx
		mov	ecx, 4		; size_t
		mov	[ebp+var_1C], edi
		call	sub_71039E60

loc_7103A1BE:				; CODE XREF: sub_71039FB0+1DAj
					; sub_71039FB0+1F8j
		add	ebx, 0Ch
		cmp	ebx, offset dword_7105DEA0
		jb	loc_7103A06F
		jmp	loc_7103A0E7
; ---------------------------------------------------------------------------

loc_7103A1D2:				; CODE XREF: sub_71039FB0+1E1j
		or	edx, 0FFFFFF00h
		sub	edx, ecx
		add	edx, edi
		mov	[ebp+var_1C], edx
		jmp	short loc_7103A19B
; ---------------------------------------------------------------------------

loc_7103A1E1:				; CODE XREF: sub_71039FB0+1C3j
		or	edx, 0FFFF0000h
		sub	edx, ecx
		add	edx, edi
		mov	[ebp+var_1C], edx
		jmp	short loc_7103A17D
; ---------------------------------------------------------------------------

loc_7103A1F0:				; CODE XREF: sub_71039FB0+18Fj
		add	ebx, ds:dword_7105E018
		mov	eax, [ebx+4]
		mov	[esp+8], eax
		mov	eax, [ebx+8]
		mov	eax, [eax+8]
		mov	dword ptr [esp], offset	aVirtualqueryFa	; "  VirtualQuery failed for %d	bytes at a"...
		mov	[esp+4], eax	; char
		call	sub_71039E00
; ---------------------------------------------------------------------------

loc_7103A213:				; CODE XREF: sub_71039FB0+A5j
		mov	[esp+4], eax	; char
		mov	dword ptr [esp], offset	aUnknownPseud_0	; "  Unknown pseudo relocation protocol	ve"...
		call	sub_71039E00
sub_71039FB0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_7103A230()
sub_7103A230	proc near		; DATA XREF: sub_7103A2C0:loc_7103A28Ao
		sub	esp, 0Ch
		mov	eax, off_71054038
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_7103A257
		xchg	ax, ax

loc_7103A240:				; CODE XREF: sub_7103A230+25j
		call	eax
		mov	eax, off_71054038
		lea	edx, [eax+4]
		mov	eax, [eax+4]
		mov	off_71054038, edx
		test	eax, eax
		jnz	short loc_7103A240

loc_7103A257:				; CODE XREF: sub_7103A230+Cj
		add	esp, 0Ch
		retn
sub_7103A230	endp

; ---------------------------------------------------------------------------
		align 10h
; START	OF FUNCTION CHUNK FOR sub_7103A2C0

loc_7103A260:				; CODE XREF: sub_7103A2C0+1Ej
		push	esi
		push	ebx
		sub	esp, 14h
		mov	ebx, ds:dword_71052BC0
		cmp	ebx, 0FFFFFFFFh
		jz	short loc_7103A2A0

loc_7103A270:				; CODE XREF: sub_7103A2C0-Cj
		test	ebx, ebx
		jz	short loc_7103A28A
		lea	esi, dword_71052BC0[ebx*4]
		nop
		lea	esi, [esi+0]

loc_7103A280:				; CODE XREF: sub_7103A2C0-38j
		call	dword ptr [esi]
		sub	esi, 4
		sub	ebx, 1
		jnz	short loc_7103A280

loc_7103A28A:				; CODE XREF: sub_7103A2C0-4Ej
		mov	[esp+1Ch+var_1C], offset sub_7103A230 ;	_onexit_t
		call	sub_71039CE0
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; END OF FUNCTION CHUNK	FOR sub_7103A2C0
; ---------------------------------------------------------------------------
		align 10h
; START	OF FUNCTION CHUNK FOR sub_7103A2C0

loc_7103A2A0:				; CODE XREF: sub_7103A2C0-52j
		xor	ebx, ebx
		jmp	short loc_7103A2A6
; ---------------------------------------------------------------------------

loc_7103A2A4:				; CODE XREF: sub_7103A2C0-Ej
		mov	ebx, eax

loc_7103A2A6:				; CODE XREF: sub_7103A2C0-1Ej
		lea	eax, [ebx+1]
		mov	edx, ds:dword_71052BC0[eax*4]
		test	edx, edx
		jnz	short loc_7103A2A4
		jmp	short loc_7103A270
; END OF FUNCTION CHUNK	FOR sub_7103A2C0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103A2C0	proc near		; CODE XREF: sub_71001260+92p

var_1C		= dword	ptr -1Ch

; FUNCTION CHUNK AT 7103A260 SIZE 0000003C BYTES
; FUNCTION CHUNK AT 7103A2A0 SIZE 00000016 BYTES

		sub	esp, 0Ch
		mov	ecx, ds:dword_7105E024
		test	ecx, ecx
		jz	short loc_7103A2D1
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_7103A2D1:				; CODE XREF: sub_7103A2C0+Bj
		mov	ds:dword_7105E024, 1
		add	esp, 0Ch
		jmp	short loc_7103A260
sub_7103A2C0	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_7103A2E0	proc near		; CODE XREF: sub_71001260+40p
					; sub_71001260+A6p ...
		mov	eax, 1
		retn	0Ch
sub_7103A2E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103A2F0	proc near		; CODE XREF: sub_71001260+F1p
					; sub_71001260+10Bp ...
		mov	eax, 1
		retn	0Ch
sub_7103A2F0	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	eax, [ebp+4]
		lea	edx, [ebp+4]
		mov	ds:dword_7105E164, edx
		mov	ds:dword_7105E040, 0C0000409h
		mov	ds:dword_7105E044, 1
		mov	ds:dword_7105E158, eax
		mov	ds:dword_7105E04C, eax
		mov	eax, [ebp+8]
		mov	dword ptr [esp], 0
		mov	ds:dword_7105E14C, eax
		mov	eax, dword_71058A80
		mov	[ebp-10h], eax
		mov	eax, dword_71058A84
		mov	[ebp-0Ch], eax
		call	ds:SetUnhandledExceptionFilter
		sub	esp, 4
		mov	dword ptr [esp], offset	off_7105CB14
		call	ds:UnhandledExceptionFilter
		sub	esp, 4
		call	ds:GetCurrentProcess
		mov	dword ptr [esp+4], 0C0000409h
		mov	[esp], eax
		call	ds:TerminateProcess
		sub	esp, 8
		call	abort
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103A390	proc near		; CODE XREF: DllEntryPoint+34p

lpSystemTimeAsFileTime=	dword ptr -4Ch
var_30		= dword	ptr -30h
PerformanceCount= LARGE_INTEGER	ptr -2Ch
SystemTimeAsFileTime= _FILETIME	ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 4Ch
		mov	eax, dword_71058A80
		mov	[esp+4Ch+var_10], ebx
		mov	[esp+4Ch+var_C], esi
		mov	[esp+4Ch+var_8], edi
		cmp	eax, 0BB40E64Eh
		mov	[esp+4Ch+var_4], ebp
		jz	short loc_7103A3D0
		not	eax
		mov	dword_71058A84,	eax

loc_7103A3B6:				; CODE XREF: sub_7103A390+BDj
		mov	ebx, [esp+4Ch+var_10]
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7103A3D0:				; CODE XREF: sub_7103A390+1Dj
		lea	eax, [esp+4Ch+SystemTimeAsFileTime]
		mov	[esp+4Ch+lpSystemTimeAsFileTime], eax ;	lpSystemTimeAsFileTime
		mov	[esp+4Ch+SystemTimeAsFileTime.dwLowDateTime], 0
		mov	[esp+4Ch+SystemTimeAsFileTime.dwHighDateTime], 0
		call	ds:GetSystemTimeAsFileTime
		sub	esp, 4
		mov	eax, [esp+4Ch+SystemTimeAsFileTime.dwHighDateTime]
		mov	ebp, [esp+4Ch+SystemTimeAsFileTime.dwLowDateTime]
		mov	[esp+4Ch+var_30], eax
		call	ds:GetCurrentProcessId
		mov	edi, eax
		call	ds:GetCurrentThreadId
		mov	esi, eax
		call	ds:GetTickCount
		mov	ebx, eax
		lea	eax, [esp+4Ch+PerformanceCount]
		mov	[esp+4Ch+lpSystemTimeAsFileTime], eax ;	lpPerformanceCount
		call	ds:QueryPerformanceCounter
		sub	esp, 4
		xor	ebp, [esp+4Ch+var_30]
		xor	ebp, dword ptr [esp+4Ch+PerformanceCount]
		xor	ebp, dword ptr [esp+4Ch+PerformanceCount+4]
		xor	ebp, edi
		xor	ebp, esi
		xor	ebp, ebx
		mov	eax, ebp
		cmp	ebp, 0BB40E64Eh
		not	eax
		jz	short loc_7103A452

loc_7103A442:				; CODE XREF: sub_7103A390+CBj
		mov	dword_71058A80,	ebp
		mov	dword_71058A84,	eax
		jmp	loc_7103A3B6
; ---------------------------------------------------------------------------

loc_7103A452:				; CODE XREF: sub_7103A390+B0j
		mov	eax, 44BF19B0h
		mov	bp, 0E64Fh
		jmp	short loc_7103A442
sub_7103A390	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103A460	proc near		; CODE XREF: sub_7103A4E0+13p
					; sub_7103A4E0:loc_7103A501p

lpCriticalSection= dword ptr -2Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	eax, ds:dword_7105E380
		test	eax, eax
		jnz	short loc_7103A478
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_7103A478:				; CODE XREF: sub_7103A460+Ej
		mov	[esp+2Ch+lpCriticalSection], offset CriticalSection ; lpCriticalSection
		call	ds:EnterCriticalSection
		mov	ebx, ds:dword_7105E39C
		sub	esp, 4
		test	ebx, ebx
		jz	short loc_7103A4C5
		mov	ebp, ds:TlsGetValue
		mov	edi, ds:GetLastError
		xchg	ax, ax

loc_7103A4A0:				; CODE XREF: sub_7103A460+63j
		mov	eax, [ebx]
		mov	[esp+2Ch+lpCriticalSection], eax ; dwTlsIndex
		call	ebp ; TlsGetValue
		sub	esp, 4
		mov	esi, eax
		call	edi ; GetLastError
		test	eax, eax
		jnz	short loc_7103A4BE
		test	esi, esi
		jz	short loc_7103A4BE
		mov	eax, [ebx+4]
		mov	[esp+2Ch+lpCriticalSection], esi
		call	eax

loc_7103A4BE:				; CODE XREF: sub_7103A460+50j
					; sub_7103A460+54j
		mov	ebx, [ebx+8]
		test	ebx, ebx
		jnz	short loc_7103A4A0

loc_7103A4C5:				; CODE XREF: sub_7103A460+30j
		mov	[esp+2Ch+lpCriticalSection], offset CriticalSection ; lpCriticalSection
		call	ds:LeaveCriticalSection
		sub	esp, 4
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_7103A460	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103A4E0	proc near		; CODE XREF: TlsCallback_1+33p
					; TlsCallback_0+77p

lpCriticalSection= dword ptr -1Ch
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_4]
		cmp	eax, 1
		jz	short loc_7103A530
		jb	short loc_7103A501
		cmp	eax, 3
		jnz	short loc_7103A4F8
		call	sub_7103A460

loc_7103A4F8:				; CODE XREF: sub_7103A4E0+11j
					; sub_7103A4E0+2Ej ...
		mov	eax, 1
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_7103A501:				; CODE XREF: sub_7103A4E0+Cj
		call	sub_7103A460
		mov	eax, ds:dword_7105E380
		cmp	eax, 1
		jnz	short loc_7103A4F8
		mov	ds:dword_7105E380, 0
		mov	[esp+1Ch+lpCriticalSection], offset CriticalSection ; lpCriticalSection
		call	ds:DeleteCriticalSection
		sub	esp, 4
		jmp	short loc_7103A4F8
; ---------------------------------------------------------------------------
		align 10h

loc_7103A530:				; CODE XREF: sub_7103A4E0+Aj
		mov	eax, ds:dword_7105E380
		test	eax, eax
		jz	short loc_7103A550

loc_7103A539:				; CODE XREF: sub_7103A4E0+80j
		mov	ds:dword_7105E380, 1
		mov	eax, 1
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7103A550:				; CODE XREF: sub_7103A4E0+57j
		mov	[esp+1Ch+lpCriticalSection], offset CriticalSection ; lpCriticalSection
		call	ds:InitializeCriticalSection
		sub	esp, 4
		jmp	short loc_7103A539
sub_7103A4E0	endp

; ---------------------------------------------------------------------------
		align 10h

loc_7103A570:				; CODE XREF: .text:7103B086j
		push	ebx
		sub	esp, 18h
		mov	eax, ds:dword_7105E380
		mov	ebx, [esp+20h]
		test	eax, eax
		jnz	short loc_7103A588
		xor	eax, eax
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_7103A588:				; CODE XREF: .text:7103A57Fj
		mov	dword ptr [esp], offset	CriticalSection
		call	ds:EnterCriticalSection
		mov	eax, ds:dword_7105E39C
		sub	esp, 4
		test	eax, eax
		jz	short loc_7103A5BF
		mov	edx, [eax]
		cmp	edx, ebx
		jnz	short loc_7103A5B6
		jmp	short loc_7103A5F6
; ---------------------------------------------------------------------------
		align 10h

loc_7103A5B0:				; CODE XREF: .text:7103A5BDj
		mov	edx, [eax]
		cmp	edx, ebx
		jz	short loc_7103A5D6

loc_7103A5B6:				; CODE XREF: .text:7103A5A5j
		mov	ecx, eax
		mov	eax, [eax+8]
		test	eax, eax
		jnz	short loc_7103A5B0

loc_7103A5BF:				; CODE XREF: .text:7103A59Fj
		mov	dword ptr [esp], offset	CriticalSection
		call	ds:LeaveCriticalSection
		sub	esp, 4

loc_7103A5CF:				; CODE XREF: .text:7103A5F4j
		xor	eax, eax
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_7103A5D6:				; CODE XREF: .text:7103A5B4j
		mov	edx, [eax+8]
		mov	[ecx+8], edx

loc_7103A5DC:				; CODE XREF: .text:7103A5FFj
		mov	[esp], eax
		call	free
		mov	dword ptr [esp], offset	CriticalSection
		call	ds:LeaveCriticalSection
		sub	esp, 4
		jmp	short loc_7103A5CF
; ---------------------------------------------------------------------------

loc_7103A5F6:				; CODE XREF: .text:7103A5A7j
		mov	edx, [eax+8]
		mov	ds:dword_7105E39C, edx
		jmp	short loc_7103A5DC
; ---------------------------------------------------------------------------
		jmp	short loc_7103A610
; ---------------------------------------------------------------------------
		align 10h
; START	OF FUNCTION CHUNK FOR sub_7103B050

loc_7103A610:				; CODE XREF: .text:7103A601j
					; sub_7103B050+1Aj
		push	ebx
		sub	esp, 18h
		mov	eax, ds:dword_7105E380
		test	eax, eax
		jnz	short loc_7103A622

loc_7103A61D:				; CODE XREF: sub_7103B050-A11j
					; sub_7103B050-9D2j
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_7103A622:				; CODE XREF: sub_7103B050-A35j
		mov	[esp+1Ch+var_18], 0Ch ;	size_t
		mov	[esp+1Ch+var_1C], 1 ; size_t
		call	calloc
		mov	ebx, eax
		mov	eax, 0FFFFFFFFh
		test	ebx, ebx
		jz	short loc_7103A61D
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], offset CriticalSection ; lpCriticalSection
		mov	[ebx], eax
		mov	eax, [esp+1Ch+arg_4]
		mov	[ebx+4], eax
		call	ds:EnterCriticalSection
		mov	eax, ds:dword_7105E39C
		mov	ds:dword_7105E39C, ebx
		mov	[ebx+8], eax
		sub	esp, 4
		mov	[esp+1Ch+var_1C], offset CriticalSection ; lpCriticalSection
		call	ds:LeaveCriticalSection
		xor	eax, eax
		sub	esp, 4
		jmp	short loc_7103A61D
; END OF FUNCTION CHUNK	FOR sub_7103B050
; ---------------------------------------------------------------------------
		mov	eax, [esp+4]
		cmp	word ptr [eax],	5A4Dh
		jz	short loc_7103A690

loc_7103A68B:				; CODE XREF: .text:7103A699j
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7103A690:				; CODE XREF: .text:7103A689j
		add	eax, [eax+3Ch]
		cmp	dword ptr [eax], 4550h
		jnz	short loc_7103A68B
		cmp	word ptr [eax+18h], 10Bh
		setz	al
		movzx	eax, al
		retn
; ---------------------------------------------------------------------------
		align 10h
		push	esi
		push	ebx
		mov	eax, [esp+0Ch]
		mov	ebx, [esp+10h]
		add	eax, [eax+3Ch]
		movzx	esi, word ptr [eax+6]
		movzx	edx, word ptr [eax+14h]
		test	esi, esi
		jz	short loc_7103A6EC
		movzx	edx, dx
		lea	eax, [eax+edx+18h]
		xor	edx, edx
		jmp	short loc_7103A6D7
; ---------------------------------------------------------------------------

loc_7103A6D4:				; CODE XREF: .text:7103A6EAj
		add	eax, 28h

loc_7103A6D7:				; CODE XREF: .text:7103A6D2j
		mov	ecx, [eax+0Ch]
		cmp	ecx, ebx
		ja	short loc_7103A6E5
		add	ecx, [eax+8]
		cmp	ebx, ecx
		jb	short loc_7103A6EE

loc_7103A6E5:				; CODE XREF: .text:7103A6DCj
		add	edx, 1
		cmp	edx, esi
		jb	short loc_7103A6D4

loc_7103A6EC:				; CODE XREF: .text:7103A6C7j
		xor	eax, eax

loc_7103A6EE:				; CODE XREF: .text:7103A6E3j
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		jmp	short sub_7103A700
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103A700	proc near		; CODE XREF: sub_71039E60+53p
					; .text:7103A6F1j

arg_0		= dword	ptr  4

		cmp	word ptr ds:71000000h, 5A4Dh
		push	esi
		push	ebx
		jz	short loc_7103A712

loc_7103A70D:				; CODE XREF: sub_7103A700+27j
					; sub_7103A700+2Fj ...
		xor	eax, eax

loc_7103A70F:				; CODE XREF: sub_7103A700+61j
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_7103A712:				; CODE XREF: sub_7103A700+Bj
		mov	eax, ds:7100003Ch
		cmp	dword ptr [eax+71000000h], 4550h
		lea	edx, [eax+71000000h]
		jnz	short loc_7103A70D
		cmp	word ptr [edx+18h], 10Bh
		jnz	short loc_7103A70D
		mov	ebx, [esp+8+arg_0]
		movzx	esi, word ptr [edx+6]
		movzx	eax, word ptr [edx+14h]
		sub	ebx, 71000000h
		test	esi, esi
		jz	short loc_7103A70D
		movzx	eax, ax
		lea	eax, [edx+eax+18h]
		xor	edx, edx
		jmp	short loc_7103A755
; ---------------------------------------------------------------------------

loc_7103A752:				; CODE XREF: sub_7103A700+68j
		add	eax, 28h

loc_7103A755:				; CODE XREF: sub_7103A700+50j
		mov	ecx, [eax+0Ch]
		cmp	ebx, ecx
		jb	short loc_7103A763
		add	ecx, [eax+8]
		cmp	ebx, ecx
		jb	short loc_7103A70F

loc_7103A763:				; CODE XREF: sub_7103A700+5Aj
		add	edx, 1
		cmp	edx, esi
		jb	short loc_7103A752
		jmp	short loc_7103A70D
sub_7103A700	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103A770	proc near		; CODE XREF: sub_71039FB0+2Ap
		cmp	word ptr ds:71000000h, 5A4Dh
		jz	short loc_7103A780

loc_7103A77B:				; CODE XREF: sub_7103A770+25j
					; sub_7103A770+2Dj
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7103A780:				; CODE XREF: sub_7103A770+9j
		mov	eax, ds:7100003Ch
		cmp	dword ptr [eax+71000000h], 4550h
		lea	edx, [eax+71000000h]
		jnz	short loc_7103A77B
		cmp	word ptr [edx+18h], 10Bh
		jnz	short loc_7103A77B
		movzx	eax, word ptr [edx+6]
		retn
sub_7103A770	endp

; ---------------------------------------------------------------------------
		align 10h
		cmp	word ptr ds:71000000h, 5A4Dh
		push	ebx
		mov	edx, [esp+8]
		jz	short loc_7103A7C4

loc_7103A7C0:				; CODE XREF: .text:7103A7D9j
					; .text:7103A7E1j ...
		xor	eax, eax

loc_7103A7C2:				; CODE XREF: .text:7103A80Bj
					; .text:7103A819j
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_7103A7C4:				; CODE XREF: .text:7103A7BEj
		mov	eax, ds:7100003Ch
		cmp	dword ptr [eax+71000000h], 4550h
		lea	ecx, [eax+71000000h]
		jnz	short loc_7103A7C0
		cmp	word ptr [ecx+18h], 10Bh
		jnz	short loc_7103A7C0
		movzx	ebx, word ptr [ecx+6]
		movzx	eax, word ptr [ecx+14h]
		test	ebx, ebx
		jz	short loc_7103A7C0
		movzx	eax, ax
		lea	eax, [ecx+eax+18h]
		xor	ecx, ecx
		jmp	short loc_7103A803
; ---------------------------------------------------------------------------
		align 10h

loc_7103A800:				; CODE XREF: .text:7103A815j
		add	eax, 28h

loc_7103A803:				; CODE XREF: .text:7103A7F8j
		test	byte ptr [eax+27h], 20h
		jz	short loc_7103A810
		test	edx, edx
		jz	short loc_7103A7C2
		sub	edx, 1

loc_7103A810:				; CODE XREF: .text:7103A807j
		add	ecx, 1
		cmp	ecx, ebx
		jb	short loc_7103A800
		xor	eax, eax
		jmp	short loc_7103A7C2
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103A820	proc near		; CODE XREF: sub_71039E60+7Dp
		cmp	word ptr ds:71000000h, 5A4Dh
		jz	short loc_7103A830

loc_7103A82B:				; CODE XREF: sub_7103A820+25j
		xor	eax, eax

locret_7103A82D:			; CODE XREF: sub_7103A820+32j
					; sub_7103A820+36j
		rep retn
; ---------------------------------------------------------------------------
		align 10h

loc_7103A830:				; CODE XREF: sub_7103A820+9j
		mov	eax, ds:7100003Ch
		cmp	dword ptr [eax+71000000h], 4550h
		lea	edx, [eax+71000000h]
		jnz	short loc_7103A82B
		cmp	word ptr [edx+18h], 10Bh
		mov	eax, 71000000h
		jz	short locret_7103A82D
		xor	eax, eax
		jmp	short locret_7103A82D
sub_7103A820	endp

; ---------------------------------------------------------------------------
		align 10h
		cmp	word ptr ds:71000000h, 5A4Dh
		push	esi
		push	ebx
		jz	short loc_7103A872

loc_7103A86D:				; CODE XREF: .text:7103A887j
					; .text:7103A88Fj ...
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_7103A872:				; CODE XREF: .text:7103A86Bj
		mov	eax, ds:7100003Ch
		cmp	dword ptr [eax+71000000h], 4550h
		lea	edx, [eax+71000000h]
		jnz	short loc_7103A86D
		cmp	word ptr [edx+18h], 10Bh
		jnz	short loc_7103A86D
		mov	ebx, [esp+0Ch]
		movzx	esi, word ptr [edx+6]
		movzx	eax, word ptr [edx+14h]
		sub	ebx, 71000000h
		test	esi, esi
		jz	short loc_7103A86D
		movzx	eax, ax
		lea	eax, [edx+eax+18h]
		xor	edx, edx
		jmp	short loc_7103A8B5
; ---------------------------------------------------------------------------

loc_7103A8B2:				; CODE XREF: .text:7103A8C8j
		add	eax, 28h

loc_7103A8B5:				; CODE XREF: .text:7103A8B0j
		mov	ecx, [eax+0Ch]
		cmp	ebx, ecx
		jb	short loc_7103A8C3
		add	ecx, [eax+8]
		cmp	ebx, ecx
		jb	short loc_7103A8D0

loc_7103A8C3:				; CODE XREF: .text:7103A8BAj
		add	edx, 1
		cmp	esi, edx
		ja	short loc_7103A8B2
		jmp	short loc_7103A86D
; ---------------------------------------------------------------------------
		align 10h

loc_7103A8D0:				; CODE XREF: .text:7103A8C1j
		test	eax, eax
		jz	short loc_7103A86D
		mov	eax, [eax+24h]
		pop	ebx
		pop	esi
		not	eax
		shr	eax, 1Fh
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103A8E0	proc near		; CODE XREF: .text:7103AA08p

var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 0Ch
		cmp	word ptr ds:71000000h, 5A4Dh
		mov	[esp+0Ch+var_C], ebx
		mov	eax, [esp+0Ch+arg_0]
		mov	[esp+0Ch+var_8], esi
		mov	[esp+0Ch+var_4], edi
		jz	short loc_7103A910

loc_7103A8FD:				; CODE XREF: sub_7103A8E0+46j
					; sub_7103A8E0+4Ej ...
		xor	eax, eax

loc_7103A8FF:				; CODE XREF: sub_7103A8E0+C8j
		mov	ebx, [esp+0Ch+var_C]
		mov	esi, [esp+0Ch+var_8]
		mov	edi, [esp+0Ch+var_4]
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7103A910:				; CODE XREF: sub_7103A8E0+1Bj
		mov	edx, ds:7100003Ch
		cmp	dword ptr [edx+71000000h], 4550h
		lea	ecx, [edx+71000000h]
		jnz	short loc_7103A8FD
		cmp	word ptr [ecx+18h], 10Bh
		jnz	short loc_7103A8FD
		mov	esi, [ecx+80h]
		test	esi, esi
		jz	short loc_7103A8FD
		movzx	edi, word ptr [ecx+6]
		movzx	edx, word ptr [ecx+14h]
		test	edi, edi
		jz	short loc_7103A8FD
		movzx	edx, dx
		lea	edx, [ecx+edx+18h]
		xor	ecx, ecx
		jmp	short loc_7103A954
; ---------------------------------------------------------------------------

loc_7103A951:				; CODE XREF: sub_7103A8E0+87j
		add	edx, 28h

loc_7103A954:				; CODE XREF: sub_7103A8E0+6Fj
		mov	ebx, [edx+0Ch]
		cmp	esi, ebx
		jb	short loc_7103A962
		add	ebx, [edx+8]
		cmp	esi, ebx
		jb	short loc_7103A96B

loc_7103A962:				; CODE XREF: sub_7103A8E0+79j
		add	ecx, 1
		cmp	edi, ecx
		ja	short loc_7103A951
		jmp	short loc_7103A8FD
; ---------------------------------------------------------------------------

loc_7103A96B:				; CODE XREF: sub_7103A8E0+80j
		test	edx, edx
		lea	esi, [esi+0]
		jz	short loc_7103A8FD
		add	esi, 71000000h
		jmp	short loc_7103A98A
; ---------------------------------------------------------------------------
		align 10h

loc_7103A980:				; CODE XREF: sub_7103A8E0+AFj
					; sub_7103A8E0+B6j
		test	eax, eax
		jle	short loc_7103A9A0
		sub	eax, 1
		add	esi, 14h

loc_7103A98A:				; CODE XREF: sub_7103A8E0+98j
		mov	ecx, [esi+4]
		test	ecx, ecx
		jnz	short loc_7103A980
		mov	edx, [esi+0Ch]
		test	edx, edx
		jnz	short loc_7103A980
		jmp	loc_7103A8FD
; ---------------------------------------------------------------------------
		align 10h

loc_7103A9A0:				; CODE XREF: sub_7103A8E0+A2j
		mov	eax, 71000000h
		add	eax, [esi+0Ch]
		jmp	loc_7103A8FF
sub_7103A8E0	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		xor	edx, edx
		sub	esp, 18h
		mov	eax, ds:dword_7105E3A4
		test	eax, eax
		jz	short loc_7103AA02

loc_7103A9BF:				; CODE XREF: .text:7103AA4Fj
					; .text:7103AA6Aj
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_7103A9C4:				; CODE XREF: .text:7103AA33j
					; .text:7103AA38j
		movzx	edx, byte ptr [eax+3]
		cmp	dl, 43h
		jz	short loc_7103A9D2
		cmp	dl, 63h
		jnz	short loc_7103AA00

loc_7103A9D2:				; CODE XREF: .text:7103A9CBj
		movzx	edx, byte ptr [eax+4]
		cmp	dl, 52h
		jz	short loc_7103A9E2
		cmp	dl, 72h
		xchg	ax, ax
		jnz	short loc_7103AA00

loc_7103A9E2:				; CODE XREF: .text:7103A9D9j
		movzx	edx, byte ptr [eax+5]
		cmp	dl, 54h
		jz	short loc_7103AA3E
		cmp	dl, 74h
		xchg	ax, ax
		jz	short loc_7103AA3E
		sub	edx, 30h
		cmp	dl, 9
		jbe	short loc_7103AA3E
		lea	esi, [esi+0]

loc_7103AA00:				; CODE XREF: .text:7103A9D0j
					; .text:7103A9E0j ...
		mov	edx, ebx

loc_7103AA02:				; CODE XREF: .text:7103A9BDj
					; .text:7103AA3Cj
		lea	ebx, [edx+1]
		mov	[esp], edx
		call	sub_7103A8E0
		test	eax, eax
		jz	short loc_7103AA55
		movzx	edx, byte ptr [eax]
		cmp	dl, 4Dh
		jz	short loc_7103AA1E
		cmp	dl, 6Dh
		jnz	short loc_7103AA00

loc_7103AA1E:				; CODE XREF: .text:7103AA17j
		movzx	edx, byte ptr [eax+1]
		cmp	dl, 53h
		jz	short loc_7103AA2C
		cmp	dl, 73h
		jnz	short loc_7103AA00

loc_7103AA2C:				; CODE XREF: .text:7103AA25j
		movzx	edx, byte ptr [eax+2]
		cmp	dl, 56h
		jz	short loc_7103A9C4
		cmp	dl, 76h
		jz	short loc_7103A9C4
		mov	edx, ebx
		jmp	short loc_7103AA02
; ---------------------------------------------------------------------------

loc_7103AA3E:				; CODE XREF: .text:7103A9E9j
					; .text:7103A9F0j ...
		mov	[esp], eax
		call	ds:GetModuleHandleA
		test	eax, eax
		push	ebx
		mov	ds:dword_7105E3A4, eax
		jnz	loc_7103A9BF

loc_7103AA55:				; CODE XREF: .text:7103AA0Fj
		mov	dword ptr [esp], offset	aMsvcrt_dll ; "msvcrt.dll"
		call	ds:LoadLibraryW
		sub	esp, 4
		mov	ds:dword_7105E3A4, eax
		jmp	loc_7103A9BF
; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 2Ch
		mov	[esp+20h], esi
		mov	esi, [esp+30h]
		mov	[esp+1Ch], ebx
		mov	[esp+24h], edi
		mov	[esp+28h], ebp
		mov	[esp], esi
		call	strlen
		cmp	eax, 8
		jbe	short loc_7103AAB0

loc_7103AA94:				; CODE XREF: .text:7103AAB9j
					; .text:7103AAD0j ...
		xor	ebx, ebx

loc_7103AA96:				; CODE XREF: .text:7103AB0Aj
		mov	eax, ebx
		mov	esi, [esp+20h]
		mov	ebx, [esp+1Ch]
		mov	edi, [esp+24h]
		mov	ebp, [esp+28h]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7103AAB0:				; CODE XREF: .text:7103AA92j
		cmp	word ptr ds:71000000h, 5A4Dh
		jnz	short loc_7103AA94
		mov	eax, ds:7100003Ch
		cmp	dword ptr [eax+71000000h], 4550h
		lea	edx, [eax+71000000h]
		jnz	short loc_7103AA94
		cmp	word ptr [edx+18h], 10Bh
		jnz	short loc_7103AA94
		movzx	ebp, word ptr [edx+6]
		movzx	eax, word ptr [edx+14h]
		test	ebp, ebp
		jz	short loc_7103AA94
		movzx	eax, ax
		xor	edi, edi
		lea	ebx, [edx+eax+18h]
		jmp	short loc_7103AAF4
; ---------------------------------------------------------------------------

loc_7103AAF1:				; CODE XREF: .text:7103AB11j
		add	ebx, 28h

loc_7103AAF4:				; CODE XREF: .text:7103AAEFj
		mov	dword ptr [esp+8], 8
		mov	[esp+4], esi
		mov	[esp], ebx
		call	strncmp
		test	eax, eax
		jz	short loc_7103AA96
		add	edi, 1
		cmp	edi, ebp
		jb	short loc_7103AAF1
		jmp	loc_7103AA94
; ---------------------------------------------------------------------------
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _Unwind_SjLj_Resume]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _Unwind_SjLj_Register]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _Unwind_SjLj_Unregister]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _Unwind_GetTextRelBase]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _Unwind_GetDataRelBase]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _Unwind_GetRegionStart]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _Unwind_GetLanguageSpecificData]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _Unwind_GetIPInfo]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _Unwind_SetGR]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _Unwind_SetIP]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _Unwind_DeleteException]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _Unwind_SjLj_Resume_or_Rethrow]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _Unwind_SjLj_RaiseException]
		align 10h
		mov	edx, [esp+4]
		mov	eax, 0FFFFFFFFh
		xor	ecx, ecx
		lock cmpxchg [edx], ecx
		not	eax
		shr	eax, 1Fh
		retn
; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+20h]
		mov	eax, [ebx+4]
		sub	eax, 1
		test	eax, eax
		mov	[ebx+4], eax
		jz	short loc_7103ABD0

loc_7103ABC5:				; CODE XREF: .text:7103ABE4j
		xor	eax, eax
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7103ABD0:				; CODE XREF: .text:7103ABC3j
		mov	dword ptr [ebx+8], 0
		mov	[esp], ebx
		call	sub_7103B0B0
		sub	esp, 4
		test	eax, eax
		js	short loc_7103ABC5
		mov	dword ptr [esp+8], 0
		mov	dword ptr [esp+4], 1
		mov	eax, [ebx+0Ch]
		mov	[esp], eax
		call	ds:ReleaseSemaphore
		sub	esp, 0Ch
		test	eax, eax
		setz	al
		add	esp, 18h
		movzx	eax, al
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103AC20	proc near		; CODE XREF: sub_7104FB00+48p
					; sub_710517F0+1C1p ...

hSemaphore	= dword	ptr -1Ch
lReleaseCount	= dword	ptr -18h
lpPreviousCount	= dword	ptr -14h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+hSemaphore], ebx
		call	sub_7103B0B0
		mov	edx, eax
		sub	esp, 4
		xor	eax, eax
		test	edx, edx
		js	short loc_7103AC62
		mov	[esp+1Ch+lpPreviousCount], 0 ; lpPreviousCount
		mov	[esp+1Ch+lReleaseCount], 1 ; lReleaseCount
		mov	eax, [ebx+4]
		mov	[esp+1Ch+hSemaphore], eax ; hSemaphore
		call	ds:ReleaseSemaphore
		sub	esp, 0Ch
		test	eax, eax
		setz	al
		movzx	eax, al

loc_7103AC62:				; CODE XREF: sub_7103AC20+19j
		add	esp, 18h
		pop	ebx
		retn
sub_7103AC20	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		sub	esp, 8
		mov	ebx, [esp+10h]
		call	ds:GetCurrentThreadId
		xor	edx, edx
		mov	ecx, eax
		mov	eax, 0FFFFFFFFh
		lock cmpxchg [ebx], edx
		test	eax, eax
		js	short loc_7103ACA4
		cmp	ecx, [ebx+8]
		mov	eax, 1
		jnz	short loc_7103AC9F
		add	dword ptr [ebx+4], 1
		xor	al, al

loc_7103AC9F:				; CODE XREF: .text:7103AC97j
		add	esp, 8
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_7103ACA4:				; CODE XREF: .text:7103AC8Dj
		mov	dword ptr [ebx+4], 1
		xor	eax, eax
		mov	[ebx+8], ecx
		add	esp, 8
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h
		push	esi
		push	ebx
		sub	esp, 14h
		mov	ebx, [esp+20h]
		call	ds:GetCurrentThreadId
		mov	[esp], ebx
		mov	esi, eax
		call	sub_7103B0F0
		sub	esp, 4
		test	eax, eax
		jz	short loc_7103AD00
		cmp	esi, [ebx+8]
		jz	short loc_7103AD26
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	eax, [ebx+0Ch]
		mov	[esp], eax
		call	ds:WaitForSingleObject
		sub	esp, 8
		test	eax, eax
		jnz	short loc_7103AD10

loc_7103AD00:				; CODE XREF: .text:7103ACDEj
		mov	dword ptr [ebx+4], 1
		mov	[ebx+8], esi
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_7103AD10:				; CODE XREF: .text:7103ACFEj
		mov	[esp], ebx
		call	sub_7103B0B0
		mov	eax, 1
		sub	esp, 4
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_7103AD26:				; CODE XREF: .text:7103ACE3j
		mov	[esp], ebx
		call	sub_7103B0B0
		xor	eax, eax
		add	dword ptr [ebx+4], 1
		sub	esp, 4
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103AD40	proc near		; CODE XREF: sub_710517F0+15Fp
					; sub_71051A80+CEp ...

hHandle		= dword	ptr -1Ch
dwMilliseconds	= dword	ptr -18h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+hHandle], ebx
		call	sub_7103B0F0
		sub	esp, 4
		test	eax, eax
		jnz	short loc_7103AD60

loc_7103AD57:				; CODE XREF: sub_7103AD40+39j
		xor	eax, eax
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7103AD60:				; CODE XREF: sub_7103AD40+15j
		mov	[esp+1Ch+dwMilliseconds], 0FFFFFFFFh ; dwMilliseconds
		mov	eax, [ebx+4]
		mov	[esp+1Ch+hHandle], eax ; hHandle
		call	ds:WaitForSingleObject
		sub	esp, 8
		test	eax, eax
		jz	short loc_7103AD57
		mov	[esp+1Ch+hHandle], ebx
		call	sub_7103B0B0
		mov	eax, 1
		sub	esp, 4
		add	esp, 18h
		pop	ebx
		retn
sub_7103AD40	endp

; ---------------------------------------------------------------------------
		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+20h]
		mov	dword ptr [ebx], 0FFFFFFFFh
		mov	dword ptr [ebx+4], 0
		mov	dword ptr [ebx+8], 0
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 0FFFFh
		mov	dword ptr [esp+4], 0
		mov	dword ptr [esp], 0
		call	ds:CreateSemaphoreA
		sub	esp, 10h
		mov	[ebx+0Ch], eax
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103ADE0	proc near		; CODE XREF: sub_7103B210+13p

lpSemaphoreAttributes= dword ptr -1Ch
lInitialCount	= dword	ptr -18h
lMaximumCount	= dword	ptr -14h
lpName		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], 0FFFFFFFFh
		mov	[esp+1Ch+lpName], 0 ; lpName
		mov	[esp+1Ch+lMaximumCount], 0FFFFh	; lMaximumCount
		mov	[esp+1Ch+lInitialCount], 0 ; lInitialCount
		mov	[esp+1Ch+lpSemaphoreAttributes], 0 ; lpSemaphoreAttributes
		call	ds:CreateSemaphoreA
		sub	esp, 10h
		mov	[ebx+4], eax
		add	esp, 18h
		pop	ebx
		retn
sub_7103ADE0	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 1Ch
		mov	eax, [esp+20h]
		mov	eax, [eax+4]
		mov	[esp], eax
		call	ds:CloseHandle
		sub	esp, 4
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_7103AE40(DWORD, LPVOID)
sub_7103AE40	proc near		; CODE XREF: sub_71052330+8Ap

dwTlsIndex	= dword	ptr -1Ch
lpTlsValue	= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+lpTlsValue], eax ; lpTlsValue
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+dwTlsIndex], eax ; dwTlsIndex
		call	ds:TlsSetValue
		sub	esp, 8
		test	eax, eax
		jz	short loc_7103AE65
		xor	eax, eax
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_7103AE65:				; CODE XREF: sub_7103AE40+1Dj
		mov	eax, ds:GetLastError
		add	esp, 1Ch
		jmp	eax
sub_7103AE40	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_7103AE70(DWORD)
sub_7103AE70	proc near		; CODE XREF: sub_71052330+5Fp
					; sub_71052410+5Fp

dwTlsIndex	= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], ebx
		mov	[esp+1Ch+var_4], esi
		call	ds:GetLastError
		mov	ebx, eax
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+dwTlsIndex], eax ; dwTlsIndex
		call	ds:TlsGetValue
		sub	esp, 4
		mov	esi, eax
		mov	[esp+1Ch+dwTlsIndex], ebx ; dwErrCode
		call	ds:SetLastError
		mov	eax, esi
		sub	esp, 4
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_7103AE70	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_7103AEB0(DWORD)
sub_7103AEB0	proc near		; CODE XREF: sub_71052B90+14p

dwTlsIndex	= dword	ptr -1Ch
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+dwTlsIndex], eax ; dwTlsIndex
		call	ds:TlsFree
		sub	esp, 4
		test	eax, eax
		jz	short loc_7103AED0
		xor	eax, eax
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7103AED0:				; CODE XREF: sub_7103AEB0+15j
		mov	eax, ds:GetLastError
		add	esp, 1Ch
		jmp	eax
sub_7103AEB0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103AEE0	proc near		; CODE XREF: sub_7103B230+22p

var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 0Ch
		mov	[esp+0Ch+var_8], ebx
		mov	ebx, [esp+0Ch+arg_4]
		mov	[esp+0Ch+var_4], esi
		mov	esi, [esp+0Ch+arg_0]
		call	ds:TlsAlloc
		cmp	eax, 0FFFFFFFFh
		jz	short loc_7103AF18
		mov	[esi], eax
		mov	esi, [esp+0Ch+var_4]
		mov	[esp+0Ch+arg_4], ebx
		mov	ebx, [esp+0Ch+var_8]
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	sub_7103B050
; ---------------------------------------------------------------------------

loc_7103AF18:				; CODE XREF: sub_7103AEE0+1Cj
		mov	eax, ds:GetLastError
		mov	ebx, [esp+0Ch+var_8]
		mov	esi, [esp+0Ch+var_4]
		add	esp, 0Ch
		jmp	eax
sub_7103AEE0	endp

; ---------------------------------------------------------------------------
		align 10h
		push	esi
		push	ebx
		sub	esp, 14h
		mov	esi, [esp+24h]
		mov	ebx, [esp+20h]
		test	esi, esi
		jz	short loc_7103AF53
		test	ebx, ebx
		jz	short loc_7103AF53
		mov	ecx, [ebx]
		test	ecx, ecx
		jz	short loc_7103AF60

loc_7103AF4B:				; CODE XREF: .text:7103AF76j
					; .text:7103AF92j
		xor	eax, eax

loc_7103AF4D:				; CODE XREF: .text:7103AFA0j
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_7103AF53:				; CODE XREF: .text:7103AF3Fj
					; .text:7103AF43j
		add	esp, 14h
		mov	eax, 16h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7103AF60:				; CODE XREF: .text:7103AF49j
		lea	eax, [ebx+4]
		mov	[esp], eax
		call	sub_7103B0F0
		sub	esp, 4
		test	eax, eax
		jz	short loc_7103AF94
		mov	edx, [ebx]
		test	edx, edx
		jnz	short loc_7103AF4B
		mov	esi, ds:Sleep
		xchg	ax, ax

loc_7103AF80:				; CODE XREF: .text:7103AF90j
		mov	dword ptr [esp], 0
		call	esi ; Sleep
		mov	eax, [ebx]
		sub	esp, 4
		test	eax, eax
		jz	short loc_7103AF80
		jmp	short loc_7103AF4B
; ---------------------------------------------------------------------------

loc_7103AF94:				; CODE XREF: .text:7103AF70j
		call	esi
		xor	eax, eax
		mov	dword ptr [ebx], 1
		xchg	ax, ax
		jmp	short loc_7103AF4D
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103AFB0	proc near		; CODE XREF: sub_71039360+D0p
					; sub_71039360+E2p ...

arg_0		= byte ptr  4

		push	ecx
		lea	ecx, [esp+4+arg_0]
		cmp	eax, 1000h
		jb	short loc_7103AFD1

loc_7103AFBC:				; CODE XREF: sub_7103AFB0+1Fj
		sub	ecx, 1000h
		or	dword ptr [ecx], 0
		sub	eax, 1000h
		cmp	eax, 1000h
		ja	short loc_7103AFBC

loc_7103AFD1:				; CODE XREF: sub_7103AFB0+Aj
		sub	ecx, eax
		or	dword ptr [ecx], 0
		mov	eax, esp
		mov	esp, ecx
		mov	ecx, [eax]
		mov	eax, [eax+4]
		push	eax
		retn
sub_7103AFB0	endp

; ---------------------------------------------------------------------------
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _write]
		align 10h
		mov	eax, [esp+0Ch]
		mov	edx, [esp+8]
		mov	ecx, [esp+4]
		lock cmpxchg [ecx], edx
		retn
; ---------------------------------------------------------------------------
		jmp	short sub_7103B010
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103B010	proc near		; CODE XREF: sub_71001040+53p
					; sub_71001040+C8p ...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, [esp+arg_8]
		mov	edx, [esp+arg_4]
		mov	ecx, [esp+arg_0]
		lock cmpxchg [ecx], edx
		retn	0Ch
sub_7103B010	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+8]
		mov	edx, [esp+4]
		lock xchg eax, [edx]
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103B040	proc near		; CODE XREF: sub_71001040+1A2p
					; sub_71001040+211p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		lock xchg eax, [edx]
		retn	8
sub_7103B040	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103B050	proc near		; CODE XREF: sub_7103AEE0+33j

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

; FUNCTION CHUNK AT 7103A610 SIZE 00000070 BYTES

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_4]
		mov	edx, [esp+0Ch+arg_0]
		test	eax, eax
		jz	short loc_7103B070
		mov	[esp+0Ch+arg_4], eax
		mov	[esp+0Ch+arg_0], edx
		add	esp, 0Ch
		jmp	loc_7103A610
; ---------------------------------------------------------------------------
		align 10h

loc_7103B070:				; CODE XREF: sub_7103B050+Dj
		add	esp, 0Ch
		retn
sub_7103B050	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		add	esp, 0Ch
		jmp	loc_7103A570
; ---------------------------------------------------------------------------
		align 10h
		mov	edx, [esp+4]
		mov	eax, 0FFFFFFFFh
		lock xadd [edx], eax
		sub	eax, 1
		retn
; ---------------------------------------------------------------------------
		jmp	short sub_7103B0B0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103B0B0	proc near		; CODE XREF: .text:7103ABDAp
					; sub_7103AC20+Bp ...

arg_0		= dword	ptr  4

		mov	edx, [esp+arg_0]
		mov	eax, 0FFFFFFFFh
		lock xadd [edx], eax
		sub	eax, 1
		retn	4
sub_7103B0B0	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	edx, [esp+4]
		mov	eax, 1
		lock xadd [edx], eax
		add	eax, 1
		retn
; ---------------------------------------------------------------------------
		jmp	short sub_7103B0F0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103B0F0	proc near		; CODE XREF: .text:7103ACD4p
					; sub_7103AD40+Bp ...

arg_0		= dword	ptr  4

		mov	edx, [esp+arg_0]
		mov	eax, 1
		lock xadd [edx], eax
		add	eax, 1
		retn	4
sub_7103B0F0	endp

; ---------------------------------------------------------------------------
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION malloc]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _amsg_exit]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION free]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _initterm]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION memcpy]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION atan2]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION ceil]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cos]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION sin]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION sqrt]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION strlen]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION tan]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION floor]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION abort]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION strcmp]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION fwrite]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION fputs]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION fputc]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION realloc]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION sprintf]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION strcpy]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _lock]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION __dllonexit]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _unlock]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION vfprintf]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION calloc]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION strncmp]
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7103B1F0	proc near		; DATA XREF: .text:71052BD8o
		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		call	sub_71001430
		mov	dword ptr [esp], offset	sub_71001480 ; _onexit_t
		call	sub_71039CE0
		leave
		retn
sub_7103B1F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103B210	proc near		; DATA XREF: .text:71052BD4o

var_1C		= dword	ptr -1Ch

		sub	esp, 1Ch
		mov	eax, dword_7105403C
		test	eax, eax
		jz	short loc_7103B228
		mov	[esp+1Ch+var_1C], offset dword_71058A70
		call	sub_7103ADE0

loc_7103B228:				; CODE XREF: sub_7103B210+Aj
		add	esp, 1Ch
		retn
sub_7103B210	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103B230	proc near		; DATA XREF: .text:71052BD0o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h

		sub	esp, 1Ch
		mov	eax, dword_7105403C
		mov	byte_71058A64, 0
		test	eax, eax
		jz	short loc_7103B260
		mov	[esp+1Ch+var_18], offset sub_7103B270
		mov	[esp+1Ch+var_1C], offset dword_71058A60
		call	sub_7103AEE0
		test	eax, eax
		setz	byte_71058A64

loc_7103B260:				; CODE XREF: sub_7103B230+11j
		mov	[esp+1Ch+var_1C], offset sub_71052B90 ;	_onexit_t
		call	sub_71039CE0
		add	esp, 1Ch
		retn
sub_7103B230	endp


; =============== S U B	R O U T	I N E =======================================


sub_7103B270	proc near		; DATA XREF: sub_7103B230+13o

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 14h
		mov	esi, [esp+1Ch+arg_0]
		test	esi, esi
		jz	short loc_7103B2A5
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_7103B297

loc_7103B283:				; CODE XREF: sub_7103B270+25j
		mov	ebx, [eax+10h]
		add	eax, 30h
		mov	[esp+1Ch+var_1C], eax
		call	_Unwind_DeleteException
		test	ebx, ebx
		mov	eax, ebx
		jnz	short loc_7103B283

loc_7103B297:				; CODE XREF: sub_7103B270+11j
		mov	[esp+1Ch+arg_0], esi
		add	esp, 14h
		pop	ebx
		pop	esi
		jmp	free
; ---------------------------------------------------------------------------

loc_7103B2A5:				; CODE XREF: sub_7103B270+Bj
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
sub_7103B270	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103B2B0	proc near		; CODE XREF: sub_7103B450+3Bp
					; sub_710525B0+423p

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h

		push	ebx
		mov	ebx, eax
		sub	esp, 28h
		movzx	ecx, byte ptr [eax+14h]
		cmp	cl, 0FFh
		movzx	eax, cl
		jz	short loc_7103B316
		mov	ecx, eax
		and	ecx, 7
		cmp	ecx, 2
		jz	short loc_7103B310
		jle	short loc_7103B2E0
		cmp	ecx, 3
		jz	short loc_7103B2E4
		cmp	ecx, 4
		jz	short loc_7103B306

loc_7103B2D8:				; CODE XREF: sub_7103B2B0+32j
		call	abort
; ---------------------------------------------------------------------------
		align 10h

loc_7103B2E0:				; CODE XREF: sub_7103B2B0+1Cj
		test	ecx, ecx
		jnz	short loc_7103B2D8

loc_7103B2E4:				; CODE XREF: sub_7103B2B0+21j
		shl	edx, 2
		neg	edx

loc_7103B2E9:				; CODE XREF: sub_7103B2B0+5Bj
					; sub_7103B2B0+64j ...
		mov	ecx, [ebx+0Ch]
		add	ecx, edx
		mov	edx, [ebx+8]
		lea	ebx, [esp+2Ch+var_10]
		mov	[esp+2Ch+var_2C], ebx
		call	sub_7103B590
		mov	eax, [esp+2Ch+var_10]
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_7103B306:				; CODE XREF: sub_7103B2B0+26j
		shl	edx, 3
		neg	edx
		jmp	short loc_7103B2E9
; ---------------------------------------------------------------------------
		align 10h

loc_7103B310:				; CODE XREF: sub_7103B2B0+1Aj
		add	edx, edx
		neg	edx
		jmp	short loc_7103B2E9
; ---------------------------------------------------------------------------

loc_7103B316:				; CODE XREF: sub_7103B2B0+10j
		xor	edx, edx
		jmp	short loc_7103B2E9
sub_7103B2B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103B320	proc near		; CODE XREF: sub_7103B450+46p
					; sub_710525B0+43Fp

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 2Ch
		mov	[esp+2Ch+var_C], ebx
		mov	ebx, eax
		mov	eax, [ecx]
		mov	[esp+2Ch+var_8], esi
		mov	esi, edx
		mov	[esp+2Ch+var_4], edi
		mov	edi, ecx
		mov	[esp+2Ch+var_10], eax
		mov	eax, [edx]
		mov	[esp+2Ch+var_2C], edx
		call	dword ptr [eax+8]
		test	al, al
		jz	short loc_7103B351
		mov	eax, [esp+2Ch+var_10]
		mov	eax, [eax]
		mov	[esp+2Ch+var_10], eax

loc_7103B351:				; CODE XREF: sub_7103B320+25j
		mov	eax, [ebx]
		lea	edx, [esp+2Ch+var_10]
		mov	[esp+2Ch+var_24], edx
		mov	[esp+2Ch+var_20], 1
		mov	[esp+2Ch+var_28], esi
		mov	[esp+2Ch+var_2C], ebx
		call	dword ptr [eax+10h]
		mov	edx, eax
		xor	eax, eax
		test	dl, dl
		jz	short loc_7103B380
		mov	eax, [esp+2Ch+var_10]
		mov	[edi], eax
		mov	eax, 1

loc_7103B380:				; CODE XREF: sub_7103B320+53j
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
sub_7103B320	endp


; =============== S U B	R O U T	I N E =======================================


sub_7103B390	proc near		; CODE XREF: sub_71051E8D+69p
					; sub_710525B0+E3p ...

var_2C		= dword	ptr -2Ch

		push	ebp
		push	edi
		mov	edi, edx
		push	esi
		mov	esi, eax
		push	ebx
		xor	eax, eax
		sub	esp, 1Ch
		test	esi, esi
		mov	ebx, ecx
		jz	short loc_7103B3AB
		mov	[esp+2Ch+var_2C], esi
		call	_Unwind_GetRegionStart

loc_7103B3AB:				; CODE XREF: sub_7103B390+11j
		mov	[ebx], eax
		movzx	edx, byte ptr [edi]
		add	edi, 1
		cmp	dl, 0FFh
		jz	short loc_7103B437
		movzx	ebp, dl
		mov	edx, esi
		mov	eax, ebp
		call	sub_7103B4D0
		lea	edx, [ebx+4]
		mov	ecx, edi
		mov	[esp+2Ch+var_2C], edx
		mov	edx, eax
		mov	eax, ebp
		call	sub_7103B590
		mov	edi, eax
		movzx	eax, byte ptr [edi]
		add	edi, 1
		cmp	al, 0FFh
		mov	[ebx+14h], al
		jz	short loc_7103B447

loc_7103B3E4:				; CODE XREF: sub_7103B390+B5j
		xor	esi, esi
		xor	ecx, ecx

loc_7103B3E8:				; CODE XREF: sub_7103B390+6Cj
		movzx	eax, byte ptr [edi]
		add	edi, 1
		mov	edx, eax
		and	edx, 7Fh
		shl	edx, cl
		add	ecx, 7
		or	esi, edx
		test	al, al
		js	short loc_7103B3E8
		lea	esi, [edi+esi]
		mov	[ebx+0Ch], esi

loc_7103B404:				; CODE XREF: sub_7103B390+BEj
		movzx	eax, byte ptr [edi]
		xor	ecx, ecx
		mov	[ebx+15h], al
		lea	eax, [edi+1]
		xor	edi, edi

loc_7103B411:				; CODE XREF: sub_7103B390+97j
		movzx	esi, byte ptr [eax]
		add	eax, 1
		mov	edx, esi
		and	edx, 7Fh
		shl	edx, cl
		add	ecx, 7
		or	edi, edx
		mov	edx, esi
		test	dl, dl
		js	short loc_7103B411
		lea	edi, [eax+edi]
		mov	[ebx+10h], edi
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_7103B437:				; CODE XREF: sub_7103B390+26j
		mov	[ebx+4], eax
		movzx	eax, byte ptr [edi]
		add	edi, 1
		cmp	al, 0FFh
		mov	[ebx+14h], al
		jnz	short loc_7103B3E4

loc_7103B447:				; CODE XREF: sub_7103B390+52j
		mov	dword ptr [ebx+0Ch], 0
		jmp	short loc_7103B404
sub_7103B390	endp


; =============== S U B	R O U T	I N E =======================================


sub_7103B450	proc near		; CODE XREF: sub_71051E8D+80p
					; sub_71051E8D+ADp ...

var_20		= dword	ptr -20h
arg_0		= dword	ptr  4

		push	ebp
		mov	ebp, edx
		push	edi
		xor	edx, edx
		push	esi
		mov	edi, eax
		push	ebx
		sub	esp, 1Ch
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_20], ecx
		xor	ecx, ecx
		not	ebx
		add	ebx, [eax+0Ch]
		lea	esi, [esi+0]

loc_7103B470:				; CODE XREF: sub_7103B450+53j
					; sub_7103B450+58j
		movzx	esi, byte ptr [ebx]
		add	ebx, 1
		mov	eax, esi
		and	eax, 7Fh
		shl	eax, cl
		or	edx, eax
		mov	eax, esi
		test	al, al
		js	short loc_7103B4A5
		test	edx, edx
		jz	short loc_7103B4B0
		mov	eax, edi
		call	sub_7103B2B0
		lea	ecx, [esp+2Ch+var_20]
		mov	edx, ebp
		call	sub_7103B320
		test	al, al
		jnz	short loc_7103B4C0
		xor	edx, edx
		xor	ecx, ecx
		jmp	short loc_7103B470
; ---------------------------------------------------------------------------

loc_7103B4A5:				; CODE XREF: sub_7103B450+33j
		add	ecx, 7
		jmp	short loc_7103B470
; ---------------------------------------------------------------------------
		align 10h

loc_7103B4B0:				; CODE XREF: sub_7103B450+37j
		add	esp, 1Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7103B4C0:				; CODE XREF: sub_7103B450+4Dj
		add	esp, 1Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_7103B450	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103B4D0	proc near		; CODE XREF: sub_7103B390+2Fp
					; sub_710525B0+F5p ...

var_1C		= dword	ptr -1Ch

		sub	esp, 1Ch
		cmp	al, 0FFh
		jz	short loc_7103B504
		and	eax, 70h
		cmp	eax, 20h
		jz	short loc_7103B530
		jle	short loc_7103B500
		cmp	eax, 40h
		jz	short loc_7103B517
		cmp	eax, 50h
		lea	esi, [esi+0]
		jz	short loc_7103B504
		cmp	eax, 30h
		jz	short loc_7103B540

loc_7103B4F7:				; CODE XREF: sub_7103B4D0+43j
		call	abort
; ---------------------------------------------------------------------------
		align 10h

loc_7103B500:				; CODE XREF: sub_7103B4D0+Fj
		test	eax, eax
		jnz	short loc_7103B510

loc_7103B504:				; CODE XREF: sub_7103B4D0+5j
					; sub_7103B4D0+20j ...
		xor	eax, eax
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7103B510:				; CODE XREF: sub_7103B4D0+32j
		cmp	eax, 10h
		jnz	short loc_7103B4F7
		jmp	short loc_7103B504
; ---------------------------------------------------------------------------

loc_7103B517:				; CODE XREF: sub_7103B4D0+14j
		mov	[esp+1Ch+var_1C], edx
		lea	esi, [esi+0]
		call	_Unwind_GetRegionStart
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7103B530:				; CODE XREF: sub_7103B4D0+Dj
		mov	[esp+1Ch+var_1C], edx
		call	_Unwind_GetTextRelBase
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7103B540:				; CODE XREF: sub_7103B4D0+25j
		mov	[esp+1Ch+var_1C], edx
		call	_Unwind_GetDataRelBase
		add	esp, 1Ch
		retn
sub_7103B4D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103B550	proc near		; DATA XREF: sub_71052550+37o

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		cmp	[esp+1Ch+arg_0], 1
		lea	edx, [eax-40h]
		ja	short loc_7103B581
		mov	edx, [edx+14h]
		lea	ebx, [eax+20h]
		test	edx, edx
		jz	short loc_7103B574
		lea	ebx, [eax+20h]
		mov	[esp+1Ch+var_1C], ebx
		call	edx

loc_7103B574:				; CODE XREF: sub_7103B550+1Aj
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	loc_710521B0
; ---------------------------------------------------------------------------

loc_7103B581:				; CODE XREF: sub_7103B550+10j
		mov	eax, [edx+1Ch]
		mov	[esp+1Ch+var_1C], eax
		call	sub_7103B980
sub_7103B550	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103B590	proc near		; CODE XREF: sub_7103B2B0+48p
					; sub_7103B390+40p

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 2Ch
		mov	[esp+2Ch+var_10], ebx
		mov	ebx, eax
		mov	eax, ecx
		cmp	bl, 50h
		mov	[esp+2Ch+var_8], edi
		mov	edi, edx
		mov	edx, ebx
		mov	[esp+2Ch+var_C], esi
		mov	[esp+2Ch+var_4], ebp
		jz	loc_7103B6C0
		mov	[esp+2Ch+var_24], ecx
		movzx	ecx, bl
		mov	[esp+2Ch+var_28], ecx
		and	ecx, 0Fh
		cmp	ecx, 0Ch	; switch 13 cases
		jbe	short loc_7103B5D0

loc_7103B5C7:				; CODE XREF: sub_7103B590:loc_7103B5D0j
					; DATA XREF: .rdata:off_7105B540o
		call	abort		; jumptable 7103B5D0 default case
; ---------------------------------------------------------------------------
		align 10h

loc_7103B5D0:				; CODE XREF: sub_7103B590+35j
		jmp	ds:off_7105B540[ecx*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_7103B5D7:				; CODE XREF: sub_7103B590:loc_7103B5D0j
					; DATA XREF: .rdata:off_7105B540o
		mov	ebx, [eax]	; jumptable 7103B5D0 cases 0,3,11
		add	eax, 4

loc_7103B5DC:				; CODE XREF: sub_7103B590+95j
					; sub_7103B590+C9j ...
		test	ebx, ebx
		xchg	ax, ax
		jz	short loc_7103B600
		mov	ecx, [esp+2Ch+var_28]
		and	ecx, 70h
		cmp	ecx, 10h
		jz	loc_7103B6D0

loc_7103B5F2:				; CODE XREF: sub_7103B590+144j
		add	ebx, edi
		test	dl, dl
		jns	short loc_7103B600
		mov	ebx, [ebx]
		lea	esi, [esi+0]

loc_7103B600:				; CODE XREF: sub_7103B590+50j
					; sub_7103B590+66j ...
		mov	edx, [esp+2Ch+arg_0]
		mov	[edx], ebx
		mov	ebx, [esp+2Ch+var_10]
		mov	esi, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_8]
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7103B620:				; CODE XREF: sub_7103B590:loc_7103B5D0j
					; DATA XREF: .rdata:off_7105B540o
		mov	ebx, [eax]	; jumptable 7103B5D0 cases 4,12
		add	eax, 8
		jmp	short loc_7103B5DC
; ---------------------------------------------------------------------------

loc_7103B627:				; CODE XREF: sub_7103B590:loc_7103B5D0j
					; DATA XREF: .rdata:off_7105B540o
		xor	ebx, ebx	; jumptable 7103B5D0 case 9
		xor	ecx, ecx
		mov	esi, ebx
		mov	ebp, edx
		mov	[esp+2Ch+var_20], edi

loc_7103B633:				; CODE XREF: sub_7103B590+BAj
		movzx	ebx, byte ptr [eax]
		add	eax, 1
		movzx	edi, bl
		mov	edx, edi
		and	edx, 7Fh
		shl	edx, cl
		add	ecx, 7
		or	esi, edx
		test	bl, bl
		js	short loc_7103B633
		cmp	ecx, 1Fh
		mov	ebx, esi
		mov	edx, ebp
		mov	esi, edi
		mov	edi, [esp+2Ch+var_20]
		ja	short loc_7103B5DC
		and	esi, 40h
		jz	loc_7103B5DC
		mov	esi, 0FFFFFFFFh
		shl	esi, cl
		or	ebx, esi
		jmp	loc_7103B5DC
; ---------------------------------------------------------------------------

loc_7103B672:				; CODE XREF: sub_7103B590:loc_7103B5D0j
					; DATA XREF: .rdata:off_7105B540o
		mov	ebp, edi	; jumptable 7103B5D0 case 1
		xor	ebx, ebx
		xor	ecx, ecx
		mov	edi, edx
		lea	esi, [esi+0]

loc_7103B680:				; CODE XREF: sub_7103B590+106j
		movzx	edx, byte ptr [eax]
		mov	esi, 7Fh
		add	eax, 1
		and	esi, edx
		shl	esi, cl
		add	ecx, 7
		or	ebx, esi
		test	dl, dl
		js	short loc_7103B680
		mov	edx, edi
		mov	edi, ebp
		jmp	loc_7103B5DC
; ---------------------------------------------------------------------------

loc_7103B6A1:				; CODE XREF: sub_7103B590:loc_7103B5D0j
					; DATA XREF: .rdata:off_7105B540o
		movsx	ebx, word ptr [eax] ; jumptable	7103B5D0 case 10
		add	eax, 2
		jmp	loc_7103B5DC
; ---------------------------------------------------------------------------
		align 10h

loc_7103B6B0:				; CODE XREF: sub_7103B590:loc_7103B5D0j
					; DATA XREF: .rdata:off_7105B540o
		movzx	ebx, word ptr [eax] ; jumptable	7103B5D0 case 2
		add	eax, 2
		jmp	loc_7103B5DC
; ---------------------------------------------------------------------------
		align 10h

loc_7103B6C0:				; CODE XREF: sub_7103B590+1Ej
		add	eax, 3
		and	eax, 0FFFFFFFCh
		mov	ebx, [eax]
		add	eax, 4
		jmp	loc_7103B600
; ---------------------------------------------------------------------------

loc_7103B6D0:				; CODE XREF: sub_7103B590+5Cj
		mov	edi, [esp+2Ch+var_24]
		jmp	loc_7103B5F2
sub_7103B590	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103B6E0	proc near		; CODE XREF: sub_7100CF5D+9Bp
					; sub_7100CF5D+C1p ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	edx, [esp+0Ch+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jz	short loc_7103B6F7
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_7103B6F7:				; CODE XREF: sub_7103B6E0+11j
		mov	eax, [edx]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_Z5qFreePv
		add	esp, 0Ch
		jmp	eax
sub_7103B6E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103B710	proc near		; DATA XREF: .rdata:7105D48Co

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_7105D5E8
		mov	[esp+1Ch+var_1C], ebx
		call	sub_71023D40
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_710517D0
sub_7103B710	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103B740	proc near		; DATA XREF: .rdata:off_7105D488o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105D5E8
		add	esp, 0Ch
		jmp	sub_71023D40
sub_7103B740	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7103B760	proc near		; DATA XREF: .rdata:7105D4ACo

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_7105363C
		mov	[ebp+var_18], offset sub_7103B81B
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_7105D4A8
		mov	eax, [edx+90h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7103B7E5

loc_7103B7A8:				; CODE XREF: sub_7103B760+9Ej
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7103B800

loc_7103B7BB:				; CODE XREF: sub_7103B760+B9j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_710243A0
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		call	sub_710517D0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_7103B7E5:				; CODE XREF: sub_7103B760+46j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+90h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7103B7A8
; ---------------------------------------------------------------------------

loc_7103B800:				; CODE XREF: sub_7103B760+59j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8Ch]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7103B7BB
sub_7103B760	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7103B81B	proc near		; DATA XREF: sub_7103B760+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-40h], eax
		jz	short loc_7103B841
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8Ch
		mov	[esp+0], eax
		call	sub_710477B0

loc_7103B841:				; CODE XREF: sub_7103B81B+Dj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_710243A0
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_7103B81B	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7103B870	proc near		; DATA XREF: .rdata:off_7105D4A8o

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053644
		mov	[ebp+var_18], offset sub_7103B92B
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_7105D4A8
		mov	eax, [edx+90h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7103B8F0

loc_7103B8B8:				; CODE XREF: sub_7103B870+99j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7103B910

loc_7103B8CB:				; CODE XREF: sub_7103B870+B9j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_710243A0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7103B8F0:				; CODE XREF: sub_7103B870+46j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+90h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7103B8B8
; ---------------------------------------------------------------------------
		align 10h

loc_7103B910:				; CODE XREF: sub_7103B870+59j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8Ch]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7103B8CB
sub_7103B870	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7103B92B	proc near		; DATA XREF: sub_7103B870+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-40h], eax
		jz	short loc_7103B951
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8Ch
		mov	[esp+0], eax
		call	sub_710477B0

loc_7103B951:				; CODE XREF: sub_7103B92B+Dj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_710243A0
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_7103B92B	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn bp-based	frame

sub_7103B980	proc near		; CODE XREF: sub_7103B550+37p
					; sub_710517A0+Bp ...

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053CF0
		mov	[ebp+var_18], offset sub_7103B9BE
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	[ebp+var_38], 2
		call	[ebp+arg_0]
		call	abort
sub_7103B980	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7103B9BE	proc near		; DATA XREF: sub_7103B980+1Do
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-40h], eax
		jz	short loc_7103B9EB
		mov	dword ptr [ebp-38h], 0
		call	sub_71051FB0
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7103B9EB:				; CODE XREF: sub_7103B9BE+Dj
		mov	eax, [ebp-40h]
		mov	[esp+0], eax
		call	sub_71051CE0
		mov	dword ptr [ebp-38h], 1
		call	abort
sub_7103B9BE	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7103BA10	proc near		; CODE XREF: sub_71051740+Bp
					; sub_71051E20+68p

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		call	[esp+0Ch+arg_0]
		call	sub_710517A0
sub_7103BA10	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103BA20	proc near		; DATA XREF: .rdata:7105DD0Co

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105DD08
		add	esp, 0Ch
		jmp	sub_710517D0
sub_7103BA20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103BA40	proc near		; DATA XREF: .rdata:off_7105DD08o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_7105DD08
		retn
sub_7103BA40	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		mov	dword ptr [eax], offset	off_7105DD08
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103BA60	proc near		; DATA XREF: .rdata:7105DD2Co

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_7105DD28
		mov	[esp+1Ch+var_1C], ebx
		call	sub_71051730
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_710517D0
sub_7103BA60	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103BA90	proc near		; DATA XREF: .rdata:off_7105DD28o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105DD28
		add	esp, 0Ch
		jmp	sub_71051730
sub_7103BA90	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103BAB0	proc near		; CODE XREF: sub_7103BB10+11p
					; sub_7103BB40+10j ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105DD28
		add	esp, 0Ch
		jmp	sub_71051730
sub_7103BAB0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103BAD0	proc near		; DATA XREF: .rdata:7105DD6Co

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105DD68
		add	esp, 0Ch
		jmp	sub_710517D0
sub_7103BAD0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103BAF0	proc near		; DATA XREF: .rdata:off_7105DD68o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_7105DD68
		retn
sub_7103BAF0	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		mov	dword ptr [eax], offset	off_7105DD68
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103BB10	proc near		; DATA XREF: .rdata:7105DD8Co

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_7105DD88
		mov	[esp+1Ch+var_1C], ebx
		call	sub_7103BAB0
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_710517D0
sub_7103BB10	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103BB40	proc near		; DATA XREF: .rdata:off_7105DD88o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105DD88
		add	esp, 0Ch
		jmp	sub_7103BAB0
sub_7103BB40	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		mov	eax, [esp+10h]
		mov	dword ptr [eax], offset	off_7105DD88
		add	esp, 0Ch
		jmp	sub_7103BAB0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103BB80	proc near		; DATA XREF: .rdata:7105DDCCo

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_7105DDC8
		mov	[esp+1Ch+var_1C], ebx
		call	sub_7103BAB0
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_710517D0
sub_7103BB80	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103BBB0	proc near		; DATA XREF: .rdata:off_7105DDC8o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105DDC8
		add	esp, 0Ch
		jmp	sub_7103BAB0
sub_7103BBB0	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		mov	eax, [esp+10h]
		mov	dword ptr [eax], offset	off_7105DDC8
		add	esp, 0Ch
		jmp	sub_7103BAB0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103BBF0	proc near		; CODE XREF: sub_7101057B+108p
					; sub_7101057B+189p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_7103BC11
		mov	eax, [edx]
		mov	[esp+1Ch+var_1C], edx
		mov	[esp+1Ch+var_18], eax
		call	sub_710459F0

loc_7103BC11:				; CODE XREF: sub_7103BBF0+11j
		add	esp, 1Ch
		retn
sub_7103BBF0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103BC20	proc near		; DATA XREF: .rdata:7105D5ECo

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_7105D5E8
		mov	[esp+1Ch+var_1C], ebx
		call	sub_71023D40
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_710517D0
sub_7103BC20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103BC50	proc near		; DATA XREF: .rdata:off_7105D5E8o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105D5E8
		add	esp, 0Ch
		jmp	sub_71023D40
sub_7103BC50	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7103BC70	proc near		; DATA XREF: .rdata:7105D60Co

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_71052CE6
		mov	[ebp+var_18], offset sub_7103BD07
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+80h]
		mov	dword ptr [edx], offset	off_7105D608
		test	eax, eax
		jz	short loc_7103BCDD
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7103BCDD
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], 8
		mov	eax, [edx+80h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_7103BCDD:				; CODE XREF: sub_7103BC70+40j
					; sub_7103BC70+4Aj
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_71023D40
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_710517D0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_7103BC70	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7103BD07	proc near		; DATA XREF: sub_7103BC70+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	[esp+0], edx
		call	sub_71023D40
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7103BD07	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7103BD40	proc near		; DATA XREF: .rdata:off_7105D608o

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71052CEC
		mov	[ebp+var_18], offset sub_7103BDCC
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+80h]
		mov	dword ptr [edx], offset	off_7105D608
		test	eax, eax
		jz	short loc_7103BDAD
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7103BDAD
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], 8
		mov	eax, [edx+80h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_7103BDAD:				; CODE XREF: sub_7103BD40+40j
					; sub_7103BD40+4Aj
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_71023D40
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_7103BD40	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7103BDCC	proc near		; DATA XREF: sub_7103BD40+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	[esp+0], edx
		call	sub_71023D40
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7103BDCC	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7103BE00	proc near		; DATA XREF: .rdata:7105D62Co

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_71052CF2
		mov	[ebp+var_18], offset sub_7103BE97
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+80h]
		mov	dword ptr [edx], offset	off_7105D628
		test	eax, eax
		jz	short loc_7103BE6D
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7103BE6D
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], 8
		mov	eax, [edx+80h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_7103BE6D:				; CODE XREF: sub_7103BE00+40j
					; sub_7103BE00+4Aj
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_71023D40
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_710517D0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_7103BE00	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7103BE97	proc near		; DATA XREF: sub_7103BE00+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	[esp+0], edx
		call	sub_71023D40
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7103BE97	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7103BED0	proc near		; DATA XREF: .rdata:off_7105D628o

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71052CF8
		mov	[ebp+var_18], offset sub_7103BF5C
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+80h]
		mov	dword ptr [edx], offset	off_7105D628
		test	eax, eax
		jz	short loc_7103BF3D
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7103BF3D
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], 8
		mov	eax, [edx+80h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_7103BF3D:				; CODE XREF: sub_7103BED0+40j
					; sub_7103BED0+4Aj
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_71023D40
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_7103BED0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7103BF5C	proc near		; DATA XREF: sub_7103BED0+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	[esp+0], edx
		call	sub_71023D40
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7103BF5C	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103BF90	proc near		; DATA XREF: .rdata:7105D68Co

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_7105D688
		mov	[esp+1Ch+var_1C], ebx
		call	sub_71023D40
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_710517D0
sub_7103BF90	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103BFC0	proc near		; DATA XREF: .rdata:off_7105D688o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105D688
		add	esp, 0Ch
		jmp	sub_71023D40
sub_7103BFC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7103BFE0	proc near		; DATA XREF: .rdata:7105D6ACo

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_7105379C
		mov	[ebp+var_18], offset sub_7103C088
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_7105D6A8
		mov	eax, [edx+30h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7103C070

loc_7103C025:				; CODE XREF: sub_7103BFE0+A6j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 2
		add	eax, 0Ch
		mov	[esp], eax
		call	ds:_ZN6QBrushD1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 3
		add	eax, 8
		mov	[esp], eax
		call	ds:_ZN6QBrushD1Ev
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		mov	[esp], eax
		call	sub_710517D0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7103C070:				; CODE XREF: sub_7103BFE0+43j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+30h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7103C025
sub_7103BFE0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7103C088	proc near		; DATA XREF: sub_7103BFE0+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-40h], edx
		jz	short loc_7103C0B4
		cmp	eax, 2
		jz	short loc_7103C0CA
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	ds:_ZN6QBrushD1Ev

loc_7103C0B4:				; CODE XREF: sub_7103C088+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp+0], eax
		call	ds:_ZN6QBrushD1Ev

loc_7103C0CA:				; CODE XREF: sub_7103C088+14j
		mov	eax, [ebp+8]
		mov	edx, [ebp-40h]
		mov	dword ptr [eax], offset	off_7105D728
		mov	[esp+0], edx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_7103C088	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7103C0F0	proc near		; DATA XREF: .rdata:off_7105D6A8o

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_710537A6
		mov	[ebp+var_18], offset sub_7103C18F
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_7105D6A8
		mov	eax, [edx+30h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7103C177

loc_7103C135:				; CODE XREF: sub_7103C0F0+9Dj
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 2
		add	eax, 0Ch
		mov	[esp], eax
		call	ds:_ZN6QBrushD1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 3
		add	eax, 8
		mov	[esp], eax
		call	ds:_ZN6QBrushD1Ev
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_7103C177:				; CODE XREF: sub_7103C0F0+43j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+30h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7103C135
sub_7103C0F0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7103C18F	proc near		; DATA XREF: sub_7103C0F0+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-40h], edx
		jz	short loc_7103C1BB
		cmp	eax, 2
		jz	short loc_7103C1D1
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	ds:_ZN6QBrushD1Ev

loc_7103C1BB:				; CODE XREF: sub_7103C18F+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp+0], eax
		call	ds:_ZN6QBrushD1Ev

loc_7103C1D1:				; CODE XREF: sub_7103C18F+14j
		mov	eax, [ebp+8]
		mov	edx, [ebp-40h]
		mov	dword ptr [eax], offset	off_7105D728
		mov	[esp+0], edx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_7103C18F	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7103C1F0	proc near		; DATA XREF: .rdata:7105D6CCo

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_7105368C
		mov	[ebp+var_18], offset sub_7103C26F
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D6C8
		add	eax, 24h
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_ZN5QFontD1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 2
		add	eax, 10h
		mov	[esp], eax
		call	ds:_ZN5QFontD1Ev
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		mov	[esp], eax
		call	sub_710517D0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_7103C1F0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7103C26F	proc near		; DATA XREF: sub_7103C1F0+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-40h], eax
		jz	short loc_7103C294
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 10h
		mov	[esp+0], eax
		call	ds:_ZN5QFontD1Ev

loc_7103C294:				; CODE XREF: sub_7103C26F+Dj
		mov	eax, [ebp+8]
		mov	dword ptr [eax], offset	off_7105D728
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7103C26F	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7103C2B0	proc near		; DATA XREF: .rdata:off_7105D6C8o

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053694
		mov	[ebp+var_18], offset sub_7103C327
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D6C8
		add	eax, 24h
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_ZN5QFontD1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 2
		add	eax, 10h
		mov	[esp], eax
		call	ds:_ZN5QFontD1Ev
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_7103C2B0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7103C327	proc near		; DATA XREF: sub_7103C2B0+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-40h], eax
		jz	short loc_7103C34C
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 10h
		mov	[esp+0], eax
		call	ds:_ZN5QFontD1Ev

loc_7103C34C:				; CODE XREF: sub_7103C327+Dj
		mov	eax, [ebp+8]
		mov	dword ptr [eax], offset	off_7105D728
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7103C327	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103C370	proc near		; CODE XREF: sub_71033FDD+41p
					; sub_7103414D+41p ...

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esi]
		test	ebx, ebx
		jz	short loc_7103C39A
		mov	eax, [ebx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7103C3B0

loc_7103C392:				; CODE XREF: sub_7103C370+4Cj
		mov	[esp+1Ch+var_1C], ebx
		call	sub_710517D0

loc_7103C39A:				; CODE XREF: sub_7103C370+13j
		mov	dword ptr [esi], 0
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7103C3B0:				; CODE XREF: sub_7103C370+20j
		mov	eax, [ebx+8]
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7103C392
sub_7103C370	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7103C3C0	proc near		; CODE XREF: sub_7101778E+5Bp
					; sub_7101CD4C+296p

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053140
		mov	[ebp+var_18], offset sub_7103C45C
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+154h]
		test	eax, eax
		jz	short loc_7103C406
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7103C437

loc_7103C406:				; CODE XREF: sub_7103C3C0+3Aj
					; sub_7103C3C0+9Aj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7103C42A
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7103C42A:				; CODE XREF: sub_7103C3C0+53j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_7103C437:				; CODE XREF: sub_7103C3C0+44j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+154h]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 154h
		mov	[esp], eax
		call	sub_71047980
		jmp	short loc_7103C406
sub_7103C3C0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7103C45C	proc near		; DATA XREF: sub_7103C3C0+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	[esp+0], edx
		call	sub_710477B0
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7103C45C	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103C490	proc near		; CODE XREF: sub_71023700+92p
					; sub_71023700+BDp ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_7103C4B0
		mov	edx, [eax]
		mov	eax, [edx+4]
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_7103C4B0:				; CODE XREF: sub_7103C490+12j
		add	esp, 0Ch
		retn
sub_7103C490	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103C4C0	proc near		; DATA XREF: .rdata:7105D72Co

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		add	esp, 0Ch
		jmp	sub_710517D0
sub_7103C4C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103C4E0	proc near		; DATA XREF: .rdata:off_7105D728o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		retn
sub_7103C4E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103C4F0	proc near		; CODE XREF: sub_71014C2E+9Ap
					; .text:710150A8p ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_7103C518
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_7103C518
		mov	edx, [eax]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, [edx+4]
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------

loc_7103C518:				; CODE XREF: sub_7103C4F0+Bj
					; sub_7103C4F0+18j
		add	esp, 0Ch
		retn
sub_7103C4F0	endp

; ---------------------------------------------------------------------------
		align 10h
; [00000002 BYTES: COLLAPSED FUNCTION nullsub_6]
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7103C530	proc near		; CODE XREF: sub_71031655+2Ep
					; sub_71031C3E+34p ...

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_710539A8
		mov	[ebp+var_18], offset sub_7103C5A7
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, ds:_ZTV15QGraphicsObject
		mov	ecx, [ebp+arg_0]
		lea	edx, [eax+8]
		add	eax, 40h
		mov	[ecx+8], eax
		mov	eax, ecx
		add	eax, 8
		mov	[ecx], edx
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_ZN13QGraphicsItemD2Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QObjectD2Ev
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_7103C530	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7103C5A7	proc near		; DATA XREF: sub_7103C530+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	[esp+0], edx
		call	ds:_ZN7QObjectD2Ev
		mov	ecx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
sub_7103C5A7	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103C5E0	proc near		; DATA XREF: .rdata:7105D73Co

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		add	esp, 0Ch
		jmp	sub_710517D0
sub_7103C5E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7103C600	proc near		; DATA XREF: .rdata:off_7105D738o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		retn
sub_7103C600	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7103C610	proc near		; CODE XREF: sub_71034690+177p
					; sub_710350E0+2A4p

var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0A8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_710525B0
		mov	[ebp+var_40], offset dword_71053BE8
		mov	[ebp+var_38], offset sub_7103C9B8
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+10h]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[ebp+var_6C], eax
		add	eax, 100h
		mov	[ebp+var_70], eax
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+var_70]
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZN5QFontaSERKS_
		mov	eax, [ebp+var_70]
		mov	edx, ds:_ZNK5QFont9pixelSizeEv
		mov	[esp], eax
		mov	[ebp+var_60], edx
		call	edx ; _ZNK5QFont9pixelSizeEv
		cmp	eax, 0FFFFFFFFh
		jz	loc_7103C930
		mov	edx, [ebp+var_70]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], edx
		call	[ebp+var_60]
		mov	dword ptr [esp+8], 0Ah
		mov	[esp+4], eax
		lea	eax, [ebp+var_10]
		mov	[esp], eax
		call	ds:_ZN7QString6numberEii
		mov	eax, [ebp+var_6C]
		lea	edx, [ebp+var_10]
		mov	[ebp+var_58], 4
		add	eax, 11Ch
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103C916

loc_7103C6E2:				; CODE XREF: sub_7103C610+319j
					; sub_7103C610+38Aj ...
		mov	edx, [ebp+var_70]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], edx
		call	ds:_ZNK5QFont6weightEv
		mov	edx, 190h
		cmp	eax, 32h
		jz	short loc_7103C716
		cmp	eax, 4Bh
		mov	dx, 2BCh
		jz	short loc_7103C716
		cmp	eax, 19h
		mov	dx, 64h
		jz	short loc_7103C716
		lea	edx, [eax+eax*4]
		add	edx, edx

loc_7103C716:				; CODE XREF: sub_7103C610+EDj
					; sub_7103C610+F6j ...
		lea	eax, [ebp+var_14]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	dword ptr [esp+8], 0Ah
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN7QString6numberEii
		mov	edx, [ebp+var_6C]
		lea	eax, [ebp+var_14]
		mov	[ebp+var_58], 3
		add	edx, 118h
		mov	[ebp+var_7C], edx
		sub	esp, 4
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7103C77B
		mov	eax, [ebp+var_14]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7103C77B:				; CODE XREF: sub_7103C610+156j
		mov	eax, [ebp+var_70]
		lea	edx, [ebp+var_18]
		mov	[esp], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], eax
		call	ds:_ZNK5QFont6familyEv
		mov	eax, [ebp+var_6C]
		lea	edx, [ebp+var_18]
		mov	[ebp+var_58], 2
		add	eax, 120h
		mov	[ebp+var_78], eax
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7103C7DA
		mov	eax, [ebp+var_18]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7103C7DA:				; CODE XREF: sub_7103C610+1B5j
		mov	edx, [ebp+var_70]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], edx
		call	ds:_ZNK5QFont5styleEv
		mov	edx, offset aItalic_0 ;	"italic"
		test	eax, eax
		jnz	short loc_7103C7FB
		mov	edx, offset aNormal_0 ;	"normal"

loc_7103C7FB:				; CODE XREF: sub_7103C610+1E4j
		mov	eax, [ebp+var_6C]
		mov	[esp+4], edx
		lea	edx, [ebp+var_1C]
		mov	[esp], edx
		mov	dword ptr [esp+8], 0FFFFFFFFh
		add	eax, 124h
		mov	[ebp+var_74], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN7QString10fromLatin1EPKci
		mov	edx, [ebp+var_74]
		lea	eax, [ebp+var_1C]
		mov	[ebp+var_58], 1
		sub	esp, 4
		mov	[esp+4], eax
		mov	[esp], edx
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7103C862
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7103C862:				; CODE XREF: sub_7103C610+23Dj
		mov	edx, [ebp+var_6C]
		mov	dword ptr [esp+4], offset aFontFamily_0	; "font-family=\""
		mov	eax, [edx+0ACh]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		mov	eax, ds:_ZN11QTextStreamlsEPKc
		mov	[ebp+var_64], eax
		call	eax ; _ZN11QTextStreamlsEPKc
		mov	edx, [ebp+var_78]
		mov	[esp+4], edx
		mov	[esp], eax
		mov	eax, ds:_ZN11QTextStreamlsERK7QString
		mov	[ebp+var_68], eax
		call	eax ; _ZN11QTextStreamlsERK7QString
		mov	dword ptr [esp+4], offset aFontSize_0 ;	"\" font-size=\""
		mov	[esp], eax
		call	[ebp+var_64]
		mov	edx, [ebp+var_6C]
		add	edx, 11Ch
		mov	[esp+4], edx
		mov	[esp], eax
		call	[ebp+var_68]
		mov	dword ptr [esp+4], offset aFontWeight_0	; "\" font-weight=\""
		mov	[esp], eax
		call	[ebp+var_64]
		mov	edx, [ebp+var_7C]
		mov	[esp+4], edx
		mov	[esp], eax
		call	[ebp+var_68]
		mov	dword ptr [esp+4], offset aFontStyle_0 ; "\" font-style=\""
		mov	[esp], eax
		call	[ebp+var_64]
		mov	edx, [ebp+var_74]
		mov	[esp+4], edx
		mov	[esp], eax
		call	[ebp+var_68]
		mov	dword ptr [esp+4], offset asc_7105AD8D ; "\" "
		mov	[esp], eax
		call	[ebp+var_64]
		mov	[esp], eax
		call	ds:_Z4endlR11QTextStream
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_7103C916:				; CODE XREF: sub_7103C610+CCj
		mov	eax, [ebp+var_10]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103C6E2
; ---------------------------------------------------------------------------
		align 10h

loc_7103C930:				; CODE XREF: sub_7103C610+71j
		mov	eax, [ebp+var_70]
		mov	[esp], eax
		call	ds:_ZNK5QFont10pointSizeFEv
		mov	edx, [ebp+var_6C]
		lea	eax, [ebp+var_C]
		mov	dword ptr [esp+10h], 6
		mov	dword ptr [esp+0Ch], 67h
		fild	dword ptr [edx+0B0h]
		fmulp	st(1), st
		mov	[esp], eax
		fdiv	ds:flt_7105B438
		fstp	qword ptr [esp+4]
		call	ds:_ZN7QString6numberEdci
		mov	eax, [ebp+var_6C]
		lea	edx, [ebp+var_C]
		mov	[ebp+var_58], 5
		add	eax, 11Ch
		sub	esp, 4
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7103C6E2
		mov	eax, [ebp+var_C]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103C6E2
sub_7103C610	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7103C9B8	proc near		; DATA XREF: sub_7103C610+23o
		add	ebp, 8
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-80h], edx
		jz	short loc_7103C9FC
		cmp	eax, 2
		jz	short loc_7103CA0B
		cmp	eax, 3
		jz	short loc_7103CA06
		cmp	eax, 4
		jz	short loc_7103CA01
		lea	eax, [ebp-1Ch]

loc_7103C9DB:				; CODE XREF: sub_7103C9B8+47j
					; sub_7103C9B8+4Cj ...
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_710477B0
		mov	eax, [ebp-80h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7103C9FC:				; CODE XREF: sub_7103C9B8+Fj
		lea	eax, [ebp-18h]
		jmp	short loc_7103C9DB
; ---------------------------------------------------------------------------

loc_7103CA01:				; CODE XREF: sub_7103C9B8+1Ej
		lea	eax, [ebp-0Ch]
		jmp	short loc_7103C9DB
; ---------------------------------------------------------------------------

loc_7103CA06:				; CODE XREF: sub_7103C9B8+19j
		lea	eax, [ebp-10h]
		jmp	short loc_7103C9DB
; ---------------------------------------------------------------------------

loc_7103CA0B:				; CODE XREF: sub_7103C9B8+14j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_710477B0
		mov	edx, [ebp-80h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_7103C9B8	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7103CA30	proc near		; CODE XREF: sub_710350E0+99p

var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= byte ptr -9Ch
var_98		= dword	ptr -98h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= byte ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 0E4h
		mov	[ebp+var_7C], eax
		lea	eax, [ebp+var_9C]
		mov	[esp], eax
		mov	[ebp+var_84], offset sub_710525B0
		mov	[ebp+var_80], offset word_71053C3A
		mov	[ebp+var_78], offset sub_7103D43B
		mov	[ebp+var_74], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		mov	ebx, [ebp+arg_0]
		mov	[esp+4], edx
		mov	eax, [ebx+10h]
		mov	[ebp+var_98], 0FFFFFFFFh
		add	eax, 0C4h
		mov	[esp], eax
		call	ds:_ZN6QBrushaSERKS_
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		cmp	dword ptr [eax+4], 11h ; switch	18 cases
		ja	loc_7103CCC0	; jumptable 7103CAA0 default case
		mov	eax, [eax+4]
		jmp	ds:off_7105B294[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_7103CAA7:				; CODE XREF: sub_7103CA30+70j
					; DATA XREF: .rdata:off_7105B294o
		mov	edx, [ebp+arg_4] ; jumptable 7103CAA0 case 15
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp], edx
		call	ds:_ZNK6QBrush8gradientEv
		mov	ebx, [ebp+arg_0]
		mov	[esp], ebx
		mov	[esp+4], eax
		call	sub_7103E740
		mov	eax, [ebx+10h]
		lea	ebx, [ebp+var_1C]
		mov	[ebp+var_A], 20h
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aUrl1	; "url(#%1)"
		add	eax, 108h
		mov	[ebp+var_C4], eax
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		call	ds:_ZN7QString10fromLatin1EPKci
		lea	edx, [ebp+var_A]
		lea	eax, [ebp+var_20]
		mov	[ebp+var_98], 12h
		sub	esp, 4
		mov	[esp+10h], edx
		mov	edx, [ebp+var_C4]
		mov	dword ptr [esp+0Ch], 0
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	[esp+8], edx
		call	ds:_ZNK7QString3argERKS_iRK5QChar
		mov	edx, [ebp+arg_0]
		sub	esp, 4
		lea	eax, [ebp+var_20]
		mov	[esp+4], eax
		mov	eax, [edx+10h]
		mov	[ebp+var_98], 11h
		add	eax, 138h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103D380

loc_7103CB6E:				; CODE XREF: sub_7103CA30+966j
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7103CB91
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7103CB91:				; CODE XREF: sub_7103CA30+149j
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_24], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_24]
		mov	[esp+4], eax
		mov	eax, [edx+10h]
		mov	[ebp+var_98], 10h
		add	eax, 13Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7103CBE7
		mov	eax, [ebp+var_24]
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7103CBE7:				; CODE XREF: sub_7103CA30+19Fj
		mov	eax, ds:_ZN7QString17fromLatin1_helperEPKci
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_7105B25A ; ")\" "
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[ebp+var_A0], eax
		call	eax ; _ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_2C], eax
		mov	eax, [edx+10h]
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aFillUrl ; "fill=\"url(#"
		mov	[ebp+var_98], 0Fh
		add	eax, 108h
		mov	[ebp+var_C0], eax
		call	[ebp+var_A0]
		mov	ebx, [ebp+arg_0]
		mov	[ebp+var_28], eax
		lea	eax, [ebp+var_28]
		mov	[esp+4], eax
		mov	eax, [ebx+10h]
		mov	eax, [eax+0ACh]
		mov	[ebp+var_98], 0Eh
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	edx, [ebp+var_C0]
		mov	[esp], eax
		mov	[esp+4], edx
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_2C]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_28]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103D3E0

loc_7103CC9D:				; CODE XREF: sub_7103CA30+9C6j
		mov	eax, [ebp+var_2C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7103CCC0 ; jumptable 7103CAA0	default	case
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7103CCC0:				; CODE XREF: sub_7103CA30+67j
					; sub_7103CA30+70j ...
		lea	eax, [ebp+var_9C] ; jumptable 7103CAA0 default case
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	ebx, [ebp+var_4]
		leave
		retn
; ---------------------------------------------------------------------------

loc_7103CCD3:				; CODE XREF: sub_7103CA30+70j
					; DATA XREF: .rdata:off_7105B294o
		mov	eax, [ebp+arg_4] ; jumptable 7103CAA0 case 17
		lea	ebx, [ebp+var_44]
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZNK6QBrush8gradientEv
		mov	dword ptr [esp], offset	aSvgSDonTSuppor	; "svg's don't support conical gradients!"
		call	ds:_Z8qWarningPKcz
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_E], 20h
		mov	eax, [edx+10h]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aUrl1	; "url(#%1)"
		mov	[esp], ebx
		add	eax, 108h
		mov	[ebp+var_B4], eax
		call	ds:_ZN7QString10fromLatin1EPKci
		lea	edx, [ebp+var_E]
		lea	eax, [ebp+var_48]
		mov	[ebp+var_98], 8
		sub	esp, 4
		mov	[esp+10h], edx
		mov	edx, [ebp+var_B4]
		mov	dword ptr [esp+0Ch], 0
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	[esp+8], edx
		call	ds:_ZNK7QString3argERKS_iRK5QChar
		mov	edx, [ebp+arg_0]
		sub	esp, 4
		lea	eax, [ebp+var_48]
		mov	[esp+4], eax
		mov	eax, [edx+10h]
		mov	[ebp+var_98], 7
		add	eax, 138h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_48]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103D3C0

loc_7103CD98:				; CODE XREF: sub_7103CA30+9A6j
		mov	eax, [ebp+var_44]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7103CDBB
		mov	eax, [ebp+var_44]
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7103CDBB:				; CODE XREF: sub_7103CA30+373j
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_4C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_4C]
		mov	[esp+4], eax
		mov	eax, [edx+10h]
		mov	[ebp+var_98], 6
		add	eax, 13Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_4C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7103CE11
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7103CE11:				; CODE XREF: sub_7103CA30+3C9j
		mov	eax, ds:_ZN7QString17fromLatin1_helperEPKci
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_7105B25A ; ")\" "
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[ebp+var_A8], eax
		call	eax ; _ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_54], eax
		mov	eax, [edx+10h]
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aFillUrl ; "fill=\"url(#"
		mov	[ebp+var_98], 5
		add	eax, 108h
		mov	[ebp+var_B0], eax
		call	[ebp+var_A8]
		mov	ebx, [ebp+arg_0]
		mov	[ebp+var_50], eax
		lea	eax, [ebp+var_50]
		mov	[esp+4], eax
		mov	eax, [ebx+10h]
		mov	eax, [eax+0ACh]
		mov	[ebp+var_98], 4
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	edx, [ebp+var_B0]
		mov	[esp], eax
		mov	[esp+4], edx
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_54]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_50]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103D400

loc_7103CEC7:				; CODE XREF: sub_7103CA30+9E6j
		mov	eax, [ebp+var_54]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7103CCC0	; jumptable 7103CAA0 default case
		mov	eax, [ebp+var_54]
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103CCC0	; jumptable 7103CAA0 default case
; ---------------------------------------------------------------------------

loc_7103CEF3:				; CODE XREF: sub_7103CA30+70j
					; DATA XREF: .rdata:off_7105B294o
		mov	dword ptr [esp+4], 0FFFFFFFFh ;	jumptable 7103CAA0 case	0
		mov	dword ptr [esp], offset	aFillNone ; "fill=\"none\" "
		mov	[ebp+var_98], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_58], eax
		lea	eax, [ebp+var_58]
		mov	[esp+4], eax
		mov	eax, [edx+10h]
		mov	eax, [eax+0ACh]
		mov	[ebp+var_98], 3
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_58]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7103CF5E
		mov	eax, [ebp+var_58]
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7103CF5E:				; CODE XREF: sub_7103CA30+516j
		mov	edx, [ebp+arg_0]
		lea	ebx, [ebp+var_60]
		mov	eax, [edx+10h]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aNone_0 ; "none"
		mov	[esp], ebx
		add	eax, 138h
		mov	[ebp+var_AC], eax
		mov	[ebp+var_98], 0FFFFFFFFh
		call	ds:_ZN7QString10fromLatin1EPKci
		mov	edx, [ebp+var_AC]
		mov	[ebp+var_98], 1
		sub	esp, 4
		mov	[esp+4], ebx
		mov	[esp], edx
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_60]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7103CFD8
		mov	eax, [ebp+var_60]
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7103CFD8:				; CODE XREF: sub_7103CA30+590j
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_5C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_5C]
		mov	[esp+4], eax
		mov	eax, [edx+10h]
		mov	[ebp+var_98], 2
		add	eax, 13Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_5C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7103CCC0	; jumptable 7103CAA0 default case
		mov	eax, [ebp+var_5C]
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103CCC0	; jumptable 7103CAA0 default case
; ---------------------------------------------------------------------------

loc_7103D037:				; CODE XREF: sub_7103CA30+70j
					; DATA XREF: .rdata:off_7105B294o
		mov	eax, [ebp+arg_4] ; jumptable 7103CAA0 case 16
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZNK6QBrush8gradientEv
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_7103F3B0
		mov	ebx, [ebp+arg_0]
		mov	[ebp+var_C], 20h
		mov	eax, [ebx+10h]
		lea	ebx, [ebp+var_30]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aUrl1	; "url(#%1)"
		add	eax, 108h
		mov	[ebp+var_BC], eax
		lea	eax, [ebp+var_30]
		mov	[esp], eax
		call	ds:_ZN7QString10fromLatin1EPKci
		lea	edx, [ebp+var_C]
		lea	eax, [ebp+var_34]
		mov	[ebp+var_98], 0Dh
		sub	esp, 4
		mov	[esp+10h], edx
		mov	edx, [ebp+var_BC]
		mov	dword ptr [esp+0Ch], 0
		mov	[esp+4], ebx
		mov	[esp], eax
		mov	[esp+8], edx
		call	ds:_ZNK7QString3argERKS_iRK5QChar
		mov	edx, [ebp+arg_0]
		sub	esp, 4
		lea	eax, [ebp+var_34]
		mov	[esp+4], eax
		mov	eax, [edx+10h]
		mov	[ebp+var_98], 0Ch
		add	eax, 138h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_34]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103D360

loc_7103D101:				; CODE XREF: sub_7103CA30+946j
		mov	eax, [ebp+var_30]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7103D124
		mov	eax, [ebp+var_30]
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7103D124:				; CODE XREF: sub_7103CA30+6DCj
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_38], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_38]
		mov	[esp+4], eax
		mov	eax, [edx+10h]
		mov	[ebp+var_98], 0Bh
		add	eax, 13Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_38]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7103D17A
		mov	eax, [ebp+var_38]
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7103D17A:				; CODE XREF: sub_7103CA30+732j
		mov	eax, ds:_ZN7QString17fromLatin1_helperEPKci
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_7105B25A ; ")\" "
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[ebp+var_A4], eax
		call	eax ; _ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_40], eax
		mov	eax, [edx+10h]
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aFillUrl ; "fill=\"url(#"
		mov	[ebp+var_98], 0Ah
		add	eax, 108h
		mov	[ebp+var_B8], eax
		call	[ebp+var_A4]
		mov	ebx, [ebp+arg_0]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp+4], eax
		mov	eax, [ebx+10h]
		mov	eax, [eax+0ACh]
		mov	[ebp+var_98], 9
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	edx, [ebp+var_B8]
		mov	[esp], eax
		mov	[esp+4], edx
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_40]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_3C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103D420

loc_7103D230:				; CODE XREF: sub_7103CA30+A06j
		mov	eax, [ebp+var_40]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7103CCC0	; jumptable 7103CAA0 default case
		mov	eax, [ebp+var_40]
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103CCC0	; jumptable 7103CAA0 default case
; ---------------------------------------------------------------------------
		align 10h

loc_7103D260:				; CODE XREF: sub_7103CA30+70j
					; DATA XREF: .rdata:off_7105B294o
		mov	eax, ds:_ZN7QString11shared_nullE ; jumptable 7103CAA0 case 1
		mov	[ebp+var_14], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	[ebp+var_18], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ebx, [ebp+arg_4]
		lea	ecx, [ebp+var_18]
		lea	edx, [ebp+var_14]
		mov	eax, [ebx]
		mov	[ebp+var_98], 13h
		add	eax, 8
		call	sub_71033BB0
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset aFill_0 ; "fill=\""
		mov	eax, [edx+10h]
		mov	eax, [eax+0ACh]
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		lea	edx, [ebp+var_14]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	dword ptr [esp+4], offset aFillOpacity_0 ; "\" fill-opacity=\""
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		lea	edx, [ebp+var_18]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	dword ptr [esp+4], offset asc_7105AD8D ; "\" "
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		mov	ebx, [ebp+arg_0]
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	eax, [ebx+10h]
		add	eax, 138h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		mov	eax, [ebx+10h]
		add	eax, 13Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7103D3A0

loc_7103D333:				; CODE XREF: sub_7103CA30+986j
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7103CCC0	; jumptable 7103CAA0 default case
		mov	eax, [ebp+var_14]
		mov	[ebp+var_98], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103CCC0	; jumptable 7103CAA0 default case
; ---------------------------------------------------------------------------
		align 10h

loc_7103D360:				; CODE XREF: sub_7103CA30+6CBj
		mov	eax, [ebp+var_34]
		mov	[ebp+var_98], 0Dh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103D101
; ---------------------------------------------------------------------------
		align 10h

loc_7103D380:				; CODE XREF: sub_7103CA30+138j
		mov	eax, [ebp+var_20]
		mov	[ebp+var_98], 12h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103CB6E
; ---------------------------------------------------------------------------
		align 10h

loc_7103D3A0:				; CODE XREF: sub_7103CA30+901j
		mov	eax, [ebp+var_18]
		mov	[ebp+var_98], 14h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103D333
; ---------------------------------------------------------------------------
		align 10h

loc_7103D3C0:				; CODE XREF: sub_7103CA30+362j
		mov	eax, [ebp+var_48]
		mov	[ebp+var_98], 8
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103CD98
; ---------------------------------------------------------------------------
		align 10h

loc_7103D3E0:				; CODE XREF: sub_7103CA30+267j
		mov	eax, [ebp+var_28]
		mov	[ebp+var_98], 0Fh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103CC9D
; ---------------------------------------------------------------------------
		align 10h

loc_7103D400:				; CODE XREF: sub_7103CA30+491j
		mov	eax, [ebp+var_50]
		mov	[ebp+var_98], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103CEC7
; ---------------------------------------------------------------------------
		align 10h

loc_7103D420:				; CODE XREF: sub_7103CA30+7FAj
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_98], 0Ah
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103D230
sub_7103CA30	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7103D43B	proc near		; DATA XREF: sub_7103CA30+2Ao
		add	ebp, 8
		mov	eax, [ebp-98h]
		mov	ebx, [ebp-94h]
		cmp	eax, 1
		mov	[ebp-0C8h], ebx
		jz	loc_7103D530
		cmp	eax, 2
		jz	loc_7103D665
		cmp	eax, 3
		jz	loc_7103D648
		cmp	eax, 4
		xchg	ax, ax
		jz	loc_7103D65D
		cmp	eax, 5
		jz	loc_7103D640
		cmp	eax, 6
		jz	loc_7103D623
		cmp	eax, 7
		nop
		lea	esi, [esi+0]
		jz	loc_7103D638
		cmp	eax, 8
		jz	loc_7103D606
		cmp	eax, 9
		jz	loc_7103D61B
		cmp	eax, 0Ah
		nop
		lea	esi, [esi+0]
		jz	loc_7103D5FE
		cmp	eax, 0Bh
		jz	loc_7103D5E1
		cmp	eax, 0Ch
		jz	loc_7103D5F6
		cmp	eax, 0Dh
		nop
		lea	esi, [esi+0]
		jz	loc_7103D5C4
		cmp	eax, 0Eh
		jz	loc_7103D5D9
		cmp	eax, 0Fh
		jz	loc_7103D5BC
		cmp	eax, 10h
		nop
		lea	esi, [esi+0]
		jz	loc_7103D59F
		cmp	eax, 11h
		jz	loc_7103D5B4
		cmp	eax, 12h
		jz	short loc_7103D55D
		cmp	eax, 13h
		jz	short loc_7103D572
		lea	eax, [ebp-60h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0
		mov	[esp+0], ebx
		mov	dword ptr [ebp-98h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7103D530:				; CODE XREF: sub_7103D43B+18j
		lea	eax, [ebp-5Ch]

loc_7103D533:				; CODE XREF: sub_7103D43B+17Cj
					; sub_7103D43B+184j ...
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0
		mov	ebx, [ebp-0C8h]
		mov	dword ptr [ebp-98h], 0FFFFFFFFh
		mov	[esp+0], ebx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7103D55D:				; CODE XREF: sub_7103D43B+C7j
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0

loc_7103D572:				; CODE XREF: sub_7103D43B+CCj
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0
		mov	eax, [ebp-0C8h]
		mov	dword ptr [ebp-98h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7103D59F:				; CODE XREF: sub_7103D43B+B5j
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0

loc_7103D5B4:				; CODE XREF: sub_7103D43B+BEj
		lea	eax, [ebp-1Ch]
		jmp	loc_7103D533
; ---------------------------------------------------------------------------

loc_7103D5BC:				; CODE XREF: sub_7103D43B+A7j
		lea	eax, [ebp-24h]
		jmp	loc_7103D533
; ---------------------------------------------------------------------------

loc_7103D5C4:				; CODE XREF: sub_7103D43B+95j
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0

loc_7103D5D9:				; CODE XREF: sub_7103D43B+9Ej
		lea	eax, [ebp-2Ch]
		jmp	loc_7103D533
; ---------------------------------------------------------------------------

loc_7103D5E1:				; CODE XREF: sub_7103D43B+7Ej
		lea	eax, [ebp-34h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0

loc_7103D5F6:				; CODE XREF: sub_7103D43B+87j
		lea	eax, [ebp-30h]
		jmp	loc_7103D533
; ---------------------------------------------------------------------------

loc_7103D5FE:				; CODE XREF: sub_7103D43B+75j
		lea	eax, [ebp-38h]
		jmp	loc_7103D533
; ---------------------------------------------------------------------------

loc_7103D606:				; CODE XREF: sub_7103D43B+5Ej
		lea	eax, [ebp-3Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0

loc_7103D61B:				; CODE XREF: sub_7103D43B+67j
		lea	eax, [ebp-40h]
		jmp	loc_7103D533
; ---------------------------------------------------------------------------

loc_7103D623:				; CODE XREF: sub_7103D43B+47j
		lea	eax, [ebp-48h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0

loc_7103D638:				; CODE XREF: sub_7103D43B+55j
		lea	eax, [ebp-44h]
		jmp	loc_7103D533
; ---------------------------------------------------------------------------

loc_7103D640:				; CODE XREF: sub_7103D43B+3Ej
		lea	eax, [ebp-4Ch]
		jmp	loc_7103D533
; ---------------------------------------------------------------------------

loc_7103D648:				; CODE XREF: sub_7103D43B+2Aj
		lea	eax, [ebp-50h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-98h], 0
		call	sub_710477B0

loc_7103D65D:				; CODE XREF: sub_7103D43B+35j
		lea	eax, [ebp-54h]
		jmp	loc_7103D533
; ---------------------------------------------------------------------------

loc_7103D665:				; CODE XREF: sub_7103D43B+21j
		lea	eax, [ebp-58h]
		jmp	loc_7103D533
sub_7103D43B	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7103D670	proc near		; CODE XREF: sub_7103E740+6AEp
					; sub_7103F3B0+75Cp

var_148		= dword	ptr -148h
var_144		= dword	ptr -144h
var_140		= dword	ptr -140h
var_13C		= dword	ptr -13Ch
var_138		= dword	ptr -138h
var_134		= dword	ptr -134h
var_130		= dword	ptr -130h
var_12C		= dword	ptr -12Ch
var_128		= dword	ptr -128h
var_124		= dword	ptr -124h
var_120		= dword	ptr -120h
var_11C		= dword	ptr -11Ch
var_118		= qword	ptr -118h
var_110		= qword	ptr -110h
var_108		= dword	ptr -108h
var_104		= dword	ptr -104h
var_100		= dword	ptr -100h
var_FC		= dword	ptr -0FCh
var_F8		= qword	ptr -0F8h
var_EC		= dword	ptr -0ECh
var_E8		= dword	ptr -0E8h
var_E4		= dword	ptr -0E4h
var_E0		= dword	ptr -0E0h
var_DC		= dword	ptr -0DCh
var_D8		= dword	ptr -0D8h
var_D4		= word ptr -0D4h
var_D2		= word ptr -0D2h
var_CC		= byte ptr -0CCh
var_C8		= dword	ptr -0C8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_90		= qword	ptr -90h
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= word ptr -7Ch
var_78		= qword	ptr -78h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= word ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= word ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= byte ptr -8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		lea	eax, [ebp+var_8]
		sub	esp, 170h
		mov	[ebp+var_AC], eax
		lea	eax, [ebp+var_CC]
		mov	[esp], eax
		mov	[ebp+var_A4], esp
		mov	[ebp+var_B4], offset sub_710525B0
		mov	[ebp+var_B0], offset dword_71053AC8
		mov	[ebp+var_A8], offset sub_7103E1DE
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_8]
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_C8], 0FFFFFFFFh
		mov	[esp+4], edx
		call	ds:_ZNK9QGradient5stopsEv
		mov	ecx, [ebp+arg_8]
		mov	[ebp+var_C8], 0Fh
		sub	esp, 4
		mov	[esp], ecx
		call	ds:_ZNK9QGradient17interpolationModeEv
		test	eax, eax
		jz	loc_7103DCF4

loc_7103D6F4:				; CODE XREF: sub_7103D670+B55j
		mov	edx, [ebp+var_14]

loc_7103D6F7:				; CODE XREF: sub_7103D670+6A0j
					; sub_7103D670+71Bj
		mov	[ebp+var_60], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+var_60]
		test	byte ptr [eax+0Ch], 1
		jz	loc_7103DCCC

loc_7103D70D:				; CODE XREF: sub_7103D670+67Fj
		mov	edx, [ebp+var_60]
		mov	[ebp+var_5C], 0
		mov	ecx, [edx+8]
		lea	eax, [edx+10h]
		mov	[ebp+var_58], eax
		lea	ecx, [ecx+ecx*2]
		lea	edx, [edx+ecx*8+10h]
		cmp	eax, edx
		mov	[ebp+var_54], edx
		jz	loc_7103DB14
		mov	ecx, ds:_ZNK6QColor4blueEv
		mov	[ebp+var_D8], ecx
		jmp	short loc_7103D749
; ---------------------------------------------------------------------------

loc_7103D740:				; CODE XREF: sub_7103D670+49Ej
		cmp	[ebp+var_54], eax
		jz	loc_7103DB14

loc_7103D749:				; CODE XREF: sub_7103D670+CEj
		mov	edx, [eax+8]
		lea	ebx, [ebp+var_88]
		fld	qword ptr [eax]
		fstp	[ebp+var_90]
		mov	[ebp+var_88], edx
		mov	edx, [eax+0Ch]
		mov	[ebp+var_84], edx
		mov	edx, [eax+10h]
		mov	[ebp+var_80], edx
		movzx	eax, word ptr [eax+14h]
		mov	[ebp+var_E], 30h
		mov	[esp], ebx
		mov	[ebp+var_C8], 0Dh
		mov	[ebp+var_7C], ax
		call	[ebp+var_D8]
		mov	[ebp+var_124], eax
		mov	[ebp+var_C], 30h
		mov	[esp], ebx
		mov	[ebp+var_C8], 0Dh
		call	ds:_ZNK6QColor5greenEv
		lea	ecx, [ebp+var_88]
		mov	[ebp+var_120], eax
		mov	[ebp+var_A], 30h
		mov	[esp], ecx
		call	ds:_ZNK6QColor3redEv
		lea	ebx, [ebp+var_20]
		mov	[ebp+var_11C], eax
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset a123 ; "#%1%2%3"
		mov	[esp], ebx
		call	ds:_ZN7QString10fromLatin1EPKci
		mov	eax, [ebp+var_11C]
		sub	esp, 4
		lea	edx, [ebp+var_A]
		mov	[esp+18h], edx
		lea	ecx, [ebp+var_24]
		mov	dword ptr [esp+14h], 10h
		mov	edx, eax
		sar	edx, 1Fh
		mov	dword ptr [esp+10h], 2
		mov	[esp+8], eax
		mov	[esp+0Ch], edx
		mov	[esp+4], ebx
		mov	[esp], ecx
		mov	[ebp+var_C8], 0Ch
		call	ds:_ZNK7QString3argExiiRK5QChar
		mov	eax, [ebp+var_120]
		sub	esp, 4
		lea	edx, [ebp+var_C]
		mov	[esp+18h], edx
		lea	ecx, [ebp+var_28]
		mov	dword ptr [esp+14h], 10h
		mov	edx, eax
		sar	edx, 1Fh
		mov	[esp+0Ch], edx
		lea	edx, [ebp+var_24]
		mov	dword ptr [esp+10h], 2
		mov	[esp+8], eax
		mov	[esp+4], edx
		mov	[esp], ecx
		mov	[ebp+var_C8], 0Bh
		call	ds:_ZNK7QString3argExiiRK5QChar
		mov	eax, [ebp+var_124]
		sub	esp, 4
		lea	edx, [ebp+var_E]
		mov	[esp+18h], edx
		lea	ecx, [ebp+var_1C]
		mov	dword ptr [esp+14h], 10h
		mov	edx, eax
		sar	edx, 1Fh
		mov	[esp+0Ch], edx
		lea	edx, [ebp+var_28]
		mov	dword ptr [esp+10h], 2
		mov	[esp+8], eax
		mov	[esp+4], edx
		mov	[esp], ecx
		mov	[ebp+var_C8], 0Ah
		call	ds:_ZNK7QString3argExiiRK5QChar
		sub	esp, 4
		mov	eax, [ebp+var_28]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103DC90

loc_7103D8DB:				; CODE XREF: sub_7103D670+636j
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103DC70

loc_7103D8EC:				; CODE XREF: sub_7103D670+616j
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103DC50

loc_7103D8FD:				; CODE XREF: sub_7103D670+5F6j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_7105AD78 ; "\" />\n"
		mov	[ebp+var_C8], 7
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		lea	edx, [ebp+var_88]
		mov	[ebp+var_40], eax
		mov	[esp], edx
		mov	[ebp+var_C8], 6
		call	ds:_ZNK6QColor6alphaFEv
		fstp	[ebp+var_118]
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aStopOpacity_0 ; "stop-opacity=\""
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_3C], eax
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_7105AD8D ; "\" "
		mov	[ebp+var_C8], 5
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_38], eax
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aStopColor_0 ; "stop-color=\""
		mov	[ebp+var_C8], 4
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_34], eax
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_7105AD8D ; "\" "
		mov	[ebp+var_C8], 3
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		fld	[ebp+var_90]
		mov	[ebp+var_30], eax
		fstp	[ebp+var_110]
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aStopOffset ; "	   <stop offset=\""
		mov	[ebp+var_C8], 2
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_2C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_C8], 1
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		fld	[ebp+var_110]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEd
		lea	edx, [ebp+var_30]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_34]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_1C]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_38]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_3C]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		fld	[ebp+var_118]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEd
		lea	edx, [ebp+var_40]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_2C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103DC30

loc_7103DA9E:				; CODE XREF: sub_7103D670+5D6j
		mov	eax, [ebp+var_30]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103DC10

loc_7103DAAF:				; CODE XREF: sub_7103D670+5B6j
		mov	eax, [ebp+var_34]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103DBF0

loc_7103DAC0:				; CODE XREF: sub_7103D670+596j
		mov	eax, [ebp+var_38]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103DBD0

loc_7103DAD1:				; CODE XREF: sub_7103D670+576j
		mov	eax, [ebp+var_3C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103DBB0

loc_7103DAE2:				; CODE XREF: sub_7103D670+556j
		mov	eax, [ebp+var_40]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103DB90

loc_7103DAF3:				; CODE XREF: sub_7103D670+536j
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7103DB72

loc_7103DB00:				; CODE XREF: sub_7103D670+518j
		mov	eax, [ebp+var_58]
		mov	edx, [ebp+var_5C]
		add	eax, 18h
		test	edx, edx
		mov	[ebp+var_58], eax
		jz	loc_7103D740

loc_7103DB14:				; CODE XREF: sub_7103D670+BCj
					; sub_7103D670+D3j
		mov	eax, [ebp+var_60]
		test	eax, eax
		jz	short loc_7103DB30
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103DCAB
		lea	esi, [esi+0]

loc_7103DB30:				; CODE XREF: sub_7103D670+4A9j
					; sub_7103D670+657j
		mov	eax, [ebp+var_14]
		test	eax, eax
		jz	short loc_7103DB5D
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7103DB5D
		mov	eax, [ebp+var_14]
		mov	[ebp+var_C8], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		call	sub_71048810

loc_7103DB5D:				; CODE XREF: sub_7103D670+4C5j
					; sub_7103D670+4CFj
		lea	eax, [ebp+var_CC]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		lea	esp, [ebp-8]
		pop	ebx
		pop	esi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_7103DB72:				; CODE XREF: sub_7103D670+48Ej
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_C8], 0Dh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103DB00
; ---------------------------------------------------------------------------
		align 10h

loc_7103DB90:				; CODE XREF: sub_7103D670+47Dj
		mov	eax, [ebp+var_40]
		mov	[ebp+var_C8], 7
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103DAF3
; ---------------------------------------------------------------------------
		align 10h

loc_7103DBB0:				; CODE XREF: sub_7103D670+46Cj
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_C8], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103DAE2
; ---------------------------------------------------------------------------
		align 10h

loc_7103DBD0:				; CODE XREF: sub_7103D670+45Bj
		mov	eax, [ebp+var_38]
		mov	[ebp+var_C8], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103DAD1
; ---------------------------------------------------------------------------
		align 10h

loc_7103DBF0:				; CODE XREF: sub_7103D670+44Aj
		mov	eax, [ebp+var_34]
		mov	[ebp+var_C8], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103DAC0
; ---------------------------------------------------------------------------
		align 10h

loc_7103DC10:				; CODE XREF: sub_7103D670+439j
		mov	eax, [ebp+var_30]
		mov	[ebp+var_C8], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103DAAF
; ---------------------------------------------------------------------------
		align 10h

loc_7103DC30:				; CODE XREF: sub_7103D670+428j
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_C8], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103DA9E
; ---------------------------------------------------------------------------
		align 10h

loc_7103DC50:				; CODE XREF: sub_7103D670+287j
		mov	eax, [ebp+var_20]
		mov	[ebp+var_C8], 7
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103D8FD
; ---------------------------------------------------------------------------
		align 10h

loc_7103DC70:				; CODE XREF: sub_7103D670+276j
		mov	eax, [ebp+var_24]
		mov	[ebp+var_C8], 8
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103D8EC
; ---------------------------------------------------------------------------
		align 10h

loc_7103DC90:				; CODE XREF: sub_7103D670+265j
		mov	eax, [ebp+var_28]
		mov	[ebp+var_C8], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103D8DB
; ---------------------------------------------------------------------------

loc_7103DCAB:				; CODE XREF: sub_7103D670+4B3j
		mov	eax, [ebp+var_60]
		mov	[ebp+var_C8], 0Fh
		mov	[esp+4], eax
		lea	eax, [ebp+var_60]
		mov	[esp], eax
		call	sub_71048810
		jmp	loc_7103DB30
; ---------------------------------------------------------------------------

loc_7103DCCC:				; CODE XREF: sub_7103D670+97j
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_C8], 0Fh
		mov	[esp+4], eax
		lea	eax, [ebp+var_60]
		mov	[esp], eax
		call	sub_71048940
		jmp	loc_7103D70D
; ---------------------------------------------------------------------------

loc_7103DCF4:				; CODE XREF: sub_7103D670+7Ej
		mov	eax, [ebp+var_14]
		add	eax, 18h
		mov	[esp], eax
		call	ds:_ZNK6QColor5alphaEv
		mov	edx, [ebp+var_14]
		mov	[ebp+var_144], eax
		cmp	dword ptr [edx+8], 1
		jle	loc_7103D6F7
		mov	ebx, ds:_ZNK6QColor5alphaEv
		mov	ecx, 1
		mov	[ebp+var_130], 1
		mov	[ebp+var_DC], ebx

loc_7103DD31:				; CODE XREF: sub_7103D670+717j
		mov	edx, [ebp+var_130]
		movzx	ecx, cl
		mov	[ebp+var_140], ecx
		mov	[ebp+var_C8], 0Fh
		lea	eax, [edx+edx*2]
		lea	eax, ds:10h[eax*8]
		add	eax, [ebp+var_14]
		add	eax, 8
		mov	[esp], eax
		call	[ebp+var_DC]
		cmp	[ebp+var_144], eax
		mov	edx, [ebp+var_14]
		setz	al
		add	[ebp+var_130], 1
		mov	ebx, [ebp+var_130]
		and	al, byte ptr [ebp+var_140]
		cmp	ebx, [edx+8]
		mov	ecx, eax
		jl	short loc_7103DD31
		test	al, al
		jnz	loc_7103D6F7
		mov	eax, ds:_ZN11QVectorData11shared_nullE
		mov	[ebp+var_18], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_14]
		mov	[ebp+var_C8], 0Eh
		add	eax, 18h
		mov	[esp], eax
		call	ds:_ZNK6QColor4rgbaEv
		mov	ecx, eax
		mov	edx, eax
		shr	ecx, 18h
		and	edx, 0FF00FFh
		imul	edx, ecx
		movzx	eax, ah
		imul	eax, ecx
		shl	ecx, 18h
		mov	[ebp+var_134], 0
		mov	ebx, edx
		shr	ebx, 8
		and	ebx, 0FF00FFh
		lea	ebx, [edx+ebx+800080h]
		mov	edx, eax
		shr	edx, 8
		shr	ebx, 8
		lea	eax, [edx+eax+80h]
		and	ebx, 0FF00FFh
		and	eax, 0FF00h
		or	ebx, eax
		or	ebx, ecx
		mov	[ebp+var_EC], ebx

loc_7103DE11:				; CODE XREF: sub_7103D670+AA2j
		mov	ebx, [ebp+var_14]
		mov	ecx, [ebp+var_134]
		mov	eax, [ebx+8]
		add	ecx, 1
		mov	[ebp+var_12C], ecx
		mov	[ebp+var_138], ebx
		cmp	ecx, eax
		jge	loc_7103E117
		mov	ecx, [ebp+var_134]
		mov	eax, [ebp+var_12C]
		mov	ebx, [ebp+var_138]
		lea	edx, [eax+eax*2]
		lea	eax, [ecx+ecx*2]
		fld	qword ptr [ebx+edx*8+10h]
		shl	eax, 3
		fsub	qword ptr [ebx+eax+10h]
		mov	[ebp+var_13C], eax
		fdiv	ds:dbl_7105B430
		fstp	qword ptr [esp]	; double
		call	ceil
		mov	edx, [ebp+var_13C]
		lea	ecx, [ebp+var_18]
		mov	[esp], ecx
		mov	[ebp+var_C8], 0Eh
		fnstcw	[ebp+var_D2]
		movzx	eax, [ebp+var_D2]
		mov	ah, 0Ch
		mov	[ebp+var_D4], ax
		lea	eax, [ebx+edx+10h]
		fldcw	[ebp+var_D4]
		fistp	[ebp+var_E0]
		fldcw	[ebp+var_D2]
		mov	[esp+4], eax
		call	sub_71048830
		mov	ebx, [ebp+var_12C]
		lea	eax, [ebx+ebx*2]
		lea	eax, ds:10h[eax*8]
		add	eax, [ebp+var_14]
		add	eax, 8
		mov	[esp], eax
		call	ds:_ZNK6QColor4rgbaEv
		mov	ebx, eax
		mov	edx, eax
		shr	ebx, 18h
		and	edx, 0FF00FFh
		imul	edx, ebx
		movzx	eax, ah
		imul	eax, ebx
		shl	ebx, 18h
		mov	ecx, edx
		shr	ecx, 8
		and	ecx, 0FF00FFh
		lea	ecx, [edx+ecx+800080h]
		mov	edx, eax
		shr	edx, 8
		shr	ecx, 8
		lea	eax, [edx+eax+80h]
		and	ecx, 0FF00FFh
		and	eax, 0FF00h
		or	ecx, eax
		or	ecx, ebx
		cmp	[ebp+var_E0], 1
		mov	[ebp+var_128], ecx
		jle	loc_7103E0FA
		mov	edx, [ebp+var_12C]
		mov	ebx, [ebp+var_134]
		mov	ecx, [ebp+var_14]
		mov	[ebp+var_E4], 1
		lea	eax, [edx+edx*2]
		lea	edx, [ebx+ebx*2]
		mov	ebx, [ebp+var_EC]
		fld	qword ptr [ecx+eax*8+10h]
		shl	edx, 3
		fsub	qword ptr [ecx+edx+10h]
		mov	eax, [ebp+var_EC]
		mov	ecx, [ebp+var_128]
		shr	ebx, 8
		and	ebx, 0FF00FFh
		mov	[ebp+var_E8], ebx
		fstp	[ebp+var_F8]
		and	eax, 0FF00FFh
		fild	[ebp+var_E0]
		and	ecx, 0FF00FFh
		fdivr	[ebp+var_F8]
		mov	[ebp+var_104], eax
		mov	eax, [ebp+var_128]
		mov	[ebp+var_100], ecx
		mov	[ebp+var_108], edx
		shr	eax, 8
		and	eax, 0FF00FFh
		mov	[ebp+var_FC], eax
		fstp	[ebp+var_F8]

loc_7103DFC5:				; CODE XREF: sub_7103D670+A84j
		mov	ecx, [ebp+var_E4]
		shl	ecx, 8
		mov	edx, ecx
		mov	eax, ecx
		sar	edx, 1Fh
		idiv	[ebp+var_E0]
		mov	edx, ecx
		neg	edx
		mov	ecx, [ebp+var_104]
		mov	ebx, eax
		mov	eax, edx
		sar	edx, 1Fh
		idiv	[ebp+var_E0]
		mov	edx, [ebp+var_100]
		imul	edx, ebx
		imul	ebx, [ebp+var_FC]
		add	eax, 100h
		imul	ecx, eax
		imul	eax, [ebp+var_E8]
		add	ecx, edx
		add	eax, ebx
		xor	ebx, ebx
		shr	ecx, 8
		and	eax, 0FF00FF00h
		and	ecx, 0FF00FFh
		or	ecx, eax
		mov	esi, ecx
		shr	esi, 18h
		test	esi, esi
		jz	short loc_7103E07D
		movzx	eax, cl
		mov	edx, eax
		shl	edx, 8
		sub	edx, eax
		mov	eax, edx
		sar	edx, 1Fh
		idiv	esi
		mov	ebx, eax
		mov	eax, esi
		shl	eax, 18h
		or	ebx, eax
		mov	eax, ecx
		shr	eax, 10h
		movzx	ecx, ch
		and	eax, 0FFh
		mov	edx, eax
		shl	edx, 8
		sub	edx, eax
		mov	eax, edx
		sar	edx, 1Fh
		idiv	esi
		mov	edx, ecx
		shl	edx, 8
		sub	edx, ecx
		shl	eax, 10h
		or	ebx, eax
		mov	eax, edx
		sar	edx, 1Fh
		idiv	esi
		shl	eax, 8
		or	ebx, eax

loc_7103E07D:				; CODE XREF: sub_7103D670+9BEj
		lea	edx, [ebp+var_50]
		mov	[esp+4], ebx
		mov	[esp], edx
		mov	[ebp+var_C8], 0Eh
		call	ds:_ZN6QColor8fromRgbaEj
		fild	[ebp+var_E4]
		sub	esp, 4
		fmul	[ebp+var_F8]
		mov	eax, [ebp+var_108]
		add	eax, [ebp+var_14]
		lea	ecx, [ebp+var_18]
		fadd	qword ptr [eax+10h]
		mov	eax, [ebp+var_50]
		mov	[esp], ecx
		mov	[ebp+var_70], eax
		mov	eax, [ebp+var_4C]
		fstp	[ebp+var_78]
		mov	[ebp+var_6C], eax
		mov	eax, [ebp+var_48]
		mov	[ebp+var_68], eax
		movzx	eax, [ebp+var_44]
		mov	[ebp+var_64], ax
		lea	eax, [ebp+var_78]
		mov	[esp+4], eax
		call	sub_71048830
		add	[ebp+var_E4], 1
		mov	ebx, [ebp+var_E0]
		cmp	[ebp+var_E4], ebx
		jl	loc_7103DFC5

loc_7103E0FA:				; CODE XREF: sub_7103D670+8BBj
		mov	eax, [ebp+var_128]
		mov	edx, [ebp+var_12C]
		mov	[ebp+var_EC], eax
		mov	[ebp+var_134], edx
		jmp	loc_7103DE11
; ---------------------------------------------------------------------------

loc_7103E117:				; CODE XREF: sub_7103D670+7BEj
		mov	edx, [ebx]
		cmp	edx, 1
		jz	short loc_7103E13E
		mov	edx, [ebx+4]
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		mov	[ebp+var_C8], 0Eh
		mov	[esp+8], edx
		call	sub_71048940

loc_7103E13E:				; CODE XREF: sub_7103D670+AACj
		mov	eax, [ebp+var_14]
		imul	edx, [eax+8], 18h
		mov	[ebp+var_C8], 0Eh
		lea	eax, [eax+edx-8]
		mov	[esp+4], eax
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		call	sub_71048830
		mov	eax, [ebp+var_18]
		mov	[ebp+var_148], eax
		lock inc dword ptr [eax]
		setnz	al
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7103E1CA

loc_7103E17E:				; CODE XREF: sub_7103D670+B6Cj
		mov	edx, [ebp+var_148]
		mov	[ebp+var_14], edx
		test	byte ptr [edx+0Ch], 1
		jnz	short loc_7103E1B0
		mov	eax, [edx+4]
		mov	[esp+8], eax
		mov	eax, [edx+8]
		mov	[ebp+var_C8], 0Eh
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		call	sub_71048940

loc_7103E1B0:				; CODE XREF: sub_7103D670+B1Bj
		lea	eax, [ebp+var_18]
		mov	[esp], eax
		mov	[ebp+var_C8], 0Fh
		call	sub_71048BC0
		jmp	loc_7103D6F4
; ---------------------------------------------------------------------------

loc_7103E1CA:				; CODE XREF: sub_7103D670+B0Cj
		mov	eax, [ebp+var_14]
		mov	[esp+4], eax
		lea	eax, [ebp+var_14]
		mov	[esp], eax
		call	sub_71048810
		jmp	short loc_7103E17E
sub_7103D670	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7103E1DE	proc near		; DATA XREF: sub_7103D670+37o
		add	ebp, 8
		mov	eax, [ebp-0C8h]
		mov	edx, [ebp-0C4h]
		cmp	eax, 1
		mov	[ebp-14Ch], edx
		jz	loc_7103E294
		cmp	eax, 2
		jz	loc_7103E2A9
		cmp	eax, 3
		jz	loc_7103E2BE
		cmp	eax, 4
		jz	loc_7103E2D3
		cmp	eax, 5
		jz	loc_7103E2E8
		cmp	eax, 6
		jz	loc_7103E2FD
		cmp	eax, 7
		lea	esi, [esi+0]
		jz	loc_7103E3B2
		cmp	eax, 8
		jz	loc_7103E3C9
		cmp	eax, 9
		jz	loc_7103E354
		cmp	eax, 0Ah
		nop
		lea	esi, [esi+0]
		jz	loc_7103E369
		cmp	eax, 0Bh
		jz	loc_7103E37E
		cmp	eax, 0Ch
		jz	loc_7103E312
		cmp	eax, 0Dh
		nop
		lea	esi, [esi+0]
		jz	loc_7103E398
		cmp	eax, 0Eh
		jz	loc_7103E327
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0C8h], 0
		call	sub_710477B0

loc_7103E294:				; CODE XREF: sub_7103E1DE+18j
		lea	eax, [ebp-30h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0C8h], 0
		call	sub_710477B0

loc_7103E2A9:				; CODE XREF: sub_7103E1DE+21j
		lea	eax, [ebp-34h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0C8h], 0
		call	sub_710477B0

loc_7103E2BE:				; CODE XREF: sub_7103E1DE+2Aj
		lea	eax, [ebp-38h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0C8h], 0
		call	sub_710477B0

loc_7103E2D3:				; CODE XREF: sub_7103E1DE+33j
		lea	eax, [ebp-3Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0C8h], 0
		call	sub_710477B0

loc_7103E2E8:				; CODE XREF: sub_7103E1DE+3Cj
		lea	eax, [ebp-40h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0C8h], 0
		call	sub_710477B0

loc_7103E2FD:				; CODE XREF: sub_7103E1DE+45j
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0C8h], 0
		call	sub_710477B0

loc_7103E312:				; CODE XREF: sub_7103E1DE+84j
					; sub_7103E1DE+1B5j
		lea	eax, [ebp-60h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0C8h], 0
		call	sub_71048BC0

loc_7103E327:				; CODE XREF: sub_7103E1DE+9Bj
					; sub_7103E1DE+1CFj
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0C8h], 0
		call	sub_71048BC0
		mov	edx, [ebp-14Ch]
		mov	dword ptr [ebp-0C8h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7103E354:				; CODE XREF: sub_7103E1DE+64j
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0C8h], 0
		call	sub_710477B0

loc_7103E369:				; CODE XREF: sub_7103E1DE+72j
					; sub_7103E1DE+200j
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0C8h], 0
		call	sub_710477B0

loc_7103E37E:				; CODE XREF: sub_7103E1DE+7Bj
					; sub_7103E1DE+1E9j
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0C8h], 0
		call	sub_710477B0
		jmp	loc_7103E312
; ---------------------------------------------------------------------------

loc_7103E398:				; CODE XREF: sub_7103E1DE+92j
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0C8h], 0
		call	sub_71048BC0
		jmp	loc_7103E327
; ---------------------------------------------------------------------------

loc_7103E3B2:				; CODE XREF: sub_7103E1DE+52j
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0C8h], 0
		call	sub_710477B0
		jmp	short loc_7103E37E
; ---------------------------------------------------------------------------

loc_7103E3C9:				; CODE XREF: sub_7103E1DE+5Bj
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0C8h], 0
		call	sub_710477B0
		jmp	short loc_7103E369
sub_7103E1DE	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7103E3E0	proc near		; CODE XREF: sub_71034940+322p

var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_710525B0
		mov	[ebp+var_40], offset dword_71053B28
		mov	[ebp+var_38], offset sub_7103E6CA
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aFillNone ; "fill=\"none\" "
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_C], eax
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [edx+10h]
		mov	eax, [eax+0ACh]
		mov	[ebp+var_58], 7
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7103E471
		mov	eax, [ebp+var_C]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7103E471:				; CODE XREF: sub_7103E3E0+7Cj
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aStrokeBlack ; "stroke=\"black\" "
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_10], eax
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	eax, [edx+10h]
		mov	eax, [eax+0ACh]
		mov	[ebp+var_58], 6
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7103E4D3
		mov	eax, [ebp+var_10]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7103E4D3:				; CODE XREF: sub_7103E3E0+DEj
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aStrokeWidth1 ;	"stroke-width=\"1\" "
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_14], eax
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	eax, [edx+10h]
		mov	eax, [eax+0ACh]
		mov	[ebp+var_58], 5
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7103E535
		mov	eax, [ebp+var_14]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7103E535:				; CODE XREF: sub_7103E3E0+140j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aFillRuleEvenod	; "fill-rule=\"evenodd\" "
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_18], eax
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		mov	eax, [edx+10h]
		mov	eax, [eax+0ACh]
		mov	[ebp+var_58], 4
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7103E597
		mov	eax, [ebp+var_18]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7103E597:				; CODE XREF: sub_7103E3E0+1A2j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aStrokeLinecapS	; "stroke-linecap=\"square\" "
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_1C]
		mov	[esp+4], eax
		mov	eax, [edx+10h]
		mov	eax, [eax+0ACh]
		mov	[ebp+var_58], 3
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7103E5F9
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7103E5F9:				; CODE XREF: sub_7103E3E0+204j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aStrokeLinejoin	; "stroke-linejoin=\"bevel\" "
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_20], eax
		lea	eax, [ebp+var_20]
		mov	[esp+4], eax
		mov	eax, [edx+10h]
		mov	eax, [eax+0ACh]
		mov	[ebp+var_58], 2
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7103E65B
		mov	eax, [ebp+var_20]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7103E65B:				; CODE XREF: sub_7103E3E0+266j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_7105AEAD ; ">\n"
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_24], eax
		lea	eax, [ebp+var_24]
		mov	[esp+4], eax
		mov	eax, [edx+10h]
		mov	eax, [eax+0ACh]
		mov	[ebp+var_58], 1
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7103E6BD
		mov	eax, [ebp+var_24]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7103E6BD:				; CODE XREF: sub_7103E3E0+2C8j
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_7103E3E0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7103E6CA	proc near		; DATA XREF: sub_7103E3E0+20o
		add	ebp, 8
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-60h], edx
		jz	short loc_7103E71B
		cmp	eax, 2
		jz	short loc_7103E737
		cmp	eax, 3
		jz	short loc_7103E732
		cmp	eax, 4
		jz	short loc_7103E72A
		cmp	eax, 5
		lea	esi, [esi+0]
		jz	short loc_7103E725
		cmp	eax, 6
		jz	short loc_7103E720
		lea	eax, [ebp-24h]

loc_7103E6FA:				; CODE XREF: sub_7103E6CA+54j
					; sub_7103E6CA+59j ...
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_710477B0
		mov	eax, [ebp-60h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7103E71B:				; CODE XREF: sub_7103E6CA+Fj
		lea	eax, [ebp-20h]
		jmp	short loc_7103E6FA
; ---------------------------------------------------------------------------

loc_7103E720:				; CODE XREF: sub_7103E6CA+2Bj
		lea	eax, [ebp-0Ch]
		jmp	short loc_7103E6FA
; ---------------------------------------------------------------------------

loc_7103E725:				; CODE XREF: sub_7103E6CA+26j
		lea	eax, [ebp-10h]
		jmp	short loc_7103E6FA
; ---------------------------------------------------------------------------

loc_7103E72A:				; CODE XREF: sub_7103E6CA+1Ej
		lea	eax, [ebp-14h]
		lea	esi, [esi+0]
		jmp	short loc_7103E6FA
; ---------------------------------------------------------------------------

loc_7103E732:				; CODE XREF: sub_7103E6CA+19j
		lea	eax, [ebp-18h]
		jmp	short loc_7103E6FA
; ---------------------------------------------------------------------------

loc_7103E737:				; CODE XREF: sub_7103E6CA+14j
		lea	eax, [ebp-1Ch]
		jmp	short loc_7103E6FA
sub_7103E6CA	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7103E740	proc near		; CODE XREF: sub_7103CA30+97p

var_108		= qword	ptr -108h
var_100		= qword	ptr -100h
var_F8		= qword	ptr -0F8h
var_F0		= qword	ptr -0F0h
var_E4		= dword	ptr -0E4h
var_E0		= dword	ptr -0E0h
var_DC		= byte ptr -0DCh
var_D8		= dword	ptr -0D8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_A8		= byte ptr -0A8h
var_A0		= qword	ptr -0A0h
var_98		= qword	ptr -98h
var_88		= byte ptr -88h
var_80		= qword	ptr -80h
var_78		= qword	ptr -78h
var_64		= byte ptr -64h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_A		= word ptr -0Ah
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 138h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_BC], eax
		lea	eax, [ebp+var_DC]
		mov	[esp], eax
		mov	[ebp+var_C4], offset sub_710525B0
		mov	[ebp+var_C0], offset word_71053C0E
		mov	[ebp+var_B8], offset sub_7103F0F1
		mov	[ebp+var_B4], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_10]
		mov	[esp+8], eax
		mov	[ebp+var_10], 4
		mov	eax, [edx+10h]
		mov	[ebp+var_D8], 0FFFFFFFFh
		add	eax, 0B8h
		mov	[esp+4], eax
		lea	eax, [ebp+var_64]
		mov	[esp], eax
		call	ds:_ZN11QTextStreamC1EP7QString6QFlagsIN9QIODevice12OpenModeFlagEE
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aLineargradient	; "<linearGradient "
		mov	[ebp+var_D8], 14h
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_14], eax
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		lea	eax, [ebp+var_64]
		mov	[esp], eax
		mov	[ebp+var_D8], 13h
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103EE80

loc_7103E807:				; CODE XREF: sub_7103E740+756j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aGradientunit_0	; "gradientUnits=\""
		mov	[ebp+var_D8], 14h
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_54], eax
		lea	eax, [ebp+var_54]
		mov	[esp+4], eax
		lea	eax, [ebp+var_64]
		mov	[esp], eax
		mov	[ebp+var_D8], 6
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_54]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103EE64

loc_7103E857:				; CODE XREF: sub_7103E740+73Aj
		mov	ecx, [ebp+arg_4]
		test	ecx, ecx
		jz	short loc_7103E87D
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_D8], 14h
		mov	[esp], eax
		call	ds:_ZNK9QGradient14coordinateModeEv
		cmp	eax, 2
		jz	loc_7103F090

loc_7103E87D:				; CODE XREF: sub_7103E740+11Cj
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aUserspaceonuse	; "userSpaceOnUse"
		mov	[ebp+var_D8], 14h
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_4C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_64]
		mov	[esp], eax
		mov	[ebp+var_D8], 4
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_4C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103F070

loc_7103E8CD:				; CODE XREF: sub_7103E740+946j
					; sub_7103E740+990j ...
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_7105AD8D ; "\" "
		mov	[ebp+var_D8], 14h
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_48], eax
		lea	eax, [ebp+var_48]
		mov	[esp+4], eax
		lea	eax, [ebp+var_64]
		mov	[esp], eax
		mov	[ebp+var_D8], 3
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_48]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103EF50

loc_7103E91D:				; CODE XREF: sub_7103E740+826j
		mov	edx, [ebp+arg_4]
		test	edx, edx
		jz	loc_7103EC24
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_7105AD8D ; "\" "
		mov	[ebp+var_D8], 14h
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_34], eax
		lea	eax, [ebp+var_A8]
		mov	[esp], eax
		mov	[ebp+var_D8], 12h
		mov	[esp+4], edx
		call	ds:_ZNK15QLinearGradient9finalStopEv
		sub	esp, 4
		fld	[ebp+var_A0]
		fstp	[ebp+var_108]
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aY2_0 ;	"y2=\""
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_30], eax
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_7105AD8D ; "\" "
		mov	[ebp+var_D8], 11h
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_98]
		mov	[esp], eax
		mov	[ebp+var_D8], 10h
		mov	[esp+4], edx
		call	ds:_ZNK15QLinearGradient9finalStopEv
		sub	esp, 4
		fld	[ebp+var_98]
		fstp	[ebp+var_100]
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aX2_0 ;	"x2=\""
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_28], eax
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_7105AD8D ; "\" "
		mov	[ebp+var_D8], 0Fh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_24], eax
		lea	eax, [ebp+var_88]
		mov	[esp], eax
		mov	[ebp+var_D8], 0Eh
		mov	[esp+4], edx
		call	ds:_ZNK15QLinearGradient5startEv
		sub	esp, 4
		fld	[ebp+var_80]
		fstp	[ebp+var_F8]
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aY1_0 ;	"y1=\""
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_20], eax
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_7105AD8D ; "\" "
		mov	[ebp+var_D8], 0Dh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_78]
		mov	[esp], eax
		mov	[ebp+var_D8], 0Ch
		mov	[esp+4], edx
		call	ds:_ZNK15QLinearGradient5startEv
		sub	esp, 4
		fld	[ebp+var_78]
		fstp	[ebp+var_F0]
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aX1_0 ;	"x1=\""
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_18], eax
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		lea	eax, [ebp+var_64]
		mov	[esp], eax
		mov	[ebp+var_D8], 0Bh
		call	ds:_ZN11QTextStreamlsERK7QString
		fld	[ebp+var_F0]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEd
		lea	edx, [ebp+var_1C]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_20]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		fld	[ebp+var_F8]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEd
		lea	edx, [ebp+var_24]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_28]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		fld	[ebp+var_100]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEd
		lea	edx, [ebp+var_2C]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_30]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		fld	[ebp+var_108]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEd
		lea	edx, [ebp+var_34]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103EF90

loc_7103EBAD:				; CODE XREF: sub_7103E740+866j
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103EFD0

loc_7103EBBE:				; CODE XREF: sub_7103E740+8A6j
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103EFB0

loc_7103EBCF:				; CODE XREF: sub_7103E740+886j
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103F050

loc_7103EBE0:				; CODE XREF: sub_7103E740+926j
		mov	eax, [ebp+var_28]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103F030

loc_7103EBF1:				; CODE XREF: sub_7103E740+906j
		mov	eax, [ebp+var_2C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103F010

loc_7103EC02:				; CODE XREF: sub_7103E740+8E6j
		mov	eax, [ebp+var_30]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103EFF0

loc_7103EC13:				; CODE XREF: sub_7103E740+8C6j
		mov	eax, [ebp+var_34]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103EF70

loc_7103EC24:				; CODE XREF: sub_7103E740+1E2j
					; sub_7103E740+846j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_7105AF87 ; "\">\n"
		mov	[ebp+var_D8], 14h
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_40], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_A], 20h
		mov	eax, [eax+10h]
		mov	edx, eax
		mov	[ebp+var_E0], eax
		mov	eax, [eax+10Ch]
		add	eax, 1
		mov	[edx+10Ch], eax
		mov	[ebp+var_E4], eax
		lea	eax, [ebp+var_58]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aGradient1 ; "gradient%1"
		mov	[esp], eax
		mov	[ebp+var_D8], 0Ah
		call	ds:_ZN7QString10fromLatin1EPKci
		mov	eax, [ebp+var_E4]
		sub	esp, 4
		lea	edx, [ebp+var_A]
		mov	[esp+18h], edx
		lea	ecx, [ebp+var_5C]
		mov	dword ptr [esp+14h], 0Ah
		mov	edx, eax
		sar	edx, 1Fh
		mov	[esp+0Ch], edx
		lea	edx, [ebp+var_58]
		mov	dword ptr [esp+10h], 0
		mov	[esp+8], eax
		mov	[esp+4], edx
		mov	[esp], ecx
		mov	[ebp+var_D8], 2
		call	ds:_ZNK7QString3argExiiRK5QChar
		sub	esp, 4
		lea	eax, [ebp+var_5C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_E0]
		mov	[ebp+var_D8], 1
		add	eax, 108h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_5C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103EF30

loc_7103ED18:				; CODE XREF: sub_7103E740+806j
		mov	eax, [ebp+var_58]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103EF10

loc_7103ED29:				; CODE XREF: sub_7103E740+7E6j
		mov	edx, [ebp+var_E0]
		mov	eax, [edx+108h]
		mov	[ebp+var_3C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aId_0 ;	"id=\""
		mov	[ebp+var_D8], 9
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_38], eax
		lea	eax, [ebp+var_38]
		mov	[esp+4], eax
		lea	eax, [ebp+var_64]
		mov	[esp], eax
		mov	[ebp+var_D8], 8
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_3C]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_40]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_38]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103EEF0

loc_7103EDAE:				; CODE XREF: sub_7103E740+7C6j
		mov	eax, [ebp+var_3C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103EED3

loc_7103EDBF:				; CODE XREF: sub_7103E740+7A9j
		mov	eax, [ebp+var_40]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103EEB8

loc_7103EDD0:				; CODE XREF: sub_7103E740+78Ej
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_D8], 14h
		mov	[esp+8], eax
		lea	eax, [ebp+var_64]
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_7103D670
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aLineargradie_0	; "</linearGradient>"
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_44], eax
		lea	eax, [ebp+var_44]
		mov	[esp+4], eax
		lea	eax, [ebp+var_64]
		mov	[esp], eax
		mov	[ebp+var_D8], 7
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	[esp], eax
		call	ds:_Z4endlR11QTextStream
		mov	eax, [ebp+var_44]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7103EEA0

loc_7103EE3E:				; CODE XREF: sub_7103E740+776j
		lea	eax, [ebp+var_64]
		mov	[esp], eax
		mov	[ebp+var_D8], 0FFFFFFFFh
		call	ds:_ZN11QTextStreamD1Ev
		lea	eax, [ebp+var_DC]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_7103EE64:				; CODE XREF: sub_7103E740+111j
		mov	eax, [ebp+var_54]
		mov	[ebp+var_D8], 14h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103E857
; ---------------------------------------------------------------------------
		align 10h

loc_7103EE80:				; CODE XREF: sub_7103E740+C1j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_D8], 14h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103E807
; ---------------------------------------------------------------------------
		align 10h

loc_7103EEA0:				; CODE XREF: sub_7103E740+6FCj
		mov	eax, [ebp+var_44]
		mov	[ebp+var_D8], 14h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7103EE3E
; ---------------------------------------------------------------------------

loc_7103EEB8:				; CODE XREF: sub_7103E740+68Aj
		mov	eax, [ebp+var_40]
		mov	[ebp+var_D8], 14h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103EDD0
; ---------------------------------------------------------------------------

loc_7103EED3:				; CODE XREF: sub_7103E740+679j
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_D8], 0Ah
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103EDBF
; ---------------------------------------------------------------------------
		align 10h

loc_7103EEF0:				; CODE XREF: sub_7103E740+668j
		mov	eax, [ebp+var_38]
		mov	[ebp+var_D8], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103EDAE
; ---------------------------------------------------------------------------
		align 10h

loc_7103EF10:				; CODE XREF: sub_7103E740+5E3j
		mov	eax, [ebp+var_58]
		mov	[ebp+var_D8], 0Ah
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103ED29
; ---------------------------------------------------------------------------
		align 10h

loc_7103EF30:				; CODE XREF: sub_7103E740+5D2j
		mov	eax, [ebp+var_5C]
		mov	[ebp+var_D8], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103ED18
; ---------------------------------------------------------------------------
		align 10h

loc_7103EF50:				; CODE XREF: sub_7103E740+1D7j
		mov	eax, [ebp+var_48]
		mov	[ebp+var_D8], 14h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103E91D
; ---------------------------------------------------------------------------
		align 10h

loc_7103EF70:				; CODE XREF: sub_7103E740+4DEj
		mov	eax, [ebp+var_34]
		mov	[ebp+var_D8], 14h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103EC24
; ---------------------------------------------------------------------------
		align 10h

loc_7103EF90:				; CODE XREF: sub_7103E740+467j
		mov	eax, [ebp+var_18]
		mov	[ebp+var_D8], 0Ch
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103EBAD
; ---------------------------------------------------------------------------
		align 10h

loc_7103EFB0:				; CODE XREF: sub_7103E740+489j
		mov	eax, [ebp+var_20]
		mov	[ebp+var_D8], 0Eh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103EBCF
; ---------------------------------------------------------------------------
		align 10h

loc_7103EFD0:				; CODE XREF: sub_7103E740+478j
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_D8], 0Dh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103EBBE
; ---------------------------------------------------------------------------
		align 10h

loc_7103EFF0:				; CODE XREF: sub_7103E740+4CDj
		mov	eax, [ebp+var_30]
		mov	[ebp+var_D8], 12h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103EC13
; ---------------------------------------------------------------------------
		align 10h

loc_7103F010:				; CODE XREF: sub_7103E740+4BCj
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_D8], 11h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103EC02
; ---------------------------------------------------------------------------
		align 10h

loc_7103F030:				; CODE XREF: sub_7103E740+4ABj
		mov	eax, [ebp+var_28]
		mov	[ebp+var_D8], 10h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103EBF1
; ---------------------------------------------------------------------------
		align 10h

loc_7103F050:				; CODE XREF: sub_7103E740+49Aj
		mov	eax, [ebp+var_24]
		mov	[ebp+var_D8], 0Fh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103EBE0
; ---------------------------------------------------------------------------
		align 10h

loc_7103F070:				; CODE XREF: sub_7103E740+187j
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_D8], 14h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103E8CD
; ---------------------------------------------------------------------------
		align 10h

loc_7103F090:				; CODE XREF: sub_7103E740+137j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aObjectboundi_0	; "objectBoundingBox"
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_50], eax
		lea	eax, [ebp+var_50]
		mov	[esp+4], eax
		lea	eax, [ebp+var_64]
		mov	[esp], eax
		mov	[ebp+var_D8], 5
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_50]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7103E8CD
		mov	eax, [ebp+var_50]
		mov	[ebp+var_D8], 14h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103E8CD
sub_7103E740	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7103F0F1	proc near		; DATA XREF: sub_7103E740+2Fo
		add	ebp, 8
		mov	eax, [ebp-0D8h]
		mov	edx, [ebp-0D4h]
		cmp	eax, 1
		mov	[ebp-10Ch], edx
		jz	loc_7103F1D9
		cmp	eax, 2
		jz	loc_7103F38F
		cmp	eax, 3
		jz	loc_7103F375
		cmp	eax, 4
		jz	loc_7103F35B
		cmp	eax, 5
		lea	esi, [esi+0]
		jz	loc_7103F341
		cmp	eax, 6
		jz	loc_7103F327
		cmp	eax, 7
		jz	loc_7103F2DE
		cmp	eax, 8
		nop
		lea	esi, [esi+0]
		jz	loc_7103F2F3
		cmp	eax, 9
		jz	loc_7103F1EE
		cmp	eax, 0Ah
		jz	loc_7103F231
		cmp	eax, 0Bh
		nop
		lea	esi, [esi+0]
		jz	loc_7103F246
		cmp	eax, 0Ch
		jz	loc_7103F25B
		cmp	eax, 0Dh
		jz	loc_7103F270
		cmp	eax, 0Eh
		nop
		lea	esi, [esi+0]
		jz	loc_7103F285
		cmp	eax, 0Fh
		jz	loc_7103F29A
		cmp	eax, 10h
		jz	loc_7103F2AF
		cmp	eax, 11h
		nop
		lea	esi, [esi+0]
		jz	loc_7103F2C4
		cmp	eax, 12h
		jz	loc_7103F30D
		cmp	eax, 13h
		jz	short loc_7103F203
		lea	eax, [ebp-5Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0

loc_7103F1D9:				; CODE XREF: sub_7103F0F1+18j
		lea	eax, [ebp-58h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0

loc_7103F1EE:				; CODE XREF: sub_7103F0F1+68j
					; sub_7103F0F1+217j
		lea	eax, [ebp-40h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0

loc_7103F203:				; CODE XREF: sub_7103F0F1+D1j
					; sub_7103F0F1+1E8j ...
		lea	eax, [ebp-64h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	ds:_ZN11QTextStreamD1Ev
		mov	eax, [ebp-10Ch]
		mov	dword ptr [ebp-0D8h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7103F231:				; CODE XREF: sub_7103F0F1+71j
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0

loc_7103F246:				; CODE XREF: sub_7103F0F1+7Fj
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0

loc_7103F25B:				; CODE XREF: sub_7103F0F1+88j
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0

loc_7103F270:				; CODE XREF: sub_7103F0F1+91j
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0

loc_7103F285:				; CODE XREF: sub_7103F0F1+9Fj
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0

loc_7103F29A:				; CODE XREF: sub_7103F0F1+A8j
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0

loc_7103F2AF:				; CODE XREF: sub_7103F0F1+B1j
		lea	eax, [ebp-30h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0

loc_7103F2C4:				; CODE XREF: sub_7103F0F1+BFj
		lea	eax, [ebp-34h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0
		jmp	loc_7103F203
; ---------------------------------------------------------------------------

loc_7103F2DE:				; CODE XREF: sub_7103F0F1+51j
		lea	eax, [ebp-38h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0

loc_7103F2F3:				; CODE XREF: sub_7103F0F1+5Fj
		lea	eax, [ebp-3Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0
		jmp	loc_7103F1EE
; ---------------------------------------------------------------------------

loc_7103F30D:				; CODE XREF: sub_7103F0F1+C8j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0
		jmp	loc_7103F203
; ---------------------------------------------------------------------------

loc_7103F327:				; CODE XREF: sub_7103F0F1+48j
		lea	eax, [ebp-44h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0
		jmp	loc_7103F203
; ---------------------------------------------------------------------------

loc_7103F341:				; CODE XREF: sub_7103F0F1+3Fj
		lea	eax, [ebp-54h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0
		jmp	loc_7103F203
; ---------------------------------------------------------------------------

loc_7103F35B:				; CODE XREF: sub_7103F0F1+33j
		lea	eax, [ebp-50h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0
		jmp	loc_7103F203
; ---------------------------------------------------------------------------

loc_7103F375:				; CODE XREF: sub_7103F0F1+2Aj
		lea	eax, [ebp-4Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0
		jmp	loc_7103F203
; ---------------------------------------------------------------------------

loc_7103F38F:				; CODE XREF: sub_7103F0F1+21j
		lea	eax, [ebp-48h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0
		jmp	loc_7103F203
sub_7103F0F1	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7103F3B0	proc near		; CODE XREF: sub_7103CA30+627p

var_120		= qword	ptr -120h
var_118		= qword	ptr -118h
var_110		= qword	ptr -110h
var_108		= qword	ptr -108h
var_100		= qword	ptr -100h
var_F4		= dword	ptr -0F4h
var_F0		= dword	ptr -0F0h
var_EC		= byte ptr -0ECh
var_E8		= dword	ptr -0E8h
var_D4		= dword	ptr -0D4h
var_D0		= dword	ptr -0D0h
var_CC		= dword	ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_B0		= byte ptr -0B0h
var_A8		= qword	ptr -0A8h
var_A0		= qword	ptr -0A0h
var_90		= byte ptr -90h
var_88		= qword	ptr -88h
var_80		= qword	ptr -80h
var_6C		= byte ptr -6Ch
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_A		= word ptr -0Ah
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 148h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_CC], eax
		lea	eax, [ebp+var_EC]
		mov	[esp], eax
		mov	[ebp+var_D4], offset sub_710525B0
		mov	[ebp+var_D0], offset dword_71053BB8
		mov	[ebp+var_C8], offset sub_7103FE51
		mov	[ebp+var_C4], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_10]
		mov	[esp+8], eax
		mov	[ebp+var_10], 4
		mov	eax, [edx+10h]
		mov	[ebp+var_E8], 0FFFFFFFFh
		add	eax, 0B8h
		mov	[esp+4], eax
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	ds:_ZN11QTextStreamC1EP7QString6QFlagsIN9QIODevice12OpenModeFlagEE
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aRadialgradient	; "<radialGradient "
		mov	[ebp+var_E8], 16h
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_14], eax
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		mov	[ebp+var_E8], 15h
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103FBA0

loc_7103F477:				; CODE XREF: sub_7103F3B0+806j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aGradientunit_0	; "gradientUnits=\""
		mov	[ebp+var_E8], 16h
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_5C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		mov	[ebp+var_E8], 6
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_5C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103FB82

loc_7103F4C7:				; CODE XREF: sub_7103F3B0+7E8j
		mov	eax, [ebp+arg_4]
		test	eax, eax
		jz	short loc_7103F4ED
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_E8], 16h
		mov	[esp], eax
		call	ds:_ZNK9QGradient14coordinateModeEv
		cmp	eax, 2
		jz	loc_7103FDF0

loc_7103F4ED:				; CODE XREF: sub_7103F3B0+11Cj
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aUserspaceonuse	; "userSpaceOnUse"
		mov	[ebp+var_E8], 16h
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_54], eax
		lea	eax, [ebp+var_54]
		mov	[esp+4], eax
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		mov	[ebp+var_E8], 4
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_54]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103FDD0

loc_7103F53D:				; CODE XREF: sub_7103F3B0+A36j
					; sub_7103F3B0+A80j ...
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_7105AD8D ; "\" "
		mov	[ebp+var_E8], 16h
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_50], eax
		lea	eax, [ebp+var_50]
		mov	[esp+4], eax
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		mov	[ebp+var_E8], 3
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_50]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103FC70

loc_7103F58D:				; CODE XREF: sub_7103F3B0+8D6j
		mov	ecx, [ebp+arg_4]
		test	ecx, ecx
		jz	loc_7103F942
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_7105AD8D ; "\" "
		mov	[ebp+var_E8], 16h
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_B0]
		mov	[esp], eax
		mov	[ebp+var_E8], 14h
		mov	[esp+4], edx
		call	ds:_ZNK15QRadialGradient10focalPointEv
		sub	esp, 4
		fld	[ebp+var_A8]
		fstp	[ebp+var_118]
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aFy_0 ;	"fy=\""
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_38], eax
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_7105AD8D ; "\" "
		mov	[ebp+var_E8], 13h
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_34], eax
		lea	eax, [ebp+var_A0]
		mov	[esp], eax
		mov	[ebp+var_E8], 12h
		mov	[esp+4], edx
		call	ds:_ZNK15QRadialGradient10focalPointEv
		sub	esp, 4
		fld	[ebp+var_A0]
		fstp	[ebp+var_110]
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aFx_0 ;	"fx=\""
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_30], eax
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_7105AD8D ; "\" "
		mov	[ebp+var_E8], 11h
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_E8], 10h
		mov	[esp], eax
		call	ds:_ZNK15QRadialGradient6radiusEv
		fstp	[ebp+var_120]
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aR ; "r=\""
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_28], eax
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_7105AD8D ; "\" "
		mov	[ebp+var_E8], 0Fh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_24], eax
		lea	eax, [ebp+var_90]
		mov	[esp], eax
		mov	[ebp+var_E8], 0Eh
		mov	[esp+4], edx
		call	ds:_ZNK15QRadialGradient6centerEv
		sub	esp, 4
		fld	[ebp+var_88]
		fstp	[ebp+var_108]
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aCy ; "cy=\""
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_20], eax
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_7105AD8D ; "\" "
		mov	[ebp+var_E8], 0Dh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_80]
		mov	[esp], eax
		mov	[ebp+var_E8], 0Ch
		mov	[esp+4], edx
		call	ds:_ZNK15QRadialGradient6centerEv
		sub	esp, 4
		fld	[ebp+var_80]
		fstp	[ebp+var_100]
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aCx ; "cx=\""
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_18], eax
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		mov	[ebp+var_E8], 0Bh
		call	ds:_ZN11QTextStreamlsERK7QString
		fld	[ebp+var_100]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEd
		lea	edx, [ebp+var_1C]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_20]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		fld	[ebp+var_108]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEd
		lea	edx, [ebp+var_24]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_28]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		fld	[ebp+var_120]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEd
		lea	edx, [ebp+var_2C]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_30]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		fld	[ebp+var_110]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEd
		lea	edx, [ebp+var_34]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_38]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		fld	[ebp+var_118]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEd
		lea	edx, [ebp+var_3C]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103FCF0

loc_7103F8A9:				; CODE XREF: sub_7103F3B0+956j
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103FD30

loc_7103F8BA:				; CODE XREF: sub_7103F3B0+996j
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103FD10

loc_7103F8CB:				; CODE XREF: sub_7103F3B0+976j
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103FDB0

loc_7103F8DC:				; CODE XREF: sub_7103F3B0+A16j
		mov	eax, [ebp+var_28]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103FD90

loc_7103F8ED:				; CODE XREF: sub_7103F3B0+9F6j
		mov	eax, [ebp+var_2C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103FD70

loc_7103F8FE:				; CODE XREF: sub_7103F3B0+9D6j
		mov	eax, [ebp+var_30]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103FD50

loc_7103F90F:				; CODE XREF: sub_7103F3B0+9B6j
		mov	eax, [ebp+var_34]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103FCB0

loc_7103F920:				; CODE XREF: sub_7103F3B0+916j
		mov	eax, [ebp+var_38]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103FC90

loc_7103F931:				; CODE XREF: sub_7103F3B0+8F6j
		mov	eax, [ebp+var_3C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103FCD0

loc_7103F942:				; CODE XREF: sub_7103F3B0+1E2j
					; sub_7103F3B0+936j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_7105AF87 ; "\">\n"
		mov	[ebp+var_E8], 16h
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_48], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_A], 20h
		mov	eax, [eax+10h]
		mov	edx, eax
		mov	[ebp+var_F0], eax
		mov	eax, [eax+10Ch]
		add	eax, 1
		mov	[edx+10Ch], eax
		mov	[ebp+var_F4], eax
		lea	eax, [ebp+var_60]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aGradient1 ; "gradient%1"
		mov	[esp], eax
		mov	[ebp+var_E8], 0Ah
		call	ds:_ZN7QString10fromLatin1EPKci
		mov	eax, [ebp+var_F4]
		sub	esp, 4
		lea	edx, [ebp+var_A]
		mov	[esp+18h], edx
		lea	ecx, [ebp+var_64]
		mov	dword ptr [esp+14h], 0Ah
		mov	edx, eax
		sar	edx, 1Fh
		mov	[esp+0Ch], edx
		lea	edx, [ebp+var_60]
		mov	dword ptr [esp+10h], 0
		mov	[esp+8], eax
		mov	[esp+4], edx
		mov	[esp], ecx
		mov	[ebp+var_E8], 2
		call	ds:_ZNK7QString3argExiiRK5QChar
		sub	esp, 4
		lea	eax, [ebp+var_64]
		mov	[esp+4], eax
		mov	eax, [ebp+var_F0]
		mov	[ebp+var_E8], 1
		add	eax, 108h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_64]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103FC50

loc_7103FA36:				; CODE XREF: sub_7103F3B0+8B6j
		mov	eax, [ebp+var_60]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103FC30

loc_7103FA47:				; CODE XREF: sub_7103F3B0+896j
		mov	edx, [ebp+var_F0]
		mov	eax, [edx+108h]
		mov	[ebp+var_44], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aXmlId_0 ; "xml:id=\""
		mov	[ebp+var_E8], 9
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_40], eax
		lea	eax, [ebp+var_40]
		mov	[esp+4], eax
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		mov	[ebp+var_E8], 8
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_44]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_48]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_40]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103FC10

loc_7103FACC:				; CODE XREF: sub_7103F3B0+876j
		mov	eax, [ebp+var_44]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103FBF3

loc_7103FADD:				; CODE XREF: sub_7103F3B0+859j
		mov	eax, [ebp+var_48]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7103FBD8

loc_7103FAEE:				; CODE XREF: sub_7103F3B0+83Ej
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_E8], 16h
		mov	[esp+8], eax
		lea	eax, [ebp+var_6C]
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_7103D670
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aRadialgradie_0	; "</radialGradient>"
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_4C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		mov	[ebp+var_E8], 7
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	[esp], eax
		call	ds:_Z4endlR11QTextStream
		mov	eax, [ebp+var_4C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7103FBC0

loc_7103FB5C:				; CODE XREF: sub_7103F3B0+826j
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		mov	[ebp+var_E8], 0FFFFFFFFh
		call	ds:_ZN11QTextStreamD1Ev
		lea	eax, [ebp+var_EC]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_7103FB82:				; CODE XREF: sub_7103F3B0+111j
		mov	eax, [ebp+var_5C]
		mov	[ebp+var_E8], 16h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103F4C7
; ---------------------------------------------------------------------------
		align 10h

loc_7103FBA0:				; CODE XREF: sub_7103F3B0+C1j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_E8], 16h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103F477
; ---------------------------------------------------------------------------
		align 10h

loc_7103FBC0:				; CODE XREF: sub_7103F3B0+7AAj
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_E8], 16h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7103FB5C
; ---------------------------------------------------------------------------

loc_7103FBD8:				; CODE XREF: sub_7103F3B0+738j
		mov	eax, [ebp+var_48]
		mov	[ebp+var_E8], 16h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103FAEE
; ---------------------------------------------------------------------------

loc_7103FBF3:				; CODE XREF: sub_7103F3B0+727j
		mov	eax, [ebp+var_44]
		mov	[ebp+var_E8], 0Ah
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103FADD
; ---------------------------------------------------------------------------
		align 10h

loc_7103FC10:				; CODE XREF: sub_7103F3B0+716j
		mov	eax, [ebp+var_40]
		mov	[ebp+var_E8], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103FACC
; ---------------------------------------------------------------------------
		align 10h

loc_7103FC30:				; CODE XREF: sub_7103F3B0+691j
		mov	eax, [ebp+var_60]
		mov	[ebp+var_E8], 0Ah
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103FA47
; ---------------------------------------------------------------------------
		align 10h

loc_7103FC50:				; CODE XREF: sub_7103F3B0+680j
		mov	eax, [ebp+var_64]
		mov	[ebp+var_E8], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103FA36
; ---------------------------------------------------------------------------
		align 10h

loc_7103FC70:				; CODE XREF: sub_7103F3B0+1D7j
		mov	eax, [ebp+var_50]
		mov	[ebp+var_E8], 16h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103F58D
; ---------------------------------------------------------------------------
		align 10h

loc_7103FC90:				; CODE XREF: sub_7103F3B0+57Bj
		mov	eax, [ebp+var_38]
		mov	[ebp+var_E8], 14h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103F931
; ---------------------------------------------------------------------------
		align 10h

loc_7103FCB0:				; CODE XREF: sub_7103F3B0+56Aj
		mov	eax, [ebp+var_34]
		mov	[ebp+var_E8], 13h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103F920
; ---------------------------------------------------------------------------
		align 10h

loc_7103FCD0:				; CODE XREF: sub_7103F3B0+58Cj
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_E8], 16h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103F942
; ---------------------------------------------------------------------------
		align 10h

loc_7103FCF0:				; CODE XREF: sub_7103F3B0+4F3j
		mov	eax, [ebp+var_18]
		mov	[ebp+var_E8], 0Ch
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103F8A9
; ---------------------------------------------------------------------------
		align 10h

loc_7103FD10:				; CODE XREF: sub_7103F3B0+515j
		mov	eax, [ebp+var_20]
		mov	[ebp+var_E8], 0Eh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103F8CB
; ---------------------------------------------------------------------------
		align 10h

loc_7103FD30:				; CODE XREF: sub_7103F3B0+504j
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_E8], 0Dh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103F8BA
; ---------------------------------------------------------------------------
		align 10h

loc_7103FD50:				; CODE XREF: sub_7103F3B0+559j
		mov	eax, [ebp+var_30]
		mov	[ebp+var_E8], 12h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103F90F
; ---------------------------------------------------------------------------
		align 10h

loc_7103FD70:				; CODE XREF: sub_7103F3B0+548j
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_E8], 11h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103F8FE
; ---------------------------------------------------------------------------
		align 10h

loc_7103FD90:				; CODE XREF: sub_7103F3B0+537j
		mov	eax, [ebp+var_28]
		mov	[ebp+var_E8], 10h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103F8ED
; ---------------------------------------------------------------------------
		align 10h

loc_7103FDB0:				; CODE XREF: sub_7103F3B0+526j
		mov	eax, [ebp+var_24]
		mov	[ebp+var_E8], 0Fh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103F8DC
; ---------------------------------------------------------------------------
		align 10h

loc_7103FDD0:				; CODE XREF: sub_7103F3B0+187j
		mov	eax, [ebp+var_54]
		mov	[ebp+var_E8], 16h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103F53D
; ---------------------------------------------------------------------------
		align 10h

loc_7103FDF0:				; CODE XREF: sub_7103F3B0+137j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aObjectboundi_0	; "objectBoundingBox"
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_58], eax
		lea	eax, [ebp+var_58]
		mov	[esp+4], eax
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		mov	[ebp+var_E8], 5
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_58]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7103F53D
		mov	eax, [ebp+var_58]
		mov	[ebp+var_E8], 16h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7103F53D
sub_7103F3B0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7103FE51	proc near		; DATA XREF: sub_7103F3B0+2Fo
		add	ebp, 8
		mov	eax, [ebp-0E8h]
		mov	edx, [ebp-0E4h]
		cmp	eax, 1
		mov	[ebp-124h], edx
		jz	loc_7103FF50
		cmp	eax, 2
		jz	loc_7104012D
		cmp	eax, 3
		jz	loc_71040113
		cmp	eax, 4
		jz	loc_710400F9
		cmp	eax, 5
		lea	esi, [esi+0]
		jz	loc_710400DF
		cmp	eax, 6
		jz	loc_710400AB
		cmp	eax, 7
		jz	loc_7103FFA8
		cmp	eax, 8
		nop
		lea	esi, [esi+0]
		jz	loc_7103FFBD
		cmp	eax, 9
		jz	loc_7103FF65
		cmp	eax, 0Ah
		jz	loc_7103FFD4
		cmp	eax, 0Bh
		nop
		lea	esi, [esi+0]
		jz	loc_7103FFE9
		cmp	eax, 0Ch
		jz	loc_7103FFFE
		cmp	eax, 0Dh
		jz	loc_71040013
		cmp	eax, 0Eh
		nop
		lea	esi, [esi+0]
		jz	loc_71040028
		cmp	eax, 0Fh
		jz	loc_7104003D
		cmp	eax, 10h
		jz	loc_71040052
		cmp	eax, 11h
		nop
		lea	esi, [esi+0]
		jz	loc_71040067
		cmp	eax, 12h
		jz	loc_7104007C
		cmp	eax, 13h
		jz	loc_71040091
		cmp	eax, 14h
		nop
		lea	esi, [esi+0]
		jz	loc_710400C5
		cmp	eax, 15h
		jz	short loc_7103FF7A
		lea	eax, [ebp-64h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_710477B0

loc_7103FF50:				; CODE XREF: sub_7103FE51+18j
		lea	eax, [ebp-60h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_710477B0

loc_7103FF65:				; CODE XREF: sub_7103FE51+68j
					; sub_7103FE51+181j
		lea	eax, [ebp-48h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_710477B0

loc_7103FF7A:				; CODE XREF: sub_7103FE51+E8j
					; sub_7103FE51+255j ...
		lea	eax, [ebp-6Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	ds:_ZN11QTextStreamD1Ev
		mov	eax, [ebp-124h]
		mov	dword ptr [ebp-0E8h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7103FFA8:				; CODE XREF: sub_7103FE51+51j
		lea	eax, [ebp-40h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_710477B0

loc_7103FFBD:				; CODE XREF: sub_7103FE51+5Fj
		lea	eax, [ebp-44h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_710477B0
		jmp	short loc_7103FF65
; ---------------------------------------------------------------------------

loc_7103FFD4:				; CODE XREF: sub_7103FE51+71j
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_710477B0

loc_7103FFE9:				; CODE XREF: sub_7103FE51+7Fj
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_710477B0

loc_7103FFFE:				; CODE XREF: sub_7103FE51+88j
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_710477B0

loc_71040013:				; CODE XREF: sub_7103FE51+91j
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_710477B0

loc_71040028:				; CODE XREF: sub_7103FE51+9Fj
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_710477B0

loc_7104003D:				; CODE XREF: sub_7103FE51+A8j
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_710477B0

loc_71040052:				; CODE XREF: sub_7103FE51+B1j
		lea	eax, [ebp-30h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_710477B0

loc_71040067:				; CODE XREF: sub_7103FE51+BFj
		lea	eax, [ebp-34h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_710477B0

loc_7104007C:				; CODE XREF: sub_7103FE51+C8j
		lea	eax, [ebp-38h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_710477B0

loc_71040091:				; CODE XREF: sub_7103FE51+D1j
		lea	eax, [ebp-3Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_710477B0
		jmp	loc_7103FF7A
; ---------------------------------------------------------------------------

loc_710400AB:				; CODE XREF: sub_7103FE51+48j
		lea	eax, [ebp-4Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_710477B0
		jmp	loc_7103FF7A
; ---------------------------------------------------------------------------

loc_710400C5:				; CODE XREF: sub_7103FE51+DFj
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_710477B0
		jmp	loc_7103FF7A
; ---------------------------------------------------------------------------

loc_710400DF:				; CODE XREF: sub_7103FE51+3Fj
		lea	eax, [ebp-5Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_710477B0
		jmp	loc_7103FF7A
; ---------------------------------------------------------------------------

loc_710400F9:				; CODE XREF: sub_7103FE51+33j
		lea	eax, [ebp-58h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_710477B0
		jmp	loc_7103FF7A
; ---------------------------------------------------------------------------

loc_71040113:				; CODE XREF: sub_7103FE51+2Aj
		lea	eax, [ebp-54h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_710477B0
		jmp	loc_7103FF7A
; ---------------------------------------------------------------------------

loc_7104012D:				; CODE XREF: sub_7103FE51+21j
		lea	eax, [ebp-50h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0E8h], 0
		call	sub_710477B0
		jmp	loc_7103FF7A
sub_7103FE51	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71040150	proc near		; CODE XREF: sub_710350E0+DBp

var_118		= qword	ptr -118h
var_110		= qword	ptr -110h
var_104		= dword	ptr -104h
var_100		= qword	ptr -100h
var_F8		= qword	ptr -0F8h
var_F0		= qword	ptr -0F0h
var_E4		= dword	ptr -0E4h
var_E0		= dword	ptr -0E0h
var_DC		= byte ptr -0DCh
var_D8		= dword	ptr -0D8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= byte ptr -8Ch
var_7C		= byte ptr -7Ch
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_A		= word ptr -0Ah
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 148h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_BC], eax
		lea	eax, [ebp+var_DC]
		mov	[ebp+var_C4], offset sub_710525B0
		mov	[ebp+var_C0], offset word_71053C66
		mov	[ebp+var_B8], offset sub_710410F1
		mov	[ebp+var_B4], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_E0], edx
		mov	[ebp+var_10], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		mov	[esp+4], eax
		mov	eax, [edx+10h]
		mov	[ebp+var_D8], 1Bh
		add	eax, 0C8h
		mov	[esp], eax
		call	ds:_ZN4QPenaSERKS_
		mov	eax, [ebp+arg_4]
		mov	[esp], eax
		call	ds:_ZNK4QPen5styleEv
		cmp	eax, 1
		jz	loc_71040A27
		jle	loc_71040E20
		cmp	eax, 6
		lea	esi, [esi+0]
		jle	loc_71040366

loc_710401F6:				; CODE XREF: sub_71040150+CD2j
		mov	dword ptr [esp], offset	aUnsupportedPen	; "Unsupported pen style"
		mov	[ebp+var_D8], 1Bh
		call	ds:_Z8qWarningPKcz

loc_7104020D:				; CODE XREF: sub_71040150+854j
					; sub_71040150+870j ...
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_D8], 1Bh
		mov	[esp], eax
		call	ds:_ZNK4QPen6widthFEv
		fldz
		fxch	st(1)
		fucompp
		fnstsw	ax
		sahf
		jnz	loc_710409C5
		jp	loc_710409C5
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset aStrokeWidth1	; "stroke-width=\"1\" "
		mov	eax, [edx+10h]
		mov	eax, [eax+0ACh]
		mov	[ebp+var_D8], 1Bh
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc

loc_7104025F:				; CODE XREF: sub_71040150+8D2j
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_D8], 1Bh
		mov	[esp], eax
		call	ds:_ZNK4QPen8capStyleEv
		cmp	eax, 10h
		jz	loc_71040D70
		cmp	eax, 20h
		jz	loc_71040D80
		test	eax, eax
		jz	loc_71040C30
		mov	dword ptr [esp], offset	aUnhandledCapSt	; "Unhandled cap style"
		mov	[ebp+var_D8], 1Bh
		call	ds:_Z8qWarningPKcz

loc_710402A6:				; CODE XREF: sub_71040150+B07j
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_D8], 1Bh
		mov	[esp], eax
		call	ds:_ZNK4QPen9joinStyleEv
		cmp	eax, 40h
		jz	loc_71040E10
		jg	loc_71040D40
		test	eax, eax
		lea	esi, [esi+0]
		jnz	loc_71040D52
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_D8], 1Bh
		mov	[esp], edx
		call	ds:_ZNK4QPen10miterLimitEv
		mov	edx, [ebp+arg_0]
		fstp	[ebp+var_118]
		mov	dword ptr [esp+4], offset aStrokeLinejo_0 ; "stroke-linejoin=\"miter\" stroke-miterl"...
		mov	eax, [edx+10h]
		mov	eax, [eax+0ACh]
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		fld	[ebp+var_118]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEd

loc_71040322:				; CODE XREF: sub_71040150+C89j
		mov	dword ptr [esp+4], offset asc_7105AD8D ; "\" "
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc

loc_71040333:				; CODE XREF: sub_71040150+C19j
					; sub_71040150+CB5j ...
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71040356
		mov	eax, [ebp+var_10]
		mov	[ebp+var_D8], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_71040356:				; CODE XREF: sub_71040150+1EEj
		lea	eax, [ebp+var_DC]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71040366:				; CODE XREF: sub_71040150+A0j
		mov	eax, [ebp+var_E0]
		mov	[ebp+var_2C], eax
		mov	edx, eax
		lock inc dword ptr [eax]
		setnz	al
		mov	[ebp+var_30], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	[ebp+var_34], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	[ebp+var_38], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_D8], 0Fh
		mov	[esp], eax
		call	ds:_ZNK4QPen5widthEv
		test	eax, eax
		jnz	loc_71040C60
		fld1
		fstp	[ebp+var_F8]

loc_710403B8:				; CODE XREF: sub_71040150+B2Cj
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_8C]
		mov	[esp], eax
		mov	[ebp+var_D8], 0Fh
		mov	[esp+4], edx
		call	ds:_ZNK4QPen5colorEv
		sub	esp, 4
		lea	ecx, [ebp+var_30]
		lea	edx, [ebp+var_2C]
		lea	eax, [ebp+var_8C]
		call	sub_71033BB0
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[esp+4], edx
		call	ds:_ZNK4QPen11dashPatternEv
		mov	eax, [ebp+var_3C]
		sub	esp, 4
		mov	[ebp+var_9C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_9C]
		test	byte ptr [eax+0Ch], 1
		jz	loc_710410C6

loc_71040421:				; CODE XREF: sub_71040150+F9Cj
		mov	eax, [ebp+var_9C]
		mov	[ebp+var_98], 0
		mov	ecx, [eax+8]
		lea	edx, [eax+10h]
		mov	[ebp+var_94], edx
		lea	eax, [eax+ecx*8+10h]
		cmp	edx, eax
		mov	[ebp+var_90], eax
		jz	loc_7104055A
		mov	eax, ds:_ZN7QString10fromLatin1EPKci
		mov	[ebp+var_E4], eax
		jmp	short loc_7104046C
; ---------------------------------------------------------------------------
		align 10h

loc_71040460:				; CODE XREF: sub_71040150+404j
		cmp	edx, [ebp+var_90]
		jz	loc_7104055A

loc_7104046C:				; CODE XREF: sub_71040150+30Aj
		fld	qword ptr [edx]
		lea	eax, [ebp+var_68]
		fstp	[ebp+var_F0]
		fld	[ebp+var_F8]
		fmul	[ebp+var_F0]
		mov	[ebp+var_A], 20h
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset a1 ; "%1,"
		mov	[esp], eax
		mov	[ebp+var_D8], 3
		fstp	[ebp+var_F0]
		call	[ebp+var_E4]
		sub	esp, 4
		fld	[ebp+var_F0]
		lea	edx, [ebp+var_A]
		mov	[esp+1Ch], edx
		lea	eax, [ebp+var_68]
		lea	edx, [ebp+var_6C]
		mov	dword ptr [esp+18h], 0FFFFFFFFh
		fstp	qword ptr [esp+8]
		mov	dword ptr [esp+14h], 67h
		mov	dword ptr [esp+10h], 0
		mov	[esp+4], eax
		mov	[esp], edx
		mov	[ebp+var_D8], 2
		call	ds:_ZNK7QString3argEdiciRK5QChar
		sub	esp, 4
		lea	eax, [ebp+var_6C]
		mov	[esp+4], eax
		lea	eax, [ebp+var_34]
		mov	[esp], eax
		mov	[ebp+var_D8], 1
		call	ds:_ZN7QString6appendERKS_
		mov	eax, [ebp+var_6C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71040D23

loc_7104052C:				; CODE XREF: sub_71040150+BE9j
		mov	eax, [ebp+var_68]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71040D08

loc_7104053D:				; CODE XREF: sub_71040150+BCEj
		mov	edx, [ebp+var_94]
		mov	eax, [ebp+var_98]
		add	edx, 8
		test	eax, eax
		mov	[ebp+var_94], edx
		jz	loc_71040460

loc_7104055A:				; CODE XREF: sub_71040150+2F9j
					; sub_71040150+316j
		mov	eax, [ebp+var_9C]
		test	eax, eax
		jz	short loc_71040590
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71040590
		mov	eax, [ebp+var_9C]
		mov	dword ptr [esp+4], 8
		mov	[ebp+var_D8], 0Eh
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i
		nop

loc_71040590:				; CODE XREF: sub_71040150+412j
					; sub_71040150+41Cj
		lea	eax, [ebp+var_34]
		mov	dword ptr [esp+4], 1
		mov	[esp], eax
		mov	[ebp+var_D8], 0Eh
		call	ds:_ZN7QString4chopEi
		mov	eax, [ebp+var_3C]
		test	eax, eax
		jz	short loc_710405DD
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710405DD
		mov	eax, [ebp+var_3C]
		mov	dword ptr [esp+4], 8
		mov	[ebp+var_D8], 0Fh
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_710405DD:				; CODE XREF: sub_71040150+463j
					; sub_71040150+46Dj
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_D8], 0Fh
		mov	[esp], eax
		call	ds:_ZNK4QPen10dashOffsetEv
		fmul	[ebp+var_F8]
		mov	dword ptr [esp+10h], 6
		lea	eax, [ebp+var_40]
		mov	dword ptr [esp+0Ch], 67h
		mov	[esp], eax
		fstp	qword ptr [esp+4]
		call	ds:_ZN7QString6numberEdci
		sub	esp, 4
		lea	eax, [ebp+var_40]
		mov	[esp+4], eax
		lea	eax, [ebp+var_38]
		mov	[esp], eax
		mov	[ebp+var_D8], 0Dh
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_40]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_710410AB

loc_7104064A:				; CODE XREF: sub_71040150+F71j
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_2C]
		mov	[esp+4], eax
		mov	eax, [edx+10h]
		mov	[ebp+var_D8], 0Fh
		add	eax, 128h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_30]
		mov	[esp+4], eax
		mov	eax, [edx+10h]
		add	eax, 12Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_34]
		mov	[esp+4], eax
		mov	eax, [edx+10h]
		add	eax, 130h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_38]
		mov	[esp+4], eax
		mov	eax, [edx+10h]
		add	eax, 134h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_7105AD8D ; "\" "
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_48], eax
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aStroke	; "stroke=\""
		mov	[ebp+var_D8], 0Ch
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_44], eax
		lea	eax, [ebp+var_44]
		mov	[esp+4], eax
		mov	eax, [edx+10h]
		mov	eax, [eax+0ACh]
		mov	[ebp+var_D8], 0Bh
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_2C]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_48]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_44]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71041090

loc_71040751:				; CODE XREF: sub_71040150+F56j
		mov	eax, [ebp+var_48]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71041075

loc_71040762:				; CODE XREF: sub_71040150+F3Bj
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_7105AD8D ; "\" "
		mov	[ebp+var_D8], 0Fh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_50], eax
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aStrokeOpacity ; "stroke-opacity=\""
		mov	[ebp+var_D8], 0Ah
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_4C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp+4], eax
		mov	eax, [edx+10h]
		mov	eax, [eax+0ACh]
		mov	[ebp+var_D8], 9
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_30]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_50]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_4C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7104105A

loc_710407FD:				; CODE XREF: sub_71040150+F20j
		mov	eax, [ebp+var_50]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7104103F

loc_7104080E:				; CODE XREF: sub_71040150+F05j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_7105AD8D ; "\" "
		mov	[ebp+var_D8], 0Fh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_58], eax
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aStrokeDasharra	; "stroke-dasharray=\""
		mov	[ebp+var_D8], 8
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_54], eax
		lea	eax, [ebp+var_54]
		mov	[esp+4], eax
		mov	eax, [edx+10h]
		mov	eax, [eax+0ACh]
		mov	[ebp+var_D8], 7
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_34]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_58]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_54]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71041024

loc_710408A9:				; CODE XREF: sub_71040150+EEAj
		mov	eax, [ebp+var_58]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71041009

loc_710408BA:				; CODE XREF: sub_71040150+ECFj
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_7105AD8D ; "\" "
		mov	[ebp+var_D8], 0Fh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_60], eax
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aStrokeDashoffs	; "stroke-dashoffset=\""
		mov	[ebp+var_D8], 6
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_5C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp+4], eax
		mov	eax, [edx+10h]
		mov	eax, [eax+0ACh]
		mov	[ebp+var_D8], 5
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_38]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_60]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_5C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71040FEE

loc_71040955:				; CODE XREF: sub_71040150+EB4j
		mov	eax, [ebp+var_60]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71040F9D

loc_71040966:				; CODE XREF: sub_71040150+E63j
		mov	eax, [ebp+var_38]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71040F82

loc_71040977:				; CODE XREF: sub_71040150+E48j
		mov	eax, [ebp+var_34]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71040F67

loc_71040988:				; CODE XREF: sub_71040150+E2Dj
		mov	eax, [ebp+var_30]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71040F4C

loc_71040999:				; CODE XREF: sub_71040150+E12j
		mov	eax, [ebp+var_2C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7104020D
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_D8], 1Bh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7104020D
; ---------------------------------------------------------------------------

loc_710409C5:				; CODE XREF: sub_71040150+DCj
					; sub_71040150+E2j
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_D8], 1Bh
		mov	[esp], eax
		call	ds:_ZNK4QPen6widthFEv
		mov	edx, [ebp+arg_0]
		fstp	[ebp+var_100]
		mov	dword ptr [esp+4], offset aStrokeWidth ; "stroke-width=\""
		mov	eax, [edx+10h]
		mov	eax, [eax+0ACh]
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		fld	[ebp+var_100]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEd
		mov	dword ptr [esp+4], offset asc_7105AD8D ; "\" "
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		jmp	loc_7104025F
; ---------------------------------------------------------------------------

loc_71040A27:				; CODE XREF: sub_71040150+8Dj
		mov	eax, [ebp+var_E0]
		mov	[ebp+var_30], eax
		mov	edx, eax
		lock inc dword ptr [eax]
		setnz	al
		mov	[ebp+var_2C], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_7C]
		mov	[esp], eax
		mov	[ebp+var_D8], 17h
		mov	[esp+4], edx
		call	ds:_ZNK4QPen5colorEv
		sub	esp, 4
		lea	ecx, [ebp+var_2C]
		lea	edx, [ebp+var_30]
		lea	eax, [ebp+var_7C]
		call	sub_71033BB0
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_30]
		mov	[esp+4], eax
		mov	eax, [edx+10h]
		add	eax, 128h
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_2C]
		mov	[esp+4], eax
		mov	eax, [edx+10h]
		add	eax, 12Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_7105AD8D ; "\" "
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_20], eax
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aStroke	; "stroke=\""
		mov	[ebp+var_D8], 16h
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_1C]
		mov	[esp+4], eax
		mov	eax, [edx+10h]
		mov	eax, [eax+0ACh]
		mov	[ebp+var_D8], 15h
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_30]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_20]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71040CED

loc_71040B36:				; CODE XREF: sub_71040150+BB3j
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71040CD2

loc_71040B47:				; CODE XREF: sub_71040150+B98j
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	asc_7105AD8D ; "\" "
		mov	[ebp+var_D8], 17h
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	[ebp+var_28], eax
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aStrokeOpacity ; "stroke-opacity=\""
		mov	[ebp+var_D8], 14h
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_24], eax
		lea	eax, [ebp+var_24]
		mov	[esp+4], eax
		mov	eax, [edx+10h]
		mov	eax, [eax+0ACh]
		mov	[ebp+var_D8], 13h
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_2C]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		lea	edx, [ebp+var_28]
		mov	[esp+4], edx
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_24]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71040CB7

loc_71040BE2:				; CODE XREF: sub_71040150+B7Dj
		mov	eax, [ebp+var_28]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71040C9C

loc_71040BF3:				; CODE XREF: sub_71040150+B62j
		mov	eax, [ebp+var_2C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71040C81

loc_71040C04:				; CODE XREF: sub_71040150+B47j
		mov	eax, [ebp+var_30]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7104020D
		mov	eax, [ebp+var_30]
		mov	[ebp+var_D8], 1Bh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7104020D
; ---------------------------------------------------------------------------

loc_71040C30:				; CODE XREF: sub_71040150+139j
		mov	dword ptr [esp+4], offset aStrokeLinecapB ; "stroke-linecap=\"butt\" "

loc_71040C38:				; CODE XREF: sub_71040150+C28j
					; sub_71040150+C38j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+10h]
		mov	eax, [eax+0ACh]
		mov	[ebp+var_D8], 1Bh
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		jmp	loc_710402A6
; ---------------------------------------------------------------------------
		align 10h

loc_71040C60:				; CODE XREF: sub_71040150+25Aj
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_D8], 0Fh
		mov	[esp], eax
		call	ds:_ZNK4QPen6widthFEv
		fstp	[ebp+var_F8]
		jmp	loc_710403B8
; ---------------------------------------------------------------------------

loc_71040C81:				; CODE XREF: sub_71040150+AAEj
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_D8], 18h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71040C04
; ---------------------------------------------------------------------------

loc_71040C9C:				; CODE XREF: sub_71040150+A9Dj
		mov	eax, [ebp+var_28]
		mov	[ebp+var_D8], 17h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71040BF3
; ---------------------------------------------------------------------------

loc_71040CB7:				; CODE XREF: sub_71040150+A8Cj
		mov	eax, [ebp+var_24]
		mov	[ebp+var_D8], 14h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71040BE2
; ---------------------------------------------------------------------------

loc_71040CD2:				; CODE XREF: sub_71040150+9F1j
		mov	eax, [ebp+var_20]
		mov	[ebp+var_D8], 17h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71040B47
; ---------------------------------------------------------------------------

loc_71040CED:				; CODE XREF: sub_71040150+9E0j
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_D8], 16h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71040B36
; ---------------------------------------------------------------------------

loc_71040D08:				; CODE XREF: sub_71040150+3E7j
		mov	eax, [ebp+var_68]
		mov	[ebp+var_D8], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7104053D
; ---------------------------------------------------------------------------

loc_71040D23:				; CODE XREF: sub_71040150+3D6j
		mov	eax, [ebp+var_6C]
		mov	[ebp+var_D8], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7104052C
; ---------------------------------------------------------------------------
		align 10h

loc_71040D40:				; CODE XREF: sub_71040150+175j
		cmp	eax, 80h
		jz	loc_71040DDE
		cmp	eax, 100h
		jz	short loc_71040D8D

loc_71040D52:				; CODE XREF: sub_71040150+180j
		mov	dword ptr [esp], offset	aUnhandledJoinS	; "Unhandled join style"
		mov	[ebp+var_D8], 1Bh
		call	ds:_Z8qWarningPKcz
		jmp	loc_71040333
; ---------------------------------------------------------------------------
		align 10h

loc_71040D70:				; CODE XREF: sub_71040150+128j
		mov	dword ptr [esp+4], offset aStrokeLinecapS ; "stroke-linecap=\"square\" "
		jmp	loc_71040C38
; ---------------------------------------------------------------------------
		align 10h

loc_71040D80:				; CODE XREF: sub_71040150+131j
		mov	dword ptr [esp+4], offset aStrokeLinecapR ; "stroke-linecap=\"round\" "
		jmp	loc_71040C38
; ---------------------------------------------------------------------------

loc_71040D8D:				; CODE XREF: sub_71040150+C00j
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_D8], 1Bh
		mov	[esp], eax
		call	ds:_ZNK4QPen10miterLimitEv
		mov	edx, [ebp+arg_0]
		fstp	[ebp+var_110]
		mov	dword ptr [esp+4], offset aStrokeLinejo_0 ; "stroke-linejoin=\"miter\" stroke-miterl"...
		mov	eax, [edx+10h]
		mov	eax, [eax+0ACh]
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		fld	[ebp+var_110]
		fstp	qword ptr [esp+4]
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEd
		jmp	loc_71040322
; ---------------------------------------------------------------------------

loc_71040DDE:				; CODE XREF: sub_71040150+BF5j
		mov	dword ptr [esp+4], offset aStrokeLinejo_1 ; "stroke-linejoin=\"round\" "

loc_71040DE6:				; CODE XREF: sub_71040150+CC8j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+10h]
		mov	eax, [eax+0ACh]
		mov	[ebp+var_D8], 1Bh
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsEPKc
		jmp	loc_71040333
; ---------------------------------------------------------------------------
		align 10h

loc_71040E10:				; CODE XREF: sub_71040150+16Fj
		mov	dword ptr [esp+4], offset aStrokeLinejoin ; "stroke-linejoin=\"bevel\" "
		jmp	short loc_71040DE6
; ---------------------------------------------------------------------------
		align 10h

loc_71040E20:				; CODE XREF: sub_71040150+93j
		test	eax, eax
		jnz	loc_710401F6
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	dword ptr [esp], offset	aStrokeNone ; "stroke=\"none\" "
		mov	[ebp+var_D8], 1Bh
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_14], eax
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	eax, [edx+10h]
		mov	eax, [eax+0ACh]
		mov	[ebp+var_D8], 1Ah
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71040FD3

loc_71040E81:				; CODE XREF: sub_71040150+E99j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+10h]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aNone_0 ; "none"
		mov	[ebp+var_D8], 1Bh
		add	eax, 128h
		mov	[ebp+var_104], eax
		lea	eax, [ebp+var_64]
		mov	[esp], eax
		call	ds:_ZN7QString10fromLatin1EPKci
		sub	esp, 4
		lea	eax, [ebp+var_64]
		mov	[esp+4], eax
		mov	eax, [ebp+var_104]
		mov	[ebp+var_D8], 4
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_64]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71040FB8

loc_71040EEC:				; CODE XREF: sub_71040150+E7Ej
		mov	edx, [ebp+var_E0]
		mov	[ebp+var_18], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		mov	eax, [edx+10h]
		mov	[ebp+var_D8], 19h
		add	eax, 12Ch
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_71040333
		mov	eax, [ebp+var_18]
		mov	[ebp+var_D8], 1Bh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71040333
; ---------------------------------------------------------------------------

loc_71040F4C:				; CODE XREF: sub_71040150+843j
		mov	eax, [ebp+var_30]
		mov	[ebp+var_D8], 12h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71040999
; ---------------------------------------------------------------------------

loc_71040F67:				; CODE XREF: sub_71040150+832j
		mov	eax, [ebp+var_34]
		mov	[ebp+var_D8], 11h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71040988
; ---------------------------------------------------------------------------

loc_71040F82:				; CODE XREF: sub_71040150+821j
		mov	eax, [ebp+var_38]
		mov	[ebp+var_D8], 10h
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71040977
; ---------------------------------------------------------------------------

loc_71040F9D:				; CODE XREF: sub_71040150+810j
		mov	eax, [ebp+var_60]
		mov	[ebp+var_D8], 0Fh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71040966
; ---------------------------------------------------------------------------

loc_71040FB8:				; CODE XREF: sub_71040150+D96j
		mov	eax, [ebp+var_64]
		mov	[ebp+var_D8], 1Bh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71040EEC
; ---------------------------------------------------------------------------

loc_71040FD3:				; CODE XREF: sub_71040150+D2Bj
		mov	eax, [ebp+var_14]
		mov	[ebp+var_D8], 1Bh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71040E81
; ---------------------------------------------------------------------------

loc_71040FEE:				; CODE XREF: sub_71040150+7FFj
		mov	eax, [ebp+var_5C]
		mov	[ebp+var_D8], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71040955
; ---------------------------------------------------------------------------

loc_71041009:				; CODE XREF: sub_71040150+764j
		mov	eax, [ebp+var_58]
		mov	[ebp+var_D8], 0Fh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_710408BA
; ---------------------------------------------------------------------------

loc_71041024:				; CODE XREF: sub_71040150+753j
		mov	eax, [ebp+var_54]
		mov	[ebp+var_D8], 8
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_710408A9
; ---------------------------------------------------------------------------

loc_7104103F:				; CODE XREF: sub_71040150+6B8j
		mov	eax, [ebp+var_50]
		mov	[ebp+var_D8], 0Fh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7104080E
; ---------------------------------------------------------------------------

loc_7104105A:				; CODE XREF: sub_71040150+6A7j
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_D8], 0Ah
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_710407FD
; ---------------------------------------------------------------------------

loc_71041075:				; CODE XREF: sub_71040150+60Cj
		mov	eax, [ebp+var_48]
		mov	[ebp+var_D8], 0Fh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71040762
; ---------------------------------------------------------------------------

loc_71041090:				; CODE XREF: sub_71040150+5FBj
		mov	eax, [ebp+var_44]
		mov	[ebp+var_D8], 0Ch
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71040751
; ---------------------------------------------------------------------------

loc_710410AB:				; CODE XREF: sub_71040150+4F4j
		mov	eax, [ebp+var_40]
		mov	[ebp+var_D8], 0Fh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7104064A
; ---------------------------------------------------------------------------

loc_710410C6:				; CODE XREF: sub_71040150+2CBj
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_D8], 0Eh
		mov	[esp+4], eax
		lea	eax, [ebp+var_9C]
		mov	[esp], eax
		call	sub_7104EDA0
		jmp	loc_71040421
sub_71040150	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710410F1	proc near		; DATA XREF: sub_71040150+2Co

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-0D8h]
		mov	edx, [ebp-0D4h]
		cmp	eax, 1
		mov	[ebp-124h], edx
		jz	loc_7104122B
		cmp	eax, 2
		jz	loc_71041240
		cmp	eax, 3
		jz	loc_7104142B
		cmp	eax, 4
		jz	loc_710413FC
		cmp	eax, 5
		lea	esi, [esi+0]
		jz	loc_71041411
		cmp	eax, 6
		jz	loc_710413CD
		cmp	eax, 7
		jz	loc_710413E2
		cmp	eax, 8
		nop
		lea	esi, [esi+0]
		jz	loc_7104139E
		cmp	eax, 9
		jz	loc_710413B3
		cmp	eax, 0Ah
		jz	loc_7104136F
		cmp	eax, 0Bh
		nop
		lea	esi, [esi+0]
		jz	loc_71041384
		cmp	eax, 0Ch
		jz	loc_71041355
		cmp	eax, 0Dh
		jz	loc_7104128D
		cmp	eax, 0Eh
		nop
		lea	esi, [esi+0]
		jz	loc_710412D4
		cmp	eax, 0Fh
		jz	loc_710412E9
		cmp	eax, 10h
		jz	loc_710412FE
		cmp	eax, 11h
		nop
		lea	esi, [esi+0]
		jz	loc_71041313
		cmp	eax, 12h
		jz	loc_710414D2
		cmp	eax, 13h
		jz	loc_710414E7
		cmp	eax, 14h
		nop
		lea	esi, [esi+0]
		jz	loc_71041479
		cmp	eax, 15h
		jz	loc_7104148E
		cmp	eax, 16h
		jz	loc_710414A3
		cmp	eax, 17h
		nop
		lea	esi, [esi+0]
		jz	loc_710414B8
		cmp	eax, 18h
		jz	loc_7104145F
		cmp	eax, 19h
		jz	loc_71041445
		cmp	eax, 1Ah
		nop
		lea	esi, [esi+0]
		jz	loc_71041328
		lea	eax, [ebp-6Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0

loc_7104122B:				; CODE XREF: sub_710410F1+18j
		lea	eax, [ebp-68h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0

loc_71041240:				; CODE XREF: sub_710410F1+21j
		mov	eax, [ebp-124h]
		mov	[ebp-11Ch], eax
		mov	eax, [ebp-9Ch]
		test	eax, eax
		jz	short loc_71041281
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71041281
		mov	eax, [ebp-9Ch]
		mov	[esp+arg_0], 8
		mov	dword ptr [ebp-0D8h], 0
		mov	[esp+0], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_71041281:				; CODE XREF: sub_710410F1+163j
					; sub_710410F1+16Dj
		mov	edx, [ebp-11Ch]
		mov	[ebp-124h], edx

loc_7104128D:				; CODE XREF: sub_710410F1+91j
		mov	eax, [ebp-124h]
		mov	[ebp-120h], eax
		mov	eax, [ebp-3Ch]
		test	eax, eax
		jz	short loc_710412C8
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710412C8
		mov	eax, [ebp-3Ch]
		mov	[esp+arg_0], 8
		mov	dword ptr [ebp-0D8h], 0
		mov	[esp+0], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_710412C8:				; CODE XREF: sub_710410F1+1ADj
					; sub_710410F1+1B7j
		mov	edx, [ebp-120h]
		mov	[ebp-124h], edx

loc_710412D4:				; CODE XREF: sub_710410F1+9Fj
					; sub_710410F1+279j ...
		lea	eax, [ebp-38h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0

loc_710412E9:				; CODE XREF: sub_710410F1+A8j
		lea	eax, [ebp-34h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0

loc_710412FE:				; CODE XREF: sub_710410F1+B1j
		lea	eax, [ebp-30h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0

loc_71041313:				; CODE XREF: sub_710410F1+BFj
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0

loc_71041328:				; CODE XREF: sub_710410F1+11Fj
					; sub_710410F1+34Fj ...
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0
		mov	eax, [ebp-124h]
		mov	dword ptr [ebp-0D8h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71041355:				; CODE XREF: sub_710410F1+88j
		lea	eax, [ebp-40h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0
		jmp	loc_710412D4
; ---------------------------------------------------------------------------

loc_7104136F:				; CODE XREF: sub_710410F1+71j
		lea	eax, [ebp-44h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0

loc_71041384:				; CODE XREF: sub_710410F1+7Fj
		lea	eax, [ebp-48h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0
		jmp	loc_710412D4
; ---------------------------------------------------------------------------

loc_7104139E:				; CODE XREF: sub_710410F1+5Fj
		lea	eax, [ebp-4Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0

loc_710413B3:				; CODE XREF: sub_710410F1+68j
		lea	eax, [ebp-50h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0
		jmp	loc_710412D4
; ---------------------------------------------------------------------------

loc_710413CD:				; CODE XREF: sub_710410F1+48j
		lea	eax, [ebp-54h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0

loc_710413E2:				; CODE XREF: sub_710410F1+51j
		lea	eax, [ebp-58h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0
		jmp	loc_710412D4
; ---------------------------------------------------------------------------

loc_710413FC:				; CODE XREF: sub_710410F1+33j
		lea	eax, [ebp-5Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0

loc_71041411:				; CODE XREF: sub_710410F1+3Fj
		lea	eax, [ebp-60h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0
		jmp	loc_710412D4
; ---------------------------------------------------------------------------

loc_7104142B:				; CODE XREF: sub_710410F1+2Aj
		lea	eax, [ebp-64h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0
		jmp	loc_71041328
; ---------------------------------------------------------------------------

loc_71041445:				; CODE XREF: sub_710410F1+111j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0
		jmp	loc_71041328
; ---------------------------------------------------------------------------

loc_7104145F:				; CODE XREF: sub_710410F1+108j
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0
		jmp	loc_71041328
; ---------------------------------------------------------------------------

loc_71041479:				; CODE XREF: sub_710410F1+DFj
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0

loc_7104148E:				; CODE XREF: sub_710410F1+E8j
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0

loc_710414A3:				; CODE XREF: sub_710410F1+F1j
					; sub_710410F1+40Bj
		lea	eax, [ebp-2Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0

loc_710414B8:				; CODE XREF: sub_710410F1+FFj
		lea	eax, [ebp-30h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0
		jmp	loc_71041328
; ---------------------------------------------------------------------------

loc_710414D2:				; CODE XREF: sub_710410F1+C8j
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0

loc_710414E7:				; CODE XREF: sub_710410F1+D1j
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-0D8h], 0
		call	sub_710477B0
		jmp	short loc_710414A3
sub_710410F1	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71041500	proc near		; DATA XREF: .rdata:7105D76Co

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_7105D768
		mov	[esp+1Ch+var_1C], ebx
		call	ds:_ZN12QPaintEngineD2Ev
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_710517D0
sub_71041500	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71041530	proc near		; DATA XREF: .rdata:off_7105D768o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105D768
		mov	eax, ds:_ZN12QPaintEngineD2Ev
		add	esp, 0Ch
		jmp	eax
sub_71041530	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71041550	proc near		; DATA XREF: .rdata:7105D7ECo

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_710537B0
		mov	[ebp+var_18], offset sub_710415F8
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_7105D7E8
		mov	eax, [edx+34h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_710415E0

loc_71041595:				; CODE XREF: sub_71041550+A6j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 2
		add	eax, 0Ch
		mov	[esp], eax
		call	ds:_ZN4QPenD1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 3
		add	eax, 8
		mov	[esp], eax
		call	ds:_ZN4QPenD1Ev
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		mov	[esp], eax
		call	sub_710517D0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_710415E0:				; CODE XREF: sub_71041550+43j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+34h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_71041595
sub_71041550	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710415F8	proc near		; DATA XREF: sub_71041550+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-40h], edx
		jz	short loc_71041624
		cmp	eax, 2
		jz	short loc_7104163A
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	ds:_ZN4QPenD1Ev

loc_71041624:				; CODE XREF: sub_710415F8+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp+0], eax
		call	ds:_ZN4QPenD1Ev

loc_7104163A:				; CODE XREF: sub_710415F8+14j
		mov	eax, [ebp+8]
		mov	edx, [ebp-40h]
		mov	dword ptr [eax], offset	off_7105D728
		mov	[esp+0], edx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_710415F8	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71041660	proc near		; DATA XREF: .rdata:off_7105D7E8o

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_710537BA
		mov	[ebp+var_18], offset sub_710416FF
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_7105D7E8
		mov	eax, [edx+34h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_710416E7

loc_710416A5:				; CODE XREF: sub_71041660+9Dj
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 2
		add	eax, 0Ch
		mov	[esp], eax
		call	ds:_ZN4QPenD1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 3
		add	eax, 8
		mov	[esp], eax
		call	ds:_ZN4QPenD1Ev
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_710416E7:				; CODE XREF: sub_71041660+43j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+34h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_710416A5
sub_71041660	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710416FF	proc near		; DATA XREF: sub_71041660+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-40h], edx
		jz	short loc_7104172B
		cmp	eax, 2
		jz	short loc_71041741
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	ds:_ZN4QPenD1Ev

loc_7104172B:				; CODE XREF: sub_710416FF+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp+0], eax
		call	ds:_ZN4QPenD1Ev

loc_71041741:				; CODE XREF: sub_710416FF+14j
		mov	eax, [ebp+8]
		mov	edx, [ebp-40h]
		mov	dword ptr [eax], offset	off_7105D728
		mov	[esp+0], edx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_710416FF	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71041760	proc near		; CODE XREF: _ZThn8_N16QGraphicsSvgItemD0Ev+5j
					; DATA XREF: .rdata:7105D818o

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_710539F0
		mov	[ebp+var_18], offset sub_710417E2
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, ds:_ZTV15QGraphicsObject
		mov	ecx, [ebp+arg_0]
		lea	edx, [eax+8]
		add	eax, 40h
		mov	[ecx+8], eax
		mov	eax, ecx
		add	eax, 8
		mov	[ecx], edx
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_ZN13QGraphicsItemD2Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QObjectD2Ev
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		call	sub_710517D0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71041760	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710417E2	proc near		; DATA XREF: sub_71041760+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	[esp+0], edx
		call	ds:_ZN7QObjectD2Ev
		mov	ecx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
sub_710417E2	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71041810	proc near		; CODE XREF: _ZThn8_N16QGraphicsSvgItemD1Ev+5j
					; DATA XREF: .rdata:7105D814o

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_710539F6
		mov	[ebp+var_18], offset sub_71041887
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, ds:_ZTV15QGraphicsObject
		mov	ecx, [ebp+arg_0]
		lea	edx, [eax+8]
		add	eax, 40h
		mov	[ecx+8], eax
		mov	eax, ecx
		add	eax, 8
		mov	[ecx], edx
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_ZN13QGraphicsItemD2Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QObjectD2Ev
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71041810	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71041887	proc near		; DATA XREF: sub_71041810+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	[esp+0], edx
		call	ds:_ZN7QObjectD2Ev
		mov	ecx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
sub_71041887	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710418C0	proc near		; DATA XREF: .rdata:7105D8ECo

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_710536AC
		mov	[ebp+var_18], offset sub_71041956
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, edx
		add	eax, 30h
		mov	dword ptr [edx], offset	off_7105D8E8
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_ZN4QPenD1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 2
		add	eax, 2Ch
		mov	[esp], eax
		call	ds:_ZN6QBrushD1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 3
		add	eax, 28h
		mov	[esp], eax
		call	sub_71045940
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		mov	[esp], eax
		call	sub_710517D0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_710418C0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71041956	proc near		; DATA XREF: sub_710418C0+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-40h], edx
		jz	short loc_71041982
		cmp	eax, 2
		jz	short loc_71041997
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 2Ch
		mov	[esp+0], eax
		call	ds:_ZN6QBrushD1Ev

loc_71041982:				; CODE XREF: sub_71041956+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 28h
		mov	[esp+0], eax
		call	sub_71045940

loc_71041997:				; CODE XREF: sub_71041956+14j
		mov	eax, [ebp+8]
		mov	edx, [ebp-40h]
		mov	dword ptr [eax], offset	off_7105D728
		mov	[esp+0], edx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_71041956	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710419C0	proc near		; DATA XREF: .rdata:off_7105D8E8o

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_710536B6
		mov	[ebp+var_18], offset sub_71041A4E
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, edx
		add	eax, 30h
		mov	dword ptr [edx], offset	off_7105D8E8
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_ZN4QPenD1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 2
		add	eax, 2Ch
		mov	[esp], eax
		call	ds:_ZN6QBrushD1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 3
		add	eax, 28h
		mov	[esp], eax
		call	sub_71045940
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_710419C0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71041A4E	proc near		; DATA XREF: sub_710419C0+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-40h], edx
		jz	short loc_71041A7A
		cmp	eax, 2
		jz	short loc_71041A8F
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 2Ch
		mov	[esp+0], eax
		call	ds:_ZN6QBrushD1Ev

loc_71041A7A:				; CODE XREF: sub_71041A4E+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 28h
		mov	[esp+0], eax
		call	sub_71045940

loc_71041A8F:				; CODE XREF: sub_71041A4E+14j
		mov	eax, [ebp+8]
		mov	edx, [ebp-40h]
		mov	dword ptr [eax], offset	off_7105D728
		mov	[esp+0], edx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_71041A4E	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71041AB0	proc near		; CODE XREF: sub_7101587B+EAp
					; sub_71047C38+40p

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71052F18
		mov	[ebp+var_18], offset sub_71041B38
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71041B20

loc_71041AEF:				; CODE XREF: sub_71041AB0+86j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71041B13
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_71041B13:				; CODE XREF: sub_71041AB0+4Cj
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71041B20:				; CODE XREF: sub_71041AB0+3Dj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_71041AEF
sub_71041AB0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71041B38	proc near		; DATA XREF: sub_71041AB0+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	[esp+0], edx
		call	sub_710477B0
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71041B38	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71041B70	proc near		; DATA XREF: .rdata:7105D90Co

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		add	esp, 0Ch
		jmp	sub_710517D0
sub_71041B70	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71041B90	proc near		; DATA XREF: .rdata:off_7105D908o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		retn
sub_71041B90	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71041BA0	proc near		; DATA XREF: .rdata:7105D92Co

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		add	esp, 0Ch
		jmp	sub_710517D0
sub_71041BA0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71041BC0	proc near		; DATA XREF: .rdata:off_7105D928o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		retn
sub_71041BC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71041BD0	proc near		; DATA XREF: .rdata:7105D96Co

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_710537C4
		mov	[ebp+var_18], offset sub_71041C98
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		mov	dword ptr [edx], offset	off_7105D968
		test	eax, eax
		mov	[ebp+var_40], eax
		jz	short loc_71041C2E
		mov	eax, [eax+8]
		test	eax, eax
		jz	short loc_71041C23
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71041C60

loc_71041C23:				; CODE XREF: sub_71041BD0+47j
					; sub_71041BD0+AEj
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_710517D0

loc_71041C2E:				; CODE XREF: sub_71041BD0+40j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+44h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71041C80

loc_71041C3E:				; CODE XREF: sub_71041BD0+C6j
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		mov	[esp], eax
		call	sub_710517D0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71041C60:				; CODE XREF: sub_71041BD0+51j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+8]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 8
		mov	[esp], eax
		call	sub_71048810
		jmp	short loc_71041C23
; ---------------------------------------------------------------------------

loc_71041C80:				; CODE XREF: sub_71041BD0+6Cj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+44h]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_71041C3E
sub_71041BD0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71041C98	proc near		; DATA XREF: sub_71041BD0+20o
		add	ebp, 8
		mov	edx, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], edx
		jz	short loc_71041CBC
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 44h
		mov	[esp+0], eax
		call	sub_710477B0

loc_71041CBC:				; CODE XREF: sub_71041C98+Dj
		mov	eax, [ebp+8]
		mov	edx, [ebp-44h]
		mov	dword ptr [eax], offset	off_7105D728
		mov	[esp+0], edx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_71041C98	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71041CE0	proc near		; DATA XREF: .rdata:off_7105D968o

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_710537CC
		mov	[ebp+var_18], offset sub_71041D9C
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		mov	dword ptr [edx], offset	off_7105D968
		test	eax, eax
		mov	[ebp+var_40], eax
		jz	short loc_71041D3E
		mov	eax, [eax+8]
		test	eax, eax
		jz	short loc_71041D33
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71041D64

loc_71041D33:				; CODE XREF: sub_71041CE0+47j
					; sub_71041CE0+A2j
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_710517D0

loc_71041D3E:				; CODE XREF: sub_71041CE0+40j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+44h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71041D84

loc_71041D4E:				; CODE XREF: sub_71041CE0+BAj
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71041D64:				; CODE XREF: sub_71041CE0+51j
		mov	edx, [ebp+var_40]
		mov	eax, [edx+8]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 8
		mov	[esp], eax
		call	sub_71048810
		jmp	short loc_71041D33
; ---------------------------------------------------------------------------

loc_71041D84:				; CODE XREF: sub_71041CE0+6Cj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+44h]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_71041D4E
sub_71041CE0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71041D9C	proc near		; DATA XREF: sub_71041CE0+20o
		add	ebp, 8
		mov	edx, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], edx
		jz	short loc_71041DC0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 44h
		mov	[esp+0], eax
		call	sub_710477B0

loc_71041DC0:				; CODE XREF: sub_71041D9C+Dj
		mov	eax, [ebp+8]
		mov	edx, [ebp-44h]
		mov	dword ptr [eax], offset	off_7105D728
		mov	[esp+0], edx
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_71041D9C	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71041DE0	proc near		; DATA XREF: .rdata:7105D9CCo

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_7105D9C8
		mov	[esp+1Ch+var_1C], ebx
		call	ds:_ZN4QCss13StyleSelectorD2Ev
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_710517D0
sub_71041DE0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71041E10	proc near		; DATA XREF: .rdata:off_7105D9C8o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105D9C8
		mov	eax, ds:_ZN4QCss13StyleSelectorD2Ev
		add	esp, 0Ch
		jmp	eax
sub_71041E10	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71041E30	proc near		; DATA XREF: .rdata:7105DA0Co

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_7105DA08
		mov	[esp+1Ch+var_1C], ebx
		call	ds:_ZN14QWidgetPrivateD2Ev
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_710517D0
sub_71041E30	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71041E60	proc near		; DATA XREF: .rdata:off_7105DA08o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105DA08
		mov	eax, ds:_ZN14QWidgetPrivateD2Ev
		add	esp, 0Ch
		jmp	eax
sub_71041E60	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71041E80	proc near		; DATA XREF: .rdata:7105DA24o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		add	esp, 0Ch
		jmp	sub_710517D0
sub_71041E80	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71041EA0	proc near		; DATA XREF: .rdata:off_7105DA20o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		retn
sub_71041EA0	endp

; ---------------------------------------------------------------------------
		align 10h
; [00000002 BYTES: COLLAPSED FUNCTION nullsub_7]
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71041EC0	proc near		; DATA XREF: .rdata:7105DA44o

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_71053AB6
		mov	[ebp+var_18], offset sub_71041F39
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105DA40
		add	eax, 20h
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_ZN7QRegionD1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		add	eax, 0Ch
		mov	[esp], eax
		call	ds:_ZN7QRegionD1Ev
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_710517D0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71041EC0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71041F39	proc near		; DATA XREF: sub_71041EC0+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		add	eax, 0Ch
		mov	[esp+0], eax
		call	ds:_ZN7QRegionD1Ev
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71041F39	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71041F70	proc near		; DATA XREF: .rdata:off_7105DA40o

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053ABC
		mov	[ebp+var_18], offset sub_71041FDE
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105DA40
		add	eax, 20h
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_ZN7QRegionD1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		add	eax, 0Ch
		mov	[esp], eax
		call	ds:_ZN7QRegionD1Ev
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71041F70	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71041FDE	proc near		; DATA XREF: sub_71041F70+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		add	eax, 0Ch
		mov	[esp+0], eax
		call	ds:_ZN7QRegionD1Ev
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71041FDE	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71042010	proc near		; CODE XREF: sub_71043308+135p
					; sub_710436CE+12Ap ...

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_71053AC2
		mov	[ebp+var_18], offset sub_7104207E
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105DA40
		add	eax, 20h
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_ZN7QRegionD1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		add	eax, 0Ch
		mov	[esp], eax
		call	ds:_ZN7QRegionD1Ev
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71042010	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104207E	proc near		; DATA XREF: sub_71042010+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		add	eax, 0Ch
		mov	[esp+0], eax
		call	ds:_ZN7QRegionD1Ev
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7104207E	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710420B0	proc near		; DATA XREF: .rdata:7105DA5Co

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053934
		mov	[ebp+var_18], offset sub_7104212B
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4Ch]
		mov	dword ptr [edx], offset	off_7105DA58
		test	eax, eax
		jz	short loc_71042100
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 1
		call	eax

loc_71042100:				; CODE XREF: sub_710420B0+3Dj
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], edx
		call	ds:_ZN14QObjectPrivateD2Ev
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_710517D0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_710420B0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104212B	proc near		; DATA XREF: sub_710420B0+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	[esp+0], edx
		call	ds:_ZN14QObjectPrivateD2Ev
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7104212B	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71042160	proc near		; DATA XREF: .rdata:off_7105DA58o

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_7105393A
		mov	[ebp+var_18], offset sub_710421D0
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4Ch]
		mov	dword ptr [edx], offset	off_7105DA58
		test	eax, eax
		jz	short loc_710421B0
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 1
		call	eax

loc_710421B0:				; CODE XREF: sub_71042160+3Dj
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], edx
		call	ds:_ZN14QObjectPrivateD2Ev
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71042160	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710421D0	proc near		; DATA XREF: sub_71042160+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	[esp+0], edx
		call	ds:_ZN14QObjectPrivateD2Ev
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_710421D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71042200	proc near		; DATA XREF: .rdata:7105DA7Co

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_14], 1
		add	eax, 8
		mov	[esp+1Ch+var_18], eax
		mov	[esp+1Ch+var_1C], ebx
		call	ds:_ZN6QBrushC1ERK6QColorN2Qt10BrushStyleE
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn	4
sub_71042200	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71042230	proc near		; DATA XREF: .rdata:7105DA6Co

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_7105369C
		mov	[ebp+var_18], offset sub_710422AF
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105DA68
		add	eax, 1Ch
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_ZN4QPenD1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 2
		add	eax, 18h
		mov	[esp], eax
		call	ds:_ZN6QBrushD1Ev
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		mov	[esp], eax
		call	sub_710517D0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71042230	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710422AF	proc near		; DATA XREF: sub_71042230+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-40h], eax
		jz	short loc_710422D4
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 18h
		mov	[esp+0], eax
		call	ds:_ZN6QBrushD1Ev

loc_710422D4:				; CODE XREF: sub_710422AF+Dj
		mov	eax, [ebp+8]
		mov	dword ptr [eax], offset	off_7105D728
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_710422AF	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710422F0	proc near		; DATA XREF: .rdata:off_7105DA68o

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_710536A4
		mov	[ebp+var_18], offset sub_71042367
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105DA68
		add	eax, 1Ch
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_ZN4QPenD1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 2
		add	eax, 18h
		mov	[esp], eax
		call	ds:_ZN6QBrushD1Ev
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_710422F0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71042367	proc near		; DATA XREF: sub_710422F0+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-40h], eax
		jz	short loc_7104238C
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 18h
		mov	[esp+0], eax
		call	ds:_ZN6QBrushD1Ev

loc_7104238C:				; CODE XREF: sub_71042367+Dj
		mov	eax, [ebp+8]
		mov	dword ptr [eax], offset	off_7105D728
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71042367	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710423B0	proc near		; DATA XREF: .rdata:7105DB20o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		push	esi
		push	ebx
		sub	esp, 10h
		mov	esi, [esp+1Ch+arg_0]
		mov	edi, [esp+1Ch+arg_4]
		mov	eax, [esi+78h]
		mov	ecx, [eax+8]
		mov	edx, [eax+0Ch]
		sub	edx, ecx
		test	edx, edx
		jle	short loc_710423F9
		xor	ebx, ebx
		nop

loc_710423D0:				; CODE XREF: sub_710423B0+47j
		lea	edx, [ecx+ebx+4]
		add	ebx, 1
		mov	eax, [eax+edx*4+4]
		mov	eax, [eax+4]
		mov	edx, [eax]
		mov	[esp+1Ch+var_1C], eax
		mov	[esp+1Ch+var_18], edi
		call	dword ptr [edx+18h]
		mov	eax, [esi+78h]
		mov	ecx, [eax+8]
		mov	edx, [eax+0Ch]
		sub	edx, ecx
		cmp	ebx, edx
		jl	short loc_710423D0

loc_710423F9:				; CODE XREF: sub_710423B0+1Bj
		add	esp, 10h
		pop	ebx
		pop	esi
		pop	edi
		retn
sub_710423B0	endp


; =============== S U B	R O U T	I N E =======================================


sub_71042400	proc near		; DATA XREF: .rdata:7105DB24o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		push	esi
		push	ebx
		sub	esp, 10h
		mov	esi, [esp+1Ch+arg_0]
		mov	edi, [esp+1Ch+arg_4]
		mov	eax, [esi+78h]
		mov	ecx, [eax+8]
		mov	edx, [eax+0Ch]
		sub	edx, ecx
		test	edx, edx
		jle	short loc_71042449
		xor	ebx, ebx
		nop

loc_71042420:				; CODE XREF: sub_71042400+47j
		lea	edx, [ecx+ebx+4]
		add	ebx, 1
		mov	eax, [eax+edx*4+4]
		mov	eax, [eax+4]
		mov	edx, [eax]
		mov	[esp+1Ch+var_1C], eax
		mov	[esp+1Ch+var_18], edi
		call	dword ptr [edx+18h]
		mov	eax, [esi+78h]
		mov	ecx, [eax+8]
		mov	edx, [eax+0Ch]
		sub	edx, ecx
		cmp	ebx, edx
		jl	short loc_71042420

loc_71042449:				; CODE XREF: sub_71042400+1Bj
		add	esp, 10h
		pop	ebx
		pop	esi
		pop	edi
		retn
sub_71042400	endp

; [00000002 BYTES: COLLAPSED FUNCTION nullsub_8]
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71042460	proc near		; CODE XREF: sub_71043CAE+F7p
					; sub_71043F62+F7p

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_710539E4
		mov	[ebp+var_18], offset sub_710425C2
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, ds:_ZTV20QGraphicsItemPrivate
		mov	edx, [ebp+arg_0]
		add	eax, 8
		mov	[edx], eax
		mov	eax, [edx+0FCh]
		test	eax, eax
		jz	short loc_710424B5
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jz	loc_71042570

loc_710424B5:				; CODE XREF: sub_71042460+44j
					; sub_71042460+13Fj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0E8h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_710425A4

loc_710424CC:				; CODE XREF: sub_71042460+15Dj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+78h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710424F2
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+78h]
		mov	[ebp+var_38], 3
		mov	[esp], eax
		call	ds:_Z5qFreePv

loc_710424F2:				; CODE XREF: sub_71042460+7Aj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+48h]
		test	eax, eax
		jz	short loc_71042533
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jnz	short loc_71042533
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+48h]
		mov	eax, [edx+4]
		cmp	edx, eax
		jz	short loc_7104251B

loc_71042514:				; CODE XREF: sub_71042460+B9j
		mov	eax, [eax+4]
		cmp	edx, eax
		jnz	short loc_71042514

loc_7104251B:				; CODE XREF: sub_71042460+B2j
		mov	dword ptr [esp+4], 14h
		mov	[esp], edx
		mov	[ebp+var_38], 4
		call	ds:_ZN8QMapData16continueFreeDataEi

loc_71042533:				; CODE XREF: sub_71042460+9Aj
					; sub_71042460+A5j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71042561
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 4
		mov	[esp], eax
		call	sub_710466C0

loc_71042561:				; CODE XREF: sub_71042460+E1j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71042570:				; CODE XREF: sub_71042460+4Fj
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+0FCh]
		mov	eax, [edx+4]
		cmp	edx, eax
		jz	short loc_71042587

loc_71042580:				; CODE XREF: sub_71042460+125j
		mov	eax, [eax+4]
		cmp	edx, eax
		jnz	short loc_71042580

loc_71042587:				; CODE XREF: sub_71042460+11Ej
		mov	dword ptr [esp+4], 8
		mov	[esp], edx
		mov	[ebp+var_38], 1
		call	ds:_ZN8QMapData16continueFreeDataEi
		jmp	loc_710424B5
; ---------------------------------------------------------------------------

loc_710425A4:				; CODE XREF: sub_71042460+66j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0E8h]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	loc_710424CC
sub_71042460	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710425C2	proc near		; DATA XREF: sub_71042460+20o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-4Ch], edx
		jz	short loc_71042612
		cmp	eax, 2
		jz	short loc_71042644
		cmp	eax, 3
		jz	short loc_71042659
		mov	[ebp-48h], edx
		mov	edx, [ebp+8]
		mov	eax, [edx+0E8h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104260C
		mov	edx, [ebp+8]
		mov	eax, [edx+0E8h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	ds:_Z5qFreePv

loc_7104260C:				; CODE XREF: sub_710425C2+2Fj
		mov	eax, [ebp-48h]
		mov	[ebp-4Ch], eax

loc_71042612:				; CODE XREF: sub_710425C2+Fj
		mov	eax, [ebp-4Ch]
		mov	edx, [ebp+8]
		mov	[ebp-44h], eax
		mov	eax, [edx+78h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104263E
		mov	edx, [ebp+8]
		mov	eax, [edx+78h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	ds:_Z5qFreePv

loc_7104263E:				; CODE XREF: sub_710425C2+64j
		mov	eax, [ebp-44h]
		mov	[ebp-4Ch], eax

loc_71042644:				; CODE XREF: sub_710425C2+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 48h
		mov	[esp+0], eax
		call	sub_71044460

loc_71042659:				; CODE XREF: sub_710425C2+19j
		mov	edx, [ebp-4Ch]
		mov	[ebp-40h], edx
		mov	edx, [ebp+8]
		mov	eax, [edx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104268D
		mov	edx, [ebp+8]
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+arg_0], eax
		mov	eax, edx
		add	eax, 4
		mov	[esp+0], eax
		call	sub_710466C0

loc_7104268D:				; CODE XREF: sub_710425C2+ABj
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_710425C2	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710426A0	proc near		; DATA XREF: .rdata:7105DA8Co

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_710537DC
		mov	[ebp+var_18], offset sub_71042725
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+30h]
		mov	dword ptr [edx], offset	off_7105DA88
		test	eax, eax
		jz	short loc_71042707
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71042707
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], 8
		mov	eax, [edx+30h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_71042707:				; CODE XREF: sub_710426A0+3Dj
					; sub_710426A0+47j
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		mov	[esp], eax
		call	sub_710517D0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_710426A0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71042725	proc near		; DATA XREF: sub_710426A0+20o
		add	ebp, 8
		mov	edx, [ebp+8]
		mov	eax, [ebp-34h]
		mov	dword ptr [edx], offset	off_7105D728
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_71042725	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71042750	proc near		; DATA XREF: .rdata:off_7105DA88o

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_710537E2
		mov	[ebp+var_18], offset sub_710427CD
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+30h]
		mov	dword ptr [edx], offset	off_7105DA88
		test	eax, eax
		jz	short loc_710427B7
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710427B7
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], 8
		mov	eax, [edx+30h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_710427B7:				; CODE XREF: sub_71042750+3Dj
					; sub_71042750+47j
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71042750	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710427CD	proc near		; DATA XREF: sub_71042750+20o
		add	ebp, 8
		mov	edx, [ebp+8]
		mov	eax, [ebp-34h]
		mov	dword ptr [edx], offset	off_7105D728
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_710427CD	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710427F0	proc near		; DATA XREF: .rdata:7105DAACo

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		add	esp, 0Ch
		jmp	sub_710517D0
sub_710427F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71042810	proc near		; DATA XREF: .rdata:7105DAA8o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		retn
sub_71042810	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71042820	proc near		; DATA XREF: .rdata:7105DACCo

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_7105367C
		mov	[ebp+var_18], offset sub_7104289F
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105DAC8
		add	eax, 0Ch
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_ZN6QBrushD1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 2
		add	eax, 8
		mov	[esp], eax
		call	ds:_ZN6QBrushD1Ev
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		mov	[esp], eax
		call	sub_710517D0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71042820	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104289F	proc near		; DATA XREF: sub_71042820+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-40h], eax
		jz	short loc_710428C4
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp+0], eax
		call	ds:_ZN6QBrushD1Ev

loc_710428C4:				; CODE XREF: sub_7104289F+Dj
		mov	eax, [ebp+8]
		mov	dword ptr [eax], offset	off_7105D728
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7104289F	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710428E0	proc near		; DATA XREF: .rdata:off_7105DAC8o

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053684
		mov	[ebp+var_18], offset sub_71042957
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105DAC8
		add	eax, 0Ch
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_ZN6QBrushD1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 2
		add	eax, 8
		mov	[esp], eax
		call	ds:_ZN6QBrushD1Ev
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_710428E0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71042957	proc near		; DATA XREF: sub_710428E0+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-40h], eax
		jz	short loc_7104297C
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp+0], eax
		call	ds:_ZN6QBrushD1Ev

loc_7104297C:				; CODE XREF: sub_71042957+Dj
		mov	eax, [ebp+8]
		mov	dword ptr [eax], offset	off_7105D728
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71042957	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710429A0	proc near		; CODE XREF: sub_71043308+8Ep
					; sub_71043510+49p ...

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_71053B0E
		mov	[ebp+var_18], offset sub_71042C1B
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+2Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71042C00

loc_710429E3:				; CODE XREF: sub_710429A0+276j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+28h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71042BE0

loc_710429F7:				; CODE XREF: sub_710429A0+256j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+24h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71042BC0

loc_71042A0B:				; CODE XREF: sub_710429A0+236j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+20h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71042BA0

loc_71042A1F:				; CODE XREF: sub_710429A0+216j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+1Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71042B80

loc_71042A33:				; CODE XREF: sub_710429A0+1F6j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+18h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71042B60

loc_71042A47:				; CODE XREF: sub_710429A0+1D6j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+14h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71042B40

loc_71042A5B:				; CODE XREF: sub_710429A0+1B6j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+10h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71042B23

loc_71042A6F:				; CODE XREF: sub_710429A0+199j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71042B08

loc_71042A83:				; CODE XREF: sub_710429A0+17Ej
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71042AF0

loc_71042A93:				; CODE XREF: sub_710429A0+166j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71042AD4

loc_71042AA3:				; CODE XREF: sub_710429A0+14Aj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71042AC7
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_71042AC7:				; CODE XREF: sub_710429A0+110j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71042AD4:				; CODE XREF: sub_710429A0+101j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	[ebp+var_38], 0Bh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_71042AA3
; ---------------------------------------------------------------------------
		align 10h

loc_71042AF0:				; CODE XREF: sub_710429A0+F1j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		mov	[ebp+var_38], 0Ah
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_71042A93
; ---------------------------------------------------------------------------

loc_71042B08:				; CODE XREF: sub_710429A0+DDj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		mov	[ebp+var_38], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71042A83
; ---------------------------------------------------------------------------

loc_71042B23:				; CODE XREF: sub_710429A0+C9j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+10h]
		mov	[ebp+var_38], 8
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71042A6F
; ---------------------------------------------------------------------------
		align 10h

loc_71042B40:				; CODE XREF: sub_710429A0+B5j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+14h]
		mov	[ebp+var_38], 7
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71042A5B
; ---------------------------------------------------------------------------
		align 10h

loc_71042B60:				; CODE XREF: sub_710429A0+A1j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+18h]
		mov	[ebp+var_38], 6
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71042A47
; ---------------------------------------------------------------------------
		align 10h

loc_71042B80:				; CODE XREF: sub_710429A0+8Dj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+1Ch]
		mov	[ebp+var_38], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71042A33
; ---------------------------------------------------------------------------
		align 10h

loc_71042BA0:				; CODE XREF: sub_710429A0+79j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+20h]
		mov	[ebp+var_38], 4
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71042A1F
; ---------------------------------------------------------------------------
		align 10h

loc_71042BC0:				; CODE XREF: sub_710429A0+65j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+24h]
		mov	[ebp+var_38], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71042A0B
; ---------------------------------------------------------------------------
		align 10h

loc_71042BE0:				; CODE XREF: sub_710429A0+51j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+28h]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_710429F7
; ---------------------------------------------------------------------------
		align 10h

loc_71042C00:				; CODE XREF: sub_710429A0+3Dj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+2Ch]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_710429E3
sub_710429A0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71042C1B	proc near		; DATA XREF: sub_710429A0+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-40h], edx
		jz	short loc_71042C9B
		cmp	eax, 2
		jz	short loc_71042CB0
		cmp	eax, 3
		jz	loc_71042CC5
		cmp	eax, 4
		lea	esi, [esi+0]
		jz	loc_71042CDA
		cmp	eax, 5
		jz	loc_71042CEF
		cmp	eax, 6
		jz	loc_71042D04
		cmp	eax, 7
		nop
		lea	esi, [esi+0]
		jz	loc_71042D19
		cmp	eax, 8
		jz	loc_71042D2E
		cmp	eax, 9
		jz	loc_71042D43
		cmp	eax, 0Ah
		nop
		lea	esi, [esi+0]
		jz	loc_71042D58
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 28h
		mov	[esp+0], eax
		call	sub_710477B0

loc_71042C9B:				; CODE XREF: sub_71042C1B+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 24h
		mov	[esp+0], eax
		call	sub_710477B0

loc_71042CB0:				; CODE XREF: sub_71042C1B+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 20h
		mov	[esp+0], eax
		call	sub_710477B0

loc_71042CC5:				; CODE XREF: sub_71042C1B+19j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 1Ch
		mov	[esp+0], eax
		call	sub_710477B0

loc_71042CDA:				; CODE XREF: sub_71042C1B+25j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 18h
		mov	[esp+0], eax
		call	sub_710477B0

loc_71042CEF:				; CODE XREF: sub_71042C1B+2Ej
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 14h
		mov	[esp+0], eax
		call	sub_710477B0

loc_71042D04:				; CODE XREF: sub_71042C1B+37j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 10h
		mov	[esp+0], eax
		call	sub_710477B0

loc_71042D19:				; CODE XREF: sub_71042C1B+45j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_710477B0

loc_71042D2E:				; CODE XREF: sub_71042C1B+4Ej
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp+0], eax
		call	sub_710477B0

loc_71042D43:				; CODE XREF: sub_71042C1B+57j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 4
		mov	[esp+0], eax
		call	sub_710477B0

loc_71042D58:				; CODE XREF: sub_71042C1B+65j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_710477B0
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_71042C1B	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71042D80	proc near		; CODE XREF: _ZN13QSvgGeneratorC1Ev+B8p
					; _ZN13QSvgGeneratorC2Ev+B8p

var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0A8h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_710525B0
		mov	[ebp+var_40], offset word_71053B66
		mov	[ebp+var_38], offset sub_71043308
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, ds:_ZN7QRegionC1Ev
		mov	dword ptr [edx], offset	off_7105DA40
		mov	dword ptr [edx+4], 0
		mov	dword ptr [edx+8], 0
		add	edx, 0Ch
		mov	[ebp+var_68], edx
		mov	[esp], edx
		mov	[ebp+var_64], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	eax ; _ZN7QRegionC1Ev
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx+14h], 0
		mov	dword ptr [edx+10h], 0
		mov	dword ptr [edx+1Ch], 0FFFFFFFFh
		mov	dword ptr [edx+18h], 0FFFFFFFFh
		add	edx, 20h
		mov	[ebp+var_6C], edx
		mov	[esp], edx
		mov	[ebp+var_58], 8
		call	[ebp+var_64]
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_58], 7
		add	eax, 28h
		mov	[esp], eax
		call	ds:_ZN10QTransformC1Ev
		mov	eax, [ebp+arg_0]
		fldz
		mov	edx, ds:_ZN7QString11shared_nullE
		fst	qword ptr [eax+90h]
		and	byte ptr [eax+7Ch], 0FCh
		fst	qword ptr [eax+88h]
		mov	dword ptr [eax+78h], 0
		fst	qword ptr [eax+0A0h]
		mov	dword ptr [eax], offset	off_7105DAE8
		mov	dword ptr [eax+84h], 0FFFFFFFFh
		mov	dword ptr [eax+80h], 0FFFFFFFFh
		fstp	qword ptr [eax+98h]
		mov	[eax+0B4h], edx
		mov	[ebp+var_60], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+arg_0]
		mov	[eax+0B8h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+arg_0]
		mov	[eax+0BCh], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	edx, [ebp+arg_0]
		add	edx, 0C4h
		mov	[ebp+var_78], edx
		mov	[esp], edx
		mov	[ebp+var_58], 0Ch
		call	ds:_ZN6QBrushC1Ev
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_58], 0Bh
		add	edx, 0C8h
		mov	[ebp+var_74], edx
		mov	[esp], edx
		call	ds:_ZN4QPenC1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_58], 0Ah
		add	eax, 0D0h
		mov	[esp], eax
		call	ds:_ZN7QMatrixC1Ev
		mov	eax, [ebp+arg_0]
		add	eax, 100h
		mov	[ebp+var_70], eax
		mov	[esp], eax
		call	ds:_ZN5QFontC1Ev
		mov	eax, [ebp+var_60]
		mov	edx, [ebp+arg_0]
		mov	[edx+108h], eax
		mov	edx, eax
		lock inc dword ptr [eax]
		setnz	al
		mov	eax, [ebp+arg_0]
		mov	[eax+110h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+arg_0]
		mov	[eax+114h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+arg_0]
		mov	[eax+118h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+arg_0]
		mov	[eax+11Ch], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+arg_0]
		mov	[eax+120h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+arg_0]
		mov	[eax+124h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+arg_0]
		mov	[eax+128h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+arg_0]
		mov	[eax+12Ch], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+arg_0]
		mov	[eax+130h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+arg_0]
		mov	[eax+134h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+arg_0]
		mov	[eax+138h], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	eax, [ebp+arg_0]
		mov	[eax+13Ch], edx
		lock inc dword ptr [edx]
		setnz	al
		mov	edx, [ebp+arg_0]
		fldz
		lea	eax, [ebp+var_C]
		fst	qword ptr [edx+98h]
		mov	dword ptr [edx+80h], 0FFFFFFFFh
		fst	qword ptr [edx+0A0h]
		mov	dword ptr [edx+84h], 0FFFFFFFFh
		fst	qword ptr [edx+88h]
		mov	dword ptr [edx+0A8h], 0
		fstp	qword ptr [edx+90h]
		mov	dword ptr [edx+0B0h], 48h
		add	edx, 110h
		mov	[ebp+var_90], edx
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aQtSvgDocument ; "Qt Svg Document"
		mov	[esp], eax
		mov	[ebp+var_58], 9
		call	ds:_ZN7QString10fromLatin1EPKci
		sub	esp, 4
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_90]
		mov	[ebp+var_58], 6
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71043271

loc_71043071:				; CODE XREF: sub_71042D80+504j
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_10]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aGeneratedWithQ ; "Generated with Qt"
		mov	[esp], eax
		add	edx, 114h
		mov	[ebp+var_8C], edx
		mov	[ebp+var_58], 9
		call	ds:_ZN7QString10fromLatin1EPKci
		sub	esp, 4
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	eax, [ebp+var_8C]
		mov	[ebp+var_58], 5
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_710432F0

loc_710430D4:				; CODE XREF: sub_71042D80+583j
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_14]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aSerif ; "serif"
		mov	[esp], eax
		add	edx, 120h
		mov	[ebp+var_88], edx
		mov	[ebp+var_58], 9
		call	ds:_ZN7QString10fromLatin1EPKci
		sub	esp, 4
		lea	eax, [ebp+var_14]
		mov	[esp+4], eax
		mov	eax, [ebp+var_88]
		mov	[ebp+var_58], 4
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_710432D8

loc_71043137:				; CODE XREF: sub_71042D80+56Bj
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_18]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset a10pt	; "10pt"
		mov	[esp], eax
		add	edx, 11Ch
		mov	[ebp+var_84], edx
		mov	[ebp+var_58], 9
		call	ds:_ZN7QString10fromLatin1EPKci
		sub	esp, 4
		lea	eax, [ebp+var_18]
		mov	[esp+4], eax
		mov	eax, [ebp+var_84]
		mov	[ebp+var_58], 3
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_18]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_710432C0

loc_7104319A:				; CODE XREF: sub_71042D80+553j
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_1C]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aNormal_0 ; "normal"
		mov	[esp], eax
		add	edx, 124h
		mov	[ebp+var_80], edx
		mov	[ebp+var_58], 9
		call	ds:_ZN7QString10fromLatin1EPKci
		sub	esp, 4
		lea	eax, [ebp+var_1C]
		mov	[esp+4], eax
		mov	eax, [ebp+var_80]
		mov	[ebp+var_58], 2
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_710432A5

loc_710431F7:				; CODE XREF: sub_71042D80+538j
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_20]
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	dword ptr [esp+4], offset aNormal_0 ; "normal"
		mov	[esp], eax
		add	edx, 118h
		mov	[ebp+var_7C], edx
		mov	[ebp+var_58], 9
		call	ds:_ZN7QString10fromLatin1EPKci
		sub	esp, 4
		lea	eax, [ebp+var_20]
		mov	[esp+4], eax
		mov	eax, [ebp+var_7C]
		mov	[ebp+var_58], 1
		mov	[esp], eax
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71043290

loc_71043250:				; CODE XREF: sub_71042D80+523j
		mov	eax, [ebp+arg_0]
		mov	byte ptr [eax+0C0h], 0
		mov	dword ptr [eax+10Ch], 0
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71043271:				; CODE XREF: sub_71042D80+2EBj
		mov	eax, [ebp+var_C]
		mov	[ebp+var_58], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71043071
; ---------------------------------------------------------------------------
		align 10h

loc_71043290:				; CODE XREF: sub_71042D80+4CEj
		mov	eax, [ebp+var_20]
		mov	[ebp+var_58], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_71043250
; ---------------------------------------------------------------------------

loc_710432A5:				; CODE XREF: sub_71042D80+471j
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_58], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_710431F7
; ---------------------------------------------------------------------------
		align 10h

loc_710432C0:				; CODE XREF: sub_71042D80+414j
		mov	eax, [ebp+var_18]
		mov	[ebp+var_58], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_7104319A
; ---------------------------------------------------------------------------

loc_710432D8:				; CODE XREF: sub_71042D80+3B1j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_58], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71043137
; ---------------------------------------------------------------------------

loc_710432F0:				; CODE XREF: sub_71042D80+34Ej
		mov	eax, [ebp+var_10]
		mov	[ebp+var_58], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_710430D4
sub_71042D80	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71043308	proc near		; DATA XREF: sub_71042D80+23o
		add	ebp, 8
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-94h], edx
		jz	loc_71043457
		cmp	eax, 2
		jz	loc_710434EE
		cmp	eax, 3
		jz	loc_710434D7
		cmp	eax, 4
		jz	loc_710434C0
		cmp	eax, 5
		xchg	ax, ax
		jz	loc_710434A9
		cmp	eax, 6
		jz	loc_7104346E
		cmp	eax, 7
		jz	loc_71043481
		cmp	eax, 8
		nop
		lea	esi, [esi+0]
		jz	short loc_71043384
		cmp	eax, 9
		jz	short loc_710433C5
		cmp	eax, 0Ah
		jz	short loc_710433D8
		cmp	eax, 0Bh
		nop
		jz	short loc_710433EB
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_710477B0

loc_71043384:				; CODE XREF: sub_71043308+58j
					; sub_71043308+161j ...
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-58h], 0
		add	eax, 110h
		mov	[esp+0], eax
		call	sub_710429A0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-58h], 0
		add	eax, 108h
		mov	[esp+0], eax
		call	sub_710477B0
		mov	edx, [ebp-70h]
		mov	dword ptr [ebp-58h], 0
		mov	[esp+0], edx
		call	ds:_ZN5QFontD1Ev

loc_710433C5:				; CODE XREF: sub_71043308+5Dj
		mov	eax, [ebp-74h]
		mov	dword ptr [ebp-58h], 0
		mov	[esp+0], eax
		call	ds:_ZN4QPenD1Ev

loc_710433D8:				; CODE XREF: sub_71043308+62j
		mov	edx, [ebp-78h]
		mov	dword ptr [ebp-58h], 0
		mov	[esp+0], edx
		call	ds:_ZN6QBrushD1Ev

loc_710433EB:				; CODE XREF: sub_71043308+68j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-58h], 0
		add	eax, 0BCh
		mov	[esp+0], eax
		call	sub_710477B0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-58h], 0
		add	eax, 0B8h
		mov	[esp+0], eax
		call	sub_710477B0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-58h], 0
		add	eax, 0B4h
		mov	[esp+0], eax
		call	sub_710477B0
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-58h], 0
		mov	[esp+0], eax
		call	sub_71042010
		mov	edx, [ebp-94h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71043457:				; CODE XREF: sub_71043308+12j
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_710477B0
		jmp	loc_71043384
; ---------------------------------------------------------------------------

loc_7104346E:				; CODE XREF: sub_71043308+41j
		mov	eax, [ebp-6Ch]
		mov	dword ptr [ebp-58h], 0
		mov	[esp+0], eax
		call	ds:_ZN7QRegionD1Ev

loc_71043481:				; CODE XREF: sub_71043308+4Aj
		mov	edx, [ebp-68h]
		mov	dword ptr [ebp-58h], 0
		mov	[esp+0], edx
		call	ds:_ZN7QRegionD1Ev
		mov	eax, [ebp-94h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_710434A9:				; CODE XREF: sub_71043308+38j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_710477B0
		jmp	loc_71043384
; ---------------------------------------------------------------------------

loc_710434C0:				; CODE XREF: sub_71043308+2Dj
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_710477B0
		jmp	loc_71043384
; ---------------------------------------------------------------------------

loc_710434D7:				; CODE XREF: sub_71043308+24j
		lea	eax, [ebp-14h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_710477B0
		jmp	loc_71043384
; ---------------------------------------------------------------------------

loc_710434EE:				; CODE XREF: sub_71043308+1Bj
		lea	eax, [ebp-18h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_710477B0
		jmp	loc_71043384
sub_71043308	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71043510	proc near		; DATA XREF: .rdata:7105DAECo

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_71053B3A
		mov	[ebp+var_18], offset sub_710436CE
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, edx
		mov	dword ptr [edx], offset	off_7105DAE8
		add	eax, 110h
		mov	[esp], eax
		mov	[ebp+var_38], 2
		call	sub_710429A0
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+108h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71043650

loc_71043575:				; CODE XREF: sub_71043510+159j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 4
		add	eax, 100h
		mov	[esp], eax
		call	ds:_ZN5QFontD1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 5
		add	eax, 0C8h
		mov	[esp], eax
		call	ds:_ZN4QPenD1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 6
		add	eax, 0C4h
		mov	[esp], eax
		call	ds:_ZN6QBrushD1Ev
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0BCh]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_710436B0

loc_710435D4:				; CODE XREF: sub_71043510+1B9j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0B8h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71043690

loc_710435EB:				; CODE XREF: sub_71043510+199j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0B4h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71043670

loc_710435FE:				; CODE XREF: sub_71043510+179j
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105DA40
		mov	[ebp+var_40], eax
		add	eax, 20h
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_ZN7QRegionD1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		add	eax, 0Ch
		mov	[esp], eax
		call	ds:_ZN7QRegionD1Ev
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		call	sub_710517D0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71043650:				; CODE XREF: sub_71043510+5Fj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+108h]
		mov	[ebp+var_38], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71043575
; ---------------------------------------------------------------------------
		align 10h

loc_71043670:				; CODE XREF: sub_71043510+ECj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0B4h]
		mov	[ebp+var_38], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_710435FE
; ---------------------------------------------------------------------------
		align 10h

loc_71043690:				; CODE XREF: sub_71043510+D5j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0B8h]
		mov	[ebp+var_38], 8
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_710435EB
; ---------------------------------------------------------------------------
		align 10h

loc_710436B0:				; CODE XREF: sub_71043510+BEj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0BCh]
		mov	[ebp+var_38], 7
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_710435D4
sub_71043510	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710436CE	proc near		; DATA XREF: sub_71043510+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-44h], edx
		jz	short loc_71043747
		cmp	eax, 2
		jz	short loc_7104375E
		cmp	eax, 3
		jz	loc_71043776
		cmp	eax, 4
		jz	loc_7104378E
		cmp	eax, 5
		jz	loc_710437A6
		cmp	eax, 6
		jz	loc_710437BD
		cmp	eax, 7
		nop
		lea	esi, [esi+0]
		jz	loc_710437D4
		cmp	eax, 8
		jz	loc_710437EB
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	ds:_ZN7QRegionD1Ev
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71043747:				; CODE XREF: sub_710436CE+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 108h
		mov	[esp+0], eax
		call	sub_710477B0

loc_7104375E:				; CODE XREF: sub_710436CE+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 100h
		mov	[esp+0], eax
		call	ds:_ZN5QFontD1Ev

loc_71043776:				; CODE XREF: sub_710436CE+19j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0C8h
		mov	[esp+0], eax
		call	ds:_ZN4QPenD1Ev

loc_7104378E:				; CODE XREF: sub_710436CE+22j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0C4h
		mov	[esp+0], eax
		call	ds:_ZN6QBrushD1Ev

loc_710437A6:				; CODE XREF: sub_710436CE+2Bj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0BCh
		mov	[esp+0], eax
		call	sub_710477B0

loc_710437BD:				; CODE XREF: sub_710436CE+34j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0B8h
		mov	[esp+0], eax
		call	sub_710477B0

loc_710437D4:				; CODE XREF: sub_710436CE+42j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0B4h
		mov	[esp+0], eax
		call	sub_710477B0

loc_710437EB:				; CODE XREF: sub_710436CE+4Bj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_71042010
		mov	edx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_710436CE	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71043810	proc near		; DATA XREF: .rdata:off_7105DAE8o

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053B50
		mov	[ebp+var_18], offset sub_710439BE
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, edx
		mov	dword ptr [edx], offset	off_7105DAE8
		add	eax, 110h
		mov	[esp], eax
		mov	[ebp+var_38], 2
		call	sub_710429A0
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+108h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71043940

loc_71043875:				; CODE XREF: sub_71043810+149j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 4
		add	eax, 100h
		mov	[esp], eax
		call	ds:_ZN5QFontD1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 5
		add	eax, 0C8h
		mov	[esp], eax
		call	ds:_ZN4QPenD1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 6
		add	eax, 0C4h
		mov	[esp], eax
		call	ds:_ZN6QBrushD1Ev
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0BCh]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_710439A0

loc_710438D4:				; CODE XREF: sub_71043810+1A9j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0B8h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71043980

loc_710438EB:				; CODE XREF: sub_71043810+189j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0B4h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71043960

loc_710438FE:				; CODE XREF: sub_71043810+169j
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105DA40
		mov	[ebp+var_40], eax
		add	eax, 20h
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_ZN7QRegionD1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		add	eax, 0Ch
		mov	[esp], eax
		call	ds:_ZN7QRegionD1Ev
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71043940:				; CODE XREF: sub_71043810+5Fj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+108h]
		mov	[ebp+var_38], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71043875
; ---------------------------------------------------------------------------
		align 10h

loc_71043960:				; CODE XREF: sub_71043810+ECj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0B4h]
		mov	[ebp+var_38], 9
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_710438FE
; ---------------------------------------------------------------------------
		align 10h

loc_71043980:				; CODE XREF: sub_71043810+D5j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0B8h]
		mov	[ebp+var_38], 8
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_710438EB
; ---------------------------------------------------------------------------
		align 10h

loc_710439A0:				; CODE XREF: sub_71043810+BEj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0BCh]
		mov	[ebp+var_38], 7
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_710438D4
sub_71043810	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710439BE	proc near		; DATA XREF: sub_71043810+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-44h], edx
		jz	short loc_71043A37
		cmp	eax, 2
		jz	short loc_71043A4E
		cmp	eax, 3
		jz	loc_71043A66
		cmp	eax, 4
		jz	loc_71043A7E
		cmp	eax, 5
		jz	loc_71043A96
		cmp	eax, 6
		jz	loc_71043AAD
		cmp	eax, 7
		nop
		lea	esi, [esi+0]
		jz	loc_71043AC4
		cmp	eax, 8
		jz	loc_71043ADB
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0Ch
		mov	[esp+0], eax
		call	ds:_ZN7QRegionD1Ev
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71043A37:				; CODE XREF: sub_710439BE+Fj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 108h
		mov	[esp+0], eax
		call	sub_710477B0

loc_71043A4E:				; CODE XREF: sub_710439BE+14j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 100h
		mov	[esp+0], eax
		call	ds:_ZN5QFontD1Ev

loc_71043A66:				; CODE XREF: sub_710439BE+19j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0C8h
		mov	[esp+0], eax
		call	ds:_ZN4QPenD1Ev

loc_71043A7E:				; CODE XREF: sub_710439BE+22j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0C4h
		mov	[esp+0], eax
		call	ds:_ZN6QBrushD1Ev

loc_71043A96:				; CODE XREF: sub_710439BE+2Bj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0BCh
		mov	[esp+0], eax
		call	sub_710477B0

loc_71043AAD:				; CODE XREF: sub_710439BE+34j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0B8h
		mov	[esp+0], eax
		call	sub_710477B0

loc_71043AC4:				; CODE XREF: sub_710439BE+42j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 0B4h
		mov	[esp+0], eax
		call	sub_710477B0

loc_71043ADB:				; CODE XREF: sub_710439BE+4Bj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_71042010
		mov	edx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_710439BE	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71043B00	proc near		; DATA XREF: .rdata:7105DB0Co

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053A50
		mov	[ebp+var_18], offset sub_71043CAE
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_7105DB08
		mov	eax, [edx+13Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71043B61
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+13Ch]
		mov	[ebp+var_38], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_71043B61:				; CODE XREF: sub_71043B00+46j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_40], eax
		mov	eax, ds:_ZTV20QGraphicsItemPrivate
		add	eax, 8
		mov	[edx], eax
		mov	eax, [edx+0FCh]
		test	eax, eax
		jz	short loc_71043B8D
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jz	loc_71043C55

loc_71043B8D:				; CODE XREF: sub_71043B00+7Cj
					; sub_71043B00+184j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0E8h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71043C90

loc_71043BA4:				; CODE XREF: sub_71043B00+1A9j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+78h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71043BCA
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+78h]
		mov	[ebp+var_38], 3
		mov	[esp], eax
		call	ds:_Z5qFreePv

loc_71043BCA:				; CODE XREF: sub_71043B00+B2j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+48h]
		test	eax, eax
		jz	short loc_71043C0F
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jnz	short loc_71043C0F
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+48h]
		mov	eax, [edx+4]
		cmp	edx, eax
		jz	short loc_71043BF7
		lea	esi, [esi+0]

loc_71043BF0:				; CODE XREF: sub_71043B00+F5j
		mov	eax, [eax+4]
		cmp	edx, eax
		jnz	short loc_71043BF0

loc_71043BF7:				; CODE XREF: sub_71043B00+EAj
		mov	dword ptr [esp+4], 14h
		mov	[esp], edx
		mov	[ebp+var_38], 4
		call	ds:_ZN8QMapData16continueFreeDataEi

loc_71043C0F:				; CODE XREF: sub_71043B00+D2j
					; sub_71043B00+DDj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71043C3D
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 4
		mov	[esp], eax
		call	sub_710466C0

loc_71043C3D:				; CODE XREF: sub_71043B00+11Dj
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_710517D0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71043C55:				; CODE XREF: sub_71043B00+87j
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+0FCh]
		mov	eax, [edx+4]
		cmp	edx, eax
		jz	short loc_71043C6C

loc_71043C65:				; CODE XREF: sub_71043B00+16Aj
		mov	eax, [eax+4]
		cmp	edx, eax
		jnz	short loc_71043C65

loc_71043C6C:				; CODE XREF: sub_71043B00+163j
		mov	dword ptr [esp+4], 8
		mov	[esp], edx
		mov	[ebp+var_38], 1
		call	ds:_ZN8QMapData16continueFreeDataEi
		jmp	loc_71043B8D
; ---------------------------------------------------------------------------
		align 10h

loc_71043C90:				; CODE XREF: sub_71043B00+9Ej
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0E8h]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	loc_71043BA4
sub_71043B00	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71043CAE	proc near		; DATA XREF: sub_71043B00+20o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-50h], edx
		jz	short loc_71043D0B
		cmp	eax, 2
		jz	short loc_71043D3D
		cmp	eax, 3
		jz	loc_71043D52
		cmp	eax, 4
		jz	loc_71043D98
		mov	[ebp-4Ch], edx
		mov	edx, [ebp-40h]
		mov	eax, [edx+0E8h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71043D05
		mov	edx, [ebp-40h]
		mov	eax, [edx+0E8h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	ds:_Z5qFreePv

loc_71043D05:				; CODE XREF: sub_71043CAE+3Cj
		mov	eax, [ebp-4Ch]
		mov	[ebp-50h], eax

loc_71043D0B:				; CODE XREF: sub_71043CAE+Fj
		mov	eax, [ebp-50h]
		mov	edx, [ebp-40h]
		mov	[ebp-48h], eax
		mov	eax, [edx+78h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71043D37
		mov	edx, [ebp-40h]
		mov	eax, [edx+78h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	ds:_Z5qFreePv

loc_71043D37:				; CODE XREF: sub_71043CAE+71j
		mov	eax, [ebp-48h]
		mov	[ebp-50h], eax

loc_71043D3D:				; CODE XREF: sub_71043CAE+14j
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 48h
		mov	[esp+0], eax
		call	sub_71044460

loc_71043D52:				; CODE XREF: sub_71043CAE+19j
		mov	edx, [ebp-50h]
		mov	[ebp-44h], edx
		mov	edx, [ebp-40h]
		mov	eax, [edx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71043D86
		mov	edx, [ebp-40h]
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+arg_0], eax
		mov	eax, edx
		add	eax, 4
		mov	[esp+0], eax
		call	sub_710466C0

loc_71043D86:				; CODE XREF: sub_71043CAE+B8j
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71043D98:				; CODE XREF: sub_71043CAE+22j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_71042460
		mov	edx, [ebp-50h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_71043CAE	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71043DC0	proc near		; DATA XREF: .rdata:off_7105DB08o

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_71053A42
		mov	[ebp+var_18], offset sub_71043F62
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_7105DB08
		mov	eax, [edx+13Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71043E21
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+13Ch]
		mov	[ebp+var_38], 5
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_71043E21:				; CODE XREF: sub_71043DC0+46j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_40], eax
		mov	eax, ds:_ZTV20QGraphicsItemPrivate
		add	eax, 8
		mov	[edx], eax
		mov	eax, [edx+0FCh]
		test	eax, eax
		jz	short loc_71043E4D
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jz	loc_71043F10

loc_71043E4D:				; CODE XREF: sub_71043DC0+7Cj
					; sub_71043DC0+17Fj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0E8h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71043F44

loc_71043E64:				; CODE XREF: sub_71043DC0+19Dj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+78h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71043E8A
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+78h]
		mov	[ebp+var_38], 3
		mov	[esp], eax
		call	ds:_Z5qFreePv

loc_71043E8A:				; CODE XREF: sub_71043DC0+B2j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+48h]
		test	eax, eax
		jz	short loc_71043ECF
		lock dec dword ptr [eax+34h]
		setnz	dl
		test	dl, dl
		jnz	short loc_71043ECF
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+48h]
		mov	eax, [edx+4]
		cmp	edx, eax
		jz	short loc_71043EB7
		lea	esi, [esi+0]

loc_71043EB0:				; CODE XREF: sub_71043DC0+F5j
		mov	eax, [eax+4]
		cmp	edx, eax
		jnz	short loc_71043EB0

loc_71043EB7:				; CODE XREF: sub_71043DC0+EAj
		mov	dword ptr [esp+4], 14h
		mov	[esp], edx
		mov	[ebp+var_38], 4
		call	ds:_ZN8QMapData16continueFreeDataEi

loc_71043ECF:				; CODE XREF: sub_71043DC0+D2j
					; sub_71043DC0+DDj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71043EFD
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 4
		mov	[esp], eax
		call	sub_710466C0

loc_71043EFD:				; CODE XREF: sub_71043DC0+11Dj
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71043F10:				; CODE XREF: sub_71043DC0+87j
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+0FCh]
		mov	eax, [edx+4]
		cmp	edx, eax
		jz	short loc_71043F27

loc_71043F20:				; CODE XREF: sub_71043DC0+165j
		mov	eax, [eax+4]
		cmp	edx, eax
		jnz	short loc_71043F20

loc_71043F27:				; CODE XREF: sub_71043DC0+15Ej
		mov	dword ptr [esp+4], 8
		mov	[esp], edx
		mov	[ebp+var_38], 1
		call	ds:_ZN8QMapData16continueFreeDataEi
		jmp	loc_71043E4D
; ---------------------------------------------------------------------------

loc_71043F44:				; CODE XREF: sub_71043DC0+9Ej
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0E8h]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_Z5qFreePv
		jmp	loc_71043E64
sub_71043DC0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71043F62	proc near		; DATA XREF: sub_71043DC0+20o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-50h], edx
		jz	short loc_71043FBF
		cmp	eax, 2
		jz	short loc_71043FF1
		cmp	eax, 3
		jz	loc_71044006
		cmp	eax, 4
		jz	loc_7104404C
		mov	[ebp-4Ch], edx
		mov	edx, [ebp-40h]
		mov	eax, [edx+0E8h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71043FB9
		mov	edx, [ebp-40h]
		mov	eax, [edx+0E8h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	ds:_Z5qFreePv

loc_71043FB9:				; CODE XREF: sub_71043F62+3Cj
		mov	eax, [ebp-4Ch]
		mov	[ebp-50h], eax

loc_71043FBF:				; CODE XREF: sub_71043F62+Fj
		mov	eax, [ebp-50h]
		mov	edx, [ebp-40h]
		mov	[ebp-48h], eax
		mov	eax, [edx+78h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71043FEB
		mov	edx, [ebp-40h]
		mov	eax, [edx+78h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	ds:_Z5qFreePv

loc_71043FEB:				; CODE XREF: sub_71043F62+71j
		mov	eax, [ebp-48h]
		mov	[ebp-50h], eax

loc_71043FF1:				; CODE XREF: sub_71043F62+14j
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 48h
		mov	[esp+0], eax
		call	sub_71044460

loc_71044006:				; CODE XREF: sub_71043F62+19j
		mov	edx, [ebp-50h]
		mov	[ebp-44h], edx
		mov	edx, [ebp-40h]
		mov	eax, [edx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104403A
		mov	edx, [ebp-40h]
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+arg_0], eax
		mov	eax, edx
		add	eax, 4
		mov	[esp+0], eax
		call	sub_710466C0

loc_7104403A:				; CODE XREF: sub_71043F62+B8j
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7104404C:				; CODE XREF: sub_71043F62+22j
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	sub_71042460
		mov	edx, [ebp-50h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_71043F62	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71044070	proc near		; CODE XREF: sub_7101D010+566p
					; sub_7101D618+C3p ...

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_710533A8
		mov	[ebp+var_18], offset sub_710441F6
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+1Ch]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_71044164

loc_710440B4:				; CODE XREF: sub_71044070+112j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+18h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	short loc_71044141

loc_710440C5:				; CODE XREF: sub_71044070+EFj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		test	eax, eax
		jz	short loc_710440DD
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_710441D3

loc_710440DD:				; CODE XREF: sub_71044070+5Dj
					; sub_71044070+181j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		test	eax, eax
		jz	short loc_710440F5
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_710441B0

loc_710440F5:				; CODE XREF: sub_71044070+75j
					; sub_71044070+15Ej
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		test	eax, eax
		jz	short loc_71044109
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71044187

loc_71044109:				; CODE XREF: sub_71044070+8Dj
					; sub_71044070+135j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_71044134
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71044134
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[esp], edx
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_7104DFE0

loc_71044134:				; CODE XREF: sub_71044070+A0j
					; sub_71044070+AAj
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71044141:				; CODE XREF: sub_71044070+53j
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_71044770
		mov	eax, [edx+18h]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_710440C5
; ---------------------------------------------------------------------------

loc_71044164:				; CODE XREF: sub_71044070+3Ej
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_71044770
		mov	eax, [edx+1Ch]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_710440B4
; ---------------------------------------------------------------------------

loc_71044187:				; CODE XREF: sub_71044070+97j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+4]
		mov	[ebp+var_38], 5
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 4
		mov	[esp], eax
		call	sub_7104DB20
		jmp	loc_71044109
; ---------------------------------------------------------------------------
		align 10h

loc_710441B0:				; CODE XREF: sub_71044070+7Fj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		mov	[ebp+var_38], 4
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 8
		mov	[esp], eax
		call	sub_7104D360
		jmp	loc_710440F5
; ---------------------------------------------------------------------------

loc_710441D3:				; CODE XREF: sub_71044070+67j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		mov	[ebp+var_38], 3
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 0Ch
		mov	[esp], eax
		call	sub_710497B0
		jmp	loc_710440DD
sub_71044070	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710441F6	proc near		; DATA XREF: sub_71044070+20o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	edx, [ebp-38h]
		mov	eax, [ebp-34h]
		cmp	edx, 1
		jz	short loc_71044250
		cmp	edx, 2
		jz	short loc_71044288
		cmp	edx, 3
		jz	loc_710442C0
		cmp	edx, 4
		jz	loc_710442F8
		mov	edx, [ebp+8]
		mov	[ebp-50h], eax
		mov	eax, [edx+18h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104424D
		mov	edx, [ebp+8]
		mov	[esp+arg_0], offset sub_71044770
		mov	eax, [edx+18h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_7104424D:				; CODE XREF: sub_710441F6+37j
		mov	eax, [ebp-50h]

loc_71044250:				; CODE XREF: sub_710441F6+Cj
		mov	edx, [ebp+8]
		mov	[ebp-4Ch], eax
		mov	eax, [edx+0Ch]
		test	eax, eax
		jz	short loc_71044285
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71044285
		mov	edx, [ebp+8]
		mov	eax, [edx+0Ch]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+arg_0], eax
		mov	eax, edx
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_710497B0

loc_71044285:				; CODE XREF: sub_710441F6+65j
					; sub_710441F6+6Fj
		mov	eax, [ebp-4Ch]

loc_71044288:				; CODE XREF: sub_710441F6+11j
		mov	edx, [ebp+8]
		mov	[ebp-48h], eax
		mov	eax, [edx+8]
		test	eax, eax
		jz	short loc_710442BD
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710442BD
		mov	edx, [ebp+8]
		mov	eax, [edx+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+arg_0], eax
		mov	eax, edx
		add	eax, 8
		mov	[esp+0], eax
		call	sub_7104D360

loc_710442BD:				; CODE XREF: sub_710441F6+9Dj
					; sub_710441F6+A7j
		mov	eax, [ebp-48h]

loc_710442C0:				; CODE XREF: sub_710441F6+16j
		mov	edx, [ebp+8]
		mov	[ebp-44h], eax
		mov	eax, [edx+4]
		test	eax, eax
		jz	short loc_710442F5
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710442F5
		mov	edx, [ebp+8]
		mov	eax, [edx+4]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+arg_0], eax
		mov	eax, edx
		add	eax, 4
		mov	[esp+0], eax
		call	sub_7104DB20

loc_710442F5:				; CODE XREF: sub_710441F6+D5j
					; sub_710441F6+DFj
		mov	eax, [ebp-44h]

loc_710442F8:				; CODE XREF: sub_710441F6+1Fj
		mov	edx, [ebp+8]
		mov	[ebp-40h], eax
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_71044326
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71044326
		mov	edx, [ebp+8]
		mov	eax, [edx]
		mov	[esp+0], edx
		mov	dword ptr [ebp-38h], 0
		mov	[esp+arg_0], eax
		call	sub_7104DFE0

loc_71044326:				; CODE XREF: sub_710441F6+10Cj
					; sub_710441F6+116j
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_710441F6	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71044340	proc near		; CODE XREF: sub_71014C2E+12Bp
					; .text:71015139p ...

var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_7105309C
		mov	[ebp+var_18], offset sub_71044431
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+10h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71044416

loc_71044383:				; CODE XREF: sub_71044340+ECj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_71044409
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71044409
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		mov	[ebp+var_48], eax
		mov	edx, [ebp+var_48]
		add	eax, 10h
		mov	[ebp+var_44], eax
		mov	eax, [edx+8]
		shl	eax, 4
		lea	eax, [eax+edx+10h]
		mov	[ebp+var_40], eax

loc_710443B4:				; CODE XREF: sub_71044340+8Ej
		mov	eax, [ebp+var_40]
		cmp	[ebp+var_44], eax
		jz	short loc_710443EE

loc_710443BC:				; CODE XREF: sub_71044340+ACj
		sub	[ebp+var_40], 10h
		mov	edx, [ebp+var_40]
		mov	eax, [edx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710443B4
		mov	edx, [ebp+var_40]
		mov	eax, [edx+4]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		mov	eax, [ebp+var_40]
		cmp	[ebp+var_44], eax
		jnz	short loc_710443BC

loc_710443EE:				; CODE XREF: sub_71044340+7Aj
		mov	edx, [ebp+var_48]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], edx
		call	ds:_ZN11QVectorData4freeEPS_i

loc_71044409:				; CODE XREF: sub_71044340+4Aj
					; sub_71044340+54j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71044416:				; CODE XREF: sub_71044340+3Dj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+10h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71044383
sub_71044340	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71044431	proc near		; DATA XREF: sub_71044340+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-4Ch], eax
		mov	[esp+0], edx
		call	sub_7104D2D0
		mov	eax, [ebp-4Ch]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71044431	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71044460	proc near		; CODE XREF: sub_71031655+81p
					; sub_71031C3E+90p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_71044499
		lock dec dword ptr [eax+34h]
		setnz	cl
		test	cl, cl
		jnz	short loc_71044499
		mov	edx, [edx]
		mov	eax, [edx+4]
		cmp	edx, eax
		jz	short loc_71044488

loc_71044481:				; CODE XREF: sub_71044460+26j
		mov	eax, [eax+4]
		cmp	edx, eax
		jnz	short loc_71044481

loc_71044488:				; CODE XREF: sub_71044460+1Fj
		mov	[esp+1Ch+var_18], 14h
		mov	[esp+1Ch+var_1C], edx
		call	ds:_ZN8QMapData16continueFreeDataEi

loc_71044499:				; CODE XREF: sub_71044460+Bj
					; sub_71044460+16j
		add	esp, 1Ch
		retn
sub_71044460	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710444A0	proc near		; DATA XREF: sub_71029A80+97o
					; sub_71029A80+1FBo ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, ds:_ZN12QPainterPathD1Ev
		add	[esp+0Ch+arg_0], 14h
		add	esp, 0Ch
		jmp	eax
sub_710444A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710444C0	proc near		; DATA XREF: sub_71029A80+9Fo

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053848
		mov	[ebp+var_18], offset sub_7104454A
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_4]
		test	eax, eax
		jz	short loc_7104453D
		mov	edx, [ebp+arg_0]
		movzx	eax, word ptr [edx+8]
		mov	edx, [ebp+arg_4]
		mov	[edx+8], ax
		mov	edx, [ebp+arg_0]
		movzx	eax, word ptr [edx+10h]
		mov	edx, [ebp+arg_4]
		mov	[edx+10h], ax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 1
		add	eax, 14h
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 14h
		mov	[esp], eax
		call	ds:_ZN12QPainterPathC1ERKS_
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		fld	qword ptr [eax+18h]
		fstp	qword ptr [edx+18h]

loc_7104453D:				; CODE XREF: sub_710444C0+34j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_710444C0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104454A	proc near		; DATA XREF: sub_710444C0+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7104454A	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71044560	proc near		; DATA XREF: sub_7102A87C+20o
					; _ZN16QSvgTinyDocumentD1Ev+93o ...

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_710538B4
		mov	[ebp+var_18], offset sub_710445EA
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		test	eax, eax
		jz	short loc_710445B7
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_710445B7
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 1
		call	eax

loc_710445B7:				; CODE XREF: sub_71044560+37j
					; sub_71044560+44j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710445DD
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_710445DD:				; CODE XREF: sub_71044560+65j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71044560	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710445EA	proc near		; DATA XREF: sub_71044560+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		add	eax, 8
		mov	[esp+0], eax
		call	sub_710477B0
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_710445EA	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71044620	proc near		; DATA XREF: _ZN16QSvgTinyDocument13addNamedStyleERK7QStringP21QSvgFillStyleProperty+69o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		mov	edx, [esp+4+arg_4]
		mov	ecx, [esp+4+arg_0]
		test	edx, edx
		jz	short loc_71044647
		mov	eax, [ecx+8]
		mov	[edx+8], eax
		lock inc dword ptr [eax]
		setnz	bl
		mov	eax, [ecx+0Ch]
		test	eax, eax
		mov	[edx+0Ch], eax
		jz	short loc_71044647
		add	dword ptr [eax+4], 1

loc_71044647:				; CODE XREF: sub_71044620+Bj
					; sub_71044620+21j
		pop	ebx
		retn
sub_71044620	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71044650	proc near		; DATA XREF: _ZN16QSvgTinyDocumentD1Ev+B6o
					; _ZN16QSvgTinyDocumentD2Ev+B6o ...

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_710538BA
		mov	[ebp+var_18], offset sub_710446DA
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		test	eax, eax
		jz	short loc_710446A7
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_710446A7
		mov	edx, [eax]
		mov	[esp], eax
		mov	eax, [edx+4]
		mov	[ebp+var_38], 1
		call	eax

loc_710446A7:				; CODE XREF: sub_71044650+37j
					; sub_71044650+44j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710446CD
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_710446CD:				; CODE XREF: sub_71044650+65j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71044650	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710446DA	proc near		; DATA XREF: sub_71044650+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		add	eax, 8
		mov	[esp+0], eax
		call	sub_710477B0
		mov	edx, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_710446DA	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71044710	proc near		; DATA XREF: _ZN16QSvgTinyDocument10addSvgFontEP8QSvgFont+85o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		mov	edx, [esp+4+arg_4]
		mov	ecx, [esp+4+arg_0]
		test	edx, edx
		jz	short loc_71044737
		mov	eax, [ecx+8]
		mov	[edx+8], eax
		lock inc dword ptr [eax]
		setnz	bl
		mov	eax, [ecx+0Ch]
		test	eax, eax
		mov	[edx+0Ch], eax
		jz	short loc_71044737
		add	dword ptr [eax+4], 1

loc_71044737:				; CODE XREF: sub_71044710+Bj
					; sub_71044710+21j
		pop	ebx
		retn
sub_71044710	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71044740	proc near		; CODE XREF: sub_7102A87C+67p
					; sub_7102AA0C+3Fp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax+8]
		setnz	cl
		test	cl, cl
		jnz	short loc_71044767
		mov	[esp+1Ch+var_18], offset sub_71044650
		mov	eax, [edx]
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_71044767:				; CODE XREF: sub_71044740+12j
		add	esp, 1Ch
		retn
sub_71044740	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71044770	proc near		; DATA XREF: sub_7101D820+47Bo
					; sub_7101D820+49Bo ...

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_710531D2
		mov	[ebp+var_18], offset sub_71044843
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+10h]
		test	eax, eax
		jz	short loc_710447B3
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71044820

loc_710447B3:				; CODE XREF: sub_71044770+37j
					; sub_71044770+CEj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		test	eax, eax
		jz	short loc_710447C7
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71044800

loc_710447C7:				; CODE XREF: sub_71044770+4Bj
					; sub_71044770+AEj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710447ED
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_710447ED:				; CODE XREF: sub_71044770+65j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71044800:				; CODE XREF: sub_71044770+55j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		mov	[ebp+var_38], 2
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 0Ch
		mov	[esp], eax
		call	sub_7104D7F0
		jmp	short loc_710447C7
; ---------------------------------------------------------------------------

loc_71044820:				; CODE XREF: sub_71044770+41j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+10h]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	eax, edx
		add	eax, 10h
		mov	[esp], eax
		call	sub_7104BA80
		jmp	loc_710447B3
sub_71044770	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71044843	proc near		; DATA XREF: sub_71044770+20o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-44h], eax
		jz	short loc_7104488D
		mov	edx, [ebp+8]
		mov	[ebp-40h], eax
		mov	eax, [edx+0Ch]
		test	eax, eax
		jz	short loc_71044887
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71044887
		mov	edx, [ebp+8]
		mov	eax, [edx+0Ch]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+arg_0], eax
		mov	eax, edx
		add	eax, 0Ch
		mov	[esp+0], eax
		call	sub_7104D7F0

loc_71044887:				; CODE XREF: sub_71044843+1Aj
					; sub_71044843+24j
		mov	eax, [ebp-40h]
		mov	[ebp-44h], eax

loc_7104488D:				; CODE XREF: sub_71044843+Dj
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp+0], eax
		call	sub_710477B0
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71044843	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710448C0	proc near		; DATA XREF: sub_71049F70+115o
					; sub_71049F70+187o ...

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053218
		mov	[ebp+var_18], offset sub_710449B5
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_4]
		test	eax, eax
		jz	short loc_71044959
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		mov	edx, [ebp+arg_4]
		mov	[edx+8], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, 0Ch
		mov	[ebp+var_40], eax
		mov	eax, [edx+0Ch]
		mov	edx, [ebp+arg_4]
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+0Ch]
		test	byte ptr [eax+0Ch], 1
		jz	short loc_71044990

loc_7104492F:				; CODE XREF: sub_710448C0+F0j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+10h]
		mov	edx, [ebp+arg_4]
		mov	[edx+10h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+10h]
		test	byte ptr [eax+0Ch], 1
		jz	short loc_71044966

loc_7104494D:				; CODE XREF: sub_710448C0+C9j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+14h]
		mov	edx, [ebp+arg_4]
		mov	[edx+14h], eax

loc_71044959:				; CODE XREF: sub_710448C0+34j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_71044966:				; CODE XREF: sub_710448C0+8Bj
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		mov	eax, [ebp+arg_4]
		add	eax, 10h
		mov	[esp], eax
		call	sub_7104BC20
		jmp	short loc_7104494D
; ---------------------------------------------------------------------------
		align 10h

loc_71044990:				; CODE XREF: sub_710448C0+6Dj
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_38], 2
		mov	[esp+4], eax
		mov	eax, [ebp+var_40]
		mov	[esp], eax
		call	sub_7104D850
		jmp	loc_7104492F
sub_710448C0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710449B5	proc near		; DATA XREF: sub_710448C0+20o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-48h], eax
		jz	short loc_710449FD
		mov	edx, [ebp+0Ch]
		mov	[ebp-44h], eax
		mov	eax, [edx+0Ch]
		test	eax, eax
		jz	short loc_710449F7
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710449F7
		mov	edx, [ebp+0Ch]
		mov	eax, [edx+0Ch]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+arg_0], eax
		mov	eax, [ebp-40h]
		mov	[esp+0], eax
		call	sub_7104D7F0

loc_710449F7:				; CODE XREF: sub_710449B5+1Aj
					; sub_710449B5+24j
		mov	edx, [ebp-44h]
		mov	[ebp-48h], edx

loc_710449FD:				; CODE XREF: sub_710449B5+Dj
		mov	eax, [ebp+0Ch]
		mov	dword ptr [ebp-38h], 0
		add	eax, 8
		mov	[esp+0], eax
		call	sub_710477B0
		mov	eax, [ebp-48h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_710449B5	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71044A30	proc near		; DATA XREF: sub_710243A0+E3o
					; sub_710244A3+4Fo ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	edx, [esp+0Ch+arg_0]
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jz	short loc_71044A48
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_71044A48:				; CODE XREF: sub_71044A30+12j
		mov	eax, [edx+8]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_ZN7QString4freeEPNS_4DataE
		add	esp, 0Ch
		jmp	eax
sub_71044A30	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71044A60	proc near		; DATA XREF: _ZN16QSvgTinyDocument12addNamedNodeERK7QStringP8QSvgNode+47o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		mov	edx, [esp+4+arg_4]
		mov	ecx, [esp+4+arg_0]
		test	edx, edx
		jz	short loc_71044A7F
		mov	eax, [ecx+8]
		mov	[edx+8], eax
		lock inc dword ptr [eax]
		setnz	bl
		mov	eax, [ecx+0Ch]
		mov	[edx+0Ch], eax

loc_71044A7F:				; CODE XREF: sub_71044A60+Bj
		pop	ebx
		retn
sub_71044A60	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71044A90	proc near		; CODE XREF: sub_7102A87C+50p
					; sub_7102AA0C+28p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax+8]
		setnz	cl
		test	cl, cl
		jnz	short loc_71044AB7
		mov	[esp+1Ch+var_18], offset sub_71044A30
		mov	eax, [edx]
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_71044AB7:				; CODE XREF: sub_71044A90+12j
		add	esp, 1Ch
		retn
sub_71044A90	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71044AC0	proc near		; CODE XREF: sub_710235E0+64p

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_710535B4
		mov	[ebp+var_18], offset sub_71044BC4
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		mov	edx, [edx]
		mov	ecx, [edx+8]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_58], edx
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[ebp+var_5C], ecx
		mov	[esp], eax
		call	ds:_ZN9QListData6detachEi
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_50], eax
		mov	eax, [edx]
		mov	edx, [eax+0Ch]
		lea	edx, [eax+edx*4+14h]
		mov	[ebp+var_4C], edx
		mov	edx, [eax+8]
		lea	eax, [eax+edx*4+10h]
		lea	ecx, [eax+4]
		cmp	[ebp+var_4C], ecx
		mov	[ebp+var_54], ecx
		jz	short loc_71044B94
		mov	ecx, [ebp+var_58]
		add	eax, 8
		mov	edx, [ebp+var_5C]
		mov	[ebp+var_40], eax
		lea	edx, [ecx+edx*4+14h]
		mov	ecx, [ebp+var_54]
		mov	[ebp+var_44], edx
		mov	[ebp+var_48], ecx
		jmp	short loc_71044B60
; ---------------------------------------------------------------------------

loc_71044B56:				; CODE XREF: sub_71044AC0+D2j
		add	[ebp+var_44], 4
		add	ecx, 4
		mov	[ebp+var_40], ecx

loc_71044B60:				; CODE XREF: sub_71044AC0+94j
		mov	dword ptr [esp], 4 ; size_t
		mov	[ebp+var_38], 2
		call	sub_710517F0
		mov	ecx, [ebp+var_44]
		mov	edx, [ecx]
		mov	edx, [edx]
		test	edx, edx
		mov	[eax], edx
		jz	short loc_71044B84
		add	dword ptr [edx+4], 1

loc_71044B84:				; CODE XREF: sub_71044AC0+BEj
		mov	edx, [ebp+var_48]
		mov	ecx, [ebp+var_40]
		cmp	[ebp+var_4C], ecx
		mov	[edx], eax
		mov	[ebp+var_48], ecx
		jnz	short loc_71044B56

loc_71044B94:				; CODE XREF: sub_71044AC0+79j
		mov	ecx, [ebp+var_50]
		lock dec dword ptr [ecx]
		setnz	al
		test	al, al
		jnz	short loc_71044BB7
		mov	eax, [ebp+arg_0]
		mov	[esp+4], ecx
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_71044C90

loc_71044BB7:				; CODE XREF: sub_71044AC0+DFj
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71044AC0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71044BC4	proc near		; DATA XREF: sub_71044AC0+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-64h], edx
		jz	short loc_71044C17
		cmp	eax, 2
		jz	loc_71044C68
		mov	dword ptr [ebp-38h], 0
		call	sub_71051FB0
		mov	ecx, [ebp-64h]
		mov	[esp+0], ecx
		call	sub_71051CE0
		mov	edx, [ebp+8]
		mov	eax, [edx]
		mov	dword ptr [ebp-38h], 3
		mov	[esp+0], eax
		call	ds:_Z5qFreePv
		mov	eax, [ebp-50h]
		mov	ecx, [ebp+8]
		mov	[ecx], eax
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_71044C17:				; CODE XREF: sub_71044BC4+Fj
		mov	eax, [ebp-64h]
		mov	[esp+0], eax
		call	sub_71051CE0

loc_71044C22:				; CODE XREF: sub_71044BC4+74j
					; sub_71044BC4+96j
		mov	eax, [ebp-48h]
		cmp	[ebp-54h], eax
		jz	short loc_71044C5C
		sub	dword ptr [ebp-48h], 4
		mov	edx, [ebp-48h]
		mov	edx, [edx]
		test	edx, edx
		mov	[ebp-60h], edx
		jz	short loc_71044C22
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_71044C4F
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 1
		call	sub_7103C490

loc_71044C4F:				; CODE XREF: sub_71044BC4+7Aj
		mov	ecx, [ebp-60h]
		mov	[esp+0], ecx
		call	sub_710517D0
		jmp	short loc_71044C22
; ---------------------------------------------------------------------------

loc_71044C5C:				; CODE XREF: sub_71044BC4+64j
		mov	dword ptr [ebp-38h], 1
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_71044C68:				; CODE XREF: sub_71044BC4+14j
		mov	dword ptr [ebp-38h], 0
		call	sub_71051FB0
		mov	edx, [ebp-64h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_71044BC4	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71044C90	proc near		; CODE XREF: sub_71044AC0+F2p
					; sub_71044D00+208p

var_2C		= dword	ptr -2Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	ebp, [esp+2Ch+arg_4]
		mov	edx, [ebp+0Ch]
		lea	eax, [ebp+14h]
		lea	ebx, [eax+edx*4]
		mov	edx, [ebp+8]
		lea	edi, [eax+edx*4]
		cmp	ebx, edi
		jz	short loc_71044CE0
		xchg	ax, ax

loc_71044CB0:				; CODE XREF: sub_71044C90+4Ej
		sub	ebx, 4
		mov	esi, [ebx]
		test	esi, esi
		jz	short loc_71044CDC
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_71044CD4
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_71044CD4
		mov	edx, [eax]
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [edx+4]

loc_71044CD4:				; CODE XREF: sub_71044C90+2Dj
					; sub_71044C90+3Aj
		mov	[esp+2Ch+var_2C], esi
		call	sub_710517D0

loc_71044CDC:				; CODE XREF: sub_71044C90+27j
		cmp	edi, ebx
		jnz	short loc_71044CB0

loc_71044CE0:				; CODE XREF: sub_71044C90+1Cj
		mov	eax, ds:_Z5qFreePv
		mov	[esp+2Ch+arg_0], ebp
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	eax
sub_71044C90	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71044D00	proc near		; CODE XREF: sub_71023700+2D5p

var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_1C		= dword	ptr -1Ch
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 0BCh
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_710525B0
		mov	[ebp+var_40], offset dword_710535C8
		mov	[ebp+var_38], offset sub_71044F55
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	eax, [eax]
		cmp	eax, 1
		jz	loc_71044F10
		mov	[ebp+var_1C], 7FFFFFFFh
		mov	eax, [edx]
		mov	ecx, [ebp+arg_0]
		mov	edx, [eax+8]
		mov	[esp], ecx
		mov	dword ptr [esp+8], 1
		mov	[ebp+var_58], 0FFFFFFFFh
		lea	edx, [eax+edx*4+14h]
		lea	eax, [ebp+var_1C]
		mov	[ebp+var_8C], edx
		mov	[esp+4], eax
		call	ds:_ZN9QListData11detach_growEPii
		mov	edi, [ebp+arg_0]
		mov	[ebp+var_80], eax
		mov	eax, [edi]
		mov	ecx, [eax+8]
		lea	ebx, [eax+ecx*4+10h]
		lea	edx, [ebx+4]
		mov	[ebp+var_84], edx
		mov	edx, [ebp+var_1C]
		mov	edi, [ebp+var_84]
		lea	esi, ds:0[edx*4]
		add	edi, esi
		cmp	[ebp+var_84], edi
		mov	[ebp+var_7C], edi
		jz	short loc_71044E1E
		mov	eax, [ebp+var_84]
		add	ebx, 8
		mov	edx, [ebp+var_8C]
		mov	[ebp+var_6C], ebx
		mov	[ebp+var_64], eax
		mov	[ebp+var_68], edx
		jmp	short loc_71044DD8
; ---------------------------------------------------------------------------
		align 10h

loc_71044DD0:				; CODE XREF: sub_71044D00+10Aj
		add	[ebp+var_68], 4
		add	[ebp+var_6C], 4

loc_71044DD8:				; CODE XREF: sub_71044D00+CAj
		mov	dword ptr [esp], 4 ; size_t
		mov	[ebp+var_58], 4
		call	sub_710517F0
		mov	ecx, [ebp+var_68]
		mov	edx, [ecx]
		mov	edx, [edx]
		test	edx, edx
		mov	[eax], edx
		jz	short loc_71044DFC
		add	dword ptr [edx+4], 1

loc_71044DFC:				; CODE XREF: sub_71044D00+F6j
		mov	edi, [ebp+var_64]
		mov	[edi], eax
		mov	eax, [ebp+var_6C]
		cmp	[ebp+var_7C], eax
		mov	[ebp+var_64], eax
		jnz	short loc_71044DD0
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+var_1C]
		mov	eax, [ecx]
		lea	esi, ds:0[edx*4]
		mov	ecx, [eax+8]

loc_71044E1E:				; CODE XREF: sub_71044D00+B0j
		mov	ebx, [eax+0Ch]
		lea	ebx, [eax+ebx*4+14h]
		lea	eax, [eax+ecx*4+14h]
		lea	eax, [eax+edx*4+4]
		cmp	ebx, eax
		mov	[ebp+var_78], ebx
		mov	[ebp+var_88], eax
		jz	short loc_71044E92
		mov	edx, [ebp+var_88]
		add	eax, 4
		add	esi, [ebp+var_8C]
		mov	[ebp+var_60], eax
		mov	[ebp+var_70], esi
		mov	[ebp+var_74], edx
		jmp	short loc_71044E5E
; ---------------------------------------------------------------------------

loc_71044E54:				; CODE XREF: sub_71044D00+190j
		add	[ebp+var_70], 4
		add	eax, 4
		mov	[ebp+var_60], eax

loc_71044E5E:				; CODE XREF: sub_71044D00+152j
		mov	dword ptr [esp], 4 ; size_t
		mov	[ebp+var_58], 2
		call	sub_710517F0
		mov	ecx, [ebp+var_70]
		mov	edx, [ecx]
		mov	edx, [edx]
		test	edx, edx
		mov	[eax], edx
		jz	short loc_71044E82
		add	dword ptr [edx+4], 1

loc_71044E82:				; CODE XREF: sub_71044D00+17Cj
		mov	edi, [ebp+var_74]
		mov	[edi], eax
		mov	eax, [ebp+var_60]
		cmp	[ebp+var_78], eax
		mov	[ebp+var_74], eax
		jnz	short loc_71044E54

loc_71044E92:				; CODE XREF: sub_71044D00+138j
		mov	edx, [ebp+var_80]
		lock dec dword ptr [edx]
		setnz	al
		test	al, al
		jz	short loc_71044EF7

loc_71044E9F:				; CODE XREF: sub_71044D00+20Dj
		mov	edi, [ebp+arg_0]
		mov	eax, [edi]
		mov	edx, [eax+8]
		mov	dword ptr [esp], 4 ; size_t
		mov	[ebp+var_58], 0Ah
		lea	eax, [eax+edx*4+14h]
		mov	edx, [ebp+var_1C]
		lea	edx, [eax+edx*4]
		mov	[ebp+var_90], edx
		call	sub_710517F0
		mov	ecx, [ebp+arg_4]
		mov	edx, [ecx]
		test	edx, edx
		mov	[eax], edx
		jz	short loc_71044ED9
		add	dword ptr [edx+4], 1

loc_71044ED9:				; CODE XREF: sub_71044D00+1D3j
		mov	edi, [ebp+var_90]
		mov	[edi], eax

loc_71044EE1:				; CODE XREF: sub_71044D00+253j
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 0BCh
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_71044EF7:				; CODE XREF: sub_71044D00+19Dj
		mov	ecx, [ebp+arg_0]
		mov	[esp+4], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_71044C90
		jmp	short loc_71044E9F
; ---------------------------------------------------------------------------
		align 10h

loc_71044F10:				; CODE XREF: sub_71044D00+3Fj
		mov	edi, [ebp+arg_0]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], edi
		call	ds:_ZN9QListData6appendEv
		mov	dword ptr [esp], 4 ; size_t
		mov	[ebp+var_58], 8
		mov	[ebp+var_94], eax
		call	sub_710517F0
		mov	ecx, [ebp+arg_4]
		mov	edx, [ecx]
		test	edx, edx
		mov	[eax], edx
		jz	short loc_71044F4B
		add	dword ptr [edx+4], 1

loc_71044F4B:				; CODE XREF: sub_71044D00+245j
		mov	edi, [ebp+var_94]
		mov	[edi], eax
		jmp	short loc_71044EE1
sub_71044D00	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71044F55	proc near		; DATA XREF: sub_71044D00+26o
		add	ebp, 18h
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-98h], edx
		jz	loc_7104519B
		cmp	eax, 2
		jz	loc_7104515F
		cmp	eax, 3
		jz	loc_71045102
		cmp	eax, 4
		jz	loc_710450E1
		cmp	eax, 5
		nop
		lea	esi, [esi+0]
		jz	loc_710450E1
		cmp	eax, 6
		jz	loc_710450C0
		cmp	eax, 7
		jz	loc_7104509D
		cmp	eax, 8
		nop
		lea	esi, [esi+0]
		jz	loc_710450C0
		cmp	eax, 9
		jz	loc_7104507A
		mov	dword ptr [ebp-58h], 0
		call	sub_71051FB0
		mov	ecx, [ebp-98h]
		mov	[esp+0], ecx
		call	sub_71051CE0
		mov	edi, [ebp+8]
		mov	edx, [edi]
		mov	eax, [edx+8]
		lea	eax, [edx+eax*4+14h]
		mov	[ebp-0ACh], eax
		mov	eax, [ebp-1Ch]
		mov	edx, [ebp-0ACh]
		lea	eax, [edx+eax*4]
		mov	[ebp-9Ch], eax

loc_71044FFD:				; CODE XREF: sub_71044F55+CDj
					; sub_71044F55+101j
		mov	eax, [ebp-9Ch]
		cmp	[ebp-0ACh], eax
		jz	short loc_71045058
		sub	dword ptr [ebp-9Ch], 4
		mov	ecx, [ebp-9Ch]
		mov	ecx, [ecx]
		test	ecx, ecx
		mov	[ebp-0A0h], ecx
		jz	short loc_71044FFD
		mov	edx, [ecx]
		test	edx, edx
		jz	short loc_71045048
		mov	eax, [edx+4]
		sub	eax, 1
		test	eax, eax
		mov	[edx+4], eax
		jnz	short loc_71045048
		mov	eax, [edx]
		mov	[esp+0], edx
		mov	eax, [eax+4]
		mov	dword ptr [ebp-58h], 5
		call	eax

loc_71045048:				; CODE XREF: sub_71044F55+D3j
					; sub_71044F55+E0j
		mov	edi, [ebp-0A0h]
		mov	[esp+0], edi
		call	sub_710517D0
		jmp	short loc_71044FFD
; ---------------------------------------------------------------------------

loc_71045058:				; CODE XREF: sub_71044F55+B4j
		mov	edx, [ebp+8]
		mov	eax, [edx]
		mov	dword ptr [ebp-58h], 5
		mov	[esp+0], eax
		call	ds:_Z5qFreePv
		mov	edi, [ebp-80h]
		mov	ecx, [ebp+8]
		mov	[ecx], edi
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_7104507A:				; CODE XREF: sub_71044F55+64j
		mov	eax, [ebp-98h]
		mov	[esp+0], eax
		call	sub_71051CE0
		mov	edx, [ebp+8]
		mov	eax, [edx]
		sub	dword ptr [eax+0Ch], 1
		mov	dword ptr [ebp-58h], 9
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_7104509D:				; CODE XREF: sub_71044F55+4Dj
		mov	eax, [ebp-98h]
		mov	[esp+0], eax
		call	sub_71051CE0
		mov	edx, [ebp+8]
		mov	eax, [edx]
		sub	dword ptr [eax+0Ch], 1
		mov	dword ptr [ebp-58h], 7
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_710450C0:				; CODE XREF: sub_71044F55+44j
					; sub_71044F55+5Bj
		mov	dword ptr [ebp-58h], 0
		call	sub_71051FB0
		mov	ecx, [ebp-98h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_710450E1:				; CODE XREF: sub_71044F55+2Dj
					; sub_71044F55+3Bj
		mov	dword ptr [ebp-58h], 0
		call	sub_71051FB0
		mov	eax, [ebp-98h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71045102:				; CODE XREF: sub_71044F55+24j
		mov	edi, [ebp-98h]
		mov	[esp+0], edi
		call	sub_71051CE0

loc_71045110:				; CODE XREF: sub_71044F55+1D7j
					; sub_71044F55+1FCj
		mov	edi, [ebp-64h]
		cmp	[ebp-84h], edi
		jz	short loc_71045153
		sub	dword ptr [ebp-64h], 4
		mov	eax, [ebp-64h]
		mov	eax, [eax]
		test	eax, eax
		mov	[ebp-0A8h], eax
		jz	short loc_71045110
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_71045143
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 3
		call	sub_7103C490

loc_71045143:				; CODE XREF: sub_71044F55+1DDj
		mov	ecx, [ebp-0A8h]
		mov	[esp+0], ecx
		call	sub_710517D0
		jmp	short loc_71045110
; ---------------------------------------------------------------------------

loc_71045153:				; CODE XREF: sub_71044F55+1C4j
		mov	dword ptr [ebp-58h], 3
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_7104515F:				; CODE XREF: sub_71044F55+1Bj
		mov	dword ptr [ebp-58h], 0
		call	sub_71051FB0
		mov	eax, [ebp-98h]
		mov	[esp+0], eax
		call	sub_71051CE0
		mov	edx, [ebp+8]
		mov	eax, [edx]
		mov	dword ptr [ebp-58h], 6
		mov	[esp+0], eax
		call	ds:_Z5qFreePv
		mov	edi, [ebp-80h]
		mov	ecx, [ebp+8]
		mov	[ecx], edi
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_7104519B:				; CODE XREF: sub_71044F55+12j
		mov	edx, [ebp-98h]
		mov	[esp+0], edx
		call	sub_71051CE0

loc_710451A9:				; CODE XREF: sub_71044F55+270j
					; sub_71044F55+295j
		mov	eax, [ebp-74h]
		cmp	[ebp-88h], eax
		jz	short loc_710451EC
		sub	dword ptr [ebp-74h], 4
		mov	ecx, [ebp-74h]
		mov	ecx, [ecx]
		test	ecx, ecx
		mov	[ebp-0A4h], ecx
		jz	short loc_710451A9
		mov	eax, [ecx]
		test	eax, eax
		jz	short loc_710451DC
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 1
		call	sub_7103C490

loc_710451DC:				; CODE XREF: sub_71044F55+276j
		mov	edi, [ebp-0A4h]
		mov	[esp+0], edi
		call	sub_710517D0
		jmp	short loc_710451A9
; ---------------------------------------------------------------------------

loc_710451EC:				; CODE XREF: sub_71044F55+25Dj
		mov	dword ptr [ebp-58h], 1
		call	sub_710524F0
sub_71044F55	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71045200	proc near		; CODE XREF: sub_71028A80+8Fp
					; sub_71028C88+A0p ...

var_2C		= dword	ptr -2Ch
arg_0		= dword	ptr  4

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	edx, [esp+2Ch+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_71045272
		mov	ebp, [edx]
		mov	edx, [ebp+0Ch]
		lea	eax, [ebp+14h]
		lea	ebx, [eax+edx*4]
		mov	edx, [ebp+8]
		lea	edi, [eax+edx*4]
		cmp	ebx, edi
		jz	short loc_71045260
		lea	esi, [esi+0]

loc_71045230:				; CODE XREF: sub_71045200+5Ej
		sub	ebx, 4
		mov	esi, [ebx]
		test	esi, esi
		jz	short loc_7104525C
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_71045254
		mov	edx, [eax+4]
		sub	edx, 1
		test	edx, edx
		mov	[eax+4], edx
		jnz	short loc_71045254
		mov	edx, [eax]
		mov	[esp+2Ch+var_2C], eax
		call	dword ptr [edx+4]

loc_71045254:				; CODE XREF: sub_71045200+3Dj
					; sub_71045200+4Aj
		mov	[esp+2Ch+var_2C], esi
		call	sub_710517D0

loc_7104525C:				; CODE XREF: sub_71045200+37j
		cmp	edi, ebx
		jnz	short loc_71045230

loc_71045260:				; CODE XREF: sub_71045200+2Aj
		mov	eax, ds:_Z5qFreePv
		mov	[esp+2Ch+arg_0], ebp
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	eax
; ---------------------------------------------------------------------------

loc_71045272:				; CODE XREF: sub_71045200+15j
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_71045200	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71045280	proc near		; CODE XREF: sub_71025D90+6Ej
					; sub_71025E20+1D2p ...

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_710536C8
		mov	[ebp+var_18], offset sub_71045390
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		mov	edx, [edx]
		mov	ecx, [edx+8]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_58], edx
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[ebp+var_5C], ecx
		mov	[esp], eax
		call	ds:_ZN9QListData6detachEi
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_50], eax
		mov	eax, [edx]
		mov	edx, [eax+0Ch]
		lea	edx, [eax+edx*4+14h]
		mov	[ebp+var_4C], edx
		mov	edx, [eax+8]
		lea	eax, [eax+edx*4+10h]
		lea	ecx, [eax+4]
		cmp	[ebp+var_4C], ecx
		mov	[ebp+var_54], ecx
		jz	short loc_71045360
		mov	ecx, [ebp+var_58]
		add	eax, 8
		mov	edx, [ebp+var_5C]
		mov	[ebp+var_40], eax
		lea	edx, [ecx+edx*4+14h]
		mov	ecx, [ebp+var_54]
		mov	[ebp+var_44], edx
		mov	[ebp+var_48], ecx
		jmp	short loc_71045320
; ---------------------------------------------------------------------------

loc_71045316:				; CODE XREF: sub_71045280+DEj
		add	[ebp+var_44], 4
		add	ecx, 4
		mov	[ebp+var_40], ecx

loc_71045320:				; CODE XREF: sub_71045280+94j
		mov	dword ptr [esp], 10h ; size_t
		mov	[ebp+var_38], 2
		call	sub_710517F0
		mov	ecx, [ebp+var_44]
		mov	edx, [ecx]
		mov	ecx, [edx]
		mov	[eax], ecx
		mov	ecx, [edx+4]
		mov	[eax+4], ecx
		mov	ecx, [edx+8]
		mov	[eax+8], ecx
		movzx	edx, word ptr [edx+0Ch]
		mov	[eax+0Ch], dx
		mov	edx, [ebp+var_48]
		mov	ecx, [ebp+var_40]
		cmp	[ebp+var_4C], ecx
		mov	[edx], eax
		mov	[ebp+var_48], ecx
		jnz	short loc_71045316

loc_71045360:				; CODE XREF: sub_71045280+79j
		mov	ecx, [ebp+var_50]
		lock dec dword ptr [ecx]
		setnz	al
		test	al, al
		jnz	short loc_71045383
		mov	eax, [ebp+arg_0]
		mov	[esp+4], ecx
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_71045430

loc_71045383:				; CODE XREF: sub_71045280+EBj
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71045280	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71045390	proc near		; DATA XREF: sub_71045280+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	edx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-60h], edx
		jz	short loc_710453DF
		cmp	eax, 2
		jz	short loc_71045405
		mov	dword ptr [ebp-38h], 0
		call	sub_71051FB0
		mov	ecx, [ebp-60h]
		mov	[esp+0], ecx
		call	sub_71051CE0
		mov	edx, [ebp+8]
		mov	eax, [edx]
		mov	dword ptr [ebp-38h], 3
		mov	[esp+0], eax
		call	ds:_Z5qFreePv
		mov	eax, [ebp-50h]
		mov	ecx, [ebp+8]
		mov	[ecx], eax
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_710453DF:				; CODE XREF: sub_71045390+Fj
		mov	eax, [ebp-60h]
		mov	[esp+0], eax
		call	sub_71051CE0

loc_710453EA:				; CODE XREF: sub_71045390+73j
		mov	ecx, [ebp-48h]
		cmp	[ebp-54h], ecx
		jz	short loc_71045423
		sub	dword ptr [ebp-48h], 4
		mov	edx, [ebp-48h]
		mov	eax, [edx]
		mov	[esp+0], eax
		call	sub_710517D0
		jmp	short loc_710453EA
; ---------------------------------------------------------------------------

loc_71045405:				; CODE XREF: sub_71045390+14j
		mov	dword ptr [ebp-38h], 0
		call	sub_71051FB0
		mov	edx, [ebp-60h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71045423:				; CODE XREF: sub_71045390+60j
		mov	dword ptr [ebp-38h], 1
		call	sub_710524F0
sub_71045390	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71045430	proc near		; CODE XREF: sub_71019980+74Bp
					; sub_7101A5B4+18Bp ...

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		push	esi
		push	ebx
		sub	esp, 10h
		mov	edi, [esp+1Ch+arg_4]
		mov	edx, [edi+0Ch]
		lea	eax, [edi+14h]
		lea	ebx, [eax+edx*4]
		mov	edx, [edi+8]
		lea	esi, [eax+edx*4]
		cmp	ebx, esi
		jz	short loc_71045461
		lea	esi, [esi+0]

loc_71045450:				; CODE XREF: sub_71045430+2Fj
		sub	ebx, 4
		mov	eax, [ebx]
		mov	[esp+1Ch+var_1C], eax
		call	sub_710517D0
		cmp	esi, ebx
		jnz	short loc_71045450

loc_71045461:				; CODE XREF: sub_71045430+1Bj
		mov	eax, ds:_Z5qFreePv
		mov	[esp+1Ch+arg_0], edi
		add	esp, 10h
		pop	ebx
		pop	esi
		pop	edi
		jmp	eax
sub_71045430	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71045480	proc near		; CODE XREF: sub_71019980+36Ep
					; sub_71019980+383p ...

var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_1C		= dword	ptr -1Ch
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 0ACh
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_710525B0
		mov	[ebp+var_40], offset dword_71052EE4
		mov	[ebp+var_38], offset sub_7104570C
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	eax, [eax]
		cmp	eax, 1
		jz	loc_710456B8
		mov	[ebp+var_1C], 7FFFFFFFh
		mov	eax, [edx]
		mov	ecx, [ebp+arg_0]
		mov	edx, [eax+8]
		mov	[esp], ecx
		mov	dword ptr [esp+8], 1
		mov	[ebp+var_58], 0FFFFFFFFh
		lea	edx, [eax+edx*4+14h]
		lea	eax, [ebp+var_1C]
		mov	[ebp+var_8C], edx
		mov	[esp+4], eax
		call	ds:_ZN9QListData11detach_growEPii
		mov	edi, [ebp+arg_0]
		mov	[ebp+var_80], eax
		mov	eax, [edi]
		mov	ecx, [eax+8]
		lea	ebx, [eax+ecx*4+10h]
		lea	edx, [ebx+4]
		mov	[ebp+var_84], edx
		mov	edx, [ebp+var_1C]
		mov	edi, [ebp+var_84]
		lea	esi, ds:0[edx*4]
		add	edi, esi
		cmp	[ebp+var_84], edi
		mov	[ebp+var_7C], edi
		jz	short loc_710455AA
		mov	eax, [ebp+var_84]
		add	ebx, 8
		mov	edx, [ebp+var_8C]
		mov	[ebp+var_6C], ebx
		mov	[ebp+var_64], eax
		mov	[ebp+var_68], edx
		jmp	short loc_71045558
; ---------------------------------------------------------------------------
		align 10h

loc_71045550:				; CODE XREF: sub_71045480+116j
		add	[ebp+var_68], 4
		add	[ebp+var_6C], 4

loc_71045558:				; CODE XREF: sub_71045480+CAj
		mov	dword ptr [esp], 10h ; size_t
		mov	[ebp+var_58], 4
		call	sub_710517F0
		mov	ecx, [ebp+var_68]
		mov	edx, [ecx]
		mov	ecx, [edx]
		mov	[eax], ecx
		mov	ecx, [edx+4]
		mov	[eax+4], ecx
		mov	ecx, [edx+8]
		mov	[eax+8], ecx
		movzx	edx, word ptr [edx+0Ch]
		mov	[eax+0Ch], dx
		mov	edi, [ebp+var_64]
		mov	[edi], eax
		mov	eax, [ebp+var_6C]
		cmp	[ebp+var_7C], eax
		mov	[ebp+var_64], eax
		jnz	short loc_71045550
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+var_1C]
		mov	eax, [ecx]
		lea	esi, ds:0[edx*4]
		mov	ecx, [eax+8]

loc_710455AA:				; CODE XREF: sub_71045480+B0j
		mov	ebx, [eax+0Ch]
		lea	ebx, [eax+ebx*4+14h]
		lea	eax, [eax+ecx*4+14h]
		lea	eax, [eax+edx*4+4]
		cmp	ebx, eax
		mov	[ebp+var_78], ebx
		mov	[ebp+var_88], eax
		jz	short loc_7104562C
		mov	edx, [ebp+var_88]
		add	eax, 4
		add	esi, [ebp+var_8C]
		mov	[ebp+var_60], eax
		mov	[ebp+var_70], esi
		mov	[ebp+var_74], edx
		jmp	short loc_710455EA
; ---------------------------------------------------------------------------

loc_710455E0:				; CODE XREF: sub_71045480+1AAj
		add	[ebp+var_70], 4
		add	eax, 4
		mov	[ebp+var_60], eax

loc_710455EA:				; CODE XREF: sub_71045480+15Ej
		mov	dword ptr [esp], 10h ; size_t
		mov	[ebp+var_58], 2
		call	sub_710517F0
		mov	ecx, [ebp+var_70]
		mov	edx, [ecx]
		mov	ecx, [edx]
		mov	[eax], ecx
		mov	ecx, [edx+4]
		mov	[eax+4], ecx
		mov	ecx, [edx+8]
		mov	[eax+8], ecx
		movzx	edx, word ptr [edx+0Ch]
		mov	[eax+0Ch], dx
		mov	edi, [ebp+var_74]
		mov	edx, [ebp+var_78]
		mov	[edi], eax
		mov	eax, [ebp+var_60]
		cmp	eax, edx
		mov	[ebp+var_74], eax
		jnz	short loc_710455E0

loc_7104562C:				; CODE XREF: sub_71045480+144j
		mov	edx, [ebp+var_80]
		lock dec dword ptr [edx]
		setnz	al
		test	al, al
		jz	short loc_710456A0

loc_71045639:				; CODE XREF: sub_71045480+236j
		mov	edi, [ebp+arg_0]
		mov	eax, [edi]
		mov	edx, [eax+8]
		mov	dword ptr [esp], 10h ; size_t
		mov	[ebp+var_58], 0Ah
		lea	eax, [eax+edx*4+14h]
		mov	edx, [ebp+var_1C]
		lea	edx, [eax+edx*4]
		mov	[ebp+var_90], edx
		call	sub_710517F0
		mov	ecx, [ebp+arg_4]
		mov	edx, [ecx]
		mov	[eax], edx
		mov	edx, [ecx+4]
		mov	[eax+4], edx
		mov	edx, [ecx+8]
		mov	[eax+8], edx
		movzx	edx, word ptr [ecx+0Ch]
		mov	[eax+0Ch], dx
		mov	edi, [ebp+var_90]
		mov	[edi], eax

loc_71045687:				; CODE XREF: sub_71045480+287j
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 0ACh
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_710456A0:				; CODE XREF: sub_71045480+1B7j
		mov	ecx, [ebp+arg_0]
		mov	[esp+4], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_71045430
		jmp	short loc_71045639
; ---------------------------------------------------------------------------

loc_710456B8:				; CODE XREF: sub_71045480+3Fj
		mov	edi, [ebp+arg_0]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], edi
		call	ds:_ZN9QListData6appendEv
		mov	dword ptr [esp], 10h ; size_t
		mov	[ebp+var_58], 8
		mov	[ebp+var_94], eax
		call	sub_710517F0
		mov	ecx, [ebp+arg_4]
		mov	edx, [ecx]
		mov	[eax], edx
		mov	edx, [ecx+4]
		mov	[eax+4], edx
		mov	edx, [ecx+8]
		mov	[eax+8], edx
		movzx	edx, word ptr [ecx+0Ch]
		mov	[eax+0Ch], dx
		mov	edi, [ebp+var_94]
		mov	[edi], eax
		jmp	loc_71045687
sub_71045480	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104570C	proc near		; DATA XREF: sub_71045480+26o
		add	ebp, 18h
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-98h], edx
		jz	loc_710457DE
		cmp	eax, 2
		jz	loc_710458EC
		cmp	eax, 3
		jz	loc_710458C0
		cmp	eax, 4
		jz	loc_7104589F
		cmp	eax, 5
		jz	loc_7104589F
		cmp	eax, 6
		nop
		lea	esi, [esi+0]
		jz	loc_7104587E
		cmp	eax, 7
		jz	loc_7104585B
		cmp	eax, 8
		jz	loc_7104587E
		cmp	eax, 9
		nop
		lea	esi, [esi+0]
		jz	loc_71045838
		mov	dword ptr [ebp-58h], 0
		lea	esi, [esi+0]
		call	sub_71051FB0
		mov	ecx, [ebp-98h]
		mov	[esp+0], ecx
		call	sub_71051CE0
		mov	edi, [ebp+8]
		mov	edx, [edi]
		mov	eax, [edx+8]
		lea	eax, [edx+eax*4+14h]
		mov	[ebp-0A0h], eax
		mov	eax, [ebp-1Ch]
		mov	edx, [ebp-0A0h]
		lea	eax, [edx+eax*4]
		mov	[ebp-9Ch], eax

loc_710457B7:				; CODE XREF: sub_7104570C+D0j
		mov	edi, [ebp-9Ch]
		cmp	[ebp-0A0h], edi
		jz	short loc_7104580A
		sub	dword ptr [ebp-9Ch], 4
		mov	ecx, [ebp-9Ch]
		mov	eax, [ecx]
		mov	[esp+0], eax
		call	sub_710517D0
		jmp	short loc_710457B7
; ---------------------------------------------------------------------------

loc_710457DE:				; CODE XREF: sub_7104570C+12j
		mov	ecx, [ebp-98h]
		mov	[esp+0], ecx
		call	sub_71051CE0

loc_710457EC:				; CODE XREF: sub_7104570C+FCj
		mov	eax, [ebp-74h]
		cmp	[ebp-88h], eax
		jz	short loc_7104582C
		sub	dword ptr [ebp-74h], 4
		mov	edi, [ebp-74h]
		mov	eax, [edi]
		mov	[esp+0], eax
		call	sub_710517D0
		jmp	short loc_710457EC
; ---------------------------------------------------------------------------

loc_7104580A:				; CODE XREF: sub_7104570C+B7j
		mov	edx, [ebp+8]
		mov	eax, [edx]
		mov	dword ptr [ebp-58h], 5
		mov	[esp+0], eax
		call	ds:_Z5qFreePv
		mov	edi, [ebp-80h]
		mov	ecx, [ebp+8]
		mov	[ecx], edi
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_7104582C:				; CODE XREF: sub_7104570C+E9j
		mov	dword ptr [ebp-58h], 1
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_71045838:				; CODE XREF: sub_7104570C+64j
		mov	eax, [ebp-98h]
		mov	[esp+0], eax
		call	sub_71051CE0
		mov	edx, [ebp+8]
		mov	eax, [edx]
		sub	dword ptr [eax+0Ch], 1
		mov	dword ptr [ebp-58h], 9
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_7104585B:				; CODE XREF: sub_7104570C+4Dj
		mov	eax, [ebp-98h]
		mov	[esp+0], eax
		call	sub_71051CE0
		mov	edx, [ebp+8]
		mov	eax, [edx]
		sub	dword ptr [eax+0Ch], 1
		mov	dword ptr [ebp-58h], 7
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_7104587E:				; CODE XREF: sub_7104570C+44j
					; sub_7104570C+56j
		mov	dword ptr [ebp-58h], 0
		call	sub_71051FB0
		mov	ecx, [ebp-98h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7104589F:				; CODE XREF: sub_7104570C+2Dj
					; sub_7104570C+36j
		mov	dword ptr [ebp-58h], 0
		call	sub_71051FB0
		mov	eax, [ebp-98h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_710458C0:				; CODE XREF: sub_7104570C+24j
		mov	edi, [ebp-98h]
		mov	[esp+0], edi
		call	sub_71051CE0

loc_710458CE:				; CODE XREF: sub_7104570C+1DEj
		mov	ecx, [ebp-64h]
		cmp	[ebp-84h], ecx
		jz	short loc_71045928
		sub	dword ptr [ebp-64h], 4
		mov	edx, [ebp-64h]
		mov	eax, [edx]
		mov	[esp+0], eax
		call	sub_710517D0
		jmp	short loc_710458CE
; ---------------------------------------------------------------------------

loc_710458EC:				; CODE XREF: sub_7104570C+1Bj
		mov	dword ptr [ebp-58h], 0
		call	sub_71051FB0
		mov	edi, [ebp-98h]
		mov	[esp+0], edi
		call	sub_71051CE0
		mov	edx, [ebp+8]
		mov	eax, [edx]
		mov	dword ptr [ebp-58h], 6
		mov	[esp+0], eax
		call	ds:_Z5qFreePv
		mov	edi, [ebp-80h]
		mov	ecx, [ebp+8]
		mov	[ecx], edi
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_71045928:				; CODE XREF: sub_7104570C+1CBj
		mov	dword ptr [ebp-58h], 3
		call	sub_710524F0
sub_7104570C	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71045940	proc near		; CODE XREF: sub_7102688B+32p
					; .text:710269BDp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_71045961
		mov	eax, [edx]
		mov	[esp+1Ch+var_1C], edx
		mov	[esp+1Ch+var_18], eax
		call	sub_71045430

loc_71045961:				; CODE XREF: sub_71045940+11j
		add	esp, 1Ch
		retn
sub_71045940	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71045970	proc near		; CODE XREF: sub_7100FC80+830p
					; sub_71013AD0+611p ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	ebx, [esp+3Ch+arg_0]
		mov	esi, [ebx]
		mov	eax, [esi+4]
		mov	edi, [esi+8]
		mov	[esp+3Ch+var_3C], ebx
		mov	[esp+3Ch+var_38], eax
		call	ds:_ZN9QListData6detachEi
		mov	[esp+3Ch+var_20], eax
		mov	edx, [ebx]
		mov	ecx, [edx+0Ch]
		lea	ebp, [edx+ecx*4+14h]
		mov	ecx, [edx+8]
		lea	edx, [edx+ecx*4+14h]
		cmp	ebp, edx
		jz	short loc_710459C8
		lea	esi, [esi+edi*4+14h]
		jmp	short loc_710459B3
; ---------------------------------------------------------------------------
		align 10h

loc_710459B0:				; CODE XREF: sub_71045970+56j
		add	esi, 4

loc_710459B3:				; CODE XREF: sub_71045970+3Cj
		test	edx, edx
		jz	short loc_710459C1
		mov	ecx, [esi]
		mov	[edx], ecx
		lock inc dword ptr [ecx]
		setnz	al

loc_710459C1:				; CODE XREF: sub_71045970+45j
		add	edx, 4
		cmp	ebp, edx
		jnz	short loc_710459B0

loc_710459C8:				; CODE XREF: sub_71045970+36j
		mov	eax, [esp+3Ch+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710459E2
		mov	[esp+3Ch+var_38], eax
		mov	[esp+3Ch+var_3C], ebx
		call	sub_710459F0

loc_710459E2:				; CODE XREF: sub_71045970+64j
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_71045970	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710459F0	proc near		; CODE XREF: sub_7100FC80+397p
					; sub_7100FC80+508p ...

var_2C		= dword	ptr -2Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	edi, [esp+2Ch+arg_4]
		mov	edx, [edi+0Ch]
		lea	eax, [edi+14h]
		lea	ebx, [eax+edx*4]
		mov	edx, [edi+8]
		lea	esi, [eax+edx*4]
		cmp	ebx, esi
		jz	short loc_71045A2E
		mov	ebp, ds:_ZN7QString4freeEPNS_4DataE

loc_71045A14:				; CODE XREF: sub_710459F0+3Cj
		sub	ebx, 4
		mov	eax, [ebx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71045A2A
		mov	eax, [ebx]
		mov	[esp+2Ch+var_2C], eax
		call	ebp ; _ZN7QString4freeEPNS_4DataE

loc_71045A2A:				; CODE XREF: sub_710459F0+31j
		cmp	esi, ebx
		jnz	short loc_71045A14

loc_71045A2E:				; CODE XREF: sub_710459F0+1Cj
		mov	eax, ds:_Z5qFreePv
		mov	[esp+2Ch+arg_0], edi
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	eax
sub_710459F0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71045A40	proc near		; CODE XREF: sub_71050E50+A4p
					; sub_710511B0+8Dp

var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 6Ch
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_710525B0
		mov	[ebp+var_40], offset dword_71052F08
		mov	[ebp+var_38], offset sub_71045BC0
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	eax, [eax]
		cmp	eax, 1
		jz	loc_71045B80
		mov	[ebp+var_20], 7FFFFFFFh
		mov	eax, [edx]
		mov	ecx, [ebp+arg_0]
		mov	edx, [eax+8]
		mov	[esp], ecx
		mov	dword ptr [esp+8], 1
		mov	[ebp+var_58], 0FFFFFFFFh
		lea	edx, [eax+edx*4+14h]
		lea	eax, [ebp+var_20]
		mov	[ebp+var_64], edx
		mov	[esp+4], eax
		call	ds:_ZN9QListData11detach_growEPii
		mov	ebx, [ebp+var_20]
		lea	edi, ds:0[ebx*4]
		mov	[ebp+var_60], eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		mov	esi, [ecx+8]
		lea	eax, [ecx+esi*4+14h]
		lea	edx, [eax+edi]
		cmp	eax, edx
		jz	short loc_71045B0A
		mov	ebx, [ebp+var_64]
		mov	edi, edx
		jmp	short loc_71045AE3
; ---------------------------------------------------------------------------
		align 10h

loc_71045AE0:				; CODE XREF: sub_71045A40+B6j
		add	ebx, 4

loc_71045AE3:				; CODE XREF: sub_71045A40+9Cj
		test	eax, eax
		jz	short loc_71045AF1
		mov	ecx, [ebx]
		mov	[eax], ecx
		lock inc dword ptr [ecx]
		setnz	dl

loc_71045AF1:				; CODE XREF: sub_71045A40+A5j
		add	eax, 4
		cmp	edi, eax
		jnz	short loc_71045AE0
		mov	eax, [ebp+arg_0]
		mov	ebx, [ebp+var_20]
		mov	ecx, [eax]
		lea	edi, ds:0[ebx*4]
		mov	esi, [ecx+8]

loc_71045B0A:				; CODE XREF: sub_71045A40+95j
		mov	eax, [ecx+0Ch]
		lea	edx, [ecx+esi*4+14h]
		lea	edx, [edx+ebx*4+4]
		lea	eax, [ecx+eax*4+14h]
		cmp	eax, edx
		jz	short loc_71045B3A
		add	edi, [ebp+var_64]
		jmp	short loc_71045B25
; ---------------------------------------------------------------------------

loc_71045B22:				; CODE XREF: sub_71045A40+F8j
		add	edi, 4

loc_71045B25:				; CODE XREF: sub_71045A40+E0j
		test	edx, edx
		jz	short loc_71045B33
		mov	ecx, [edi]
		mov	[edx], ecx
		lock inc dword ptr [ecx]
		setnz	bl

loc_71045B33:				; CODE XREF: sub_71045A40+E7j
		add	edx, 4
		cmp	eax, edx
		jnz	short loc_71045B22

loc_71045B3A:				; CODE XREF: sub_71045A40+DBj
		mov	edx, [ebp+var_60]
		lock dec dword ptr [edx]
		setnz	al
		test	al, al
		jz	short loc_71045BA8

loc_71045B47:				; CODE XREF: sub_71045A40+17Ej
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	edx, [eax+8]
		lea	eax, [eax+edx*4+14h]
		mov	edx, [ebp+var_20]
		lea	edx, [eax+edx*4]
		test	edx, edx
		jz	short loc_71045B6A
		mov	ecx, [ebp+arg_4]
		mov	eax, [ecx]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_71045B6A:				; CODE XREF: sub_71045A40+11Bj
					; sub_71045A40+166j
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 6Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71045B80:				; CODE XREF: sub_71045A40+3Cj
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	[ebp+var_1C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_58], 2
		mov	[esp], ecx
		call	ds:_ZN9QListData6appendEv
		mov	edx, [ebp+var_1C]
		mov	[eax], edx
		jmp	short loc_71045B6A
; ---------------------------------------------------------------------------

loc_71045BA8:				; CODE XREF: sub_71045A40+105j
		mov	ecx, [ebp+arg_0]
		mov	[esp+4], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_710459F0
		jmp	short loc_71045B47
sub_71045A40	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71045BC0	proc near		; DATA XREF: sub_71045A40+23o
		add	ebp, 18h
		mov	ecx, [ebp-54h]
		cmp	dword ptr [ebp-58h], 1
		mov	[ebp-68h], ecx
		jz	short loc_71045BED
		mov	dword ptr [ebp-58h], 0
		call	sub_71051FB0
		mov	eax, [ebp-68h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71045BED:				; CODE XREF: sub_71045BC0+Dj
		mov	eax, [ebp-68h]
		mov	[esp+0], eax
		call	sub_71051CE0
		lea	edx, [ebp-1Ch]
		mov	[esp+0], edx
		mov	dword ptr [ebp-58h], 1
		call	sub_710477B0
		call	sub_710524F0
sub_71045BC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71045C10	proc near		; CODE XREF: sub_71003F90+4B7p
					; sub_710483A0+13Ap ...

var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71052D00
		mov	[ebp+var_18], offset sub_71045D35
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		mov	edx, [edx]
		mov	ecx, [edx+8]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_5C], edx
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[ebp+var_60], ecx
		mov	[esp], eax
		call	ds:_ZN9QListData6detachEi
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_54], eax
		mov	eax, [edx]
		mov	edx, [eax+0Ch]
		lea	edx, [eax+edx*4+14h]
		mov	[ebp+var_50], edx
		mov	edx, [eax+8]
		lea	eax, [eax+edx*4+10h]
		lea	ecx, [eax+4]
		cmp	[ebp+var_50], ecx
		mov	[ebp+var_58], ecx
		jz	short loc_71045D05
		mov	ecx, [ebp+var_5C]
		add	eax, 8
		mov	edx, [ebp+var_60]
		mov	[ebp+var_48], eax
		lea	edx, [ecx+edx*4+14h]
		mov	ecx, [ebp+var_58]
		mov	[ebp+var_4C], edx
		mov	[ebp+var_44], ecx
		jmp	short loc_71045CAA
; ---------------------------------------------------------------------------

loc_71045CA6:				; CODE XREF: sub_71045C10+F3j
		add	[ebp+var_4C], 4

loc_71045CAA:				; CODE XREF: sub_71045C10+94j
		mov	dword ptr [esp], 10h ; size_t
		mov	[ebp+var_38], 3
		call	sub_710517F0
		mov	edx, [ebp+var_4C]
		mov	[ebp+var_40], eax
		mov	ecx, [ebp+var_40]
		mov	eax, [edx]
		mov	edx, [eax]
		mov	[ecx], edx
		mov	edx, [eax+4]
		add	eax, 8
		mov	[ecx+4], edx
		mov	[esp+4], eax
		mov	eax, ecx
		add	eax, 8
		mov	[esp], eax
		mov	[ebp+var_38], 2
		call	ds:_ZN11QTextFormatC2ERKS_
		mov	eax, [ebp+var_48]
		mov	edx, [ebp+var_44]
		mov	ecx, [ebp+var_40]
		add	[ebp+var_48], 4
		cmp	[ebp+var_50], eax
		mov	[ebp+var_44], eax
		mov	[edx], ecx
		jnz	short loc_71045CA6

loc_71045D05:				; CODE XREF: sub_71045C10+79j
		mov	ecx, [ebp+var_54]
		lock dec dword ptr [ecx]
		setnz	al
		test	al, al
		jnz	short loc_71045D28
		mov	eax, [ebp+arg_0]
		mov	[esp+4], ecx
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_71045E10

loc_71045D28:				; CODE XREF: sub_71045C10+100j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71045C10	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71045D35	proc near		; DATA XREF: sub_71045C10+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	ecx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-68h], ecx
		jz	short loc_71045D92
		cmp	eax, 2
		jz	short loc_71045D9D
		cmp	eax, 3
		jz	loc_71045DE2
		mov	dword ptr [ebp-38h], 0
		nop
		lea	esi, [esi+0]
		call	sub_71051FB0
		mov	eax, [ebp-68h]
		mov	[esp+0], eax
		call	sub_71051CE0
		mov	edx, [ebp+8]
		mov	eax, [edx]
		mov	dword ptr [ebp-38h], 4
		mov	[esp+0], eax
		call	ds:_Z5qFreePv
		mov	eax, [ebp-54h]
		mov	ecx, [ebp+8]
		mov	[ecx], eax
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_71045D92:				; CODE XREF: sub_71045D35+Fj
		mov	eax, [ebp-40h]
		mov	[esp+0], eax
		call	sub_710517D0

loc_71045D9D:				; CODE XREF: sub_71045D35+14j
		mov	edx, [ebp-68h]
		mov	[esp+0], edx
		call	sub_71051CE0

loc_71045DA8:				; CODE XREF: sub_71045D35+89j
					; sub_71045D35+ABj
		mov	edx, [ebp-44h]
		cmp	[ebp-58h], edx
		jz	short loc_71045E00
		sub	dword ptr [ebp-44h], 4
		mov	ecx, [ebp-44h]
		mov	ecx, [ecx]
		test	ecx, ecx
		mov	[ebp-64h], ecx
		jz	short loc_71045DA8
		mov	eax, ecx
		add	eax, 8
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 1
		call	ds:_ZN11QTextFormatD2Ev
		mov	eax, [ebp-64h]
		mov	[esp+0], eax
		call	sub_710517D0
		jmp	short loc_71045DA8
; ---------------------------------------------------------------------------

loc_71045DE2:				; CODE XREF: sub_71045D35+19j
		mov	dword ptr [ebp-38h], 0
		call	sub_71051FB0
		mov	edx, [ebp-68h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71045E00:				; CODE XREF: sub_71045D35+79j
		mov	dword ptr [ebp-38h], 1
		call	sub_710524F0
sub_71045D35	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71045E10	proc near		; CODE XREF: sub_71045C10+113p
					; sub_71045E80+28Fp ...

var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_20], eax
		mov	ecx, [esp+3Ch+var_20]
		add	eax, 14h
		mov	edx, [ecx+0Ch]
		lea	ebx, [eax+edx*4]
		mov	edx, [ecx+8]
		lea	edi, [eax+edx*4]
		cmp	ebx, edi
		jz	short loc_71045E5D
		mov	ebp, ds:_ZN11QTextFormatD2Ev
		lea	esi, [esi+0]

loc_71045E40:				; CODE XREF: sub_71045E10+4Bj
		sub	ebx, 4
		mov	esi, [ebx]
		test	esi, esi
		jz	short loc_71045E59
		lea	eax, [esi+8]
		mov	[esp+3Ch+var_3C], eax
		call	ebp ; _ZN11QTextFormatD2Ev
		mov	[esp+3Ch+var_3C], esi
		call	sub_710517D0

loc_71045E59:				; CODE XREF: sub_71045E10+37j
		cmp	edi, ebx
		jnz	short loc_71045E40

loc_71045E5D:				; CODE XREF: sub_71045E10+24j
		mov	eax, [esp+3Ch+var_20]
		mov	[esp+3Ch+arg_0], eax
		mov	eax, ds:_Z5qFreePv
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	eax
sub_71045E10	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71045E80	proc near		; CODE XREF: sub_71003F90+51Bp
					; sub_71003F90+ABEp

var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_1C		= dword	ptr -1Ch
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 0CCh
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_710525B0
		mov	[ebp+var_40], offset dword_71052D38
		mov	[ebp+var_38], offset sub_7104618F
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	eax, [eax]
		cmp	eax, 1
		jz	loc_71046119
		mov	[ebp+var_1C], 7FFFFFFFh
		mov	eax, [edx]
		mov	ecx, [ebp+arg_0]
		mov	edx, [eax+8]
		mov	[esp], ecx
		mov	dword ptr [esp+8], 1
		mov	[ebp+var_58], 0FFFFFFFFh
		lea	edx, [eax+edx*4+14h]
		lea	eax, [ebp+var_1C]
		mov	[ebp+var_98], edx
		mov	[esp+4], eax
		call	ds:_ZN9QListData11detach_growEPii
		mov	edi, [ebp+arg_0]
		mov	[ebp+var_8C], eax
		mov	eax, [edi]
		mov	ebx, [eax+8]
		lea	edx, [eax+ebx*4+10h]
		lea	ecx, [edx+4]
		mov	[ebp+var_94], ecx
		mov	ecx, [ebp+var_1C]
		mov	edi, [ebp+var_94]
		lea	esi, ds:0[ecx*4]
		add	edi, esi
		cmp	[ebp+var_94], edi
		mov	[ebp+var_84], edi
		jz	loc_71045FCF
		add	edx, 8
		mov	eax, [ebp+var_94]
		mov	[ebp+var_7C], edx
		mov	edx, [ebp+var_98]
		mov	[ebp+var_68], eax
		mov	[ebp+var_74], edx
		jmp	short loc_71045F5A
; ---------------------------------------------------------------------------

loc_71045F56:				; CODE XREF: sub_71045E80+13Bj
		add	[ebp+var_74], 4

loc_71045F5A:				; CODE XREF: sub_71045E80+D4j
		mov	dword ptr [esp], 10h ; size_t
		mov	[ebp+var_58], 8
		call	sub_710517F0
		mov	ecx, [ebp+var_74]
		mov	[ebp+var_64], eax
		mov	edi, [ebp+var_64]
		mov	eax, [ecx]
		mov	edx, [eax]
		mov	[edi], edx
		mov	edx, [eax+4]
		add	eax, 8
		mov	[edi+4], edx
		mov	[esp+4], eax
		mov	eax, edi
		add	eax, 8
		mov	[esp], eax
		mov	[ebp+var_58], 7
		call	ds:_ZN11QTextFormatC2ERKS_
		mov	edi, [ebp+var_7C]
		mov	edx, [ebp+var_68]
		mov	ecx, [ebp+var_64]
		mov	[ebp+var_68], edi
		mov	eax, [ebp+var_68]
		add	edi, 4
		cmp	[ebp+var_84], eax
		mov	[edx], ecx
		mov	[ebp+var_7C], edi
		jnz	short loc_71045F56
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_1C]
		mov	eax, [edx]
		lea	esi, ds:0[ecx*4]
		mov	ebx, [eax+8]

loc_71045FCF:				; CODE XREF: sub_71045E80+B6j
		mov	edx, [eax+0Ch]
		lea	edx, [eax+edx*4+14h]
		lea	eax, [eax+ebx*4+14h]
		lea	eax, [eax+ecx*4+4]
		cmp	edx, eax
		mov	[ebp+var_80], edx
		mov	[ebp+var_90], eax
		jz	short loc_71046064
		mov	ecx, [ebp+var_90]
		add	eax, 4
		add	esi, [ebp+var_98]
		mov	[ebp+var_70], eax
		mov	[ebp+var_78], esi
		mov	[ebp+var_6C], ecx
		jmp	short loc_71046009
; ---------------------------------------------------------------------------

loc_71046005:				; CODE XREF: sub_71045E80+1E2j
		add	[ebp+var_78], 4

loc_71046009:				; CODE XREF: sub_71045E80+183j
		mov	dword ptr [esp], 10h ; size_t
		mov	[ebp+var_58], 5
		call	sub_710517F0
		mov	edi, [ebp+var_78]
		mov	[ebp+var_60], eax
		mov	ecx, [ebp+var_60]
		mov	eax, [edi]
		mov	edx, [eax]
		mov	[ecx], edx
		mov	edx, [eax+4]
		add	eax, 8
		mov	[ecx+4], edx
		mov	[esp+4], eax
		mov	eax, ecx
		add	eax, 8
		mov	[esp], eax
		mov	[ebp+var_58], 4
		call	ds:_ZN11QTextFormatC2ERKS_
		mov	ecx, [ebp+var_70]
		mov	eax, [ebp+var_6C]
		mov	edx, [ebp+var_60]
		add	[ebp+var_70], 4
		cmp	[ebp+var_80], ecx
		mov	[ebp+var_6C], ecx
		mov	[eax], edx
		jnz	short loc_71046005

loc_71046064:				; CODE XREF: sub_71045E80+169j
		mov	edx, [ebp+var_8C]
		lock dec dword ptr [edx]
		setnz	al
		test	al, al
		jz	loc_710460FE

loc_71046078:				; CODE XREF: sub_71045E80+294j
		mov	edi, [ebp+arg_0]
		mov	eax, [edi]
		mov	edx, [eax+8]
		mov	dword ptr [esp], 10h ; size_t
		mov	[ebp+var_58], 0Eh
		lea	eax, [eax+edx*4+14h]
		mov	edx, [ebp+var_1C]
		lea	edx, [eax+edx*4]
		mov	[ebp+var_9C], edx
		call	sub_710517F0
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_88], eax
		mov	ecx, [ebp+var_88]
		mov	eax, [edx]
		mov	[ecx], eax
		mov	eax, [edx+4]
		mov	[ecx+4], eax
		mov	eax, edx
		add	eax, 8
		mov	[esp+4], eax
		mov	eax, ecx
		add	eax, 8
		mov	[esp], eax
		mov	[ebp+var_58], 2
		call	ds:_ZN11QTextFormatC2ERKS_
		mov	edx, [ebp+var_88]
		mov	eax, [ebp+var_9C]
		mov	[eax], edx

loc_710460E8:				; CODE XREF: sub_71045E80+30Aj
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 0CCh
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_710460FE:				; CODE XREF: sub_71045E80+1F2j
		mov	ecx, [ebp+arg_0]
		mov	[esp+4], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_71045E10
		jmp	loc_71046078
; ---------------------------------------------------------------------------

loc_71046119:				; CODE XREF: sub_71045E80+3Fj
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], edx
		call	ds:_ZN9QListData6appendEv
		mov	dword ptr [esp], 10h ; size_t
		mov	[ebp+var_58], 0Ch
		mov	[ebp+var_A4], eax
		call	sub_710517F0
		mov	ecx, [ebp+arg_4]
		mov	[ebp+var_A0], eax
		mov	edi, [ebp+var_A0]
		mov	eax, [ecx]
		mov	[edi], eax
		mov	eax, [ecx+4]
		mov	[edi+4], eax
		mov	eax, ecx
		add	eax, 8
		mov	[esp+4], eax
		mov	eax, edi
		add	eax, 8
		mov	[esp], eax
		mov	[ebp+var_58], 1
		call	ds:_ZN11QTextFormatC2ERKS_
		mov	eax, [ebp+var_A0]
		mov	edi, [ebp+var_A4]
		mov	[edi], eax
		jmp	loc_710460E8
sub_71045E80	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104618F	proc near		; DATA XREF: sub_71045E80+26o
		add	ebp, 18h
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-0A8h], edx
		jz	loc_710463A3
		cmp	eax, 2
		jz	loc_710463D4
		cmp	eax, 3
		jz	loc_71046345
		cmp	eax, 4
		lea	esi, [esi+0]
		jz	loc_71046350
		cmp	eax, 5
		jz	loc_71046306
		cmp	eax, 6
		jz	loc_710462A4
		cmp	eax, 7
		nop
		lea	esi, [esi+0]
		jz	loc_710462AF
		cmp	eax, 8
		jz	loc_71046283
		cmp	eax, 9
		jz	short loc_71046262
		cmp	eax, 0Ah
		jz	short loc_71046241
		cmp	eax, 0Bh
		lea	esi, [esi+0]
		jz	short loc_7104621E
		cmp	eax, 0Ch
		jz	short loc_71046283
		cmp	eax, 0Dh
		jz	loc_710463B1
		mov	ecx, [ebp-0A0h]
		mov	[esp+0], ecx
		call	sub_710517D0

loc_7104621E:				; CODE XREF: sub_7104618F+71j
		mov	edx, [ebp-0A8h]
		mov	[esp+0], edx
		call	sub_71051CE0
		mov	ecx, [ebp+8]
		mov	eax, [ecx]
		sub	dword ptr [eax+0Ch], 1
		mov	dword ptr [ebp-58h], 0Bh
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_71046241:				; CODE XREF: sub_7104618F+68j
		mov	dword ptr [ebp-58h], 0
		call	sub_71051FB0
		mov	edi, [ebp-0A8h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], edi
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71046262:				; CODE XREF: sub_7104618F+63j
		mov	dword ptr [ebp-58h], 0
		call	sub_71051FB0
		mov	edx, [ebp-0A8h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71046283:				; CODE XREF: sub_7104618F+5Aj
					; sub_7104618F+76j
		mov	dword ptr [ebp-58h], 0
		call	sub_71051FB0
		mov	eax, [ebp-0A8h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_710462A4:				; CODE XREF: sub_7104618F+43j
		mov	eax, [ebp-64h]
		mov	[esp+0], eax
		call	sub_710517D0

loc_710462AF:				; CODE XREF: sub_7104618F+51j
		mov	ecx, [ebp-0A8h]
		mov	[esp+0], ecx
		call	sub_71051CE0

loc_710462BD:				; CODE XREF: sub_7104618F+14Aj
					; sub_7104618F+169j
		mov	eax, [ebp-68h]
		cmp	[ebp-94h], eax
		jz	short loc_710462FA
		sub	dword ptr [ebp-68h], 4
		mov	edi, [ebp-68h]
		mov	edi, [edi]
		test	edi, edi
		mov	[ebp-0B8h], edi
		jz	short loc_710462BD
		mov	eax, edi
		add	eax, 8
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 6
		call	ds:_ZN11QTextFormatD2Ev
		mov	[esp+0], edi
		call	sub_710517D0
		jmp	short loc_710462BD
; ---------------------------------------------------------------------------

loc_710462FA:				; CODE XREF: sub_7104618F+137j
		mov	dword ptr [ebp-58h], 6
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_71046306:				; CODE XREF: sub_7104618F+3Aj
		mov	dword ptr [ebp-58h], 0
		call	sub_71051FB0
		mov	edx, [ebp-0A8h]
		mov	[esp+0], edx
		call	sub_71051CE0
		mov	ecx, [ebp+8]
		mov	eax, [ecx]
		mov	dword ptr [ebp-58h], 0Ah
		mov	[esp+0], eax
		call	ds:_Z5qFreePv
		mov	eax, [ebp-8Ch]
		mov	edi, [ebp+8]
		mov	[edi], eax
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_71046345:				; CODE XREF: sub_7104618F+24j
		mov	edi, [ebp-60h]
		mov	[esp+0], edi
		call	sub_710517D0

loc_71046350:				; CODE XREF: sub_7104618F+31j
		mov	edi, [ebp-0A8h]
		mov	[esp+0], edi
		call	sub_71051CE0

loc_7104635E:				; CODE XREF: sub_7104618F+1EFj
					; sub_7104618F+212j
		mov	ecx, [ebp-6Ch]
		cmp	[ebp-90h], ecx
		jz	loc_7104645E
		sub	dword ptr [ebp-6Ch], 4
		mov	eax, [ebp-6Ch]
		mov	eax, [eax]
		test	eax, eax
		mov	[ebp-0B4h], eax
		jz	short loc_7104635E
		add	eax, 8
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 3
		call	ds:_ZN11QTextFormatD2Ev
		mov	edx, [ebp-0B4h]
		mov	[esp+0], edx
		call	sub_710517D0
		jmp	short loc_7104635E
; ---------------------------------------------------------------------------

loc_710463A3:				; CODE XREF: sub_7104618F+12j
		mov	edi, [ebp-88h]
		mov	[esp+0], edi
		call	sub_710517D0

loc_710463B1:				; CODE XREF: sub_7104618F+7Bj
		mov	ecx, [ebp-0A8h]
		mov	[esp+0], ecx
		call	sub_71051CE0
		mov	edi, [ebp+8]
		mov	eax, [edi]
		sub	dword ptr [eax+0Ch], 1
		mov	dword ptr [ebp-58h], 0Dh
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_710463D4:				; CODE XREF: sub_7104618F+1Bj
		mov	dword ptr [ebp-58h], 0
		call	sub_71051FB0
		mov	edi, [ebp-0A8h]
		mov	[esp+0], edi
		call	sub_71051CE0
		mov	eax, [ebp+8]
		mov	edx, [eax]
		mov	eax, [edx+8]
		lea	eax, [edx+eax*4+14h]
		mov	[ebp-0BCh], eax
		mov	eax, [ebp-1Ch]
		mov	edx, [ebp-0BCh]
		lea	eax, [edx+eax*4]
		mov	[ebp-0ACh], eax

loc_71046412:				; CODE XREF: sub_7104618F+2A8j
					; sub_7104618F+2CDj
		mov	eax, [ebp-0ACh]
		cmp	[ebp-0BCh], eax
		jz	short loc_7104646A
		sub	dword ptr [ebp-0ACh], 4
		mov	ecx, [ebp-0ACh]
		mov	ecx, [ecx]
		test	ecx, ecx
		mov	[ebp-0B0h], ecx
		jz	short loc_71046412
		mov	eax, ecx
		add	eax, 8
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 9
		call	ds:_ZN11QTextFormatD2Ev
		mov	edi, [ebp-0B0h]
		mov	[esp+0], edi
		call	sub_710517D0
		jmp	short loc_71046412
; ---------------------------------------------------------------------------

loc_7104645E:				; CODE XREF: sub_7104618F+1D8j
		mov	dword ptr [ebp-58h], 3
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_7104646A:				; CODE XREF: sub_7104618F+28Fj
		mov	edx, [ebp+8]
		mov	eax, [edx]
		mov	dword ptr [ebp-58h], 9
		mov	[esp+0], eax
		call	ds:_Z5qFreePv
		mov	edi, [ebp-8Ch]
		mov	ecx, [ebp+8]
		mov	[ecx], edi
		call	sub_710524F0
sub_7104618F	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71046490	proc near		; CODE XREF: sub_71003F90+2C3p
					; sub_71003F90+BB9p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_710464B1
		mov	eax, [edx]
		mov	[esp+1Ch+var_1C], edx
		mov	[esp+1Ch+var_18], eax
		call	sub_71045E10

loc_710464B1:				; CODE XREF: sub_71046490+11j
		add	esp, 1Ch
		retn
sub_71046490	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710464C0	proc near		; CODE XREF: _ZN16QGraphicsSvgItem19setMaximumCacheSizeERK5QSize+1CEp

var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_710539CC
		mov	[ebp+var_18], offset sub_710465DF
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		mov	edx, [edx]
		mov	ecx, [edx+8]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_5C], edx
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[ebp+var_60], ecx
		mov	[esp], eax
		call	ds:_ZN9QListData6detachEi
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_54], eax
		mov	eax, [edx]
		mov	edx, [eax+0Ch]
		lea	edx, [eax+edx*4+14h]
		mov	[ebp+var_50], edx
		mov	edx, [eax+8]
		lea	eax, [eax+edx*4+10h]
		lea	ecx, [eax+4]
		cmp	[ebp+var_50], ecx
		mov	[ebp+var_58], ecx
		jz	short loc_710465AF
		mov	ecx, [ebp+var_5C]
		add	eax, 8
		mov	edx, [ebp+var_60]
		mov	[ebp+var_48], eax
		lea	edx, [ecx+edx*4+14h]
		mov	ecx, [ebp+var_58]
		mov	[ebp+var_4C], edx
		mov	[ebp+var_44], ecx
		jmp	short loc_7104655A
; ---------------------------------------------------------------------------

loc_71046556:				; CODE XREF: sub_710464C0+EDj
		add	[ebp+var_4C], 4

loc_7104655A:				; CODE XREF: sub_710464C0+94j
		mov	dword ptr [esp], 18h ; size_t
		mov	[ebp+var_38], 3
		call	sub_710517F0
		mov	edx, [ebp+var_4C]
		mov	[ebp+var_40], eax
		mov	ecx, [ebp+var_40]
		mov	eax, [edx]
		mov	edx, [eax]
		add	eax, 8
		mov	[ecx], edx
		mov	[esp+4], eax
		mov	eax, ecx
		add	eax, 8
		mov	[esp], eax
		mov	[ebp+var_38], 2
		call	ds:_ZN8QVariantC1ERKS_
		mov	eax, [ebp+var_48]
		mov	edx, [ebp+var_44]
		mov	ecx, [ebp+var_40]
		add	[ebp+var_48], 4
		cmp	[ebp+var_50], eax
		mov	[ebp+var_44], eax
		mov	[edx], ecx
		jnz	short loc_71046556

loc_710465AF:				; CODE XREF: sub_710464C0+79j
		mov	ecx, [ebp+var_54]
		lock dec dword ptr [ecx]
		setnz	al
		test	al, al
		jnz	short loc_710465D2
		mov	eax, [ebp+arg_0]
		mov	[esp+4], ecx
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_710466C0

loc_710465D2:				; CODE XREF: sub_710464C0+FAj
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_710464C0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710465DF	proc near		; DATA XREF: sub_710464C0+20o
		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	ecx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-68h], ecx
		jz	short loc_71046637
		cmp	eax, 2
		jz	short loc_71046642
		cmp	eax, 3
		jz	loc_71046687
		mov	dword ptr [ebp-38h], 0
		call	sub_71051FB0
		mov	eax, [ebp-68h]
		mov	[esp+0], eax
		call	sub_71051CE0
		mov	edx, [ebp+8]
		mov	eax, [edx]
		mov	dword ptr [ebp-38h], 4
		mov	[esp+0], eax
		call	ds:_Z5qFreePv
		mov	eax, [ebp-54h]
		mov	ecx, [ebp+8]
		mov	[ecx], eax
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_71046637:				; CODE XREF: sub_710465DF+Fj
		mov	eax, [ebp-40h]
		mov	[esp+0], eax
		call	sub_710517D0

loc_71046642:				; CODE XREF: sub_710465DF+14j
		mov	edx, [ebp-68h]
		mov	[esp+0], edx
		call	sub_71051CE0

loc_7104664D:				; CODE XREF: sub_710465DF+84j
					; sub_710465DF+A6j
		mov	edx, [ebp-44h]
		cmp	[ebp-58h], edx
		jz	short loc_710466A5
		sub	dword ptr [ebp-44h], 4
		mov	ecx, [ebp-44h]
		mov	ecx, [ecx]
		test	ecx, ecx
		mov	[ebp-64h], ecx
		jz	short loc_7104664D
		mov	eax, ecx
		add	eax, 8
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 1
		call	ds:_ZN8QVariantD1Ev
		mov	eax, [ebp-64h]
		mov	[esp+0], eax
		call	sub_710517D0
		jmp	short loc_7104664D
; ---------------------------------------------------------------------------

loc_71046687:				; CODE XREF: sub_710465DF+19j
		mov	dword ptr [ebp-38h], 0
		call	sub_71051FB0
		mov	edx, [ebp-68h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_710466A5:				; CODE XREF: sub_710465DF+74j
		mov	dword ptr [ebp-38h], 1
		call	sub_710524F0
sub_710465DF	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710466C0	proc near		; CODE XREF: sub_71031655+AFp
					; sub_71031C3E+BEp ...

var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_20], eax
		mov	ecx, [esp+3Ch+var_20]
		add	eax, 14h
		mov	edx, [ecx+0Ch]
		lea	ebx, [eax+edx*4]
		mov	edx, [ecx+8]
		lea	edi, [eax+edx*4]
		cmp	ebx, edi
		jz	short loc_7104670D
		mov	ebp, ds:_ZN8QVariantD1Ev
		lea	esi, [esi+0]

loc_710466F0:				; CODE XREF: sub_710466C0+4Bj
		sub	ebx, 4
		mov	esi, [ebx]
		test	esi, esi
		jz	short loc_71046709
		lea	eax, [esi+8]
		mov	[esp+3Ch+var_3C], eax
		call	ebp ; _ZN8QVariantD1Ev
		mov	[esp+3Ch+var_3C], esi
		call	sub_710517D0

loc_71046709:				; CODE XREF: sub_710466C0+37j
		cmp	edi, ebx
		jnz	short loc_710466F0

loc_7104670D:				; CODE XREF: sub_710466C0+24j
		mov	eax, [esp+3Ch+var_20]
		mov	[esp+3Ch+arg_0], eax
		mov	eax, ds:_Z5qFreePv
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	eax
sub_710466C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71046730	proc near		; CODE XREF: _ZN16QGraphicsSvgItem19setMaximumCacheSizeERK5QSize+114p

var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_1C		= dword	ptr -1Ch
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 0CCh
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_710525B0
		mov	[ebp+var_40], offset dword_710539FC
		mov	[ebp+var_38], offset sub_71046A28
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	eax, [eax]
		cmp	eax, 1
		jz	loc_710469B8
		mov	[ebp+var_1C], 7FFFFFFFh
		mov	eax, [edx]
		mov	ecx, [ebp+arg_0]
		mov	edx, [eax+8]
		mov	[esp], ecx
		mov	dword ptr [esp+8], 1
		mov	[ebp+var_58], 0FFFFFFFFh
		lea	edx, [eax+edx*4+14h]
		lea	eax, [ebp+var_1C]
		mov	[ebp+var_98], edx
		mov	[esp+4], eax
		call	ds:_ZN9QListData11detach_growEPii
		mov	edi, [ebp+arg_0]
		mov	[ebp+var_88], eax
		mov	eax, [edi]
		mov	ebx, [eax+8]
		lea	edx, [eax+ebx*4+10h]
		lea	ecx, [edx+4]
		mov	[ebp+var_94], ecx
		mov	ecx, [ebp+var_1C]
		mov	edi, [ebp+var_94]
		lea	esi, ds:0[ecx*4]
		add	edi, esi
		cmp	[ebp+var_94], edi
		mov	[ebp+var_84], edi
		jz	loc_71046879
		add	edx, 8
		mov	eax, [ebp+var_94]
		mov	[ebp+var_7C], edx
		mov	edx, [ebp+var_98]
		mov	[ebp+var_60], eax
		mov	[ebp+var_74], edx
		jmp	short loc_7104680A
; ---------------------------------------------------------------------------

loc_71046806:				; CODE XREF: sub_71046730+135j
		add	[ebp+var_74], 4

loc_7104680A:				; CODE XREF: sub_71046730+D4j
		mov	dword ptr [esp], 18h ; size_t
		mov	[ebp+var_58], 8
		call	sub_710517F0
		mov	ecx, [ebp+var_74]
		mov	[ebp+var_68], eax
		mov	edi, [ebp+var_68]
		mov	eax, [ecx]
		mov	edx, [eax]
		add	eax, 8
		mov	[edi], edx
		mov	[esp+4], eax
		mov	eax, edi
		add	eax, 8
		mov	[esp], eax
		mov	[ebp+var_58], 7
		call	ds:_ZN8QVariantC1ERKS_
		mov	edi, [ebp+var_7C]
		mov	edx, [ebp+var_60]
		mov	ecx, [ebp+var_68]
		mov	[ebp+var_60], edi
		mov	eax, [ebp+var_60]
		add	edi, 4
		cmp	[ebp+var_84], eax
		mov	[edx], ecx
		mov	[ebp+var_7C], edi
		jnz	short loc_71046806
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_1C]
		mov	eax, [edx]
		lea	esi, ds:0[ecx*4]
		mov	ebx, [eax+8]

loc_71046879:				; CODE XREF: sub_71046730+B6j
		mov	edx, [eax+0Ch]
		lea	edx, [eax+edx*4+14h]
		lea	eax, [eax+ebx*4+14h]
		lea	eax, [eax+ecx*4+4]
		cmp	edx, eax
		mov	[ebp+var_80], edx
		mov	[ebp+var_90], eax
		jz	short loc_71046909
		mov	ecx, [ebp+var_90]
		add	eax, 4
		add	esi, [ebp+var_98]
		mov	[ebp+var_70], eax
		mov	[ebp+var_78], esi
		mov	[ebp+var_6C], ecx
		jmp	short loc_710468B4
; ---------------------------------------------------------------------------
		align 10h

loc_710468B0:				; CODE XREF: sub_71046730+1D7j
		add	[ebp+var_78], 4

loc_710468B4:				; CODE XREF: sub_71046730+17Dj
		mov	dword ptr [esp], 18h ; size_t
		mov	[ebp+var_58], 5
		call	sub_710517F0
		mov	edi, [ebp+var_78]
		mov	[ebp+var_64], eax
		mov	ecx, [ebp+var_64]
		mov	eax, [edi]
		mov	edx, [eax]
		add	eax, 8
		mov	[ecx], edx
		mov	[esp+4], eax
		mov	eax, ecx
		add	eax, 8
		mov	[esp], eax
		mov	[ebp+var_58], 4
		call	ds:_ZN8QVariantC1ERKS_
		mov	ecx, [ebp+var_70]
		mov	eax, [ebp+var_6C]
		mov	edx, [ebp+var_64]
		add	[ebp+var_70], 4
		cmp	[ebp+var_80], ecx
		mov	[ebp+var_6C], ecx
		mov	[eax], edx
		jnz	short loc_710468B0

loc_71046909:				; CODE XREF: sub_71046730+163j
		mov	edx, [ebp+var_88]
		lock dec dword ptr [edx]
		setnz	al
		test	al, al
		jz	loc_7104699D

loc_7104691D:				; CODE XREF: sub_71046730+283j
		mov	edi, [ebp+arg_0]
		mov	eax, [edi]
		mov	edx, [eax+8]
		mov	dword ptr [esp], 18h ; size_t
		mov	[ebp+var_58], 0Eh
		lea	edx, [eax+edx*4+14h]
		mov	eax, [ebp+var_1C]
		lea	eax, [edx+eax*4]
		mov	[ebp+var_9C], eax
		call	sub_710517F0
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_8C], eax
		mov	ecx, [ebp+var_8C]
		mov	eax, [edx]
		mov	[ecx], eax
		mov	eax, edx
		add	eax, 8
		mov	[esp+4], eax
		mov	eax, ecx
		add	eax, 8
		mov	[esp], eax
		mov	[ebp+var_58], 2
		call	ds:_ZN8QVariantC1ERKS_
		mov	edx, [ebp+var_8C]
		mov	eax, [ebp+var_9C]
		mov	[eax], edx

loc_71046987:				; CODE XREF: sub_71046730+2F3j
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 0CCh
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_7104699D:				; CODE XREF: sub_71046730+1E7j
		mov	ecx, [ebp+arg_0]
		mov	[esp+4], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], ecx
		call	sub_710466C0
		jmp	loc_7104691D
; ---------------------------------------------------------------------------

loc_710469B8:				; CODE XREF: sub_71046730+3Fj
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], edx
		call	ds:_ZN9QListData6appendEv
		mov	dword ptr [esp], 18h ; size_t
		mov	[ebp+var_58], 0Ch
		mov	[ebp+var_A4], eax
		call	sub_710517F0
		mov	ecx, [ebp+arg_4]
		mov	[ebp+var_A0], eax
		mov	edi, [ebp+var_A0]
		mov	eax, [ecx]
		mov	[edi], eax
		mov	eax, ecx
		add	eax, 8
		mov	[esp+4], eax
		mov	eax, edi
		add	eax, 8
		mov	[esp], eax
		mov	[ebp+var_58], 1
		call	ds:_ZN8QVariantC1ERKS_
		mov	eax, [ebp+var_A0]
		mov	edi, [ebp+var_A4]
		mov	[edi], eax
		jmp	loc_71046987
sub_71046730	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71046A28	proc near		; DATA XREF: sub_71046730+26o
		add	ebp, 18h
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-0A8h], edx
		jz	loc_71046C39
		cmp	eax, 2
		jz	loc_71046C6A
		cmp	eax, 3
		jz	loc_71046BDB
		cmp	eax, 4
		jz	loc_71046BE6
		cmp	eax, 5
		xchg	ax, ax
		jz	loc_71046B9C
		cmp	eax, 6
		jz	loc_71046B3A
		cmp	eax, 7
		jz	loc_71046B45
		cmp	eax, 8
		nop
		lea	esi, [esi+0]
		jz	loc_71046B19
		cmp	eax, 9
		jz	short loc_71046AF8
		cmp	eax, 0Ah
		xchg	ax, ax
		jz	short loc_71046AD7
		cmp	eax, 0Bh
		jz	short loc_71046AB4
		cmp	eax, 0Ch
		jz	short loc_71046B19
		cmp	eax, 0Dh
		nop
		jz	loc_71046C47
		mov	ecx, [ebp-0A0h]
		mov	[esp+0], ecx
		call	sub_710517D0

loc_71046AB4:				; CODE XREF: sub_71046A28+6Dj
		mov	edx, [ebp-0A8h]
		mov	[esp+0], edx
		call	sub_71051CE0
		mov	ecx, [ebp+8]
		mov	eax, [ecx]
		sub	dword ptr [eax+0Ch], 1
		mov	dword ptr [ebp-58h], 0Bh
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_71046AD7:				; CODE XREF: sub_71046A28+68j
		mov	dword ptr [ebp-58h], 0
		call	sub_71051FB0
		mov	edi, [ebp-0A8h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], edi
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71046AF8:				; CODE XREF: sub_71046A28+61j
		mov	dword ptr [ebp-58h], 0
		call	sub_71051FB0
		mov	edx, [ebp-0A8h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71046B19:				; CODE XREF: sub_71046A28+58j
					; sub_71046A28+72j
		mov	dword ptr [ebp-58h], 0
		call	sub_71051FB0
		mov	eax, [ebp-0A8h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71046B3A:				; CODE XREF: sub_71046A28+41j
		mov	eax, [ebp-68h]
		mov	[esp+0], eax
		call	sub_710517D0

loc_71046B45:				; CODE XREF: sub_71046A28+4Aj
		mov	ecx, [ebp-0A8h]
		mov	[esp+0], ecx
		call	sub_71051CE0

loc_71046B53:				; CODE XREF: sub_71046A28+147j
					; sub_71046A28+166j
		mov	eax, [ebp-60h]
		cmp	[ebp-94h], eax
		jz	short loc_71046B90
		sub	dword ptr [ebp-60h], 4
		mov	edi, [ebp-60h]
		mov	edi, [edi]
		test	edi, edi
		mov	[ebp-0B8h], edi
		jz	short loc_71046B53
		mov	eax, edi
		add	eax, 8
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 6
		call	ds:_ZN8QVariantD1Ev
		mov	[esp+0], edi
		call	sub_710517D0
		jmp	short loc_71046B53
; ---------------------------------------------------------------------------

loc_71046B90:				; CODE XREF: sub_71046A28+134j
		mov	dword ptr [ebp-58h], 6
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_71046B9C:				; CODE XREF: sub_71046A28+38j
		mov	dword ptr [ebp-58h], 0
		call	sub_71051FB0
		mov	edx, [ebp-0A8h]
		mov	[esp+0], edx
		call	sub_71051CE0
		mov	ecx, [ebp+8]
		mov	eax, [ecx]
		mov	dword ptr [ebp-58h], 0Ah
		mov	[esp+0], eax
		call	ds:_Z5qFreePv
		mov	eax, [ebp-88h]
		mov	edi, [ebp+8]
		mov	[edi], eax
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_71046BDB:				; CODE XREF: sub_71046A28+24j
		mov	edi, [ebp-64h]
		mov	[esp+0], edi
		call	sub_710517D0

loc_71046BE6:				; CODE XREF: sub_71046A28+2Dj
		mov	edi, [ebp-0A8h]
		mov	[esp+0], edi
		call	sub_71051CE0

loc_71046BF4:				; CODE XREF: sub_71046A28+1ECj
					; sub_71046A28+20Fj
		mov	ecx, [ebp-6Ch]
		cmp	[ebp-90h], ecx
		jz	loc_71046CF4
		sub	dword ptr [ebp-6Ch], 4
		mov	eax, [ebp-6Ch]
		mov	eax, [eax]
		test	eax, eax
		mov	[ebp-0B4h], eax
		jz	short loc_71046BF4
		add	eax, 8
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 3
		call	ds:_ZN8QVariantD1Ev
		mov	edx, [ebp-0B4h]
		mov	[esp+0], edx
		call	sub_710517D0
		jmp	short loc_71046BF4
; ---------------------------------------------------------------------------

loc_71046C39:				; CODE XREF: sub_71046A28+12j
		mov	edi, [ebp-8Ch]
		mov	[esp+0], edi
		call	sub_710517D0

loc_71046C47:				; CODE XREF: sub_71046A28+78j
		mov	ecx, [ebp-0A8h]
		mov	[esp+0], ecx
		call	sub_71051CE0
		mov	edi, [ebp+8]
		mov	eax, [edi]
		sub	dword ptr [eax+0Ch], 1
		mov	dword ptr [ebp-58h], 0Dh
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_71046C6A:				; CODE XREF: sub_71046A28+1Bj
		mov	dword ptr [ebp-58h], 0
		call	sub_71051FB0
		mov	edi, [ebp-0A8h]
		mov	[esp+0], edi
		call	sub_71051CE0
		mov	eax, [ebp+8]
		mov	edx, [eax]
		mov	eax, [edx+8]
		lea	eax, [edx+eax*4+14h]
		mov	[ebp-0BCh], eax
		mov	eax, [ebp-1Ch]
		mov	edx, [ebp-0BCh]
		lea	eax, [edx+eax*4]
		mov	[ebp-0ACh], eax

loc_71046CA8:				; CODE XREF: sub_71046A28+2A5j
					; sub_71046A28+2CAj
		mov	eax, [ebp-0ACh]
		cmp	[ebp-0BCh], eax
		jz	short loc_71046D00
		sub	dword ptr [ebp-0ACh], 4
		mov	ecx, [ebp-0ACh]
		mov	ecx, [ecx]
		test	ecx, ecx
		mov	[ebp-0B0h], ecx
		jz	short loc_71046CA8
		mov	eax, ecx
		add	eax, 8
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 9
		call	ds:_ZN8QVariantD1Ev
		mov	edi, [ebp-0B0h]
		mov	[esp+0], edi
		call	sub_710517D0
		jmp	short loc_71046CA8
; ---------------------------------------------------------------------------

loc_71046CF4:				; CODE XREF: sub_71046A28+1D5j
		mov	dword ptr [ebp-58h], 3
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_71046D00:				; CODE XREF: sub_71046A28+28Cj
		mov	edx, [ebp+8]
		mov	eax, [edx]
		mov	dword ptr [ebp-58h], 9
		mov	[esp+0], eax
		call	ds:_Z5qFreePv
		mov	edi, [ebp-88h]
		mov	ecx, [ebp+8]
		mov	[ecx], edi
		call	sub_710524F0
sub_71046A28	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71046D30	proc near		; CODE XREF: sub_710243A0+8Fp
					; sub_710244A3+2Dp ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	edx, [esp+0Ch+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jz	short loc_71046D47
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_71046D47:				; CODE XREF: sub_71046D30+11j
		mov	eax, [edx]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_Z5qFreePv
		add	esp, 0Ch
		jmp	eax
sub_71046D30	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71046D60	proc near		; CODE XREF: sub_710248C0+175p
					; sub_71024A80+38p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], esi
		mov	esi, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_C], ebx
		mov	[esp+1Ch+var_4], edi
		mov	eax, [esi]
		mov	edx, [eax+8]
		mov	[esp+1Ch+var_1C], esi
		lea	edi, [eax+edx*4+14h]
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_18], eax
		call	ds:_ZN9QListData6detachEi
		mov	ebx, eax
		mov	eax, [esi]
		mov	edx, [eax+8]
		mov	ecx, [eax+0Ch]
		lea	edx, [eax+edx*4+14h]
		cmp	edi, edx
		jz	short loc_71046DBD
		lea	eax, [eax+ecx*4+14h]
		sub	eax, edx
		cmp	eax, 3
		jle	short loc_71046DBD
		and	eax, 0FFFFFFFCh
		mov	[esp+1Ch+var_14], eax ;	size_t
		mov	[esp+1Ch+var_18], edi ;	void *
		mov	[esp+1Ch+var_1C], edx ;	void *
		call	memcpy

loc_71046DBD:				; CODE XREF: sub_71046D60+3Dj
					; sub_71046D60+48j
		lock dec dword ptr [ebx]
		setnz	al
		test	al, al
		jnz	short loc_71046DD0
		mov	[esp+1Ch+var_1C], ebx
		call	ds:_Z5qFreePv

loc_71046DD0:				; CODE XREF: sub_71046D60+65j
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_71046D60	endp


; =============== S U B	R O U T	I N E =======================================


sub_71046DE0	proc near		; CODE XREF: sub_7100CAD0+8Cp
					; sub_7100CAD0+15Dp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], esi
		mov	esi, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_C], ebx
		mov	[esp+1Ch+var_4], edi
		mov	eax, [esi]
		mov	edx, [eax+8]
		lea	edi, [eax+edx*4+14h]
		mov	eax, [eax+4]
		mov	[esp+1Ch+var_1C], esi
		mov	[esp+1Ch+var_18], eax
		call	ds:_ZN9QListData6detachEi
		mov	ebx, eax
		mov	eax, [esi]
		mov	edx, [eax+8]
		mov	ecx, [eax+0Ch]
		lea	edx, [eax+edx*4+14h]
		cmp	edi, edx
		jz	short loc_71046E29
		lea	eax, [eax+ecx*4+14h]
		sub	eax, edx
		cmp	eax, 3
		jg	short loc_71046E50

loc_71046E29:				; CODE XREF: sub_71046DE0+3Cj
					; sub_71046DE0+83j
		lock dec dword ptr [ebx]
		setnz	al
		test	al, al
		jnz	short loc_71046E3C
		mov	[esp+1Ch+var_1C], ebx
		call	ds:_Z5qFreePv

loc_71046E3C:				; CODE XREF: sub_71046DE0+51j
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71046E50:				; CODE XREF: sub_71046DE0+47j
		and	eax, 0FFFFFFFCh
		mov	[esp+1Ch+var_14], eax ;	size_t
		mov	[esp+1Ch+var_18], edi ;	void *
		mov	[esp+1Ch+var_1C], edx ;	void *
		call	memcpy
		jmp	short loc_71046E29
sub_71046DE0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71046E70	proc near		; CODE XREF: sub_71024E40+24p

var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_1C		= dword	ptr -1Ch
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 7Ch
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_710525B0
		mov	[ebp+var_40], offset dword_71053654
		mov	[ebp+var_38], offset sub_71046FD6
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	eax, [eax]
		cmp	eax, 1
		jz	loc_71046FB1
		mov	[ebp+var_1C], 7FFFFFFFh
		mov	eax, [edx]
		mov	ecx, [ebp+arg_0]
		mov	edx, [eax+8]
		mov	[esp], ecx
		mov	dword ptr [esp+8], 1
		mov	[ebp+var_58], 0FFFFFFFFh
		lea	edx, [eax+edx*4+14h]
		lea	eax, [ebp+var_1C]
		mov	[ebp+var_64], edx
		mov	[esp+4], eax
		call	ds:_ZN9QListData11detach_growEPii
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_60], eax
		mov	eax, [edx]
		mov	edx, [ebp+var_1C]
		mov	ecx, [eax+8]
		lea	ebx, ds:0[edx*4]
		lea	esi, [eax+ecx*4+14h]
		cmp	[ebp+var_64], esi
		jz	short loc_71046F0A
		cmp	ebx, 3
		jg	short loc_71046F87

loc_71046F0A:				; CODE XREF: sub_71046E70+93j
					; sub_71046E70+13Cj
		add	ebx, [ebp+var_64]
		lea	ecx, [eax+ecx*4+14h]
		mov	esi, [eax+0Ch]
		lea	edx, [ecx+edx*4+4]
		cmp	ebx, edx
		jz	short loc_71046F27
		lea	eax, [eax+esi*4+14h]
		sub	eax, edx
		cmp	eax, 3
		jg	short loc_71046F72

loc_71046F27:				; CODE XREF: sub_71046E70+AAj
					; sub_71046E70+115j
		mov	edx, [ebp+var_60]
		lock dec dword ptr [edx]
		setnz	al
		test	al, al
		jz	short loc_71046F60

loc_71046F34:				; CODE XREF: sub_71046E70+100j
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx]
		mov	edx, [eax+8]
		lea	eax, [eax+edx*4+14h]
		mov	edx, [ebp+arg_4]
		mov	ecx, [edx]
		mov	edx, [ebp+var_1C]
		mov	[eax+edx*4], ecx

loc_71046F4B:				; CODE XREF: sub_71046E70+161j
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 7Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71046F60:				; CODE XREF: sub_71046E70+C2j
		mov	[esp], edx
		mov	[ebp+var_58], 0FFFFFFFFh
		call	ds:_Z5qFreePv
		jmp	short loc_71046F34
; ---------------------------------------------------------------------------

loc_71046F72:				; CODE XREF: sub_71046E70+B5j
		and	eax, 0FFFFFFFCh
		mov	[esp+8], eax	; size_t
		mov	[esp+4], ebx	; void *
		mov	[esp], edx	; void *
		call	memcpy
		jmp	short loc_71046F27
; ---------------------------------------------------------------------------

loc_71046F87:				; CODE XREF: sub_71046E70+98j
		mov	ecx, [ebp+var_64]
		mov	[esp+8], ebx	; size_t
		mov	[esp], esi	; void *
		mov	[esp+4], ecx	; void *
		call	memcpy
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+var_1C]
		mov	eax, [ecx]
		lea	ebx, ds:0[edx*4]
		mov	ecx, [eax+8]
		jmp	loc_71046F0A
; ---------------------------------------------------------------------------

loc_71046FB1:				; CODE XREF: sub_71046E70+3Cj
		mov	ecx, [ebp+arg_4]
		mov	eax, [ebp+arg_0]
		mov	ecx, [ecx]
		mov	[esp], eax
		mov	[ebp+var_58], 2
		mov	[ebp+var_68], ecx
		call	ds:_ZN9QListData6appendEv
		mov	edx, [ebp+var_68]
		mov	[eax], edx
		jmp	loc_71046F4B
sub_71046E70	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71046FD6	proc near		; DATA XREF: sub_71046E70+23o
		add	ebp, 18h
		mov	eax, [ebp-54h]
		cmp	dword ptr [ebp-58h], 1
		mov	[ebp-6Ch], eax
		jz	short loc_71047003
		mov	dword ptr [ebp-58h], 0
		call	sub_71051FB0
		mov	edx, [ebp-6Ch]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71047003:				; CODE XREF: sub_71046FD6+Dj
		mov	ecx, [ebp-6Ch]
		mov	[esp+0], ecx
		call	sub_71051CE0
		mov	dword ptr [ebp-58h], 1
		call	sub_710524F0
sub_71046FD6	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71047020	proc near		; CODE XREF: sub_7100CAD0+2E2p
					; sub_7100CF5D+77p ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	edx, [esp+0Ch+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jz	short loc_71047037
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_71047037:				; CODE XREF: sub_71047020+11j
		mov	eax, [edx]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_Z5qFreePv
		add	esp, 0Ch
		jmp	eax
sub_71047020	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71047050	proc near		; DATA XREF: .rdata:7105DB6Co

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_7105DB68
		mov	[esp+1Ch+var_1C], ebx
		call	sub_710243A0
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_710517D0
sub_71047050	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71047080	proc near		; DATA XREF: .rdata:off_7105DB68o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105DB68
		add	esp, 0Ch
		jmp	sub_710243A0
sub_71047080	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710470A0	proc near		; CODE XREF: sub_71011C90+147Bp
					; sub_7101E100+A56p

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71052E54
		mov	[ebp+var_28], offset sub_7104714E
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 18h ; size_t
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_710517F0
		mov	[ebp+var_C], 2
		mov	[ebp+var_48], 1
		mov	[ebp+var_50], eax
		lea	eax, [ebp+var_C]
		mov	edx, [ebp+var_50]
		mov	[esp+8], eax
		mov	eax, [ebp+var_50]
		mov	[esp], edx
		add	eax, 8
		mov	[esp+4], eax
		call	ds:_ZN11QTextStreamC1EP7QString6QFlagsIN9QIODevice12OpenModeFlagEE
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	edx, [ebp+var_50]
		mov	[edx+8], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_50]
		mov	edx, [ebp+var_50]
		mov	dword ptr [eax+0Ch], 1
		mov	eax, [ebp+arg_4]
		mov	byte ptr [edx+14h], 1
		mov	byte ptr [edx+15h], 1
		mov	[edx+10h], eax
		mov	eax, [ebp+arg_0]
		mov	[eax], edx
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_710470A0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104714E	proc near		; DATA XREF: sub_710470A0+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	edx, [ebp-50h]
		mov	[ebp-54h], eax
		mov	[esp+0], edx
		call	sub_710517D0
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7104714E	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71047180	proc near		; CODE XREF: sub_71011C90+14D5p
					; sub_710138B7+1EAp ...

var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_1C		= dword	ptr -1Ch
var_18		= byte ptr -18h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_18]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_C], ebx
		mov	[ebp+var_8], esi
		mov	[ebp+var_4], edi
		mov	[ebp+var_44], offset sub_710525B0
		mov	[ebp+var_40], offset dword_71053020
		mov	[ebp+var_38], offset sub_71047303
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	edx, [eax+0Ch]
		sub	edx, 1
		test	edx, edx
		mov	[eax+0Ch], edx
		jnz	short loc_7104720C
		cmp	byte ptr [eax+15h], 0
		mov	[ebp+var_60], eax
		jnz	short loc_71047224

loc_710471D3:				; CODE XREF: sub_71047180+16Bj
		mov	esi, [ebp+var_60]
		test	esi, esi
		jz	short loc_7104720C

loc_710471DA:				; CODE XREF: sub_71047180+128j
		mov	edx, [ebp+var_60]
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_710472B3

loc_710471EE:				; CODE XREF: sub_71047180+149j
		mov	eax, [ebp+var_60]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QTextStreamD1Ev
		mov	edx, [ebp+var_60]
		mov	[esp], edx
		call	sub_710517D0

loc_7104720C:				; CODE XREF: sub_71047180+48j
					; sub_71047180+58j ...
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	ebx, [ebp+var_C]
		mov	esi, [ebp+var_8]
		mov	edi, [ebp+var_4]
		mov	esp, ebp
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_71047224:				; CODE XREF: sub_71047180+51j
		mov	edx, [ebp+var_60]
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_58], 3
		add	edx, 8
		mov	[esp+4], edx
		call	ds:_ZNK7QString11toLocal8BitEv
		mov	eax, [ebp+var_1C]
		sub	esp, 4
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_710472F0

loc_71047252:				; CODE XREF: sub_71047180+178j
		mov	eax, [eax+8]
		mov	[ebp+var_58], 2
		mov	[esp+4], eax
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		call	ds:_ZN10QByteArray7reallocEi
		mov	eax, [ebp+var_1C]
		mov	edx, [eax+0Ch]

loc_71047272:				; CODE XREF: sub_71047180+17Ej
		mov	[esp+4], edx
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	eax, [eax+10h]
		mov	[ebp+var_58], 2
		mov	[esp], eax
		call	ds:_Z17qt_message_output9QtMsgTypePKc
		mov	eax, [ebp+var_1C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_710472D0

loc_7104729B:				; CODE XREF: sub_71047303+82j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		mov	[ebp+var_60], eax
		mov	esi, [ebp+var_60]
		test	esi, esi
		jnz	loc_710471DA
		jmp	loc_7104720C
; ---------------------------------------------------------------------------

loc_710472B3:				; CODE XREF: sub_71047180+68j
		mov	edx, [ebp+var_60]
		mov	eax, [edx+8]
		mov	[ebp+var_58], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_710471EE
; ---------------------------------------------------------------------------
		align 10h

loc_710472D0:				; CODE XREF: sub_71047180+119j
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_58], 3
		mov	[esp], eax
		call	ds:_Z5qFreePv
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	[ebp+var_60], edx
		jmp	loc_710471D3
; ---------------------------------------------------------------------------

loc_710472F0:				; CODE XREF: sub_71047180+CCj
		mov	edx, [eax+0Ch]
		lea	ecx, [eax+10h]
		cmp	edx, ecx
		jnz	loc_71047252
		jmp	loc_71047272
sub_71047180	endp


; =============== S U B	R O U T	I N E =======================================


sub_71047303	proc near		; DATA XREF: sub_71047180+29o
		add	ebp, 18h
		mov	edx, [ebp-54h]
		mov	eax, [ebp-58h]
		mov	[ebp-64h], edx
		mov	edx, [ebp-50h]
		cmp	eax, 1
		mov	[ebp-68h], edx
		jz	short loc_71047344
		cmp	eax, 2
		jz	short loc_71047356
		mov	eax, [ebp-60h]
		mov	dword ptr [ebp-58h], 0
		mov	[esp+0], eax
		call	ds:_ZN11QTextStreamD1Ev
		mov	edx, [ebp-64h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71047344:				; CODE XREF: sub_71047303+15j
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_7103B6E0

loc_71047356:				; CODE XREF: sub_71047303+1Aj
		cmp	dword ptr [ebp-68h], 1
		jz	short loc_7104736E
		mov	eax, [ebp-64h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7104736E:				; CODE XREF: sub_71047303+57j
		mov	edx, [ebp-64h]
		mov	[esp+0], edx
		call	sub_71051CE0
		mov	dword ptr [ebp-58h], 0
		call	sub_71051FB0
		jmp	loc_7104729B
sub_71047303	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71047390	proc near		; CODE XREF: sub_71011C90+149Bp
					; sub_71011C90+14BDp

var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_24], esp
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71052F78
		mov	[ebp+var_28], offset sub_71047453
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_4]
		lea	edx, [ebp+var_C]
		mov	[esp], edx
		mov	dword ptr [esp+8], 0FFFFFFFFh
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	ds:_ZN7QString9fromAsciiEPKci
		mov	edx, [ebp+arg_0]
		lea	eax, [ebp+var_C]
		sub	esp, 4
		mov	[esp+4], eax
		mov	eax, [edx]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71047420
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_71047420:				; CODE XREF: sub_71047390+7Bj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		cmp	byte ptr [eax+14h], 0
		jz	short loc_71047443
		mov	dword ptr [esp+4], 20h
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	ds:_ZN11QTextStreamlsEc

loc_71047443:				; CODE XREF: sub_71047390+99j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn
sub_71047390	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71047453	proc near		; DATA XREF: sub_71047390+23o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-50h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_710477B0
		mov	edx, [ebp-50h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_71047453	endp


; =============== S U B	R O U T	I N E =======================================


sub_71047480	proc near		; CODE XREF: sub_71011C90+14ADp
					; sub_7101E100+A72p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 14h
		mov	esi, ds:_ZN11QTextStreamlsEc
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_18], 22h
		mov	eax, [ebx]
		mov	[esp+1Ch+var_1C], eax
		call	esi ; _ZN11QTextStreamlsEc
		mov	edx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_18], edx
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN11QTextStreamlsERK7QString
		mov	[esp+1Ch+var_18], 22h
		mov	[esp+1Ch+var_1C], eax
		call	esi ; _ZN11QTextStreamlsEc
		mov	eax, [ebx]
		cmp	byte ptr [eax+14h], 0
		jz	short loc_710474D1
		mov	[esp+1Ch+var_18], 20h
		mov	[esp+1Ch+var_1C], eax
		call	esi ; _ZN11QTextStreamlsEc

loc_710474D1:				; CODE XREF: sub_71047480+42j
		mov	eax, ebx
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
sub_71047480	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710474E0	proc near		; CODE XREF: sub_71014C2E+85p
					; .text:71015093p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_71047505
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_71047505
		mov	eax, [edx]
		mov	[esp+1Ch+var_1C], edx
		mov	[esp+1Ch+var_18], eax
		call	sub_71048BF0

loc_71047505:				; CODE XREF: sub_710474E0+Bj
					; sub_710474E0+15j
		add	esp, 1Ch
		retn
sub_710474E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71047510	proc near		; CODE XREF: sub_7101E100+BC5p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 14h
		mov	ebx, [esp+1Ch+arg_0]
		mov	ecx, [esp+1Ch+arg_4]
		mov	eax, [ebx]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_71047580
		mov	edx, [eax+8]

loc_71047529:				; CODE XREF: sub_71047510+76j
		add	edx, 1
		mov	esi, [ecx]
		mov	[esp+1Ch+var_18], edx
		mov	[esp+1Ch+var_10], 1
		mov	[esp+1Ch+var_14], 4
		mov	[esp+1Ch+var_1C], 14h
		call	ds:_ZN11QVectorData4growEiiib
		mov	[esp+1Ch+var_14], eax
		mov	eax, [ebx]
		mov	eax, [eax+8]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_71049630
		mov	eax, [ebx]
		mov	edx, [eax+8]
		mov	[eax+edx*4+10h], esi
		mov	eax, [ebx]
		add	dword ptr [eax+8], 1
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71047580:				; CODE XREF: sub_71047510+14j
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jge	short loc_71047529
		mov	ecx, [ecx]
		add	dword ptr [eax+8], 1
		mov	[eax+edx*4+10h], ecx
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
sub_71047510	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710475A0	proc near		; CODE XREF: sub_71014C2E+C4p
					; .text:710150D2p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_710475CA
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_710475CA
		mov	[esp+1Ch+var_18], 4
		mov	eax, [edx]
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_710475CA:				; CODE XREF: sub_710475A0+Bj
					; sub_710475A0+15j
		add	esp, 1Ch
		retn
sub_710475A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710475D0	proc near		; CODE XREF: sub_7101E100+2D1p
					; sub_7101E100+1111p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [ebx]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_710475F9
		mov	edx, [eax+4]
		mov	[esp+1Ch+var_14], edx
		mov	eax, [eax+8]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_7104E560
		mov	eax, [ebx]

loc_710475F9:				; CODE XREF: sub_710475D0+Fj
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_71047618
		mov	edx, [eax+4]
		mov	[esp+1Ch+var_14], edx
		mov	eax, [eax+8]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_7104E560
		mov	eax, [ebx]

loc_71047618:				; CODE XREF: sub_710475D0+2Ej
		mov	eax, [eax+8]
		lea	eax, ds:0Ch[eax*4]
		add	eax, [ebx]
		add	esp, 18h
		pop	ebx
		retn
sub_710475D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71047630	proc near		; CODE XREF: sub_7101E100+111p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 14h
		mov	ebx, [esp+1Ch+arg_0]
		mov	ecx, [esp+1Ch+arg_4]
		mov	eax, [ebx]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_710476A0
		mov	edx, [eax+8]

loc_71047649:				; CODE XREF: sub_71047630+76j
		add	edx, 1
		mov	esi, [ecx]
		mov	[esp+1Ch+var_18], edx
		mov	[esp+1Ch+var_10], 1
		mov	[esp+1Ch+var_14], 4
		mov	[esp+1Ch+var_1C], 14h
		call	ds:_ZN11QVectorData4growEiiib
		mov	[esp+1Ch+var_14], eax
		mov	eax, [ebx]
		mov	eax, [eax+8]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_7104E560
		mov	eax, [ebx]
		mov	edx, [eax+8]
		mov	[eax+edx*4+10h], esi
		mov	eax, [ebx]
		add	dword ptr [eax+8], 1
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_710476A0:				; CODE XREF: sub_71047630+14j
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jge	short loc_71047649
		mov	ecx, [ecx]
		add	dword ptr [eax+8], 1
		mov	[eax+edx*4+10h], ecx
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
sub_71047630	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710476C0	proc near		; CODE XREF: sub_71014C2E+AFp
					; .text:710150BDp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_710476EA
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_710476EA
		mov	[esp+1Ch+var_18], 4
		mov	eax, [edx]
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_710476EA:				; CODE XREF: sub_710476C0+Bj
					; sub_710476C0+15j
		add	esp, 1Ch
		retn
sub_710476C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710476F0	proc near		; CODE XREF: sub_7101D820+65Dp
					; sub_7101E100+19Fp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [ebx]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_71047719
		mov	edx, [eax+4]
		mov	[esp+1Ch+var_14], edx
		mov	eax, [eax+8]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_7104E6E0
		mov	eax, [ebx]

loc_71047719:				; CODE XREF: sub_710476F0+Fj
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_71047738
		mov	edx, [eax+4]
		mov	[esp+1Ch+var_14], edx
		mov	eax, [eax+8]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_7104E6E0
		mov	eax, [ebx]

loc_71047738:				; CODE XREF: sub_710476F0+2Ej
		mov	eax, [eax+8]
		lea	eax, ds:0Ch[eax*4]
		add	eax, [ebx]
		add	esp, 18h
		pop	ebx
		retn
sub_710476F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71047750	proc near		; CODE XREF: sub_71014C2E+EEp
					; .text:710150FCp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_7104777A
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_7104777A
		mov	[esp+1Ch+var_18], 4
		mov	eax, [edx]
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_7104777A:				; CODE XREF: sub_71047750+Bj
					; sub_71047750+15j
		add	esp, 1Ch
		retn
sub_71047750	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71047780	proc near		; CODE XREF: sub_71014C2E+70p
					; .text:7101507Ep ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_710477AA
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_710477AA
		mov	[esp+1Ch+var_18], 4
		mov	eax, [edx]
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_710477AA:				; CODE XREF: sub_71047780+Bj
					; sub_71047780+15j
		add	esp, 1Ch
		retn
sub_71047780	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710477B0	proc near		; CODE XREF: sub_71005587+FEp
					; sub_71005587+1DFp ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	edx, [esp+0Ch+arg_0]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jz	short loc_710477C7
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_710477C7:				; CODE XREF: sub_710477B0+11j
		mov	eax, [edx]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_ZN7QString4freeEPNS_4DataE
		add	esp, 0Ch
		jmp	eax
sub_710477B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710477E0	proc near		; DATA XREF: .rdata:7105DB8Co

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71052BE8
		mov	[ebp+var_18], offset sub_71047855
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105DB88
		sub	eax, 0FFFFFF80h
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_ZN12QPainterPathD1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_71023D40
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_710517D0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_710477E0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71047855	proc near		; DATA XREF: sub_710477E0+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		mov	[esp+0], eax
		call	sub_71023D40
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71047855	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71047890	proc near		; DATA XREF: .rdata:off_7105DB88o

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_71052BEE
		mov	[ebp+var_18], offset sub_710478FA
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105DB88
		sub	eax, 0FFFFFF80h
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_ZN12QPainterPathD1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_71023D40
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71047890	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710478FA	proc near		; DATA XREF: sub_71047890+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		mov	[esp+0], eax
		call	sub_71023D40
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_710478FA	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71047930	proc near		; DATA XREF: .rdata:7105DBACo

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_7105DBA8
		mov	[esp+1Ch+var_1C], ebx
		call	sub_71023D40
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_710517D0
sub_71047930	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71047960	proc near		; DATA XREF: .rdata:off_7105DBA8o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105DBA8
		add	esp, 0Ch
		jmp	sub_71023D40
sub_71047960	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71047980	proc near		; CODE XREF: sub_710159D0+1890p
					; sub_71017670+117p ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_7105313A
		mov	[ebp+var_18], offset sub_71047A5A
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		add	edx, 10h
		mov	[ebp+var_44], edx
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+8]
		lea	eax, [eax+eax*2]
		lea	eax, [edx+eax*8+10h]
		mov	[ebp+var_40], eax
		mov	eax, ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_4C], eax
		jmp	short loc_710479F9
; ---------------------------------------------------------------------------

loc_710479D2:				; CODE XREF: sub_71047980+98j
					; sub_71047980+B0j
		mov	edx, [ebp+var_40]
		mov	eax, [edx-18h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710479F5
		mov	edx, [ebp+var_40]
		mov	eax, [edx-18h]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	[ebp+var_4C]

loc_710479F5:				; CODE XREF: sub_71047980+60j
		sub	[ebp+var_40], 18h

loc_710479F9:				; CODE XREF: sub_71047980+50j
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+var_40]
		sub	eax, 18h
		cmp	[ebp+var_44], edx
		mov	[ebp+var_48], eax
		jz	short loc_71047A32
		mov	edx, [ebp+var_40]
		mov	eax, [edx-0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710479D2
		mov	edx, [ebp+var_40]
		mov	eax, [edx-0Ch]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_710479D2
; ---------------------------------------------------------------------------

loc_71047A32:				; CODE XREF: sub_71047980+88j
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71047980	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71047A5A	proc near		; DATA XREF: sub_71047980+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-50h], eax
		mov	[esp+0], edx
		call	sub_710477B0
		mov	eax, [ebp-50h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71047A5A	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71047A90	proc near		; CODE XREF: sub_71015150+3ACp

var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 74h
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_710525B0
		mov	[ebp+var_40], offset word_710532B2
		mov	[ebp+var_38], offset sub_71047C38
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_71047BC0

loc_71047AD0:				; CODE XREF: sub_71047A90+136j
		mov	ecx, [ebp+arg_4]
		mov	eax, [ecx]
		mov	[ebp+var_20], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ecx+4]
		mov	[ebp+var_1C], eax
		mov	eax, [ecx+8]
		mov	[ebp+var_18], eax
		mov	eax, [ecx+0Ch]
		mov	[ebp+var_14], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ecx+10h]
		mov	ebx, [ebp+arg_0]
		mov	[ebp+var_10], eax
		mov	eax, [ecx+14h]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 18h
		mov	[ebp+var_C], eax
		mov	eax, [ebx]
		mov	eax, [eax+8]
		mov	dword ptr [esp], 28h
		mov	[ebp+var_58], 2
		add	eax, 1
		mov	[esp+4], eax
		call	ds:_ZN11QVectorData4growEiiib
		mov	[esp+8], eax
		mov	eax, [ebx]
		mov	eax, [eax+8]
		mov	[esp], ebx
		mov	[esp+4], eax
		call	sub_71047C90
		mov	eax, [ebx]
		mov	edx, [ebp+var_20]
		mov	ecx, [eax+8]
		lea	ecx, [ecx+ecx*2]
		lea	eax, [eax+ecx*8]
		mov	[eax+10h], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+var_1C]
		mov	[eax+14h], edx
		mov	edx, [ebp+var_18]
		mov	[eax+18h], edx
		mov	edx, [ebp+var_14]
		mov	[eax+1Ch], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+var_10]
		mov	[eax+20h], edx
		mov	edx, [ebp+var_C]
		mov	[eax+24h], edx
		mov	eax, [ebp+var_14]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71047C06

loc_71047B92:				; CODE XREF: sub_71047A90+189j
		mov	eax, [ebp+var_20]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71047C20

loc_71047BA3:				; CODE XREF: sub_71047A90+174j
					; sub_71047A90+1A3j
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx]
		add	dword ptr [eax+8], 1
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 74h
		pop	ebx
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71047BC0:				; CODE XREF: sub_71047A90+3Aj
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jge	loc_71047AD0
		mov	ebx, [ebp+arg_4]
		lea	edx, [edx+edx*2]
		lea	eax, [eax+edx*8]
		mov	ecx, [ebx]
		mov	[eax+10h], ecx
		lock inc dword ptr [ecx]
		setnz	dl
		mov	edx, [ebx+4]
		mov	[eax+14h], edx
		mov	edx, [ebx+8]
		mov	[eax+18h], edx
		mov	edx, [ebx+0Ch]
		mov	[eax+1Ch], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebx+10h]
		mov	[eax+20h], edx
		mov	edx, [ebx+14h]
		mov	[eax+24h], edx
		jmp	short loc_71047BA3
; ---------------------------------------------------------------------------

loc_71047C06:				; CODE XREF: sub_71047A90+100j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_58], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71047B92
; ---------------------------------------------------------------------------
		align 10h

loc_71047C20:				; CODE XREF: sub_71047A90+10Dj
		mov	eax, [ebp+var_20]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	loc_71047BA3
sub_71047A90	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71047C38	proc near		; DATA XREF: sub_71047A90+21o
		add	ebp, 8
		mov	edx, [ebp-54h]
		cmp	dword ptr [ebp-58h], 1
		mov	[ebp-60h], edx
		jz	short loc_71047C6B
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_710477B0
		mov	ecx, [ebp-60h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71047C6B:				; CODE XREF: sub_71047C38+Dj
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_71041AB0
		mov	eax, [ebp-60h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71047C38	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71047C90	proc near		; CODE XREF: sub_71015150+705p
					; sub_71047A90+B5p

var_7C		= dword	ptr -7Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 8Ch
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71053184
		mov	[ebp+var_28], offset sub_71047F42
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	eax, [edx+8]
		cmp	eax, [ebp+arg_4]
		mov	[ebp+var_58], edx
		jle	short loc_71047CE0
		mov	edx, [edx]
		cmp	edx, 1
		jz	loc_71047EA0

loc_71047CE0:				; CODE XREF: sub_71047C90+43j
		mov	eax, [ebp+var_58]

loc_71047CE3:				; CODE XREF: sub_71047C90+266j
		mov	ecx, [ebp+arg_8]
		cmp	[eax+4], ecx
		jz	loc_71047E70

loc_71047CEF:				; CODE XREF: sub_71047C90+1E8j
		mov	ebx, [ebp+arg_8]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_48], 0FFFFFFFFh
		lea	eax, [ebx+ebx*2-3]
		lea	eax, ds:28h[eax*8]
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	ebx, eax
		mov	[ebp+var_64], eax
		mov	[ebp+var_5C], eax
		jz	loc_71047F27

loc_71047D25:				; CODE XREF: sub_71047C90+2ADj
		mov	ecx, [ebp+var_64]
		mov	dword ptr [ecx], 1
		mov	eax, [ebp+arg_8]
		mov	dword ptr [ecx+8], 0
		mov	[ecx+4], eax
		movzx	eax, byte ptr [ecx+0Ch]
		or	eax, 1
		mov	[ecx+0Ch], al
		mov	ecx, [ebp+arg_0]
		and	eax, 0FFFFFFFDh
		mov	edx, [ecx]
		movzx	edx, byte ptr [edx+0Ch]
		and	edx, 2
		or	eax, edx
		mov	edx, [ebp+var_64]
		mov	[edx+0Ch], al
		and	dword ptr [edx+0Ch], 3
		mov	ecx, [ebp+var_5C]
		mov	[ebp+var_58], ecx

loc_71047D66:				; CODE XREF: sub_71047C90+1EEj
		mov	edx, [ebp+var_58]
		mov	eax, [ebp+arg_0]
		mov	ecx, [edx+8]
		mov	esi, [eax]
		lea	eax, [ecx+ecx*2]
		mov	edx, ecx
		lea	eax, [ebx+eax*8+10h]
		mov	edi, [esi+8]
		mov	ebx, [ebp+arg_4]
		cmp	ebx, edi
		jle	short loc_71047D86
		mov	ebx, edi

loc_71047D86:				; CODE XREF: sub_71047C90+F2j
		cmp	ecx, ebx
		jge	short loc_71047DE0
		lea	edx, [edx+edx*2]
		lea	edx, [esi+edx*8+10h]
		mov	esi, [ebp+var_58]
		mov	[ebp+var_7C], ebx

loc_71047D97:				; CODE XREF: sub_71047C90+14Ej
		add	eax, 18h
		add	edx, 18h
		cmp	eax, 18h
		jz	short loc_71047DD2
		mov	ecx, [edx-18h]
		mov	[eax-18h], ecx
		lock inc dword ptr [ecx]
		setnz	bl
		mov	ecx, [edx-14h]
		mov	[eax-14h], ecx
		mov	ecx, [edx-10h]
		mov	[eax-10h], ecx
		mov	ecx, [edx-0Ch]
		mov	[eax-0Ch], ecx
		lock inc dword ptr [ecx]
		setnz	bl
		mov	ecx, [edx-8]
		mov	[eax-8], ecx
		mov	ecx, [edx-4]
		mov	[eax-4], ecx

loc_71047DD2:				; CODE XREF: sub_71047C90+110j
		mov	ecx, [esi+8]
		add	ecx, 1
		cmp	ecx, [ebp+var_7C]
		mov	[esi+8], ecx
		jl	short loc_71047D97

loc_71047DE0:				; CODE XREF: sub_71047C90+F8j
		cmp	ecx, [ebp+arg_4]
		jge	short loc_71047E34
		mov	ecx, ds:_ZN7QString11shared_nullE
		mov	esi, [ebp+var_58]
		mov	edi, [ebp+arg_4]
		mov	edx, ecx

loc_71047DF3:				; CODE XREF: sub_71047C90+1A2j
		test	eax, eax
		jz	short loc_71047E24
		mov	[eax], ecx
		lock inc dword ptr [edx]
		setnz	bl
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax+8], 0
		mov	[eax+0Ch], ecx
		lock inc dword ptr [edx]
		setnz	bl
		mov	dword ptr [eax+10h], 0
		mov	dword ptr [eax+14h], 0

loc_71047E24:				; CODE XREF: sub_71047C90+165j
		mov	ebx, [esi+8]
		add	eax, 18h
		add	ebx, 1
		cmp	ebx, edi
		mov	[esi+8], ebx
		jl	short loc_71047DF3

loc_71047E34:				; CODE XREF: sub_71047C90+153j
		mov	eax, [ebp+var_58]
		mov	edx, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		mov	[eax+8], edx
		mov	eax, [ecx]
		cmp	eax, [ebp+var_58]
		jz	short loc_71047E59
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71047E83

loc_71047E51:				; CODE XREF: sub_71047C90+208j
		mov	eax, [ebp+var_58]
		mov	ebx, [ebp+arg_0]
		mov	[ebx], eax

loc_71047E59:				; CODE XREF: sub_71047C90+1B5j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 8Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71047E70:				; CODE XREF: sub_71047C90+59j
		mov	eax, [eax]
		mov	ebx, [ebp+var_58]
		cmp	eax, 1
		jnz	loc_71047CEF
		jmp	loc_71047D66
; ---------------------------------------------------------------------------

loc_71047E83:				; CODE XREF: sub_71047C90+1BFj
		mov	eax, [ecx]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_71047980
		jmp	short loc_71047E51
; ---------------------------------------------------------------------------
		align 10h

loc_71047EA0:				; CODE XREF: sub_71047C90+4Aj
		mov	ebx, [ebp+arg_0]
		lea	eax, [eax+eax*2]
		lea	eax, ds:10h[eax*8]
		add	eax, [ebx]
		sub	eax, 18h
		mov	[ebp+var_54], eax
		mov	eax, ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_68], eax
		jmp	short loc_71047EFC
; ---------------------------------------------------------------------------
		align 10h

loc_71047EC0:				; CODE XREF: sub_71047C90+27Dj
					; sub_71047C90+295j
		mov	edx, [ebp+var_54]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71047EE1
		mov	ecx, [ebp+var_54]
		mov	eax, [ecx]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	[ebp+var_68]

loc_71047EE1:				; CODE XREF: sub_71047C90+23Dj
		mov	ebx, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	eax, [ebx]
		sub	dword ptr [eax+8], 1
		mov	eax, [ebx]
		sub	[ebp+var_54], 18h
		cmp	[eax+8], edx
		jle	loc_71047CE3

loc_71047EFC:				; CODE XREF: sub_71047C90+22Dj
		mov	edx, [ebp+var_54]
		mov	[ebp+var_60], edx
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71047EC0
		mov	ecx, [ebp+var_54]
		mov	eax, [ecx+0Ch]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_71047EC0
; ---------------------------------------------------------------------------

loc_71047F27:				; CODE XREF: sub_71047C90+8Fj
		mov	eax, ds:_Z9qBadAllocv
		mov	[ebp+var_50], eax
		call	eax ; _Z9qBadAllocv
		mov	edx, [ebp+var_64]
		mov	[ebp+var_5C], edx
		call	[ebp+var_50]
		mov	ebx, [ebp+var_64]
		jmp	loc_71047D25
sub_71047C90	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71047F42	proc near		; DATA XREF: sub_71047C90+26o
		add	ebp, 18h
		mov	ebx, [ebp-44h]
		mov	eax, [ebp-60h]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], eax
		call	sub_710477B0
		mov	[esp+0], ebx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_71047F42	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71047F70	proc near		; CODE XREF: sub_7101BB40+67Bp
					; sub_7101C1C5+B5p ...

var_2C		= dword	ptr -2Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	ebp, [esp+2Ch+arg_4]
		imul	eax, [ebp+8], 38h
		lea	esi, [ebp+10h]
		lea	ebx, [ebp+eax+10h]
		cmp	esi, ebx
		jz	short loc_71047FA2
		mov	edi, ds:_ZN19QXmlStreamAttributeD1Ev
		sub	ebx, 38h

loc_71047F93:				; CODE XREF: sub_71047F70+30j
		mov	[esp+2Ch+var_2C], ebx
		sub	ebx, 38h
		call	edi ; _ZN19QXmlStreamAttributeD1Ev
		lea	eax, [ebx+38h]
		cmp	esi, eax
		jnz	short loc_71047F93

loc_71047FA2:				; CODE XREF: sub_71047F70+18j
		mov	eax, ds:_ZN11QVectorData4freeEPS_i
		mov	[esp+2Ch+arg_0], ebp
		mov	[esp+2Ch+arg_4], 4
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	eax
sub_71047F70	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71047FC0	proc near		; CODE XREF: sub_7101C340+8BEp

var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 8Ch
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71052E8C
		mov	[ebp+var_28], offset sub_71048275
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	eax, [edx+8]
		cmp	eax, [ebp+arg_4]
		mov	[ebp+var_60], edx
		jle	short loc_71048010
		mov	edx, [edx]
		cmp	edx, 1
		jz	loc_710481BE

loc_71048010:				; CODE XREF: sub_71047FC0+43j
		mov	eax, [ebp+var_60]

loc_71048013:				; CODE XREF: sub_71047FC0+23Ej
		mov	edx, [eax+4]
		cmp	edx, [ebp+arg_8]
		jz	loc_71048191

loc_7104801F:				; CODE XREF: sub_71047FC0+1DCj
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	loc_71048203
		mov	eax, [ebp+arg_8]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_48], 0FFFFFFFFh
		sub	eax, 1
		imul	eax, 38h
		add	eax, 48h
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	[ebp+var_78], eax
		mov	[ebp+var_64], eax
		mov	[ebp+var_74], eax
		jz	loc_71048252

loc_7104805F:				; CODE XREF: sub_71047FC0+2A8j
		mov	ecx, [ebp+var_78]
		mov	ebx, [ebp+var_64]
		mov	dword ptr [ecx+8], 0
		mov	[ebp+var_60], ebx

loc_7104806F:				; CODE XREF: sub_71047FC0+28Dj
					; sub_71048275+CAj
		mov	ecx, [ebp+var_60]
		movzx	eax, byte ptr [ecx+0Ch]
		mov	dword ptr [ecx], 1
		mov	ebx, [ebp+arg_8]
		or	eax, 1
		mov	[ecx+0Ch], al
		mov	esi, [ebp+arg_0]
		and	eax, 0FFFFFFFDh
		mov	[ecx+4], ebx
		mov	edx, [esi]
		movzx	edx, byte ptr [edx+0Ch]
		and	edx, 2
		or	eax, edx
		mov	[ecx+0Ch], al
		and	dword ptr [ecx+0Ch], 3

loc_710480A0:				; CODE XREF: sub_71047FC0+1E2j
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_60]
		mov	esi, [ebp+var_74]
		mov	edx, [eax]
		mov	eax, [ecx+8]
		imul	ecx, eax, 38h
		mov	ebx, eax
		lea	ecx, [esi+ecx+10h]
		mov	esi, [ebp+arg_4]
		mov	[ebp+var_5C], ecx
		mov	ecx, [edx+8]
		mov	[ebp+var_6C], esi
		cmp	esi, ecx
		jle	short loc_710480CA
		mov	[ebp+var_6C], ecx

loc_710480CA:				; CODE XREF: sub_71047FC0+105j
		cmp	eax, [ebp+var_6C]
		jge	short loc_71048114
		imul	eax, ebx, 38h
		lea	eax, [edx+eax+10h]
		jmp	short loc_710480DB
; ---------------------------------------------------------------------------

loc_710480D8:				; CODE XREF: sub_71047FC0+152j
		mov	eax, [ebp+var_68]

loc_710480DB:				; CODE XREF: sub_71047FC0+116j
		mov	edi, [ebp+var_5C]
		lea	edx, [eax+38h]
		mov	[ebp+var_68], edx
		test	edi, edi
		jz	short loc_710480FF
		mov	ecx, [ebp+var_5C]
		mov	[esp+4], eax
		mov	[ebp+var_48], 3
		mov	[esp], ecx
		call	ds:_ZN19QXmlStreamAttributeC1ERKS_

loc_710480FF:				; CODE XREF: sub_71047FC0+126j
		mov	ebx, [ebp+var_60]
		add	[ebp+var_5C], 38h
		mov	eax, [ebx+8]
		add	eax, 1
		cmp	eax, [ebp+var_6C]
		mov	[ebx+8], eax
		jl	short loc_710480D8

loc_71048114:				; CODE XREF: sub_71047FC0+10Dj
		mov	edx, [ebp+arg_4]
		cmp	eax, edx
		jge	short loc_7104815A
		mov	esi, [ebp+var_5C]
		mov	[ebp+var_58], esi
		jmp	short loc_71048126
; ---------------------------------------------------------------------------

loc_71048123:				; CODE XREF: sub_71047FC0+198j
		mov	[ebp+arg_4], edx

loc_71048126:				; CODE XREF: sub_71047FC0+161j
		mov	esi, [ebp+var_58]
		mov	edx, [ebp+arg_4]
		test	esi, esi
		jz	short loc_71048146
		mov	eax, [ebp+var_58]
		mov	[ebp+var_48], 2
		mov	[esp], eax
		call	ds:_ZN19QXmlStreamAttributeC1Ev
		mov	edx, [ebp+arg_4]

loc_71048146:				; CODE XREF: sub_71047FC0+16Ej
		mov	ecx, [ebp+var_60]
		add	[ebp+var_58], 38h
		mov	eax, [ecx+8]
		add	eax, 1
		cmp	eax, edx
		mov	[ecx+8], eax
		jl	short loc_71048123

loc_7104815A:				; CODE XREF: sub_71047FC0+159j
		mov	ebx, [ebp+var_60]
		mov	esi, [ebp+arg_0]
		mov	[ebx+8], edx
		mov	eax, [esi]
		cmp	eax, ebx
		jz	short loc_7104817B
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_710481A7

loc_71048173:				; CODE XREF: sub_71047FC0+1FCj
		mov	edx, [ebp+var_60]
		mov	eax, [ebp+arg_0]
		mov	[eax], edx

loc_7104817B:				; CODE XREF: sub_71047FC0+1A7j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 8Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_71048191:				; CODE XREF: sub_71047FC0+59j
		mov	ecx, [eax]
		mov	ebx, [ebp+var_60]
		cmp	ecx, 1
		mov	[ebp+var_74], ebx
		jnz	loc_7104801F
		jmp	loc_710480A0
; ---------------------------------------------------------------------------

loc_710481A7:				; CODE XREF: sub_71047FC0+1B1j
		mov	eax, [esi]
		mov	[esp], esi
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_71047F70
		jmp	short loc_71048173
; ---------------------------------------------------------------------------

loc_710481BE:				; CODE XREF: sub_71047FC0+4Aj
		mov	ebx, [ebp+arg_0]
		imul	eax, 38h
		mov	esi, ds:_ZN19QXmlStreamAttributeD1Ev
		mov	ebx, [ebx]
		add	eax, 10h
		mov	[ebp+var_54], esi
		add	eax, ebx
		mov	[ebp+var_70], eax

loc_710481D7:				; CODE XREF: sub_71047FC0+23Cj
		sub	[ebp+var_70], 38h
		mov	eax, [ebp+var_70]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	[ebp+var_54]
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_4]
		mov	eax, [edx]
		sub	dword ptr [eax+8], 1
		mov	eax, [edx]
		cmp	[eax+8], ecx
		jg	short loc_710481D7
		jmp	loc_71048013
; ---------------------------------------------------------------------------

loc_71048203:				; CODE XREF: sub_71047FC0+64j
		sub	edx, 1
		imul	edx, 38h
		mov	dword ptr [esp+0Ch], 4
		mov	[esp], eax
		mov	[ebp+var_48], 5
		add	edx, 48h
		mov	[esp+8], edx
		mov	edx, [ebp+arg_8]
		sub	edx, 1
		imul	edx, 38h
		add	edx, 48h
		mov	[esp+4], edx
		call	ds:_ZN11QVectorData10reallocateEPS_iii
		test	eax, eax
		mov	[ebp+var_7C], eax
		jz	short loc_7104826D

loc_7104823F:				; CODE XREF: sub_71047FC0+2B3j
		mov	eax, [ebp+var_7C]
		mov	esi, [ebp+arg_0]
		mov	[esi], eax
		mov	[ebp+var_74], eax
		mov	[ebp+var_60], eax
		jmp	loc_7104806F
; ---------------------------------------------------------------------------

loc_71048252:				; CODE XREF: sub_71047FC0+99j
		mov	esi, ds:_Z9qBadAllocv
		call	esi ; _Z9qBadAllocv
		mov	eax, [ebp+var_78]
		mov	[ebp+var_64], eax
		call	esi ; _Z9qBadAllocv
		mov	edx, [ebp+var_78]
		mov	[ebp+var_74], edx
		jmp	loc_7104805F
; ---------------------------------------------------------------------------

loc_7104826D:				; CODE XREF: sub_71047FC0+27Dj
		call	ds:_Z9qBadAllocv
		jmp	short loc_7104823F
sub_71047FC0	endp


; =============== S U B	R O U T	I N E =======================================


sub_71048275	proc near		; DATA XREF: sub_71047FC0+26o

arg_0		= dword	ptr  4

		add	ebp, 18h
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-80h], edx
		mov	edx, [ebp-40h]
		jz	short loc_710482B7
		cmp	eax, 2
		jz	short loc_710482B7
		cmp	eax, 3
		jz	short loc_710482F7
		cmp	eax, 4
		jz	short loc_710482E0
		mov	dword ptr [ebp-48h], 0
		nop
		call	sub_71051FB0
		mov	ecx, [ebp-80h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_710482B7:				; CODE XREF: sub_71048275+12j
					; sub_71048275+17j
		mov	ebx, [ebp-80h]
		mov	[esp+0], ebx
		call	sub_71051CE0
		mov	esi, [ebp-74h]
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-48h], 1
		mov	[esp+arg_0], esi
		mov	[esp+0], eax
		call	sub_71047F70
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_710482E0:				; CODE XREF: sub_71048275+21j
		cmp	edx, 2
		jz	short loc_71048315
		mov	edx, [ebp-80h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_710482F7:				; CODE XREF: sub_71048275+1Cj
		mov	dword ptr [ebp-48h], 0
		call	sub_71051FB0
		mov	eax, [ebp-80h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71048315:				; CODE XREF: sub_71048275+6Ej
		mov	ecx, [ebp-80h]
		mov	[esp+0], ecx
		call	sub_71051CE0
		mov	ebx, [ebp+8]
		mov	esi, [ebp+10h]
		mov	eax, [ebx]
		cmp	[eax+4], esi
		jl	short loc_71048344
		mov	dword ptr [ebp-48h], 0
		call	sub_71051FB0
		mov	edx, [ebp-60h]
		mov	[ebp-74h], edx
		jmp	loc_7104806F
; ---------------------------------------------------------------------------

loc_71048344:				; CODE XREF: sub_71048275+B6j
		mov	dword ptr [ebp-48h], 4
		call	sub_710524F0
sub_71048275	endp


; =============== S U B	R O U T	I N E =======================================


sub_71048350	proc near		; CODE XREF: sub_71003F90+107Ap
					; sub_71005587+14Dp ...

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		push	esi
		push	ebx
		sub	esp, 10h
		mov	edi, [esp+1Ch+arg_4]
		mov	eax, [edi+8]
		lea	esi, [edi+10h]
		lea	ebx, [edi+eax*4+10h]
		cmp	esi, ebx
		jz	short loc_71048382
		sub	ebx, 4
		nop
		lea	esi, [esi+0]

loc_71048370:				; CODE XREF: sub_71048350+30j
		mov	[esp+1Ch+var_1C], ebx
		sub	ebx, 4
		call	sub_71046490
		lea	eax, [ebx+4]
		cmp	esi, eax
		jnz	short loc_71048370

loc_71048382:				; CODE XREF: sub_71048350+16j
		mov	eax, ds:_ZN11QVectorData4freeEPS_i
		mov	[esp+1Ch+arg_0], edi
		mov	[esp+1Ch+arg_4], 4
		add	esp, 10h
		pop	ebx
		pop	esi
		pop	edi
		jmp	eax
sub_71048350	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710483A0	proc near		; CODE XREF: sub_71003F90+2AEp
					; sub_71003F90+BA4p

var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_1C		= dword	ptr -1Ch
var_18		= byte ptr -18h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_18]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_C], ebx
		mov	[ebp+var_8], esi
		mov	[ebp+var_4], edi
		mov	[ebp+var_44], offset sub_710525B0
		mov	[ebp+var_40], offset dword_71052D2C
		mov	[ebp+var_38], offset sub_7104851E
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_710484A0

loc_710483E8:				; CODE XREF: sub_710483A0+106j
		mov	ebx, [ebp+arg_4]
		mov	eax, [ebx]
		mov	[ebp+var_1C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_1C]
		test	byte ptr [eax+10h], 1
		jz	loc_71048500

loc_71048403:				; CODE XREF: sub_710483A0+179j
		mov	esi, [ebp+arg_0]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 4
		mov	eax, [esi]
		mov	eax, [eax+8]
		mov	dword ptr [esp], 14h
		mov	[ebp+var_58], 3
		add	eax, 1
		mov	[esp+4], eax
		call	ds:_ZN11QVectorData4growEiiib
		mov	[esp+8], eax
		mov	eax, [esi]
		mov	eax, [eax+8]
		mov	[esp], esi
		mov	[esp+4], eax
		call	sub_71048570
		mov	eax, [esi]
		mov	edx, [ebp+var_1C]
		mov	ecx, [eax+8]
		add	ecx, 4
		mov	[eax+ecx*4], edx
		lea	edi, [eax+ecx*4]
		lock inc dword ptr [edx]
		setnz	bl
		mov	eax, [eax+ecx*4]
		test	byte ptr [eax+10h], 1
		jz	short loc_710484E1

loc_7104846B:				; CODE XREF: sub_710483A0+157j
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		mov	[ebp+var_58], 0FFFFFFFFh
		call	sub_71046490

loc_7104847D:				; CODE XREF: sub_710483A0+127j
					; sub_710483A0+13Fj
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx]
		add	dword ptr [eax+8], 1
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	ebx, [ebp+var_C]
		mov	esi, [ebp+var_8]
		mov	edi, [ebp+var_4]
		mov	esp, ebp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_710484A0:				; CODE XREF: sub_710483A0+42j
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jge	loc_710483E8
		mov	esi, [ebp+arg_4]
		lea	ecx, [edx+4]
		lea	edi, [eax+ecx*4]
		mov	edx, [esi]
		mov	[eax+ecx*4], edx
		lock inc dword ptr [edx]
		setnz	bl
		mov	eax, [eax+ecx*4]
		test	byte ptr [eax+10h], 1
		jnz	short loc_7104847D
		mov	eax, [eax+4]
		mov	[esp], edi
		mov	[ebp+var_58], 1
		mov	[esp+4], eax
		call	sub_71045C10
		jmp	short loc_7104847D
; ---------------------------------------------------------------------------

loc_710484E1:				; CODE XREF: sub_710483A0+C9j
		mov	eax, [eax+4]
		mov	[esp], edi
		mov	[ebp+var_58], 2
		mov	[esp+4], eax
		call	sub_71045C10
		jmp	loc_7104846B
; ---------------------------------------------------------------------------
		align 10h

loc_71048500:				; CODE XREF: sub_710483A0+5Dj
		mov	eax, [eax+4]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		call	sub_71045C10
		jmp	loc_71048403
sub_710483A0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104851E	proc near		; DATA XREF: sub_710483A0+29o
		add	ebp, 18h
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-60h], edx
		jz	short loc_71048543
		cmp	eax, 2
		jz	short loc_71048543
		mov	[esp+0], edx
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71048543:				; CODE XREF: sub_7104851E+Fj
					; sub_7104851E+14j
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_71046490
		mov	esi, [ebp-60h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], esi
		call	_Unwind_SjLj_Resume
sub_7104851E	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71048570	proc near		; CODE XREF: sub_71003F90+47Fp
					; sub_71003F90+4F8p ...

var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 7Ch
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71052D18
		mov	[ebp+var_28], offset sub_710487BD
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	eax, [edx+8]
		cmp	eax, [ebp+arg_4]
		mov	[ebp+var_5C], edx
		jle	short loc_710485BD
		mov	edx, [edx]
		cmp	edx, 1
		jz	loc_71048761

loc_710485BD:				; CODE XREF: sub_71048570+40j
		mov	eax, [ebp+var_5C]

loc_710485C0:				; CODE XREF: sub_71048570+22Bj
		mov	ebx, [ebp+arg_8]
		cmp	[eax+4], ebx
		jz	loc_71048734

loc_710485CC:				; CODE XREF: sub_71048570+1CFj
		mov	ecx, [ebp+arg_8]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_48], 0FFFFFFFFh
		lea	eax, ds:10h[ecx*4]
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	[ebp+var_6C], eax
		mov	[ebp+var_60], eax
		mov	[ebp+var_70], eax
		jz	loc_710487A0

loc_710485FF:				; CODE XREF: sub_71048570+248j
		mov	ecx, [ebp+var_6C]
		movzx	eax, byte ptr [ecx+0Ch]
		mov	dword ptr [ecx], 1
		mov	ebx, [ebp+arg_8]
		mov	dword ptr [ecx+8], 0
		or	eax, 1
		mov	[ecx+0Ch], al
		and	eax, 0FFFFFFFDh
		mov	[ecx+4], ebx
		mov	ecx, [ebp+arg_0]
		mov	ebx, [ebp+var_6C]
		mov	edx, [ecx]
		movzx	edx, byte ptr [edx+0Ch]
		and	edx, 2
		or	eax, edx
		mov	[ebx+0Ch], al
		and	dword ptr [ebx+0Ch], 3
		mov	eax, [ebp+var_60]
		mov	[ebp+var_5C], eax

loc_71048640:				; CODE XREF: sub_71048570+1D5j
		mov	ebx, [ebp+var_5C]
		mov	ecx, [ebp+arg_0]
		mov	eax, [ebx+8]
		mov	ebx, [ebp+var_70]
		mov	edx, [ecx]
		mov	ecx, eax
		lea	ebx, [ebx+eax*4+10h]
		mov	[ebp+var_54], ebx
		mov	ebx, [edx+8]
		mov	[ebp+var_64], ebx
		mov	ebx, [ebp+arg_4]
		cmp	[ebp+var_64], ebx
		jle	short loc_71048668
		mov	[ebp+var_64], ebx

loc_71048668:				; CODE XREF: sub_71048570+F3j
		cmp	eax, [ebp+var_64]
		jge	short loc_710486C7
		lea	ecx, [edx+ecx*4+10h]
		mov	[ebp+var_58], ecx
		jmp	short loc_7104868B
; ---------------------------------------------------------------------------

loc_71048676:				; CODE XREF: sub_71048570+124j
					; sub_71048570+13Dj ...
		mov	ebx, [ebp+var_5C]
		add	[ebp+var_54], 4
		mov	eax, [ebx+8]
		add	eax, 1
		cmp	[ebp+var_64], eax
		mov	[ebx+8], eax
		jle	short loc_710486C7

loc_7104868B:				; CODE XREF: sub_71048570+104j
		mov	edx, [ebp+var_54]
		add	[ebp+var_58], 4
		test	edx, edx
		jz	short loc_71048676
		mov	edx, [ebp+var_58]
		mov	ecx, [ebp+var_54]
		mov	eax, [edx-4]
		mov	[ecx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ecx]
		test	byte ptr [eax+10h], 1
		jnz	short loc_71048676
		mov	eax, [eax+4]
		mov	[esp], ecx
		mov	[ebp+var_48], 2
		mov	[esp+4], eax
		call	sub_71045C10
		jmp	short loc_71048676
; ---------------------------------------------------------------------------

loc_710486C7:				; CODE XREF: sub_71048570+FBj
					; sub_71048570+119j
		cmp	eax, [ebp+arg_4]
		jge	short loc_710486FC
		mov	ecx, ds:_ZN9QListData11shared_nullE
		mov	eax, [ebp+var_54]
		mov	esi, [ebp+var_5C]
		mov	edi, [ebp+arg_4]
		mov	edx, ecx
		lea	esi, [esi+0]

loc_710486E0:				; CODE XREF: sub_71048570+18Aj
		test	eax, eax
		jz	short loc_710486EC
		mov	[eax], ecx
		lock inc dword ptr [edx]
		setnz	bl

loc_710486EC:				; CODE XREF: sub_71048570+172j
		mov	ebx, [esi+8]
		add	eax, 4
		add	ebx, 1
		cmp	ebx, edi
		mov	[esi+8], ebx
		jl	short loc_710486E0

loc_710486FC:				; CODE XREF: sub_71048570+15Aj
		mov	eax, [ebp+var_5C]
		mov	edx, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		mov	[eax+8], edx
		mov	eax, [ecx]
		cmp	eax, [ebp+var_5C]
		jz	short loc_71048721
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7104874A

loc_71048719:				; CODE XREF: sub_71048570+1EFj
		mov	eax, [ebp+var_5C]
		mov	ebx, [ebp+arg_0]
		mov	[ebx], eax

loc_71048721:				; CODE XREF: sub_71048570+19Dj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 7Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_71048734:				; CODE XREF: sub_71048570+56j
		mov	eax, [eax]
		mov	edx, [ebp+var_5C]
		cmp	eax, 1
		mov	[ebp+var_70], edx
		jnz	loc_710485CC
		jmp	loc_71048640
; ---------------------------------------------------------------------------

loc_7104874A:				; CODE XREF: sub_71048570+1A7j
		mov	eax, [ecx]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_71048350
		jmp	short loc_71048719
; ---------------------------------------------------------------------------

loc_71048761:				; CODE XREF: sub_71048570+47j
		mov	ebx, [ebp+arg_0]
		lea	eax, ds:10h[eax*4]
		mov	ebx, [ebx]
		add	eax, ebx
		mov	[ebp+var_68], eax

loc_71048772:				; CODE XREF: sub_71048570+229j
		sub	[ebp+var_68], 4
		mov	eax, [ebp+var_68]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_71046490
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_4]
		mov	eax, [edx]
		sub	dword ptr [eax+8], 1
		mov	eax, [edx]
		cmp	[eax+8], ecx
		jg	short loc_71048772
		jmp	loc_710485C0
; ---------------------------------------------------------------------------

loc_710487A0:				; CODE XREF: sub_71048570+89j
		mov	ebx, ds:_Z9qBadAllocv
		call	ebx ; _Z9qBadAllocv
		mov	eax, [ebp+var_6C]
		mov	[ebp+var_60], eax
		xchg	ax, ax
		call	ebx ; _Z9qBadAllocv
		mov	edx, [ebp+var_6C]
		mov	[ebp+var_70], edx
		jmp	loc_710485FF
sub_71048570	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710487BD	proc near		; DATA XREF: sub_71048570+23o

arg_0		= dword	ptr  4

		add	ebp, 18h
		mov	ebx, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-74h], ebx
		jz	short loc_710487E7
		mov	dword ptr [ebp-48h], 0
		call	sub_71051FB0
		mov	[esp+0], ebx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_710487E7:				; CODE XREF: sub_710487BD+Dj
		mov	eax, [ebp-74h]
		mov	[esp+0], eax
		call	sub_71051CE0
		mov	edx, [ebp-70h]
		mov	ecx, [ebp+8]
		mov	dword ptr [ebp-48h], 1
		mov	[esp+arg_0], edx
		mov	[esp+0], ecx
		call	sub_71048350
		call	sub_710524F0
sub_710487BD	endp


; =============== S U B	R O U T	I N E =======================================


sub_71048810	proc near		; CODE XREF: sub_7101C340+854p
					; sub_7101C340+A02p ...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_4]
		mov	[esp+0Ch+arg_4], 8
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_ZN11QVectorData4freeEPS_i
		add	esp, 0Ch
		jmp	eax
sub_71048810	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71048830	proc near		; CODE XREF: sub_7103D670+841p
					; sub_7103D670+A6Cp ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= qword	ptr -3Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= word ptr -10h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 4Ch
		mov	[esp+4Ch+var_8], ebx
		mov	ebx, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_4], esi
		mov	edx, [esp+4Ch+arg_4]
		mov	eax, [ebx]
		mov	ecx, [eax]
		cmp	ecx, 1
		jz	loc_710488F0
		mov	ecx, [eax+8]

loc_71048853:				; CODE XREF: sub_71048830+C6j
		mov	eax, [edx+0Ch]
		add	ecx, 1
		fld	qword ptr [edx]
		mov	esi, [edx+8]
		mov	[esp+4Ch+var_18], eax
		mov	eax, [edx+10h]
		mov	[esp+4Ch+var_14], eax
		movzx	eax, word ptr [edx+14h]
		fstp	[esp+4Ch+var_3C]
		mov	[esp+4Ch+var_48], ecx
		mov	[esp+4Ch+var_40], 1
		mov	[esp+4Ch+var_44], 18h
		mov	[esp+4Ch+var_10], ax
		mov	[esp+4Ch+var_4C], 28h
		call	ds:_ZN11QVectorData4growEiiib
		mov	[esp+4Ch+var_44], eax
		mov	eax, [ebx]
		mov	eax, [eax+8]
		mov	[esp+4Ch+var_4C], ebx
		mov	[esp+4Ch+var_48], eax
		call	sub_71048940
		mov	eax, [ebx]
		mov	edx, [eax+8]
		fld	[esp+4Ch+var_3C]
		lea	edx, [edx+edx*2]
		lea	edx, [eax+edx*8]
		lea	eax, [edx+10h]
		fstp	qword ptr [edx+10h]
		mov	edx, [esp+4Ch+var_18]
		mov	[eax+8], esi
		mov	[eax+0Ch], edx
		mov	edx, [esp+4Ch+var_14]
		mov	[eax+10h], edx
		movzx	edx, [esp+4Ch+var_10]
		mov	[eax+14h], dx
		mov	eax, [ebx]
		add	dword ptr [eax+8], 1
		mov	ebx, [esp+4Ch+var_8]
		mov	esi, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_710488F0:				; CODE XREF: sub_71048830+1Aj
		mov	ecx, [eax+8]
		cmp	ecx, [eax+4]
		jge	loc_71048853
		lea	ecx, [ecx+ecx*2]
		fld	qword ptr [edx]
		lea	ebx, [eax+ecx*8]
		lea	ecx, [ebx+10h]
		fstp	qword ptr [ebx+10h]
		mov	ebx, [edx+8]
		mov	[ecx+8], ebx
		mov	ebx, [edx+0Ch]
		mov	[ecx+0Ch], ebx
		mov	ebx, [edx+10h]
		mov	[ecx+10h], ebx
		movzx	edx, word ptr [edx+14h]
		mov	[ecx+14h], dx
		add	dword ptr [eax+8], 1
		mov	ebx, [esp+4Ch+var_8]
		mov	esi, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
sub_71048830	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71048940	proc near		; CODE XREF: sub_7101C340+59Dp
					; sub_7101C340+95Bp ...

var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 6Ch
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71052E40
		mov	[ebp+var_28], offset sub_71048B5F
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	eax, [edx+8]
		cmp	eax, [ebp+arg_4]
		mov	[ebp+var_58], edx
		jle	short loc_7104898F
		mov	ecx, edx
		mov	edx, [edx]
		cmp	edx, 1
		jz	loc_71048B27

loc_7104898F:				; CODE XREF: sub_71048940+40j
		mov	edx, [ebp+var_58]

loc_71048992:				; CODE XREF: sub_71048940+1FFj
		mov	ebx, [ebp+arg_8]
		cmp	[edx+4], ebx
		jz	loc_71048AF7

loc_7104899E:				; CODE XREF: sub_71048940+1C2j
		mov	ecx, [ebp+arg_8]
		mov	dword ptr [esp+4], 8
		mov	[ebp+var_48], 0FFFFFFFFh
		lea	eax, [ecx+ecx*2-3]
		lea	eax, ds:28h[eax*8]
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	[ebp+var_60], eax
		mov	[ebp+var_5C], eax
		mov	[ebp+var_64], eax
		jz	loc_71048B44

loc_710489D5:				; CODE XREF: sub_71048940+21Aj
		mov	ecx, [ebp+var_60]
		movzx	eax, byte ptr [ecx+0Ch]
		mov	dword ptr [ecx], 1
		mov	ebx, [ebp+arg_8]
		mov	dword ptr [ecx+8], 0
		or	eax, 1
		mov	[ecx+0Ch], al
		and	eax, 0FFFFFFFDh
		mov	[ecx+4], ebx
		mov	ecx, [ebp+arg_0]
		mov	ebx, [ebp+var_60]
		mov	edx, [ecx]
		movzx	edx, byte ptr [edx+0Ch]
		and	edx, 2
		or	eax, edx
		mov	[ebx+0Ch], al
		and	dword ptr [ebx+0Ch], 3
		mov	eax, [ebp+var_5C]
		mov	[ebp+var_58], eax

loc_71048A16:				; CODE XREF: sub_71048940+1C8j
		mov	ebx, [ebp+var_58]
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebx+8]
		mov	esi, [edx]
		mov	ebx, [ebp+var_64]
		lea	eax, [ecx+ecx*2]
		mov	edx, ecx
		mov	edi, [esi+8]
		lea	eax, [ebx+eax*8+10h]
		mov	ebx, [ebp+arg_4]
		cmp	ebx, edi
		jle	short loc_71048A39
		mov	ebx, edi

loc_71048A39:				; CODE XREF: sub_71048940+F5j
		cmp	ecx, ebx
		jge	short loc_71048A7F
		lea	edx, [edx+edx*2]
		lea	edx, [esi+edx*8+10h]
		mov	esi, [ebp+var_58]

loc_71048A47:				; CODE XREF: sub_71048940+13Dj
		add	eax, 18h
		add	edx, 18h
		cmp	eax, 18h
		jz	short loc_71048A72
		mov	ecx, [edx-10h]
		fld	qword ptr [edx-18h]
		fstp	qword ptr [eax-18h]
		mov	[eax-10h], ecx
		mov	ecx, [edx-0Ch]
		mov	[eax-0Ch], ecx
		mov	ecx, [edx-8]
		mov	[eax-8], ecx
		movzx	ecx, word ptr [edx-4]
		mov	[eax-4], cx

loc_71048A72:				; CODE XREF: sub_71048940+110j
		mov	ecx, [esi+8]
		add	ecx, 1
		cmp	ecx, ebx
		mov	[esi+8], ecx
		jl	short loc_71048A47

loc_71048A7F:				; CODE XREF: sub_71048940+FBj
		cmp	ecx, [ebp+arg_4]
		jge	short loc_71048AC0
		mov	[ebp+var_54], eax

loc_71048A87:				; CODE XREF: sub_71048940+17Ej
		mov	ecx, [ebp+var_54]
		test	ecx, ecx
		jz	short loc_71048AAB
		mov	eax, [ebp+var_54]
		fldz
		fstp	qword ptr [eax]
		mov	eax, [ebp+var_54]
		mov	[ebp+var_48], 2
		add	eax, 8
		mov	[esp], eax
		call	ds:_ZN6QColor10invalidateEv

loc_71048AAB:				; CODE XREF: sub_71048940+14Cj
		mov	edx, [ebp+var_58]
		add	[ebp+var_54], 18h
		mov	eax, [edx+8]
		add	eax, 1
		cmp	eax, [ebp+arg_4]
		mov	[edx+8], eax
		jl	short loc_71048A87

loc_71048AC0:				; CODE XREF: sub_71048940+142j
		mov	eax, [ebp+arg_4]
		mov	ebx, [ebp+var_58]
		mov	edx, [ebp+arg_0]
		mov	[ebx+8], eax
		mov	eax, [edx]
		cmp	eax, ebx
		jz	short loc_71048AE4
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71048B0D

loc_71048ADC:				; CODE XREF: sub_71048940+1E5j
		mov	eax, [ebp+var_58]
		mov	ebx, [ebp+arg_0]
		mov	[ebx], eax

loc_71048AE4:				; CODE XREF: sub_71048940+190j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 6Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_71048AF7:				; CODE XREF: sub_71048940+58j
		mov	eax, [edx]
		mov	edx, [ebp+var_58]
		cmp	eax, 1
		mov	[ebp+var_64], edx
		jnz	loc_7104899E
		jmp	loc_71048A16
; ---------------------------------------------------------------------------

loc_71048B0D:				; CODE XREF: sub_71048940+19Aj
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_71048810
		jmp	short loc_71048ADC
; ---------------------------------------------------------------------------

loc_71048B27:				; CODE XREF: sub_71048940+49j
		mov	edx, ecx
		mov	ebx, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		nop

loc_71048B30:				; CODE XREF: sub_71048940+1FDj
		sub	eax, 1
		mov	[edx+8], eax
		mov	edx, [ecx]
		mov	eax, [edx+8]
		cmp	eax, ebx
		jg	short loc_71048B30
		jmp	loc_71048992
; ---------------------------------------------------------------------------

loc_71048B44:				; CODE XREF: sub_71048940+8Fj
		mov	ebx, ds:_Z9qBadAllocv
		call	ebx ; _Z9qBadAllocv
		mov	eax, [ebp+var_60]
		mov	[ebp+var_5C], eax
		call	ebx ; _Z9qBadAllocv
		mov	edx, [ebp+var_60]
		mov	[ebp+var_64], edx
		jmp	loc_710489D5
sub_71048940	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71048B5F	proc near		; DATA XREF: sub_71048940+23o

arg_0		= dword	ptr  4

		add	ebp, 18h
		mov	edx, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-68h], edx
		jz	short loc_71048B8C
		mov	dword ptr [ebp-48h], 0
		call	sub_71051FB0
		mov	ecx, [ebp-68h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71048B8C:				; CODE XREF: sub_71048B5F+Dj
		mov	ecx, [ebp-68h]
		mov	[esp+0], ecx
		call	sub_71051CE0
		mov	ebx, [ebp-64h]
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-48h], 1
		mov	[esp+arg_0], ebx
		mov	[esp+0], eax
		call	sub_71048810
		call	sub_710524F0
sub_71048B5F	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71048BC0	proc near		; CODE XREF: sub_7100E900+6E6p
					; sub_7100F04E+62p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_71048BE5
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_71048BE5
		mov	eax, [edx]
		mov	[esp+1Ch+var_1C], edx
		mov	[esp+1Ch+var_18], eax
		call	sub_71048810

loc_71048BE5:				; CODE XREF: sub_71048BC0+Bj
					; sub_71048BC0+15j
		add	esp, 1Ch
		retn
sub_71048BC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71048BF0	proc near		; CODE XREF: sub_71014990+294p
					; .text:71015004p ...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_4]
		mov	[esp+0Ch+arg_4], 4
		mov	[esp+0Ch+arg_0], eax
		mov	eax, ds:_ZN11QVectorData4freeEPS_i
		add	esp, 0Ch
		jmp	eax
sub_71048BF0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71048C10	proc near		; CODE XREF: sub_71006D60+A6p
					; sub_71006D60+F5p ...

var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 6Ch
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71052E2C
		mov	[ebp+var_28], offset sub_71048E2D
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	eax, [edx+8]
		cmp	eax, [ebp+arg_4]
		mov	[ebp+var_58], edx
		mov	[ebp+var_60], edx
		jle	short loc_71048C62
		mov	ecx, edx
		mov	edx, [edx]
		cmp	edx, 1
		jz	loc_71048DF1

loc_71048C62:				; CODE XREF: sub_71048C10+43j
		mov	edx, [ebp+var_58]

loc_71048C65:				; CODE XREF: sub_71048C10+1FFj
		mov	eax, [ebp+arg_8]
		cmp	[edx+4], eax
		jz	loc_71048DC7

loc_71048C71:				; CODE XREF: sub_71048C10+1BCj
		mov	eax, [ebp+arg_8]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_48], 0FFFFFFFFh
		shl	eax, 4
		add	eax, 10h
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	[ebp+var_64], eax
		mov	[ebp+var_60], eax
		jz	loc_71048E14

loc_71048CA0:				; CODE XREF: sub_71048C10+218j
		mov	eax, [ebp+var_64]
		mov	dword ptr [eax], 1
		mov	edx, [ebp+arg_8]
		mov	ecx, [ebp+var_64]
		mov	dword ptr [eax+8], 0
		mov	[eax+4], edx
		movzx	eax, byte ptr [ecx+0Ch]
		or	eax, 1
		mov	[ecx+0Ch], al
		mov	ecx, [ebp+arg_0]
		and	eax, 0FFFFFFFDh
		mov	edx, [ecx]
		movzx	edx, byte ptr [edx+0Ch]
		and	edx, 2
		or	eax, edx
		mov	edx, [ebp+var_64]
		mov	[edx+0Ch], al
		and	dword ptr [edx+0Ch], 3
		mov	ecx, [ebp+var_60]
		mov	[ebp+var_58], ecx

loc_71048CE4:				; CODE XREF: sub_71048C10+1C2j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_58]
		mov	ebx, [ebp+arg_4]
		mov	esi, [eax]
		mov	eax, [ebp+var_60]
		mov	ecx, [edx+8]
		mov	[ebp+var_5C], eax
		mov	edx, [ebp+var_5C]
		mov	eax, ecx
		mov	edi, ecx
		shl	eax, 4
		lea	eax, [eax+edx+10h]
		mov	edx, [esi+8]
		cmp	ebx, edx
		jle	short loc_71048D0F
		mov	ebx, edx

loc_71048D0F:				; CODE XREF: sub_71048C10+FBj
		cmp	ecx, ebx
		jge	short loc_71048D52
		mov	edx, edi
		shl	edx, 4
		lea	edx, [edx+esi+10h]
		mov	esi, [ebp+var_58]
		nop

loc_71048D20:				; CODE XREF: sub_71048C10+140j
		add	eax, 10h
		add	edx, 10h
		cmp	eax, 10h
		jz	short loc_71048D45
		mov	ecx, [edx-10h]
		mov	[eax-10h], ecx
		mov	ecx, [edx-0Ch]
		mov	[eax-0Ch], ecx
		mov	ecx, [edx-8]
		mov	[eax-8], ecx
		movzx	ecx, word ptr [edx-4]
		mov	[eax-4], cx

loc_71048D45:				; CODE XREF: sub_71048C10+119j
		mov	ecx, [esi+8]
		add	ecx, 1
		cmp	ecx, ebx
		mov	[esi+8], ecx
		jl	short loc_71048D20

loc_71048D52:				; CODE XREF: sub_71048C10+101j
		cmp	ecx, [ebp+arg_4]
		jge	short loc_71048D8F
		mov	[ebp+var_54], eax
		lea	esi, [esi+0]

loc_71048D60:				; CODE XREF: sub_71048C10+17Dj
		mov	edx, [ebp+var_54]
		test	edx, edx
		jz	short loc_71048D7A
		mov	ecx, [ebp+var_54]
		mov	[ebp+var_48], 2
		mov	[esp], ecx
		call	ds:_ZN6QColor10invalidateEv

loc_71048D7A:				; CODE XREF: sub_71048C10+155j
		mov	edx, [ebp+var_58]
		add	[ebp+var_54], 10h
		mov	eax, [edx+8]
		add	eax, 1
		cmp	eax, [ebp+arg_4]
		mov	[edx+8], eax
		jl	short loc_71048D60

loc_71048D8F:				; CODE XREF: sub_71048C10+145j
		mov	edx, [ebp+var_58]
		mov	ecx, [ebp+arg_4]
		mov	[edx+8], ecx
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		cmp	eax, [ebp+var_58]
		jz	short loc_71048DB4
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71048DD7

loc_71048DAC:				; CODE XREF: sub_71048C10+1DFj
		mov	edx, [ebp+var_58]
		mov	eax, [ebp+arg_0]
		mov	[eax], edx

loc_71048DB4:				; CODE XREF: sub_71048C10+190j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 6Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_71048DC7:				; CODE XREF: sub_71048C10+5Bj
		mov	eax, [edx]
		cmp	eax, 1
		jnz	loc_71048C71
		jmp	loc_71048CE4
; ---------------------------------------------------------------------------

loc_71048DD7:				; CODE XREF: sub_71048C10+19Aj
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_71048BF0
		jmp	short loc_71048DAC
; ---------------------------------------------------------------------------

loc_71048DF1:				; CODE XREF: sub_71048C10+4Cj
		mov	edx, ecx
		mov	ebx, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		lea	esi, [esi+0]

loc_71048E00:				; CODE XREF: sub_71048C10+1FDj
		sub	eax, 1
		mov	[edx+8], eax
		mov	edx, [ecx]
		mov	eax, [edx+8]
		cmp	eax, ebx
		jg	short loc_71048E00
		jmp	loc_71048C65
; ---------------------------------------------------------------------------

loc_71048E14:				; CODE XREF: sub_71048C10+8Aj
		mov	edx, ds:_Z9qBadAllocv
		mov	[ebp+var_50], edx
		call	edx ; _Z9qBadAllocv
		mov	ecx, [ebp+var_64]
		mov	[ebp+var_60], ecx
		call	[ebp+var_50]
		jmp	loc_71048CA0
sub_71048C10	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71048E2D	proc near		; DATA XREF: sub_71048C10+23o

arg_0		= dword	ptr  4

		add	ebp, 18h
		mov	ecx, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-68h], ecx
		jz	short loc_71048E5A
		mov	dword ptr [ebp-48h], 0
		call	sub_71051FB0
		mov	eax, [ebp-68h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71048E5A:				; CODE XREF: sub_71048E2D+Dj
		mov	ecx, [ebp-68h]
		mov	[esp+0], ecx
		call	sub_71051CE0
		mov	eax, [ebp-5Ch]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-48h], 1
		mov	[esp+arg_0], eax
		mov	[esp+0], edx
		call	sub_71048BF0
		call	sub_710524F0
sub_71048E2D	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71048E90	proc near		; CODE XREF: .text:7100200Fp
					; sub_71003800+9Fp ...

var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 6Ch
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71052C28
		mov	[ebp+var_28], offset sub_710490F8
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	ecx, [edx+8]
		mov	[ebp+var_54], edx
		mov	edx, [ebp+arg_4]
		cmp	ecx, edx
		jle	short loc_71048EE2
		mov	ebx, [ebp+var_54]
		mov	eax, [ebx]
		cmp	eax, 1
		jz	loc_71049073

loc_71048EE2:				; CODE XREF: sub_71048E90+42j
		mov	eax, [ebp+var_54]

loc_71048EE5:				; CODE XREF: sub_71048E90+1F7j
		mov	ecx, [eax+4]
		cmp	ecx, [ebp+arg_8]
		jz	loc_71049060

loc_71048EF1:				; CODE XREF: sub_71048E90+1D8j
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_7104908C
		mov	eax, [ebp+arg_8]
		mov	dword ptr [esp+4], 8
		mov	[ebp+var_48], 0FFFFFFFFh
		shl	eax, 4
		add	eax, 10h
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	ebx, eax
		mov	[ebp+var_60], eax
		mov	[ebp+var_58], eax
		jz	loc_710490D4

loc_71048F2D:				; CODE XREF: sub_71048E90+25Aj
		mov	ecx, [ebp+var_60]
		mov	eax, [ebp+var_58]
		mov	dword ptr [ecx+8], 0
		mov	[ebp+var_54], eax

loc_71048F3D:				; CODE XREF: sub_71048E90+23Fj
					; sub_710490F8+6Bj
		mov	eax, [ebp+var_54]
		mov	dword ptr [eax], 1
		mov	edx, [ebp+arg_8]
		mov	ecx, [ebp+var_54]
		mov	[eax+4], edx
		movzx	eax, byte ptr [ecx+0Ch]
		or	eax, 1
		mov	[ecx+0Ch], al
		mov	ecx, [ebp+arg_0]
		and	eax, 0FFFFFFFDh
		mov	edx, [ecx]
		movzx	edx, byte ptr [edx+0Ch]
		and	edx, 2
		or	eax, edx
		mov	edx, [ebp+var_54]
		mov	[edx+0Ch], al
		and	dword ptr [edx+0Ch], 3
		mov	edx, [ebp+arg_4]

loc_71048F77:				; CODE XREF: sub_71048E90+1DEj
		mov	ecx, [ebp+arg_0]
		mov	eax, [ebp+var_54]
		mov	esi, [ecx]
		mov	ecx, [eax+8]
		mov	edi, [esi+8]
		mov	eax, ecx
		shl	eax, 4
		lea	eax, [eax+ebx+10h]
		mov	ebx, edx
		cmp	edx, edi
		mov	[ebp+var_5C], ecx
		jle	short loc_71048F99
		mov	ebx, edi

loc_71048F99:				; CODE XREF: sub_71048E90+105j
		cmp	ecx, ebx
		jge	short loc_71048FE3
		mov	edx, [ebp+var_5C]
		shl	edx, 4
		lea	edx, [edx+esi+10h]
		mov	esi, [ebp+var_54]
		lea	esi, [esi+0]

loc_71048FB0:				; CODE XREF: sub_71048E90+14Ej
		add	eax, 10h
		add	edx, 10h
		cmp	eax, 10h
		jz	short loc_71048FD3
		mov	ecx, [edx-10h]
		mov	[eax-10h], ecx
		mov	ecx, [edx-0Ch]
		mov	[eax-0Ch], ecx
		mov	ecx, [edx-8]
		mov	[eax-8], ecx
		mov	ecx, [edx-4]
		mov	[eax-4], ecx

loc_71048FD3:				; CODE XREF: sub_71048E90+129j
		mov	ecx, [esi+8]
		add	ecx, 1
		cmp	ecx, ebx
		mov	[esi+8], ecx
		jl	short loc_71048FB0
		mov	edx, [ebp+arg_4]

loc_71048FE3:				; CODE XREF: sub_71048E90+10Bj
		cmp	edx, ecx
		jle	short loc_7104900E
		mov	ecx, [ebp+var_54]
		fldz
		mov	ebx, [ebp+arg_4]
		nop

loc_71048FF0:				; CODE XREF: sub_71048E90+177j
		test	eax, eax
		jz	short loc_71048FF9
		fst	qword ptr [eax]
		fst	qword ptr [eax+8]

loc_71048FF9:				; CODE XREF: sub_71048E90+162j
		mov	edx, [ecx+8]
		add	eax, 10h
		add	edx, 1
		cmp	edx, ebx
		mov	[ecx+8], edx
		jl	short loc_71048FF0
		fstp	st
		mov	edx, [ebp+arg_4]

loc_7104900E:				; CODE XREF: sub_71048E90+155j
		mov	ecx, [ebp+var_54]
		mov	ebx, [ebp+arg_0]
		mov	[ecx+8], edx
		mov	eax, [ebx]
		cmp	eax, ecx
		jz	short loc_71049049
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71049041
		mov	dword ptr [esp+4], 8
		mov	eax, [ebx]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_71049041:				; CODE XREF: sub_71048E90+195j
		mov	edx, [ebp+var_54]
		mov	eax, [ebp+arg_0]
		mov	[eax], edx

loc_71049049:				; CODE XREF: sub_71048E90+18Bj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 6Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71049060:				; CODE XREF: sub_71048E90+5Bj
		mov	esi, [eax]
		mov	ebx, [ebp+var_54]
		cmp	esi, 1
		jnz	loc_71048EF1
		jmp	loc_71048F77
; ---------------------------------------------------------------------------

loc_71049073:				; CODE XREF: sub_71048E90+4Cj
		mov	eax, ebx
		mov	ebx, [ebp+arg_0]

loc_71049078:				; CODE XREF: sub_71048E90+1F5j
		sub	ecx, 1
		mov	[eax+8], ecx
		mov	eax, [ebx]
		mov	ecx, [eax+8]
		cmp	edx, ecx
		jl	short loc_71049078
		jmp	loc_71048EE5
; ---------------------------------------------------------------------------

loc_7104908C:				; CODE XREF: sub_71048E90+66j
		shl	ecx, 4
		lea	edx, [ecx+10h]
		mov	[esp+8], edx
		mov	edx, [ebp+arg_8]
		mov	dword ptr [esp+0Ch], 8
		mov	[esp], eax
		mov	[ebp+var_48], 2
		shl	edx, 4
		add	edx, 10h
		mov	[esp+4], edx
		call	ds:_ZN11QVectorData10reallocateEPS_iii
		test	eax, eax
		mov	[ebp+var_64], eax
		jz	short loc_710490EF

loc_710490C2:				; CODE XREF: sub_71048E90+266j
		mov	ecx, [ebp+var_64]
		mov	edx, [ebp+arg_0]
		mov	ebx, ecx
		mov	[edx], ecx
		mov	[ebp+var_54], ecx
		jmp	loc_71048F3D
; ---------------------------------------------------------------------------

loc_710490D4:				; CODE XREF: sub_71048E90+97j
		mov	eax, ds:_Z9qBadAllocv
		mov	[ebp+var_50], eax
		call	eax ; _Z9qBadAllocv
		mov	edx, [ebp+var_60]
		mov	[ebp+var_58], edx
		call	[ebp+var_50]
		mov	ebx, [ebp+var_60]
		jmp	loc_71048F2D
; ---------------------------------------------------------------------------

loc_710490EF:				; CODE XREF: sub_71048E90+230j
		nop
		call	ds:_Z9qBadAllocv
		jmp	short loc_710490C2
sub_71048E90	endp


; =============== S U B	R O U T	I N E =======================================


sub_710490F8	proc near		; DATA XREF: sub_71048E90+20o
		add	ebp, 18h
		mov	ebx, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	eax, [ebp-40h]
		mov	[ebp-68h], ebx
		jz	short loc_71049125
		mov	dword ptr [ebp-48h], 0
		call	sub_71051FB0
		mov	[esp+0], ebx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71049125:				; CODE XREF: sub_710490F8+10j
		cmp	eax, 1
		jz	short loc_7104913C
		mov	ebx, [ebp-68h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ebx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7104913C:				; CODE XREF: sub_710490F8+30j
		mov	eax, [ebp-68h]
		mov	[esp+0], eax
		call	sub_71051CE0
		mov	edx, [ebp+8]
		mov	ecx, [ebp+10h]
		mov	eax, [edx]
		cmp	[eax+4], ecx
		jl	short loc_71049168
		mov	dword ptr [ebp-48h], 0
		call	sub_71051FB0
		mov	ebx, [ebp-54h]
		jmp	loc_71048F3D
; ---------------------------------------------------------------------------

loc_71049168:				; CODE XREF: sub_710490F8+5Aj
		mov	dword ptr [ebp-48h], 1
		call	sub_710524F0
sub_710490F8	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71049180	proc near		; CODE XREF: sub_71003F90+FC7p
					; sub_71005587+264p ...

var_2C		= dword	ptr -2Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	ebp, ds:_ZN7QString4freeEPNS_4DataE
		mov	edi, [esp+2Ch+arg_4]
		mov	eax, [edi+8]
		lea	esi, [edi+10h]
		lea	ebx, [edi+eax*4+10h]
		nop
		lea	esi, [esi+0]

loc_710491A0:				; CODE XREF: sub_71049180+31j
		cmp	ebx, esi
		jz	short loc_710491BE

loc_710491A4:				; CODE XREF: sub_71049180+3Cj
		sub	ebx, 4
		mov	eax, [ebx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710491A0
		mov	eax, [ebx]
		mov	[esp+2Ch+var_2C], eax
		call	ebp ; _ZN7QString4freeEPNS_4DataE
		cmp	ebx, esi
		jnz	short loc_710491A4

loc_710491BE:				; CODE XREF: sub_71049180+22j
		mov	eax, ds:_ZN11QVectorData4freeEPS_i
		mov	[esp+2Ch+arg_0], edi
		mov	[esp+2Ch+arg_4], 4
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	eax
sub_71049180	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710491E0	proc near		; CODE XREF: sub_71003F90+266p
					; sub_71003F90+B62p

var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	ebx
		sub	esp, 64h
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71052CC8
		mov	[ebp+var_28], offset sub_710492E5
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_710492B2

loc_71049220:				; CODE XREF: sub_710491E0+D8j
		mov	ebx, [ebp+arg_4]
		mov	eax, [ebx]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 4
		mov	eax, [edx]
		mov	eax, [eax+8]
		mov	dword ptr [esp], 14h
		mov	[ebp+var_48], 1
		add	eax, 1
		mov	[esp+4], eax
		call	ds:_ZN11QVectorData4growEiiib
		mov	ebx, [ebp+arg_0]
		mov	[esp+8], eax
		mov	eax, [ebx]
		mov	eax, [eax+8]
		mov	[esp], ebx
		mov	[esp+4], eax
		call	sub_71049320
		mov	edx, [ebx]
		mov	eax, [ebp+var_C]
		mov	ecx, [edx+8]
		mov	[edx+ecx*4+10h], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_710492D0

loc_71049298:				; CODE XREF: sub_710491E0+EDj
					; sub_710491E0+103j
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx]
		add	dword ptr [eax+8], 1
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 64h
		pop	ebx
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_710492B2:				; CODE XREF: sub_710491E0+3Aj
		mov	ecx, [eax+8]
		cmp	ecx, [eax+4]
		jge	loc_71049220
		mov	ebx, [ebp+arg_4]
		mov	edx, [ebx]
		mov	[eax+ecx*4+10h], edx
		lock inc dword ptr [edx]
		setnz	al
		jmp	short loc_71049298
; ---------------------------------------------------------------------------
		align 10h

loc_710492D0:				; CODE XREF: sub_710491E0+B6j
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_71049298
sub_710491E0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710492E5	proc near		; DATA XREF: sub_710491E0+21o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-50h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_710477B0
		mov	edx, [ebp-50h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_710492E5	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71049320	proc near		; CODE XREF: sub_71003F90+353p
					; sub_71003F90+53Ep ...

var_6C		= dword	ptr -6Ch
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 7Ch
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71052CAC
		mov	[ebp+var_28], offset sub_710495AB
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	eax, [edx+8]
		cmp	eax, [ebp+arg_4]
		mov	[ebp+var_58], edx
		jle	short loc_7104936D
		mov	edx, [edx]
		cmp	edx, 1
		jz	loc_710494F0

loc_7104936D:				; CODE XREF: sub_71049320+40j
		mov	eax, [ebp+var_58]

loc_71049370:				; CODE XREF: sub_71049320+21Cj
		mov	ecx, [eax+4]
		cmp	ecx, [ebp+arg_8]
		jz	loc_710494C0

loc_7104937C:				; CODE XREF: sub_71049320+1A8j
		mov	edx, [eax]
		cmp	edx, 1
		jz	loc_71049541
		mov	ecx, [ebp+arg_8]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_48], 0FFFFFFFFh
		lea	eax, ds:10h[ecx*4]
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	edx, eax
		mov	[ebp+var_60], eax
		mov	[ebp+var_5C], eax
		jz	loc_7104958B

loc_710493B9:				; CODE XREF: sub_71049320+27Ej
		mov	ecx, [ebp+var_60]
		mov	ebx, [ebp+var_5C]
		mov	dword ptr [ecx+8], 0
		mov	[ebp+var_58], ebx

loc_710493C9:				; CODE XREF: sub_71049320+266j
					; sub_710495AB+6Ej
		mov	eax, [ebp+var_58]
		mov	dword ptr [eax], 1
		mov	ecx, [ebp+arg_8]
		mov	ebx, [ebp+var_58]
		mov	[eax+4], ecx
		movzx	eax, byte ptr [ebx+0Ch]
		or	eax, 1
		mov	[ebx+0Ch], al
		mov	ebx, [ebp+arg_0]
		and	eax, 0FFFFFFFDh
		mov	ecx, [ebx]
		movzx	ecx, byte ptr [ecx+0Ch]
		and	ecx, 2
		or	eax, ecx
		mov	ecx, [ebp+var_58]
		mov	[ecx+0Ch], al
		and	dword ptr [ecx+0Ch], 3

loc_71049400:				; CODE XREF: sub_71049320+1AEj
		mov	ebx, [ebp+arg_0]
		mov	ecx, [ebx]
		mov	ebx, [ebp+var_58]
		mov	esi, [ecx+8]
		mov	eax, [ebx+8]
		mov	ebx, [ebp+arg_4]
		mov	edi, eax
		cmp	ebx, esi
		lea	edx, [edx+eax*4+10h]
		jle	short loc_7104941D
		mov	ebx, esi

loc_7104941D:				; CODE XREF: sub_71049320+F9j
		cmp	eax, ebx
		jge	short loc_71049455
		mov	esi, [ebp+var_58]
		lea	ecx, [ecx+edi*4+10h]
		mov	[ebp+var_6C], ebx
		nop
		lea	esi, [esi+0]

loc_71049430:				; CODE XREF: sub_71049320+133j
		add	edx, 4
		add	ecx, 4
		cmp	edx, 4
		jz	short loc_71049447
		mov	eax, [ecx-4]
		mov	[edx-4], eax
		lock inc dword ptr [eax]
		setnz	bl

loc_71049447:				; CODE XREF: sub_71049320+119j
		mov	eax, [esi+8]
		add	eax, 1
		cmp	eax, [ebp+var_6C]
		mov	[esi+8], eax
		jl	short loc_71049430

loc_71049455:				; CODE XREF: sub_71049320+FFj
		cmp	[ebp+arg_4], eax
		jle	short loc_71049484
		mov	ecx, ds:_ZN7QString11shared_nullE
		mov	esi, [ebp+var_58]
		mov	edi, [ebp+arg_4]
		mov	eax, ecx

loc_71049468:				; CODE XREF: sub_71049320+162j
		test	edx, edx
		jz	short loc_71049474
		mov	[edx], ecx
		lock inc dword ptr [eax]
		setnz	bl

loc_71049474:				; CODE XREF: sub_71049320+14Aj
		mov	ebx, [esi+8]
		add	edx, 4
		add	ebx, 1
		cmp	ebx, edi
		mov	[esi+8], ebx
		jl	short loc_71049468

loc_71049484:				; CODE XREF: sub_71049320+138j
		mov	eax, [ebp+var_58]
		mov	edx, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		mov	[eax+8], edx
		mov	eax, [ecx]
		cmp	eax, [ebp+var_58]
		jz	short loc_710494A9
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_710494D3

loc_710494A1:				; CODE XREF: sub_71049320+1C8j
		mov	eax, [ebp+var_58]
		mov	ebx, [ebp+arg_0]
		mov	[ebx], eax

loc_710494A9:				; CODE XREF: sub_71049320+175j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 7Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_710494C0:				; CODE XREF: sub_71049320+56j
		mov	ebx, [eax]
		mov	edx, [ebp+var_58]
		cmp	ebx, 1
		jnz	loc_7104937C
		jmp	loc_71049400
; ---------------------------------------------------------------------------

loc_710494D3:				; CODE XREF: sub_71049320+17Fj
		mov	eax, [ecx]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_71049180
		jmp	short loc_710494A1
; ---------------------------------------------------------------------------
		align 10h

loc_710494F0:				; CODE XREF: sub_71049320+47j
		mov	ebx, [ebp+arg_0]
		lea	eax, ds:10h[eax*4]
		mov	ebx, [ebx]
		add	eax, ebx
		mov	[ebp+var_54], eax

loc_71049501:				; CODE XREF: sub_71049320+21Aj
		sub	[ebp+var_54], 4
		mov	edx, [ebp+var_54]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71049529
		mov	ecx, [ebp+var_54]
		mov	eax, [ecx]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_71049529:				; CODE XREF: sub_71049320+1F2j
		mov	ebx, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	eax, [ebx]
		sub	dword ptr [eax+8], 1
		mov	eax, [ebx]
		cmp	[eax+8], edx
		jg	short loc_71049501
		jmp	loc_71049370
; ---------------------------------------------------------------------------

loc_71049541:				; CODE XREF: sub_71049320+61j
		lea	edx, ds:10h[ecx*4]
		mov	ecx, [ebp+arg_8]
		mov	[esp+8], edx
		mov	dword ptr [esp+0Ch], 4
		mov	[esp], eax
		lea	edx, ds:10h[ecx*4]
		mov	[esp+4], edx
		mov	[ebp+var_48], 2
		call	ds:_ZN11QVectorData10reallocateEPS_iii
		test	eax, eax
		mov	[ebp+var_64], eax
		jz	short loc_710495A3

loc_71049579:				; CODE XREF: sub_71049320+289j
		mov	eax, [ebp+var_64]
		mov	ebx, [ebp+arg_0]
		mov	edx, eax
		mov	[ebx], eax
		mov	[ebp+var_58], eax
		jmp	loc_710493C9
; ---------------------------------------------------------------------------

loc_7104958B:				; CODE XREF: sub_71049320+93j
		mov	ebx, ds:_Z9qBadAllocv
		call	ebx ; _Z9qBadAllocv
		mov	eax, [ebp+var_60]
		mov	[ebp+var_5C], eax
		call	ebx ; _Z9qBadAllocv
		mov	edx, [ebp+var_60]
		jmp	loc_710493B9
; ---------------------------------------------------------------------------

loc_710495A3:				; CODE XREF: sub_71049320+257j
		call	ds:_Z9qBadAllocv
		jmp	short loc_71049579
sub_71049320	endp


; =============== S U B	R O U T	I N E =======================================


sub_710495AB	proc near		; DATA XREF: sub_71049320+23o
		add	ebp, 18h
		mov	ecx, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	eax, [ebp-40h]
		mov	[ebp-68h], ecx
		jz	short loc_710495DB
		mov	dword ptr [ebp-48h], 0
		call	sub_71051FB0
		mov	ebx, [ebp-68h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ebx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_710495DB:				; CODE XREF: sub_710495AB+10j
		cmp	eax, 1
		jz	short loc_710495F2
		mov	edx, [ebp-68h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_710495F2:				; CODE XREF: sub_710495AB+33j
		mov	ecx, [ebp-68h]
		mov	[esp+0], ecx
		call	sub_71051CE0
		mov	ebx, [ebp+8]
		mov	edx, [ebp+10h]
		mov	eax, [ebx]
		cmp	[eax+4], edx
		jl	short loc_7104961E
		mov	dword ptr [ebp-48h], 0
		call	sub_71051FB0
		mov	edx, [ebp-58h]
		jmp	loc_710493C9
; ---------------------------------------------------------------------------

loc_7104961E:				; CODE XREF: sub_710495AB+5Dj
		mov	dword ptr [ebp-48h], 1
		call	sub_710524F0
sub_710495AB	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71049630	proc near		; CODE XREF: sub_7100AAB0+29p
					; sub_7100AAB0+49p ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_30		= dword	ptr -30h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	ebx, [esp+4Ch+arg_0]
		mov	edi, [esp+4Ch+arg_8]
		mov	esi, [ebx]
		mov	eax, [esi+8]
		cmp	eax, [esp+4Ch+arg_4]
		jle	short loc_71049655
		mov	edx, [esi]
		cmp	edx, 1
		jz	loc_71049767

loc_71049655:				; CODE XREF: sub_71049630+18j
		mov	edx, esi

loc_71049657:				; CODE XREF: sub_71049630+14Fj
		cmp	[edx+4], edi
		jz	loc_71049755

loc_71049660:				; CODE XREF: sub_71049630+12Cj
		lea	eax, ds:10h[edi*4]
		mov	[esp+4Ch+var_48], 4
		mov	[esp+4Ch+var_4C], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	esi, eax
		mov	edx, eax
		jz	loc_71049784

loc_71049684:				; CODE XREF: sub_71049630+16Ej
		movzx	ecx, byte ptr [eax+0Ch]
		mov	dword ptr [eax+8], 0
		mov	dword ptr [eax], 1
		mov	[eax+4], edi
		or	ecx, 1
		mov	[eax+0Ch], cl
		mov	edi, [ebx]
		and	ecx, 0FFFFFFFDh
		movzx	edi, byte ptr [edi+0Ch]
		and	edi, 2
		or	ecx, edi
		mov	[eax+0Ch], cl
		and	dword ptr [eax+0Ch], 3

loc_710496B3:				; CODE XREF: sub_71049630+132j
		mov	eax, [ebx]
		mov	ebp, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_24], eax
		mov	eax, [esi+8]
		lea	ecx, [eax+4]
		mov	edi, eax
		lea	edx, [edx+ecx*4]
		mov	[esp+4Ch+var_30], edx
		mov	edx, [esp+4Ch+var_24]
		mov	edx, [edx+8]
		cmp	ebp, edx
		mov	[esp+4Ch+var_20], edx
		jle	short loc_710496DD
		mov	ebp, edx

loc_710496DD:				; CODE XREF: sub_71049630+A9j
		cmp	eax, ebp
		jge	short loc_7104970F
		mov	edx, [esp+4Ch+var_24]
		lea	ecx, [edx+ecx*4]
		mov	edx, [esp+4Ch+var_30]
		lea	esi, [esi+0]

loc_710496F0:				; CODE XREF: sub_71049630+DDj
		add	edx, 4
		mov	edi, [ecx]
		add	ecx, 4
		cmp	edx, 4
		jz	short loc_71049703
		mov	[edx-4], edi
		mov	eax, [esi+8]

loc_71049703:				; CODE XREF: sub_71049630+CBj
		lea	edi, [eax+1]
		cmp	edi, ebp
		mov	eax, edi
		mov	[esi+8], edi
		jl	short loc_710496F0

loc_7104970F:				; CODE XREF: sub_71049630+AFj
		cmp	edi, [esp+4Ch+arg_4]
		jge	short loc_7104971C
		mov	ebp, [esp+4Ch+arg_4]
		mov	[esi+8], ebp

loc_7104971C:				; CODE XREF: sub_71049630+E3j
		mov	eax, [esp+4Ch+arg_4]
		mov	[esi+8], eax
		mov	eax, [ebx]
		cmp	esi, eax
		jz	short loc_71049735
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71049740

loc_71049733:				; CODE XREF: sub_71049630+123j
		mov	[ebx], esi

loc_71049735:				; CODE XREF: sub_71049630+F7j
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71049740:				; CODE XREF: sub_71049630+101j
		mov	[esp+4Ch+var_48], 4
		mov	eax, [ebx]
		mov	[esp+4Ch+var_4C], eax
		call	ds:_ZN11QVectorData4freeEPS_i
		jmp	short loc_71049733
; ---------------------------------------------------------------------------

loc_71049755:				; CODE XREF: sub_71049630+2Aj
		mov	eax, [edx]
		mov	edx, esi
		cmp	eax, 1
		jnz	loc_71049660
		jmp	loc_710496B3
; ---------------------------------------------------------------------------

loc_71049767:				; CODE XREF: sub_71049630+1Fj
		mov	ecx, [esp+4Ch+arg_4]
		mov	edx, esi
		lea	esi, [esi+0]

loc_71049770:				; CODE XREF: sub_71049630+14Dj
		sub	eax, 1
		mov	[edx+8], eax
		mov	edx, [ebx]
		mov	eax, [edx+8]
		cmp	eax, ecx
		jg	short loc_71049770
		jmp	loc_71049657
; ---------------------------------------------------------------------------

loc_71049784:				; CODE XREF: sub_71049630+4Ej
		mov	ebp, ds:_Z9qBadAllocv
		mov	[esp+4Ch+var_28], eax
		call	ebp ; _Z9qBadAllocv
		mov	eax, [esp+4Ch+var_28]
		mov	esi, eax
		call	ebp ; _Z9qBadAllocv
		mov	eax, [esp+4Ch+var_28]
		mov	edx, eax
		jmp	loc_71049684
sub_71049630	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710497B0	proc near		; CODE XREF: sub_7101D820+526p
					; sub_7101DEAE+E4p ...

var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_71053006
		mov	[ebp+var_18], offset sub_7104988B
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		add	edx, 10h
		mov	[ebp+var_44], edx
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+8]
		lea	eax, [edx+eax*8+10h]
		mov	[ebp+var_40], eax
		jmp	short loc_71049821
; ---------------------------------------------------------------------------

loc_710497F7:				; CODE XREF: sub_710497B0+96j
					; sub_710497B0+B1j
		mov	edx, [ebp+var_40]
		mov	eax, [edx-8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104981D
		mov	edx, [ebp+var_40]
		mov	eax, [edx-8]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7104981D:				; CODE XREF: sub_710497B0+55j
		sub	[ebp+var_40], 8

loc_71049821:				; CODE XREF: sub_710497B0+45j
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+var_40]
		sub	eax, 8
		cmp	[ebp+var_44], edx
		mov	[ebp+var_48], eax
		jz	short loc_71049863
		mov	ecx, [ebp+var_40]
		mov	edx, [ebp+var_40]
		sub	ecx, 4
		mov	eax, [edx-4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710497F7
		mov	edx, [ebp+var_40]
		mov	eax, [edx-4]
		mov	[esp], ecx
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		call	sub_710459F0
		jmp	short loc_710497F7
; ---------------------------------------------------------------------------

loc_71049863:				; CODE XREF: sub_710497B0+80j
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_710497B0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104988B	proc near		; DATA XREF: sub_710497B0+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-4Ch], eax
		mov	[esp+0], edx
		call	sub_710477B0
		mov	eax, [ebp-4Ch]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7104988B	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710498C0	proc near		; CODE XREF: sub_71049F70+CBp
					; sub_71049F70+2F1p ...

var_8C		= dword	ptr -8Ch
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 9Ch
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_7105300C
		mov	[ebp+var_28], offset sub_71049B92
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	eax, [edx+8]
		cmp	eax, [ebp+arg_4]
		mov	[ebp+var_60], edx
		jle	short loc_71049910
		mov	edx, [edx]
		cmp	edx, 1
		jz	loc_71049AF1

loc_71049910:				; CODE XREF: sub_710498C0+43j
		mov	eax, [ebp+var_60]

loc_71049913:				; CODE XREF: sub_710498C0+27Ej
		mov	edx, [ebp+arg_8]
		cmp	[eax+4], edx
		jz	loc_71049AC4

loc_7104991F:				; CODE XREF: sub_710498C0+20Fj
		mov	ebx, [ebp+arg_8]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_48], 0FFFFFFFFh
		lea	eax, ds:10h[ebx*8]
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	[ebp+var_7C], eax
		mov	[ebp+var_64], eax
		mov	[ebp+var_80], eax
		jz	loc_71049B77

loc_71049952:				; CODE XREF: sub_710498C0+2CDj
		mov	ecx, [ebp+var_7C]
		movzx	eax, byte ptr [ecx+0Ch]
		mov	dword ptr [ecx], 1
		mov	ebx, [ebp+arg_8]
		mov	dword ptr [ecx+8], 0
		or	eax, 1
		mov	[ecx+0Ch], al
		mov	esi, [ebp+arg_0]
		and	eax, 0FFFFFFFDh
		mov	[ecx+4], ebx
		mov	edx, [esi]
		movzx	edx, byte ptr [edx+0Ch]
		and	edx, 2
		or	eax, edx
		mov	[ecx+0Ch], al
		and	dword ptr [ecx+0Ch], 3
		mov	eax, [ebp+var_64]
		mov	[ebp+var_60], eax

loc_71049990:				; CODE XREF: sub_710498C0+215j
		mov	ebx, [ebp+var_60]
		mov	ecx, [ebp+arg_0]
		mov	esi, [ebp+var_80]
		mov	eax, [ebx+8]
		mov	edx, [ecx]
		lea	esi, [esi+eax*8+10h]
		mov	ebx, eax
		mov	[ebp+var_54], esi
		mov	ecx, [edx+8]
		mov	esi, [ebp+arg_4]
		cmp	esi, ecx
		mov	[ebp+var_68], esi
		jle	short loc_710499B7
		mov	[ebp+var_68], ecx

loc_710499B7:				; CODE XREF: sub_710498C0+F2j
		cmp	eax, [ebp+var_68]
		jge	short loc_71049A38
		mov	eax, [ebp+var_54]
		lea	ebx, [edx+ebx*8+10h]
		mov	[ebp+var_58], ebx
		add	eax, 8
		mov	[ebp+var_5C], eax
		jmp	short loc_710499EB
; ---------------------------------------------------------------------------
		align 10h

loc_710499D0:				; CODE XREF: sub_710498C0+134j
					; sub_710498C0+165j ...
		mov	esi, [ebp+var_60]
		mov	edx, [ebp+var_5C]
		add	[ebp+var_5C], 8
		mov	eax, [esi+8]
		mov	[ebp+var_54], edx
		add	eax, 1
		cmp	[ebp+var_68], eax
		mov	[esi+8], eax
		jle	short loc_71049A38

loc_710499EB:				; CODE XREF: sub_710498C0+10Cj
		mov	ebx, [ebp+var_54]
		add	[ebp+var_58], 8
		test	ebx, ebx
		jz	short loc_710499D0
		mov	edx, [ebp+var_58]
		mov	ecx, [ebp+var_54]
		mov	eax, [edx-8]
		mov	[ecx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ebx, [ebp+var_58]
		mov	edx, ecx
		add	edx, 4
		mov	eax, [ebx-4]
		mov	[ecx+4], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	esi, [ebp+var_54]
		mov	eax, [esi+4]
		test	byte ptr [eax+10h], 1
		jnz	short loc_710499D0
		mov	[esp], edx
		mov	[ebp+var_48], 2
		call	sub_71045970
		jmp	short loc_710499D0
; ---------------------------------------------------------------------------

loc_71049A38:				; CODE XREF: sub_710498C0+FAj
					; sub_710498C0+129j
		cmp	eax, [ebp+arg_4]
		jge	short loc_71049A89
		mov	ecx, ds:_ZN7QString11shared_nullE
		mov	edi, ds:_ZN9QListData11shared_nullE
		mov	eax, [ebp+var_54]
		mov	esi, [ebp+var_60]
		mov	[ebp+var_8C], ecx
		mov	edx, edi

loc_71049A57:				; CODE XREF: sub_710498C0+1C7j
		test	eax, eax
		jz	short loc_71049A72
		mov	ebx, [ebp+var_8C]
		mov	[eax], ebx
		lock inc dword ptr [ecx]
		setnz	bl
		mov	[eax+4], edi
		lock inc dword ptr [edx]
		setnz	bl

loc_71049A72:				; CODE XREF: sub_710498C0+199j
		mov	ebx, [esi+8]
		add	eax, 8
		add	ebx, 1
		mov	[ebp+var_70], ebx
		mov	[esi+8], ebx
		mov	ebx, [ebp+arg_4]
		cmp	[ebp+var_70], ebx
		jl	short loc_71049A57

loc_71049A89:				; CODE XREF: sub_710498C0+17Bj
		mov	eax, [ebp+var_60]
		mov	edx, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		mov	[eax+8], edx
		mov	eax, [ecx]
		cmp	[ebp+var_60], eax
		jz	short loc_71049AAE
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71049ADA

loc_71049AA6:				; CODE XREF: sub_710498C0+22Fj
		mov	esi, [ebp+var_60]
		mov	ebx, [ebp+arg_0]
		mov	[ebx], esi

loc_71049AAE:				; CODE XREF: sub_710498C0+1DAj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 9Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_71049AC4:				; CODE XREF: sub_710498C0+59j
		mov	eax, [eax]
		mov	ecx, [ebp+var_60]
		cmp	eax, 1
		mov	[ebp+var_80], ecx
		jnz	loc_7104991F
		jmp	loc_71049990
; ---------------------------------------------------------------------------

loc_71049ADA:				; CODE XREF: sub_710498C0+1E4j
		mov	eax, [ecx]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_710497B0
		jmp	short loc_71049AA6
; ---------------------------------------------------------------------------

loc_71049AF1:				; CODE XREF: sub_710498C0+4Aj
		mov	ebx, [ebp+arg_0]
		lea	eax, ds:10h[eax*8]
		add	eax, [ebx]
		sub	eax, 8
		mov	[ebp+var_6C], eax
		jmp	short loc_71049B44
; ---------------------------------------------------------------------------

loc_71049B05:				; CODE XREF: sub_710498C0+29Aj
					; sub_710498C0+2B5j
		mov	edx, [ebp+var_6C]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71049B29
		mov	ecx, [ebp+var_6C]
		mov	eax, [ecx]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_71049B29:				; CODE XREF: sub_710498C0+252j
		mov	ebx, [ebp+arg_0]
		mov	esi, [ebp+arg_4]
		mov	eax, [ebx]
		sub	dword ptr [eax+8], 1
		mov	eax, [ebx]
		sub	[ebp+var_6C], 8
		cmp	[eax+8], esi
		jle	loc_71049913

loc_71049B44:				; CODE XREF: sub_710498C0+243j
		mov	esi, [ebp+var_6C]
		mov	ecx, esi
		mov	[ebp+var_78], esi
		add	ecx, 4
		mov	eax, [esi+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71049B05
		mov	ebx, [ebp+var_6C]
		mov	eax, [ebx+4]
		mov	[esp], ecx
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		call	sub_710459F0
		jmp	short loc_71049B05
; ---------------------------------------------------------------------------

loc_71049B77:				; CODE XREF: sub_710498C0+8Cj
		mov	esi, ds:_Z9qBadAllocv
		call	esi ; _Z9qBadAllocv
		mov	eax, [ebp+var_7C]
		mov	[ebp+var_64], eax
		call	esi ; _Z9qBadAllocv
		mov	edx, [ebp+var_7C]
		mov	[ebp+var_80], edx
		jmp	loc_71049952
sub_710498C0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71049B92	proc near		; DATA XREF: sub_710498C0+26o

arg_0		= dword	ptr  4

		add	ebp, 18h
		mov	eax, [ebp-48h]
		mov	esi, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-84h], esi
		jz	short loc_71049BCC
		cmp	eax, 2
		jz	short loc_71049C0A
		mov	eax, [ebp-78h]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], eax
		call	sub_710477B0
		mov	[esp+0], esi
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71049BCC:				; CODE XREF: sub_71049B92+12j
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], eax
		call	sub_710477B0
		mov	edx, [ebp-84h]
		mov	[esp+0], edx
		call	sub_71051CE0
		mov	ecx, [ebp-80h]
		mov	ebx, [ebp+8]
		mov	dword ptr [ebp-48h], 3
		mov	[esp+arg_0], ecx
		mov	[esp+0], ebx
		call	sub_710497B0
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_71049C0A:				; CODE XREF: sub_71049B92+17j
		mov	dword ptr [ebp-48h], 0
		call	sub_71051FB0
		mov	esi, [ebp-84h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], esi
		call	_Unwind_SjLj_Resume
sub_71049B92	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71049C30	proc near		; CODE XREF: sub_7104B050+4C5p
					; sub_7104B6D5+205p

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_710533CC
		mov	[ebp+var_18], offset sub_71049E18
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	ecx, [ebp+arg_4]
		mov	edx, [ebp+arg_4]
		mov	eax, [ecx+8]
		add	edx, 10h
		mov	[ebp+var_48], edx
		shl	eax, 5
		lea	eax, [eax+ecx+10h]
		mov	[ebp+var_40], eax
		mov	eax, ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		mov	[ebp+var_4C], eax
		jmp	loc_71049D28
; ---------------------------------------------------------------------------

loc_71049C85:				; CODE XREF: sub_71049C30+11Cj
					; sub_71049C30+140j
		mov	edx, [ebp+var_44]
		mov	eax, [edx+18h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_71049D75

loc_71049C9A:				; CODE XREF: sub_71049C30+160j
		mov	edx, [ebp+var_40]
		mov	ecx, [ebp+var_44]
		mov	eax, [edx-14h]
		add	ecx, 0Ch
		test	eax, eax
		jz	short loc_71049CB8
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71049DD1

loc_71049CB8:				; CODE XREF: sub_71049C30+78j
					; sub_71049C30+1BAj
		mov	edx, [ebp+var_40]
		mov	ecx, [ebp+var_44]
		mov	eax, [edx-18h]
		add	ecx, 8
		test	eax, eax
		jz	short loc_71049CD6
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71049D95

loc_71049CD6:				; CODE XREF: sub_71049C30+96j
					; sub_71049C30+17Ej
		mov	edx, [ebp+var_40]
		mov	ecx, [ebp+var_44]
		mov	eax, [edx-1Ch]
		add	ecx, 4
		test	eax, eax
		jz	short loc_71049CF4
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_71049DB3

loc_71049CF4:				; CODE XREF: sub_71049C30+B4j
					; sub_71049C30+19Cj
		mov	edx, [ebp+var_40]
		mov	eax, [edx-20h]
		test	eax, eax
		jz	short loc_71049D24
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71049D24
		mov	ecx, [ebp+var_40]
		mov	eax, [ecx-20h]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+4], eax
		mov	eax, [ebp+var_44]
		mov	[esp], eax
		call	sub_7104DFE0

loc_71049D24:				; CODE XREF: sub_71049C30+CCj
					; sub_71049C30+D6j
		sub	[ebp+var_40], 20h

loc_71049D28:				; CODE XREF: sub_71049C30+50j
		mov	edx, [ebp+var_40]
		mov	ecx, [ebp+var_40]
		sub	edx, 20h
		cmp	[ebp+var_48], ecx
		mov	[ebp+var_44], edx
		jz	loc_71049DF0
		mov	edx, [ebp+var_40]
		mov	eax, [edx-4]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jnz	loc_71049C85
		mov	ecx, [ebp+var_40]
		mov	dword ptr [esp+4], offset sub_71044770
		mov	eax, [ecx-4]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_71049C85
; ---------------------------------------------------------------------------

loc_71049D75:				; CODE XREF: sub_71049C30+64j
		mov	ecx, [ebp+var_44]
		mov	dword ptr [esp+4], offset sub_71044770
		mov	eax, [ecx+18h]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	[ebp+var_4C]
		jmp	loc_71049C9A
; ---------------------------------------------------------------------------

loc_71049D95:				; CODE XREF: sub_71049C30+A0j
		mov	edx, [ebp+var_40]
		mov	eax, [edx-18h]
		mov	[esp], ecx
		mov	[ebp+var_38], 4
		mov	[esp+4], eax
		call	sub_7104D360
		jmp	loc_71049CD6
; ---------------------------------------------------------------------------

loc_71049DB3:				; CODE XREF: sub_71049C30+BEj
		mov	edx, [ebp+var_40]
		mov	eax, [edx-1Ch]
		mov	[esp], ecx
		mov	[ebp+var_38], 5
		mov	[esp+4], eax
		call	sub_7104DB20
		jmp	loc_71049CF4
; ---------------------------------------------------------------------------

loc_71049DD1:				; CODE XREF: sub_71049C30+82j
		mov	edx, [ebp+var_40]
		mov	eax, [edx-14h]
		mov	[esp], ecx
		mov	[ebp+var_38], 3
		mov	[esp+4], eax
		call	sub_710497B0
		jmp	loc_71049CB8
; ---------------------------------------------------------------------------
		align 10h

loc_71049DF0:				; CODE XREF: sub_71049C30+107j
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_71049C30	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71049E18	proc near		; DATA XREF: sub_71049C30+20o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	edx, [ebp-38h]
		mov	eax, [ebp-34h]
		cmp	edx, 1
		jz	short loc_71049E7B
		cmp	edx, 2
		jz	loc_71049EB4
		cmp	edx, 3
		jz	loc_71049EED
		cmp	edx, 4
		nop
		lea	esi, [esi+0]
		jz	loc_71049F26
		mov	edx, [ebp-44h]
		mov	[ebp-60h], eax
		mov	eax, [edx+18h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jnz	short loc_71049E78
		mov	ecx, [ebp-44h]
		mov	[esp+arg_0], offset sub_71044770
		mov	eax, [ecx+18h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_71049E78:				; CODE XREF: sub_71049E18+40j
		mov	eax, [ebp-60h]

loc_71049E7B:				; CODE XREF: sub_71049E18+Cj
		mov	ecx, [ebp-44h]
		mov	[ebp-5Ch], eax
		mov	edx, [ebp-44h]
		mov	eax, [ecx+0Ch]
		add	edx, 0Ch
		test	eax, eax
		jz	short loc_71049EB1
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_71049EB1
		mov	ecx, [ebp-44h]
		mov	eax, [ecx+0Ch]
		mov	[esp+0], edx
		mov	dword ptr [ebp-38h], 0
		mov	[esp+arg_0], eax
		call	sub_710497B0

loc_71049EB1:				; CODE XREF: sub_71049E18+74j
					; sub_71049E18+7Ej
		mov	eax, [ebp-5Ch]

loc_71049EB4:				; CODE XREF: sub_71049E18+11j
		mov	ecx, [ebp-44h]
		mov	[ebp-58h], eax
		mov	edx, [ebp-44h]
		mov	eax, [ecx+8]
		add	edx, 8
		test	eax, eax
		jz	short loc_71049EEA
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_71049EEA
		mov	ecx, [ebp-44h]
		mov	eax, [ecx+8]
		mov	[esp+0], edx
		mov	dword ptr [ebp-38h], 0
		mov	[esp+arg_0], eax
		call	sub_7104D360

loc_71049EEA:				; CODE XREF: sub_71049E18+ADj
					; sub_71049E18+B7j
		mov	eax, [ebp-58h]

loc_71049EED:				; CODE XREF: sub_71049E18+1Aj
		mov	ecx, [ebp-44h]
		mov	[ebp-54h], eax
		mov	edx, [ebp-44h]
		mov	eax, [ecx+4]
		add	edx, 4
		test	eax, eax
		jz	short loc_71049F23
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_71049F23
		mov	ecx, [ebp-44h]
		mov	eax, [ecx+4]
		mov	[esp+0], edx
		mov	dword ptr [ebp-38h], 0
		mov	[esp+arg_0], eax
		call	sub_7104DB20

loc_71049F23:				; CODE XREF: sub_71049E18+E6j
					; sub_71049E18+F0j
		mov	eax, [ebp-54h]

loc_71049F26:				; CODE XREF: sub_71049E18+28j
		mov	ecx, [ebp-44h]
		mov	[ebp-50h], eax
		mov	eax, [ecx]
		test	eax, eax
		jz	short loc_71049F51
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71049F51
		mov	eax, [ecx]
		mov	[esp+0], ecx
		mov	dword ptr [ebp-38h], 0
		mov	[esp+arg_0], eax
		call	sub_7104DFE0

loc_71049F51:				; CODE XREF: sub_71049E18+118j
					; sub_71049E18+122j
		mov	eax, [ebp-50h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71049E18	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71049F70	proc near		; CODE XREF: sub_7101D010+551p
					; sub_7101D820+1D5p

var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 128h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_710525B0
		mov	[ebp+var_40], offset word_7105342E
		mov	[ebp+var_38], offset sub_7104A939
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	[ebp+var_60], edx
		mov	eax, [edx]
		cmp	eax, 1
		jz	loc_7104A427

loc_71049FB5:				; CODE XREF: sub_71049F70+4C0j
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	[ebp+var_28], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_28]
		test	byte ptr [eax+0Ch], 1
		jz	loc_7104A770

loc_71049FD0:				; CODE XREF: sub_71049F70+820j
		mov	ecx, [ebp+arg_4]
		mov	eax, [ecx+4]
		mov	[ebp+var_24], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_24]
		test	byte ptr [eax+0Ch], 1
		jz	loc_7104A835

loc_71049FEC:				; CODE XREF: sub_71049F70+8E5j
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+8]
		mov	[ebp+var_20], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_20]
		test	byte ptr [eax+0Ch], 1
		jz	loc_7104A810

loc_7104A008:				; CODE XREF: sub_71049F70+8C0j
		mov	ecx, [ebp+arg_4]
		mov	eax, [ecx+0Ch]
		mov	[ebp+var_1C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_1C]
		test	byte ptr [eax+0Ch], 1
		jnz	short loc_7104A040
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_58], 12h
		mov	[esp+4], eax
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		call	sub_710498C0

loc_7104A040:				; CODE XREF: sub_71049F70+AEj
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+10h]
		mov	[ebp+var_18], eax
		mov	eax, [edx+14h]
		mov	[ebp+var_14], eax
		mov	eax, [edx+18h]
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax+8]
		setnz	dl
		mov	eax, [ebp+var_10]
		test	byte ptr [eax+1Ch], 1
		jnz	short loc_7104A0BE
		mov	edx, [eax+8]
		cmp	edx, 1
		jz	short loc_7104A0BE
		mov	dword ptr [esp+10h], 4
		mov	dword ptr [esp+0Ch], 18h
		mov	dword ptr [esp+8], offset sub_71044770
		mov	dword ptr [esp+4], offset sub_710448C0
		mov	[esp], eax
		mov	[ebp+var_58], 11h
		call	ds:_ZN9QHashData14detach_helper2EPFvPNS_4NodeEPvEPFvS1_Eii
		mov	[ebp+var_9C], eax
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_7104A8E1

loc_7104A0B5:				; CODE XREF: sub_71049F70+985j
		mov	ecx, [ebp+var_9C]
		mov	[ebp+var_10], ecx

loc_7104A0BE:				; CODE XREF: sub_71049F70+F3j
					; sub_71049F70+FBj
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+1Ch]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax+8]
		setnz	dl
		mov	eax, [ebp+var_C]
		test	byte ptr [eax+1Ch], 1
		jnz	short loc_7104A130
		mov	edx, [eax+8]
		cmp	edx, 1
		jz	short loc_7104A130
		mov	dword ptr [esp+10h], 4
		mov	dword ptr [esp+0Ch], 18h
		mov	dword ptr [esp+8], offset sub_71044770
		mov	dword ptr [esp+4], offset sub_710448C0
		mov	[esp], eax
		mov	[ebp+var_58], 10h
		call	ds:_ZN9QHashData14detach_helper2EPFvPNS_4NodeEPvEPFvS1_Eii
		mov	[ebp+var_98], eax
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_7104A8C8

loc_7104A127:				; CODE XREF: sub_71049F70+96Cj
		mov	ecx, [ebp+var_98]
		mov	[ebp+var_C], ecx

loc_7104A130:				; CODE XREF: sub_71049F70+165j
					; sub_71049F70+16Dj
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+0Ch], 1
		mov	dword ptr [esp+8], 20h
		mov	eax, [edx]
		mov	eax, [eax+8]
		mov	dword ptr [esp], 30h
		mov	[ebp+var_58], 17h
		add	eax, 1
		mov	[esp+4], eax
		call	ds:_ZN11QVectorData4growEiiib
		mov	ecx, [ebp+arg_0]
		mov	[esp+8], eax
		mov	eax, [ecx]
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[esp+4], eax
		call	sub_7104B050
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		mov	edx, [eax+8]
		mov	[ebp+var_68], eax
		mov	ecx, [ebp+var_68]
		lea	eax, [edx+edx+1]
		shl	eax, 4
		add	ecx, eax
		mov	[ebp+var_6C], edx
		mov	edx, [ebp+var_28]
		mov	[ebp+var_88], ecx
		mov	ecx, [ebp+var_68]
		mov	[eax+ecx], edx
		lock inc dword ptr [edx]
		setnz	cl
		mov	edx, [ebp+var_68]
		mov	eax, [eax+edx]
		test	byte ptr [eax+0Ch], 1
		jz	loc_7104A8A0

loc_7104A1BA:				; CODE XREF: sub_71049F70+953j
		mov	eax, [ebp+var_6C]
		mov	ecx, [ebp+var_68]
		shl	eax, 5
		lea	edx, [eax+ecx+10h]
		lea	eax, [edx+4]
		mov	[ebp+var_8C], eax
		mov	eax, [ebp+var_24]
		mov	[edx+4], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	eax, [edx+4]
		test	byte ptr [eax+0Ch], 1
		jz	loc_7104A748

loc_7104A1E9:				; CODE XREF: sub_71049F70+7FBj
		mov	eax, [ebp+var_6C]
		mov	ecx, [ebp+var_68]
		shl	eax, 5
		lea	edx, [eax+ecx+10h]
		lea	eax, [edx+8]
		mov	[ebp+var_90], eax
		mov	eax, [ebp+var_20]
		mov	[edx+8], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	eax, [edx+8]
		test	byte ptr [eax+0Ch], 1
		jz	loc_7104A720

loc_7104A218:				; CODE XREF: sub_71049F70+7D3j
		mov	eax, [ebp+var_6C]
		mov	ecx, [ebp+var_68]
		shl	eax, 5
		lea	edx, [eax+ecx+10h]
		lea	eax, [edx+0Ch]
		mov	[ebp+var_84], eax
		mov	eax, [ebp+var_1C]
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	eax, [edx+0Ch]
		test	byte ptr [eax+0Ch], 1
		jnz	short loc_7104A266
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	edx, [ebp+var_84]
		mov	eax, [eax+8]
		mov	[ebp+var_58], 0Dh
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_710498C0

loc_7104A266:				; CODE XREF: sub_71049F70+2D1j
		mov	edx, [ebp+var_6C]
		mov	ecx, [ebp+var_68]
		mov	eax, [ebp+var_18]
		add	edx, 1
		shl	edx, 5
		mov	[edx+ecx], eax
		mov	eax, [ebp+var_14]
		add	edx, ecx
		mov	[edx+4], eax
		mov	eax, [ebp+var_10]
		mov	[edx+8], eax
		lock inc dword ptr [eax+8]
		setnz	cl
		mov	eax, [edx+8]
		test	byte ptr [eax+1Ch], 1
		jnz	short loc_7104A306
		mov	edx, [eax+8]
		cmp	edx, 1
		jz	short loc_7104A306
		mov	dword ptr [esp+10h], 4
		mov	dword ptr [esp+0Ch], 18h
		mov	dword ptr [esp+8], offset sub_71044770
		mov	dword ptr [esp+4], offset sub_710448C0
		mov	[esp], eax
		mov	[ebp+var_58], 0Ch
		call	ds:_ZN9QHashData14detach_helper2EPFvPNS_4NodeEPvEPFvS1_Eii
		mov	[ebp+var_A4], eax
		mov	eax, [ebp+var_6C]
		mov	ecx, [ebp+var_68]
		shl	eax, 5
		lea	edx, [eax+ecx+20h]
		mov	eax, [edx+8]
		lock dec dword ptr [eax+8]
		setnz	cl
		test	cl, cl
		jz	loc_7104A920

loc_7104A2F3:				; CODE XREF: sub_71049F70+9C4j
		mov	eax, [ebp+var_6C]
		mov	ecx, [ebp+var_A4]
		mov	edx, [ebp+var_68]
		shl	eax, 5
		mov	[edx+eax+28h], ecx

loc_7104A306:				; CODE XREF: sub_71049F70+324j
					; sub_71049F70+32Cj
		mov	edx, [ebp+var_6C]
		mov	ecx, [ebp+var_68]
		mov	eax, [ebp+var_C]
		shl	edx, 5
		lea	edx, [edx+ecx+20h]
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax+8]
		setnz	cl
		mov	eax, [edx+0Ch]
		test	byte ptr [eax+1Ch], 1
		jnz	short loc_7104A399
		mov	edx, [eax+8]
		cmp	edx, 1
		jz	short loc_7104A399
		mov	dword ptr [esp+10h], 4
		mov	dword ptr [esp+0Ch], 18h
		mov	dword ptr [esp+8], offset sub_71044770
		mov	dword ptr [esp+4], offset sub_710448C0
		mov	[esp], eax
		mov	[ebp+var_58], 0Bh
		call	ds:_ZN9QHashData14detach_helper2EPFvPNS_4NodeEPvEPFvS1_Eii
		mov	[ebp+var_A0], eax
		mov	eax, [ebp+var_6C]
		mov	ecx, [ebp+var_68]
		shl	eax, 5
		lea	edx, [eax+ecx+20h]
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax+8]
		setnz	cl
		test	cl, cl
		jz	loc_7104A900

loc_7104A386:				; CODE XREF: sub_71049F70+9A4j
		mov	eax, [ebp+var_6C]
		mov	ecx, [ebp+var_A0]
		mov	edx, [ebp+var_68]
		shl	eax, 5
		mov	[edx+eax+2Ch], ecx

loc_7104A399:				; CODE XREF: sub_71049F70+3B7j
					; sub_71049F70+3BFj
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_7104A680

loc_7104A3AB:				; CODE XREF: sub_71049F70+72Bj
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_7104A660

loc_7104A3BD:				; CODE XREF: sub_71049F70+70Bj
		mov	eax, [ebp+var_1C]
		test	eax, eax
		jz	short loc_7104A3D2
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7104A6A0

loc_7104A3D2:				; CODE XREF: sub_71049F70+452j
					; sub_71049F70+749j
		mov	eax, [ebp+var_20]
		test	eax, eax
		jz	short loc_7104A3E7
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7104A6E0

loc_7104A3E7:				; CODE XREF: sub_71049F70+467j
					; sub_71049F70+789j
		mov	eax, [ebp+var_24]
		test	eax, eax
		jz	short loc_7104A3FC
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7104A6C0

loc_7104A3FC:				; CODE XREF: sub_71049F70+47Cj
					; sub_71049F70+769j
		mov	eax, [ebp+var_28]
		test	eax, eax
		jz	short loc_7104A411
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7104A700

loc_7104A411:				; CODE XREF: sub_71049F70+491j
					; sub_71049F70+677j ...
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx]
		add	dword ptr [eax+8], 1
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_7104A427:				; CODE XREF: sub_71049F70+3Fj
		mov	ecx, [edx+8]
		cmp	ecx, [edx+4]
		mov	[ebp+var_64], ecx
		jge	loc_71049FB5
		mov	edx, [ebp+var_64]
		mov	eax, [ebp+var_60]
		mov	[ebp+var_AC], edx
		lea	edx, [edx+edx+1]
		shl	edx, 4
		mov	ecx, eax
		add	ecx, edx
		mov	[ebp+var_94], ecx
		mov	ecx, [ebp+arg_4]
		mov	[ebp+var_A8], eax
		mov	eax, [ecx]
		mov	ecx, [ebp+var_60]
		mov	[ecx+edx], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	ecx, [ebp+var_60]
		mov	eax, [ecx+edx]
		test	byte ptr [eax+0Ch], 1
		jz	loc_7104A7C0

loc_7104A47A:				; CODE XREF: sub_71049F70+873j
		mov	eax, [ebp+var_64]
		mov	ecx, [ebp+var_60]
		shl	eax, 5
		lea	edx, [eax+ecx+10h]
		mov	ecx, [ebp+arg_4]
		lea	eax, [edx+4]
		mov	[ebp+var_74], eax
		mov	eax, [ecx+4]
		mov	[edx+4], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	eax, [edx+4]
		test	byte ptr [eax+0Ch], 1
		jz	loc_7104A795

loc_7104A4A9:				; CODE XREF: sub_71049F70+845j
		mov	eax, [ebp+var_64]
		mov	ecx, [ebp+var_60]
		shl	eax, 5
		lea	edx, [eax+ecx+10h]
		mov	ecx, [ebp+arg_4]
		lea	eax, [edx+8]
		mov	[ebp+var_78], eax
		mov	eax, [ecx+8]
		mov	[edx+8], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	eax, [edx+8]
		test	byte ptr [eax+0Ch], 1
		jz	loc_7104A7E8

loc_7104A4D8:				; CODE XREF: sub_71049F70+898j
		mov	eax, [ebp+var_64]
		mov	ecx, [ebp+var_60]
		shl	eax, 5
		lea	edx, [eax+ecx+10h]
		mov	ecx, [ebp+arg_4]
		lea	eax, [edx+0Ch]
		mov	[ebp+var_70], eax
		mov	eax, [ecx+0Ch]
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	eax, [edx+0Ch]
		test	byte ptr [eax+0Ch], 1
		jnz	short loc_7104A523
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_58], 3
		mov	[esp+4], eax
		mov	eax, [ebp+var_70]
		mov	[esp], eax
		call	sub_710498C0

loc_7104A523:				; CODE XREF: sub_71049F70+591j
		mov	ecx, [ebp+arg_4]
		mov	edx, [ebp+var_64]
		mov	eax, [ecx+10h]
		mov	ecx, [ebp+var_60]
		add	edx, 1
		shl	edx, 5
		mov	[ecx+edx], eax
		add	edx, ecx
		mov	ecx, [ebp+arg_4]
		mov	eax, [ecx+14h]
		mov	[edx+4], eax
		mov	eax, [ecx+18h]
		mov	[edx+8], eax
		lock inc dword ptr [eax+8]
		setnz	cl
		mov	eax, [edx+8]
		test	byte ptr [eax+1Ch], 1
		jnz	short loc_7104A5C3
		mov	edx, [eax+8]
		cmp	edx, 1
		jz	short loc_7104A5C3
		mov	dword ptr [esp+10h], 4
		mov	dword ptr [esp+0Ch], 18h
		mov	dword ptr [esp+8], offset sub_71044770
		mov	dword ptr [esp+4], offset sub_710448C0
		mov	[esp], eax
		mov	[ebp+var_58], 2
		call	ds:_ZN9QHashData14detach_helper2EPFvPNS_4NodeEPvEPFvS1_Eii
		mov	[ebp+var_80], eax
		mov	eax, [ebp+var_64]
		mov	ecx, [ebp+var_60]
		shl	eax, 5
		lea	edx, [eax+ecx+20h]
		mov	eax, [edx+8]
		lock dec dword ptr [eax+8]
		setnz	cl
		test	cl, cl
		jz	loc_7104A880

loc_7104A5B3:				; CODE XREF: sub_71049F70+924j
		mov	eax, [ebp+var_64]
		mov	ecx, [ebp+var_80]
		mov	edx, [ebp+var_60]
		shl	eax, 5
		mov	[edx+eax+28h], ecx

loc_7104A5C3:				; CODE XREF: sub_71049F70+5E7j
					; sub_71049F70+5EFj
		mov	edx, [ebp+arg_4]
		mov	ecx, [ebp+var_60]
		mov	eax, [edx+1Ch]
		mov	edx, [ebp+var_64]
		shl	edx, 5
		lea	edx, [edx+ecx+20h]
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax+8]
		setnz	cl
		mov	eax, [edx+0Ch]
		test	byte ptr [eax+1Ch], 1
		jnz	loc_7104A411
		mov	edx, [eax+8]
		cmp	edx, 1
		jz	loc_7104A411
		mov	dword ptr [esp+10h], 4
		mov	dword ptr [esp+0Ch], 18h
		mov	dword ptr [esp+8], offset sub_71044770
		mov	dword ptr [esp+4], offset sub_710448C0
		mov	[esp], eax
		mov	[ebp+var_58], 1
		call	ds:_ZN9QHashData14detach_helper2EPFvPNS_4NodeEPvEPFvS1_Eii
		mov	[ebp+var_7C], eax
		mov	eax, [ebp+var_64]
		mov	ecx, [ebp+var_60]
		shl	eax, 5
		lea	edx, [eax+ecx+20h]
		mov	eax, [edx+0Ch]
		lock dec dword ptr [eax+8]
		setnz	cl
		test	cl, cl
		jz	loc_7104A860

loc_7104A64B:				; CODE XREF: sub_71049F70+904j
		mov	eax, [ebp+var_64]
		mov	ecx, [ebp+var_7C]
		mov	edx, [ebp+var_60]
		shl	eax, 5
		mov	[edx+eax+2Ch], ecx
		jmp	loc_7104A411
; ---------------------------------------------------------------------------

loc_7104A660:				; CODE XREF: sub_71049F70+447j
		mov	eax, [ebp+var_10]
		mov	dword ptr [esp+4], offset sub_71044770
		mov	[ebp+var_58], 7
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_7104A3BD
; ---------------------------------------------------------------------------

loc_7104A680:				; CODE XREF: sub_71049F70+435j
		mov	eax, [ebp+var_C]
		mov	dword ptr [esp+4], offset sub_71044770
		mov	[ebp+var_58], 6
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_7104A3AB
; ---------------------------------------------------------------------------

loc_7104A6A0:				; CODE XREF: sub_71049F70+45Cj
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_58], 8
		mov	[esp+4], eax
		lea	eax, [ebp+var_1C]
		mov	[esp], eax
		call	sub_710497B0
		jmp	loc_7104A3D2
; ---------------------------------------------------------------------------
		align 10h

loc_7104A6C0:				; CODE XREF: sub_71049F70+486j
		mov	eax, [ebp+var_24]
		mov	[ebp+var_58], 0Ah
		mov	[esp+4], eax
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		call	sub_7104DB20
		jmp	loc_7104A3FC
; ---------------------------------------------------------------------------
		align 10h

loc_7104A6E0:				; CODE XREF: sub_71049F70+471j
		mov	eax, [ebp+var_20]
		mov	[ebp+var_58], 9
		mov	[esp+4], eax
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		call	sub_7104D360
		jmp	loc_7104A3E7
; ---------------------------------------------------------------------------
		align 10h

loc_7104A700:				; CODE XREF: sub_71049F70+49Bj
		mov	eax, [ebp+var_28]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		call	sub_7104DFE0
		jmp	loc_7104A411
; ---------------------------------------------------------------------------
		align 10h

loc_7104A720:				; CODE XREF: sub_71049F70+2A2j
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	edx, [ebp+var_90]
		mov	eax, [eax+8]
		mov	[ebp+var_58], 0Eh
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_7104D470
		jmp	loc_7104A218
; ---------------------------------------------------------------------------

loc_7104A748:				; CODE XREF: sub_71049F70+273j
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	edx, [ebp+var_8C]
		mov	eax, [eax+8]
		mov	[ebp+var_58], 0Fh
		mov	[esp], edx
		mov	[esp+4], eax
		call	sub_7104DC30
		jmp	loc_7104A1E9
; ---------------------------------------------------------------------------

loc_7104A770:				; CODE XREF: sub_71049F70+5Aj
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp+4], eax
		lea	eax, [ebp+var_28]
		mov	[esp], eax
		call	sub_7104E120
		jmp	loc_71049FD0
; ---------------------------------------------------------------------------

loc_7104A795:				; CODE XREF: sub_71049F70+533j
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_58], 5
		mov	[esp+4], eax
		mov	eax, [ebp+var_74]
		mov	[esp], eax
		call	sub_7104DC30
		jmp	loc_7104A4A9
; ---------------------------------------------------------------------------
		align 10h

loc_7104A7C0:				; CODE XREF: sub_71049F70+504j
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_58], 15h
		mov	[esp+4], eax
		mov	eax, [ebp+var_94]
		mov	[esp], eax
		call	sub_7104E120
		jmp	loc_7104A47A
; ---------------------------------------------------------------------------

loc_7104A7E8:				; CODE XREF: sub_71049F70+562j
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_58], 4
		mov	[esp+4], eax
		mov	eax, [ebp+var_78]
		mov	[esp], eax
		call	sub_7104D470
		jmp	loc_7104A4D8
; ---------------------------------------------------------------------------
		align 10h

loc_7104A810:				; CODE XREF: sub_71049F70+92j
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_58], 13h
		mov	[esp+4], eax
		lea	eax, [ebp+var_20]
		mov	[esp], eax
		call	sub_7104D470
		jmp	loc_7104A008
; ---------------------------------------------------------------------------

loc_7104A835:				; CODE XREF: sub_71049F70+76j
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[ebp+var_58], 14h
		mov	[esp+4], eax
		lea	eax, [ebp+var_24]
		mov	[esp], eax
		call	sub_7104DC30
		jmp	loc_71049FEC
; ---------------------------------------------------------------------------
		align 10h

loc_7104A860:				; CODE XREF: sub_71049F70+6D5j
		mov	dword ptr [esp+4], offset sub_71044770
		mov	eax, [edx+0Ch]
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_7104A64B
; ---------------------------------------------------------------------------
		align 10h

loc_7104A880:				; CODE XREF: sub_71049F70+63Dj
		mov	dword ptr [esp+4], offset sub_71044770
		mov	eax, [edx+8]
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_7104A5B3
; ---------------------------------------------------------------------------
		align 10h

loc_7104A8A0:				; CODE XREF: sub_71049F70+244j
		mov	edx, [eax+4]
		mov	ecx, [ebp+var_88]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_58], 16h
		mov	[esp+4], eax
		call	sub_7104E120
		jmp	loc_7104A1BA
; ---------------------------------------------------------------------------

loc_7104A8C8:				; CODE XREF: sub_71049F70+1B1j
		mov	eax, [ebp+var_C]
		mov	dword ptr [esp+4], offset sub_71044770
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_7104A127
; ---------------------------------------------------------------------------

loc_7104A8E1:				; CODE XREF: sub_71049F70+13Fj
		mov	eax, [ebp+var_10]
		mov	dword ptr [esp+4], offset sub_71044770
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_7104A0B5
; ---------------------------------------------------------------------------
		align 10h

loc_7104A900:				; CODE XREF: sub_71049F70+410j
		mov	dword ptr [esp+4], offset sub_71044770
		mov	eax, [edx+0Ch]
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_7104A386
; ---------------------------------------------------------------------------
		align 10h

loc_7104A920:				; CODE XREF: sub_71049F70+37Dj
		mov	dword ptr [esp+4], offset sub_71044770
		mov	eax, [edx+8]
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_7104A2F3
sub_71049F70	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104A939	proc near		; DATA XREF: sub_71049F70+23o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-58h]
		mov	edx, [ebp-54h]
		cmp	eax, 1
		mov	[ebp-100h], edx
		jz	loc_7104AA76
		cmp	eax, 2
		jz	loc_7104AACB
		cmp	eax, 3
		jz	loc_7104AB20
		cmp	eax, 4
		jz	loc_7104AB75
		cmp	eax, 5
		nop
		jz	loc_7104AEFA
		cmp	eax, 6
		jz	loc_7104AF3B
		cmp	eax, 7
		jz	loc_7104AF7D
		cmp	eax, 8
		nop
		lea	esi, [esi+0]
		jz	loc_7104AFBF
		cmp	eax, 9
		jz	loc_7104B001
		cmp	eax, 0Ah
		jz	loc_7104ABE8
		cmp	eax, 0Bh
		nop
		lea	esi, [esi+0]
		jz	loc_7104AC36
		cmp	eax, 0Ch
		jz	loc_7104AC88
		cmp	eax, 0Dh
		jz	loc_7104ACDA
		cmp	eax, 0Eh
		nop
		lea	esi, [esi+0]
		jz	loc_7104AD2C
		cmp	eax, 0Fh
		jz	loc_7104ADA8
		cmp	eax, 10h
		jz	loc_7104ADE9
		cmp	eax, 11h
		nop
		lea	esi, [esi+0]
		jz	loc_7104AE2B
		cmp	eax, 12h
		jz	loc_7104AE6D
		cmp	eax, 13h
		jz	loc_7104AEAF
		cmp	eax, 14h
		nop
		lea	esi, [esi+0]
		jz	loc_7104ABD3
		cmp	eax, 15h
		jz	loc_7104AD81
		cmp	eax, 16h
		jz	loc_7104AD81
		mov	eax, [ebp-0ACh]
		mov	ecx, [ebp-0A8h]
		mov	[ebp-0B0h], edx
		shl	eax, 5
		lea	edx, [eax+ecx+20h]
		mov	eax, [edx+8]
		lock dec dword ptr [eax+8]
		setnz	cl
		test	cl, cl
		jnz	short loc_7104AA6A
		mov	[esp+arg_0], offset sub_71044770
		mov	eax, [edx+8]
		mov	dword ptr [ebp-58h], 0
		mov	[esp+0], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_7104AA6A:				; CODE XREF: sub_7104A939+114j
		mov	eax, [ebp-0B0h]
		mov	[ebp-100h], eax

loc_7104AA76:				; CODE XREF: sub_7104A939+12j
		mov	eax, [ebp-0ACh]
		mov	edx, [ebp-100h]
		mov	ecx, [ebp-0A8h]
		shl	eax, 5
		mov	[ebp-0B4h], edx
		lea	edx, [eax+ecx+10h]
		mov	eax, [edx+0Ch]
		test	eax, eax
		jz	short loc_7104AABF
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_7104AABF
		mov	eax, [edx+0Ch]
		mov	dword ptr [ebp-58h], 0
		mov	[esp+arg_0], eax
		mov	eax, [ebp-70h]
		mov	[esp+0], eax
		call	sub_710497B0

loc_7104AABF:				; CODE XREF: sub_7104A939+161j
					; sub_7104A939+16Bj
		mov	edx, [ebp-0B4h]
		mov	[ebp-100h], edx

loc_7104AACB:				; CODE XREF: sub_7104A939+1Bj
		mov	ecx, [ebp-100h]
		mov	eax, [ebp-0ACh]
		mov	[ebp-0B8h], ecx
		mov	ecx, [ebp-0A8h]
		shl	eax, 5
		lea	edx, [eax+ecx+10h]
		mov	eax, [edx+8]
		test	eax, eax
		jz	short loc_7104AB14
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_7104AB14
		mov	eax, [edx+8]
		mov	dword ptr [ebp-58h], 0
		mov	[esp+arg_0], eax
		mov	eax, [ebp-78h]
		mov	[esp+0], eax
		call	sub_7104D360

loc_7104AB14:				; CODE XREF: sub_7104A939+1B6j
					; sub_7104A939+1C0j
		mov	edx, [ebp-0B8h]
		mov	[ebp-100h], edx

loc_7104AB20:				; CODE XREF: sub_7104A939+24j
		mov	ecx, [ebp-100h]
		mov	eax, [ebp-0ACh]
		mov	[ebp-0BCh], ecx
		mov	ecx, [ebp-0A8h]
		shl	eax, 5
		lea	edx, [eax+ecx+10h]
		mov	eax, [edx+4]
		test	eax, eax
		jz	short loc_7104AB69
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_7104AB69
		mov	eax, [edx+4]
		mov	dword ptr [ebp-58h], 0
		mov	[esp+arg_0], eax
		mov	eax, [ebp-74h]
		mov	[esp+0], eax
		call	sub_7104DB20

loc_7104AB69:				; CODE XREF: sub_7104A939+20Bj
					; sub_7104A939+215j
		mov	edx, [ebp-0BCh]
		mov	[ebp-100h], edx

loc_7104AB75:				; CODE XREF: sub_7104A939+2Dj
		mov	ecx, [ebp-100h]
		mov	edx, [ebp-0ACh]
		mov	[ebp-0C0h], ecx
		mov	ecx, [ebp-0A8h]
		lea	eax, [edx+edx+1]
		shl	eax, 4
		mov	edx, [eax+ecx]
		test	edx, edx
		jz	short loc_7104ABC7
		lock dec dword ptr [edx]
		setnz	cl
		test	cl, cl
		jnz	short loc_7104ABC7
		mov	edx, [ebp-0A8h]
		mov	ecx, [ebp-94h]
		mov	eax, [eax+edx]
		mov	[esp+0], ecx
		mov	dword ptr [ebp-58h], 0
		mov	[esp+arg_0], eax
		call	sub_7104DFE0

loc_7104ABC7:				; CODE XREF: sub_7104A939+260j
					; sub_7104A939+26Aj
		mov	eax, [ebp-0C0h]
		mov	[ebp-100h], eax

loc_7104ABD3:				; CODE XREF: sub_7104A939+D7j
		mov	edx, [ebp-100h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7104ABE8:				; CODE XREF: sub_7104A939+69j
		mov	eax, [ebp-100h]
		mov	ecx, [ebp-68h]
		mov	[ebp-0D8h], eax
		mov	eax, [ebp-6Ch]
		shl	eax, 5
		lea	edx, [eax+ecx+20h]
		mov	eax, [edx+8]
		lock dec dword ptr [eax+8]
		setnz	cl
		test	cl, cl
		jnz	short loc_7104AC2A
		mov	[esp+arg_0], offset sub_71044770
		mov	eax, [edx+8]
		mov	dword ptr [ebp-58h], 0
		mov	[esp+0], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_7104AC2A:				; CODE XREF: sub_7104A939+2D4j
		mov	eax, [ebp-0D8h]
		mov	[ebp-100h], eax

loc_7104AC36:				; CODE XREF: sub_7104A939+77j
		mov	eax, [ebp-6Ch]
		mov	edx, [ebp-100h]
		mov	ecx, [ebp-68h]
		shl	eax, 5
		mov	[ebp-0DCh], edx
		lea	edx, [eax+ecx+10h]
		mov	eax, [edx+0Ch]
		test	eax, eax
		jz	short loc_7104AC7C
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_7104AC7C
		mov	eax, [edx+0Ch]
		mov	dword ptr [ebp-58h], 0
		mov	[esp+arg_0], eax
		mov	eax, [ebp-84h]
		mov	[esp+0], eax
		call	sub_710497B0

loc_7104AC7C:				; CODE XREF: sub_7104A939+31Bj
					; sub_7104A939+325j
		mov	edx, [ebp-0DCh]
		mov	[ebp-100h], edx

loc_7104AC88:				; CODE XREF: sub_7104A939+80j
		mov	ecx, [ebp-100h]
		mov	eax, [ebp-6Ch]
		mov	[ebp-0E0h], ecx
		mov	ecx, [ebp-68h]
		shl	eax, 5
		lea	edx, [eax+ecx+10h]
		mov	eax, [edx+8]
		test	eax, eax
		jz	short loc_7104ACCE
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_7104ACCE
		mov	eax, [edx+8]
		mov	dword ptr [ebp-58h], 0
		mov	[esp+arg_0], eax
		mov	eax, [ebp-90h]
		mov	[esp+0], eax
		call	sub_7104D360

loc_7104ACCE:				; CODE XREF: sub_7104A939+36Dj
					; sub_7104A939+377j
		mov	edx, [ebp-0E0h]
		mov	[ebp-100h], edx

loc_7104ACDA:				; CODE XREF: sub_7104A939+89j
		mov	ecx, [ebp-100h]
		mov	eax, [ebp-6Ch]
		mov	[ebp-0E4h], ecx
		mov	ecx, [ebp-68h]
		shl	eax, 5
		lea	edx, [eax+ecx+10h]
		mov	eax, [edx+4]
		test	eax, eax
		jz	short loc_7104AD20
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_7104AD20
		mov	eax, [edx+4]
		mov	dword ptr [ebp-58h], 0
		mov	[esp+arg_0], eax
		mov	eax, [ebp-8Ch]
		mov	[esp+0], eax
		call	sub_7104DB20

loc_7104AD20:				; CODE XREF: sub_7104A939+3BFj
					; sub_7104A939+3C9j
		mov	edx, [ebp-0E4h]
		mov	[ebp-100h], edx

loc_7104AD2C:				; CODE XREF: sub_7104A939+97j
		mov	ecx, [ebp-100h]
		mov	edx, [ebp-6Ch]
		mov	[ebp-0E8h], ecx
		mov	ecx, [ebp-68h]
		lea	eax, [edx+edx+1]
		shl	eax, 4
		mov	edx, [eax+ecx]
		test	edx, edx
		jz	short loc_7104AD75
		lock dec dword ptr [edx]
		setnz	cl
		test	cl, cl
		jnz	short loc_7104AD75
		mov	edx, [ebp-68h]
		mov	ecx, [ebp-88h]
		mov	eax, [eax+edx]
		mov	[esp+0], ecx
		mov	dword ptr [ebp-58h], 0
		mov	[esp+arg_0], eax
		call	sub_7104DFE0

loc_7104AD75:				; CODE XREF: sub_7104A939+411j
					; sub_7104A939+41Bj
		mov	eax, [ebp-0E8h]
		mov	[ebp-100h], eax

loc_7104AD81:				; CODE XREF: sub_7104A939+E0j
					; sub_7104A939+E9j
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_71044070
		mov	edx, [ebp-100h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7104ADA8:				; CODE XREF: sub_7104A939+A0j
		mov	eax, [ebp-100h]
		mov	[ebp-0ECh], eax
		mov	eax, [ebp-10h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104ADDD
		mov	eax, [ebp-10h]
		mov	[esp+arg_0], offset sub_71044770
		mov	dword ptr [ebp-58h], 0
		mov	[esp+0], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_7104ADDD:				; CODE XREF: sub_7104A939+487j
		mov	edx, [ebp-0ECh]
		mov	[ebp-100h], edx

loc_7104ADE9:				; CODE XREF: sub_7104A939+A9j
		mov	eax, [ebp-1Ch]
		mov	ecx, [ebp-100h]
		test	eax, eax
		mov	[ebp-0F0h], ecx
		jz	short loc_7104AE1F
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104AE1F
		mov	eax, [ebp-1Ch]
		mov	dword ptr [ebp-58h], 0
		mov	[esp+arg_0], eax
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		call	sub_710497B0

loc_7104AE1F:				; CODE XREF: sub_7104A939+4C1j
					; sub_7104A939+4CBj
		mov	eax, [ebp-0F0h]
		mov	[ebp-100h], eax

loc_7104AE2B:				; CODE XREF: sub_7104A939+B7j
		mov	eax, [ebp-20h]
		mov	edx, [ebp-100h]
		test	eax, eax
		mov	[ebp-0F4h], edx
		jz	short loc_7104AE61
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104AE61
		mov	eax, [ebp-20h]
		mov	dword ptr [ebp-58h], 0
		mov	[esp+arg_0], eax
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		call	sub_7104D360

loc_7104AE61:				; CODE XREF: sub_7104A939+503j
					; sub_7104A939+50Dj
		mov	ecx, [ebp-0F4h]
		mov	[ebp-100h], ecx

loc_7104AE6D:				; CODE XREF: sub_7104A939+C0j
		mov	eax, [ebp-100h]
		mov	[ebp-0F8h], eax
		mov	eax, [ebp-24h]
		test	eax, eax
		jz	short loc_7104AEA3
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104AEA3
		mov	eax, [ebp-24h]
		mov	dword ptr [ebp-58h], 0
		mov	[esp+arg_0], eax
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		call	sub_7104DB20

loc_7104AEA3:				; CODE XREF: sub_7104A939+545j
					; sub_7104A939+54Fj
		mov	edx, [ebp-0F8h]
		mov	[ebp-100h], edx

loc_7104AEAF:				; CODE XREF: sub_7104A939+C9j
		mov	eax, [ebp-28h]
		mov	ecx, [ebp-100h]
		test	eax, eax
		mov	[ebp-0FCh], ecx
		jz	short loc_7104AEE5
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104AEE5
		mov	eax, [ebp-28h]
		mov	dword ptr [ebp-58h], 0
		mov	[esp+arg_0], eax
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		call	sub_7104DFE0

loc_7104AEE5:				; CODE XREF: sub_7104A939+587j
					; sub_7104A939+591j
		mov	eax, [ebp-0FCh]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7104AEFA:				; CODE XREF: sub_7104A939+37j
		mov	ecx, [ebp-100h]
		mov	eax, [ebp-10h]
		mov	[ebp-0D4h], ecx
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104AF2F
		mov	eax, [ebp-10h]
		mov	[esp+arg_0], offset sub_71044770
		mov	dword ptr [ebp-58h], 0
		mov	[esp+0], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_7104AF2F:				; CODE XREF: sub_7104A939+5D9j
		mov	eax, [ebp-0D4h]
		mov	[ebp-100h], eax

loc_7104AF3B:				; CODE XREF: sub_7104A939+40j
		mov	eax, [ebp-1Ch]
		mov	edx, [ebp-100h]
		test	eax, eax
		mov	[ebp-0D0h], edx
		jz	short loc_7104AF71
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104AF71
		mov	eax, [ebp-1Ch]
		mov	dword ptr [ebp-58h], 0
		mov	[esp+arg_0], eax
		lea	eax, [ebp-1Ch]
		mov	[esp+0], eax
		call	sub_710497B0

loc_7104AF71:				; CODE XREF: sub_7104A939+613j
					; sub_7104A939+61Dj
		mov	ecx, [ebp-0D0h]
		mov	[ebp-100h], ecx

loc_7104AF7D:				; CODE XREF: sub_7104A939+49j
		mov	eax, [ebp-100h]
		mov	[ebp-0CCh], eax
		mov	eax, [ebp-20h]
		test	eax, eax
		jz	short loc_7104AFB3
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104AFB3
		mov	eax, [ebp-20h]
		mov	dword ptr [ebp-58h], 0
		mov	[esp+arg_0], eax
		lea	eax, [ebp-20h]
		mov	[esp+0], eax
		call	sub_7104D360

loc_7104AFB3:				; CODE XREF: sub_7104A939+655j
					; sub_7104A939+65Fj
		mov	edx, [ebp-0CCh]
		mov	[ebp-100h], edx

loc_7104AFBF:				; CODE XREF: sub_7104A939+57j
		mov	eax, [ebp-24h]
		mov	ecx, [ebp-100h]
		test	eax, eax
		mov	[ebp-0C8h], ecx
		jz	short loc_7104AFF5
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104AFF5
		mov	eax, [ebp-24h]
		mov	dword ptr [ebp-58h], 0
		mov	[esp+arg_0], eax
		lea	eax, [ebp-24h]
		mov	[esp+0], eax
		call	sub_7104DB20

loc_7104AFF5:				; CODE XREF: sub_7104A939+697j
					; sub_7104A939+6A1j
		mov	eax, [ebp-0C8h]
		mov	[ebp-100h], eax

loc_7104B001:				; CODE XREF: sub_7104A939+60j
		mov	eax, [ebp-28h]
		mov	edx, [ebp-100h]
		test	eax, eax
		mov	[ebp-0C4h], edx
		jz	short loc_7104B037
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104B037
		mov	eax, [ebp-28h]
		mov	dword ptr [ebp-58h], 0
		mov	[esp+arg_0], eax
		lea	eax, [ebp-28h]
		mov	[esp+0], eax
		call	sub_7104DFE0

loc_7104B037:				; CODE XREF: sub_7104A939+6D9j
					; sub_7104A939+6E3j
		mov	ecx, [ebp-0C4h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
sub_7104A939	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7104B050	proc near		; CODE XREF: sub_71049F70+206p

var_EC		= dword	ptr -0ECh
var_DC		= dword	ptr -0DCh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 10Ch
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_710533DC
		mov	[ebp+var_28], offset sub_7104B6D5
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	eax, [edx+8]
		cmp	eax, [ebp+arg_4]
		mov	[ebp+var_60], edx
		jle	short loc_7104B0A0
		mov	edx, [edx]
		cmp	edx, 1
		jz	loc_7104B51C

loc_7104B0A0:				; CODE XREF: sub_7104B050+43j
		mov	eax, [ebp+var_60]

loc_7104B0A3:				; CODE XREF: sub_7104B050+59Fj
		mov	esi, [ebp+arg_8]
		cmp	[eax+4], esi
		jz	loc_7104B4EC

loc_7104B0AF:				; CODE XREF: sub_7104B050+4AAj
		mov	eax, [ebp+arg_8]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_48], 0FFFFFFFFh
		shl	eax, 5
		add	eax, 10h
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	[ebp+var_9C], eax
		mov	[ebp+var_64], eax
		mov	[ebp+var_A8], eax
		jz	loc_7104B6AE

loc_7104B0E7:				; CODE XREF: sub_7104B050+680j
		mov	esi, [ebp+var_9C]
		movzx	edx, byte ptr [esi+0Ch]
		mov	dword ptr [esi], 1
		mov	edi, [ebp+arg_8]
		mov	dword ptr [esi+8], 0
		or	edx, 1
		mov	[esi+0Ch], dl
		mov	ecx, [ebp+arg_0]
		and	edx, 0FFFFFFFDh
		mov	[esi+4], edi
		mov	eax, [ecx]
		movzx	eax, byte ptr [eax+0Ch]
		and	eax, 2
		or	edx, eax
		mov	[esi+0Ch], dl
		and	dword ptr [esi+0Ch], 3
		mov	esi, [ebp+var_64]
		mov	[ebp+var_60], esi

loc_7104B128:				; CODE XREF: sub_7104B050+4B0j
		mov	edx, [ebp+var_60]
		mov	edi, [ebp+arg_0]
		mov	esi, [ebp+var_A8]
		mov	eax, [edx+8]
		mov	ecx, [edi]
		mov	edi, [ebp+arg_4]
		mov	edx, eax
		mov	ebx, eax
		shl	edx, 5
		lea	edx, [edx+esi+10h]
		mov	[ebp+var_54], edx
		mov	edx, [ecx+8]
		mov	[ebp+var_6C], edi
		cmp	edi, edx
		jle	short loc_7104B157
		mov	[ebp+var_6C], edx

loc_7104B157:				; CODE XREF: sub_7104B050+102j
		cmp	eax, [ebp+var_6C]
		jge	loc_7104B410
		mov	eax, ebx
		mov	edx, ds:_ZN9QHashData14detach_helper2EPFvPNS_4NodeEPvEPFvS1_Eii
		shl	eax, 5
		lea	eax, [eax+ecx+10h]
		mov	ecx, ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		mov	[ebp+var_58], eax
		mov	eax, [ebp+var_54]
		mov	[ebp+var_90], edx
		mov	[ebp+var_A0], ecx
		add	eax, 20h
		mov	[ebp+var_5C], eax
		jmp	loc_7104B341
; ---------------------------------------------------------------------------

loc_7104B192:				; CODE XREF: sub_7104B050+319j
					; sub_7104B050+33Cj
		mov	eax, [ebp+var_54]
		mov	edx, [ebp+var_58]
		mov	ecx, [ebp+var_54]
		add	eax, 4
		mov	[ebp+var_7C], eax
		mov	eax, [edx-1Ch]
		mov	[ecx+4], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ecx+4]
		test	byte ptr [eax+0Ch], 1
		jz	loc_7104B391

loc_7104B1BA:				; CODE XREF: sub_7104B050+361j
		mov	edi, [ebp+var_54]
		mov	edx, [ebp+var_58]
		mov	ecx, [ebp+var_54]
		add	edi, 8
		mov	[ebp+var_80], edi
		mov	eax, [edx-18h]
		mov	[ecx+8], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ecx+8]
		test	byte ptr [eax+0Ch], 1
		jz	loc_7104B3B6

loc_7104B1E2:				; CODE XREF: sub_7104B050+383j
		mov	esi, [ebp+var_54]
		mov	edi, [ebp+var_58]
		mov	edx, [ebp+var_54]
		add	esi, 0Ch
		mov	[ebp+var_70], esi
		mov	eax, [edi-14h]
		mov	[edx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+var_54]
		mov	eax, [ecx+0Ch]
		test	byte ptr [eax+0Ch], 1
		jnz	short loc_7104B226
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], esi
		mov	[ebp+var_48], 3
		mov	[esp+4], eax
		call	sub_710498C0

loc_7104B226:				; CODE XREF: sub_7104B050+1B7j
		mov	esi, [ebp+var_58]
		mov	edi, [ebp+var_54]
		mov	eax, [esi-10h]
		mov	[edi+10h], eax
		mov	eax, [esi-0Ch]
		mov	[edi+14h], eax
		mov	eax, [esi-8]
		mov	[edi+18h], eax
		lock inc dword ptr [eax+8]
		setnz	dl
		mov	eax, [edi+18h]
		test	byte ptr [eax+1Ch], 1
		jnz	short loc_7104B2AA
		mov	edx, [eax+8]
		cmp	edx, 1
		jz	short loc_7104B2AA
		mov	dword ptr [esp+10h], 4
		mov	dword ptr [esp+0Ch], 18h
		mov	dword ptr [esp+8], offset sub_71044770
		mov	dword ptr [esp+4], offset sub_710448C0
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	[ebp+var_90]
		mov	[ebp+var_8C], eax
		mov	eax, [edi+18h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_7104B3D8

loc_7104B29E:				; CODE XREF: sub_7104B050+39Cj
		mov	edx, [ebp+var_8C]
		mov	eax, [ebp+var_54]
		mov	[eax+18h], edx

loc_7104B2AA:				; CODE XREF: sub_7104B050+1FCj
					; sub_7104B050+204j
		mov	ecx, [ebp+var_58]
		mov	esi, [ebp+var_54]
		mov	eax, [ecx-4]
		mov	[esi+1Ch], eax
		lock inc dword ptr [eax+8]
		setnz	dl
		mov	eax, [esi+1Ch]
		test	byte ptr [eax+1Ch], 1
		jnz	short loc_7104B322
		mov	edx, [eax+8]
		cmp	edx, 1
		jz	short loc_7104B322
		mov	dword ptr [esp+10h], 4
		mov	dword ptr [esp+0Ch], 18h
		mov	dword ptr [esp+8], offset sub_71044770
		mov	dword ptr [esp+4], offset sub_710448C0
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN9QHashData14detach_helper2EPFvPNS_4NodeEPvEPFvS1_Eii
		mov	[ebp+var_88], eax
		mov	eax, [esi+1Ch]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_7104B3F1

loc_7104B316:				; CODE XREF: sub_7104B050+3B5j
		mov	eax, [ebp+var_88]
		mov	edi, [ebp+var_54]
		mov	[edi+1Ch], eax

loc_7104B322:				; CODE XREF: sub_7104B050+274j
					; sub_7104B050+27Cj ...
		mov	edx, [ebp+var_60]
		mov	ecx, [ebp+var_5C]
		add	[ebp+var_5C], 20h
		mov	eax, [edx+8]
		mov	[ebp+var_54], ecx
		add	eax, 1
		cmp	eax, [ebp+var_6C]
		mov	[edx+8], eax
		jge	loc_7104B410

loc_7104B341:				; CODE XREF: sub_7104B050+13Dj
		mov	esi, [ebp+var_54]
		add	[ebp+var_58], 20h
		test	esi, esi
		jz	short loc_7104B322
		mov	esi, [ebp+var_54]
		mov	edi, [ebp+var_58]
		mov	[ebp+var_84], esi
		mov	eax, [edi-20h]
		mov	[esi], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [esi]
		test	byte ptr [eax+0Ch], 1
		jnz	loc_7104B192
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], esi
		mov	[ebp+var_48], 0Ch
		mov	[esp+4], eax
		call	sub_7104E120
		jmp	loc_7104B192
; ---------------------------------------------------------------------------

loc_7104B391:				; CODE XREF: sub_7104B050+164j
		mov	edx, [eax+4]
		mov	esi, [ebp+var_7C]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], esi
		mov	[ebp+var_48], 5
		mov	[esp+4], eax
		call	sub_7104DC30
		jmp	loc_7104B1BA
; ---------------------------------------------------------------------------

loc_7104B3B6:				; CODE XREF: sub_7104B050+18Cj
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], edi
		mov	[ebp+var_48], 4
		mov	[esp+4], eax
		call	sub_7104D470
		jmp	loc_7104B1E2
; ---------------------------------------------------------------------------

loc_7104B3D8:				; CODE XREF: sub_7104B050+248j
		mov	dword ptr [esp+4], offset sub_71044770
		mov	eax, [edi+18h]
		mov	[esp], eax
		call	[ebp+var_A0]
		jmp	loc_7104B29E
; ---------------------------------------------------------------------------

loc_7104B3F1:				; CODE XREF: sub_7104B050+2C0j
		mov	dword ptr [esp+4], offset sub_71044770
		mov	eax, [esi+1Ch]
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_7104B316
; ---------------------------------------------------------------------------
		align 10h

loc_7104B410:				; CODE XREF: sub_7104B050+10Aj
					; sub_7104B050+2EBj
		cmp	eax, [ebp+arg_4]
		jge	loc_7104B4B2
		mov	esi, ds:_ZN9QHashData11shared_nullE
		mov	ebx, ds:_ZN11QVectorData11shared_nullE
		mov	edx, [ebp+var_54]
		mov	[ebp+var_DC], esi
		add	esi, 8
		mov	[ebp+var_EC], esi
		mov	esi, [ebp+var_60]
		mov	eax, ebx
		lea	esi, [esi+0]

loc_7104B440:				; CODE XREF: sub_7104B050+460j
		test	edx, edx
		jz	short loc_7104B49F
		mov	[edx], ebx
		lock inc dword ptr [eax]
		setnz	cl
		mov	[edx+4], ebx
		lock inc dword ptr [eax]
		setnz	cl
		mov	[edx+8], ebx
		lock inc dword ptr [eax]
		setnz	cl
		mov	[edx+0Ch], ebx
		lock inc dword ptr [eax]
		setnz	cl
		mov	dword ptr [edx+10h], 0
		mov	dword ptr [edx+14h], 0
		mov	edi, [ebp+var_DC]
		mov	[edx+18h], edi
		mov	ecx, [ebp+var_EC]
		lock inc dword ptr [ecx]
		setnz	cl
		mov	edi, [ebp+var_DC]
		mov	[edx+1Ch], edi
		mov	ecx, [ebp+var_EC]
		lock inc dword ptr [ecx]
		setnz	cl

loc_7104B49F:				; CODE XREF: sub_7104B050+3F2j
		mov	edi, [esi+8]
		add	edx, 20h
		mov	ecx, [ebp+arg_4]
		add	edi, 1
		cmp	edi, ecx
		mov	[esi+8], edi
		jl	short loc_7104B440

loc_7104B4B2:				; CODE XREF: sub_7104B050+3C3j
		mov	ecx, [ebp+var_60]
		mov	esi, [ebp+arg_4]
		mov	edi, [ebp+arg_0]
		mov	[ecx+8], esi
		mov	eax, [edi]
		cmp	eax, ecx
		jz	short loc_7104B4D6
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7104B505

loc_7104B4CE:				; CODE XREF: sub_7104B050+4CAj
		mov	edx, [ebp+var_60]
		mov	eax, [ebp+arg_0]
		mov	[eax], edx

loc_7104B4D6:				; CODE XREF: sub_7104B050+472j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 10Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_7104B4EC:				; CODE XREF: sub_7104B050+59j
		mov	eax, [eax]
		mov	edi, [ebp+var_60]
		cmp	eax, 1
		mov	[ebp+var_A8], edi
		jnz	loc_7104B0AF
		jmp	loc_7104B128
; ---------------------------------------------------------------------------

loc_7104B505:				; CODE XREF: sub_7104B050+47Cj
		mov	eax, [edi]
		mov	[esp], edi
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_71049C30
		jmp	short loc_7104B4CE
; ---------------------------------------------------------------------------

loc_7104B51C:				; CODE XREF: sub_7104B050+4Aj
		mov	esi, [ebp+arg_0]
		lea	eax, [eax+eax+1]
		shl	eax, 4
		mov	edi, ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		add	eax, [esi]
		mov	[ebp+var_A4], edi
		sub	eax, 20h
		mov	[ebp+var_68], eax
		jmp	loc_7104B5F5
; ---------------------------------------------------------------------------
		align 10h

loc_7104B540:				; CODE XREF: sub_7104B050+5B7j
					; sub_7104B050+5DBj
		mov	edx, [ebp+var_78]
		mov	eax, [edx+18h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	loc_7104B630

loc_7104B555:				; CODE XREF: sub_7104B050+5FEj
		mov	edx, [ebp+var_68]
		mov	ecx, [ebp+var_78]
		mov	eax, [edx+0Ch]
		add	ecx, 0Ch
		test	eax, eax
		jz	short loc_7104B573
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7104B690

loc_7104B573:				; CODE XREF: sub_7104B050+513j
					; sub_7104B050+659j
		mov	edx, [ebp+var_68]
		mov	ecx, [ebp+var_78]
		mov	eax, [edx+8]
		add	ecx, 8
		test	eax, eax
		jz	short loc_7104B591
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7104B653

loc_7104B591:				; CODE XREF: sub_7104B050+531j
					; sub_7104B050+61Cj
		mov	edx, [ebp+var_68]
		mov	ecx, [ebp+var_78]
		mov	eax, [edx+4]
		add	ecx, 4
		test	eax, eax
		jz	short loc_7104B5AF
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	loc_7104B671

loc_7104B5AF:				; CODE XREF: sub_7104B050+54Fj
					; sub_7104B050+63Aj
		mov	edi, [ebp+var_68]
		mov	eax, [edi]
		test	eax, eax
		jz	short loc_7104B5DA
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104B5DA
		mov	eax, [edi]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		mov	eax, [ebp+var_78]
		mov	[esp], eax
		call	sub_7104DFE0

loc_7104B5DA:				; CODE XREF: sub_7104B050+566j
					; sub_7104B050+570j
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_4]
		mov	eax, [edx]
		sub	dword ptr [eax+8], 1
		mov	eax, [edx]
		sub	[ebp+var_68], 20h
		cmp	[eax+8], ecx
		jle	loc_7104B0A3

loc_7104B5F5:				; CODE XREF: sub_7104B050+4EAj
		mov	eax, [ebp+var_68]
		mov	[ebp+var_78], eax
		mov	eax, [eax+1Ch]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jnz	loc_7104B540
		mov	ecx, [ebp+var_68]
		mov	dword ptr [esp+4], offset sub_71044770
		mov	eax, [ecx+1Ch]
		mov	[ebp+var_48], 6
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	loc_7104B540
; ---------------------------------------------------------------------------

loc_7104B630:				; CODE XREF: sub_7104B050+4FFj
		mov	ecx, [ebp+var_78]
		mov	dword ptr [esp+4], offset sub_71044770
		mov	eax, [ecx+18h]
		mov	[ebp+var_48], 7
		mov	[esp], eax
		call	[ebp+var_A4]
		jmp	loc_7104B555
; ---------------------------------------------------------------------------

loc_7104B653:				; CODE XREF: sub_7104B050+53Bj
		mov	esi, [ebp+var_68]
		mov	eax, [esi+8]
		mov	[esp], ecx
		mov	[ebp+var_48], 9
		mov	[esp+4], eax
		call	sub_7104D360
		jmp	loc_7104B591
; ---------------------------------------------------------------------------

loc_7104B671:				; CODE XREF: sub_7104B050+559j
		mov	esi, [ebp+var_68]
		mov	eax, [esi+4]
		mov	[esp], ecx
		mov	[ebp+var_48], 0Ah
		mov	[esp+4], eax
		call	sub_7104DB20
		jmp	loc_7104B5AF
; ---------------------------------------------------------------------------
		align 10h

loc_7104B690:				; CODE XREF: sub_7104B050+51Dj
		mov	esi, [ebp+var_68]
		mov	eax, [esi+0Ch]
		mov	[esp], ecx
		mov	[ebp+var_48], 8
		mov	[esp+4], eax
		call	sub_710497B0
		jmp	loc_7104B573
; ---------------------------------------------------------------------------

loc_7104B6AE:				; CODE XREF: sub_7104B050+91j
		mov	eax, ds:_Z9qBadAllocv
		mov	[ebp+var_50], eax
		call	eax ; _Z9qBadAllocv
		mov	edx, [ebp+var_9C]
		mov	[ebp+var_64], edx
		call	[ebp+var_50]
		mov	ecx, [ebp+var_9C]
		mov	[ebp+var_A8], ecx
		jmp	loc_7104B0E7
sub_7104B050	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104B6D5	proc near		; DATA XREF: sub_7104B050+26o

arg_0		= dword	ptr  4

		add	ebp, 18h
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-0D4h], edx
		jz	loc_7104B794
		cmp	eax, 2
		jz	loc_7104B7DC
		cmp	eax, 3
		jz	loc_7104B824
		cmp	eax, 4
		jz	loc_7104B86C
		cmp	eax, 5
		nop
		lea	esi, [esi+0]
		jz	loc_7104B8E4
		cmp	eax, 6
		jz	loc_7104B928
		cmp	eax, 7
		jz	loc_7104B970
		cmp	eax, 8
		nop
		lea	esi, [esi+0]
		jz	loc_7104B9BB
		cmp	eax, 9
		jz	loc_7104BA06
		cmp	eax, 0Ah
		jz	loc_7104BA52
		cmp	eax, 0Bh
		nop
		lea	esi, [esi+0]
		jz	loc_7104B8B5
		mov	ecx, [ebp-54h]
		mov	[ebp-0ACh], edx
		mov	eax, [ecx+18h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104B788
		mov	[esp+arg_0], offset sub_71044770
		mov	eax, [ecx+18h]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_7104B788:				; CODE XREF: sub_7104B6D5+96j
		mov	esi, [ebp-0ACh]
		mov	[ebp-0D4h], esi

loc_7104B794:				; CODE XREF: sub_7104B6D5+12j
		mov	edi, [ebp-0D4h]
		mov	edx, [ebp-54h]
		mov	[ebp-0B0h], edi
		mov	eax, [edx+0Ch]
		test	eax, eax
		jz	short loc_7104B7D0
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104B7D0
		mov	ecx, [ebp-54h]
		mov	esi, [ebp-70h]
		mov	eax, [ecx+0Ch]
		mov	[esp+0], esi
		mov	dword ptr [ebp-48h], 0
		mov	[esp+arg_0], eax
		call	sub_710497B0

loc_7104B7D0:				; CODE XREF: sub_7104B6D5+D3j
					; sub_7104B6D5+DDj
		mov	edi, [ebp-0B0h]
		mov	[ebp-0D4h], edi

loc_7104B7DC:				; CODE XREF: sub_7104B6D5+1Bj
		mov	eax, [ebp-0D4h]
		mov	edx, [ebp-54h]
		mov	[ebp-0B4h], eax
		mov	eax, [edx+8]
		test	eax, eax
		jz	short loc_7104B818
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104B818
		mov	ecx, [ebp-54h]
		mov	esi, [ebp-80h]
		mov	eax, [ecx+8]
		mov	[esp+0], esi
		mov	dword ptr [ebp-48h], 0
		mov	[esp+arg_0], eax
		call	sub_7104D360

loc_7104B818:				; CODE XREF: sub_7104B6D5+11Bj
					; sub_7104B6D5+125j
		mov	edi, [ebp-0B4h]
		mov	[ebp-0D4h], edi

loc_7104B824:				; CODE XREF: sub_7104B6D5+24j
		mov	eax, [ebp-0D4h]
		mov	edx, [ebp-54h]
		mov	[ebp-0B8h], eax
		mov	eax, [edx+4]
		test	eax, eax
		jz	short loc_7104B860
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104B860
		mov	ecx, [ebp-54h]
		mov	esi, [ebp-7Ch]
		mov	eax, [ecx+4]
		mov	[esp+0], esi
		mov	dword ptr [ebp-48h], 0
		mov	[esp+arg_0], eax
		call	sub_7104DB20

loc_7104B860:				; CODE XREF: sub_7104B6D5+163j
					; sub_7104B6D5+16Dj
		mov	edi, [ebp-0B8h]
		mov	[ebp-0D4h], edi

loc_7104B86C:				; CODE XREF: sub_7104B6D5+2Dj
		mov	eax, [ebp-0D4h]
		mov	edx, [ebp-54h]
		mov	[ebp-0BCh], eax
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_7104B8A9
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104B8A9
		mov	ecx, [ebp-54h]
		mov	esi, [ebp-84h]
		mov	eax, [ecx]
		mov	[esp+0], esi
		mov	dword ptr [ebp-48h], 0
		mov	[esp+arg_0], eax
		call	sub_7104DFE0

loc_7104B8A9:				; CODE XREF: sub_7104B6D5+1AAj
					; sub_7104B6D5+1B4j
		mov	edi, [ebp-0BCh]
		mov	[ebp-0D4h], edi

loc_7104B8B5:				; CODE XREF: sub_7104B6D5+7Bj
		mov	esi, [ebp-0D4h]
		mov	[esp+0], esi
		call	sub_71051CE0
		mov	edi, [ebp-0A8h]
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-48h], 0Bh
		mov	[esp+arg_0], edi
		mov	[esp+0], eax
		call	sub_71049C30
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_7104B8E4:				; CODE XREF: sub_7104B6D5+3Bj
		mov	esi, [ebp-0D4h]
		mov	edi, [ebp-78h]
		mov	[ebp-0D0h], esi
		mov	eax, [edi+18h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104B91C
		mov	[esp+arg_0], offset sub_71044770
		mov	eax, [edi+18h]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE

loc_7104B91C:				; CODE XREF: sub_7104B6D5+22Aj
		mov	eax, [ebp-0D0h]
		mov	[ebp-0D4h], eax

loc_7104B928:				; CODE XREF: sub_7104B6D5+44j
		mov	esi, [ebp-0D4h]
		mov	edi, [ebp-78h]
		mov	edx, [ebp-78h]
		mov	[ebp-0CCh], esi
		mov	eax, [edi+0Ch]
		add	edx, 0Ch
		test	eax, eax
		jz	short loc_7104B964
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_7104B964
		mov	eax, [edi+0Ch]
		mov	[esp+0], edx
		mov	dword ptr [ebp-48h], 0
		mov	[esp+arg_0], eax
		call	sub_710497B0

loc_7104B964:				; CODE XREF: sub_7104B6D5+26Dj
					; sub_7104B6D5+277j
		mov	eax, [ebp-0CCh]
		mov	[ebp-0D4h], eax

loc_7104B970:				; CODE XREF: sub_7104B6D5+4Dj
		mov	edi, [ebp-0D4h]
		mov	ecx, [ebp-78h]
		mov	edx, [ebp-78h]
		mov	[ebp-0C8h], edi
		mov	eax, [ecx+8]
		add	edx, 8
		test	eax, eax
		jz	short loc_7104B9AF
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_7104B9AF
		mov	esi, [ebp-78h]
		mov	eax, [esi+8]
		mov	[esp+0], edx
		mov	dword ptr [ebp-48h], 0
		mov	[esp+arg_0], eax
		call	sub_7104D360

loc_7104B9AF:				; CODE XREF: sub_7104B6D5+2B5j
					; sub_7104B6D5+2BFj
		mov	edi, [ebp-0C8h]
		mov	[ebp-0D4h], edi

loc_7104B9BB:				; CODE XREF: sub_7104B6D5+5Bj
		mov	edi, [ebp-0D4h]
		mov	ecx, [ebp-78h]
		mov	edx, [ebp-78h]
		mov	[ebp-0C4h], edi
		mov	eax, [ecx+4]
		add	edx, 4
		test	eax, eax
		jz	short loc_7104B9FA
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_7104B9FA
		mov	esi, [ebp-78h]
		mov	eax, [esi+4]
		mov	[esp+0], edx
		mov	dword ptr [ebp-48h], 0
		mov	[esp+arg_0], eax
		call	sub_7104DB20

loc_7104B9FA:				; CODE XREF: sub_7104B6D5+300j
					; sub_7104B6D5+30Aj
		mov	edi, [ebp-0C4h]
		mov	[ebp-0D4h], edi

loc_7104BA06:				; CODE XREF: sub_7104B6D5+64j
		mov	edi, [ebp-0D4h]
		mov	edx, [ebp-78h]
		mov	[ebp-0C0h], edi
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_7104BA3D
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104BA3D
		mov	ecx, [ebp-78h]
		mov	eax, [ecx]
		mov	[esp+0], ecx
		mov	dword ptr [ebp-48h], 0
		mov	[esp+arg_0], eax
		call	sub_7104DFE0

loc_7104BA3D:				; CODE XREF: sub_7104B6D5+344j
					; sub_7104B6D5+34Ej
		mov	esi, [ebp-0C0h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], esi
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7104BA52:				; CODE XREF: sub_7104B6D5+6Dj
		mov	dword ptr [ebp-48h], 0
		call	sub_71051FB0
		mov	edx, [ebp-0D4h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_7104B6D5	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7104BA80	proc near		; CODE XREF: sub_7101BB40+43Bp
					; sub_7101C1C5+F7p ...

var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_710530B0
		mov	[ebp+var_18], offset sub_7104BBA3
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	ecx, [ebp+arg_4]
		mov	edx, [ebp+arg_4]
		mov	eax, [ecx+8]
		add	edx, 10h
		mov	[ebp+var_48], edx
		lea	eax, [ecx+eax*4+10h]
		mov	[ebp+var_40], eax

loc_7104BAC5:				; CODE XREF: sub_7104BA80+5Cj
					; sub_7104BA80+66j ...
		mov	edx, [ebp+var_48]
		cmp	[ebp+var_40], edx
		jz	loc_7104BB60

loc_7104BAD1:				; CODE XREF: sub_7104BA80+DAj
		sub	[ebp+var_40], 4
		mov	edx, [ebp+var_40]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_7104BAC5
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104BAC5
		mov	ecx, [ebp+var_40]
		mov	ecx, [ecx]
		test	ecx, ecx
		mov	[ebp+var_44], ecx
		jz	short loc_7104BAC5
		mov	eax, ecx
		add	eax, 10h
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_ZN8QVariantD1Ev
		mov	edx, [ebp+var_44]
		mov	ecx, [ebp+var_44]
		mov	eax, [edx+0Ch]
		add	ecx, 0Ch
		test	eax, eax
		jz	short loc_7104BB23
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7104BB88

loc_7104BB23:				; CODE XREF: sub_7104BA80+97j
					; sub_7104BA80+121j
		mov	edx, [ebp+var_44]
		mov	eax, [edx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104BB49
		mov	ecx, [ebp+var_44]
		mov	eax, [ecx+4]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7104BB49:				; CODE XREF: sub_7104BA80+B1j
		mov	eax, [ebp+var_44]
		mov	[esp], eax
		call	sub_710517D0
		mov	edx, [ebp+var_48]
		cmp	[ebp+var_40], edx
		jnz	loc_7104BAD1

loc_7104BB60:				; CODE XREF: sub_7104BA80+4Bj
		mov	ecx, [ebp+arg_4]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], ecx
		call	ds:_ZN11QVectorData4freeEPS_i
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_7104BB88:				; CODE XREF: sub_7104BA80+A1j
		mov	edx, [ebp+var_44]
		mov	eax, [edx+0Ch]
		mov	[esp], ecx
		mov	[ebp+var_38], 2
		mov	[esp+4], eax
		call	sub_7104CBD0
		jmp	short loc_7104BB23
sub_7104BA80	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104BBA3	proc near		; DATA XREF: sub_7104BA80+20o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-50h], eax
		jz	short loc_7104BBEE
		mov	ecx, [ebp-44h]
		mov	[ebp-4Ch], eax
		mov	edx, [ebp-44h]
		mov	eax, [ecx+0Ch]
		add	edx, 0Ch
		test	eax, eax
		jz	short loc_7104BBE8
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_7104BBE8
		mov	ecx, [ebp-44h]
		mov	eax, [ecx+0Ch]
		mov	[esp+0], edx
		mov	dword ptr [ebp-38h], 0
		mov	[esp+arg_0], eax
		call	sub_7104CBD0

loc_7104BBE8:				; CODE XREF: sub_7104BBA3+20j
					; sub_7104BBA3+2Aj
		mov	eax, [ebp-4Ch]
		mov	[ebp-50h], eax

loc_7104BBEE:				; CODE XREF: sub_7104BBA3+Dj
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 4
		mov	[esp+0], eax
		call	sub_710477B0
		mov	ecx, [ebp-50h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
sub_7104BBA3	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7104BC20	proc near		; CODE XREF: sub_710448C0+C4p
					; sub_7104D470+181p ...

var_8C		= dword	ptr -8Ch
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 9Ch
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_710530B8
		mov	[ebp+var_28], offset sub_7104BF4D
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	eax, [edx+8]
		cmp	eax, [ebp+arg_4]
		mov	[ebp+var_68], edx
		jle	short loc_7104BC70
		mov	edx, [edx]
		cmp	edx, 1
		jz	loc_7104BE5E

loc_7104BC70:				; CODE XREF: sub_7104BC20+43j
		mov	eax, [ebp+var_68]

loc_7104BC73:				; CODE XREF: sub_7104BC20+293j
		mov	ebx, [ebp+arg_8]
		cmp	[eax+4], ebx
		jz	loc_7104BE2E

loc_7104BC7F:				; CODE XREF: sub_7104BC20+219j
		mov	ecx, [ebp+arg_8]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_48], 0FFFFFFFFh
		lea	eax, ds:10h[ecx*4]
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	[ebp+var_78], eax
		mov	[ebp+var_6C], eax
		mov	[ebp+var_7C], eax
		jz	loc_7104BF31

loc_7104BCB2:				; CODE XREF: sub_7104BC20+328j
		mov	ecx, [ebp+var_78]
		movzx	eax, byte ptr [ecx+0Ch]
		mov	dword ptr [ecx], 1
		mov	ebx, [ebp+arg_8]
		mov	dword ptr [ecx+8], 0
		or	eax, 1
		mov	[ecx+0Ch], al
		and	eax, 0FFFFFFFDh
		mov	[ecx+4], ebx
		mov	ecx, [ebp+arg_0]
		mov	ebx, [ebp+var_78]
		mov	edx, [ecx]
		movzx	edx, byte ptr [edx+0Ch]
		and	edx, 2
		or	eax, edx
		mov	[ebx+0Ch], al
		and	dword ptr [ebx+0Ch], 3
		mov	eax, [ebp+var_6C]
		mov	[ebp+var_68], eax

loc_7104BCF3:				; CODE XREF: sub_7104BC20+21Fj
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+var_68]
		mov	ecx, [edx]
		mov	edx, [ebx+8]
		mov	ebx, [ebp+var_7C]
		mov	esi, [ecx+8]
		mov	edi, edx
		lea	eax, [ebx+edx*4+10h]
		mov	ebx, [ebp+arg_4]
		cmp	ebx, esi
		jle	short loc_7104BD13
		mov	ebx, esi

loc_7104BD13:				; CODE XREF: sub_7104BC20+EFj
		cmp	edx, ebx
		jge	short loc_7104BD50
		mov	esi, [ebp+var_68]
		lea	ecx, [ecx+edi*4+10h]
		mov	[ebp+var_8C], ebx

loc_7104BD24:				; CODE XREF: sub_7104BC20+12Ej
		add	eax, 4
		add	ecx, 4
		cmp	eax, 4
		jz	short loc_7104BD3F
		mov	edx, [ecx-4]
		test	edx, edx
		mov	[eax-4], edx
		jz	short loc_7104BD3F
		lock inc dword ptr [edx]
		setnz	bl

loc_7104BD3F:				; CODE XREF: sub_7104BC20+10Dj
					; sub_7104BC20+117j
		mov	edx, [esi+8]
		add	edx, 1
		cmp	edx, [ebp+var_8C]
		mov	[esi+8], edx
		jl	short loc_7104BD24

loc_7104BD50:				; CODE XREF: sub_7104BC20+F5j
		cmp	edx, [ebp+arg_4]
		jge	loc_7104BDF4
		mov	edx, ds:_ZN7QString11shared_nullE
		mov	ecx, ds:_ZN11QVectorData11shared_nullE
		mov	[ebp+var_64], eax
		mov	[ebp+var_58], edx
		mov	[ebp+var_5C], edx
		mov	[ebp+var_50], ecx
		mov	[ebp+var_54], ecx

loc_7104BD74:				; CODE XREF: sub_7104BC20+1D2j
		mov	ebx, [ebp+var_64]
		test	ebx, ebx
		jz	short loc_7104BDDF
		mov	dword ptr [esp], 28h ; size_t
		mov	[ebp+var_48], 4
		call	sub_710517F0
		mov	dword ptr [eax], 0
		mov	ebx, [ebp+var_58]
		mov	ecx, [ebp+var_5C]
		mov	[eax+4], ebx
		lock inc dword ptr [ecx]
		setnz	dl
		mov	ebx, [ebp+var_50]
		mov	dword ptr [eax+8], 0
		mov	[eax+0Ch], ebx
		mov	ecx, [ebp+var_54]
		lock inc dword ptr [ecx]
		setnz	dl
		mov	edx, [eax+18h]
		mov	dword ptr [eax+10h], 0
		mov	byte ptr [eax+20h], 0
		and	edx, 0C0000000h
		mov	[eax+18h], edx
		mov	byte ptr [eax+1Bh], 80h
		mov	ebx, [ebp+var_64]
		mov	[ebx], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_7104BDDF:				; CODE XREF: sub_7104BC20+159j
		mov	edx, [ebp+var_68]
		add	[ebp+var_64], 4
		mov	eax, [edx+8]
		add	eax, 1
		cmp	eax, [ebp+arg_4]
		mov	[edx+8], eax
		jl	short loc_7104BD74

loc_7104BDF4:				; CODE XREF: sub_7104BC20+133j
		mov	ecx, [ebp+var_68]
		mov	ebx, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		mov	[ecx+8], ebx
		mov	eax, [edx]
		cmp	ecx, eax
		jz	short loc_7104BE18
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7104BE44

loc_7104BE10:				; CODE XREF: sub_7104BC20+23Cj
		mov	eax, [ebp+var_68]
		mov	ebx, [ebp+arg_0]
		mov	[ebx], eax

loc_7104BE18:				; CODE XREF: sub_7104BC20+1E4j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 9Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_7104BE2E:				; CODE XREF: sub_7104BC20+59j
		mov	eax, [eax]
		mov	edx, [ebp+var_68]
		cmp	eax, 1
		mov	[ebp+var_7C], edx
		jnz	loc_7104BC7F
		jmp	loc_7104BCF3
; ---------------------------------------------------------------------------

loc_7104BE44:				; CODE XREF: sub_7104BC20+1EEj
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_7104BA80
		jmp	short loc_7104BE10
; ---------------------------------------------------------------------------

loc_7104BE5E:				; CODE XREF: sub_7104BC20+4Aj
		mov	ebx, [ebp+arg_0]
		lea	eax, ds:10h[eax*4]
		mov	ebx, [ebx]
		add	eax, ebx
		mov	[ebp+var_74], eax
		jmp	short loc_7104BEB9
; ---------------------------------------------------------------------------

loc_7104BE71:				; CODE XREF: sub_7104BC20+2DFj
					; sub_7104BC20+2EDj ...
		mov	edx, [ebp+var_70]
		mov	eax, [edx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104BE97
		mov	ecx, [ebp+var_70]
		mov	eax, [ecx+4]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7104BE97:				; CODE XREF: sub_7104BC20+25Fj
		mov	ebx, [ebp+var_70]
		mov	[esp], ebx
		call	sub_710517D0

loc_7104BEA2:				; CODE XREF: sub_7104BC20+2A4j
					; sub_7104BC20+2AEj ...
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_4]
		mov	eax, [edx]
		sub	dword ptr [eax+8], 1
		mov	eax, [edx]
		cmp	[eax+8], ecx
		jle	loc_7104BC73

loc_7104BEB9:				; CODE XREF: sub_7104BC20+24Fj
		sub	[ebp+var_74], 4
		mov	edx, [ebp+var_74]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_7104BEA2
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104BEA2
		mov	ecx, [ebp+var_74]
		mov	ecx, [ecx]
		test	ecx, ecx
		mov	[ebp+var_70], ecx
		jz	short loc_7104BEA2
		mov	eax, ecx
		add	eax, 10h
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN8QVariantD1Ev
		mov	edx, [ebp+var_70]
		mov	ecx, [ebp+var_70]
		mov	eax, [edx+0Ch]
		add	ecx, 0Ch
		test	eax, eax
		jz	loc_7104BE71
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7104BE71
		mov	ebx, [ebp+var_70]
		mov	eax, [ebx+0Ch]
		mov	[esp], ecx
		mov	[ebp+var_48], 2
		mov	[esp+4], eax
		call	sub_7104CBD0
		jmp	loc_7104BE71
; ---------------------------------------------------------------------------

loc_7104BF31:				; CODE XREF: sub_7104BC20+8Cj
		mov	ebx, ds:_Z9qBadAllocv
		call	ebx ; _Z9qBadAllocv
		mov	eax, [ebp+var_78]
		mov	[ebp+var_6C], eax
		nop
		call	ebx ; _Z9qBadAllocv
		mov	edx, [ebp+var_78]
		mov	[ebp+var_7C], edx
		jmp	loc_7104BCB2
sub_7104BC20	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104BF4D	proc near		; DATA XREF: sub_7104BC20+26o

arg_0		= dword	ptr  4

		add	ebp, 18h
		mov	eax, [ebp-48h]
		mov	ebx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-84h], ebx
		jz	short loc_7104BFAE
		cmp	eax, 2
		jz	short loc_7104BFD8
		cmp	eax, 3
		jz	loc_7104BFF9
		mov	ecx, [ebp-70h]
		mov	[ebp-80h], ebx
		mov	edx, [ebp-70h]
		mov	eax, [ecx+0Ch]
		add	edx, 0Ch
		test	eax, eax
		jz	short loc_7104BFA5
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_7104BFA5
		mov	ebx, [ebp-70h]
		mov	eax, [ebx+0Ch]
		mov	[esp+0], edx
		mov	dword ptr [ebp-48h], 0
		mov	[esp+arg_0], eax
		call	sub_7104CBD0

loc_7104BFA5:				; CODE XREF: sub_7104BF4D+33j
					; sub_7104BF4D+3Dj
		mov	eax, [ebp-80h]
		mov	[ebp-84h], eax

loc_7104BFAE:				; CODE XREF: sub_7104BF4D+12j
		mov	eax, [ebp-70h]
		mov	dword ptr [ebp-48h], 0
		add	eax, 4
		mov	[esp+0], eax
		call	sub_710477B0
		mov	eax, [ebp-84h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7104BFD8:				; CODE XREF: sub_7104BF4D+17j
		mov	dword ptr [ebp-48h], 0
		call	sub_71051FB0
		mov	edx, [ebp-84h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7104BFF9:				; CODE XREF: sub_7104BF4D+1Cj
		mov	ecx, [ebp-84h]
		mov	[esp+0], ecx
		call	sub_71051CE0
		mov	ebx, [ebp-7Ch]
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-48h], 3
		mov	[esp+arg_0], ebx
		mov	[esp+0], eax
		call	sub_7104BA80
		call	sub_710524F0
sub_7104BF4D	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7104C030	proc near		; CODE XREF: sub_7104C230+329p
					; sub_7104C680+15Bp ...

var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_710531C8
		mov	[ebp+var_18], offset sub_7104C198
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	ecx, [ebp+arg_4]
		mov	edx, [ebp+arg_4]
		mov	eax, [ecx+8]
		add	edx, 10h
		mov	[ebp+var_48], edx
		lea	eax, [eax+eax*4]
		lea	eax, [ecx+eax*4+10h]
		mov	[ebp+var_40], eax
		jmp	short loc_7104C0AA
; ---------------------------------------------------------------------------
		align 10h

loc_7104C080:				; CODE XREF: sub_7104C030+D7j
					; sub_7104C030+F6j
		mov	edx, [ebp+var_40]
		mov	eax, [edx-14h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104C0A6
		mov	ecx, [ebp+var_40]
		mov	eax, [ecx-14h]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7104C0A6:				; CODE XREF: sub_7104C030+5Ej
		sub	[ebp+var_40], 14h

loc_7104C0AA:				; CODE XREF: sub_7104C030+48j
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+var_40]
		sub	eax, 14h
		cmp	[ebp+var_48], edx
		mov	[ebp+var_44], eax
		jz	loc_7104C170
		mov	edx, [ebp+var_40]
		mov	ecx, [ebp+var_40]
		mov	eax, [edx-8]
		sub	ecx, 8
		test	eax, eax
		jz	short loc_7104C0D9
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7104C150

loc_7104C0D9:				; CODE XREF: sub_7104C030+9Dj
					; sub_7104C030+139j
		mov	edx, [ebp+var_40]
		mov	ecx, [ebp+var_44]
		mov	eax, [edx-0Ch]
		add	ecx, 8
		test	eax, eax
		jz	short loc_7104C0F3
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7104C130

loc_7104C0F3:				; CODE XREF: sub_7104C030+B7j
					; sub_7104C030+119j
		mov	ecx, [ebp+var_44]
		mov	edx, [ebp+var_44]
		add	ecx, 4
		mov	eax, [edx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7104C080
		mov	edx, [ebp+var_44]
		mov	eax, [edx+4]
		mov	[esp], ecx
		mov	[ebp+var_38], 3
		mov	[esp+4], eax
		call	sub_710459F0
		jmp	loc_7104C080
; ---------------------------------------------------------------------------
		align 10h

loc_7104C130:				; CODE XREF: sub_7104C030+C1j
		mov	edx, [ebp+var_40]
		mov	eax, [edx-0Ch]
		mov	[esp], ecx
		mov	[ebp+var_38], 2
		mov	[esp+4], eax
		call	sub_7104CEF0
		jmp	short loc_7104C0F3
; ---------------------------------------------------------------------------
		align 10h

loc_7104C150:				; CODE XREF: sub_7104C030+A7j
		mov	edx, [ebp+var_40]
		mov	eax, [edx-8]
		mov	[esp], ecx
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		call	sub_7104C810
		jmp	loc_7104C0D9
; ---------------------------------------------------------------------------
		align 10h

loc_7104C170:				; CODE XREF: sub_7104C030+89j
		mov	ecx, [ebp+arg_4]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], ecx
		call	ds:_ZN11QVectorData4freeEPS_i
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_7104C030	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104C198	proc near		; DATA XREF: sub_7104C030+20o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-38h]
		mov	ecx, [ebp-34h]
		cmp	eax, 1
		mov	[ebp-50h], ecx
		jz	short loc_7104C1EA
		cmp	eax, 2
		jz	short loc_7104C1FF
		mov	[ebp-4Ch], ecx
		mov	ecx, [ebp-44h]
		mov	edx, [ebp-44h]
		mov	eax, [ecx+8]
		add	edx, 8
		test	eax, eax
		jz	short loc_7104C1E4
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_7104C1E4
		mov	ecx, [ebp-44h]
		mov	eax, [ecx+8]
		mov	[esp+0], edx
		mov	dword ptr [ebp-38h], 0
		mov	[esp+arg_0], eax
		call	sub_7104CEF0

loc_7104C1E4:				; CODE XREF: sub_7104C198+27j
					; sub_7104C198+31j
		mov	eax, [ebp-4Ch]
		mov	[ebp-50h], eax

loc_7104C1EA:				; CODE XREF: sub_7104C198+Fj
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-38h], 0
		add	eax, 4
		mov	[esp+0], eax
		call	sub_7103BBF0

loc_7104C1FF:				; CODE XREF: sub_7104C198+14j
		mov	ecx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], ecx
		call	sub_710477B0
		mov	eax, [ebp-50h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7104C198	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7104C230	proc near		; CODE XREF: sub_7104D850+157p

var_9C		= dword	ptr -9Ch
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_81		= byte ptr -81h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 0ACh
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_710531E8
		mov	[ebp+var_28], offset sub_7104C680
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	eax, [edx+8]
		cmp	eax, [ebp+arg_4]
		mov	[ebp+var_68], edx
		jle	short loc_7104C280
		mov	edx, [edx]
		cmp	edx, 1
		jz	loc_7104C560

loc_7104C280:				; CODE XREF: sub_7104C230+43j
		mov	eax, [ebp+var_68]

loc_7104C283:				; CODE XREF: sub_7104C230+37Dj
		mov	ecx, [ebp+arg_8]
		cmp	[eax+4], ecx
		jz	loc_7104C530

loc_7104C28F:				; CODE XREF: sub_7104C230+30Ej
		mov	edx, [ebp+arg_8]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_48], 0FFFFFFFFh
		lea	eax, [edx+edx*4-5]
		lea	eax, ds:24h[eax*4]
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	[ebp+var_88], eax
		mov	[ebp+var_6C], eax
		mov	[ebp+var_8C], eax
		jz	loc_7104C65E

loc_7104C2CC:				; CODE XREF: sub_7104C230+44Bj
		mov	eax, [ebp+var_88]
		mov	dword ptr [eax], 1
		mov	edx, [ebp+arg_8]
		mov	ecx, [ebp+var_88]
		mov	dword ptr [eax+8], 0
		mov	[eax+4], edx
		movzx	eax, byte ptr [ecx+0Ch]
		or	eax, 1
		mov	[ecx+0Ch], al
		mov	esi, [ebp+arg_0]
		and	eax, 0FFFFFFFDh
		mov	edx, [esi]
		movzx	edx, byte ptr [edx+0Ch]
		and	edx, 2
		or	eax, edx
		mov	[ecx+0Ch], al
		and	dword ptr [ecx+0Ch], 3
		mov	eax, [ebp+var_6C]
		mov	[ebp+var_68], eax

loc_7104C313:				; CODE XREF: sub_7104C230+314j
		mov	ecx, [ebp+var_68]
		mov	edx, [ebp+arg_0]
		mov	esi, [ebp+var_8C]
		mov	eax, [ecx+8]
		mov	ebx, [edx]
		lea	edx, [eax+eax*4]
		mov	ecx, eax
		lea	edx, [esi+edx*4+10h]
		mov	esi, [ebp+arg_4]
		mov	[ebp+var_5C], edx
		mov	edx, [ebx+8]
		mov	[ebp+var_74], esi
		cmp	esi, edx
		jle	short loc_7104C340
		mov	[ebp+var_74], edx

loc_7104C340:				; CODE XREF: sub_7104C230+10Bj
		cmp	eax, [ebp+var_74]
		jge	loc_7104C474
		lea	eax, [ecx+ecx*4]
		lea	eax, [ebx+eax*4+10h]
		mov	[ebp+var_60], eax
		mov	eax, [ebp+var_5C]
		add	eax, 14h
		mov	[ebp+var_64], eax
		jmp	short loc_7104C3DB
; ---------------------------------------------------------------------------
		align 10h

loc_7104C360:				; CODE XREF: sub_7104C230+1E5j
					; sub_7104C230+1FAj
		mov	esi, [ebp+var_5C]
		mov	edx, [ebp+var_60]
		mov	ecx, [ebp+var_5C]
		add	esi, 8
		mov	[ebp+var_70], esi
		mov	eax, [edx-0Ch]
		mov	[ecx+8], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ecx+8]
		test	byte ptr [eax+0Ch], 1
		jz	loc_7104C452

loc_7104C388:				; CODE XREF: sub_7104C230+23Fj
		mov	esi, [ebp+var_60]
		mov	edx, [ebp+var_5C]
		mov	ecx, [ebp+var_5C]
		mov	eax, [esi-8]
		add	edx, 0Ch
		mov	[ecx+0Ch], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	esi, [ebp+var_5C]
		mov	eax, [esi+0Ch]
		test	byte ptr [eax+0Ch], 1
		jz	loc_7104C430

loc_7104C3B0:				; CODE XREF: sub_7104C230+21Dj
		mov	edx, [ebp+var_60]
		mov	ecx, [ebp+var_5C]
		mov	eax, [edx-4]
		mov	[ecx+10h], eax

loc_7104C3BC:				; CODE XREF: sub_7104C230+1B4j
		mov	edx, [ebp+var_68]
		mov	ecx, [ebp+var_64]
		add	[ebp+var_64], 14h
		mov	eax, [edx+8]
		mov	[ebp+var_5C], ecx
		add	eax, 1
		cmp	[ebp+var_74], eax
		mov	[edx+8], eax
		jle	loc_7104C474

loc_7104C3DB:				; CODE XREF: sub_7104C230+12Cj
		mov	ecx, [ebp+var_5C]
		add	[ebp+var_60], 14h
		test	ecx, ecx
		jz	short loc_7104C3BC
		mov	edx, [ebp+var_60]
		mov	ecx, [ebp+var_5C]
		mov	eax, [edx-14h]
		mov	[ecx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	esi, [ebp+var_60]
		mov	edx, ecx
		add	edx, 4
		mov	eax, [esi-10h]
		mov	[ecx+4], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	ecx, [ebp+var_5C]
		mov	eax, [ecx+4]
		test	byte ptr [eax+10h], 1
		jnz	loc_7104C360
		mov	[esp], edx
		mov	[ebp+var_48], 6
		call	sub_71045970
		jmp	loc_7104C360
; ---------------------------------------------------------------------------
		align 10h

loc_7104C430:				; CODE XREF: sub_7104C230+17Aj
		mov	ecx, [eax+4]
		mov	[esp+8], ecx
		mov	eax, [eax+8]
		mov	[esp], edx
		mov	[ebp+var_48], 4
		mov	[esp+4], eax
		call	sub_7104C920
		jmp	loc_7104C3B0
; ---------------------------------------------------------------------------

loc_7104C452:				; CODE XREF: sub_7104C230+152j
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], esi
		mov	[ebp+var_48], 5
		mov	[esp+4], eax
		call	sub_7104D000
		jmp	loc_7104C388
; ---------------------------------------------------------------------------

loc_7104C474:				; CODE XREF: sub_7104C230+113j
					; sub_7104C230+1A5j
		cmp	eax, [ebp+arg_4]
		jge	short loc_7104C4F5
		mov	esi, ds:_ZN7QString11shared_nullE
		mov	eax, ds:_ZN9QListData11shared_nullE
		mov	ebx, ds:_ZN11QVectorData11shared_nullE
		mov	[ebp+var_50], esi
		mov	[ebp+var_9C], esi
		mov	edi, eax
		mov	esi, [ebp+var_68]
		mov	[ebp+var_54], eax
		mov	eax, [ebp+var_5C]
		mov	edx, ebx

loc_7104C4A0:				; CODE XREF: sub_7104C230+2C3j
		test	eax, eax
		jz	short loc_7104C4DE
		mov	ecx, [ebp+var_50]
		mov	[eax], ecx
		mov	ecx, [ebp+var_9C]
		lock inc dword ptr [ecx]
		setnz	[ebp+var_81]
		mov	ecx, [ebp+var_54]
		mov	[eax+4], ecx
		lock inc dword ptr [edi]
		setnz	cl
		mov	[eax+8], ebx
		lock inc dword ptr [edx]
		setnz	cl
		mov	[eax+0Ch], ebx
		lock inc dword ptr [edx]
		setnz	cl
		mov	dword ptr [eax+10h], 0

loc_7104C4DE:				; CODE XREF: sub_7104C230+272j
		mov	ecx, [esi+8]
		add	eax, 14h
		add	ecx, 1
		mov	[ebp+var_7C], ecx
		mov	[esi+8], ecx
		mov	ecx, [ebp+arg_4]
		cmp	[ebp+var_7C], ecx
		jl	short loc_7104C4A0

loc_7104C4F5:				; CODE XREF: sub_7104C230+247j
		mov	eax, [ebp+var_68]
		mov	edx, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		mov	[eax+8], edx
		mov	eax, [ecx]
		cmp	eax, [ebp+var_68]
		jz	short loc_7104C51A
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7104C549

loc_7104C512:				; CODE XREF: sub_7104C230+32Ej
		mov	eax, [ebp+var_68]
		mov	esi, [ebp+arg_0]
		mov	[esi], eax

loc_7104C51A:				; CODE XREF: sub_7104C230+2D6j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 0ACh
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_7104C530:				; CODE XREF: sub_7104C230+59j
		mov	eax, [eax]
		mov	esi, [ebp+var_68]
		cmp	eax, 1
		mov	[ebp+var_8C], esi
		jnz	loc_7104C28F
		jmp	loc_7104C313
; ---------------------------------------------------------------------------

loc_7104C549:				; CODE XREF: sub_7104C230+2E0j
		mov	eax, [ecx]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_7104C030
		jmp	short loc_7104C512
; ---------------------------------------------------------------------------

loc_7104C560:				; CODE XREF: sub_7104C230+4Aj
		mov	esi, [ebp+arg_0]
		lea	eax, [eax+eax*4]
		lea	eax, ds:10h[eax*4]
		add	eax, [esi]
		sub	eax, 14h
		mov	[ebp+var_78], eax
		jmp	short loc_7104C5B3
; ---------------------------------------------------------------------------

loc_7104C577:				; CODE XREF: sub_7104C230+3CDj
					; sub_7104C230+3ECj
		mov	ecx, [ebp+var_78]
		mov	eax, [ecx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104C598
		mov	eax, [ecx]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7104C598:				; CODE XREF: sub_7104C230+354j
		mov	esi, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	eax, [esi]
		sub	dword ptr [eax+8], 1
		mov	eax, [esi]
		sub	[ebp+var_78], 14h
		cmp	[eax+8], edx
		jle	loc_7104C283

loc_7104C5B3:				; CODE XREF: sub_7104C230+345j
		mov	eax, [ebp+var_78]
		mov	ecx, eax
		mov	[ebp+var_80], eax
		mov	eax, [eax+0Ch]
		add	ecx, 0Ch
		test	eax, eax
		jz	short loc_7104C5CF
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7104C640

loc_7104C5CF:				; CODE XREF: sub_7104C230+393j
					; sub_7104C230+429j
		mov	edx, [ebp+var_78]
		mov	ecx, [ebp+var_80]
		mov	eax, [edx+8]
		add	ecx, 8
		test	eax, eax
		jz	short loc_7104C5E9
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7104C621

loc_7104C5E9:				; CODE XREF: sub_7104C230+3ADj
					; sub_7104C230+40Aj
		mov	ecx, [ebp+var_80]
		mov	edx, [ebp+var_80]
		add	ecx, 4
		mov	eax, [edx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	loc_7104C577
		mov	esi, [ebp+var_80]
		mov	eax, [esi+4]
		mov	[esp], ecx
		mov	[ebp+var_48], 3
		mov	[esp+4], eax
		call	sub_710459F0
		jmp	loc_7104C577
; ---------------------------------------------------------------------------

loc_7104C621:				; CODE XREF: sub_7104C230+3B7j
		mov	esi, [ebp+var_78]
		mov	eax, [esi+8]
		mov	[esp], ecx
		mov	[ebp+var_48], 2
		mov	[esp+4], eax
		call	sub_7104CEF0
		jmp	short loc_7104C5E9
; ---------------------------------------------------------------------------
		align 10h

loc_7104C640:				; CODE XREF: sub_7104C230+39Dj
		mov	esi, [ebp+var_78]
		mov	eax, [esi+0Ch]
		mov	[esp], ecx
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		call	sub_7104C810
		jmp	loc_7104C5CF
; ---------------------------------------------------------------------------

loc_7104C65E:				; CODE XREF: sub_7104C230+96j
		mov	ecx, ds:_Z9qBadAllocv
		mov	[ebp+var_58], ecx
		call	ecx ; _Z9qBadAllocv
		mov	esi, [ebp+var_88]
		mov	[ebp+var_6C], esi
		call	[ebp+var_58]
		mov	[ebp+var_8C], esi
		jmp	loc_7104C2CC
sub_7104C230	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104C680	proc near		; DATA XREF: sub_7104C230+26o

arg_0		= dword	ptr  4

		add	ebp, 18h
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-98h], edx
		jz	short loc_7104C70B
		cmp	eax, 2
		jz	loc_7104C720
		cmp	eax, 3
		jz	loc_7104C747
		cmp	eax, 4
		jz	loc_7104C78F
		cmp	eax, 5
		jz	loc_7104C7A4
		cmp	eax, 6
		nop
		lea	esi, [esi+0]
		jz	loc_7104C7E5
		mov	ecx, [ebp-80h]
		mov	[ebp-90h], edx
		mov	edx, [ebp-80h]
		mov	eax, [ecx+8]
		add	edx, 8
		test	eax, eax
		jz	short loc_7104C6FF
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_7104C6FF
		mov	esi, [ebp-80h]
		mov	eax, [esi+8]
		mov	[esp+0], edx
		mov	dword ptr [ebp-48h], 0
		mov	[esp+arg_0], eax
		call	sub_7104CEF0

loc_7104C6FF:				; CODE XREF: sub_7104C680+5Aj
					; sub_7104C680+64j
		mov	eax, [ebp-90h]
		mov	[ebp-98h], eax

loc_7104C70B:				; CODE XREF: sub_7104C680+12j
		mov	eax, [ebp-80h]
		mov	dword ptr [ebp-48h], 0
		add	eax, 4
		mov	[esp+0], eax
		call	sub_7103BBF0

loc_7104C720:				; CODE XREF: sub_7104C680+17j
		mov	eax, [ebp-80h]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], eax
		call	sub_710477B0
		mov	edx, [ebp-98h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7104C747:				; CODE XREF: sub_7104C680+20j
		mov	esi, [ebp-98h]
		mov	edx, [ebp-5Ch]
		mov	[ebp-94h], esi
		mov	eax, [edx+8]
		test	eax, eax
		jz	short loc_7104C783
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104C783
		mov	ecx, [ebp-5Ch]
		mov	esi, [ebp-70h]
		mov	eax, [ecx+8]
		mov	[esp+0], esi
		mov	dword ptr [ebp-48h], 0
		mov	[esp+arg_0], eax
		call	sub_7104CEF0

loc_7104C783:				; CODE XREF: sub_7104C680+DBj
					; sub_7104C680+E5j
		mov	eax, [ebp-94h]
		mov	[ebp-98h], eax

loc_7104C78F:				; CODE XREF: sub_7104C680+29j
		mov	eax, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0
		add	eax, 4
		mov	[esp+0], eax
		call	sub_7103BBF0

loc_7104C7A4:				; CODE XREF: sub_7104C680+32j
		mov	edx, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], edx
		call	sub_710477B0
		mov	ecx, [ebp-98h]
		mov	[esp+0], ecx
		call	sub_71051CE0
		mov	esi, [ebp-8Ch]
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-48h], 7
		mov	[esp+arg_0], esi
		mov	[esp+0], eax
		call	sub_7104C030
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_7104C7E5:				; CODE XREF: sub_7104C680+40j
		mov	dword ptr [ebp-48h], 0
		call	sub_71051FB0
		mov	esi, [ebp-98h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], esi
		call	_Unwind_SjLj_Resume
sub_7104C680	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7104C810	proc near		; CODE XREF: sub_7104C030+134p
					; sub_7104C230+424p ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053090
		mov	[ebp+var_18], offset sub_7104C8EA
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		add	edx, 10h
		mov	[ebp+var_44], edx
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+8]
		lea	eax, [eax+eax*2]
		lea	eax, [edx+eax*4+10h]
		mov	[ebp+var_40], eax
		mov	eax, ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_4C], eax
		jmp	short loc_7104C889
; ---------------------------------------------------------------------------

loc_7104C862:				; CODE XREF: sub_7104C810+98j
					; sub_7104C810+B0j
		mov	edx, [ebp+var_40]
		mov	eax, [edx-0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104C885
		mov	edx, [ebp+var_40]
		mov	eax, [edx-0Ch]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	[ebp+var_4C]

loc_7104C885:				; CODE XREF: sub_7104C810+60j
		sub	[ebp+var_40], 0Ch

loc_7104C889:				; CODE XREF: sub_7104C810+50j
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+var_40]
		sub	eax, 0Ch
		cmp	[ebp+var_44], edx
		mov	[ebp+var_48], eax
		jz	short loc_7104C8C2
		mov	edx, [ebp+var_40]
		mov	eax, [edx-8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104C862
		mov	edx, [ebp+var_40]
		mov	eax, [edx-8]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7104C862
; ---------------------------------------------------------------------------

loc_7104C8C2:				; CODE XREF: sub_7104C810+88j
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_7104C810	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104C8EA	proc near		; DATA XREF: sub_7104C810+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-50h], eax
		mov	[esp+0], edx
		call	sub_710477B0
		mov	eax, [ebp-50h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7104C8EA	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7104C920	proc near		; CODE XREF: sub_7104C230+218p

var_7C		= dword	ptr -7Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 8Ch
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset word_71053096
		mov	[ebp+var_28], offset sub_7104CBA8
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	eax, [edx+8]
		cmp	eax, [ebp+arg_4]
		mov	[ebp+var_58], edx
		jle	short loc_7104C970
		mov	edx, [edx]
		cmp	edx, 1
		jz	loc_7104CB07

loc_7104C970:				; CODE XREF: sub_7104C920+43j
		mov	eax, [ebp+var_58]

loc_7104C973:				; CODE XREF: sub_7104C920+23Cj
		mov	ecx, [ebp+arg_8]
		cmp	[eax+4], ecx
		jz	loc_7104CAD7

loc_7104C97F:				; CODE XREF: sub_7104C920+1BFj
		mov	ebx, [ebp+arg_8]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_48], 0FFFFFFFFh
		lea	eax, [ebx+ebx*2-3]
		lea	eax, ds:1Ch[eax*4]
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	ebx, eax
		mov	[ebp+var_64], eax
		mov	[ebp+var_5C], eax
		jz	loc_7104CB8D

loc_7104C9B5:				; CODE XREF: sub_7104C920+283j
		mov	ecx, [ebp+var_64]
		mov	dword ptr [ecx], 1
		mov	eax, [ebp+arg_8]
		mov	dword ptr [ecx+8], 0
		mov	[ecx+4], eax
		movzx	eax, byte ptr [ecx+0Ch]
		or	eax, 1
		mov	[ecx+0Ch], al
		mov	ecx, [ebp+arg_0]
		and	eax, 0FFFFFFFDh
		mov	edx, [ecx]
		movzx	edx, byte ptr [edx+0Ch]
		and	edx, 2
		or	eax, edx
		mov	edx, [ebp+var_64]
		mov	[edx+0Ch], al
		and	dword ptr [edx+0Ch], 3
		mov	ecx, [ebp+var_5C]
		mov	[ebp+var_58], ecx

loc_7104C9F6:				; CODE XREF: sub_7104C920+1C5j
		mov	edx, [ebp+var_58]
		mov	eax, [ebp+arg_0]
		mov	ecx, [edx+8]
		mov	esi, [eax]
		lea	eax, [ecx+ecx*2]
		mov	edx, ecx
		lea	eax, [ebx+eax*4+10h]
		mov	ebx, [esi+8]
		cmp	ebx, [ebp+arg_4]
		jle	short loc_7104CA15
		mov	ebx, [ebp+arg_4]

loc_7104CA15:				; CODE XREF: sub_7104C920+F0j
		cmp	ecx, ebx
		jge	short loc_7104CA5D
		lea	edx, [edx+edx*2]
		lea	edx, [esi+edx*4+10h]
		mov	esi, [ebp+var_58]
		mov	[ebp+var_7C], ebx

loc_7104CA26:				; CODE XREF: sub_7104C920+13Bj
		add	eax, 0Ch
		add	edx, 0Ch
		cmp	eax, 0Ch
		jz	short loc_7104CA4F
		mov	ecx, [edx-0Ch]
		mov	[eax-0Ch], ecx
		lock inc dword ptr [ecx]
		setnz	bl
		mov	ecx, [edx-8]
		mov	[eax-8], ecx
		lock inc dword ptr [ecx]
		setnz	bl
		mov	ecx, [edx-4]
		mov	[eax-4], ecx

loc_7104CA4F:				; CODE XREF: sub_7104C920+10Fj
		mov	ecx, [esi+8]
		add	ecx, 1
		cmp	ecx, [ebp+var_7C]
		mov	[esi+8], ecx
		jl	short loc_7104CA26

loc_7104CA5D:				; CODE XREF: sub_7104C920+F7j
		cmp	ecx, [ebp+arg_4]
		jge	short loc_7104CA9C
		mov	ecx, ds:_ZN7QString11shared_nullE
		mov	esi, [ebp+var_58]
		mov	edi, [ebp+arg_4]
		mov	edx, ecx

loc_7104CA70:				; CODE XREF: sub_7104C920+17Aj
		test	eax, eax
		jz	short loc_7104CA8C
		mov	[eax], ecx
		lock inc dword ptr [edx]
		setnz	bl
		mov	[eax+4], ecx
		lock inc dword ptr [edx]
		setnz	bl
		mov	dword ptr [eax+8], 0

loc_7104CA8C:				; CODE XREF: sub_7104C920+152j
		mov	ebx, [esi+8]
		add	eax, 0Ch
		add	ebx, 1
		cmp	ebx, edi
		mov	[esi+8], ebx
		jl	short loc_7104CA70

loc_7104CA9C:				; CODE XREF: sub_7104C920+140j
		mov	eax, [ebp+var_58]
		mov	edx, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		mov	[eax+8], edx
		mov	eax, [ecx]
		cmp	eax, [ebp+var_58]
		jz	short loc_7104CAC1
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7104CAF0

loc_7104CAB9:				; CODE XREF: sub_7104C920+1E5j
		mov	eax, [ebp+var_58]
		mov	ebx, [ebp+arg_0]
		mov	[ebx], eax

loc_7104CAC1:				; CODE XREF: sub_7104C920+18Dj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 8Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_7104CAD7:				; CODE XREF: sub_7104C920+59j
		mov	eax, [eax]
		mov	ebx, [ebp+var_58]
		cmp	eax, 1
		jnz	loc_7104C97F
		jmp	loc_7104C9F6
; ---------------------------------------------------------------------------
		align 10h

loc_7104CAF0:				; CODE XREF: sub_7104C920+197j
		mov	eax, [ecx]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_7104C810
		jmp	short loc_7104CAB9
; ---------------------------------------------------------------------------

loc_7104CB07:				; CODE XREF: sub_7104C920+4Aj
		mov	ebx, [ebp+arg_0]
		lea	eax, [eax+eax*2]
		lea	eax, ds:10h[eax*4]
		add	eax, [ebx]
		sub	eax, 0Ch
		mov	[ebp+var_54], eax
		mov	eax, ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_68], eax
		jmp	short loc_7104CB62
; ---------------------------------------------------------------------------

loc_7104CB26:				; CODE XREF: sub_7104C920+253j
					; sub_7104C920+26Bj
		mov	edx, [ebp+var_54]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104CB47
		mov	ecx, [ebp+var_54]
		mov	eax, [ecx]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	[ebp+var_68]

loc_7104CB47:				; CODE XREF: sub_7104C920+213j
		mov	ebx, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	eax, [ebx]
		sub	dword ptr [eax+8], 1
		mov	eax, [ebx]
		sub	[ebp+var_54], 0Ch
		cmp	[eax+8], edx
		jle	loc_7104C973

loc_7104CB62:				; CODE XREF: sub_7104C920+204j
		mov	edx, [ebp+var_54]
		mov	[ebp+var_60], edx
		mov	eax, [edx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104CB26
		mov	ecx, [ebp+var_54]
		mov	eax, [ecx+4]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7104CB26
; ---------------------------------------------------------------------------

loc_7104CB8D:				; CODE XREF: sub_7104C920+8Fj
		mov	eax, ds:_Z9qBadAllocv
		mov	[ebp+var_50], eax
		call	eax ; _Z9qBadAllocv
		mov	edx, [ebp+var_64]
		mov	[ebp+var_5C], edx
		call	[ebp+var_50]
		mov	ebx, [ebp+var_64]
		jmp	loc_7104C9B5
sub_7104C920	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104CBA8	proc near		; DATA XREF: sub_7104C920+26o
		add	ebp, 18h
		mov	ebx, [ebp-44h]
		mov	eax, [ebp-60h]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], eax
		call	sub_710477B0
		mov	[esp+0], ebx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_7104CBA8	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7104CBD0	proc near		; CODE XREF: sub_7104BA80+11Cp
					; sub_7104BBA3+40p ...

var_2C		= dword	ptr -2Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	ebp, [esp+2Ch+arg_4]
		mov	eax, [ebp+8]
		lea	esi, [ebp+10h]
		lea	eax, [eax+eax*2]
		lea	ebx, [ebp+eax*8+10h]
		cmp	esi, ebx
		jz	short loc_7104CC07
		mov	edi, ds:_ZN8QVariantD1Ev
		sub	ebx, 18h

loc_7104CBF5:				; CODE XREF: sub_7104CBD0+35j
		lea	eax, [ebx+8]
		sub	ebx, 18h
		mov	[esp+2Ch+var_2C], eax
		call	edi ; _ZN8QVariantD1Ev
		lea	eax, [ebx+18h]
		cmp	esi, eax
		jnz	short loc_7104CBF5

loc_7104CC07:				; CODE XREF: sub_7104CBD0+1Aj
		mov	eax, ds:_ZN11QVectorData4freeEPS_i
		mov	[esp+2Ch+arg_0], ebp
		mov	[esp+2Ch+arg_4], 8
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	eax
sub_7104CBD0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7104CC30	proc near		; CODE XREF: sub_7101BB40+102p
					; sub_7101BB40+23Dp ...

var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		lea	eax, [ebp+var_8]
		sub	esp, 70h
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71052E78
		mov	[ebp+var_18], offset sub_7104CE9A
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	eax, [edx+8]
		cmp	eax, [ebp+arg_4]
		mov	[ebp+var_50], edx
		jle	short loc_7104CC7C
		mov	edx, [edx]
		cmp	edx, 1
		jz	loc_7104CE2E

loc_7104CC7C:				; CODE XREF: sub_7104CC30+3Fj
		mov	eax, [ebp+var_50]

loc_7104CC7F:				; CODE XREF: sub_7104CC30+24Aj
		mov	esi, [ebp+arg_8]
		cmp	[eax+4], esi
		jz	loc_7104CDFE

loc_7104CC8B:				; CODE XREF: sub_7104CC30+1D9j
		mov	ecx, [ebp+arg_8]
		mov	dword ptr [esp+4], 8
		mov	[ebp+var_38], 0FFFFFFFFh
		lea	eax, [ecx+ecx*2-3]
		lea	eax, ds:28h[eax*8]
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	[ebp+var_60], eax
		mov	[ebp+var_54], eax
		mov	[ebp+var_64], eax
		jz	loc_7104CE7F

loc_7104CCC2:				; CODE XREF: sub_7104CC30+265j
		mov	ecx, [ebp+var_60]
		movzx	eax, byte ptr [ecx+0Ch]
		mov	dword ptr [ecx], 1
		mov	esi, [ebp+arg_8]
		mov	dword ptr [ecx+8], 0
		or	eax, 1
		mov	[ecx+0Ch], al
		and	eax, 0FFFFFFFDh
		mov	[ecx+4], esi
		mov	ecx, [ebp+arg_0]
		mov	esi, [ebp+var_60]
		mov	edx, [ecx]
		movzx	edx, byte ptr [edx+0Ch]
		and	edx, 2
		or	eax, edx
		mov	[esi+0Ch], al
		and	dword ptr [esi+0Ch], 3
		mov	eax, [ebp+var_54]
		mov	[ebp+var_50], eax

loc_7104CD03:				; CODE XREF: sub_7104CC30+1DFj
		mov	ecx, [ebp+var_50]
		mov	edx, [ebp+arg_0]
		mov	esi, [ebp+var_64]
		mov	eax, [ecx+8]
		mov	ebx, [edx]
		lea	ecx, [eax+eax*2]
		mov	edx, eax
		lea	ecx, [esi+ecx*8+10h]
		mov	esi, [ebp+arg_4]
		mov	[ebp+var_48], ecx
		mov	ecx, [ebx+8]
		cmp	ecx, esi
		mov	[ebp+var_58], ecx
		jle	short loc_7104CD2D
		mov	[ebp+var_58], esi

loc_7104CD2D:				; CODE XREF: sub_7104CC30+F8j
		cmp	eax, [ebp+var_58]
		jge	short loc_7104CD89
		lea	eax, [edx+edx*2]
		lea	eax, [ebx+eax*8+10h]
		jmp	short loc_7104CD43
; ---------------------------------------------------------------------------
		align 10h

loc_7104CD40:				; CODE XREF: sub_7104CC30+157j
		mov	eax, [ebp+var_4C]

loc_7104CD43:				; CODE XREF: sub_7104CC30+109j
		mov	ebx, [ebp+var_48]
		lea	edx, [eax+18h]
		mov	[ebp+var_4C], edx
		test	ebx, ebx
		jz	short loc_7104CD74
		mov	edx, [edx-18h]
		add	eax, 8
		mov	esi, [ebp+var_48]
		mov	[esi], edx
		mov	[esp+4], eax
		mov	eax, esi
		add	eax, 8
		mov	[esp], eax
		mov	[ebp+var_38], 2
		call	ds:_ZN8QVariantC1ERKS_

loc_7104CD74:				; CODE XREF: sub_7104CC30+11Ej
		mov	edx, [ebp+var_50]
		add	[ebp+var_48], 18h
		mov	eax, [edx+8]
		add	eax, 1
		cmp	eax, [ebp+var_58]
		mov	[edx+8], eax
		jl	short loc_7104CD40

loc_7104CD89:				; CODE XREF: sub_7104CC30+100j
		cmp	eax, [ebp+arg_4]
		jge	short loc_7104CDC8
		mov	eax, [ebp+var_48]
		mov	ecx, [ebp+var_50]
		mov	ebx, [ebp+arg_4]

loc_7104CD97:				; CODE XREF: sub_7104CC30+196j
		test	eax, eax
		jz	short loc_7104CDB8
		mov	edx, [eax+10h]
		mov	dword ptr [eax], 0
		mov	dword ptr [eax+8], 0
		and	edx, 0C0000000h
		mov	[eax+10h], edx
		mov	byte ptr [eax+13h], 80h

loc_7104CDB8:				; CODE XREF: sub_7104CC30+169j
		mov	edx, [ecx+8]
		add	eax, 18h
		add	edx, 1
		cmp	edx, ebx
		mov	[ecx+8], edx
		jl	short loc_7104CD97

loc_7104CDC8:				; CODE XREF: sub_7104CC30+15Cj
		mov	eax, [ebp+arg_4]
		mov	esi, [ebp+var_50]
		mov	edx, [ebp+arg_0]
		mov	[esi+8], eax
		mov	eax, [edx]
		cmp	eax, esi
		jz	short loc_7104CDEC
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7104CE14

loc_7104CDE4:				; CODE XREF: sub_7104CC30+1FCj
		mov	eax, [ebp+var_50]
		mov	esi, [ebp+arg_0]
		mov	[esi], eax

loc_7104CDEC:				; CODE XREF: sub_7104CC30+1A8j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 70h
		pop	ebx
		pop	esi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_7104CDFE:				; CODE XREF: sub_7104CC30+55j
		mov	eax, [eax]
		mov	edx, [ebp+var_50]
		cmp	eax, 1
		mov	[ebp+var_64], edx
		jnz	loc_7104CC8B
		jmp	loc_7104CD03
; ---------------------------------------------------------------------------

loc_7104CE14:				; CODE XREF: sub_7104CC30+1B2j
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx]
		mov	[esp], ecx
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_7104CBD0
		jmp	short loc_7104CDE4
; ---------------------------------------------------------------------------

loc_7104CE2E:				; CODE XREF: sub_7104CC30+46j
		mov	esi, [ebp+arg_0]
		lea	eax, [eax+eax*2]
		lea	eax, ds:10h[eax*8]
		mov	esi, [esi]
		add	eax, esi
		mov	[ebp+var_5C], eax
		mov	eax, ds:_ZN8QVariantD1Ev
		mov	[ebp+var_44], eax
		lea	esi, [esi+0]

loc_7104CE50:				; CODE XREF: sub_7104CC30+248j
		sub	[ebp+var_5C], 18h
		mov	eax, [ebp+var_5C]
		mov	[ebp+var_38], 0FFFFFFFFh
		add	eax, 8
		mov	[esp], eax
		call	[ebp+var_44]
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_4]
		mov	eax, [edx]
		sub	dword ptr [eax+8], 1
		mov	eax, [edx]
		cmp	[eax+8], ecx
		jg	short loc_7104CE50
		jmp	loc_7104CC7F
; ---------------------------------------------------------------------------

loc_7104CE7F:				; CODE XREF: sub_7104CC30+8Cj
		mov	esi, ds:_Z9qBadAllocv
		call	esi ; _Z9qBadAllocv
		mov	eax, [ebp+var_60]
		mov	[ebp+var_54], eax
		call	esi ; _Z9qBadAllocv
		mov	edx, [ebp+var_60]
		mov	[ebp+var_64], edx
		jmp	loc_7104CCC2
sub_7104CC30	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104CE9A	proc near		; DATA XREF: sub_7104CC30+22o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	edx, [ebp-34h]
		cmp	dword ptr [ebp-38h], 1
		mov	[ebp-68h], edx
		jz	short loc_7104CEC7
		mov	dword ptr [ebp-38h], 0
		call	sub_71051FB0
		mov	ecx, [ebp-68h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7104CEC7:				; CODE XREF: sub_7104CE9A+Dj
		mov	ecx, [ebp-68h]
		mov	[esp+0], ecx
		call	sub_71051CE0
		mov	esi, [ebp-64h]
		mov	eax, [ebp+8]
		mov	dword ptr [ebp-38h], 1
		mov	[esp+arg_0], esi
		mov	[esp+0], eax
		call	sub_7104CBD0
		call	sub_710524F0
sub_7104CE9A	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7104CEF0	proc near		; CODE XREF: sub_7104C030+114p
					; sub_7104C198+47p ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053060
		mov	[ebp+var_18], offset sub_7104CFCA
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		add	edx, 10h
		mov	[ebp+var_44], edx
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+8]
		lea	eax, [eax+eax*2]
		lea	eax, [edx+eax*8+10h]
		mov	[ebp+var_40], eax
		mov	eax, ds:_ZN7QString4freeEPNS_4DataE
		mov	[ebp+var_4C], eax
		jmp	short loc_7104CF69
; ---------------------------------------------------------------------------

loc_7104CF42:				; CODE XREF: sub_7104CEF0+98j
					; sub_7104CEF0+B0j
		mov	edx, [ebp+var_40]
		mov	eax, [edx-10h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104CF65
		mov	edx, [ebp+var_40]
		mov	eax, [edx-10h]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	[ebp+var_4C]

loc_7104CF65:				; CODE XREF: sub_7104CEF0+60j
		sub	[ebp+var_40], 18h

loc_7104CF69:				; CODE XREF: sub_7104CEF0+50j
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+var_40]
		sub	eax, 18h
		cmp	[ebp+var_44], edx
		mov	[ebp+var_48], eax
		jz	short loc_7104CFA2
		mov	edx, [ebp+var_40]
		mov	eax, [edx-0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104CF42
		mov	edx, [ebp+var_40]
		mov	eax, [edx-0Ch]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7104CF42
; ---------------------------------------------------------------------------

loc_7104CFA2:				; CODE XREF: sub_7104CEF0+88j
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+4], 8
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_7104CEF0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104CFCA	proc near		; DATA XREF: sub_7104CEF0+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-50h], eax
		mov	eax, [ebp-48h]
		add	eax, 8
		mov	[esp+0], eax
		call	sub_710477B0
		mov	edx, [ebp-50h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_7104CFCA	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7104D000	proc near		; CODE XREF: sub_7104C230+23Ap

var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 8Ch
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset word_71053066
		mov	[ebp+var_28], offset sub_7104D29E
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	eax, [edx+8]
		cmp	eax, [ebp+arg_4]
		mov	[ebp+var_58], edx
		jle	short loc_7104D050
		mov	edx, [edx]
		cmp	edx, 1
		jz	loc_7104D200

loc_7104D050:				; CODE XREF: sub_7104D000+43j
		mov	eax, [ebp+var_58]

loc_7104D053:				; CODE XREF: sub_7104D000+255j
		mov	edi, [ebp+arg_8]
		cmp	[eax+4], edi
		jz	loc_7104D1D1

loc_7104D05F:				; CODE XREF: sub_7104D000+1D9j
		mov	edx, [ebp+arg_8]
		mov	dword ptr [esp+4], 8
		mov	[ebp+var_48], 0FFFFFFFFh
		lea	eax, [edx+edx*2-3]
		lea	eax, ds:28h[eax*8]
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	esi, eax
		mov	[ebp+var_64], eax
		mov	[ebp+var_5C], eax
		jz	loc_7104D283

loc_7104D095:				; CODE XREF: sub_7104D000+299j
		mov	edi, [ebp+var_64]
		mov	dword ptr [edi], 1
		mov	eax, [ebp+arg_8]
		mov	dword ptr [edi+8], 0
		mov	[edi+4], eax
		movzx	eax, byte ptr [edi+0Ch]
		or	eax, 1
		mov	[edi+0Ch], al
		mov	ecx, [ebp+arg_0]
		and	eax, 0FFFFFFFDh
		mov	edx, [ecx]
		movzx	edx, byte ptr [edx+0Ch]
		and	edx, 2
		or	eax, edx
		mov	[edi+0Ch], al
		and	dword ptr [edi+0Ch], 3
		mov	ebx, [ebp+var_5C]
		mov	[ebp+var_58], ebx

loc_7104D0D3:				; CODE XREF: sub_7104D000+1DFj
		mov	eax, [ebp+var_58]
		mov	edi, [ebp+arg_0]
		mov	ecx, [eax+8]
		mov	ebx, [edi]
		lea	eax, [ecx+ecx*2]
		mov	edx, ecx
		lea	eax, [esi+eax*8+10h]
		mov	esi, [ebx+8]
		cmp	esi, [ebp+arg_4]
		jle	short loc_7104D0F2
		mov	esi, [ebp+arg_4]

loc_7104D0F2:				; CODE XREF: sub_7104D000+EDj
		cmp	ecx, esi
		jge	short loc_7104D14D
		mov	ecx, [ebp+var_58]
		lea	edx, [edx+edx*2]
		lea	edx, [ebx+edx*8+10h]
		mov	[ebp+var_80], esi
		mov	[ebp+var_7C], ecx

loc_7104D106:				; CODE XREF: sub_7104D000+14Bj
		add	eax, 18h
		add	edx, 18h
		cmp	eax, 18h
		jz	short loc_7104D13C
		mov	ecx, [edx-18h]
		mov	ebx, [edx-14h]
		mov	[eax-18h], ecx
		mov	ecx, [edx-10h]
		mov	[eax-14h], ebx
		mov	[eax-10h], ecx
		lock inc dword ptr [ecx]
		setnz	bl
		mov	ecx, [edx-0Ch]
		mov	[eax-0Ch], ecx
		lock inc dword ptr [ecx]
		setnz	bl
		movzx	ecx, byte ptr [edx-8]
		mov	[eax-8], cl

loc_7104D13C:				; CODE XREF: sub_7104D000+10Fj
		mov	esi, [ebp+var_7C]
		mov	ecx, [esi+8]
		add	ecx, 1
		cmp	ecx, [ebp+var_80]
		mov	[esi+8], ecx
		jl	short loc_7104D106

loc_7104D14D:				; CODE XREF: sub_7104D000+F4j
		cmp	ecx, [ebp+arg_4]
		jge	short loc_7104D197
		mov	ecx, ds:_ZN7QString11shared_nullE
		mov	esi, [ebp+var_58]
		mov	edi, [ebp+arg_4]
		mov	edx, ecx

loc_7104D160:				; CODE XREF: sub_7104D000+195j
		test	eax, eax
		jz	short loc_7104D187
		mov	dword ptr [eax], 0
		mov	dword ptr [eax+4], 0
		mov	[eax+8], ecx
		lock inc dword ptr [edx]
		setnz	bl
		mov	[eax+0Ch], ecx
		lock inc dword ptr [edx]
		setnz	bl
		mov	byte ptr [eax+10h], 0

loc_7104D187:				; CODE XREF: sub_7104D000+162j
		mov	ebx, [esi+8]
		add	eax, 18h
		add	ebx, 1
		cmp	ebx, edi
		mov	[esi+8], ebx
		jl	short loc_7104D160

loc_7104D197:				; CODE XREF: sub_7104D000+150j
		mov	eax, [ebp+arg_4]
		mov	edi, [ebp+var_58]
		mov	edx, [ebp+arg_0]
		mov	[edi+8], eax
		mov	eax, [edx]
		cmp	eax, edi
		jz	short loc_7104D1BB
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7104D1E4

loc_7104D1B3:				; CODE XREF: sub_7104D000+1FCj
		mov	esi, [ebp+var_58]
		mov	ebx, [ebp+arg_0]
		mov	[ebx], esi

loc_7104D1BB:				; CODE XREF: sub_7104D000+1A7j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 8Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_7104D1D1:				; CODE XREF: sub_7104D000+59j
		mov	eax, [eax]
		mov	esi, [ebp+var_58]
		cmp	eax, 1
		jnz	loc_7104D05F
		jmp	loc_7104D0D3
; ---------------------------------------------------------------------------

loc_7104D1E4:				; CODE XREF: sub_7104D000+1B1j
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_7104CEF0
		jmp	short loc_7104D1B3
; ---------------------------------------------------------------------------
		align 10h

loc_7104D200:				; CODE XREF: sub_7104D000+4Aj
		mov	ebx, [ebp+arg_0]
		lea	eax, [eax+eax*2]
		lea	eax, ds:10h[eax*8]
		mov	esi, ds:_ZN7QString4freeEPNS_4DataE
		add	eax, [ebx]
		mov	[ebp+var_68], esi
		sub	eax, 18h
		mov	[ebp+var_54], eax
		jmp	short loc_7104D25B
; ---------------------------------------------------------------------------

loc_7104D220:				; CODE XREF: sub_7104D000+26Cj
					; sub_7104D000+281j
		mov	ecx, [ebp+var_54]
		mov	eax, [ecx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104D240
		mov	eax, [ecx+8]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	[ebp+var_68]

loc_7104D240:				; CODE XREF: sub_7104D000+22Ej
		mov	ebx, [ebp+arg_0]
		mov	esi, [ebp+arg_4]
		mov	eax, [ebx]
		sub	dword ptr [eax+8], 1
		mov	eax, [ebx]
		sub	[ebp+var_54], 18h
		cmp	[eax+8], esi
		jle	loc_7104D053

loc_7104D25B:				; CODE XREF: sub_7104D000+21Ej
		mov	edi, [ebp+var_54]
		mov	[ebp+var_60], edi
		mov	eax, [edi+0Ch]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104D220
		mov	eax, [edi+0Ch]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7104D220
; ---------------------------------------------------------------------------

loc_7104D283:				; CODE XREF: sub_7104D000+8Fj
		mov	ecx, ds:_Z9qBadAllocv
		mov	[ebp+var_50], ecx
		call	ecx ; _Z9qBadAllocv
		mov	ebx, [ebp+var_64]
		mov	[ebp+var_5C], ebx
		mov	esi, ebx
		call	[ebp+var_50]
		jmp	loc_7104D095
sub_7104D000	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104D29E	proc near		; DATA XREF: sub_7104D000+26o
		add	ebp, 18h
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-6Ch], eax
		mov	eax, [ebp-60h]
		add	eax, 8
		mov	[esp+0], eax
		call	sub_710477B0
		mov	edx, [ebp-6Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_7104D29E	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7104D2D0	proc near		; CODE XREF: sub_71014C2E+5Bp
					; .text:71015069p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 2Ch
		mov	edx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_10], ebx
		mov	[esp+2Ch+var_C], esi
		mov	[esp+2Ch+var_8], edi
		mov	[esp+2Ch+var_4], ebp
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_7104D341
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_7104D341
		mov	edi, [edx]
		mov	ebp, ds:_ZN7QString4freeEPNS_4DataE
		mov	eax, [edi+8]
		lea	esi, [edi+10h]
		shl	eax, 4
		lea	ebx, [eax+edi+10h]
		lea	esi, [esi+0]

loc_7104D310:				; CODE XREF: sub_7104D2D0+52j
		cmp	esi, ebx
		jz	short loc_7104D330

loc_7104D314:				; CODE XREF: sub_7104D2D0+5Ej
		sub	ebx, 10h
		mov	eax, [ebx+4]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104D310
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	ebp ; _ZN7QString4freeEPNS_4DataE
		cmp	esi, ebx
		jnz	short loc_7104D314

loc_7104D330:				; CODE XREF: sub_7104D2D0+42j
		mov	[esp+2Ch+var_28], 4
		mov	[esp+2Ch+var_2C], edi
		call	ds:_ZN11QVectorData4freeEPS_i

loc_7104D341:				; CODE XREF: sub_7104D2D0+1Bj
					; sub_7104D2D0+25j
		mov	ebx, [esp+2Ch+var_10]
		mov	esi, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_8]
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
sub_7104D2D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7104D360	proc near		; CODE XREF: sub_7101D820+508p
					; sub_7101DEAE+126p ...

var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_710530D0
		mov	[ebp+var_18], offset sub_7104D43F
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		add	edx, 10h
		mov	[ebp+var_44], edx
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+8]
		lea	eax, [edx+eax*8+10h]
		mov	[ebp+var_40], eax
		jmp	short loc_7104D3D1
; ---------------------------------------------------------------------------

loc_7104D3A7:				; CODE XREF: sub_7104D360+90j
					; sub_7104D360+9Aj ...
		mov	edx, [ebp+var_40]
		mov	eax, [edx-8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104D3CD
		mov	edx, [ebp+var_40]
		mov	eax, [edx-8]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7104D3CD:				; CODE XREF: sub_7104D360+55j
		sub	[ebp+var_40], 8

loc_7104D3D1:				; CODE XREF: sub_7104D360+45j
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+var_40]
		sub	eax, 8
		cmp	[ebp+var_44], edx
		mov	[ebp+var_48], eax
		jz	short loc_7104D417
		mov	edx, [ebp+var_40]
		mov	ecx, [ebp+var_40]
		mov	eax, [edx-4]
		sub	ecx, 4
		test	eax, eax
		jz	short loc_7104D3A7
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104D3A7
		mov	edx, [ebp+var_40]
		mov	eax, [edx-4]
		mov	[esp], ecx
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		call	sub_7104BA80
		jmp	short loc_7104D3A7
; ---------------------------------------------------------------------------

loc_7104D417:				; CODE XREF: sub_7104D360+80j
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_7104D360	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104D43F	proc near		; DATA XREF: sub_7104D360+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-48h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-4Ch], eax
		mov	[esp+0], edx
		call	sub_710477B0
		mov	eax, [ebp-4Ch]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7104D43F	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7104D470	proc near		; CODE XREF: sub_71049F70+7CEp
					; sub_71049F70+893p ...

var_8C		= dword	ptr -8Ch
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 9Ch
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_710530D8
		mov	[ebp+var_28], offset sub_7104D756
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	eax, [edx+8]
		cmp	eax, [ebp+arg_4]
		mov	[ebp+var_60], edx
		jle	short loc_7104D4C0
		mov	edx, [edx]
		cmp	edx, 1
		jz	loc_7104D6B1

loc_7104D4C0:				; CODE XREF: sub_7104D470+43j
		mov	eax, [ebp+var_60]

loc_7104D4C3:				; CODE XREF: sub_7104D470+28Ej
		mov	edx, [ebp+arg_8]
		cmp	[eax+4], edx
		jz	loc_7104D684

loc_7104D4CF:				; CODE XREF: sub_7104D470+21Fj
		mov	ebx, [ebp+arg_8]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_48], 0FFFFFFFFh
		lea	eax, ds:10h[ebx*8]
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	[ebp+var_7C], eax
		mov	[ebp+var_64], eax
		mov	[ebp+var_80], eax
		jz	loc_7104D73B

loc_7104D502:				; CODE XREF: sub_7104D470+2E1j
		mov	ecx, [ebp+var_7C]
		movzx	eax, byte ptr [ecx+0Ch]
		mov	dword ptr [ecx], 1
		mov	ebx, [ebp+arg_8]
		mov	dword ptr [ecx+8], 0
		or	eax, 1
		mov	[ecx+0Ch], al
		mov	esi, [ebp+arg_0]
		and	eax, 0FFFFFFFDh
		mov	[ecx+4], ebx
		mov	edx, [esi]
		movzx	edx, byte ptr [edx+0Ch]
		and	edx, 2
		or	eax, edx
		mov	[ecx+0Ch], al
		and	dword ptr [ecx+0Ch], 3
		mov	eax, [ebp+var_64]
		mov	[ebp+var_60], eax

loc_7104D540:				; CODE XREF: sub_7104D470+225j
		mov	ebx, [ebp+var_60]
		mov	ecx, [ebp+arg_0]
		mov	esi, [ebp+var_80]
		mov	eax, [ebx+8]
		mov	edx, [ecx]
		lea	esi, [esi+eax*8+10h]
		mov	ebx, eax
		mov	[ebp+var_54], esi
		mov	ecx, [edx+8]
		mov	esi, [ebp+arg_4]
		cmp	esi, ecx
		mov	[ebp+var_68], esi
		jle	short loc_7104D567
		mov	[ebp+var_68], ecx

loc_7104D567:				; CODE XREF: sub_7104D470+F2j
		cmp	eax, [ebp+var_68]
		jge	loc_7104D5F8
		mov	eax, [ebp+var_54]
		lea	ebx, [edx+ebx*8+10h]
		mov	[ebp+var_58], ebx
		add	eax, 8
		mov	[ebp+var_5C], eax
		jmp	short loc_7104D59D
; ---------------------------------------------------------------------------

loc_7104D582:				; CODE XREF: sub_7104D470+136j
					; sub_7104D470+167j ...
		mov	esi, [ebp+var_60]
		mov	edx, [ebp+var_5C]
		add	[ebp+var_5C], 8
		mov	eax, [esi+8]
		mov	[ebp+var_54], edx
		add	eax, 1
		cmp	[ebp+var_68], eax
		mov	[esi+8], eax
		jle	short loc_7104D5F8

loc_7104D59D:				; CODE XREF: sub_7104D470+110j
		mov	esi, [ebp+var_54]
		add	[ebp+var_58], 8
		test	esi, esi
		jz	short loc_7104D582
		mov	edx, [ebp+var_58]
		mov	ecx, [ebp+var_54]
		mov	eax, [edx-8]
		mov	[ecx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ebx, [ebp+var_58]
		mov	edx, ecx
		add	edx, 4
		mov	eax, [ebx-4]
		mov	[ecx+4], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	esi, [ebp+var_54]
		mov	eax, [esi+4]
		test	byte ptr [eax+0Ch], 1
		jnz	short loc_7104D582
		mov	ecx, [eax+4]
		mov	[esp+8], ecx
		mov	eax, [eax+8]
		mov	[esp], edx
		mov	[ebp+var_48], 2
		mov	[esp+4], eax
		call	sub_7104BC20
		jmp	short loc_7104D582
; ---------------------------------------------------------------------------

loc_7104D5F8:				; CODE XREF: sub_7104D470+FAj
					; sub_7104D470+12Bj
		cmp	eax, [ebp+arg_4]
		jge	short loc_7104D649
		mov	ecx, ds:_ZN7QString11shared_nullE
		mov	edi, ds:_ZN11QVectorData11shared_nullE
		mov	eax, [ebp+var_54]
		mov	esi, [ebp+var_60]
		mov	[ebp+var_8C], ecx
		mov	edx, edi

loc_7104D617:				; CODE XREF: sub_7104D470+1D7j
		test	eax, eax
		jz	short loc_7104D632
		mov	ebx, [ebp+var_8C]
		mov	[eax], ebx
		lock inc dword ptr [ecx]
		setnz	bl
		mov	[eax+4], edi
		lock inc dword ptr [edx]
		setnz	bl

loc_7104D632:				; CODE XREF: sub_7104D470+1A9j
		mov	ebx, [esi+8]
		add	eax, 8
		add	ebx, 1
		mov	[ebp+var_70], ebx
		mov	[esi+8], ebx
		mov	ebx, [ebp+arg_4]
		cmp	[ebp+var_70], ebx
		jl	short loc_7104D617

loc_7104D649:				; CODE XREF: sub_7104D470+18Bj
		mov	eax, [ebp+var_60]
		mov	edx, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		mov	[eax+8], edx
		mov	eax, [ecx]
		cmp	[ebp+var_60], eax
		jz	short loc_7104D66E
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7104D69A

loc_7104D666:				; CODE XREF: sub_7104D470+23Fj
		mov	esi, [ebp+var_60]
		mov	ebx, [ebp+arg_0]
		mov	[ebx], esi

loc_7104D66E:				; CODE XREF: sub_7104D470+1EAj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 9Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_7104D684:				; CODE XREF: sub_7104D470+59j
		mov	eax, [eax]
		mov	ecx, [ebp+var_60]
		cmp	eax, 1
		mov	[ebp+var_80], ecx
		jnz	loc_7104D4CF
		jmp	loc_7104D540
; ---------------------------------------------------------------------------

loc_7104D69A:				; CODE XREF: sub_7104D470+1F4j
		mov	eax, [ecx]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_7104D360
		jmp	short loc_7104D666
; ---------------------------------------------------------------------------

loc_7104D6B1:				; CODE XREF: sub_7104D470+4Aj
		mov	ebx, [ebp+arg_0]
		lea	eax, ds:10h[eax*8]
		add	eax, [ebx]
		sub	eax, 8
		mov	[ebp+var_6C], eax
		jmp	short loc_7104D704
; ---------------------------------------------------------------------------

loc_7104D6C5:				; CODE XREF: sub_7104D470+2A4j
					; sub_7104D470+2AEj ...
		mov	edx, [ebp+var_6C]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104D6E9
		mov	ecx, [ebp+var_6C]
		mov	eax, [ecx]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7104D6E9:				; CODE XREF: sub_7104D470+262j
		mov	ebx, [ebp+arg_0]
		mov	esi, [ebp+arg_4]
		mov	eax, [ebx]
		sub	dword ptr [eax+8], 1
		mov	eax, [ebx]
		sub	[ebp+var_6C], 8
		cmp	[eax+8], esi
		jle	loc_7104D4C3

loc_7104D704:				; CODE XREF: sub_7104D470+253j
		mov	esi, [ebp+var_6C]
		mov	[ebp+var_78], esi
		mov	eax, [esi+4]
		mov	ecx, esi
		add	ecx, 4
		test	eax, eax
		jz	short loc_7104D6C5
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104D6C5
		mov	ebx, [ebp+var_6C]
		mov	eax, [ebx+4]
		mov	[esp], ecx
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		call	sub_7104BA80
		jmp	short loc_7104D6C5
; ---------------------------------------------------------------------------

loc_7104D73B:				; CODE XREF: sub_7104D470+8Cj
		mov	esi, ds:_Z9qBadAllocv
		call	esi ; _Z9qBadAllocv
		mov	eax, [ebp+var_7C]
		mov	[ebp+var_64], eax
		call	esi ; _Z9qBadAllocv
		mov	edx, [ebp+var_7C]
		mov	[ebp+var_80], edx
		jmp	loc_7104D502
sub_7104D470	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104D756	proc near		; DATA XREF: sub_7104D470+26o

arg_0		= dword	ptr  4

		add	ebp, 18h
		mov	eax, [ebp-48h]
		mov	esi, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-84h], esi
		jz	short loc_7104D790
		cmp	eax, 2
		jz	short loc_7104D7CE
		mov	eax, [ebp-78h]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], eax
		call	sub_710477B0
		mov	[esp+0], esi
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7104D790:				; CODE XREF: sub_7104D756+12j
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], eax
		call	sub_710477B0
		mov	edx, [ebp-84h]
		mov	[esp+0], edx
		call	sub_71051CE0
		mov	ecx, [ebp-80h]
		mov	ebx, [ebp+8]
		mov	dword ptr [ebp-48h], 3
		mov	[esp+arg_0], ecx
		mov	[esp+0], ebx
		call	sub_7104D360
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_7104D7CE:				; CODE XREF: sub_7104D756+17j
		mov	dword ptr [ebp-48h], 0
		call	sub_71051FB0
		mov	esi, [ebp-84h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], esi
		call	_Unwind_SjLj_Resume
sub_7104D756	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7104D7F0	proc near		; CODE XREF: sub_71044770+A9p
					; sub_71044843+3Fp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		push	esi
		push	ebx
		sub	esp, 10h
		mov	edi, [esp+1Ch+arg_4]
		mov	eax, [edi+8]
		lea	esi, [edi+10h]
		lea	ebx, [edi+eax*4+10h]

loc_7104D804:				; CODE XREF: sub_7104D7F0+1Fj
					; sub_7104D7F0+29j
		cmp	ebx, esi
		jz	short loc_7104D82D

loc_7104D808:				; CODE XREF: sub_7104D7F0+3Bj
		sub	ebx, 4
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_7104D804
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104D804
		mov	eax, [ebx]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_7104C030
		cmp	ebx, esi
		jnz	short loc_7104D808

loc_7104D82D:				; CODE XREF: sub_7104D7F0+16j
		mov	eax, ds:_ZN11QVectorData4freeEPS_i
		mov	[esp+1Ch+arg_0], edi
		mov	[esp+1Ch+arg_4], 4
		add	esp, 10h
		pop	ebx
		pop	esi
		pop	edi
		jmp	eax
sub_7104D7F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7104D850	proc near		; CODE XREF: sub_710448C0+EBp
					; sub_7104E120+1D0p

var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 7Ch
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71053204
		mov	[ebp+var_28], offset sub_7104DAC4
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	eax, [edx+8]
		cmp	eax, [ebp+arg_4]
		mov	[ebp+var_5C], edx
		jle	short loc_7104D89D
		mov	edx, [edx]
		cmp	edx, 1
		jz	loc_7104DA47

loc_7104D89D:				; CODE XREF: sub_7104D850+40j
		mov	eax, [ebp+var_5C]

loc_7104D8A0:				; CODE XREF: sub_7104D850+221j
		mov	ecx, [ebp+arg_8]
		cmp	[eax+4], ecx
		jz	loc_7104DA1A

loc_7104D8AC:				; CODE XREF: sub_7104D850+1D5j
		mov	edx, [ebp+arg_8]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_48], 0FFFFFFFFh
		lea	eax, ds:10h[edx*4]
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	[ebp+var_6C], eax
		mov	[ebp+var_60], eax
		mov	[ebp+var_70], eax
		jz	loc_7104DAA8

loc_7104D8DF:				; CODE XREF: sub_7104D850+26Fj
		mov	eax, [ebp+var_6C]
		mov	dword ptr [eax], 1
		mov	edx, [ebp+arg_8]
		mov	ecx, [ebp+var_6C]
		mov	dword ptr [eax+8], 0
		mov	[eax+4], edx
		movzx	eax, byte ptr [ecx+0Ch]
		or	eax, 1
		mov	[ecx+0Ch], al
		mov	ebx, [ebp+arg_0]
		and	eax, 0FFFFFFFDh
		mov	edx, [ebx]
		movzx	edx, byte ptr [edx+0Ch]
		and	edx, 2
		or	eax, edx
		mov	[ecx+0Ch], al
		and	dword ptr [ecx+0Ch], 3
		mov	eax, [ebp+var_60]
		mov	[ebp+var_5C], eax

loc_7104D920:				; CODE XREF: sub_7104D850+1DBj
		mov	ebx, [ebp+var_5C]
		mov	ecx, [ebp+arg_0]
		mov	eax, [ebx+8]
		mov	ebx, [ebp+var_70]
		mov	edx, [ecx]
		mov	ecx, eax
		lea	ebx, [ebx+eax*4+10h]
		mov	[ebp+var_54], ebx
		mov	ebx, [edx+8]
		mov	[ebp+var_64], ebx
		mov	ebx, [ebp+arg_4]
		cmp	[ebp+var_64], ebx
		jle	short loc_7104D948
		mov	[ebp+var_64], ebx

loc_7104D948:				; CODE XREF: sub_7104D850+F3j
		cmp	eax, [ebp+var_64]
		jge	short loc_7104D9B0
		lea	ecx, [edx+ecx*4+10h]
		mov	[ebp+var_58], ecx
		jmp	short loc_7104D96B
; ---------------------------------------------------------------------------

loc_7104D956:				; CODE XREF: sub_7104D850+124j
					; sub_7104D850+13Dj ...
		mov	ebx, [ebp+var_5C]
		add	[ebp+var_54], 4
		mov	eax, [ebx+8]
		add	eax, 1
		cmp	eax, [ebp+var_64]
		mov	[ebx+8], eax
		jge	short loc_7104D9B0

loc_7104D96B:				; CODE XREF: sub_7104D850+104j
		mov	ebx, [ebp+var_54]
		add	[ebp+var_58], 4
		test	ebx, ebx
		jz	short loc_7104D956
		mov	edx, [ebp+var_58]
		mov	ecx, [ebp+var_54]
		mov	eax, [edx-4]
		mov	[ecx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ecx]
		test	byte ptr [eax+0Ch], 1
		jnz	short loc_7104D956
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], ecx
		mov	[ebp+var_48], 2
		mov	[esp+4], eax
		call	sub_7104C230
		jmp	short loc_7104D956
; ---------------------------------------------------------------------------
		align 10h

loc_7104D9B0:				; CODE XREF: sub_7104D850+FBj
					; sub_7104D850+119j
		cmp	eax, [ebp+arg_4]
		jge	short loc_7104D9E2
		mov	ecx, ds:_ZN11QVectorData11shared_nullE
		mov	eax, [ebp+var_54]
		mov	esi, [ebp+var_5C]
		mov	edi, [ebp+arg_4]
		mov	edx, ecx

loc_7104D9C6:				; CODE XREF: sub_7104D850+190j
		test	eax, eax
		jz	short loc_7104D9D2
		mov	[eax], ecx
		lock inc dword ptr [edx]
		setnz	bl

loc_7104D9D2:				; CODE XREF: sub_7104D850+178j
		mov	ebx, [esi+8]
		add	eax, 4
		add	ebx, 1
		cmp	ebx, edi
		mov	[esi+8], ebx
		jl	short loc_7104D9C6

loc_7104D9E2:				; CODE XREF: sub_7104D850+163j
		mov	eax, [ebp+var_5C]
		mov	edx, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		mov	[eax+8], edx
		mov	eax, [ecx]
		cmp	eax, [ebp+var_5C]
		jz	short loc_7104DA07
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7104DA30

loc_7104D9FF:				; CODE XREF: sub_7104D850+1F5j
		mov	eax, [ebp+var_5C]
		mov	ebx, [ebp+arg_0]
		mov	[ebx], eax

loc_7104DA07:				; CODE XREF: sub_7104D850+1A3j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 7Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_7104DA1A:				; CODE XREF: sub_7104D850+56j
		mov	eax, [eax]
		mov	ebx, [ebp+var_5C]
		cmp	eax, 1
		mov	[ebp+var_70], ebx
		jnz	loc_7104D8AC
		jmp	loc_7104D920
; ---------------------------------------------------------------------------

loc_7104DA30:				; CODE XREF: sub_7104D850+1ADj
		mov	eax, [ecx]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_7104D7F0
		jmp	short loc_7104D9FF
; ---------------------------------------------------------------------------

loc_7104DA47:				; CODE XREF: sub_7104D850+47j
		mov	ebx, [ebp+arg_0]
		lea	eax, ds:10h[eax*4]
		mov	ebx, [ebx]
		add	eax, ebx
		mov	[ebp+var_68], eax
		jmp	short loc_7104DA77
; ---------------------------------------------------------------------------
		align 10h

loc_7104DA60:				; CODE XREF: sub_7104D850+232j
					; sub_7104D850+23Cj ...
		mov	ebx, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	eax, [ebx]
		sub	dword ptr [eax+8], 1
		mov	eax, [ebx]
		cmp	[eax+8], edx
		jle	loc_7104D8A0

loc_7104DA77:				; CODE XREF: sub_7104D850+208j
		sub	[ebp+var_68], 4
		mov	edx, [ebp+var_68]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_7104DA60
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104DA60
		mov	ecx, [ebp+var_68]
		mov	eax, [ecx]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_7104C030
		jmp	short loc_7104DA60
; ---------------------------------------------------------------------------

loc_7104DAA8:				; CODE XREF: sub_7104D850+89j
		mov	ecx, ds:_Z9qBadAllocv
		mov	[ebp+var_50], ecx
		call	ecx ; _Z9qBadAllocv
		mov	ebx, [ebp+var_6C]
		mov	[ebp+var_60], ebx
		call	[ebp+var_50]
		mov	[ebp+var_70], ebx
		jmp	loc_7104D8DF
sub_7104D850	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104DAC4	proc near		; DATA XREF: sub_7104D850+23o

arg_0		= dword	ptr  4

		add	ebp, 18h
		mov	ebx, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-74h], ebx
		jz	short loc_7104DAEE
		mov	dword ptr [ebp-48h], 0
		call	sub_71051FB0
		mov	[esp+0], ebx
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7104DAEE:				; CODE XREF: sub_7104DAC4+Dj
		mov	eax, [ebp-74h]
		mov	[esp+0], eax
		call	sub_71051CE0
		mov	edx, [ebp-70h]
		mov	ecx, [ebp+8]
		mov	dword ptr [ebp-48h], 1
		mov	[esp+arg_0], edx
		mov	[esp+0], ecx
		call	sub_7104D7F0
		call	sub_710524F0
sub_7104DAC4	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7104DB20	proc near		; CODE XREF: sub_7101D820+4EAp
					; sub_7101DEAE+168p ...

var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_710531E0
		mov	[ebp+var_18], offset sub_7104DC00
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		add	edx, 10h
		mov	[ebp+var_48], edx
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+8]
		lea	eax, [edx+eax*8+10h]
		mov	[ebp+var_40], eax
		jmp	short loc_7104DB92
; ---------------------------------------------------------------------------

loc_7104DB67:				; CODE XREF: sub_7104DB20+91j
					; sub_7104DB20+9Bj ...
		mov	edx, [ebp+var_44]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104DB8E
		mov	edx, [ebp+var_44]
		mov	eax, [edx]
		mov	[esp], edx
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_710459F0

loc_7104DB8E:				; CODE XREF: sub_7104DB20+54j
		sub	[ebp+var_40], 8

loc_7104DB92:				; CODE XREF: sub_7104DB20+45j
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+var_40]
		sub	eax, 8
		cmp	[ebp+var_48], edx
		mov	[ebp+var_44], eax
		jz	short loc_7104DBD8
		mov	edx, [ebp+var_40]
		mov	ecx, [ebp+var_40]
		mov	eax, [edx-4]
		sub	ecx, 4
		test	eax, eax
		jz	short loc_7104DB67
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104DB67
		mov	edx, [ebp+var_40]
		mov	eax, [edx-4]
		mov	[esp], ecx
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		call	sub_7104DFE0
		jmp	short loc_7104DB67
; ---------------------------------------------------------------------------

loc_7104DBD8:				; CODE XREF: sub_7104DB20+81j
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_7104DB20	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104DC00	proc near		; DATA XREF: sub_7104DB20+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-44h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-4Ch], eax
		mov	[esp+0], edx
		call	sub_7103BBF0
		mov	eax, [ebp-4Ch]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7104DC00	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7104DC30	proc near		; CODE XREF: sub_71049F70+7F6p
					; sub_71049F70+840p ...

var_8C		= dword	ptr -8Ch
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 9Ch
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71053238
		mov	[ebp+var_28], offset sub_7104DF37
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	eax, [edx+8]
		cmp	eax, [ebp+arg_4]
		mov	[ebp+var_60], edx
		jle	short loc_7104DC80
		mov	edx, [edx]
		cmp	edx, 1
		jz	loc_7104DE8F

loc_7104DC80:				; CODE XREF: sub_7104DC30+43j
		mov	eax, [ebp+var_60]

loc_7104DC83:				; CODE XREF: sub_7104DC30+2AFj
		mov	edx, [ebp+arg_8]
		cmp	[eax+4], edx
		jz	loc_7104DE5F

loc_7104DC8F:				; CODE XREF: sub_7104DC30+23Aj
		mov	ebx, [ebp+arg_8]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_48], 0FFFFFFFFh
		lea	eax, ds:10h[ebx*8]
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	[ebp+var_7C], eax
		mov	[ebp+var_64], eax
		mov	[ebp+var_80], eax
		jz	loc_7104DF1C

loc_7104DCC2:				; CODE XREF: sub_7104DC30+302j
		mov	ecx, [ebp+var_7C]
		movzx	eax, byte ptr [ecx+0Ch]
		mov	dword ptr [ecx], 1
		mov	ebx, [ebp+arg_8]
		mov	dword ptr [ecx+8], 0
		or	eax, 1
		mov	[ecx+0Ch], al
		mov	esi, [ebp+arg_0]
		and	eax, 0FFFFFFFDh
		mov	[ecx+4], ebx
		mov	edx, [esi]
		movzx	edx, byte ptr [edx+0Ch]
		and	edx, 2
		or	eax, edx
		mov	[ecx+0Ch], al
		and	dword ptr [ecx+0Ch], 3
		mov	eax, [ebp+var_64]
		mov	[ebp+var_60], eax

loc_7104DD00:				; CODE XREF: sub_7104DC30+240j
		mov	ebx, [ebp+var_60]
		mov	ecx, [ebp+arg_0]
		mov	esi, [ebp+var_80]
		mov	eax, [ebx+8]
		mov	edx, [ecx]
		lea	esi, [esi+eax*8+10h]
		mov	ebx, eax
		mov	[ebp+var_54], esi
		mov	ecx, [edx+8]
		mov	esi, [ebp+arg_4]
		cmp	esi, ecx
		mov	[ebp+var_68], esi
		jle	short loc_7104DD27
		mov	[ebp+var_68], ecx

loc_7104DD27:				; CODE XREF: sub_7104DC30+F2j
		cmp	eax, [ebp+var_68]
		jge	loc_7104DDD2
		mov	eax, [ebp+var_54]
		lea	ebx, [edx+ebx*8+10h]
		mov	[ebp+var_58], ebx
		add	eax, 8
		mov	[ebp+var_5C], eax
		jmp	short loc_7104DD7E
; ---------------------------------------------------------------------------

loc_7104DD42:				; CODE XREF: sub_7104DC30+170j
					; sub_7104DC30+181j
		mov	ebx, [ebp+var_58]
		mov	edx, [ebp+var_54]
		mov	esi, [ebp+var_54]
		mov	eax, [ebx-4]
		add	edx, 4
		mov	[esi+4], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	eax, [esi+4]
		test	byte ptr [eax+0Ch], 1
		jz	short loc_7104DDB3

loc_7104DD63:				; CODE XREF: sub_7104DC30+157j
					; sub_7104DC30+1A0j
		mov	edx, [ebp+var_60]
		mov	ecx, [ebp+var_5C]
		add	[ebp+var_5C], 8
		mov	eax, [edx+8]
		mov	[ebp+var_54], ecx
		add	eax, 1
		cmp	[ebp+var_68], eax
		mov	[edx+8], eax
		jle	short loc_7104DDD2

loc_7104DD7E:				; CODE XREF: sub_7104DC30+110j
		mov	ecx, [ebp+var_54]
		add	[ebp+var_58], 8
		test	ecx, ecx
		jz	short loc_7104DD63
		mov	edx, [ebp+var_58]
		mov	ecx, [ebp+var_54]
		mov	eax, [edx-8]
		mov	[ecx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ecx]
		test	byte ptr [eax+10h], 1
		jnz	short loc_7104DD42
		mov	[esp], ecx
		mov	[ebp+var_48], 4
		call	sub_71045970
		jmp	short loc_7104DD42
; ---------------------------------------------------------------------------

loc_7104DDB3:				; CODE XREF: sub_7104DC30+131j
		mov	ecx, [eax+4]
		mov	[esp+8], ecx
		mov	eax, [eax+8]
		mov	[esp], edx
		mov	[ebp+var_48], 2
		mov	[esp+4], eax
		call	sub_7104E120
		jmp	short loc_7104DD63
; ---------------------------------------------------------------------------

loc_7104DDD2:				; CODE XREF: sub_7104DC30+FAj
					; sub_7104DC30+14Cj
		cmp	eax, [ebp+arg_4]
		jge	short loc_7104DE25
		mov	ebx, ds:_ZN9QListData11shared_nullE
		mov	edi, ds:_ZN11QVectorData11shared_nullE
		mov	eax, [ebp+var_54]
		mov	esi, [ebp+var_60]
		mov	[ebp+var_8C], ebx
		mov	ecx, ebx
		mov	edx, edi

loc_7104DDF3:				; CODE XREF: sub_7104DC30+1F3j
		test	eax, eax
		jz	short loc_7104DE0E
		mov	ebx, [ebp+var_8C]
		mov	[eax], ebx
		lock inc dword ptr [ecx]
		setnz	bl
		mov	[eax+4], edi
		lock inc dword ptr [edx]
		setnz	bl

loc_7104DE0E:				; CODE XREF: sub_7104DC30+1C5j
		mov	ebx, [esi+8]
		add	eax, 8
		add	ebx, 1
		mov	[ebp+var_6C], ebx
		mov	[esi+8], ebx
		mov	ebx, [ebp+arg_4]
		cmp	[ebp+var_6C], ebx
		jl	short loc_7104DDF3

loc_7104DE25:				; CODE XREF: sub_7104DC30+1A5j
		mov	ebx, [ebp+var_60]
		mov	esi, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		mov	[ebx+8], esi
		mov	eax, [edx]
		cmp	ebx, eax
		jz	short loc_7104DE49
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7104DE75

loc_7104DE41:				; CODE XREF: sub_7104DC30+25Dj
		mov	esi, [ebp+var_60]
		mov	ebx, [ebp+arg_0]
		mov	[ebx], esi

loc_7104DE49:				; CODE XREF: sub_7104DC30+205j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 9Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_7104DE5F:				; CODE XREF: sub_7104DC30+59j
		mov	eax, [eax]
		mov	ecx, [ebp+var_60]
		cmp	eax, 1
		mov	[ebp+var_80], ecx
		jnz	loc_7104DC8F
		jmp	loc_7104DD00
; ---------------------------------------------------------------------------

loc_7104DE75:				; CODE XREF: sub_7104DC30+20Fj
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_7104DB20
		jmp	short loc_7104DE41
; ---------------------------------------------------------------------------

loc_7104DE8F:				; CODE XREF: sub_7104DC30+4Aj
		mov	ebx, [ebp+arg_0]
		lea	eax, ds:10h[eax*8]
		add	eax, [ebx]
		sub	eax, 8
		mov	[ebp+var_70], eax
		jmp	short loc_7104DEE5
; ---------------------------------------------------------------------------

loc_7104DEA3:				; CODE XREF: sub_7104DC30+2C5j
					; sub_7104DC30+2CFj ...
		mov	edx, [ebp+var_74]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104DECA
		mov	ecx, [ebp+var_74]
		mov	eax, [ecx]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_710459F0

loc_7104DECA:				; CODE XREF: sub_7104DC30+280j
		mov	ebx, [ebp+arg_0]
		mov	esi, [ebp+arg_4]
		mov	eax, [ebx]
		sub	dword ptr [eax+8], 1
		mov	eax, [ebx]
		sub	[ebp+var_70], 8
		cmp	[eax+8], esi
		jle	loc_7104DC83

loc_7104DEE5:				; CODE XREF: sub_7104DC30+271j
		mov	esi, [ebp+var_70]
		mov	[ebp+var_74], esi
		mov	eax, [esi+4]
		mov	ecx, esi
		add	ecx, 4
		test	eax, eax
		jz	short loc_7104DEA3
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104DEA3
		mov	ebx, [ebp+var_70]
		mov	eax, [ebx+4]
		mov	[esp], ecx
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		call	sub_7104DFE0
		jmp	short loc_7104DEA3
; ---------------------------------------------------------------------------

loc_7104DF1C:				; CODE XREF: sub_7104DC30+8Cj
		mov	esi, ds:_Z9qBadAllocv
		call	esi ; _Z9qBadAllocv
		mov	eax, [ebp+var_7C]
		mov	[ebp+var_64], eax
		call	esi ; _Z9qBadAllocv
		mov	edx, [ebp+var_7C]
		mov	[ebp+var_80], edx
		jmp	loc_7104DCC2
sub_7104DC30	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104DF37	proc near		; DATA XREF: sub_7104DC30+26o

arg_0		= dword	ptr  4

		add	ebp, 18h
		mov	eax, [ebp-48h]
		mov	esi, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-84h], esi
		jz	short loc_7104DF76
		cmp	eax, 2
		jz	short loc_7104DFB4
		cmp	eax, 3
		jz	short loc_7104DF88
		mov	eax, [ebp-74h]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], eax
		call	sub_7103BBF0
		mov	[esp+0], esi
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7104DF76:				; CODE XREF: sub_7104DF37+12j
		mov	eax, [ebp-54h]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], eax
		call	sub_7103BBF0

loc_7104DF88:				; CODE XREF: sub_7104DF37+1Cj
		mov	esi, [ebp-84h]
		mov	[esp+0], esi
		call	sub_71051CE0
		mov	eax, [ebp-80h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-48h], 3
		mov	[esp+arg_0], eax
		mov	[esp+0], edx
		call	sub_7104DB20
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_7104DFB4:				; CODE XREF: sub_7104DF37+17j
		mov	dword ptr [ebp-48h], 0
		call	sub_71051FB0
		mov	ecx, [ebp-84h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
sub_7104DF37	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7104DFE0	proc near		; CODE XREF: sub_7101D820+4CCp
					; sub_7101DEAE+1AAp ...

var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_710531DA
		mov	[ebp+var_18], offset sub_7104E0D8
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		add	edx, 10h
		mov	[ebp+var_48], edx
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+8]
		lea	eax, [eax+eax*2]
		lea	eax, [edx+eax*4+10h]
		mov	[ebp+var_40], eax
		jmp	short loc_7104E064
; ---------------------------------------------------------------------------
		align 10h

loc_7104E030:				; CODE XREF: sub_7104DFE0+A3j
					; sub_7104DFE0+ADj ...
		mov	edx, [ebp+var_40]
		mov	eax, [edx-0Ch]
		test	eax, eax
		jz	short loc_7104E060
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104E060
		mov	edx, [ebp+var_40]
		mov	eax, [edx-0Ch]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp+4], eax
		mov	eax, [ebp+var_44]
		mov	[esp], eax
		call	sub_7104D7F0

loc_7104E060:				; CODE XREF: sub_7104DFE0+58j
					; sub_7104DFE0+62j
		sub	[ebp+var_40], 0Ch

loc_7104E064:				; CODE XREF: sub_7104DFE0+48j
		mov	edx, [ebp+var_40]
		mov	eax, [ebp+var_40]
		sub	edx, 0Ch
		cmp	[ebp+var_48], eax
		mov	[ebp+var_44], edx
		jz	short loc_7104E0B0
		mov	edx, [ebp+var_40]
		mov	ecx, [ebp+var_40]
		mov	eax, [edx-8]
		sub	ecx, 8
		test	eax, eax
		jz	short loc_7104E030
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104E030
		mov	edx, [ebp+var_40]
		mov	eax, [edx-8]
		mov	[esp], ecx
		mov	[ebp+var_38], 1
		mov	[esp+4], eax
		call	sub_7104BA80
		jmp	short loc_7104E030
; ---------------------------------------------------------------------------
		align 10h

loc_7104E0B0:				; CODE XREF: sub_7104DFE0+93j
		mov	edx, [ebp+arg_4]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], edx
		call	ds:_ZN11QVectorData4freeEPS_i
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_7104DFE0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104E0D8	proc near		; DATA XREF: sub_7104DFE0+20o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp-44h]
		mov	[ebp-4Ch], eax
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_7104E10C
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104E10C
		mov	edx, [ebp-44h]
		mov	eax, [edx]
		mov	[esp+0], edx
		mov	dword ptr [ebp-38h], 0
		mov	[esp+arg_0], eax
		call	sub_7104D7F0

loc_7104E10C:				; CODE XREF: sub_7104E0D8+10j
					; sub_7104E0D8+1Aj
		mov	eax, [ebp-4Ch]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7104E0D8	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7104E120	proc near		; CODE XREF: sub_71049F70+81Bp
					; sub_71049F70+86Ep ...

var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 8Ch
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71053220
		mov	[ebp+var_28], offset sub_7104E45D
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	eax, [edx+8]
		cmp	eax, [ebp+arg_4]
		mov	[ebp+var_60], edx
		jle	short loc_7104E170
		mov	edx, [edx]
		cmp	edx, 1
		jz	loc_7104E3A6

loc_7104E170:				; CODE XREF: sub_7104E120+43j
		mov	eax, [ebp+var_60]

loc_7104E173:				; CODE XREF: sub_7104E120+2E3j
		mov	esi, [ebp+arg_8]
		cmp	[eax+4], esi
		jz	loc_7104E376

loc_7104E17F:				; CODE XREF: sub_7104E120+261j
		mov	ecx, [ebp+arg_8]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_48], 0FFFFFFFFh
		lea	eax, [ecx+ecx*2-3]
		lea	eax, ds:1Ch[eax*4]
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	[ebp+var_78], eax
		mov	[ebp+var_64], eax
		mov	[ebp+var_7C], eax
		jz	loc_7104E440

loc_7104E1B6:				; CODE XREF: sub_7104E120+338j
		mov	ecx, [ebp+var_78]
		movzx	eax, byte ptr [ecx+0Ch]
		mov	dword ptr [ecx], 1
		mov	esi, [ebp+arg_8]
		mov	dword ptr [ecx+8], 0
		or	eax, 1
		mov	[ecx+0Ch], al
		and	eax, 0FFFFFFFDh
		mov	[ecx+4], esi
		mov	ecx, [ebp+arg_0]
		mov	esi, [ebp+var_78]
		mov	edx, [ecx]
		movzx	edx, byte ptr [edx+0Ch]
		and	edx, 2
		or	eax, edx
		mov	[esi+0Ch], al
		and	dword ptr [esi+0Ch], 3
		mov	eax, [ebp+var_64]
		mov	[ebp+var_60], eax

loc_7104E1F7:				; CODE XREF: sub_7104E120+267j
		mov	ecx, [ebp+var_60]
		mov	edx, [ebp+arg_0]
		mov	esi, [ebp+var_7C]
		mov	eax, [ecx+8]
		mov	ebx, [edx]
		lea	ecx, [eax+eax*2]
		mov	edx, eax
		lea	ecx, [esi+ecx*4+10h]
		mov	esi, [ebp+arg_4]
		mov	[ebp+var_54], ecx
		mov	ecx, [ebx+8]
		mov	[ebp+var_68], esi
		cmp	esi, ecx
		jle	short loc_7104E221
		mov	[ebp+var_68], ecx

loc_7104E221:				; CODE XREF: sub_7104E120+FCj
		cmp	eax, [ebp+var_68]
		jge	loc_7104E2F7
		lea	eax, [edx+edx*2]
		lea	eax, [ebx+eax*4+10h]
		mov	[ebp+var_58], eax
		mov	eax, [ebp+var_54]
		add	eax, 0Ch
		mov	[ebp+var_5C], eax
		jmp	short loc_7104E26B
; ---------------------------------------------------------------------------
		align 10h

loc_7104E240:				; CODE XREF: sub_7104E120+194j
					; sub_7104E120+1B3j
		mov	edx, [ebp+var_58]
		mov	ecx, [ebp+var_54]
		mov	eax, [edx-4]
		mov	[ecx+8], eax

loc_7104E24C:				; CODE XREF: sub_7104E120+154j
		mov	edx, [ebp+var_60]
		mov	ecx, [ebp+var_5C]
		add	[ebp+var_5C], 0Ch
		mov	eax, [edx+8]
		mov	[ebp+var_54], ecx
		add	eax, 1
		cmp	[ebp+var_68], eax
		mov	[edx+8], eax
		jle	loc_7104E2F7

loc_7104E26B:				; CODE XREF: sub_7104E120+11Dj
		mov	edx, [ebp+var_54]
		add	[ebp+var_58], 0Ch
		test	edx, edx
		jz	short loc_7104E24C
		mov	edx, [ebp+var_54]
		mov	ecx, [ebp+var_58]
		mov	[ebp+var_70], edx
		mov	eax, [ecx-0Ch]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	esi, [ebp+var_54]
		mov	eax, [esi]
		test	byte ptr [eax+0Ch], 1
		jz	short loc_7104E2D8

loc_7104E295:				; CODE XREF: sub_7104E120+1D5j
		mov	ecx, [ebp+var_58]
		mov	edx, [ebp+var_54]
		mov	esi, [ebp+var_54]
		mov	eax, [ecx-8]
		add	edx, 4
		mov	[esi+4], eax
		lock inc dword ptr [eax]
		setnz	cl
		mov	eax, [esi+4]
		test	byte ptr [eax+0Ch], 1
		jnz	short loc_7104E240
		mov	ecx, [eax+4]
		mov	[esp+8], ecx
		mov	eax, [eax+8]
		mov	[esp], edx
		mov	[ebp+var_48], 1
		mov	[esp+4], eax
		call	sub_7104BC20
		jmp	loc_7104E240
; ---------------------------------------------------------------------------

loc_7104E2D8:				; CODE XREF: sub_7104E120+173j
		mov	edx, [eax+4]
		mov	[esp+8], edx
		mov	eax, [eax+8]
		mov	[esp], esi
		mov	[ebp+var_48], 4
		mov	[esp+4], eax
		call	sub_7104D850
		jmp	short loc_7104E295
; ---------------------------------------------------------------------------

loc_7104E2F7:				; CODE XREF: sub_7104E120+104j
					; sub_7104E120+145j
		cmp	eax, [ebp+arg_4]
		jge	short loc_7104E33C
		mov	ecx, ds:_ZN11QVectorData11shared_nullE
		mov	eax, [ebp+var_54]
		mov	esi, [ebp+var_60]
		mov	edi, [ebp+arg_4]
		mov	edx, ecx
		lea	esi, [esi+0]

loc_7104E310:				; CODE XREF: sub_7104E120+21Aj
		test	eax, eax
		jz	short loc_7104E32C
		mov	[eax], ecx
		lock inc dword ptr [edx]
		setnz	bl
		mov	[eax+4], ecx
		lock inc dword ptr [edx]
		setnz	bl
		mov	dword ptr [eax+8], 0

loc_7104E32C:				; CODE XREF: sub_7104E120+1F2j
		mov	ebx, [esi+8]
		add	eax, 0Ch
		add	ebx, 1
		cmp	ebx, edi
		mov	[esi+8], ebx
		jl	short loc_7104E310

loc_7104E33C:				; CODE XREF: sub_7104E120+1DAj
		mov	eax, [ebp+arg_4]
		mov	esi, [ebp+var_60]
		mov	edx, [ebp+arg_0]
		mov	[esi+8], eax
		mov	eax, [edx]
		cmp	eax, esi
		jz	short loc_7104E360
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7104E38C

loc_7104E358:				; CODE XREF: sub_7104E120+284j
		mov	eax, [ebp+var_60]
		mov	esi, [ebp+arg_0]
		mov	[esi], eax

loc_7104E360:				; CODE XREF: sub_7104E120+22Cj
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 8Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_7104E376:				; CODE XREF: sub_7104E120+59j
		mov	eax, [eax]
		mov	edx, [ebp+var_60]
		cmp	eax, 1
		mov	[ebp+var_7C], edx
		jnz	loc_7104E17F
		jmp	loc_7104E1F7
; ---------------------------------------------------------------------------

loc_7104E38C:				; CODE XREF: sub_7104E120+236j
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx]
		mov	[esp], ecx
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_7104DFE0
		jmp	short loc_7104E358
; ---------------------------------------------------------------------------

loc_7104E3A6:				; CODE XREF: sub_7104E120+4Aj
		mov	esi, [ebp+arg_0]
		lea	eax, [eax+eax*2]
		lea	eax, ds:10h[eax*4]
		add	eax, [esi]
		sub	eax, 0Ch
		mov	[ebp+var_6C], eax
		jmp	short loc_7104E409
; ---------------------------------------------------------------------------
		align 10h

loc_7104E3C0:				; CODE XREF: sub_7104E120+2F9j
					; sub_7104E120+303j ...
		mov	edx, [ebp+var_6C]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_7104E3EE
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104E3EE
		mov	ecx, [ebp+var_6C]
		mov	esi, [ebp+var_74]
		mov	eax, [ecx]
		mov	[esp], esi
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp+4], eax
		call	sub_7104D7F0

loc_7104E3EE:				; CODE XREF: sub_7104E120+2A7j
					; sub_7104E120+2B1j
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_4]
		mov	eax, [edx]
		sub	dword ptr [eax+8], 1
		mov	eax, [edx]
		sub	[ebp+var_6C], 0Ch
		cmp	[eax+8], ecx
		jle	loc_7104E173

loc_7104E409:				; CODE XREF: sub_7104E120+29Bj
		mov	eax, [ebp+var_6C]
		mov	ecx, eax
		mov	[ebp+var_74], eax
		mov	eax, [eax+4]
		add	ecx, 4
		test	eax, eax
		jz	short loc_7104E3C0
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104E3C0
		mov	esi, [ebp+var_6C]
		mov	eax, [esi+4]
		mov	[esp], ecx
		mov	[ebp+var_48], 2
		mov	[esp+4], eax
		call	sub_7104BA80
		jmp	short loc_7104E3C0
; ---------------------------------------------------------------------------

loc_7104E440:				; CODE XREF: sub_7104E120+90j
		mov	esi, ds:_Z9qBadAllocv
		call	esi ; _Z9qBadAllocv
		mov	eax, [ebp+var_78]
		mov	[ebp+var_64], eax
		xchg	ax, ax
		call	esi ; _Z9qBadAllocv
		mov	edx, [ebp+var_78]
		mov	[ebp+var_7C], edx
		jmp	loc_7104E1B6
sub_7104E120	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104E45D	proc near		; DATA XREF: sub_7104E120+26o

arg_0		= dword	ptr  4

		add	ebp, 18h
		mov	eax, [ebp-48h]
		mov	esi, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-88h], esi
		jz	loc_7104E506
		cmp	eax, 2
		jz	short loc_7104E4E5
		cmp	eax, 3
		jz	short loc_7104E4B9
		mov	edx, [ebp-54h]
		mov	[ebp-80h], esi
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_7104E4B0
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104E4B0
		mov	ecx, [ebp-54h]
		mov	esi, [ebp-70h]
		mov	eax, [ecx]
		mov	[esp+0], esi
		mov	dword ptr [ebp-48h], 0
		mov	[esp+arg_0], eax
		call	sub_7104D7F0

loc_7104E4B0:				; CODE XREF: sub_7104E45D+2Cj
					; sub_7104E45D+36j
		mov	eax, [ebp-80h]
		mov	[ebp-88h], eax

loc_7104E4B9:				; CODE XREF: sub_7104E45D+20j
		mov	esi, [ebp-88h]
		mov	[esp+0], esi
		call	sub_71051CE0
		mov	eax, [ebp-7Ch]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-48h], 3
		mov	[esp+arg_0], eax
		mov	[esp+0], edx
		call	sub_7104DFE0
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_7104E4E5:				; CODE XREF: sub_7104E45D+1Bj
		mov	dword ptr [ebp-48h], 0
		call	sub_71051FB0
		mov	ecx, [ebp-88h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7104E506:				; CODE XREF: sub_7104E45D+12j
		mov	eax, [ebp-88h]
		mov	edx, [ebp-74h]
		mov	[ebp-84h], eax
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_7104E53D
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104E53D
		mov	ecx, [ebp-74h]
		mov	eax, [ecx]
		mov	[esp+0], ecx
		mov	dword ptr [ebp-48h], 0
		mov	[esp+arg_0], eax
		call	sub_7104D7F0

loc_7104E53D:				; CODE XREF: sub_7104E45D+BCj
					; sub_7104E45D+C6j
		mov	esi, [ebp-84h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], esi
		call	_Unwind_SjLj_Resume
sub_7104E45D	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7104E560	proc near		; CODE XREF: sub_7100AAB0+C5p
					; sub_7100AAB0+EFp ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_30		= dword	ptr -30h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	ebx, [esp+4Ch+arg_0]
		mov	edi, [esp+4Ch+arg_8]
		mov	esi, [ebx]
		mov	eax, [esi+8]
		cmp	eax, [esp+4Ch+arg_4]
		jle	short loc_7104E585
		mov	edx, [esi]
		cmp	edx, 1
		jz	loc_7104E697

loc_7104E585:				; CODE XREF: sub_7104E560+18j
		mov	edx, esi

loc_7104E587:				; CODE XREF: sub_7104E560+14Fj
		cmp	[edx+4], edi
		jz	loc_7104E685

loc_7104E590:				; CODE XREF: sub_7104E560+12Cj
		lea	eax, ds:10h[edi*4]
		mov	[esp+4Ch+var_48], 4
		mov	[esp+4Ch+var_4C], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	esi, eax
		mov	edx, eax
		jz	loc_7104E6B4

loc_7104E5B4:				; CODE XREF: sub_7104E560+16Ej
		movzx	ecx, byte ptr [eax+0Ch]
		mov	dword ptr [eax+8], 0
		mov	dword ptr [eax], 1
		mov	[eax+4], edi
		or	ecx, 1
		mov	[eax+0Ch], cl
		mov	edi, [ebx]
		and	ecx, 0FFFFFFFDh
		movzx	edi, byte ptr [edi+0Ch]
		and	edi, 2
		or	ecx, edi
		mov	[eax+0Ch], cl
		and	dword ptr [eax+0Ch], 3

loc_7104E5E3:				; CODE XREF: sub_7104E560+132j
		mov	eax, [ebx]
		mov	ebp, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_24], eax
		mov	eax, [esi+8]
		lea	ecx, [eax+4]
		mov	edi, eax
		lea	edx, [edx+ecx*4]
		mov	[esp+4Ch+var_30], edx
		mov	edx, [esp+4Ch+var_24]
		mov	edx, [edx+8]
		cmp	ebp, edx
		mov	[esp+4Ch+var_20], edx
		jle	short loc_7104E60D
		mov	ebp, edx

loc_7104E60D:				; CODE XREF: sub_7104E560+A9j
		cmp	eax, ebp
		jge	short loc_7104E63F
		mov	edx, [esp+4Ch+var_24]
		lea	ecx, [edx+ecx*4]
		mov	edx, [esp+4Ch+var_30]
		lea	esi, [esi+0]

loc_7104E620:				; CODE XREF: sub_7104E560+DDj
		add	edx, 4
		mov	edi, [ecx]
		add	ecx, 4
		cmp	edx, 4
		jz	short loc_7104E633
		mov	[edx-4], edi
		mov	eax, [esi+8]

loc_7104E633:				; CODE XREF: sub_7104E560+CBj
		lea	edi, [eax+1]
		cmp	edi, ebp
		mov	eax, edi
		mov	[esi+8], edi
		jl	short loc_7104E620

loc_7104E63F:				; CODE XREF: sub_7104E560+AFj
		cmp	edi, [esp+4Ch+arg_4]
		jge	short loc_7104E64C
		mov	ebp, [esp+4Ch+arg_4]
		mov	[esi+8], ebp

loc_7104E64C:				; CODE XREF: sub_7104E560+E3j
		mov	eax, [esp+4Ch+arg_4]
		mov	[esi+8], eax
		mov	eax, [ebx]
		cmp	esi, eax
		jz	short loc_7104E665
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7104E670

loc_7104E663:				; CODE XREF: sub_7104E560+123j
		mov	[ebx], esi

loc_7104E665:				; CODE XREF: sub_7104E560+F7j
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7104E670:				; CODE XREF: sub_7104E560+101j
		mov	[esp+4Ch+var_48], 4
		mov	eax, [ebx]
		mov	[esp+4Ch+var_4C], eax
		call	ds:_ZN11QVectorData4freeEPS_i
		jmp	short loc_7104E663
; ---------------------------------------------------------------------------

loc_7104E685:				; CODE XREF: sub_7104E560+2Aj
		mov	eax, [edx]
		mov	edx, esi
		cmp	eax, 1
		jnz	loc_7104E590
		jmp	loc_7104E5E3
; ---------------------------------------------------------------------------

loc_7104E697:				; CODE XREF: sub_7104E560+1Fj
		mov	ecx, [esp+4Ch+arg_4]
		mov	edx, esi
		lea	esi, [esi+0]

loc_7104E6A0:				; CODE XREF: sub_7104E560+14Dj
		sub	eax, 1
		mov	[edx+8], eax
		mov	edx, [ebx]
		mov	eax, [edx+8]
		cmp	eax, ecx
		jg	short loc_7104E6A0
		jmp	loc_7104E587
; ---------------------------------------------------------------------------

loc_7104E6B4:				; CODE XREF: sub_7104E560+4Ej
		mov	ebp, ds:_Z9qBadAllocv
		mov	[esp+4Ch+var_28], eax
		call	ebp ; _Z9qBadAllocv
		mov	eax, [esp+4Ch+var_28]
		mov	esi, eax
		call	ebp ; _Z9qBadAllocv
		mov	eax, [esp+4Ch+var_28]
		mov	edx, eax
		jmp	loc_7104E5B4
sub_7104E560	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7104E6E0	proc near		; CODE XREF: sub_7100AAB0+1EEp
					; sub_7100AAB0+23Dp ...

var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 6Ch
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71052DFC
		mov	[ebp+var_28], offset sub_7104E908
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	eax, [edx+4]
		cmp	eax, [ebp+arg_8]
		mov	[ebp+var_54], edx
		jz	loc_7104E870

loc_7104E726:				; CODE XREF: sub_7104E6E0+195j
		mov	ecx, [ebp+var_54]
		mov	edx, [ecx]
		cmp	edx, 1
		jz	loc_7104E890
		mov	edx, [ebp+arg_8]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_48], 0FFFFFFFFh
		lea	eax, ds:10h[edx*4]
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	ebx, eax
		mov	[ebp+var_5C], eax
		mov	[ebp+var_58], eax
		jz	loc_7104E8E0

loc_7104E766:				; CODE XREF: sub_7104E6E0+217j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	edx, [ebp+arg_8]
		mov	ecx, [eax+4]
		cmp	edx, ecx
		jg	loc_7104E885

loc_7104E779:				; CODE XREF: sub_7104E6E0+1A7j
		lea	edx, ds:10h[edx*4]
		mov	[esp+8], edx	; size_t
		mov	[esp+4], eax	; void *
		mov	[esp], ebx	; void *
		call	memcpy
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+var_5C]
		mov	ecx, [ecx]
		mov	eax, [ecx+8]
		mov	[ebp+var_60], ecx
		mov	ecx, [ebp+var_58]
		mov	[edx+8], eax
		mov	[ebp+var_54], ecx

loc_7104E7A7:				; CODE XREF: sub_7104E6E0+1F6j
					; sub_7104E908+73j
		mov	eax, [ebp+var_54]
		mov	dword ptr [eax], 1
		mov	edx, [ebp+arg_8]
		mov	ecx, [ebp+var_54]
		mov	[eax+4], edx
		movzx	eax, byte ptr [ecx+0Ch]
		or	eax, 1
		mov	[ecx+0Ch], al
		mov	ecx, [ebp+var_60]
		and	eax, 0FFFFFFFDh
		movzx	edx, byte ptr [ecx+0Ch]
		and	edx, 2
		or	eax, edx
		mov	edx, [ebp+var_54]
		mov	[edx+0Ch], al
		and	dword ptr [edx+0Ch], 3

loc_7104E7DC:				; CODE XREF: sub_7104E6E0+1A0j
		mov	ecx, [ebp+var_54]
		mov	eax, [ecx+8]
		cmp	eax, [ebp+arg_4]
		jl	short loc_7104E840

loc_7104E7E7:				; CODE XREF: sub_7104E6E0+188j
		mov	eax, [ebp+var_54]
		mov	edx, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		mov	[eax+8], edx
		mov	eax, [ecx]
		cmp	eax, [ebp+var_54]
		jz	short loc_7104E826
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104E81E
		mov	dword ptr [esp+4], 4
		mov	eax, [ecx]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_7104E81E:				; CODE XREF: sub_7104E6E0+122j
		mov	edx, [ebp+var_54]
		mov	eax, [ebp+arg_0]
		mov	[eax], edx

loc_7104E826:				; CODE XREF: sub_7104E6E0+118j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 6Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7104E840:				; CODE XREF: sub_7104E6E0+105j
		mov	edx, [ebp+arg_4]
		mov	dword ptr [esp+4], 0
		mov	[ebp+var_48], 0FFFFFFFFh
		sub	edx, eax
		shl	edx, 2
		lea	eax, [ecx+eax*4+10h]
		mov	[esp+8], edx
		mov	[esp], eax
		call	ds:_Z7qMemSetPvij
		jmp	loc_7104E7E7
; ---------------------------------------------------------------------------
		align 10h

loc_7104E870:				; CODE XREF: sub_7104E6E0+40j
		mov	edx, [edx]
		cmp	edx, 1
		jnz	loc_7104E726
		nop
		lea	esi, [esi+0]
		jmp	loc_7104E7DC
; ---------------------------------------------------------------------------

loc_7104E885:				; CODE XREF: sub_7104E6E0+93j
		mov	edx, ecx
		jmp	loc_7104E779
; ---------------------------------------------------------------------------
		align 10h

loc_7104E890:				; CODE XREF: sub_7104E6E0+4Ej
		mov	edx, [ebp+arg_8]
		lea	eax, ds:10h[eax*4]
		mov	ecx, [ebp+var_54]
		mov	[esp+8], eax
		mov	dword ptr [esp+0Ch], 4
		lea	eax, ds:10h[edx*4]
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	[ebp+var_48], 2
		call	ds:_ZN11QVectorData10reallocateEPS_iii
		test	eax, eax
		mov	[ebp+var_60], eax
		jz	short loc_7104E8FC

loc_7104E8CB:				; CODE XREF: sub_7104E6E0+226j
		mov	edx, [ebp+var_60]
		mov	eax, [ebp+arg_0]
		mov	[eax], edx
		mov	[ebp+var_54], edx
		jmp	loc_7104E7A7
; ---------------------------------------------------------------------------
		align 10h

loc_7104E8E0:				; CODE XREF: sub_7104E6E0+80j
		mov	ecx, ds:_Z9qBadAllocv
		mov	[ebp+var_50], ecx
		call	ecx ; _Z9qBadAllocv
		mov	eax, [ebp+var_5C]
		mov	[ebp+var_58], eax
		call	[ebp+var_50]
		mov	ebx, [ebp+var_5C]
		jmp	loc_7104E766
; ---------------------------------------------------------------------------

loc_7104E8FC:				; CODE XREF: sub_7104E6E0+1E9j
		lea	esi, [esi+0]
		call	ds:_Z9qBadAllocv
		jmp	short loc_7104E8CB
sub_7104E6E0	endp


; =============== S U B	R O U T	I N E =======================================


sub_7104E908	proc near		; DATA XREF: sub_7104E6E0+23o
		add	ebp, 18h
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-64h], eax
		mov	eax, [ebp-40h]
		jz	short loc_7104E938
		mov	dword ptr [ebp-48h], 0
		call	sub_71051FB0
		mov	edx, [ebp-64h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7104E938:				; CODE XREF: sub_7104E908+10j
		cmp	eax, 1
		jz	short loc_7104E94F
		mov	ecx, [ebp-64h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7104E94F:				; CODE XREF: sub_7104E908+33j
		mov	eax, [ebp-64h]
		mov	[esp+0], eax
		call	sub_71051CE0
		mov	edx, [ebp+8]
		mov	ecx, [ebp+10h]
		mov	eax, [edx]
		cmp	[eax+4], ecx
		jl	short loc_7104E980
		mov	dword ptr [ebp-48h], 0
		call	sub_71051FB0
		mov	ecx, [ebp+8]
		mov	ecx, [ecx]
		mov	[ebp-60h], ecx
		jmp	loc_7104E7A7
; ---------------------------------------------------------------------------

loc_7104E980:				; CODE XREF: sub_7104E908+5Dj
		mov	dword ptr [ebp-48h], 1
		call	sub_710524F0
sub_7104E908	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7104E990	proc near		; CODE XREF: sub_71006D20+31p
					; sub_7101E100+12B4p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_4], esi
		mov	ecx, [esp+1Ch+arg_4]
		mov	eax, [ebx]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_7104EA05
		mov	edx, [eax+8]

loc_7104E9AF:				; CODE XREF: sub_7104E990+7Bj
		add	edx, 1
		mov	esi, [ecx]
		mov	[esp+1Ch+var_18], edx
		mov	[esp+1Ch+var_10], 0
		mov	[esp+1Ch+var_14], 4
		mov	[esp+1Ch+var_1C], 14h
		call	ds:_ZN11QVectorData4growEiiib
		mov	[esp+1Ch+var_14], eax
		mov	eax, [ebx]
		mov	eax, [eax+8]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_7104EA30
		mov	eax, [ebx]
		mov	edx, [eax+8]
		mov	[eax+edx*4+10h], esi
		mov	eax, [ebx]
		add	dword ptr [eax+8], 1
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_7104EA05:				; CODE XREF: sub_7104E990+1Aj
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jge	short loc_7104E9AF
		mov	ecx, [ecx]
		add	dword ptr [eax+8], 1
		mov	[eax+edx*4+10h], ecx
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_7104E990	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7104EA30	proc near		; CODE XREF: sub_71002050+EDp
					; sub_71002050+143p ...

var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 6Ch
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71052C18
		mov	[ebp+var_28], offset sub_7104EC58
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	eax, [edx+4]
		cmp	eax, [ebp+arg_8]
		mov	[ebp+var_54], edx
		jz	loc_7104EBC0

loc_7104EA76:				; CODE XREF: sub_7104EA30+195j
		mov	ecx, [ebp+var_54]
		mov	edx, [ecx]
		cmp	edx, 1
		jz	loc_7104EBE0
		mov	edx, [ebp+arg_8]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_48], 0FFFFFFFFh
		lea	eax, ds:10h[edx*4]
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	ebx, eax
		mov	[ebp+var_5C], eax
		mov	[ebp+var_58], eax
		jz	loc_7104EC30

loc_7104EAB6:				; CODE XREF: sub_7104EA30+217j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	edx, [ebp+arg_8]
		mov	ecx, [eax+4]
		cmp	edx, ecx
		jg	loc_7104EBD5

loc_7104EAC9:				; CODE XREF: sub_7104EA30+1A7j
		lea	edx, ds:10h[edx*4]
		mov	[esp+8], edx	; size_t
		mov	[esp+4], eax	; void *
		mov	[esp], ebx	; void *
		call	memcpy
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+var_5C]
		mov	ecx, [ecx]
		mov	eax, [ecx+8]
		mov	[ebp+var_60], ecx
		mov	ecx, [ebp+var_58]
		mov	[edx+8], eax
		mov	[ebp+var_54], ecx

loc_7104EAF7:				; CODE XREF: sub_7104EA30+1F6j
					; sub_7104EC58+73j
		mov	eax, [ebp+var_54]
		mov	dword ptr [eax], 1
		mov	edx, [ebp+arg_8]
		mov	ecx, [ebp+var_54]
		mov	[eax+4], edx
		movzx	eax, byte ptr [ecx+0Ch]
		or	eax, 1
		mov	[ecx+0Ch], al
		mov	ecx, [ebp+var_60]
		and	eax, 0FFFFFFFDh
		movzx	edx, byte ptr [ecx+0Ch]
		and	edx, 2
		or	eax, edx
		mov	edx, [ebp+var_54]
		mov	[edx+0Ch], al
		and	dword ptr [edx+0Ch], 3

loc_7104EB2C:				; CODE XREF: sub_7104EA30+1A0j
		mov	ecx, [ebp+var_54]
		mov	eax, [ecx+8]
		cmp	eax, [ebp+arg_4]
		jl	short loc_7104EB90

loc_7104EB37:				; CODE XREF: sub_7104EA30+188j
		mov	eax, [ebp+var_54]
		mov	edx, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		mov	[eax+8], edx
		mov	eax, [ecx]
		cmp	eax, [ebp+var_54]
		jz	short loc_7104EB76
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104EB6E
		mov	dword ptr [esp+4], 4
		mov	eax, [ecx]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_7104EB6E:				; CODE XREF: sub_7104EA30+122j
		mov	edx, [ebp+var_54]
		mov	eax, [ebp+arg_0]
		mov	[eax], edx

loc_7104EB76:				; CODE XREF: sub_7104EA30+118j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 6Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7104EB90:				; CODE XREF: sub_7104EA30+105j
		mov	edx, [ebp+arg_4]
		mov	dword ptr [esp+4], 0
		mov	[ebp+var_48], 0FFFFFFFFh
		sub	edx, eax
		shl	edx, 2
		lea	eax, [ecx+eax*4+10h]
		mov	[esp+8], edx
		mov	[esp], eax
		call	ds:_Z7qMemSetPvij
		jmp	loc_7104EB37
; ---------------------------------------------------------------------------
		align 10h

loc_7104EBC0:				; CODE XREF: sub_7104EA30+40j
		mov	edx, [edx]
		cmp	edx, 1
		jnz	loc_7104EA76
		nop
		lea	esi, [esi+0]
		jmp	loc_7104EB2C
; ---------------------------------------------------------------------------

loc_7104EBD5:				; CODE XREF: sub_7104EA30+93j
		mov	edx, ecx
		jmp	loc_7104EAC9
; ---------------------------------------------------------------------------
		align 10h

loc_7104EBE0:				; CODE XREF: sub_7104EA30+4Ej
		mov	edx, [ebp+arg_8]
		lea	eax, ds:10h[eax*4]
		mov	ecx, [ebp+var_54]
		mov	[esp+8], eax
		mov	dword ptr [esp+0Ch], 4
		lea	eax, ds:10h[edx*4]
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	[ebp+var_48], 2
		call	ds:_ZN11QVectorData10reallocateEPS_iii
		test	eax, eax
		mov	[ebp+var_60], eax
		jz	short loc_7104EC4C

loc_7104EC1B:				; CODE XREF: sub_7104EA30+226j
		mov	edx, [ebp+var_60]
		mov	eax, [ebp+arg_0]
		mov	[eax], edx
		mov	[ebp+var_54], edx
		jmp	loc_7104EAF7
; ---------------------------------------------------------------------------
		align 10h

loc_7104EC30:				; CODE XREF: sub_7104EA30+80j
		mov	ecx, ds:_Z9qBadAllocv
		mov	[ebp+var_50], ecx
		call	ecx ; _Z9qBadAllocv
		mov	eax, [ebp+var_5C]
		mov	[ebp+var_58], eax
		call	[ebp+var_50]
		mov	ebx, [ebp+var_5C]
		jmp	loc_7104EAB6
; ---------------------------------------------------------------------------

loc_7104EC4C:				; CODE XREF: sub_7104EA30+1E9j
		lea	esi, [esi+0]
		call	ds:_Z9qBadAllocv
		jmp	short loc_7104EC1B
sub_7104EA30	endp


; =============== S U B	R O U T	I N E =======================================


sub_7104EC58	proc near		; DATA XREF: sub_7104EA30+23o
		add	ebp, 18h
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-64h], eax
		mov	eax, [ebp-40h]
		jz	short loc_7104EC88
		mov	dword ptr [ebp-48h], 0
		call	sub_71051FB0
		mov	edx, [ebp-64h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7104EC88:				; CODE XREF: sub_7104EC58+10j
		cmp	eax, 1
		jz	short loc_7104EC9F
		mov	ecx, [ebp-64h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7104EC9F:				; CODE XREF: sub_7104EC58+33j
		mov	eax, [ebp-64h]
		mov	[esp+0], eax
		call	sub_71051CE0
		mov	edx, [ebp+8]
		mov	ecx, [ebp+10h]
		mov	eax, [edx]
		cmp	[eax+4], ecx
		jl	short loc_7104ECD0
		mov	dword ptr [ebp-48h], 0
		call	sub_71051FB0
		mov	ecx, [ebp+8]
		mov	ecx, [ecx]
		mov	[ebp-60h], ecx
		jmp	loc_7104EAF7
; ---------------------------------------------------------------------------

loc_7104ECD0:				; CODE XREF: sub_7104EC58+5Dj
		mov	dword ptr [ebp-48h], 1
		call	sub_710524F0
sub_7104EC58	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7104ECE0	proc near		; CODE XREF: .text:71003C0Fp
					; sub_71003D9E+1Cp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_7104ED0A
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_7104ED0A
		mov	[esp+1Ch+var_18], 4
		mov	eax, [edx]
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_7104ED0A:				; CODE XREF: sub_7104ECE0+Bj
					; sub_7104ECE0+15j
		add	esp, 1Ch
		retn
sub_7104ECE0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7104ED10	proc near		; CODE XREF: sub_71007710+10Dp
					; sub_71009CC0+D9p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= qword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	ecx, [esp+2Ch+arg_4]
		mov	eax, [ebx]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_7104ED80
		mov	edx, [eax+8]

loc_7104ED28:				; CODE XREF: sub_7104ED10+76j
		fld	qword ptr [ecx]
		add	edx, 1
		mov	[esp+2Ch+var_28], edx
		fstp	[esp+2Ch+var_1C]
		mov	[esp+2Ch+var_20], 0
		mov	[esp+2Ch+var_24], 8
		mov	[esp+2Ch+var_2C], 18h
		call	ds:_ZN11QVectorData4growEiiib
		mov	[esp+2Ch+var_24], eax
		mov	eax, [ebx]
		mov	eax, [eax+8]
		mov	[esp+2Ch+var_2C], ebx
		mov	[esp+2Ch+var_28], eax
		call	sub_7104EDA0
		mov	eax, [ebx]
		mov	edx, [eax+8]
		fld	[esp+2Ch+var_1C]
		fstp	qword ptr [eax+edx*8+10h]
		mov	eax, [ebx]
		add	dword ptr [eax+8], 1
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7104ED80:				; CODE XREF: sub_7104ED10+13j
		mov	edx, [eax+8]
		cmp	edx, [eax+4]
		jge	short loc_7104ED28
		fld	qword ptr [ecx]
		add	dword ptr [eax+8], 1
		fstp	qword ptr [eax+edx*8+10h]
		add	esp, 28h
		pop	ebx
		retn
sub_7104ED10	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7104EDA0	proc near		; CODE XREF: sub_71007710+190p
					; sub_71009CC0+71p ...

var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 6Ch
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71052E0C
		mov	[ebp+var_28], offset sub_7104EFC8
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	eax, [edx+4]
		cmp	eax, [ebp+arg_8]
		mov	[ebp+var_54], edx
		jz	loc_7104EF30

loc_7104EDE6:				; CODE XREF: sub_7104EDA0+195j
		mov	ecx, [ebp+var_54]
		mov	edx, [ecx]
		cmp	edx, 1
		jz	loc_7104EF50
		mov	edx, [ebp+arg_8]
		mov	dword ptr [esp+4], 8
		mov	[ebp+var_48], 0FFFFFFFFh
		lea	eax, ds:10h[edx*8]
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	ebx, eax
		mov	[ebp+var_5C], eax
		mov	[ebp+var_58], eax
		jz	loc_7104EFA0

loc_7104EE26:				; CODE XREF: sub_7104EDA0+217j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	edx, [ebp+arg_8]
		mov	ecx, [eax+4]
		cmp	edx, ecx
		jg	loc_7104EF45

loc_7104EE39:				; CODE XREF: sub_7104EDA0+1A7j
		lea	edx, ds:10h[edx*8]
		mov	[esp+8], edx	; size_t
		mov	[esp+4], eax	; void *
		mov	[esp], ebx	; void *
		call	memcpy
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+var_5C]
		mov	ecx, [ecx]
		mov	eax, [ecx+8]
		mov	[ebp+var_60], ecx
		mov	ecx, [ebp+var_58]
		mov	[edx+8], eax
		mov	[ebp+var_54], ecx

loc_7104EE67:				; CODE XREF: sub_7104EDA0+1F6j
					; sub_7104EFC8+73j
		mov	eax, [ebp+var_54]
		mov	dword ptr [eax], 1
		mov	edx, [ebp+arg_8]
		mov	ecx, [ebp+var_54]
		mov	[eax+4], edx
		movzx	eax, byte ptr [ecx+0Ch]
		or	eax, 1
		mov	[ecx+0Ch], al
		mov	ecx, [ebp+var_60]
		and	eax, 0FFFFFFFDh
		movzx	edx, byte ptr [ecx+0Ch]
		and	edx, 2
		or	eax, edx
		mov	edx, [ebp+var_54]
		mov	[edx+0Ch], al
		and	dword ptr [edx+0Ch], 3

loc_7104EE9C:				; CODE XREF: sub_7104EDA0+1A0j
		mov	ecx, [ebp+var_54]
		mov	eax, [ecx+8]
		cmp	eax, [ebp+arg_4]
		jl	short loc_7104EF00

loc_7104EEA7:				; CODE XREF: sub_7104EDA0+188j
		mov	eax, [ebp+var_54]
		mov	edx, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		mov	[eax+8], edx
		mov	eax, [ecx]
		cmp	eax, [ebp+var_54]
		jz	short loc_7104EEE6
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104EEDE
		mov	dword ptr [esp+4], 8
		mov	eax, [ecx]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_7104EEDE:				; CODE XREF: sub_7104EDA0+122j
		mov	edx, [ebp+var_54]
		mov	eax, [ebp+arg_0]
		mov	[eax], edx

loc_7104EEE6:				; CODE XREF: sub_7104EDA0+118j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 6Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7104EF00:				; CODE XREF: sub_7104EDA0+105j
		mov	edx, [ebp+arg_4]
		mov	dword ptr [esp+4], 0
		mov	[ebp+var_48], 0FFFFFFFFh
		sub	edx, eax
		shl	edx, 3
		lea	eax, [ecx+eax*8+10h]
		mov	[esp+8], edx
		mov	[esp], eax
		call	ds:_Z7qMemSetPvij
		jmp	loc_7104EEA7
; ---------------------------------------------------------------------------
		align 10h

loc_7104EF30:				; CODE XREF: sub_7104EDA0+40j
		mov	edx, [edx]
		cmp	edx, 1
		jnz	loc_7104EDE6
		nop
		lea	esi, [esi+0]
		jmp	loc_7104EE9C
; ---------------------------------------------------------------------------

loc_7104EF45:				; CODE XREF: sub_7104EDA0+93j
		mov	edx, ecx
		jmp	loc_7104EE39
; ---------------------------------------------------------------------------
		align 10h

loc_7104EF50:				; CODE XREF: sub_7104EDA0+4Ej
		mov	edx, [ebp+arg_8]
		lea	eax, ds:10h[eax*8]
		mov	ecx, [ebp+var_54]
		mov	[esp+8], eax
		mov	dword ptr [esp+0Ch], 8
		lea	eax, ds:10h[edx*8]
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	[ebp+var_48], 2
		call	ds:_ZN11QVectorData10reallocateEPS_iii
		test	eax, eax
		mov	[ebp+var_60], eax
		jz	short loc_7104EFBC

loc_7104EF8B:				; CODE XREF: sub_7104EDA0+226j
		mov	edx, [ebp+var_60]
		mov	eax, [ebp+arg_0]
		mov	[eax], edx
		mov	[ebp+var_54], edx
		jmp	loc_7104EE67
; ---------------------------------------------------------------------------
		align 10h

loc_7104EFA0:				; CODE XREF: sub_7104EDA0+80j
		mov	ecx, ds:_Z9qBadAllocv
		mov	[ebp+var_50], ecx
		call	ecx ; _Z9qBadAllocv
		mov	eax, [ebp+var_5C]
		mov	[ebp+var_58], eax
		call	[ebp+var_50]
		mov	ebx, [ebp+var_5C]
		jmp	loc_7104EE26
; ---------------------------------------------------------------------------

loc_7104EFBC:				; CODE XREF: sub_7104EDA0+1E9j
		lea	esi, [esi+0]
		call	ds:_Z9qBadAllocv
		jmp	short loc_7104EF8B
sub_7104EDA0	endp


; =============== S U B	R O U T	I N E =======================================


sub_7104EFC8	proc near		; DATA XREF: sub_7104EDA0+23o
		add	ebp, 18h
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-64h], eax
		mov	eax, [ebp-40h]
		jz	short loc_7104EFF8
		mov	dword ptr [ebp-48h], 0
		call	sub_71051FB0
		mov	edx, [ebp-64h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7104EFF8:				; CODE XREF: sub_7104EFC8+10j
		cmp	eax, 1
		jz	short loc_7104F00F
		mov	ecx, [ebp-64h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7104F00F:				; CODE XREF: sub_7104EFC8+33j
		mov	eax, [ebp-64h]
		mov	[esp+0], eax
		call	sub_71051CE0
		mov	edx, [ebp+8]
		mov	ecx, [ebp+10h]
		mov	eax, [edx]
		cmp	[eax+4], ecx
		jl	short loc_7104F040
		mov	dword ptr [ebp-48h], 0
		call	sub_71051FB0
		mov	ecx, [ebp+8]
		mov	ecx, [ecx]
		mov	[ebp-60h], ecx
		jmp	loc_7104EE67
; ---------------------------------------------------------------------------

loc_7104F040:				; CODE XREF: sub_7104EFC8+5Dj
		mov	dword ptr [ebp-48h], 1
		call	sub_710524F0
sub_7104EFC8	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7104F050	proc near		; CODE XREF: sub_710078B4+16p
					; sub_71009DE7+13p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_7104F07A
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_7104F07A
		mov	[esp+1Ch+var_18], 8
		mov	eax, [edx]
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_7104F07A:				; CODE XREF: sub_7104F050+Bj
					; sub_7104F050+15j
		add	esp, 1Ch
		retn
sub_7104F050	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7104F080	proc near		; CODE XREF: sub_71027040+121p
					; sub_71027040+13Dp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [ebx]
		mov	edx, [eax]
		cmp	edx, 1
		jz	short loc_7104F0A7
		mov	edx, [eax+4]
		mov	[esp+1Ch+var_14], edx
		mov	eax, [eax+8]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_7104EDA0

loc_7104F0A7:				; CODE XREF: sub_7104F080+Fj
		mov	eax, [esp+1Ch+arg_4]
		lea	eax, ds:10h[eax*8]
		add	eax, [ebx]
		add	esp, 18h
		pop	ebx
		retn
sub_7104F080	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7104F0C0	proc near		; CODE XREF: sub_71006D60+4Dp
					; sub_71006D60+6Dp ...

var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		lea	eax, [ebp+var_18]
		sub	esp, 6Ch
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71052DEC
		mov	[ebp+var_28], offset sub_7104F2E8
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	edx, [edx]
		mov	eax, [edx+4]
		cmp	eax, [ebp+arg_8]
		mov	[ebp+var_54], edx
		jz	loc_7104F250

loc_7104F106:				; CODE XREF: sub_7104F0C0+195j
		mov	ecx, [ebp+var_54]
		mov	edx, [ecx]
		cmp	edx, 1
		jz	loc_7104F270
		mov	edx, [ebp+arg_8]
		mov	dword ptr [esp+4], 4
		mov	[ebp+var_48], 0FFFFFFFFh
		lea	eax, ds:10h[edx*4]
		mov	[esp], eax
		call	ds:_ZN11QVectorData8allocateEii
		test	eax, eax
		mov	ebx, eax
		mov	[ebp+var_5C], eax
		mov	[ebp+var_58], eax
		jz	loc_7104F2C0

loc_7104F146:				; CODE XREF: sub_7104F0C0+217j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	edx, [ebp+arg_8]
		mov	ecx, [eax+4]
		cmp	edx, ecx
		jg	loc_7104F265

loc_7104F159:				; CODE XREF: sub_7104F0C0+1A7j
		lea	edx, ds:10h[edx*4]
		mov	[esp+8], edx	; size_t
		mov	[esp+4], eax	; void *
		mov	[esp], ebx	; void *
		call	memcpy
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+var_5C]
		mov	ecx, [ecx]
		mov	eax, [ecx+8]
		mov	[ebp+var_60], ecx
		mov	ecx, [ebp+var_58]
		mov	[edx+8], eax
		mov	[ebp+var_54], ecx

loc_7104F187:				; CODE XREF: sub_7104F0C0+1F6j
					; sub_7104F2E8+73j
		mov	eax, [ebp+var_54]
		mov	dword ptr [eax], 1
		mov	edx, [ebp+arg_8]
		mov	ecx, [ebp+var_54]
		mov	[eax+4], edx
		movzx	eax, byte ptr [ecx+0Ch]
		or	eax, 1
		mov	[ecx+0Ch], al
		mov	ecx, [ebp+var_60]
		and	eax, 0FFFFFFFDh
		movzx	edx, byte ptr [ecx+0Ch]
		and	edx, 2
		or	eax, edx
		mov	edx, [ebp+var_54]
		mov	[edx+0Ch], al
		and	dword ptr [edx+0Ch], 3

loc_7104F1BC:				; CODE XREF: sub_7104F0C0+1A0j
		mov	ecx, [ebp+var_54]
		mov	eax, [ecx+8]
		cmp	eax, [ebp+arg_4]
		jl	short loc_7104F220

loc_7104F1C7:				; CODE XREF: sub_7104F0C0+188j
		mov	eax, [ebp+var_54]
		mov	edx, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		mov	[eax+8], edx
		mov	eax, [ecx]
		cmp	eax, [ebp+var_54]
		jz	short loc_7104F206
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104F1FE
		mov	dword ptr [esp+4], 4
		mov	eax, [ecx]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_7104F1FE:				; CODE XREF: sub_7104F0C0+122j
		mov	edx, [ebp+var_54]
		mov	eax, [ebp+arg_0]
		mov	[eax], edx

loc_7104F206:				; CODE XREF: sub_7104F0C0+118j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		add	esp, 6Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7104F220:				; CODE XREF: sub_7104F0C0+105j
		mov	edx, [ebp+arg_4]
		mov	dword ptr [esp+4], 0
		mov	[ebp+var_48], 0FFFFFFFFh
		sub	edx, eax
		shl	edx, 2
		lea	eax, [ecx+eax*4+10h]
		mov	[esp+8], edx
		mov	[esp], eax
		call	ds:_Z7qMemSetPvij
		jmp	loc_7104F1C7
; ---------------------------------------------------------------------------
		align 10h

loc_7104F250:				; CODE XREF: sub_7104F0C0+40j
		mov	edx, [edx]
		cmp	edx, 1
		jnz	loc_7104F106
		nop
		lea	esi, [esi+0]
		jmp	loc_7104F1BC
; ---------------------------------------------------------------------------

loc_7104F265:				; CODE XREF: sub_7104F0C0+93j
		mov	edx, ecx
		jmp	loc_7104F159
; ---------------------------------------------------------------------------
		align 10h

loc_7104F270:				; CODE XREF: sub_7104F0C0+4Ej
		mov	edx, [ebp+arg_8]
		lea	eax, ds:10h[eax*4]
		mov	ecx, [ebp+var_54]
		mov	[esp+8], eax
		mov	dword ptr [esp+0Ch], 4
		lea	eax, ds:10h[edx*4]
		mov	[esp+4], eax
		mov	[esp], ecx
		mov	[ebp+var_48], 2
		call	ds:_ZN11QVectorData10reallocateEPS_iii
		test	eax, eax
		mov	[ebp+var_60], eax
		jz	short loc_7104F2DC

loc_7104F2AB:				; CODE XREF: sub_7104F0C0+226j
		mov	edx, [ebp+var_60]
		mov	eax, [ebp+arg_0]
		mov	[eax], edx
		mov	[ebp+var_54], edx
		jmp	loc_7104F187
; ---------------------------------------------------------------------------
		align 10h

loc_7104F2C0:				; CODE XREF: sub_7104F0C0+80j
		mov	ecx, ds:_Z9qBadAllocv
		mov	[ebp+var_50], ecx
		call	ecx ; _Z9qBadAllocv
		mov	eax, [ebp+var_5C]
		mov	[ebp+var_58], eax
		call	[ebp+var_50]
		mov	ebx, [ebp+var_5C]
		jmp	loc_7104F146
; ---------------------------------------------------------------------------

loc_7104F2DC:				; CODE XREF: sub_7104F0C0+1E9j
		lea	esi, [esi+0]
		call	ds:_Z9qBadAllocv
		jmp	short loc_7104F2AB
sub_7104F0C0	endp


; =============== S U B	R O U T	I N E =======================================


sub_7104F2E8	proc near		; DATA XREF: sub_7104F0C0+23o
		add	ebp, 18h
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-64h], eax
		mov	eax, [ebp-40h]
		jz	short loc_7104F318
		mov	dword ptr [ebp-48h], 0
		call	sub_71051FB0
		mov	edx, [ebp-64h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7104F318:				; CODE XREF: sub_7104F2E8+10j
		cmp	eax, 1
		jz	short loc_7104F32F
		mov	ecx, [ebp-64h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], ecx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7104F32F:				; CODE XREF: sub_7104F2E8+33j
		mov	eax, [ebp-64h]
		mov	[esp+0], eax
		call	sub_71051CE0
		mov	edx, [ebp+8]
		mov	ecx, [ebp+10h]
		mov	eax, [edx]
		cmp	[eax+4], ecx
		jl	short loc_7104F360
		mov	dword ptr [ebp-48h], 0
		call	sub_71051FB0
		mov	ecx, [ebp+8]
		mov	ecx, [ecx]
		mov	[ebp-60h], ecx
		jmp	loc_7104F187
; ---------------------------------------------------------------------------

loc_7104F360:				; CODE XREF: sub_7104F2E8+5Dj
		mov	dword ptr [ebp-48h], 1
		call	sub_710524F0
sub_7104F2E8	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7104F370	proc near		; DATA XREF: .rdata:7105DBCCo

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_7105DBC8
		mov	[esp+1Ch+var_1C], ebx
		call	sub_710243A0
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_710517D0
sub_7104F370	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7104F3A0	proc near		; DATA XREF: .rdata:off_7105DBC8o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105DBC8
		add	esp, 0Ch
		jmp	sub_710243A0
sub_7104F3A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7104F3C0	proc near		; DATA XREF: .rdata:7105DBECo

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_71053856
		mov	[ebp+var_18], offset sub_7104F470
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_7105DBE8
		mov	eax, [edx+30h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	short loc_7104F450

loc_7104F406:				; CODE XREF: sub_7104F3C0+AEj
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104F42C
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7104F42C:				; CODE XREF: sub_7104F3C0+54j
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		mov	[esp], eax
		call	sub_710517D0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7104F450:				; CODE XREF: sub_7104F3C0+44j
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_710444A0
		mov	eax, [edx+30h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	short loc_7104F406
sub_7104F3C0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104F470	proc near		; DATA XREF: sub_7104F3C0+20o
		add	ebp, 8
		cmp	dword ptr [ebp-38h], 1
		mov	eax, [ebp-34h]
		jz	short loc_7104F4A8
		mov	edx, [ebp+8]
		mov	[ebp-40h], eax
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104F4A5
		mov	edx, [ebp+8]
		mov	eax, [edx+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7104F4A5:				; CODE XREF: sub_7104F470+1Dj
		mov	eax, [ebp-40h]

loc_7104F4A8:				; CODE XREF: sub_7104F470+Aj
		mov	edx, [ebp+8]
		mov	dword ptr [edx], offset	off_7105D728
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_7104F470	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7104F4C0	proc near		; DATA XREF: .rdata:off_7105DBE8o

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_7105385E
		mov	[ebp+var_18], offset sub_7104F568
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_7105DBE8
		mov	eax, [edx+30h]
		lock dec dword ptr [eax+8]
		setnz	dl
		test	dl, dl
		jz	short loc_7104F548

loc_7104F506:				; CODE XREF: sub_7104F4C0+A6j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7104F530

loc_7104F516:				; CODE XREF: sub_7104F4C0+86j
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105D728
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_7104F530:				; CODE XREF: sub_7104F4C0+54j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+8]
		mov	[ebp+var_38], 2
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7104F516
; ---------------------------------------------------------------------------

loc_7104F548:				; CODE XREF: sub_7104F4C0+44j
		mov	edx, [ebp+arg_0]
		mov	dword ptr [esp+4], offset sub_710444A0
		mov	eax, [edx+30h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN9QHashData11free_helperEPFvPNS_4NodeEE
		jmp	short loc_7104F506
sub_7104F4C0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104F568	proc near		; DATA XREF: sub_7104F4C0+20o
		add	ebp, 8
		cmp	dword ptr [ebp-38h], 1
		mov	eax, [ebp-34h]
		jz	short loc_7104F5A0
		mov	edx, [ebp+8]
		mov	[ebp-40h], eax
		mov	eax, [edx+8]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7104F59D
		mov	edx, [ebp+8]
		mov	eax, [edx+8]
		mov	dword ptr [ebp-38h], 0
		mov	[esp+0], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7104F59D:				; CODE XREF: sub_7104F568+1Dj
		mov	eax, [ebp-40h]

loc_7104F5A0:				; CODE XREF: sub_7104F568+Aj
		mov	edx, [ebp+8]
		mov	dword ptr [edx], offset	off_7105D728
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
sub_7104F568	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7104F5C0	proc near		; DATA XREF: .rdata:7105DC0Co

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_7105DC08
		mov	[esp+1Ch+var_1C], ebx
		call	sub_71023D40
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_710517D0
sub_7104F5C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7104F5F0	proc near		; DATA XREF: .rdata:off_7105DC08o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105DC08
		add	esp, 0Ch
		jmp	sub_71023D40
sub_7104F5F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7104F610	proc near		; DATA XREF: .rdata:7105DC4Co

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71052BF4
		mov	[ebp+var_18], offset sub_7104F685
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105DC48
		sub	eax, 0FFFFFF80h
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_ZN12QPainterPathD1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_71023D40
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_710517D0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_7104F610	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104F685	proc near		; DATA XREF: sub_7104F610+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		mov	[esp+0], eax
		call	sub_71023D40
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7104F685	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7104F6C0	proc near		; DATA XREF: .rdata:off_7105DC48o

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_71052BFA
		mov	[ebp+var_18], offset sub_7104F72A
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105DC48
		sub	eax, 0FFFFFF80h
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_ZN12QPainterPathD1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_71023D40
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_7104F6C0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104F72A	proc near		; DATA XREF: sub_7104F6C0+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		mov	[esp+0], eax
		call	sub_71023D40
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7104F72A	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7104F760	proc near		; DATA XREF: .rdata:7105DC6Co

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_7105DC68
		mov	[esp+1Ch+var_1C], ebx
		call	sub_71023D40
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_710517D0
sub_7104F760	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7104F790	proc near		; DATA XREF: .rdata:off_7105DC68o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105DC68
		add	esp, 0Ch
		jmp	sub_71023D40
sub_7104F790	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7104F7B0	proc near		; CODE XREF: sub_71005DC0+8Dp
					; sub_710062B0+8Dp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_7104F7DA
		lock dec dword ptr [eax]
		setnz	cl
		test	cl, cl
		jnz	short loc_7104F7DA
		mov	[esp+1Ch+var_18], 8
		mov	eax, [edx]
		mov	[esp+1Ch+var_1C], eax
		call	ds:_ZN11QVectorData4freeEPS_i

loc_7104F7DA:				; CODE XREF: sub_7104F7B0+Bj
					; sub_7104F7B0+15j
		add	esp, 1Ch
		retn
sub_7104F7B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7104F7E0	proc near		; DATA XREF: .rdata:7105DCACo

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71052C00
		mov	[ebp+var_18], offset sub_7104F855
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105DCA8
		sub	eax, 0FFFFFF80h
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_ZN6QImageD1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_71023D40
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_710517D0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_7104F7E0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104F855	proc near		; DATA XREF: sub_7104F7E0+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		mov	[esp+0], eax
		call	sub_71023D40
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7104F855	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7104F890	proc near		; DATA XREF: .rdata:off_7105DCA8o

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_71052C06
		mov	[ebp+var_18], offset sub_7104F8FA
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], offset	off_7105DCA8
		sub	eax, 0FFFFFF80h
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	ds:_ZN6QImageD1Ev
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_71023D40
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
sub_7104F890	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104F8FA	proc near		; DATA XREF: sub_7104F890+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	eax, [ebp+8]
		mov	[esp+0], eax
		call	sub_71023D40
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7104F8FA	endp

; ---------------------------------------------------------------------------
		align 10h
; [00000002 BYTES: COLLAPSED FUNCTION nullsub_10]
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7104F940	proc near		; DATA XREF: .rdata:7105DCCCo

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71052CBC
		mov	[ebp+var_18], offset sub_7104F9CD
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_7105DCC8
		mov	eax, [edx+80h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7104F9B2

loc_7104F988:				; CODE XREF: sub_7104F940+8Bj
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_71023D40
		mov	eax, [ebp+arg_0]
		mov	[esp], eax
		call	sub_710517D0
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_7104F9B2:				; CODE XREF: sub_7104F940+46j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+80h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7104F988
sub_7104F940	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104F9CD	proc near		; DATA XREF: sub_7104F940+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	[esp+0], edx
		call	sub_71023D40
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7104F9CD	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7104FA00	proc near		; DATA XREF: .rdata:off_7105DCC8o

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset word_71052CC2
		mov	[ebp+var_18], offset sub_7104FA82
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	dword ptr [edx], offset	off_7105DCC8
		mov	eax, [edx+80h]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_7104FA67

loc_7104FA48:				; CODE XREF: sub_7104FA00+80j
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_38], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_71023D40
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_7104FA67:				; CODE XREF: sub_7104FA00+46j
		mov	edx, [ebp+arg_0]
		mov	eax, [edx+80h]
		mov	[ebp+var_38], 1
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7104FA48
sub_7104FA00	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104FA82	proc near		; DATA XREF: sub_7104FA00+20o
		add	ebp, 8
		mov	eax, [ebp-34h]
		mov	edx, [ebp+8]
		mov	dword ptr [ebp-38h], 0
		mov	[ebp-40h], eax
		mov	[esp+0], edx
		call	sub_71023D40
		mov	eax, [ebp-40h]
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_7104FA82	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7104FAB0	proc near		; DATA XREF: .rdata:7105DCECo

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_7105DCE8
		mov	[esp+1Ch+var_1C], ebx
		call	sub_71023D40
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_710517D0
sub_7104FAB0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7104FAE0	proc near		; DATA XREF: .rdata:off_7105DCE8o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105DCE8
		add	esp, 0Ch
		jmp	sub_71023D40
sub_7104FAE0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_7104FB00	proc near		; CODE XREF: sub_710517F0+26Ep
					; sub_71051C51+40p

var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053D20
		mov	[ebp+var_18], offset sub_7104FB88
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	edx, dword_7105403C
		mov	eax, [ebp+arg_0]
		test	edx, edx
		mov	eax, [eax]
		jz	short loc_7104FB51
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	sub_7103AC20
		test	eax, eax
		jnz	short loc_7104FB5E

loc_7104FB51:				; CODE XREF: sub_7104FB00+3Cj
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_7104FB5E:				; CODE XREF: sub_7104FB00+4Fj
		mov	dword ptr [esp], 4
		call	sub_71051A80
		mov	dword ptr [eax], offset	off_7105DE20
		mov	dword ptr [esp+8], offset sub_7104FC40
		mov	dword ptr [esp+4], offset off_7105CE3C
		mov	[esp], eax
		call	sub_71052550
sub_7104FB00	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_7104FB88	proc near		; DATA XREF: sub_7104FB00+20o
		add	ebp, 8
		cmp	dword ptr [ebp-30h], 0FFFFFFFFh
		mov	eax, [ebp-34h]
		jz	short loc_7104FBA3
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7104FBA3:				; CODE XREF: sub_7104FB88+Aj
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	sub_71051E20
sub_7104FB88	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7104FBC0	proc near		; DATA XREF: .rdata:7105DE0Co

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_7105DE08
		mov	[esp+1Ch+var_1C], ebx
		call	sub_710516F0
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_710517D0
sub_7104FBC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7104FBF0	proc near		; DATA XREF: sub_710517F0+20Ao
					; sub_71051A80+1B9o ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105DE08
		add	esp, 0Ch
		jmp	sub_710516F0
sub_7104FBF0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7104FC10	proc near		; DATA XREF: .rdata:7105DE24o

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_7105DE20
		mov	[esp+1Ch+var_1C], ebx
		call	sub_710516F0
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_710517D0
sub_7104FC10	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7104FC40	proc near		; DATA XREF: sub_7104FB00+70o
					; sub_710517F0+1E0o ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105DE20
		add	esp, 0Ch
		jmp	sub_710516F0
sub_7104FC40	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn bp-based	frame

sub_7104FC60	proc near		; DATA XREF: .data:off_71058A68o

var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71053D78
		mov	[ebp+var_28], offset sub_7104FE0D
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		cmp	byte_71058A78, 0
		jz	short loc_7104FCD0
		mov	eax, ds:_iob
		mov	dword ptr [esp+8], 1Dh ; size_t
		mov	dword ptr [esp+4], 1 ; size_t
		mov	dword ptr [esp], offset	aTerminateCalle	; "terminate called recursively\n"
		add	eax, 40h
		mov	[esp+0Ch], eax	; FILE *
		mov	[ebp+var_48], 0FFFFFFFFh
		call	fwrite
		call	abort
; ---------------------------------------------------------------------------
		align 10h

loc_7104FCD0:				; CODE XREF: sub_7104FC60+36j
		mov	byte_71058A78, 1
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_71051F80
		test	eax, eax
		jz	loc_7104FDC5
		mov	eax, [eax+4]
		mov	[ebp+var_C], 0FFFFFFFFh
		mov	dword ptr [esp+8], 0 ; int
		mov	dword ptr [esp+4], 0 ; char *
		mov	[ebp+var_50], eax
		lea	eax, [ebp+var_C]
		mov	[esp+0Ch], eax	; int
		mov	eax, [ebp+var_50]
		mov	[esp], eax	; int
		call	sub_71039640
		mov	dword ptr [esp+8], 30h ; size_t
		mov	dword ptr [esp+4], 1 ; size_t
		mov	dword ptr [esp], offset	aTerminateCal_0	; "terminate called after throwing an inst"...
		mov	[ebp+var_54], eax
		mov	eax, ds:_iob
		add	eax, 40h
		mov	[esp+0Ch], eax	; FILE *
		call	fwrite
		mov	edx, [ebp+var_C]
		test	edx, edx
		jnz	short loc_7104FDA5
		mov	eax, ds:_iob
		add	eax, 40h
		mov	[esp+4], eax	; FILE *
		mov	eax, [ebp+var_54]
		mov	[esp], eax	; char *
		call	fputs

loc_7104FD63:				; CODE XREF: sub_7104FC60+163j
		mov	eax, ds:_iob
		mov	dword ptr [esp+8], 2 ; size_t
		mov	dword ptr [esp+4], 1 ; size_t
		mov	dword ptr [esp], offset	asc_7105B661 ; "'\n"
		add	eax, 40h
		mov	[esp+0Ch], eax	; FILE *
		mov	[ebp+var_48], 0FFFFFFFFh
		call	fwrite
		mov	eax, [ebp+var_C]
		test	eax, eax
		jz	short loc_7104FE00

loc_7104FD99:				; CODE XREF: sub_7104FC60+1ABj
		mov	[ebp+var_48], 2
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_7104FDA5:				; CODE XREF: sub_7104FC60+EAj
		mov	eax, ds:_iob
		mov	[ebp+var_48], 0FFFFFFFFh
		add	eax, 40h
		mov	[esp+4], eax	; FILE *
		mov	eax, [ebp+var_50]
		mov	[esp], eax	; char *
		call	fputs
		jmp	short loc_7104FD63
; ---------------------------------------------------------------------------

loc_7104FDC5:				; CODE XREF: sub_7104FC60+85j
		mov	eax, ds:_iob
		mov	dword ptr [esp+8], 2Dh ; size_t
		mov	dword ptr [esp+4], 1 ; size_t
		mov	dword ptr [esp], offset	aTerminateCal_1	; "terminate called without an active exce"...
		add	eax, 40h
		mov	[esp+0Ch], eax	; FILE *
		mov	[ebp+var_48], 0FFFFFFFFh
		call	fwrite

loc_7104FDF4:				; CODE XREF: sub_7104FE0D+4Cj
		mov	[ebp+var_48], 0FFFFFFFFh
		call	abort
; ---------------------------------------------------------------------------

loc_7104FE00:				; CODE XREF: sub_7104FC60+137j
		mov	eax, [ebp+var_54]
		mov	[esp], eax	; void *
		call	free
		jmp	short loc_7104FD99
sub_7104FC60	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

; int __cdecl sub_7104FE0D(size_t, size_t, FILE	*)
sub_7104FE0D	proc near		; DATA XREF: sub_7104FC60+1Do

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		add	ebp, 8
		mov	eax, [ebp-44h]
		cmp	dword ptr [ebp-48h], 1
		mov	[ebp-58h], eax
		mov	eax, [ebp-40h]
		jz	short loc_7104FE3D
		mov	dword ptr [ebp-48h], 0
		call	sub_71051FB0
		mov	eax, [ebp-58h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_7104FE3D:				; CODE XREF: sub_7104FE0D+10j
		cmp	eax, 2
		jz	short loc_7104FE5B
		mov	eax, [ebp-58h]
		mov	[esp+0], eax
		call	sub_71051CE0

loc_7104FE4D:				; CODE XREF: sub_7104FE0D+C4j
		mov	dword ptr [ebp-48h], 0
		call	sub_71051FB0
		jmp	short loc_7104FDF4
; ---------------------------------------------------------------------------

loc_7104FE5B:				; CODE XREF: sub_7104FE0D+33j
		mov	eax, [ebp-58h]
		mov	[esp+0], eax
		call	sub_71051CE0
		mov	edx, [eax]
		mov	[esp+0], eax
		mov	eax, [edx+8]
		mov	dword ptr [ebp-48h], 1
		call	eax
		mov	[ebp-5Ch], eax
		mov	eax, ds:_iob
		mov	[esp+arg_4], 0Bh ; size_t
		mov	[esp+arg_0], 1	; size_t
		mov	dword ptr [esp+0], offset aWhat	; "  what():  "
		add	eax, 40h
		mov	[esp+arg_8], eax ; FILE	*
		call	fwrite
		mov	eax, ds:_iob
		add	eax, 40h
		mov	[esp+arg_0], eax ; FILE	*
		mov	eax, [ebp-5Ch]
		mov	[esp+0], eax	; char *
		call	fputs
		mov	eax, ds:_iob
		mov	dword ptr [esp+0], 0Ah ; int
		add	eax, 40h
		mov	[esp+arg_0], eax ; FILE	*
		call	fputc
		jmp	loc_7104FE4D
sub_7104FE0D	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7104FEE0	proc near		; DATA XREF: .rdata:7105DD38o
					; .rdata:7105DD98o ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 2Ch
		mov	[esp+2Ch+var_10], ebx
		mov	ebx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_C], esi
		mov	esi, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_8], edi
		mov	edi, [esp+2Ch+arg_C]
		mov	[esp+2Ch+var_4], ebp
		mov	ebp, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_28], ebx
		mov	[esp+2Ch+var_2C], esi
		call	sub_710515E0
		mov	edx, eax
		mov	eax, 1
		test	dl, dl
		jnz	short loc_7104FF21
		xor	eax, eax
		cmp	edi, 3
		jbe	short loc_7104FF35

loc_7104FF21:				; CODE XREF: sub_7104FEE0+38j
		mov	ebx, [esp+2Ch+var_10]
		mov	esi, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_8]
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_7104FF35:				; CODE XREF: sub_7104FEE0+3Fj
		mov	eax, [ebx]
		mov	[esp+2Ch+arg_8], ebp
		mov	edi, [esp+2Ch+var_8]
		mov	[esp+2Ch+arg_4], esi
		mov	ebp, [esp+2Ch+var_4]
		mov	[esp+2Ch+arg_0], ebx
		mov	esi, [esp+2Ch+var_C]
		mov	eax, [eax+14h]
		mov	ebx, [esp+2Ch+var_10]
		add	esp, 2Ch
		jmp	eax
sub_7104FEE0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7104FF60	proc near		; CODE XREF: sub_710500C0+32p
					; sub_71050310+26p
					; DATA XREF: ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_C]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], eax
		call	sub_710515E0
		mov	edx, eax
		xor	eax, eax
		test	dl, dl
		jz	short loc_7104FF9D
		mov	eax, [esp+1Ch+arg_8]
		mov	dword ptr [ebx+0Ch], 8
		mov	dword ptr [ebx+4], 6
		mov	[ebx], eax
		mov	eax, 1

loc_7104FF9D:				; CODE XREF: sub_7104FF60+22j
		add	esp, 18h
		pop	ebx
		retn
sub_7104FF60	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_7104FFB0	proc near		; DATA XREF: .rdata:7105DD3Co
					; .rdata:7105DD9Co ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 28h
		mov	eax, [esp+2Ch+arg_0]
		lea	ecx, [esp+2Ch+var_1C]
		mov	ebx, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_1C], 0
		mov	[esp+2Ch+var_18], 0
		mov	edx, [eax]
		mov	[esp+2Ch+var_20], ecx
		mov	ecx, [ebx]
		mov	[esp+2Ch+var_14], 10h
		mov	[esp+2Ch+var_10], 0
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_24], ecx
		mov	ecx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_28], ecx
		call	dword ptr [edx+18h]
		mov	edx, [esp+2Ch+var_18]
		xor	eax, eax
		and	edx, 6
		cmp	edx, 6
		jnz	short loc_71050013
		mov	eax, [esp+2Ch+var_1C]
		mov	[ebx], eax
		mov	eax, 1

loc_71050013:				; CODE XREF: sub_7104FFB0+56j
		add	esp, 28h
		pop	ebx
		retn
sub_7104FFB0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71050020	proc near		; DATA XREF: .rdata:7105DD44o

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h
arg_18		= dword	ptr  1Ch
arg_1C		= dword	ptr  20h

		sub	esp, 2Ch
		mov	[esp+2Ch+var_10], ebx
		mov	ebx, [esp+2Ch+arg_10]
		cmp	ebx, [esp+2Ch+arg_18]
		mov	[esp+2Ch+var_C], esi
		mov	esi, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_8], edi
		mov	edi, [esp+2Ch+arg_1C]
		mov	[esp+2Ch+var_4], ebp
		mov	ebp, [esp+2Ch+arg_8]
		jz	short loc_71050080

loc_71050049:				; CODE XREF: sub_71050020+72j
		mov	eax, [esp+2Ch+arg_C]
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_28], eax
		call	sub_710515E0
		test	al, al
		jz	short loc_71050069
		mov	[edi], ebx
		mov	[edi+4], ebp
		mov	dword ptr [edi+0Ch], 1

loc_71050069:				; CODE XREF: sub_71050020+3Bj
					; sub_71050020+77j
		xor	eax, eax
		mov	ebx, [esp+2Ch+var_10]
		mov	esi, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_8]
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71050080:				; CODE XREF: sub_71050020+27j
		mov	eax, [esp+2Ch+arg_14]
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_28], eax
		call	sub_710515E0
		test	al, al
		jz	short loc_71050049
		mov	[edi+8], ebp
		jmp	short loc_71050069
sub_71050020	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710500A0	proc near		; DATA XREF: .rdata:7105DD48o

arg_8		= dword	ptr  0Ch
arg_10		= dword	ptr  14h

		mov	eax, [esp+arg_10]
		cmp	eax, [esp+arg_8]
		setz	al
		movzx	eax, al
		lea	eax, [eax+eax*4+1]
		retn
sub_710500A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710500C0	proc near		; DATA XREF: .rdata:7105DDA0o

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 2Ch
		mov	[esp+2Ch+var_10], ebx
		mov	ebx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_C], esi
		mov	esi, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_8], edi
		mov	edi, [esp+2Ch+arg_C]
		mov	[esp+2Ch+var_4], ebp
		mov	ebp, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_28], ebx
		mov	[esp+2Ch+var_24], esi
		mov	[esp+2Ch+var_20], edi
		mov	[esp+2Ch+var_2C], ebp
		call	sub_7104FF60
		test	al, al
		jz	short loc_71050114
		mov	eax, 1
		mov	ebx, [esp+2Ch+var_10]
		mov	esi, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_8]
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_71050114:				; CODE XREF: sub_710500C0+39j
		mov	eax, [ebp+8]
		mov	ebp, [esp+2Ch+var_4]
		mov	edx, [eax]
		mov	[esp+2Ch+arg_C], edi
		mov	edi, [esp+2Ch+var_8]
		mov	[esp+2Ch+arg_8], esi
		mov	esi, [esp+2Ch+var_C]
		mov	[esp+2Ch+arg_4], ebx
		mov	ebx, [esp+2Ch+var_10]
		mov	[esp+2Ch+arg_0], eax
		mov	eax, [edx+18h]
		add	esp, 2Ch
		jmp	eax
sub_710500C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71050150	proc near		; DATA XREF: .rdata:7105DDA4o

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h
arg_18		= dword	ptr  1Ch
arg_1C		= dword	ptr  20h

		sub	esp, 3Ch
		mov	ecx, [esp+3Ch+arg_14]
		mov	edx, [esp+3Ch+arg_C]
		mov	[esp+3Ch+var_8], edi
		mov	eax, [esp+3Ch+arg_8]
		mov	edi, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_20], ecx
		mov	ecx, [esp+3Ch+arg_18]
		mov	[esp+3Ch+var_10], ebx
		mov	ebx, [esp+3Ch+arg_1C]
		mov	[esp+3Ch+var_C], esi
		mov	esi, [esp+3Ch+arg_10]
		mov	[esp+3Ch+var_4], ebp
		mov	ebp, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_38], edx
		mov	[esp+3Ch+var_28], edx
		mov	[esp+3Ch+var_2C], ecx
		mov	[esp+3Ch+var_24], eax
		mov	[esp+3Ch+var_3C], edi
		call	sub_710515E0
		mov	edx, [esp+3Ch+var_28]
		mov	ecx, [esp+3Ch+var_2C]
		test	al, al
		jz	short loc_710501E0
		mov	eax, [esp+3Ch+var_24]
		test	ebp, ebp
		mov	[ebx], esi
		mov	[ebx+4], eax
		js	short loc_71050230
		add	esi, ebp
		xor	eax, eax
		cmp	ecx, esi
		setz	al
		lea	eax, [eax+eax*4+1]
		mov	[ebx+0Ch], eax

loc_710501C8:				; CODE XREF: sub_71050150+E3j
					; sub_71050150+ECj ...
		xor	eax, eax
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_710501E0:				; CODE XREF: sub_71050150+59j
		cmp	esi, ecx
		jz	short loc_71050240

loc_710501E4:				; CODE XREF: sub_71050150+112j
		mov	edi, [edi+8]
		mov	eax, [edi]
		mov	[esp+3Ch+arg_18], ecx
		mov	ecx, [esp+3Ch+var_20]
		mov	[esp+3Ch+arg_C], edx
		mov	edx, [esp+3Ch+var_24]
		mov	[esp+3Ch+arg_1C], ebx
		mov	ebx, [esp+3Ch+var_10]
		mov	[esp+3Ch+arg_10], esi
		mov	esi, [esp+3Ch+var_C]
		mov	[esp+3Ch+arg_4], ebp
		mov	ebp, [esp+3Ch+var_4]
		mov	[esp+3Ch+arg_0], edi
		mov	edi, [esp+3Ch+var_8]
		mov	[esp+3Ch+arg_14], ecx
		mov	[esp+3Ch+arg_8], edx
		mov	eax, [eax+1Ch]
		add	esp, 3Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_71050230:				; CODE XREF: sub_71050150+66j
		cmp	ebp, 0FFFFFFFEh
		jnz	short loc_710501C8
		mov	dword ptr [ebx+0Ch], 1
		jmp	short loc_710501C8
; ---------------------------------------------------------------------------
		align 10h

loc_71050240:				; CODE XREF: sub_71050150+92j
		mov	eax, [esp+3Ch+var_20]
		mov	[esp+3Ch+var_28], edx
		mov	[esp+3Ch+var_2C], ecx
		mov	[esp+3Ch+var_3C], edi
		mov	[esp+3Ch+var_38], eax
		call	sub_710515E0
		mov	edx, [esp+3Ch+var_28]
		mov	ecx, [esp+3Ch+var_2C]
		test	al, al
		jz	short loc_710501E4
		mov	edx, [esp+3Ch+var_24]
		mov	[ebx+8], edx
		jmp	loc_710501C8
sub_71050150	endp


; =============== S U B	R O U T	I N E =======================================


sub_71050270	proc near		; DATA XREF: .rdata:7105DDA8o

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		sub	esp, 3Ch
		mov	[esp+3Ch+var_10], ebx
		mov	ebx, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_C], esi
		mov	esi, [esp+3Ch+arg_10]
		mov	[esp+3Ch+var_8], edi
		mov	edx, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_4], ebp
		mov	edi, [esp+3Ch+arg_C]
		mov	ebp, [esp+3Ch+arg_0]
		cmp	esi, ebx
		jz	short loc_710502D0

loc_7105029B:				; CODE XREF: sub_71050270+76j
		mov	eax, [ebp+8]
		mov	ebp, [esp+3Ch+var_4]
		mov	ecx, [eax]
		mov	[esp+3Ch+arg_10], esi
		mov	esi, [esp+3Ch+var_C]
		mov	[esp+3Ch+arg_C], edi
		mov	edi, [esp+3Ch+var_8]
		mov	[esp+3Ch+arg_8], ebx
		mov	ebx, [esp+3Ch+var_10]
		mov	[esp+3Ch+arg_4], edx
		mov	[esp+3Ch+arg_0], eax
		mov	eax, [ecx+20h]
		add	esp, 3Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_710502D0:				; CODE XREF: sub_71050270+29j
		mov	[esp+3Ch+var_20], edx
		mov	[esp+3Ch+var_38], edi
		mov	[esp+3Ch+var_3C], ebp
		call	sub_710515E0
		mov	edx, [esp+3Ch+var_20]
		test	al, al
		jz	short loc_7105029B
		mov	eax, 6
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
sub_71050270	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71050310	proc near		; DATA XREF: .rdata:7105DDE0o

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_36		= byte ptr -36h
var_35		= byte ptr -35h
var_34		= dword	ptr -34h
var_2D		= byte ptr -2Dh
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	edi, [esp+4Ch+arg_8]
		mov	ebp, [esp+4Ch+arg_C]
		mov	eax, [esp+4Ch+arg_4]
		mov	edx, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_44], edi
		mov	[esp+4Ch+var_40], ebp
		mov	[esp+4Ch+var_48], eax
		mov	[esp+4Ch+var_4C], edx
		call	sub_7104FF60
		test	al, al
		jnz	loc_71050494
		mov	ecx, [ebp+8]
		mov	[esp+4Ch+var_34], ecx
		and	ecx, 10h
		jnz	loc_710504F0

loc_71050353:				; CODE XREF: sub_71050310+1EBj
		mov	edx, [esp+4Ch+arg_0]
		movzx	ecx, byte ptr [esp+4Ch+var_34]
		mov	esi, [edx+0Ch]
		and	ecx, 1
		mov	[esp+4Ch+var_2D], cl
		lea	ebx, [edx+esi*8+8]
		jmp	short loc_710503B1
; ---------------------------------------------------------------------------
		align 10h

loc_71050370:				; CODE XREF: sub_71050310+132j
					; sub_71050310+140j ...
		mov	eax, [esp+4Ch+var_28]
		cmp	eax, 3
		jle	short loc_71050387
		cmp	[esp+4Ch+var_35], 0
		jnz	short loc_71050387
		and	eax, 0FFFFFFFDh
		mov	[esp+4Ch+var_28], eax

loc_71050387:				; CODE XREF: sub_71050310+67j
					; sub_71050310+6Ej
		mov	edx, [ebp+0Ch]
		test	edx, edx
		jz	loc_71050461
		mov	eax, [ebp+0]
		cmp	eax, [esp+4Ch+var_2C]
		jnz	loc_71050510
		test	eax, eax
		jz	loc_710504A1

loc_710503A7:				; CODE XREF: sub_71050310+1ADj
		mov	eax, [esp+4Ch+var_28]
		or	[ebp+4], eax

loc_710503AE:				; CODE XREF: sub_71050310+E3j
					; sub_71050310+127j ...
		sub	ebx, 8

loc_710503B1:				; CODE XREF: sub_71050310+5Aj
		test	esi, esi
		jz	loc_71050500
		mov	eax, [esp+4Ch+var_34]
		sub	esi, 1
		mov	[esp+4Ch+var_2C], 0
		mov	[esp+4Ch+var_28], 0
		mov	[esp+4Ch+var_20], 0
		mov	[esp+4Ch+var_24], eax
		mov	eax, [ebx+4]
		mov	edx, eax
		shr	edx, 1
		mov	ecx, edx
		and	ecx, 1
		mov	[esp+4Ch+var_35], cl
		jnz	short loc_710503F5
		cmp	[esp+4Ch+var_2D], 0
		jz	short loc_710503AE

loc_710503F5:				; CODE XREF: sub_71050310+DCj
		mov	edx, eax
		and	edx, 1
		mov	[esp+4Ch+var_36], dl
		xor	edx, edx
		test	edi, edi
		jz	short loc_71050415
		sar	eax, 8
		cmp	[esp+4Ch+var_36], 0
		jz	short loc_71050412
		add	eax, [edi]
		mov	eax, [eax]

loc_71050412:				; CODE XREF: sub_71050310+FCj
		lea	edx, [edi+eax]

loc_71050415:				; CODE XREF: sub_71050310+F2j
		mov	eax, [ebx]
		mov	ecx, [eax]
		lea	eax, [esp+4Ch+var_2C]
		mov	[esp+4Ch+var_44], edx
		mov	edx, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_40], eax
		mov	[esp+4Ch+var_48], edx
		mov	eax, [ebx]
		mov	[esp+4Ch+var_4C], eax
		call	dword ptr [ecx+18h]
		test	al, al
		jz	loc_710503AE
		cmp	[esp+4Ch+var_20], 8
		jnz	loc_71050370
		cmp	[esp+4Ch+var_36], 0
		lea	esi, [esi+0]
		jz	loc_71050370
		mov	eax, [ebx]
		mov	[esp+4Ch+var_20], eax
		jmp	loc_71050370
; ---------------------------------------------------------------------------

loc_71050461:				; CODE XREF: sub_71050310+7Cj
		mov	eax, [esp+4Ch+var_2C]
		mov	[ebp+0], eax
		mov	eax, [esp+4Ch+var_28]
		mov	[ebp+4], eax
		mov	edx, [esp+4Ch+var_24]
		cmp	eax, 3
		mov	[ebp+8], edx
		mov	edx, [esp+4Ch+var_20]
		mov	[ebp+0Ch], edx
		jle	short loc_71050494
		test	al, 2
		jz	short loc_710504D7
		mov	edx, [esp+4Ch+arg_0]
		test	byte ptr [edx+8], 1
		jnz	loc_710503AE

loc_71050494:				; CODE XREF: sub_71050310+2Dj
					; sub_71050310+170j ...
		add	esp, 3Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_710504A1:				; CODE XREF: sub_71050310+91j
		mov	eax, [esp+4Ch+var_20]
		cmp	eax, 8
		jz	short loc_710504C3
		cmp	edx, 8
		jz	short loc_710504C3
		mov	[esp+4Ch+var_48], edx
		mov	[esp+4Ch+var_4C], eax
		call	sub_710515E0
		test	al, al
		jnz	loc_710503A7

loc_710504C3:				; CODE XREF: sub_71050310+198j
					; sub_71050310+19Dj
		mov	dword ptr [ebp+4], 2
		mov	eax, 1
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_710504D7:				; CODE XREF: sub_71050310+174j
		test	al, 1
		jz	short loc_71050494
		mov	ecx, [esp+4Ch+arg_0]
		test	byte ptr [ecx+8], 2
		jnz	loc_710503AE
		jmp	short loc_71050494
; ---------------------------------------------------------------------------
		align 10h

loc_710504F0:				; CODE XREF: sub_71050310+3Dj
		mov	eax, [esp+4Ch+arg_0]
		mov	eax, [eax+8]
		mov	[esp+4Ch+var_34], eax
		jmp	loc_71050353
; ---------------------------------------------------------------------------

loc_71050500:				; CODE XREF: sub_71050310+A3j
		mov	eax, [ebp+4]
		test	eax, eax
		setnz	al
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_71050510:				; CODE XREF: sub_71050310+89j
		mov	dword ptr [ebp+0], 0
		mov	eax, 1
		mov	dword ptr [ebp+4], 2
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_71050310	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71050530	proc near		; DATA XREF: .rdata:7105DDE4o

var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_45		= byte ptr -45h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h
arg_18		= dword	ptr  1Ch
arg_1C		= dword	ptr  20h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 6Ch
		mov	ebx, [esp+7Ch+arg_1C]
		test	byte ptr [ebx+10h], 10h
		jz	short loc_71050551
		mov	edx, [esp+7Ch+arg_0]
		mov	eax, [edx+8]
		mov	[ebx+10h], eax

loc_71050551:				; CODE XREF: sub_71050530+12j
		mov	ecx, [esp+7Ch+arg_18]
		cmp	[esp+7Ch+arg_10], ecx
		jz	loc_71050971

loc_71050565:				; CODE XREF: sub_71050530+45Dj
		mov	eax, [esp+7Ch+arg_C]
		mov	edx, [esp+7Ch+arg_0]
		mov	[esp+7Ch+var_78], eax
		mov	[esp+7Ch+var_7C], edx
		call	sub_710515E0
		test	al, al
		jnz	loc_71050805
		mov	esi, [esp+7Ch+arg_0]
		mov	eax, [esp+7Ch+arg_8]
		mov	ebp, [esp+7Ch+arg_0]
		mov	[esp+7Ch+var_45], 0
		mov	esi, [esi+0Ch]
		or	eax, 1
		mov	[esp+7Ch+var_40], eax
		mov	[esp+7Ch+var_50], esi
		lea	edi, [ebp+esi*8+8]
		jmp	loc_7105064A
; ---------------------------------------------------------------------------

loc_710505B8:				; CODE XREF: sub_71050530+202j
		mov	ebp, [ebx]
		test	ebp, ebp
		mov	[esp+7Ch+var_4C], ebp
		jz	loc_71050930

loc_710505C6:				; CODE XREF: sub_71050530+210j
		mov	ebp, [esp+7Ch+var_30]
		cmp	[esp+7Ch+var_4C], ebp
		jz	loc_71050903
		test	ebp, ebp
		jz	loc_71050910

loc_710505DC:				; CODE XREF: sub_71050530+3E2j
		cmp	ecx, 3
		mov	edx, [ebx+0Ch]
		jle	loc_71050760

loc_710505E8:				; CODE XREF: sub_71050530+228j
		and	ecx, 1
		jnz	loc_71050891

loc_710505F1:				; CODE XREF: sub_71050530+365j
		test	edx, edx
		jnz	short loc_710505F7
		mov	dl, 1

loc_710505F7:				; CODE XREF: sub_71050530+C3j
		test	esi, esi
		mov	ebp, esi
		mov	ecx, edx
		jnz	short loc_7105060B
		mov	bp, 1
		mov	[esp+7Ch+var_44], 1

loc_7105060B:				; CODE XREF: sub_71050530+CDj
					; sub_71050530+23Ej ...
		mov	eax, ecx
		xor	eax, ebp
		cmp	eax, 3
		jle	loc_710507E0

loc_71050618:				; CODE XREF: sub_71050530+2A7j
		cmp	ebp, 3
		jg	loc_71050876
		mov	ebp, ecx

loc_71050623:				; CODE XREF: sub_71050530+35Cj
		test	ebp, 2
		mov	[ebx+0Ch], edx
		jnz	loc_7105085E
		and	ebp, 1
		jz	loc_7105085E
		mov	edx, [ebx+8]

loc_7105063E:				; CODE XREF: sub_71050530+21Cj
					; sub_71050530+2D0j ...
		cmp	edx, 4
		jz	loc_71050967

loc_71050647:				; CODE XREF: sub_71050530+33Bj
					; sub_71050530+417j
		sub	edi, 8

loc_7105064A:				; CODE XREF: sub_71050530+83j
		mov	edx, [esp+7Ch+var_50]
		test	edx, edx
		jz	loc_71050967
		mov	eax, [edi+4]
		mov	esi, [ebx+10h]
		sub	[esp+7Ch+var_50], 1
		mov	edx, [esp+7Ch+arg_8]
		mov	ecx, eax
		sar	ecx, 8
		test	al, 1
		mov	[esp+7Ch+var_30], 0
		mov	[esp+7Ch+var_2C], 0
		mov	[esp+7Ch+var_28], 0
		mov	[esp+7Ch+var_24], 0
		mov	[esp+7Ch+var_20], esi
		jz	short loc_710506A5
		mov	ebp, [esp+7Ch+arg_10]
		mov	edx, [esp+7Ch+var_40]
		add	ecx, [ebp+0]
		mov	ecx, [ecx]

loc_710506A5:				; CODE XREF: sub_71050530+163j
		test	al, 2
		jnz	short loc_710506BA
		cmp	[esp+7Ch+arg_4], 0FFFFFFFEh
		jz	loc_71050868

loc_710506B7:				; CODE XREF: sub_71050530+341j
		and	edx, 0FFFFFFFDh

loc_710506BA:				; CODE XREF: sub_71050530+177j
		mov	eax, [edi]
		lea	ebp, [esp+7Ch+var_30]
		add	ecx, [esp+7Ch+arg_10]
		mov	esi, [eax]
		mov	[esp+7Ch+var_60], ebp
		mov	ebp, [esp+7Ch+arg_18]
		mov	[esp+7Ch+var_6C], ecx
		mov	ecx, [esp+7Ch+arg_C]
		mov	[esp+7Ch+var_74], edx
		mov	[esp+7Ch+var_7C], eax
		mov	[esp+7Ch+var_64], ebp
		mov	ebp, [esp+7Ch+arg_14]
		mov	[esp+7Ch+var_70], ecx
		mov	[esp+7Ch+var_68], ebp
		mov	ebp, [esp+7Ch+arg_4]
		mov	[esp+7Ch+var_78], ebp
		call	dword ptr [esi+1Ch]
		mov	esi, [esp+7Ch+var_24]
		mov	ecx, [esp+7Ch+var_28]
		or	ecx, [ebx+8]
		cmp	esi, 2
		mov	edx, ecx
		mov	[ebx+8], ecx
		mov	[esp+7Ch+var_44], esi
		jz	loc_710509B2
		cmp	esi, 6
		jz	loc_710509B2
		cmp	[esp+7Ch+var_45], 0
		jz	loc_710505B8
		mov	ebp, [ebx]
		test	ebp, ebp
		mov	[esp+7Ch+var_4C], ebp
		jnz	loc_710505C6
		mov	ebp, [esp+7Ch+var_30]
		test	ebp, ebp
		jz	loc_7105063E
		cmp	ecx, 3
		mov	edx, [ebx+0Ch]
		jg	loc_710505E8
		xchg	ax, ax

loc_71050760:				; CODE XREF: sub_71050530+B2j
		test	edx, edx
		mov	ecx, edx
		mov	ebp, esi
		jle	loc_710508A7

loc_7105076C:				; CODE XREF: sub_71050530+371j
					; sub_71050530+3BEj ...
		test	esi, esi
		jg	loc_7105060B
		cmp	ecx, 3
		jle	short loc_7105078F
		test	cl, 1
		lea	esi, [esi+0]
		jz	short loc_710507C3
		mov	esi, [esp+7Ch+arg_0]
		test	byte ptr [esi+8], 2
		jz	short loc_710507C3

loc_7105078F:				; CODE XREF: sub_71050530+247j
		mov	ebp, [esp+7Ch+arg_4]
		mov	esi, [esp+7Ch+var_30]
		test	ebp, ebp
		js	loc_71050A20
		add	esi, [esp+7Ch+arg_4]
		mov	ebp, 6
		cmp	[esp+7Ch+arg_18], esi
		mov	[esp+7Ch+var_44], 6
		jz	loc_7105060B

loc_710507C3:				; CODE XREF: sub_71050530+250j
					; sub_71050530+25Dj ...
		mov	ebp, 1
		mov	eax, ecx
		xor	eax, ebp
		cmp	eax, 3
		mov	[esp+7Ch+var_44], 1
		jg	loc_71050618
		lea	esi, [esi+0]

loc_710507E0:				; CODE XREF: sub_71050530+E2j
		and	ebp, ecx
		cmp	ebp, 3
		jg	loc_71050A85
		mov	dword ptr [ebx], 0
		mov	edx, [ebx+8]
		mov	dword ptr [ebx+0Ch], 1
		mov	[esp+7Ch+var_45], 1
		jmp	loc_7105063E
; ---------------------------------------------------------------------------

loc_71050805:				; CODE XREF: sub_71050530+51j
		mov	edx, [esp+7Ch+arg_10]
		mov	[ebx], edx
		mov	ecx, [esp+7Ch+arg_8]
		mov	[ebx+4], ecx
		mov	eax, [esp+7Ch+arg_4]
		test	eax, eax
		js	short loc_71050850
		mov	eax, [esp+7Ch+arg_4]
		add	eax, edx
		cmp	[esp+7Ch+arg_18], eax
		setz	al
		movzx	eax, al
		lea	eax, [eax+eax*4+1]
		mov	[ebx+0Ch], eax
		xor	eax, eax

loc_71050842:				; CODE XREF: sub_71050530+428j
					; sub_71050530+43Cj ...
		add	esp, 6Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71050850:				; CODE XREF: sub_71050530+2F1j
		cmp	[esp+7Ch+arg_4], 0FFFFFFFEh
		jz	loc_710509A4

loc_7105085E:				; CODE XREF: sub_71050530+FCj
					; sub_71050530+105j
		add	esp, 6Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_71050868:				; CODE XREF: sub_71050530+181j
		and	esi, 3
		jz	loc_71050647
		jmp	loc_710506B7
; ---------------------------------------------------------------------------

loc_71050876:				; CODE XREF: sub_71050530+EBj
		mov	eax, [esp+7Ch+var_30]
		mov	edx, [esp+7Ch+var_44]
		mov	[esp+7Ch+var_45], 0
		mov	[ebx], eax
		mov	eax, [esp+7Ch+var_2C]
		mov	[ebx+4], eax
		jmp	loc_71050623
; ---------------------------------------------------------------------------

loc_71050891:				; CODE XREF: sub_71050530+BBj
		test	byte ptr [ebx+10h], 2
		jz	loc_710505F1
		test	edx, edx
		mov	ecx, edx
		mov	ebp, esi
		jg	loc_7105076C

loc_710508A7:				; CODE XREF: sub_71050530+236j
		cmp	esi, 3
		mov	ebp, esi
		jle	short loc_710508C3
		test	esi, 1
		jz	short loc_71050920
		mov	eax, [esp+7Ch+arg_0]
		test	byte ptr [eax+8], 2
		jz	short loc_71050920

loc_710508C3:				; CODE XREF: sub_71050530+37Cj
		mov	eax, [esp+7Ch+arg_4]
		test	eax, eax
		js	loc_710509C7
		mov	eax, [esp+7Ch+var_4C]
		mov	ecx, 6
		mov	edx, 6
		add	eax, [esp+7Ch+arg_4]
		cmp	[esp+7Ch+arg_18], eax
		jz	loc_7105076C

loc_710508F4:				; CODE XREF: sub_71050530+49Fj
		mov	ecx, 1
		mov	edx, 1
		jmp	loc_7105076C
; ---------------------------------------------------------------------------

loc_71050903:				; CODE XREF: sub_71050530+9Ej
		mov	eax, [esp+7Ch+var_2C]
		or	[ebx+4], eax
		jmp	loc_7105063E
; ---------------------------------------------------------------------------
		align 10h

loc_71050910:				; CODE XREF: sub_71050530+A6j
		test	al, al
		jnz	loc_710505DC
		jmp	loc_7105063E
; ---------------------------------------------------------------------------
		align 10h

loc_71050920:				; CODE XREF: sub_71050530+384j
					; sub_71050530+391j
		mov	ecx, 1
		mov	edx, 1
		jmp	loc_7105060B
; ---------------------------------------------------------------------------
		align 10h

loc_71050930:				; CODE XREF: sub_71050530+90j
		mov	esi, [esp+7Ch+var_30]
		mov	ebp, [esp+7Ch+var_2C]
		test	esi, esi
		mov	[ebx], esi
		mov	[ebx+4], ebp
		jz	short loc_7105095E
		test	ecx, ecx
		mov	[esp+7Ch+var_45], al
		jz	loc_71050647
		mov	ecx, [esp+7Ch+arg_0]
		test	byte ptr [ecx+8], 1
		jz	loc_71050842

loc_7105095E:				; CODE XREF: sub_71050530+40Fj
		mov	[esp+7Ch+var_45], al
		jmp	loc_7105063E
; ---------------------------------------------------------------------------

loc_71050967:				; CODE XREF: sub_71050530+111j
					; sub_71050530+120j
		movzx	eax, [esp+7Ch+var_45]
		jmp	loc_71050842
; ---------------------------------------------------------------------------

loc_71050971:				; CODE XREF: sub_71050530+2Fj
		mov	esi, [esp+7Ch+arg_14]
		mov	ebp, [esp+7Ch+arg_0]
		mov	[esp+7Ch+var_78], esi
		mov	[esp+7Ch+var_7C], ebp
		call	sub_710515E0
		test	al, al
		jz	loc_71050565
		mov	eax, [esp+7Ch+arg_8]
		mov	[ebx+8], eax
		xor	eax, eax
		jmp	loc_71050842
; ---------------------------------------------------------------------------

loc_710509A4:				; CODE XREF: sub_71050530+328j
		mov	dword ptr [ebx+0Ch], 1
		xor	eax, eax
		jmp	loc_71050842
; ---------------------------------------------------------------------------

loc_710509B2:				; CODE XREF: sub_71050530+1EEj
					; sub_71050530+1F7j
		mov	edx, [esp+7Ch+var_30]
		mov	[ebx+0Ch], esi
		mov	[ebx], edx
		mov	edx, [esp+7Ch+var_2C]
		mov	[ebx+4], edx
		jmp	loc_71050842
; ---------------------------------------------------------------------------

loc_710509C7:				; CODE XREF: sub_71050530+39Cj
		cmp	[esp+7Ch+arg_4], 0FFFFFFFEh
		jz	loc_710508F4
		mov	edx, [esp+7Ch+arg_C]
		mov	ecx, [esp+7Ch+arg_18]
		mov	eax, [edx]
		mov	edx, [esp+7Ch+arg_14]
		mov	[esp+7Ch+var_6C], ecx
		mov	ecx, [esp+7Ch+var_4C]
		mov	[esp+7Ch+var_70], edx
		mov	edx, [esp+7Ch+arg_4]
		mov	[esp+7Ch+var_74], ecx
		mov	ecx, [esp+7Ch+arg_C]
		mov	[esp+7Ch+var_78], edx
		mov	[esp+7Ch+var_7C], ecx
		call	dword ptr [eax+20h]
		mov	edx, eax
		mov	ecx, eax
		jmp	loc_7105076C
; ---------------------------------------------------------------------------
		align 10h

loc_71050A20:				; CODE XREF: sub_71050530+26Cj
		cmp	[esp+7Ch+arg_4], 0FFFFFFFEh
		jz	loc_710507C3
		mov	ebp, [esp+7Ch+arg_C]
		mov	[esp+7Ch+var_58], edx
		mov	[esp+7Ch+var_54], ecx
		mov	eax, [ebp+0]
		mov	ebp, [esp+7Ch+arg_18]
		mov	[esp+7Ch+var_74], esi
		mov	esi, [esp+7Ch+arg_4]
		mov	[esp+7Ch+var_6C], ebp
		mov	ebp, [esp+7Ch+arg_14]
		mov	[esp+7Ch+var_78], esi
		mov	[esp+7Ch+var_70], ebp
		mov	ebp, [esp+7Ch+arg_C]
		mov	[esp+7Ch+var_7C], ebp
		call	dword ptr [eax+20h]
		mov	edx, [esp+7Ch+var_58]
		mov	ecx, [esp+7Ch+var_54]
		mov	[esp+7Ch+var_44], eax
		mov	ebp, eax
		jmp	loc_7105060B
; ---------------------------------------------------------------------------

loc_71050A85:				; CODE XREF: sub_71050530+2B5j
		mov	dword ptr [ebx], 0
		mov	eax, 1
		mov	dword ptr [ebx+0Ch], 2
		jmp	loc_71050842
sub_71050530	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71050AA0	proc near		; DATA XREF: .rdata:7105DDE8o

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_30		= dword	ptr -30h
var_1D		= byte ptr -1Dh
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	edi, [esp+5Ch+arg_8]
		cmp	edi, [esp+5Ch+arg_10]
		mov	ebx, [esp+5Ch+arg_0]
		mov	ebp, [esp+5Ch+arg_4]
		jz	loc_71050B49

loc_71050ABD:				; CODE XREF: sub_71050AA0+C4j
		mov	esi, [ebx+0Ch]
		mov	[esp+5Ch+var_30], edi
		lea	ebx, [ebx+esi*8+0Ch]
		jmp	short loc_71050B26
; ---------------------------------------------------------------------------
		align 10h

loc_71050AD0:				; CODE XREF: sub_71050AA0+88j
		mov	edx, [ebx]
		sub	esi, 1
		test	dl, 2
		jz	short loc_71050B23
		mov	eax, edx
		mov	ecx, edx
		sar	eax, 8
		and	ecx, 1
		mov	[esp+5Ch+var_1D], cl
		jz	short loc_71050AF7
		cmp	ebp, 0FFFFFFFDh
		jz	short loc_71050B23
		mov	edi, [esp+5Ch+var_30]
		add	eax, [edi]
		mov	eax, [eax]

loc_71050AF7:				; CODE XREF: sub_71050AA0+48j
		mov	edx, [ebx-4]
		mov	edi, [esp+5Ch+arg_10]
		add	eax, [esp+5Ch+var_30]
		mov	ecx, [edx]
		mov	[esp+5Ch+var_4C], edi
		mov	edi, [esp+5Ch+arg_C]
		mov	[esp+5Ch+var_54], eax
		mov	[esp+5Ch+var_58], ebp
		mov	[esp+5Ch+var_5C], edx
		mov	[esp+5Ch+var_50], edi
		call	dword ptr [ecx+20h]
		cmp	eax, 3
		jg	short loc_71050B37

loc_71050B23:				; CODE XREF: sub_71050AA0+38j
					; sub_71050AA0+4Dj
		sub	ebx, 8

loc_71050B26:				; CODE XREF: sub_71050AA0+28j
		test	esi, esi
		jnz	short loc_71050AD0
		mov	eax, 1

loc_71050B2F:				; CODE XREF: sub_71050AA0+9Cj
					; sub_71050AA0+C2j
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_71050B37:				; CODE XREF: sub_71050AA0+81j
		cmp	[esp+5Ch+var_1D], 0
		jz	short loc_71050B2F
		add	esp, 4Ch
		or	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_71050B49:				; CODE XREF: sub_71050AA0+17j
		mov	eax, [esp+5Ch+arg_C]
		mov	[esp+5Ch+var_5C], ebx
		mov	[esp+5Ch+var_58], eax
		call	sub_710515E0
		mov	edx, eax
		mov	eax, 6
		test	dl, dl
		jnz	short loc_71050B2F
		jmp	loc_71050ABD
sub_71050AA0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71050B70	proc near		; DATA XREF: .rdata:7105D6F0o
		xor	eax, eax
		retn
sub_71050B70	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71050B80	proc near		; DATA XREF: .rdata:7105D7C4o
		mov	eax, 9
		retn
sub_71050B80	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71050B90	proc near		; DATA XREF: .rdata:7105D9E4o

arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		test	eax, eax
		setz	al
		retn
sub_71050B90	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71050BA0	proc near		; DATA XREF: .rdata:7105D9E8o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		xor	eax, eax
		test	edx, edx
		jz	short locret_71050BB3
		mov	edx, [edx+34h]
		test	edx, edx
		jz	short locret_71050BB3
		mov	eax, edx

locret_71050BB3:			; CODE XREF: sub_71050BA0+8j
					; sub_71050BA0+Fj
		rep retn
sub_71050BA0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71050BC0	proc near		; DATA XREF: .rdata:7105D9F0o

arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		retn
sub_71050BC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71050BD0	proc near		; DATA XREF: .rdata:7105D9D8o

var_4D		= byte ptr -4Dh
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_7105306C
		mov	[ebp+var_28], offset sub_71050CA2
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		xor	eax, eax
		mov	[ebp+var_4D], 0
		test	edx, edx
		jz	short loc_71050C70
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+50h]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [ebp+var_C]
		mov	eax, 1
		mov	[ebp+var_4D], 1
		mov	ecx, [edx+8]
		test	ecx, ecx
		jnz	short loc_71050C70
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+54h]
		lock inc dword ptr [eax]
		setnz	dl
		mov	edx, [eax+8]
		test	edx, edx
		setnz	[ebp+var_4D]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71050C90

loc_71050C4D:				; CODE XREF: sub_71050BD0+A4j
					; sub_71050BD0+D0j
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71050C76

loc_71050C5A:				; CODE XREF: sub_71050BD0+A2j
					; sub_71050BD0+B9j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_4D]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71050C70:				; CODE XREF: sub_71050BD0+3Aj
					; sub_71050BD0+5Cj
		test	al, al
		jz	short loc_71050C5A
		jmp	short loc_71050C4D
; ---------------------------------------------------------------------------

loc_71050C76:				; CODE XREF: sub_71050BD0+88j
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_71050C5A
; ---------------------------------------------------------------------------
		align 10h

loc_71050C90:				; CODE XREF: sub_71050BD0+7Bj
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_71050C4D
sub_71050BD0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71050CA2	proc near		; DATA XREF: sub_71050BD0+20o
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-54h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_710477B0
		mov	edx, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_71050CA2	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71050CD0	proc near		; DATA XREF: .rdata:7105D9D0o

var_4D		= byte ptr -4Dh
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71052FDC
		mov	[ebp+var_28], offset sub_71050D9B
		mov	[ebp+var_24], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_4]
		test	edx, edx
		jz	loc_71050D95
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+0Ch]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	eax
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	eax, ds:off_71059CE0[eax*4]
		mov	[esp], eax
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	dword ptr [esp+8], 0
		mov	[ebp+var_48], 1
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		call	ds:_ZNK7QString7compareERKS_N2Qt15CaseSensitivityE
		test	eax, eax
		mov	eax, [ebp+var_C]
		setz	[ebp+var_4D]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71050D80

loc_71050D6E:				; CODE XREF: sub_71050CD0+C3j
					; sub_71050CD0+C9j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		movzx	eax, [ebp+var_4D]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71050D80:				; CODE XREF: sub_71050CD0+9Cj
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_71050D6E
; ---------------------------------------------------------------------------

loc_71050D95:				; CODE XREF: sub_71050CD0+34j
		mov	[ebp+var_4D], 0
		jmp	short loc_71050D6E
sub_71050CD0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71050D9B	proc near		; DATA XREF: sub_71050CD0+1Do
		add	ebp, 8
		mov	eax, [ebp-44h]
		mov	dword ptr [ebp-48h], 0
		mov	[ebp-54h], eax
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		call	sub_710477B0
		mov	edx, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
sub_71050D9B	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71050DD0	proc near		; DATA XREF: .rdata:7105D9ECo

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		xor	eax, eax
		mov	[esp+1Ch+var_8], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_4], edi
		xor	edi, edi
		mov	[esp+1Ch+var_C], ebx
		test	esi, esi
		jz	short loc_71050E0E
		mov	ebx, [esi+34h]
		test	ebx, ebx
		jz	short loc_71050E0C
		mov	eax, [ebx]
		mov	[esp+1Ch+var_1C], ebx
		call	dword ptr [eax+0Ch]
		test	eax, eax
		jnz	short loc_71050E20

loc_71050DFE:				; CODE XREF: sub_71050DD0+5Bj
					; sub_71050DD0+68j ...
		mov	[esp+1Ch+var_18], esi
		mov	[esp+1Ch+var_1C], ebx
		call	sub_71024190
		mov	edi, eax

loc_71050E0C:				; CODE XREF: sub_71050DD0+20j
		mov	eax, edi

loc_71050E0E:				; CODE XREF: sub_71050DD0+19j
					; sub_71050DD0+79j
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71050E20:				; CODE XREF: sub_71050DD0+2Cj
		mov	eax, [ebx]
		mov	[esp+1Ch+var_1C], ebx
		call	dword ptr [eax+0Ch]
		cmp	eax, 1
		jz	short loc_71050DFE
		mov	eax, [ebx]
		mov	[esp+1Ch+var_1C], ebx
		call	dword ptr [eax+0Ch]
		cmp	eax, 2
		jz	short loc_71050DFE
		mov	eax, [ebx]
		mov	[esp+1Ch+var_1C], ebx
		call	dword ptr [eax+0Ch]
		cmp	eax, 3
		jz	short loc_71050DFE
		mov	eax, edi
		jmp	short loc_71050E0E
sub_71050DD0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71050E50	proc near		; DATA XREF: .rdata:7105D9DCo

var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset word_71052FE2
		mov	[ebp+var_28], offset sub_71050F45
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	ecx, [ebp+arg_8]
		test	ecx, ecx
		jz	short loc_71050ECA
		mov	edx, [ebp+arg_8]
		mov	eax, [edx+50h]
		mov	[ebp+var_10], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 2
		call	ds:_ZN7QStringaSERKS_
		mov	eax, [ebp+var_10]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71050F30

loc_71050ECA:				; CODE XREF: sub_71050E50+42j
					; sub_71050E50+F3j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_50], eax
		mov	eax, ds:_ZN9QListData11shared_nullE
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	sub_71045A40
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_71050F19
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_71050F19:				; CODE XREF: sub_71050E50+B4j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_71050F30:				; CODE XREF: sub_71050E50+78j
		mov	eax, [ebp+var_10]
		mov	[ebp+var_48], 3
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_71050ECA
sub_71050E50	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71050F45	proc near		; DATA XREF: sub_71050E50+20o
		add	ebp, 8
		mov	eax, [ebp-48h]
		mov	edx, [ebp-44h]
		cmp	eax, 1
		mov	[ebp-54h], edx
		jz	short loc_71050F91
		cmp	eax, 2
		jz	short loc_71050F6D
		mov	eax, [ebp-50h]
		mov	dword ptr [ebp-48h], 0
		mov	[esp+0], eax
		call	sub_7103BBF0

loc_71050F6D:				; CODE XREF: sub_71050F45+14j
					; sub_71050F45+5Ej
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_710477B0
		mov	edx, [ebp-54h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71050F91:				; CODE XREF: sub_71050F45+Fj
		lea	eax, [ebp-10h]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_710477B0
		jmp	short loc_71050F6D
sub_71050F45	endp

; ---------------------------------------------------------------------------
		align 10h
; [00000002 BYTES: COLLAPSED FUNCTION nullsub_5]
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71050FC0	proc near		; DATA XREF: .rdata:7105D9D4o

var_5E		= byte ptr -5Eh
var_5D		= byte ptr -5Dh
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_710525B0
		mov	[ebp+var_40], offset word_71052FFE
		mov	[ebp+var_38], offset sub_71051172
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_8]
		mov	eax, [edx+50h]
		mov	[ebp+var_C], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_C]
		mov	[ebp+var_5D], 0
		mov	ecx, [eax+8]
		test	ecx, ecx
		jnz	loc_710510D3

loc_71051010:				; CODE XREF: sub_71050FC0+13Fj
					; sub_71050FC0+1ADj
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_7105102D
		mov	eax, [ebp+var_C]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE

loc_7105102D:				; CODE XREF: sub_71050FC0+58j
		cmp	[ebp+var_5D], 0
		jnz	loc_710510C0
		mov	edx, [ebp+arg_8]
		mov	eax, [edx+54h]
		mov	[ebp+var_18], eax
		lock inc dword ptr [eax]
		setnz	dl
		mov	eax, [ebp+var_18]
		mov	[ebp+var_5E], 0
		mov	edx, [eax+8]
		test	edx, edx
		jnz	loc_71051104

loc_71051058:				; CODE XREF: sub_71050FC0+170j
					; sub_71050FC0+17Cj
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_710510A3
		cmp	[ebp+var_5E], 0
		jnz	short loc_71051090

loc_71051068:				; CODE XREF: sub_71050FC0+FAj
		mov	eax, ds:_ZN7QString11shared_nullE
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl

loc_71051078:				; CODE XREF: sub_71050FC0+E1j
					; sub_71050FC0+111j
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_71051090:				; CODE XREF: sub_71050FC0+A6j
					; sub_71050FC0+FCj
		mov	edx, [ebp+arg_8]
		mov	eax, [edx+54h]
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		jmp	short loc_71051078
; ---------------------------------------------------------------------------

loc_710510A3:				; CODE XREF: sub_71050FC0+A0j
		mov	eax, [ebp+var_18]
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		cmp	[ebp+var_5E], 0
		jz	short loc_71051068
		jmp	short loc_71051090
; ---------------------------------------------------------------------------
		align 10h

loc_710510C0:				; CODE XREF: sub_71050FC0+71j
		mov	edx, [ebp+arg_8]
		mov	eax, [edx+50h]
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		jmp	short loc_71051078
; ---------------------------------------------------------------------------

loc_710510D3:				; CODE XREF: sub_71050FC0+4Aj
		lea	eax, [ebp+var_10]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_C]
		mov	[ebp+var_10], offset aId ; "id"
		mov	[ebp+var_58], 2
		mov	[esp], eax
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		jz	short loc_71051141

loc_710510F8:				; CODE XREF: sub_71050FC0+1A4j
		mov	eax, [ebp+var_C]
		mov	[ebp+var_5D], 1
		jmp	loc_71051010
; ---------------------------------------------------------------------------

loc_71051104:				; CODE XREF: sub_71050FC0+92j
		lea	eax, [ebp+var_1C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_C]
		mov	[ebp+var_1C], offset aClass ; "class"
		mov	[ebp+var_58], 1
		mov	[esp], eax
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		jz	short loc_71051135
		mov	eax, [ebp+var_18]
		mov	[ebp+var_5E], 1
		jmp	loc_71051058
; ---------------------------------------------------------------------------

loc_71051135:				; CODE XREF: sub_71050FC0+167j
		mov	eax, [ebp+var_18]
		mov	[ebp+var_5E], 0
		jmp	loc_71051058
; ---------------------------------------------------------------------------

loc_71051141:				; CODE XREF: sub_71050FC0+136j
		mov	edx, [ebp+arg_C]
		lea	eax, [ebp+var_14]
		mov	[ebp+var_14], offset aXmlId ; "xml:id"
		mov	[esp+4], eax
		mov	[ebp+var_58], 2
		mov	[esp], edx
		call	ds:_ZNK7QStringeqERK13QLatin1String
		test	al, al
		jnz	short loc_710510F8
		mov	eax, [ebp+var_C]
		mov	[ebp+var_5D], 0
		jmp	loc_71051010
sub_71050FC0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71051172	proc near		; DATA XREF: sub_71050FC0+20o
		add	ebp, 8
		mov	edx, [ebp-54h]
		cmp	dword ptr [ebp-58h], 1
		lea	eax, [ebp-0Ch]
		mov	[ebp-64h], edx
		jz	short loc_71051187
		lea	eax, [ebp-18h]

loc_71051187:				; CODE XREF: sub_71051172+10j
		mov	[esp+0], eax
		mov	dword ptr [ebp-58h], 0
		call	sub_710477B0
		mov	eax, [ebp-64h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71051172	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710511B0	proc near		; DATA XREF: .rdata:7105D9E0o

var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71052FF8
		mov	[ebp+var_28], offset sub_71051288
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_8]
		test	eax, eax
		jz	loc_71051276
		mov	edx, [ebp+arg_8]
		mov	eax, [edx]
		mov	[esp], edx
		mov	eax, [eax+0Ch]
		mov	[ebp+var_48], 0FFFFFFFFh
		call	eax
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	eax, ds:off_71059CE0[eax*4]
		mov	[esp], eax
		call	ds:_ZN7QString17fromLatin1_helperEPKci
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, ds:_ZN9QListData11shared_nullE
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		lea	eax, [ebp+var_C]
		mov	[esp+4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_48], 1
		mov	[esp], eax
		call	sub_71045A40
		mov	eax, [ebp+var_C]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jz	short loc_71051261

loc_7105124F:				; CODE XREF: sub_710511B0+C4j
					; sub_710511B0+D6j
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+arg_0]
		leave
		retn	4
; ---------------------------------------------------------------------------

loc_71051261:				; CODE XREF: sub_710511B0+9Dj
		mov	eax, [ebp+var_C]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	ds:_ZN7QString4freeEPNS_4DataE
		jmp	short loc_7105124F
; ---------------------------------------------------------------------------

loc_71051276:				; CODE XREF: sub_710511B0+34j
		mov	eax, ds:_ZN9QListData11shared_nullE
		mov	edx, [ebp+arg_0]
		mov	[edx], eax
		lock inc dword ptr [eax]
		setnz	dl
		jmp	short loc_7105124F
sub_710511B0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71051288	proc near		; DATA XREF: sub_710511B0+20o

arg_0		= dword	ptr  4

		add	ebp, 8
		mov	edx, [ebp-44h]
		mov	[ebp-50h], edx
		mov	edx, [ebp+8]
		mov	eax, [edx]
		lock dec dword ptr [eax]
		setnz	dl
		test	dl, dl
		jnz	short loc_710512B8
		mov	edx, [ebp+8]
		mov	eax, [edx]
		mov	[esp+0], edx
		mov	dword ptr [ebp-48h], 0
		mov	[esp+arg_0], eax
		call	sub_710459F0

loc_710512B8:				; CODE XREF: sub_71051288+16j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0
		call	sub_710477B0
		mov	eax, [ebp-50h]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
sub_71051288	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710512E0	proc near		; CODE XREF: sub_71029A80+F5p
					; sub_71029A80+243p ...

var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 14h
		mov	eax, [esp+14h+arg_0]
		mov	[esp+14h+var_8], edi
		mov	edx, [esp+14h+arg_4]
		mov	[esp+14h+var_10], ebx
		mov	edi, [esp+14h+arg_8]
		mov	[esp+14h+var_C], esi
		mov	[esp+14h+var_4], ebp
		mov	ebx, [eax]
		movzx	esi, word ptr [edx]
		mov	edx, [ebx+18h]
		movzx	ecx, si
		test	edx, edx
		mov	[esp+14h+var_14], edx
		jz	short loc_71051335
		xor	edx, edx
		mov	eax, ecx
		div	[esp+14h+var_14]
		lea	eax, ds:0[edx*4]
		add	eax, [ebx+4]
		mov	edx, [eax]
		cmp	edx, ebx
		jz	short loc_71051335

loc_71051328:				; CODE XREF: sub_710512E0+53j
		cmp	ecx, [edx+4]
		jz	short loc_71051350

loc_7105132D:				; CODE XREF: sub_710512E0+74j
		mov	eax, edx
		mov	edx, [edx]
		cmp	edx, ebx
		jnz	short loc_71051328

loc_71051335:				; CODE XREF: sub_710512E0+2Fj
					; sub_710512E0+46j ...
		test	edi, edi
		jz	short loc_7105133B
		mov	[edi], ecx

loc_7105133B:				; CODE XREF: sub_710512E0+57j
		mov	ebx, [esp+14h+var_10]
		mov	esi, [esp+14h+var_C]
		mov	edi, [esp+14h+var_8]
		mov	ebp, [esp+14h+var_4]
		add	esp, 14h
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71051350:				; CODE XREF: sub_710512E0+4Bj
		cmp	si, [edx+8]
		jnz	short loc_7105132D
		jmp	short loc_71051335
sub_710512E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71051360	proc near		; CODE XREF: _ZNK16QSvgTinyDocument10namedStyleERK7QString+39p
					; _ZN16QSvgTinyDocument13addNamedStyleERK7QStringP21QSvgFillStyleProperty+CCp ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 3Ch
		mov	[esp+3Ch+var_10], ebx
		mov	eax, [esp+3Ch+arg_4]
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_C], esi
		mov	[esp+3Ch+var_8], edi
		mov	[esp+3Ch+var_4], ebp
		mov	ebp, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_3C], eax
		mov	edi, ebx
		call	ds:_Z5qHashRK7QString
		mov	ecx, [ebx]
		mov	edx, [ecx+18h]
		mov	esi, eax
		test	edx, edx
		mov	[esp+3Ch+var_20], edx
		jz	short loc_710513BD
		xor	edx, edx
		div	[esp+3Ch+var_20]
		mov	edi, edx
		shl	edi, 2
		add	edi, [ecx+4]
		mov	eax, [edi]
		cmp	eax, [ebx]
		jz	short loc_710513BD
		lea	esi, [esi+0]

loc_710513B0:				; CODE XREF: sub_71051360+5Bj
		cmp	esi, [eax+4]
		jz	short loc_710513E0

loc_710513B5:				; CODE XREF: sub_71051360+96j
		mov	edi, [edi]
		mov	eax, [edi]
		cmp	eax, [ebx]
		jnz	short loc_710513B0

loc_710513BD:				; CODE XREF: sub_71051360+37j
					; sub_71051360+4Bj ...
		test	ebp, ebp
		jz	short loc_710513C4
		mov	[ebp+0], esi

loc_710513C4:				; CODE XREF: sub_71051360+5Fj
		mov	eax, edi
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_710513E0:				; CODE XREF: sub_71051360+53j
		add	eax, 8
		mov	[esp+3Ch+var_38], eax
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_3C], eax
		call	ds:_ZNK7QStringeqERKS_
		test	al, al
		jz	short loc_710513B5
		jmp	short loc_710513BD
sub_71051360	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71051400	proc near		; CODE XREF: _ZNK16QSvgTinyDocument7svgFontERK7QString+39p
					; _ZN16QSvgTinyDocument10addSvgFontEP8QSvgFont+E8p ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 3Ch
		mov	[esp+3Ch+var_10], ebx
		mov	eax, [esp+3Ch+arg_4]
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_C], esi
		mov	[esp+3Ch+var_8], edi
		mov	[esp+3Ch+var_4], ebp
		mov	ebp, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_3C], eax
		mov	edi, ebx
		call	ds:_Z5qHashRK7QString
		mov	ecx, [ebx]
		mov	edx, [ecx+18h]
		mov	esi, eax
		test	edx, edx
		mov	[esp+3Ch+var_20], edx
		jz	short loc_7105145D
		xor	edx, edx
		div	[esp+3Ch+var_20]
		mov	edi, edx
		shl	edi, 2
		add	edi, [ecx+4]
		mov	eax, [edi]
		cmp	eax, [ebx]
		jz	short loc_7105145D
		lea	esi, [esi+0]

loc_71051450:				; CODE XREF: sub_71051400+5Bj
		cmp	esi, [eax+4]
		jz	short loc_71051480

loc_71051455:				; CODE XREF: sub_71051400+96j
		mov	edi, [edi]
		mov	eax, [edi]
		cmp	eax, [ebx]
		jnz	short loc_71051450

loc_7105145D:				; CODE XREF: sub_71051400+37j
					; sub_71051400+4Bj ...
		test	ebp, ebp
		jz	short loc_71051464
		mov	[ebp+0], esi

loc_71051464:				; CODE XREF: sub_71051400+5Fj
		mov	eax, edi
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71051480:				; CODE XREF: sub_71051400+53j
		add	eax, 8
		mov	[esp+3Ch+var_38], eax
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_3C], eax
		call	ds:_ZNK7QStringeqERKS_
		test	al, al
		jz	short loc_71051455
		jmp	short loc_7105145D
sub_71051400	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710514A0	proc near		; CODE XREF: _ZNK16QSvgTinyDocument9namedNodeERK7QString+39p
					; _ZN16QSvgTinyDocument12addNamedNodeERK7QStringP8QSvgNode+7Ep	...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 3Ch
		mov	[esp+3Ch+var_10], ebx
		mov	eax, [esp+3Ch+arg_4]
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_C], esi
		mov	[esp+3Ch+var_8], edi
		mov	[esp+3Ch+var_4], ebp
		mov	ebp, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_3C], eax
		mov	edi, ebx
		call	ds:_Z5qHashRK7QString
		mov	ecx, [ebx]
		mov	edx, [ecx+18h]
		mov	esi, eax
		test	edx, edx
		mov	[esp+3Ch+var_20], edx
		jz	short loc_710514FD
		xor	edx, edx
		div	[esp+3Ch+var_20]
		mov	edi, edx
		shl	edi, 2
		add	edi, [ecx+4]
		mov	eax, [edi]
		cmp	eax, [ebx]
		jz	short loc_710514FD
		lea	esi, [esi+0]

loc_710514F0:				; CODE XREF: sub_710514A0+5Bj
		cmp	esi, [eax+4]
		jz	short loc_71051520

loc_710514F5:				; CODE XREF: sub_710514A0+96j
		mov	edi, [edi]
		mov	eax, [edi]
		cmp	eax, [ebx]
		jnz	short loc_710514F0

loc_710514FD:				; CODE XREF: sub_710514A0+37j
					; sub_710514A0+4Bj ...
		test	ebp, ebp
		jz	short loc_71051504
		mov	[ebp+0], esi

loc_71051504:				; CODE XREF: sub_710514A0+5Fj
		mov	eax, edi
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71051520:				; CODE XREF: sub_710514A0+53j
		add	eax, 8
		mov	[esp+3Ch+var_38], eax
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_3C], eax
		call	ds:_ZNK7QStringeqERKS_
		test	al, al
		jz	short loc_710514F5
		jmp	short loc_710514FD
sub_710514A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71051540	proc near		; DATA XREF: .rdata:7105DCD4o
		mov	eax, 10h
		retn
sub_71051540	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71051550	proc near		; DATA XREF: .rdata:7105DE10o
		mov	eax, offset a__gnu_cxx__con ; "__gnu_cxx::__concurrence_lock_error"
		retn
sub_71051550	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71051560	proc near		; DATA XREF: .rdata:7105DE28o
		mov	eax, offset a__gnu_cxx__c_0 ; "__gnu_cxx::__concurrence_unlock_error"
		retn
sub_71051560	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71051570	proc near		; DATA XREF: .rdata:7105DE40o
		mov	eax, offset aStdBad_excepti ; "std::bad_exception"
		retn
sub_71051570	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71051580	proc near		; DATA XREF: .rdata:7105DE58o
		mov	eax, offset aStdBad_alloc ; "std::bad_alloc"
		retn
sub_71051580	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71051590	proc near		; DATA XREF: .rdata:7105DE70o
		mov	eax, offset aStdException ; "std::exception"
		retn
sub_71051590	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710515A0	proc near		; DATA XREF: .rdata:7105DE98o
		sub	esp, 0Ch
		add	esp, 0Ch
		jmp	sub_710515E0
sub_710515A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710515B0	proc near		; DATA XREF: .rdata:7105DE9Co
		xor	eax, eax
		retn
sub_710515B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710515C0	proc near		; DATA XREF: .rdata:7105DD30o
					; .rdata:7105DD90o ...
		xor	eax, eax
		retn
sub_710515C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710515D0	proc near		; DATA XREF: .rdata:7105DD34o
					; .rdata:7105DD94o ...
		xor	eax, eax
		retn
sub_710515D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710515E0	proc near		; CODE XREF: sub_7104FEE0+2Ap
					; sub_7104FF60+17p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, 1
		mov	edx, [esp+1Ch+arg_0]
		mov	ecx, [esp+1Ch+arg_4]
		cmp	ecx, edx
		jz	short loc_7105160B
		mov	eax, [ecx+4]
		mov	[esp+1Ch+var_18], eax ;	char *
		mov	eax, [edx+4]
		mov	[esp+1Ch+var_1C], eax ;	char *
		call	strcmp
		test	eax, eax
		setz	al

loc_7105160B:				; CODE XREF: sub_710515E0+12j
		add	esp, 1Ch
		retn
sub_710515E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71051610	proc near		; DATA XREF: .rdata:7105DE3Co

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105DE68
		add	esp, 0Ch
		jmp	sub_710517D0
sub_71051610	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71051630	proc near		; DATA XREF: sub_71051E8D+C8o
					; .rdata:off_7105DE38o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_7105DE68
		retn
sub_71051630	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		mov	dword ptr [eax], offset	off_7105DE68
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71051650	proc near		; DATA XREF: .rdata:7105DE54o

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	dword ptr [ebx], offset	off_7105DE50
		mov	[esp+1Ch+var_1C], ebx
		call	sub_710516F0
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_710517D0
sub_71051650	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71051680	proc near		; DATA XREF: sub_710517F0+86o
					; .rdata:off_7105DE50o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105DE50
		add	esp, 0Ch
		jmp	sub_710516F0
sub_71051680	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		mov	eax, [esp+10h]
		mov	dword ptr [eax], offset	off_7105DE50
		add	esp, 0Ch
		jmp	sub_710516F0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710516C0	proc near		; DATA XREF: .rdata:7105DE6Co

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105DE68
		add	esp, 0Ch
		jmp	sub_710517D0
sub_710516C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710516E0	proc near		; DATA XREF: .rdata:off_7105DE68o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_7105DE68
		retn
sub_710516E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710516F0	proc near		; CODE XREF: sub_7104FBC0+11p
					; sub_7104FBF0+10j ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_7105DE68
		retn
sub_710516F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71051700	proc near		; DATA XREF: .rdata:7105DE8Co

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	dword ptr [eax], offset	off_7105DE88
		add	esp, 0Ch
		jmp	sub_710517D0
sub_71051700	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71051720	proc near		; DATA XREF: .rdata:off_7105DE88o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_7105DE88
		retn
sub_71051720	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71051730	proc near		; CODE XREF: sub_7103BA60+11p
					; sub_7103BA90+10j ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], offset	off_7105DE88
		retn
sub_71051730	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71051740	proc near		; CODE XREF: sub_710525B0+58Ep

var_1C		= dword	ptr -1Ch

		sub	esp, 1Ch
		mov	eax, off_71058A6C
		mov	[esp+1Ch+var_1C], eax
		call	sub_7103BA10
sub_71051740	endp

; ---------------------------------------------------------------------------
		mov	edx, [esp+4]
		mov	eax, off_71058A68
		mov	off_71058A68, edx
		retn
; ---------------------------------------------------------------------------
		mov	edx, [esp+4]
		mov	eax, off_71058A6C
		mov	off_71058A6C, edx
		retn
; ---------------------------------------------------------------------------
		mov	edx, [esp+4]
		mov	eax, dword_71058A7C
		mov	dword_71058A7C,	edx
		retn
; ---------------------------------------------------------------------------
		sub	esp, 0Ch
		call	sub_71052330
		mov	eax, [eax+4]
		test	eax, eax
		setnz	al
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710517A0	proc near		; CODE XREF: sub_7103BA10+7p
					; sub_710517F0+25Cp ...

var_1C		= dword	ptr -1Ch

		sub	esp, 1Ch
		mov	eax, off_71058A68
		mov	[esp+1Ch+var_1C], eax
		call	sub_7103B980
sub_710517A0	endp

; Exported entry 142. _ZThn8_N16QGraphicsSvgItemD0Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZThn8_N16QGraphicsSvgItemD0Ev
_ZThn8_N16QGraphicsSvgItemD0Ev proc near ; DATA	XREF: .rdata:7105D850o

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF8h
		jmp	sub_71041760
_ZThn8_N16QGraphicsSvgItemD0Ev endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 143. _ZThn8_N16QGraphicsSvgItemD1Ev

; =============== S U B	R O U T	I N E =======================================


		public _ZThn8_N16QGraphicsSvgItemD1Ev
_ZThn8_N16QGraphicsSvgItemD1Ev proc near ; DATA	XREF: .rdata:off_7105D84Co

arg_0		= dword	ptr  4

		add	[esp+arg_0], 0FFFFFFF8h
		jmp	sub_71041810
_ZThn8_N16QGraphicsSvgItemD1Ev endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_710517D0	proc near		; CODE XREF: sub_71002229+Fp
					; sub_71003C40+14Cp ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		test	eax, eax
		jz	short loc_710517E3
		add	esp, 0Ch
		jmp	free
; ---------------------------------------------------------------------------

loc_710517E3:				; CODE XREF: sub_710517D0+9j
		add	esp, 0Ch
		retn
sub_710517D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_710517F0(size_t)
sub_710517F0	proc near		; CODE XREF: sub_71002050+3Dp
					; sub_71007040+3Dp ...

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053CCC
		mov	[ebp+var_18], offset loc_71051895
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		test	eax, eax
		jnz	short loc_71051842
		mov	[ebp+arg_0], 1
		jmp	short loc_71051842
; ---------------------------------------------------------------------------
		align 10h

loc_71051830:				; CODE XREF: sub_710517F0+62j
		mov	eax, dword_71058A7C
		test	eax, eax
		jz	short loc_71051864
		mov	[ebp+var_38], 1
		call	eax ; dword_71058A7C

loc_71051842:				; CODE XREF: sub_710517F0+34j
					; sub_710517F0+3Dj
		mov	eax, [ebp+arg_0]
		mov	[esp], eax	; size_t
		call	malloc
		test	eax, eax
		mov	[ebp+var_40], eax
		jz	short loc_71051830
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_40]
		leave
		retn
; ---------------------------------------------------------------------------

loc_71051864:				; CODE XREF: sub_710517F0+47j
		mov	dword ptr [esp], 4
		call	sub_71051A80
		mov	dword ptr [eax], offset	off_7105DE50
		mov	dword ptr [esp+8], offset sub_71051680
		mov	dword ptr [esp+4], offset off_7105CE54
		mov	[esp], eax
		mov	[ebp+var_38], 1
		call	sub_71052550
; ---------------------------------------------------------------------------

loc_71051895:				; DATA XREF: sub_710517F0+20o
		add	ebp, 8
		cmp	[ebp+var_30], 0FFFFFFFFh
		mov	eax, [ebp+var_34]
		jz	short loc_710518B0
		mov	[esp], eax
		mov	[ebp+var_38], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_710518B0:				; CODE XREF: sub_710517F0+AFj
		mov	[esp], eax
		mov	[ebp+var_38], 0FFFFFFFFh
		call	sub_71051E20
; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	edi
		sub	esp, 64h
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71053D64
		mov	[ebp+var_28], offset loc_71051A12
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	dword ptr [esp], 50h ; size_t
		call	malloc
		test	eax, eax
		mov	[ebp+var_50], eax
		jz	short loc_71051930

loc_71051903:				; CODE XREF: sub_710517F0+1B1j
					; sub_710517F0+1C8j
		call	sub_71052330
		mov	edi, [ebp+var_50]
		mov	ecx, 14h
		add	dword ptr [eax+4], 1
		xor	eax, eax
		rep stosd
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_50]
		add	esp, 64h
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71051930:				; CODE XREF: sub_710517F0+111j
		mov	ecx, dword_7105403C
		mov	[ebp+var_C], offset dword_71058A70
		test	ecx, ecx
		jz	short loc_7105195C
		mov	dword ptr [esp], offset	dword_71058A70
		mov	[ebp+var_48], 3
		call	sub_7103AD40
		test	eax, eax
		jnz	loc_710519E8

loc_7105195C:				; CODE XREF: sub_710517F0+14Fj
		mov	edx, dword_7105404C
		xor	ecx, ecx
		mov	eax, edx
		jmp	short loc_71051976
; ---------------------------------------------------------------------------

loc_71051968:				; CODE XREF: sub_710517F0+188j
		add	ecx, 1
		cmp	ecx, 20h
		jz	loc_71051A45
		shr	eax, 1

loc_71051976:				; CODE XREF: sub_710517F0+176j
		test	al, 1
		jnz	short loc_71051968
		mov	eax, 1
		shl	eax, cl
		or	eax, edx
		mov	edx, dword_7105403C
		mov	dword_7105404C,	eax
		lea	eax, [ecx+ecx*4]
		shl	eax, 4
		add	eax, offset dword_71058060
		test	edx, edx
		mov	[ebp+var_50], eax
		mov	eax, [ebp+var_C]
		jz	loc_71051903
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	sub_7103AC20
		test	eax, eax
		jz	loc_71051903
		mov	dword ptr [esp], 4
		call	sub_71051A80
		mov	dword ptr [eax], offset	off_7105DE20
		mov	dword ptr [esp+8], offset sub_7104FC40
		mov	dword ptr [esp+4], offset off_7105CE3C
		mov	[esp], eax
		call	sub_71052550
; ---------------------------------------------------------------------------

loc_710519E8:				; CODE XREF: sub_710517F0+166j
		mov	dword ptr [esp], 4
		call	sub_71051A80
		mov	dword ptr [eax], offset	off_7105DE08
		mov	dword ptr [esp+8], offset sub_7104FBF0
		mov	dword ptr [esp+4], offset off_7105CE30
		mov	[esp], eax
		call	sub_71052550
; ---------------------------------------------------------------------------

loc_71051A12:				; DATA XREF: sub_710517F0+F1o
		add	ebp, 8
		mov	edx, [ebp+var_44]
		mov	eax, [ebp+var_48]
		mov	[ebp+var_54], edx
		mov	edx, [ebp+var_40]
		cmp	eax, 1
		mov	[ebp+var_58], edx
		jz	short loc_71051A51
		cmp	eax, 2
		jz	short loc_71051A63
		cmp	edx, 0FFFFFFFFh
		jz	short loc_71051A69

loc_71051A33:				; CODE XREF: sub_710517F0+277j
		mov	eax, [ebp+var_54]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71051A45:				; CODE XREF: sub_710517F0+17Ej
		mov	[ebp+var_48], 2
		call	sub_710517A0
; ---------------------------------------------------------------------------

loc_71051A51:				; CODE XREF: sub_710517F0+237j
		lea	eax, [ebp+var_C]
		mov	[esp], eax
		mov	[ebp+var_48], 0FFFFFFFFh
		call	sub_7104FB00

loc_71051A63:				; CODE XREF: sub_710517F0+23Cj
		cmp	[ebp+var_58], 0FFFFFFFFh
		jnz	short loc_71051A33

loc_71051A69:				; CODE XREF: sub_710517F0+241j
		mov	edx, [ebp+var_54]
		mov	[ebp+var_48], 0FFFFFFFFh
		mov	[esp], edx
		call	sub_71051E20
sub_710517F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71051A80	proc near		; CODE XREF: sub_7104FB00+65p
					; sub_710517F0+7Bp ...

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+var_8]
		push	edi
		sub	esp, 74h
		mov	[ebp+var_2C], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		mov	[ebp+var_34], offset sub_710525B0
		mov	[ebp+var_30], offset dword_71053D50
		mov	[ebp+var_28], offset sub_71051C51
		mov	[ebp+var_24], esp
		call	_Unwind_SjLj_Register
		mov	eax, [ebp+arg_0]
		add	eax, 60h
		mov	[ebp+var_54], eax
		mov	[esp], eax	; size_t
		call	malloc
		test	eax, eax
		mov	[ebp+var_50], eax
		jz	short loc_71051B30

loc_71051AC8:				; CODE XREF: sub_71051A80+135j
					; sub_71051A80+14Cj
		call	sub_71052330
		mov	edi, [ebp+var_50]
		mov	edx, 60h
		add	dword ptr [eax+4], 1
		test	edi, 1
		jnz	loc_71051C00
		test	edi, 2
		jnz	loc_71051C17

loc_71051AF1:				; CODE XREF: sub_71051A80+191j
					; sub_71051A80+1A2j
		mov	ecx, edx
		xor	eax, eax
		shr	ecx, 2
		test	dl, 2
		rep stosd
		jz	short loc_71051B07
		mov	word ptr [edi],	0
		add	edi, 2

loc_71051B07:				; CODE XREF: sub_71051A80+7Dj
		and	edx, 1
		jz	short loc_71051B0F
		mov	byte ptr [edi],	0

loc_71051B0F:				; CODE XREF: sub_71051A80+8Aj
		mov	eax, [ebp+var_50]
		add	eax, 60h
		mov	[ebp+var_58], eax
		lea	eax, [ebp+var_4C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_58]
		add	esp, 74h
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71051B30:				; CODE XREF: sub_71051A80+46j
		mov	eax, dword_7105403C
		mov	[ebp+var_C], offset dword_71058A70
		test	eax, eax
		jz	short loc_71051B5B
		mov	dword ptr [esp], offset	dword_71058A70
		mov	[ebp+var_48], 3
		call	sub_7103AD40
		test	eax, eax
		jnz	loc_71051C27

loc_71051B5B:				; CODE XREF: sub_71051A80+BEj
		mov	eax, dword_71054048
		xor	ecx, ecx
		cmp	[ebp+var_54], 200h
		mov	edx, eax
		jbe	short loc_71051B8A

loc_71051B6D:				; CODE XREF: sub_71051A80+106j
		mov	[ebp+var_48], 2
		call	sub_710517A0
; ---------------------------------------------------------------------------
		align 10h

loc_71051B80:				; CODE XREF: sub_71051A80+10Dj
		add	ecx, 1
		cmp	ecx, 20h
		jz	short loc_71051B6D
		shr	edx, 1

loc_71051B8A:				; CODE XREF: sub_71051A80+EBj
		test	dl, 1
		jnz	short loc_71051B80
		mov	edi, dword_7105403C
		mov	edx, 1
		shl	edx, cl
		shl	ecx, 9
		or	edx, eax
		mov	eax, [ebp+var_C]
		add	ecx, offset dword_71054060
		test	edi, edi
		mov	dword_71054048,	edx
		mov	[ebp+var_50], ecx
		jz	loc_71051AC8
		mov	[esp], eax
		mov	[ebp+var_48], 1
		call	sub_7103AC20
		test	eax, eax
		jz	loc_71051AC8
		mov	dword ptr [esp], 4
		call	sub_71051A80
		mov	dword ptr [eax], offset	off_7105DE20
		mov	dword ptr [esp+8], offset sub_7104FC40
		mov	dword ptr [esp+4], offset off_7105CE3C
		mov	[esp], eax
		call	sub_71052550
; ---------------------------------------------------------------------------
		align 10h

loc_71051C00:				; CODE XREF: sub_71051A80+5Fj
		mov	byte ptr [edi],	0
		mov	edi, [ebp+var_50]
		mov	dl, 5Fh
		add	edi, 1
		test	edi, 2
		jz	loc_71051AF1

loc_71051C17:				; CODE XREF: sub_71051A80+6Bj
		mov	word ptr [edi],	0
		sub	edx, 2
		add	edi, 2
		jmp	loc_71051AF1
; ---------------------------------------------------------------------------

loc_71051C27:				; CODE XREF: sub_71051A80+D5j
		mov	dword ptr [esp], 4
		call	sub_71051A80
		mov	dword ptr [eax], offset	off_7105DE08
		mov	dword ptr [esp+8], offset sub_7104FBF0
		mov	dword ptr [esp+4], offset off_7105CE30
		mov	[esp], eax
		call	sub_71052550
sub_71051A80	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71051C51	proc near		; DATA XREF: sub_71051A80+21o
		add	ebp, 8
		mov	edx, [ebp-44h]
		mov	eax, [ebp-48h]
		mov	[ebp-5Ch], edx
		mov	edx, [ebp-40h]
		cmp	eax, 1
		mov	[ebp-60h], edx
		jz	short loc_71051C84
		cmp	eax, 2
		jz	short loc_71051C96
		cmp	edx, 0FFFFFFFFh
		jz	short loc_71051CAE
		mov	eax, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71051C84:				; CODE XREF: sub_71051C51+15j
		lea	eax, [ebp-0Ch]
		mov	[esp+0], eax
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		call	sub_7104FB00

loc_71051C96:				; CODE XREF: sub_71051C51+1Aj
		cmp	dword ptr [ebp-60h], 0FFFFFFFFh
		jz	short loc_71051CC0
		mov	edx, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71051CAE:				; CODE XREF: sub_71051C51+1Fj
		mov	edx, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	sub_71051E20
; ---------------------------------------------------------------------------

loc_71051CC0:				; CODE XREF: sub_71051C51+49j
		mov	eax, [ebp-5Ch]
		mov	dword ptr [ebp-48h], 0FFFFFFFFh
		mov	[esp+0], eax
		call	sub_71051E20
sub_71051C51	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71051CE0	proc near		; CODE XREF: sub_71022017+27Ep
					; sub_71022017+31Ep ...

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		lea	eax, [ebp+var_8]
		sub	esp, 50h
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053CE0
		mov	[ebp+var_18], offset sub_71051D97
		mov	[ebp+var_14], esp
		call	_Unwind_SjLj_Register
		call	sub_71052330
		mov	edx, [ebp+arg_0]
		sub	edx, 30h
		mov	ecx, [edx+30h]
		mov	ebx, [edx+34h]
		mov	esi, [eax]
		add	ecx, 0BCD4D500h
		adc	ebx, 0B8B1AABCh
		cmp	ebx, 0
		ja	short loc_71051D3A
		cmp	ecx, 1
		jbe	short loc_71051D60

loc_71051D3A:				; CODE XREF: sub_71051CE0+53j
		test	esi, esi
		jnz	short loc_71051D8B
		mov	[eax], edx
		mov	[ebp+var_40], 0

loc_71051D47:				; CODE XREF: sub_71051CE0+A0j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_40]
		add	esp, 50h
		pop	ebx
		pop	esi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71051D60:				; CODE XREF: sub_71051CE0+58j
		mov	ecx, [edx+14h]
		test	ecx, ecx
		lea	ebx, [ecx+1]
		js	short loc_71051D82

loc_71051D6A:				; CODE XREF: sub_71051CE0+A9j
		mov	[edx+14h], ebx
		sub	dword ptr [eax+4], 1
		cmp	esi, edx
		jz	short loc_71051D7A
		mov	[edx+10h], esi
		mov	[eax], edx

loc_71051D7A:				; CODE XREF: sub_71051CE0+93j
		mov	edx, [edx+28h]
		mov	[ebp+var_40], edx
		jmp	short loc_71051D47
; ---------------------------------------------------------------------------

loc_71051D82:				; CODE XREF: sub_71051CE0+88j
		mov	ebx, 1
		sub	ebx, ecx
		jmp	short loc_71051D6A
; ---------------------------------------------------------------------------

loc_71051D8B:				; CODE XREF: sub_71051CE0+5Cj
		mov	[ebp+var_38], 1
		call	sub_710517A0
sub_71051CE0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71051D97	proc near		; DATA XREF: sub_71051CE0+22o
		add	ebp, 8
		cmp	dword ptr [ebp-30h], 0FFFFFFFFh
		mov	eax, [ebp-34h]
		jz	short loc_71051DB2
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71051DB2:				; CODE XREF: sub_71051D97+Aj
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	sub_71051E20
sub_71051D97	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71051DD0	proc near		; CODE XREF: sub_710525B0+236p

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		test	ebx, ebx
		jz	short loc_71051E10
		mov	[esp+1Ch+var_1C], ebx
		call	sub_71051CE0
		mov	eax, [ebx]
		mov	edx, [ebx+4]
		add	eax, 0BCD4D500h
		adc	edx, 0B8B1AABCh
		cmp	edx, 0
		ja	short loc_71051E10
		cmp	eax, 1
		ja	short loc_71051E10
		mov	eax, [ebx-24h]
		mov	[esp+1Ch+var_1C], eax
		call	sub_7103B980
; ---------------------------------------------------------------------------
		align 10h

loc_71051E10:				; CODE XREF: sub_71051DD0+Aj
					; sub_71051DD0+27j ...
		call	sub_710517A0
sub_71051DD0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn bp-based	frame

sub_71051E20	proc near		; CODE XREF: sub_7104FB88+25p
					; sub_710517F0+CAp ...

var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_18		= dword	ptr -18h
var_8		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 88h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_3C], eax
		lea	eax, [ebp+var_5C]
		mov	[esp], eax
		mov	[ebp+var_44], offset sub_710525B0
		mov	[ebp+var_40], offset dword_71053CAC
		mov	[ebp+var_38], offset sub_71051E8D
		mov	[ebp+var_34], esp
		call	_Unwind_SjLj_Register
		mov	edx, [ebp+arg_0]
		mov	[esp], edx
		call	sub_71051CE0
		mov	eax, [ebp+arg_0]
		sub	eax, 30h
		mov	edx, [eax+18h]
		mov	ecx, [eax+20h]
		mov	[ebp+var_60], edx
		mov	edx, [eax+24h]
		mov	[ebp+var_68], ecx
		mov	ecx, [eax+0Ch]
		mov	eax, [eax+8]
		mov	[ebp+var_58], 2
		mov	[ebp+var_18], edx
		mov	[ebp+var_64], ecx
		mov	[esp], eax
		call	sub_7103BA10
sub_71051E20	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71051E8D	proc near		; DATA XREF: sub_71051E20+23o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		add	ebp, 8
		mov	eax, [ebp-54h]
		cmp	dword ptr [ebp-58h], 1
		mov	[ebp-70h], eax
		jz	short loc_71051EC6
		mov	dword ptr [ebp-58h], 0
		call	sub_71051FB0
		mov	dword ptr [ebp-58h], 0
		call	sub_71051FB0
		mov	edx, [ebp-70h]
		mov	dword ptr [ebp-58h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71051EC6:				; CODE XREF: sub_71051E8D+Dj
		mov	eax, [ebp-70h]
		mov	[esp+0], eax
		call	sub_71051CE0
		call	sub_71052410
		mov	eax, [eax]
		test	byte ptr [eax+30h], 1
		lea	edx, [eax+30h]
		jz	short loc_71051F1B
		mov	edx, [edx-30h]
		mov	[ebp-6Ch], edx

loc_71051EE7:				; CODE XREF: sub_71051E8D+94j
		mov	edx, [ebp-68h]
		lea	ecx, [ebp-20h]
		xor	eax, eax
		mov	dword ptr [ebp-58h], 1
		call	sub_7103B390
		mov	ecx, [ebp-6Ch]
		lea	eax, [ebp-20h]
		mov	edx, [ecx-50h]
		mov	ecx, [ebp-60h]
		mov	[esp+0], ecx
		mov	ecx, [ebp-6Ch]
		call	sub_7103B450
		test	al, al
		jz	short loc_71051F23
		call	sub_710524F0
; ---------------------------------------------------------------------------

loc_71051F1B:				; CODE XREF: sub_71051E8D+52j
		add	eax, 50h
		mov	[ebp-6Ch], eax
		jmp	short loc_71051EE7
; ---------------------------------------------------------------------------

loc_71051F23:				; CODE XREF: sub_71051E8D+87j
		mov	edx, [ebp-60h]
		lea	eax, [ebp-20h]
		xor	ecx, ecx
		mov	dword ptr [ebp-58h], 1
		mov	[esp+0], edx
		mov	edx, offset off_7105CE48
		call	sub_7103B450
		test	al, al
		jz	short loc_71051F6D
		mov	dword ptr [esp+0], 4
		call	sub_71051A80
		mov	dword ptr [eax], offset	off_7105DE38
		mov	[esp+arg_4], offset sub_71051630
		mov	[esp+arg_0], offset off_7105CE48
		mov	[esp+0], eax
		call	sub_71052550
; ---------------------------------------------------------------------------

loc_71051F6D:				; CODE XREF: sub_71051E8D+B4j
		mov	ecx, [ebp-64h]
		mov	dword ptr [ebp-58h], 1
		mov	[esp+0], ecx
		call	sub_7103B980
sub_71051E8D	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71051F80	proc near		; CODE XREF: sub_7104FC60+7Ep
		sub	esp, 0Ch
		call	sub_71052330
		mov	edx, [eax]
		xor	eax, eax
		test	edx, edx
		jz	short loc_71051F98
		test	byte ptr [edx+30h], 1
		jnz	short loc_71051FA0

loc_71051F96:				; CODE XREF: sub_71051F80+25j
		mov	eax, [edx]

loc_71051F98:				; CODE XREF: sub_71051F80+Ej
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71051FA0:				; CODE XREF: sub_71051F80+14j
		mov	edx, [edx]
		sub	edx, 50h
		jmp	short loc_71051F96
sub_71051F80	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_71051FB0	proc near		; CODE XREF: sub_71022017+28Dp
					; sub_71022017+32Dp ...

var_5C		= dword	ptr -5Ch
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h

		push	ebx
		sub	esp, 18h
		call	sub_71052410
		mov	edx, [eax]
		test	edx, edx
		jz	short loc_71051FE7
		mov	ecx, [edx+30h]
		mov	ebx, [edx+34h]
		add	ecx, 0BCD4D500h
		adc	ebx, 0B8B1AABCh
		cmp	ebx, 0
		jbe	short loc_71051FF0

loc_71051FD6:				; CODE XREF: sub_71051FB0+43j
		mov	dword ptr [eax], 0
		add	edx, 30h
		mov	[esp+1Ch+var_1C], edx
		call	_Unwind_DeleteException

loc_71051FE7:				; CODE XREF: sub_71051FB0+Dj
					; sub_71051FB0+80j
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71051FF0:				; CODE XREF: sub_71051FB0+24j
		cmp	ecx, 1
		ja	short loc_71051FD6
		mov	ecx, [edx+14h]
		test	ecx, ecx
		js	short loc_71052011
		sub	ecx, 1
		nop
		jz	short loc_71052020
		cmp	ecx, 0FFFFFFFFh
		jz	short loc_71052032

loc_71052007:				; CODE XREF: sub_71051FB0+64j
					; sub_71051FB0+6Bj
		mov	[edx+14h], ecx
		add	esp, 18h
		pop	ebx
		xchg	ax, ax
		retn
; ---------------------------------------------------------------------------

loc_71052011:				; CODE XREF: sub_71051FB0+4Aj
		add	ecx, 1
		jnz	short loc_71052007
		mov	ebx, [edx+10h]
		mov	[eax], ebx
		jmp	short loc_71052007
; ---------------------------------------------------------------------------
		align 10h

loc_71052020:				; CODE XREF: sub_71051FB0+50j
		mov	ecx, [edx+10h]
		add	edx, 30h
		mov	[eax], ecx
		mov	[esp+1Ch+var_1C], edx
		call	_Unwind_DeleteException
		jmp	short loc_71051FE7
; ---------------------------------------------------------------------------

loc_71052032:				; CODE XREF: sub_71051FB0+55j
		call	sub_710517A0
; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	dword ptr [ebp-24h], offset sub_710525B0
		mov	dword ptr [ebp-20h], offset dword_71053D30
		mov	dword ptr [ebp-18h], offset loc_71052179
		mov	[ebp-14h], esp
		mov	[esp+5Ch+var_5C], eax
		call	_Unwind_SjLj_Register
		cmp	dword ptr [ebp+8], offset dword_71058060
		jb	short loc_71052081
		cmp	dword ptr [ebp+8], offset dword_71058A60
		jb	short loc_710520A0

loc_71052081:				; CODE XREF: sub_71051FB0+C6j
		mov	eax, [ebp+8]
		mov	[esp+20h+var_20], eax ;	void *
		call	free

loc_7105208C:				; CODE XREF: sub_71051FB0+13Ej
					; sub_71051FB0+155j
		lea	eax, [ebp-3Ch]
		mov	[esp+20h+var_20], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_710520A0:				; CODE XREF: sub_71051FB0+CFj
		mov	eax, [ebp+8]
		mov	ecx, 0CCCCCCCDh
		sub	eax, offset dword_71058060
		mul	ecx
		mov	eax, dword_7105403C
		shr	edx, 6
		test	eax, eax
		mov	[ebp-40h], edx
		jz	short loc_71052131
		mov	[esp+20h+var_20], offset dword_71058A70
		mov	dword ptr [ebp-38h], 2
		call	sub_7103AD40
		test	eax, eax
		jnz	short loc_7105214F
		movzx	ecx, byte ptr [ebp-40h]
		mov	eax, 0FFFFFFFEh
		rol	eax, cl
		mov	ecx, dword_7105403C
		and	dword_7105404C,	eax
		test	ecx, ecx
		jz	short loc_7105208C
		mov	[esp+20h+var_20], offset dword_71058A70
		mov	dword ptr [ebp-38h], 1
		call	sub_7103AC20
		test	eax, eax
		jz	short loc_7105208C
		mov	[esp+20h+var_20], 4
		call	sub_71051A80
		mov	dword ptr [eax], offset	off_7105DE20
		mov	[esp+20h+var_18], offset sub_7104FC40
		mov	[esp+20h+var_1C], offset off_7105CE3C
		mov	[esp+20h+var_20], eax
		call	sub_71052550
; ---------------------------------------------------------------------------

loc_71052131:				; CODE XREF: sub_71051FB0+10Cj
		movzx	ecx, byte ptr [ebp-40h]
		mov	eax, 0FFFFFFFEh
		rol	eax, cl
		and	dword_7105404C,	eax
		lea	eax, [ebp-3Ch]
		mov	[esp+20h+var_20], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_7105214F:				; CODE XREF: sub_71051FB0+123j
		mov	[esp+20h+var_20], 4
		call	sub_71051A80
		mov	dword ptr [eax], offset	off_7105DE08
		mov	[esp+20h+var_18], offset sub_7104FBF0
		mov	[esp+20h+var_1C], offset off_7105CE30
		mov	[esp+20h+var_20], eax
		call	sub_71052550
; ---------------------------------------------------------------------------

loc_71052179:				; DATA XREF: sub_71051FB0+ADo
		add	ebp, 8
		mov	edx, [ebp-30h]
		mov	eax, [ebp-34h]
		cmp	edx, 0FFFFFFFFh
		jz	short loc_71052196
		mov	[esp+1Ch+var_1C], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71052196:				; CODE XREF: sub_71051FB0+1D5j
		mov	[esp+1Ch+var_1C], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	sub_71051E20
; ---------------------------------------------------------------------------
		align 10h

loc_710521B0:				; CODE XREF: sub_7103B550+2Cj
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp-8]
		mov	[ebp-1Ch], eax
		lea	eax, [ebp-3Ch]
		mov	dword ptr [ebp-24h], offset sub_710525B0
		mov	dword ptr [ebp-20h], offset dword_71053D40
		mov	dword ptr [ebp-18h], offset sub_710522E8
		mov	[ebp-14h], esp
		mov	[esp+5Ch+var_5C], eax
		call	_Unwind_SjLj_Register
		cmp	dword ptr [ebp+8], offset dword_71054060
		jb	short loc_710521F1
		cmp	dword ptr [ebp+8], offset dword_71058060
		jb	short loc_71052210

loc_710521F1:				; CODE XREF: sub_71051FB0+236j
		mov	eax, [ebp+8]
		sub	eax, 60h
		mov	[esp+20h+var_20], eax ;	void *
		call	free

loc_710521FF:				; CODE XREF: sub_71051FB0+2A9j
					; sub_71051FB0+2C0j
		lea	eax, [ebp-3Ch]
		mov	[esp+20h+var_20], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71052210:				; CODE XREF: sub_71051FB0+23Fj
		mov	ecx, [ebp+8]
		sub	ecx, offset dword_71054060
		shr	ecx, 9
		mov	[ebp-40h], ecx
		mov	ecx, dword_7105403C
		test	ecx, ecx
		jz	short loc_710522A0
		mov	[esp+20h+var_20], offset dword_71058A70
		mov	dword ptr [ebp-38h], 2
		call	sub_7103AD40
		test	eax, eax
		jnz	short loc_710522BE
		movzx	ecx, byte ptr [ebp-40h]
		mov	eax, 0FFFFFFFEh
		mov	edx, dword_7105403C
		rol	eax, cl
		and	dword_71054048,	eax
		test	edx, edx
		jz	short loc_710521FF
		mov	[esp+20h+var_20], offset dword_71058A70
		mov	dword ptr [ebp-38h], 1
		call	sub_7103AC20
		test	eax, eax
		jz	short loc_710521FF
		mov	[esp+20h+var_20], 4
		call	sub_71051A80
		mov	dword ptr [eax], offset	off_7105DE20
		mov	[esp+20h+var_18], offset sub_7104FC40
		mov	[esp+20h+var_1C], offset off_7105CE3C
		mov	[esp+20h+var_20], eax
		call	sub_71052550
; ---------------------------------------------------------------------------
		align 10h

loc_710522A0:				; CODE XREF: sub_71051FB0+277j
		movzx	ecx, byte ptr [ebp-40h]
		mov	eax, 0FFFFFFFEh
		rol	eax, cl
		and	dword_71054048,	eax
		lea	eax, [ebp-3Ch]
		mov	[esp+20h+var_20], eax
		call	_Unwind_SjLj_Unregister
		leave
		retn
; ---------------------------------------------------------------------------

loc_710522BE:				; CODE XREF: sub_71051FB0+28Ej
		mov	[esp+20h+var_20], 4
		call	sub_71051A80
		mov	dword ptr [eax], offset	off_7105DE08
		mov	[esp+20h+var_18], offset sub_7104FBF0
		mov	[esp+20h+var_1C], offset off_7105CE30
		mov	[esp+20h+var_20], eax
		call	sub_71052550
sub_71051FB0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710522E8	proc near		; DATA XREF: sub_71051FB0+21Do
		add	ebp, 8
		mov	edx, [ebp-30h]
		mov	eax, [ebp-34h]
		cmp	edx, 0FFFFFFFFh
		jz	short loc_71052305
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71052305:				; CODE XREF: sub_710522E8+Cj
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	sub_71051E20
sub_710522E8	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		mov	eax, [eax-8]
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71052330	proc near		; CODE XREF: .text:71051783p
					; sub_710517F0:loc_71051903p ...

var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053D10
		mov	[ebp+var_18], offset sub_710523E5
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		cmp	byte_71058A64, 0
		mov	[ebp+var_44], offset dword_71054040
		jnz	short loc_71052380

loc_7105236F:				; CODE XREF: sub_71052330+69j
					; sub_71052330+B3j
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_44]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71052380:				; CODE XREF: sub_71052330+3Dj
		mov	eax, dword_71058A60
		mov	[ebp+var_38], 1
		mov	[esp], eax	; DWORD
		call	sub_7103AE70
		test	eax, eax
		mov	[ebp+var_44], eax
		jnz	short loc_7105236F
		mov	dword ptr [esp], 8 ; size_t
		call	malloc
		test	eax, eax
		mov	[ebp+var_40], eax
		jz	short loc_710523C3
		mov	[esp+4], eax	; LPVOID
		mov	eax, dword_71058A60
		mov	[esp], eax	; DWORD
		call	sub_7103AE40
		test	eax, eax
		jz	short loc_710523D0

loc_710523C3:				; CODE XREF: sub_71052330+7Cj
		mov	[ebp+var_38], 1
		call	sub_710517A0
; ---------------------------------------------------------------------------
		align 10h

loc_710523D0:				; CODE XREF: sub_71052330+91j
		mov	eax, [ebp+var_40]
		mov	[ebp+var_44], eax
		mov	dword ptr [eax], 0
		mov	dword ptr [eax+4], 0
		jmp	short loc_7105236F
sub_71052330	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710523E5	proc near		; DATA XREF: sub_71052330+1Do
		add	ebp, 8
		cmp	dword ptr [ebp-30h], 0FFFFFFFFh
		mov	eax, [ebp-34h]
		jz	short loc_71052400
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71052400:				; CODE XREF: sub_710523E5+Aj
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	sub_71051E20
sub_710523E5	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_71052410	proc near		; CODE XREF: sub_71051E8D+44p
					; sub_71051FB0+4p

var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= byte ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		lea	eax, [ebp+var_8]
		mov	[ebp+var_1C], eax
		lea	eax, [ebp+var_3C]
		mov	[ebp+var_24], offset sub_710525B0
		mov	[ebp+var_20], offset dword_71053D00
		mov	[ebp+var_18], offset sub_71052487
		mov	[ebp+var_14], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		cmp	byte_71058A64, 0
		mov	[ebp+var_40], offset dword_71054040
		jnz	short loc_71052460
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_40]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71052460:				; CODE XREF: sub_71052410+3Dj
		mov	eax, dword_71058A60
		mov	[esp], eax	; DWORD
		mov	[ebp+var_38], 1
		call	sub_7103AE70
		mov	[ebp+var_40], eax
		lea	eax, [ebp+var_3C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_40]
		leave
		retn
sub_71052410	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71052487	proc near		; DATA XREF: sub_71052410+1Do
		add	ebp, 8
		cmp	dword ptr [ebp-30h], 0FFFFFFFFh
		mov	eax, [ebp-34h]
		jz	short loc_710524A2
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_710524A2:				; CODE XREF: sub_71052487+Aj
		mov	[esp+0], eax
		mov	dword ptr [ebp-38h], 0FFFFFFFFh
		call	sub_71051E20
sub_71052487	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710524C0	proc near		; DATA XREF: .rdata:7105D990o
					; .rdata:7105D994o ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h

		sub	esp, 1Ch
		mov	[esp+1Ch+var_14], 1Bh ;	unsigned int
		mov	[esp+1Ch+var_18], offset aPureVirtualMet ; "pure virtual method	called\n"
		mov	[esp+1Ch+var_1C], 2 ; int
		call	_write
		call	sub_710517A0
sub_710524C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_710524F0	proc near		; CODE XREF: sub_71044BC4+4Ep
					; sub_71044BC4+9Fp ...

var_1C		= dword	ptr -1Ch

		push	ebx
		sub	esp, 18h
		call	sub_71052330
		mov	ebx, [eax]
		add	dword ptr [eax+4], 1
		test	ebx, ebx
		jz	short loc_71052533
		mov	edx, [ebx+30h]
		mov	ecx, [ebx+34h]
		add	edx, 0BCD4D500h
		adc	ecx, 0B8B1AABCh
		cmp	ecx, 0
		jbe	short loc_71052538

loc_7105251A:				; CODE XREF: sub_710524F0+4Bj
		mov	dword ptr [eax], 0

loc_71052520:				; CODE XREF: sub_710524F0+50j
		add	ebx, 30h
		mov	[esp+1Ch+var_1C], ebx
		call	_Unwind_SjLj_Resume_or_Rethrow
; ---------------------------------------------------------------------------
		mov	[esp+1Ch+var_1C], ebx
		call	sub_71051CE0

loc_71052533:				; CODE XREF: sub_710524F0+11j
		call	sub_710517A0
; ---------------------------------------------------------------------------

loc_71052538:				; CODE XREF: sub_710524F0+28j
		cmp	edx, 1
		ja	short loc_7105251A
		neg	dword ptr [ebx+14h]
		jmp	short loc_71052520
sub_710524F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71052550	proc near		; CODE XREF: sub_7104FB00+83p
					; sub_710517F0+A0p ...

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	edx, [esp+1Ch+arg_4]
		lea	eax, [ebx-60h]
		mov	[eax+10h], edx
		mov	edx, [esp+1Ch+arg_8]
		mov	dword ptr [ebx-60h], 1
		sub	ebx, 20h
		mov	dword ptr [eax+40h], 432B2B00h
		mov	dword ptr [eax+44h], 474E5543h
		mov	[eax+14h], edx
		mov	edx, off_71058A6C
		mov	dword ptr [eax+48h], offset sub_7103B550
		mov	[eax+18h], edx
		mov	edx, off_71058A68
		mov	[eax+1Ch], edx
		mov	[esp+1Ch+var_1C], ebx
		call	_Unwind_SjLj_RaiseException
		mov	[esp+1Ch+var_1C], ebx
		call	sub_71051CE0
		call	sub_710517A0
sub_71052550	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_710525B0	proc near		; DATA XREF: sub_710015A0+15o
					; .text:71001F7Fo ...

var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_AD		= byte ptr -0ADh
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_99		= byte ptr -99h
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_38		= byte ptr -38h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= byte ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= byte ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 0CCh
		mov	eax, [ebp+arg_8]
		mov	edx, [ebp+arg_C]
		mov	[ebp+var_54], offset sub_710525B0
		mov	[ebp+var_50], offset dword_71053CBC
		mov	[ebp+var_98], eax
		lea	eax, [ebp+var_6C]
		mov	[ebp+var_94], edx
		lea	edx, [ebp+var_18]
		mov	[ebp+var_4C], edx
		mov	[ebp+var_48], offset sub_71052B43
		mov	[ebp+var_44], esp
		mov	[esp], eax
		call	_Unwind_SjLj_Register
		cmp	[ebp+arg_0], 1
		mov	[ebp+var_78], 3
		jz	short loc_71052620

loc_71052604:				; CODE XREF: sub_710525B0+1C4j
					; sub_710525B0+257j ...
		lea	eax, [ebp+var_6C]
		mov	[esp], eax
		call	_Unwind_SjLj_Unregister
		mov	eax, [ebp+var_78]
		add	esp, 0CCh
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_71052620:				; CODE XREF: sub_710525B0+52j
		mov	eax, [ebp+arg_10]
		mov	edx, [ebp+var_94]
		mov	[ebp+var_1C], 0
		mov	[ebp+var_20], 0
		sub	eax, 30h
		mov	[ebp+var_A4], eax
		mov	eax, [ebp+var_98]
		mov	[ebp+var_99], 1
		add	eax, 0BCD4D500h
		adc	edx, 0B8B1AABCh
		cmp	edx, 0
		jbe	loc_71052780
		cmp	[ebp+arg_4], 6
		jz	loc_7105279A

loc_7105266B:				; CODE XREF: sub_710525B0+1E4j
					; sub_710525B0+1F1j
		mov	eax, [ebp+arg_14]
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	_Unwind_GetLanguageSpecificData
		test	eax, eax
		mov	[ebp+var_A0], eax
		jz	loc_710528CE
		mov	edx, eax
		mov	eax, [ebp+arg_14]
		lea	ecx, [ebp+var_38]
		call	sub_7103B390
		mov	edx, [ebp+arg_14]
		mov	[ebp+var_B4], eax
		movzx	eax, [ebp+var_24]
		call	sub_7103B4D0
		mov	edx, [ebp+arg_14]
		mov	[esp], edx
		mov	[ebp+var_30], eax
		lea	eax, [ebp+var_20]
		mov	[esp+4], eax
		call	_Unwind_GetIPInfo
		cmp	[ebp+var_20], 1
		sbb	eax, 0
		cmp	eax, 0
		mov	[ebp+var_74], eax
		jl	loc_710528CE
		jnz	loc_71052842
		mov	[ebp+var_7C], 0
		mov	eax, 1
		mov	[ebp+var_AC], 0
		mov	[ebp+var_80], 0

loc_710526F5:				; CODE XREF: sub_710525B0+44Dj
					; sub_710525B0+537j
		test	byte ptr [ebp+arg_4], 1
		jnz	loc_710527F0

loc_710526FF:				; CODE XREF: sub_710525B0+32Fj
		test	byte ptr [ebp+arg_4], 8
		jz	loc_71052A55

loc_71052709:				; CODE XREF: sub_710525B0+4ACj
		cmp	eax, 1
		jz	loc_71052B2B
		mov	edx, [ebp+var_7C]
		test	edx, edx
		js	loc_71052B37

loc_7105271D:				; CODE XREF: sub_710525B0+4C0j
					; sub_710525B0+4F3j
		mov	eax, [ebp+arg_10]
		mov	edx, [ebp+arg_14]
		mov	dword ptr [esp+4], 0
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp+8], eax
		mov	[esp], edx
		call	_Unwind_SetGR
		mov	eax, [ebp+var_7C]
		mov	edx, [ebp+arg_14]
		mov	dword ptr [esp+4], 1
		mov	[esp+8], eax
		mov	[esp], edx
		call	_Unwind_SetGR
		mov	eax, [ebp+var_AC]
		mov	edx, [ebp+arg_14]
		mov	[esp+4], eax
		mov	[esp], edx
		call	_Unwind_SetIP
		mov	[ebp+var_78], 7
		jmp	loc_71052604
; ---------------------------------------------------------------------------
		align 10h

loc_71052780:				; CODE XREF: sub_710525B0+ABj
		cmp	eax, 2
		sbb	eax, eax
		not	eax
		and	eax, 1
		cmp	[ebp+arg_4], 6
		mov	[ebp+var_99], al
		jnz	loc_7105266B

loc_7105279A:				; CODE XREF: sub_710525B0+B5j
		cmp	[ebp+var_99], 0
		jnz	loc_7105266B
		mov	edx, [ebp+var_A4]
		mov	eax, [ebp+var_A4]
		mov	edx, [edx+18h]
		mov	eax, [eax+20h]
		mov	[ebp+var_7C], edx
		mov	edx, [ebp+var_A4]
		mov	[ebp+var_A0], eax
		mov	edx, [edx+24h]
		test	edx, edx
		mov	[ebp+var_AC], edx
		jnz	loc_710528DA

loc_710527D9:				; CODE XREF: sub_710525B0+4B5j
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		call	sub_71051DD0
; ---------------------------------------------------------------------------
		align 10h

loc_710527F0:				; CODE XREF: sub_710525B0+149j
		cmp	eax, 2
		jz	loc_710528CE
		cmp	[ebp+var_99], 0
		mov	[ebp+var_78], 6
		jnz	loc_71052604
		mov	eax, [ebp+var_A4]
		mov	edx, [ebp+var_7C]
		mov	[eax+18h], edx
		mov	edx, [ebp+var_80]
		mov	[eax+1Ch], edx
		mov	edx, [ebp+var_A0]
		mov	[eax+20h], edx
		mov	eax, [ebp+var_1C]
		mov	edx, [ebp+var_A4]
		mov	[edx+28h], eax
		mov	eax, [ebp+var_AC]
		mov	[edx+24h], eax
		jmp	loc_71052604
; ---------------------------------------------------------------------------

loc_71052842:				; CODE XREF: sub_710525B0+122j
		mov	eax, [ebp+var_B4]
		xor	edi, edi
		lea	esi, [esi+0]

loc_71052850:				; CODE XREF: sub_710525B0+2EAj
		mov	[ebp+var_84], edi
		mov	ecx, edi
		mov	esi, edi
		lea	esi, [esi+0]

loc_71052860:				; CODE XREF: sub_710525B0+2C4j
		movzx	ebx, byte ptr [eax]
		add	eax, 1
		mov	edx, ebx
		and	edx, 7Fh
		shl	edx, cl
		add	ecx, 7
		or	esi, edx
		test	bl, bl
		js	short loc_71052860
		mov	[ebp+var_84], esi
		mov	ecx, edi
		mov	esi, edi

loc_71052880:				; CODE XREF: sub_710525B0+2E4j
		movzx	ebx, byte ptr [eax]
		add	eax, 1
		mov	edx, ebx
		and	edx, 7Fh
		shl	edx, cl
		add	ecx, 7
		or	esi, edx
		test	bl, bl
		js	short loc_71052880
		sub	[ebp+var_74], 1
		jnz	short loc_71052850
		mov	ebx, esi
		mov	esi, [ebp+var_84]
		mov	[ebp+var_80], 0
		add	esi, 1
		test	ebx, ebx
		mov	[ebp+var_AC], esi
		jz	short loc_710528C4
		sub	ebx, 1
		mov	eax, [ebp+var_28]
		mov	[ebp+var_80], ebx
		add	[ebp+var_80], eax

loc_710528C4:				; CODE XREF: sub_710525B0+306j
		mov	edx, [ebp+var_AC]
		test	edx, edx
		jnz	short loc_710528E4

loc_710528CE:				; CODE XREF: sub_710525B0+D5j
					; sub_710525B0+11Cj ...
		mov	[ebp+var_78], 8
		jmp	loc_71052604
; ---------------------------------------------------------------------------

loc_710528DA:				; CODE XREF: sub_710525B0+223j
		mov	eax, 3
		jmp	loc_710526FF
; ---------------------------------------------------------------------------

loc_710528E4:				; CODE XREF: sub_710525B0+31Cj
		mov	eax, [ebp+var_80]
		test	eax, eax
		jz	loc_71052ADB
		mov	edx, [ebp+arg_4]
		and	edx, 8
		mov	[ebp+var_B8], edx
		jz	loc_71052AF0
		mov	[ebp+var_A8], offset off_7105CDF4

loc_7105290B:				; CODE XREF: sub_710525B0+551j
					; sub_710525B0+56Ej
		mov	[ebp+var_AD], 0

loc_71052912:				; CODE XREF: sub_710525B0+410j
		mov	eax, [ebp+var_80]
		xor	edi, edi
		xor	ecx, ecx
		lea	esi, [esi+0]

loc_71052920:				; CODE XREF: sub_710525B0+387j
		movzx	ebx, byte ptr [eax]
		add	eax, 1
		movzx	esi, bl
		mov	edx, esi
		and	edx, 7Fh
		shl	edx, cl
		add	ecx, 7
		or	edi, edx
		test	bl, bl
		js	short loc_71052920
		cmp	ecx, 1Fh
		mov	[ebp+var_8C], eax
		ja	short loc_71052952
		and	esi, 40h
		jz	short loc_71052952
		mov	edx, 0FFFFFFFFh
		shl	edx, cl
		or	edi, edx

loc_71052952:				; CODE XREF: sub_710525B0+392j
					; sub_710525B0+397j
		mov	[ebp+var_7C], edi
		xor	ecx, ecx
		mov	[ebp+var_88], edi
		xor	edi, edi
		mov	[ebp+var_70], 0

loc_71052966:				; CODE XREF: sub_710525B0+3CDj
		movzx	ebx, byte ptr [eax]
		add	eax, 1
		movzx	esi, bl
		mov	edx, esi
		and	edx, 7Fh
		shl	edx, cl
		add	ecx, 7
		or	edi, edx
		test	bl, bl
		js	short loc_71052966
		cmp	ecx, 1Fh
		mov	[ebp+var_70], edi
		mov	edi, [ebp+var_88]
		ja	short loc_7105299C
		and	esi, 40h
		jz	short loc_7105299C
		mov	eax, 0FFFFFFFFh
		shl	eax, cl
		or	[ebp+var_70], eax

loc_7105299C:				; CODE XREF: sub_710525B0+3DBj
					; sub_710525B0+3E0j
		cmp	[ebp+var_7C], 0
		jnz	short loc_710529C5
		mov	[ebp+var_AD], 1

loc_710529A9:				; CODE XREF: sub_710525B0+434j
					; sub_710525B0+446j ...
		mov	ecx, [ebp+var_70]
		test	ecx, ecx
		jz	loc_71052ACE
		mov	edx, [ebp+var_8C]
		add	edx, [ebp+var_70]
		mov	[ebp+var_80], edx
		jmp	loc_71052912
; ---------------------------------------------------------------------------

loc_710529C5:				; CODE XREF: sub_710525B0+3F0j
		jle	short loc_71052A02
		mov	edx, edi
		lea	eax, [ebp+var_38]
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_7103B2B0
		test	eax, eax
		jz	short loc_710529F8
		mov	edi, [ebp+var_A8]
		test	edi, edi
		jz	short loc_710529A9
		mov	edx, [ebp+var_A8]
		lea	ecx, [ebp+var_1C]
		call	sub_7103B320
		test	al, al
		jz	short loc_710529A9

loc_710529F8:				; CODE XREF: sub_710525B0+42Aj
					; sub_710525B0+4A3j
		mov	eax, 3
		jmp	loc_710526F5
; ---------------------------------------------------------------------------

loc_71052A02:				; CODE XREF: sub_710525B0:loc_710529C5j
		mov	esi, [ebp+var_A8]
		test	esi, esi
		jz	short loc_71052A23
		mov	ebx, [ebp+var_B8]
		test	ebx, ebx
		jnz	short loc_71052A23
		cmp	[ebp+var_99], 0
		jz	loc_71052AA8

loc_71052A23:				; CODE XREF: sub_710525B0+45Aj
					; sub_710525B0+464j
		not	edi
		xor	ebx, ebx
		add	edi, [ebp+var_2C]
		xor	ecx, ecx
		lea	esi, [esi+0]

loc_71052A30:				; CODE XREF: sub_710525B0+494j
		movzx	edx, byte ptr [edi]
		add	edi, 1
		mov	eax, edx
		and	eax, 7Fh
		shl	eax, cl
		add	ecx, 7
		or	ebx, eax
		test	dl, dl
		js	short loc_71052A30
		test	ebx, ebx
		setz	al

loc_71052A4B:				; CODE XREF: sub_710525B0+519j
		test	al, al
		jz	loc_710529A9
		jmp	short loc_710529F8
; ---------------------------------------------------------------------------

loc_71052A55:				; CODE XREF: sub_710525B0+153j
		cmp	[ebp+var_99], 0
		jnz	loc_71052709
		cmp	eax, 1
		jz	loc_710527D9
		mov	eax, [ebp+var_7C]
		test	eax, eax
		jns	loc_7105271D
		mov	edx, [ebp+var_A0]
		lea	ecx, [ebp+var_38]
		mov	eax, [ebp+arg_14]
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_7103B390
		mov	edx, [ebp+arg_14]
		movzx	eax, [ebp+var_24]
		call	sub_7103B4D0
		mov	edx, [ebp+var_A4]
		mov	[edx+24h], eax
		jmp	loc_7105271D
; ---------------------------------------------------------------------------

loc_71052AA8:				; CODE XREF: sub_710525B0+46Dj
		mov	eax, [ebp+var_7C]
		mov	ecx, [ebp+var_1C]
		mov	edx, [ebp+var_A8]
		mov	[ebp+var_68], 0FFFFFFFFh
		mov	[esp], eax
		lea	eax, [ebp+var_38]
		call	sub_7103B450
		xor	eax, 1
		jmp	loc_71052A4B
; ---------------------------------------------------------------------------

loc_71052ACE:				; CODE XREF: sub_710525B0+3FEj
		cmp	[ebp+var_AD], 0
		jz	loc_710528CE

loc_71052ADB:				; CODE XREF: sub_710525B0+339j
		mov	[ebp+var_7C], 0
		mov	eax, 2
		jmp	loc_710526F5
; ---------------------------------------------------------------------------
		align 10h

loc_71052AF0:				; CODE XREF: sub_710525B0+34Bj
		cmp	[ebp+var_99], 0
		mov	[ebp+var_A8], offset off_7105CE08
		jnz	loc_7105290B
		mov	eax, [ebp+arg_10]
		test	byte ptr [eax],	1
		jz	short loc_71052B23
		mov	eax, [eax-30h]

loc_71052B12:				; CODE XREF: sub_710525B0+579j
		mov	[ebp+var_1C], eax
		mov	eax, [eax-50h]
		mov	[ebp+var_A8], eax
		jmp	loc_7105290B
; ---------------------------------------------------------------------------

loc_71052B23:				; CODE XREF: sub_710525B0+55Dj
		mov	eax, [ebp+arg_10]
		add	eax, 20h
		jmp	short loc_71052B12
; ---------------------------------------------------------------------------

loc_71052B2B:				; CODE XREF: sub_710525B0+15Cj
		mov	[ebp+var_68], 0FFFFFFFFh
		call	sub_710517A0
; ---------------------------------------------------------------------------

loc_71052B37:				; CODE XREF: sub_710525B0+167j
		mov	[ebp+var_68], 2
		call	sub_71051740
sub_710525B0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_71052B43	proc near		; DATA XREF: sub_710525B0+35o
		add	ebp, 18h
		mov	eax, [ebp-64h]
		cmp	dword ptr [ebp-68h], 1
		mov	[ebp-0BCh], eax
		jz	short loc_71052B76
		mov	dword ptr [ebp-68h], 0
		call	sub_71051FB0
		mov	edx, [ebp-0BCh]
		mov	dword ptr [ebp-68h], 0FFFFFFFFh
		mov	[esp+0], edx
		call	_Unwind_SjLj_Resume
; ---------------------------------------------------------------------------

loc_71052B76:				; CODE XREF: sub_71052B43+10j
		mov	edx, [ebp-0BCh]
		mov	[esp+0], edx
		call	sub_71051CE0
		mov	dword ptr [ebp-68h], 1
		call	sub_710517A0
sub_71052B43	endp


; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_71052B90()
sub_71052B90	proc near		; DATA XREF: sub_7103B230:loc_7103B260o

var_1C		= dword	ptr -1Ch

		sub	esp, 1Ch
		cmp	byte_71058A64, 0
		jz	short loc_71052BA9
		mov	eax, dword_71058A60
		mov	[esp+1Ch+var_1C], eax ;	DWORD
		call	sub_7103AEB0

loc_71052BA9:				; CODE XREF: sub_71052B90+Aj
		mov	byte_71058A64, 0
		add	esp, 1Ch
		retn
sub_71052B90	endp

; ---------------------------------------------------------------------------
		align 10h
dword_71052BC0	dd 0FFFFFFFFh		; DATA XREF: sub_7103A2C0-5Br
					; sub_7103A2C0-4Co ...
		dd offset sub_7102DAF0
		dd offset sub_7102FE80
		dd offset sub_71035550
		dd offset sub_7103B230
		dd offset sub_7103B210
		dd offset sub_7103B1F0
		align 10h
		dd 0FFFFFFFFh
dword_71052BE4	dd 0			; DATA XREF: .data:off_71054038o
dword_71052BE8	dd 201FFFFh		; DATA XREF: sub_710477E0+19o
		db 2 dup(0)
word_71052BEE	dw 0FFFFh		; DATA XREF: sub_71047890+19o
		dd 201h
dword_71052BF4	dd 201FFFFh		; DATA XREF: sub_7104F610+19o
		db 2 dup(0)
word_71052BFA	dw 0FFFFh		; DATA XREF: sub_7104F6C0+19o
		dd 201h
dword_71052C00	dd 201FFFFh		; DATA XREF: sub_7104F7E0+19o
		db 2 dup(0)
word_71052C06	dw 0FFFFh		; DATA XREF: sub_7104F890+19o
		dd 201h
dword_71052C0C	dd 801FFFFh, 10000h, 30002h ; DATA XREF: sub_710015A0+1Co
dword_71052C18	dd 10D00FFh, 1000004h, 101h ; DATA XREF: sub_7104EA30+1Co
		dd offset off_7105CE54
dword_71052C28	dd 10D00FFh, 1000004h, 101h ; DATA XREF: sub_71048E90+19o
		dd offset off_7105CE54
dword_71052C38	dd 201FFFFh		; DATA XREF: .text:71001F86o
		db 2 dup(0)
word_71052C3E	dw 0FFFFh		; DATA XREF: sub_71002050+19o
		dd 201h
dword_71052C44	dd 801FFFFh, 10000h, 30002h ; DATA XREF: sub_71002250+1Co
dword_71052C50	dd 401FFFFh, 10000h	; DATA XREF: sub_71002690+19o
dword_71052C58	dd 401FFFFh, 10000h	; DATA XREF: sub_710028E0+19o
dword_71052C60	dd 401FFFFh, 10000h	; DATA XREF: sub_71002B20+19o
dword_71052C68	dd 201FFFFh		; DATA XREF: sub_71002E20+19o
		db 2 dup(0)
word_71052C6E	dw 0FFFFh		; DATA XREF: .text:71002EE9o
		dd 201h
dword_71052C74	dd 201FFFFh		; DATA XREF: .text:71002F99o
		db 2 dup(0)
word_71052C7A	dw 0FFFFh		; DATA XREF: .text:71003049o
		dd 201h
dword_71052C80	dd 401FFFFh, 10000h	; DATA XREF: sub_710032E0+1Ao
dword_71052C88	dd 401FFFFh, 10000h	; DATA XREF: .text:7100346Ao
dword_71052C90	dd 401FFFFh, 10000h	; DATA XREF: sub_710035C0+19o
dword_71052C98	dd 201FFFFh		; DATA XREF: sub_71003800+16o
		db 2 dup(0)
word_71052C9E	dw 0FFFFh		; DATA XREF: .text:710038F6o
		dd 201h
dword_71052CA4	dd 201FFFFh, 0		; DATA XREF: sub_710039C0+16o
dword_71052CAC	dd 10D00FFh, 1000004h, 101h ; DATA XREF: sub_71049320+1Co
		dd offset off_7105CE54
dword_71052CBC	dd 201FFFFh		; DATA XREF: sub_7104F940+19o
		db 2 dup(0)
word_71052CC2	dw 0FFFFh		; DATA XREF: sub_7104FA00+19o
		dd 201h
dword_71052CC8	dd 201FFFFh		; DATA XREF: sub_710491E0+1Ao
		db 2 dup(0)
word_71052CCE	dw 0FFFFh		; DATA XREF: .text:71003AB9o
		dd 401h
		db 1, 0
word_71052CD6	dw 0FFFFh		; DATA XREF: sub_71003C40+19o
		dd 401h
		db 1, 0
word_71052CDE	dw 0FFFFh		; DATA XREF: sub_71003DF0+19o
		dd 401h
		db 1, 0
word_71052CE6	dw 0FFFFh		; DATA XREF: sub_7103BC70+19o
		dd 201h
dword_71052CEC	dd 201FFFFh		; DATA XREF: sub_7103BD40+19o
		db 2 dup(0)
word_71052CF2	dw 0FFFFh		; DATA XREF: sub_7103BE00+19o
		dd 201h
dword_71052CF8	dd 201FFFFh, 0		; DATA XREF: sub_7103BED0+19o
dword_71052D00	dd 11500FFh, 1030008h, 3010203h, 100h, 7Dh, 0 ;	DATA XREF: sub_71045C10+19o
dword_71052D18	dd 11100FFh, 1000004h, 103h, 7Dh, 0 ; DATA XREF: sub_71048570+1Co
dword_71052D2C	dd 601FFFFh, 10000h, 2	; DATA XREF: sub_710483A0+22o
dword_71052D38	dd 12900FFh, 103001Ch, 3030203h, 5010403h, 7030603h, 9000801h
					; DATA XREF: sub_71045E80+1Fo
		dd 0B000A00h, 0D000C01h, 101h, 7Dh, 0
dword_71052D64	dd 2601FFFFh, 10000h, 30002h, 50004h, 70006h, 90008h, 0B000Ah
					; DATA XREF: sub_71003F90+26o
		dd 0D000Ch, 0F000Eh, 110010h
		db 12h,	0
word_71052D8E	dw 0FFFFh		; DATA XREF: sub_71005990+19o
		dd 801h, 20001h
		db 3, 0
word_71052D9A	dw 0FFFFh		; DATA XREF: sub_71005BC0+1Co
		dd 0A01h, 20001h, 40003h
dword_71052DA8	dd 801FFFFh, 10000h, 30002h ; DATA XREF: sub_71005E70+1Co
dword_71052DB4	dd 0A01FFFFh, 10000h, 30002h ; DATA XREF: sub_710060B0+1Co
		db 4, 0
word_71052DC2	dw 0FFFFh		; DATA XREF: sub_71006360+1Co
		dd 0A01h, 20001h, 40003h
dword_71052DD0	dd 801FFFFh, 10000h, 30002h, 10D00FFh, 1000004h, 101h
					; DATA XREF: sub_710065F0+25o
		dd offset off_7105CE54
dword_71052DEC	dd 10D00FFh, 1000004h, 101h ; DATA XREF: sub_7104F0C0+1Co
		dd offset off_7105CE54
dword_71052DFC	dd 10D00FFh, 1000004h, 101h ; DATA XREF: sub_7104E6E0+1Co
		dd offset off_7105CE54
dword_71052E0C	dd 10D00FFh, 1000004h, 101h ; DATA XREF: sub_7104EDA0+1Co
		dd offset off_7105CE54
		dd 10D00FFh, 1000004h, 101h
		dd offset off_7105CE54
dword_71052E2C	dd 11100FFh, 1000004h, 103h, 7Dh, 0 ; DATA XREF: sub_71048C10+1Co
dword_71052E40	dd 11100FFh, 1000004h, 103h, 7Dh, 0 ; DATA XREF: sub_71048940+1Co
dword_71052E54	dd 201FFFFh		; DATA XREF: sub_710470A0+19o
		db 2 dup(0)
word_71052E5A	dw 0FFFFh		; DATA XREF: sub_71007040+19o
		dd 201h
dword_71052E60	dd 201FFFFh		; DATA XREF: sub_71007500+19o
		db 2 dup(0)
word_71052E66	dw 0FFFFh		; DATA XREF: sub_710075A0+19o
		dd 201h
dword_71052E6C	dd 201FFFFh		; DATA XREF: sub_71007640+19o
		db 2 dup(0)
word_71052E72	dw 0FFFFh		; DATA XREF: sub_71007710+1Fo
		dd 201h
dword_71052E78	dd 11100FFh, 1000004h, 103h, 7Dh, 0 ; DATA XREF: sub_7104CC30+1Bo
dword_71052E8C	dd 11D00FFh, 100000Ah, 3030203h, 1050400h, 27D0000h, 0
					; DATA XREF: sub_71047FC0+1Fo
		dd offset off_7105CE54
		dd 0
dword_71052EAC	dd 201FFFFh		; DATA XREF: sub_71008360+20o
		db 2 dup(0)
word_71052EB2	dw 0FFFFh		; DATA XREF: sub_71008500+33o
		dd 201h
dword_71052EB8	dd 601FFFFh, 10000h	; DATA XREF: sub_71009870+1Co
		db 2, 0
word_71052EC2	dw 0FFFFh		; DATA XREF: sub_710099A0+2Bo
		dd 801h, 20001h
		db 3, 0
word_71052ECE	dw 0FFFFh		; DATA XREF: sub_71009CC0+21o
		dd 201h
dword_71052ED4	dd 201FFFFh		; DATA XREF: sub_71009E10+33o
		db 2 dup(0)
word_71052EDA	dw 0FFFFh		; DATA XREF: sub_7100A6C0+32o
		dd 401h, 1
dword_71052EE4	dd 12100FFh, 1030014h, 3030201h, 5000401h, 7000600h, 9000801h
					; DATA XREF: sub_71045480+1Fo
		dd 101h, 7Dh, 0
dword_71052F08	dd 10D00FFh, 1000004h, 101h, 0 ; DATA XREF: sub_71045A40+1Co
dword_71052F18	dd 201FFFFh		; DATA XREF: sub_71041AB0+19o
		db 2 dup(0)
word_71052F1E	dw 0FFFFh		; DATA XREF: sub_7100AD80+2Bo
		dd 1201h, 20001h, 40003h, 60005h, 80007h
dword_71052F34	dd 0E01FFFFh, 10000h, 30002h, 50004h ; DATA XREF: sub_7100B130+25o
		db 6, 0
word_71052F46	dw 0FFFFh		; DATA XREF: sub_7100B430+1Eo
		dd 0A01h, 20001h, 40003h
dword_71052F54	dd 0A01FFFFh, 10000h, 30002h ; DATA XREF: sub_7100B730+1Eo
		db 4, 0
word_71052F62	dw 0FFFFh		; DATA XREF: sub_7100BA30+2Bo
		dd 1201h, 20001h, 40003h, 60005h, 80007h
dword_71052F78	dd 201FFFFh		; DATA XREF: sub_71047390+1Co
		db 2 dup(0)
word_71052F7E	dw 0FFFFh		; DATA XREF: sub_7100BDD0+1Co
		dd 601h, 20001h
dword_71052F88	dd 201FFFFh, 0FFFF0000h, 201h, 201FFFFh	; DATA XREF: sub_7100BF60+28o
		db 2 dup(0)
word_71052F9A	dw 0FFFFh		; DATA XREF: sub_7100C260+1Fo
		dd 0A01h, 20001h, 40003h
dword_71052FA8	dd 1A01FFFFh, 10000h, 30002h, 50004h, 70006h, 90008h, 0B000Ah
					; DATA XREF: sub_7100C470+2Bo
		db 0Ch,	0
word_71052FC6	dw 0FFFFh		; DATA XREF: sub_7100CAD0+1Co
		dd 1201h, 20001h, 40003h, 60005h, 80007h
dword_71052FDC	dd 201FFFFh		; DATA XREF: sub_71050CD0+16o
		db 2 dup(0)
word_71052FE2	dw 0FFFFh		; DATA XREF: sub_71050E50+19o
		dd 601h, 20001h
dword_71052FEC	dd 801FFFFh, 10000h, 30002h ; DATA XREF: sub_7100D060+1Co
dword_71052FF8	dd 201FFFFh		; DATA XREF: sub_710511B0+19o
		db 2 dup(0)
word_71052FFE	dw 0FFFFh		; DATA XREF: sub_71050FC0+19o
		dd 401h
		db 1, 0
word_71053006	dw 0FFFFh		; DATA XREF: sub_710497B0+19o
		dd 201h
dword_7105300C	dd 11100FFh, 1000006h, 1000203h, 7D0000h, 0 ; DATA XREF: sub_710498C0+1Fo
dword_71053020	dd 11100FFh, 1000006h, 1010203h, 7D0000h ; DATA	XREF: sub_71047180+22o
		dd offset off_7105CE54
dword_71053034	dd 801FFFFh, 10000h, 30002h ; DATA XREF: sub_7100D270+22o
dword_71053040	dd 201FFFFh		; DATA XREF: sub_7100D410+1Co
		db 2 dup(0)
word_71053046	dw 0FFFFh		; DATA XREF: sub_7100D500+3Ao
		dd 0C01h, 20001h, 40003h
		db 5, 0
word_71053056	dw 0FFFFh		; DATA XREF: sub_7100DE80+20o
		dd 601h, 20001h
dword_71053060	dd 201FFFFh		; DATA XREF: sub_7104CEF0+19o
		db 2 dup(0)
word_71053066	dw 0FFFFh		; DATA XREF: sub_7104D000+1Fo
		dd 201h
dword_7105306C	dd 201FFFFh		; DATA XREF: sub_71050BD0+19o
		db 2 dup(0)
word_71053072	dw 0FFFFh		; DATA XREF: sub_7100E020+2Bo
		dd 1A01h, 20001h, 40003h, 60005h, 80007h, 0A0009h, 0C000Bh
dword_71053090	dd 201FFFFh		; DATA XREF: sub_7104C810+19o
		db 2 dup(0)
word_71053096	dw 0FFFFh		; DATA XREF: sub_7104C920+1Fo
		dd 201h
dword_7105309C	dd 201FFFFh		; DATA XREF: sub_71044340+19o
		db 2 dup(0)
word_710530A2	dw 0FFFFh		; DATA XREF: sub_7100E610+1Co
		dd 0A01h, 20001h, 40003h
dword_710530B0	dd 401FFFFh, 10000h	; DATA XREF: sub_7104BA80+19o
dword_710530B8	dd 11500FFh, 1000008h, 3000200h, 103h, 7Dh, 0 ;	DATA XREF: sub_7104BC20+1Fo
dword_710530D0	dd 201FFFFh, 0		; DATA XREF: sub_7104D360+19o
dword_710530D8	dd 11100FFh, 1000006h, 1000203h, 7D0000h, 0 ; DATA XREF: sub_7104D470+1Fo
dword_710530EC	dd 1601FFFFh, 10000h, 30002h, 50004h, 70006h, 90008h
					; DATA XREF: sub_7100E900+41o
		db 0Ah,	0
word_71053106	dw 0FFFFh		; DATA XREF: sub_7100F140+2Bo
		dd 1801h, 20001h, 40003h, 60005h, 80007h, 0A0009h
		db 0Bh,	0
word_71053122	dw 0FFFFh		; DATA XREF: sub_7100F6F0+25o
		dd 1401h, 20001h, 40003h, 60005h, 80007h
		db 9, 0
word_7105313A	dw 0FFFFh		; DATA XREF: sub_71047980+19o
		dd 201h
dword_71053140	dd 201FFFFh		; DATA XREF: sub_7103C3C0+19o
		db 2 dup(0)
word_71053146	dw 0FFFFh		; DATA XREF: sub_7100FC80+2Bo
		dd 1E01h, 20001h, 40003h, 60005h, 80007h, 0A0009h, 0C000Bh
		dd 0E000Dh
dword_71053168	dd 0E01FFFFh, 10000h, 30002h, 50004h ; DATA XREF: sub_71010720+35o
		db 6, 0
word_7105317A	dw 0FFFFh		; DATA XREF: sub_71010D50+1Co
		dd 601h, 20001h
dword_71053184	dd 201FFFFh		; DATA XREF: sub_71047C90+1Fo
		db 2 dup(0)
word_7105318A	dw 0FFFFh		; DATA XREF: sub_71010F70+35o
		dd 1601h, 20001h, 40003h, 60005h, 80007h, 0A0009h
dword_710531A4	dd 2001FFFFh, 10000h, 30002h, 50004h, 70006h, 90008h, 0B000Ah
					; DATA XREF: sub_71011C90+37o
		dd 0D000Ch, 0F000Eh
dword_710531C8	dd 601FFFFh, 10000h	; DATA XREF: sub_7104C030+19o
		db 2, 0
word_710531D2	dw 0FFFFh		; DATA XREF: sub_71044770+19o
		dd 401h
		db 1, 0
word_710531DA	dw 0FFFFh		; DATA XREF: sub_7104DFE0+19o
		dd 201h
dword_710531E0	dd 201FFFFh, 0		; DATA XREF: sub_7104DB20+19o
dword_710531E8	dd 11900FFh, 100000Eh, 3000200h, 5030403h, 1000603h, 7D0000h
					; DATA XREF: sub_7104C230+1Fo
		dd 0
dword_71053204	dd 11100FFh, 1000004h, 103h, 7Dh, 0 ; DATA XREF: sub_7104D850+1Co
dword_71053218	dd 401FFFFh, 10000h	; DATA XREF: sub_710448C0+19o
dword_71053220	dd 11500FFh, 1030008h, 3000200h, 103h, 7Dh, 0 ;	DATA XREF: sub_7104E120+1Fo
dword_71053238	dd 11500FFh, 1000008h, 3000203h, 103h, 7Dh, 0 ;	DATA XREF: sub_7104DC30+1Fo
dword_71053250	dd 2E01FFFFh, 10000h, 30002h, 50004h, 70006h, 90008h, 0B000Ah
					; DATA XREF: sub_71013AD0+34o
		dd 0D000Ch, 0F000Eh, 110010h, 130012h, 150014h
		db 16h,	0
word_71053282	dw 0FFFFh		; DATA XREF: sub_71014990+19o
		dd 1401h, 20001h, 40003h, 60005h, 80007h
		db 9, 0
word_7105329A	dw 0FFFFh		; DATA XREF: .text:71014D89o
		dd 1401h, 20001h, 40003h, 60005h, 80007h
		db 9, 0
word_710532B2	dw 0FFFFh		; DATA XREF: sub_71047A90+1Ao
		dd 401h
		db 1, 0
word_710532BA	dw 0FFFFh		; DATA XREF: sub_71015150+25o
		dd 1801h, 20001h, 40003h, 60005h, 80007h, 0A0009h
		db 0Bh,	0
word_710532D6	dw 0FFFFh		; DATA XREF: sub_710159D0+28o
		dd 1601h, 20001h, 40003h, 60005h, 80007h, 0A0009h
dword_710532F0	dd 401FFFFh, 10000h	; DATA XREF: sub_71017670+37o
dword_710532F8	dd 1601FFFFh, 10000h, 30002h, 50004h, 70006h, 90008h
					; DATA XREF: .text:71017838o
		db 0Ah,	0
word_71053312	dw 0FFFFh		; DATA XREF: sub_710194B0+22o
		dd 1401h, 20001h, 40003h, 60005h, 80007h
		db 9, 0
word_7105332A	dw 0FFFFh		; DATA XREF: sub_71019980+2Bo
		dd 3801h, 20001h, 40003h, 60005h, 80007h, 0A0009h, 0C000Bh
		dd 0E000Dh, 10000Fh, 120011h, 140013h, 160015h,	180017h
		dd 1A0019h
		db 1Bh,	0
word_71053366	dw 0FFFFh		; DATA XREF: sub_7101A880+2Bo
		dd 3E01h, 20001h, 40003h, 60005h, 80007h, 0A0009h, 0C000Bh
		dd 0E000Dh, 10000Fh, 120011h, 140013h, 160015h,	180017h
		dd 1A0019h, 1C001Bh, 1E001Dh
dword_710533A8	dd 0A01FFFFh, 10000h, 30002h ; DATA XREF: sub_71044070+19o
		db 4, 0
word_710533B6	dw 0FFFFh		; DATA XREF: sub_7101BB40+32o
		dd 1201h, 20001h, 40003h, 60005h, 80007h
dword_710533CC	dd 0A01FFFFh, 10000h, 30002h, 4	; DATA XREF: sub_71049C30+19o
dword_710533DC	dd 12500FFh, 1030018h, 3030203h, 5030403h, 7000600h, 9000800h
					; DATA XREF: sub_7104B050+1Fo
		dd 0B000A00h, 103h, 7Dh, 0
dword_71053404	dd 2601FFFFh, 10000h, 30002h, 50004h, 70006h, 90008h, 0B000Ah
					; DATA XREF: sub_7101C340+26o
		dd 0D000Ch, 0F000Eh, 110010h
		db 12h,	0
word_7105342E	dw 0FFFFh		; DATA XREF: sub_71049F70+1Co
		dd 2E01h, 20001h, 40003h, 60005h, 80007h, 0A0009h, 0C000Bh
		dd 0E000Dh, 10000Fh, 120011h, 140013h, 160015h
dword_71053460	dd 1C01FFFFh, 10000h, 30002h, 50004h, 70006h, 90008h, 0B000Ah
					; DATA XREF: sub_7101D010+25o
		dd 0D000Ch
dword_71053480	dd 1601FFFFh, 10000h, 30002h, 50004h, 70006h, 90008h
					; DATA XREF: sub_7101D820+19o
		db 0Ah,	0
word_7105349A	dw 0FFFFh		; DATA XREF: sub_7101E100+2Bo
		dd 2E01h, 20001h, 40003h, 60005h, 80007h, 0A0009h, 0C000Bh
		dd 0E000Dh, 10000Fh, 120011h, 140013h, 160015h
dword_710534CC	dd 1401FFFFh, 10000h, 30002h, 50004h, 70006h, 90008h
					; DATA XREF: sub_7101FFE0+1Fo
dword_710534E4	dd 401FFFFh, 10000h	; DATA XREF: sub_71020550+19o
dword_710534EC	dd 601FFFFh, 10000h	; DATA XREF: sub_710206E0+19o
		db 2, 0
word_710534F6	dw 0FFFFh		; DATA XREF: .text:710208B9o
		dd 601h, 20001h
dword_71053500	dd 801FFFFh, 10000h, 30002h ; DATA XREF: sub_71020A60+19o
dword_7105350C	dd 801FFFFh, 10000h, 30002h ; DATA XREF: .text:71020C89o
dword_71053518	dd 801FFFFh, 10000h, 30002h ; DATA XREF: sub_71020E80+19o
dword_71053524	dd 801FFFFh, 10000h, 30002h ; DATA XREF: .text:710210A9o
dword_71053530	dd 14900FFh, 100003Eh, 3030203h, 5000400h, 7030600h, 9000803h
					; DATA XREF: sub_710212A0+2Eo
		dd 0B000A00h, 0D000C00h, 0F000E00h, 11001000h, 13001200h
		dd 15001400h, 17001600h, 19001800h, 1B001A00h, 1D001C00h
		dd 1E00h, 7D0100h
		dd offset off_7105CE54
dword_7105357C	dd 401FFFFh, 10000h, 10D00FFh, 1000004h, 101h ;	DATA XREF: sub_710225F0+19o
		dd offset off_7105CE54
dword_71053594	dd 0A01FFFFh, 10000h, 30002h ; DATA XREF: sub_71022860+26o
		db 4, 0
word_710535A2	dw 0FFFFh		; DATA XREF: sub_71022E70+19o
		dd 0E01h, 20001h, 40003h, 60005h
dword_710535B4	dd 11100FFh, 1030006h, 1000201h, 7D0000h, 0 ; DATA XREF: sub_71044AC0+19o
dword_710535C8	dd 12100FFh, 1030014h, 3030201h, 5000401h, 7000600h, 9000801h
					; DATA XREF: sub_71044D00+1Fo
		dd 101h, 7Dh, 0
dword_710535EC	dd 201FFFFh		; DATA XREF: sub_71023700+19o
		db 2 dup(0)
word_710535F2	dw 0FFFFh		; DATA XREF: sub_71023A60+19o
		dd 0E01h, 20001h, 40003h, 60005h
dword_71053604	dd 0E01FFFFh, 10000h, 30002h, 50004h ; DATA XREF: sub_71023D40+19o
		db 6, 0
word_71053616	dw 0FFFFh		; DATA XREF: sub_71024020+19o
		dd 201h
dword_7105361C	dd 801FFFFh, 10000h, 30002h ; DATA XREF: sub_710243A0+19o
dword_71053628	dd 401FFFFh, 10000h	; DATA XREF: sub_71024550+1Co
dword_71053630	dd 201FFFFh		; DATA XREF: sub_710246E0+19o
		db 2 dup(0)
word_71053636	dw 0FFFFh		; DATA XREF: .text:710247E9o
		dd 201h
dword_7105363C	dd 401FFFFh, 10000h	; DATA XREF: sub_7103B760+19o
dword_71053644	dd 401FFFFh, 10000h	; DATA XREF: sub_7103B870+19o
dword_7105364C	dd 201FFFFh, 0		; DATA XREF: sub_710248C0+1Fo
dword_71053654	dd 10D00FFh, 1000004h, 101h, 0 ; DATA XREF: sub_71046E70+1Co
dword_71053664	dd 801FFFFh, 10000h, 30002h ; DATA XREF: sub_71024EB0+19o
dword_71053670	dd 801FFFFh, 10000h, 30002h ; DATA XREF: sub_71025070+19o
dword_7105367C	dd 401FFFFh, 10000h	; DATA XREF: sub_71042820+19o
dword_71053684	dd 401FFFFh, 10000h	; DATA XREF: sub_710428E0+19o
dword_7105368C	dd 401FFFFh, 10000h	; DATA XREF: sub_7103C1F0+19o
dword_71053694	dd 401FFFFh, 10000h	; DATA XREF: sub_7103C2B0+19o
dword_7105369C	dd 401FFFFh, 10000h	; DATA XREF: sub_71042230+19o
dword_710536A4	dd 401FFFFh, 10000h	; DATA XREF: sub_710422F0+19o
dword_710536AC	dd 601FFFFh, 10000h	; DATA XREF: sub_710418C0+19o
		db 2, 0
word_710536B6	dw 0FFFFh		; DATA XREF: sub_710419C0+19o
		dd 601h, 20001h
dword_710536C0	dd 201FFFFh, 0		; DATA XREF: sub_710258E0+19o
dword_710536C8	dd 11100FFh, 1030006h, 1000201h, 7D0000h, 0 ; DATA XREF: sub_71045280+19o
dword_710536DC	dd 401FFFFh, 10000h	; DATA XREF: sub_71025E20+1Do
dword_710536E4	dd 401FFFFh, 10000h	; DATA XREF: .text:71026479o
dword_710536EC	dd 401FFFFh, 10000h	; DATA XREF: .text:71026539o
dword_710536F4	dd 401FFFFh, 10000h	; DATA XREF: sub_710265E0+16o
dword_710536FC	dd 401FFFFh, 10000h	; DATA XREF: .text:710266F6o
dword_71053704	dd 401FFFFh, 10000h	; DATA XREF: sub_710267E0+19o
dword_7105370C	dd 401FFFFh, 10000h	; DATA XREF: .text:710268F9o
dword_71053714	dd 401FFFFh, 10000h	; DATA XREF: sub_710269E0+19o
dword_7105371C	dd 401FFFFh, 10000h	; DATA XREF: .text:71026AE9o
dword_71053724	dd 401FFFFh, 10000h	; DATA XREF: sub_71026BC0+16o
dword_7105372C	dd 401FFFFh, 10000h	; DATA XREF: .text:71026CC6o
dword_71053734	dd 201FFFFh		; DATA XREF: sub_71026DA0+19o
		db 2 dup(0)
word_7105373A	dw 0FFFFh		; DATA XREF: .text:71026EB9o
		dd 201h, 10D00FFh, 1000004h, 101h
		dd offset off_7105CE54
dword_71053750	dd 201FFFFh		; DATA XREF: sub_71027760+19o
		db 2 dup(0)
word_71053756	dw 0FFFFh		; DATA XREF: .text:71027869o
		dd 201h, 11100FFh, 1000004h, 103h, 7Dh,	0
dword_71053770	dd 201FFFFh		; DATA XREF: sub_71027960+19o
		db 2 dup(0)
word_71053776	dw 0FFFFh		; DATA XREF: .text:71027A19o
		dd 201h
dword_7105377C	dd 401FFFFh, 10000h	; DATA XREF: sub_71027AF0+19o
dword_71053784	dd 401FFFFh, 10000h	; DATA XREF: .text:71027BE9o
dword_7105378C	dd 401FFFFh, 10000h	; DATA XREF: sub_71027CB0+19o
dword_71053794	dd 401FFFFh, 10000h	; DATA XREF: .text:71027DA9o
dword_7105379C	dd 601FFFFh, 10000h	; DATA XREF: sub_7103BFE0+19o
		db 2, 0
word_710537A6	dw 0FFFFh		; DATA XREF: sub_7103C0F0+19o
		dd 601h, 20001h
dword_710537B0	dd 601FFFFh, 10000h	; DATA XREF: sub_71041550+19o
		db 2, 0
word_710537BA	dw 0FFFFh		; DATA XREF: sub_71041660+19o
		dd 601h, 20001h
dword_710537C4	dd 401FFFFh, 10000h	; DATA XREF: sub_71041BD0+19o
dword_710537CC	dd 401FFFFh, 10000h	; DATA XREF: sub_71041CE0+19o
dword_710537D4	dd 401FFFFh, 10000h	; DATA XREF: sub_71027E70+19o
dword_710537DC	dd 201FFFFh		; DATA XREF: sub_710426A0+19o
		db 2 dup(0)
word_710537E2	dw 0FFFFh		; DATA XREF: sub_71042750+19o
		dd 201h
dword_710537E8	dd 201FFFFh		; DATA XREF: sub_71028160+16o
		db 2 dup(0)
word_710537EE	dw 0FFFFh		; DATA XREF: sub_71028330+1Do
		dd 0C01h, 20001h, 40003h
		db 5, 0
word_710537FE	dw 0FFFFh		; DATA XREF: sub_71028A80+19o
		dd 1601h, 20001h, 40003h, 60005h, 80007h, 0A0009h
dword_71053818	dd 1601FFFFh, 10000h, 30002h, 50004h, 70006h, 90008h
					; DATA XREF: .text:71028EA9o
		db 0Ah,	0
word_71053832	dw 0FFFFh		; DATA XREF: sub_710292A0+16o
		dd 801h, 20001h
		db 3, 0
word_7105383E	dw 0FFFFh		; DATA XREF: sub_71029530+1Fo
		dd 401h, 1
dword_71053848	dd 201FFFFh		; DATA XREF: sub_710444C0+19o
		db 2 dup(0)
word_7105384E	dw 0FFFFh		; DATA XREF: sub_71029A80+22o
		dd 401h
		db 1, 0
word_71053856	dw 0FFFFh		; DATA XREF: sub_7104F3C0+19o
		dd 401h
		db 1, 0
word_7105385E	dw 0FFFFh		; DATA XREF: sub_7104F4C0+19o
		dd 401h
		db 1, 0
word_71053866	dw 0FFFFh		; DATA XREF: sub_71029D00+2Bo
		dd 601h, 20001h, 10D00FFh, 1000004h, 101h
		dd offset off_7105CE54
dword_71053880	dd 201FFFFh		; DATA XREF: _ZN16QSvgTinyDocumentC2Ev+19o
		db 2 dup(0)
word_71053886	dw 0FFFFh		; DATA XREF: _ZN16QSvgTinyDocumentD1Ev+19o
		dd 601h, 20001h
dword_71053890	dd 601FFFFh, 10000h	; DATA XREF: _ZN16QSvgTinyDocumentD2Ev+19o
		db 2, 0
word_7105389A	dw 0FFFFh		; DATA XREF: _ZN16QSvgTinyDocumentD0Ev+19o
		dd 601h, 20001h
dword_710538A4	dd 601FFFFh, 10000h	; DATA XREF: sub_7102AD70+28o
		db 2, 0
word_710538AE	dw 0FFFFh		; DATA XREF: _ZN16QSvgTinyDocument4loadEP16QXmlStreamReader+1Fo
		dd 201h
dword_710538B4	dd 201FFFFh		; DATA XREF: sub_71044560+19o
		db 2 dup(0)
word_710538BA	dw 0FFFFh		; DATA XREF: sub_71044650+19o
		dd 201h
dword_710538C0	dd 201FFFFh		; DATA XREF: _ZN16QSvgTinyDocument13addNamedStyleERK7QStringP21QSvgFillStyleProperty+1Co
		db 2 dup(0)
word_710538C6	dw 0FFFFh		; DATA XREF: _ZNK16QSvgTinyDocument16matrixForElementERK7QString+22o
		dd 401h
		db 1, 0
word_710538CE	dw 0FFFFh		; DATA XREF: _ZN16QSvgTinyDocument4loadERK10QByteArray+22o
		dd 601h, 20001h
dword_710538D8	dd 1601FFFFh, 10000h, 30002h, 50004h, 70006h, 90008h
					; DATA XREF: _ZN16QSvgTinyDocument4loadERK7QString+25o
		db 0Ah,	0
word_710538F2	dw 0FFFFh		; DATA XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+26o
		dd 0C01h, 20001h, 40003h
		db 5, 0
word_71053902	dw 0FFFFh		; DATA XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF+19o
		dd 601h, 20001h
dword_7105390C	dd 201FFFFh		; DATA XREF: _ZN16QSvgTinyDocumentC1Ev+19o
		db 2 dup(0)
word_71053912	dw 0FFFFh		; DATA XREF: _ZN16QSvgTinyDocument10addSvgFontEP8QSvgFont+1Co
		dd 401h, 1
dword_7105391C	dd 201FFFFh		; DATA XREF: _ZN12QSvgRenderer4loadEP16QXmlStreamReader+19o
		db 2 dup(0)
word_71053922	dw 0FFFFh		; DATA XREF: _ZN12QSvgRenderer4loadERK10QByteArray+19o
		dd 201h
dword_71053928	dd 201FFFFh		; DATA XREF: _ZN12QSvgRenderer4loadERK7QString+19o
		db 2 dup(0)
word_7105392E	dw 0FFFFh		; DATA XREF: _ZN12QSvgRendererC2EP7QObject+19o
		dd 201h
dword_71053934	dd 201FFFFh		; DATA XREF: sub_710420B0+19o
		db 2 dup(0)
word_7105393A	dw 0FFFFh		; DATA XREF: sub_71042160+19o
		dd 201h
dword_71053940	dd 401FFFFh, 10000h	; DATA XREF: _ZN12QSvgRendererC1EP16QXmlStreamReaderP7QObject+19o
dword_71053948	dd 401FFFFh, 10000h	; DATA XREF: _ZN12QSvgRendererC2EP16QXmlStreamReaderP7QObject+19o
dword_71053950	dd 401FFFFh, 10000h	; DATA XREF: _ZN12QSvgRendererC1ERK10QByteArrayP7QObject+19o
dword_71053958	dd 401FFFFh, 10000h	; DATA XREF: _ZN12QSvgRendererC2ERK10QByteArrayP7QObject+19o
dword_71053960	dd 401FFFFh, 10000h	; DATA XREF: _ZN12QSvgRendererC1ERK7QStringP7QObject+19o
dword_71053968	dd 401FFFFh, 10000h	; DATA XREF: _ZN12QSvgRendererC2ERK7QStringP7QObject+19o
dword_71053970	dd 201FFFFh, 0		; DATA XREF: _ZN12QSvgRendererC1EP7QObject+19o
dword_71053978	dd 201FFFFh		; DATA XREF: _ZN10QSvgWidget10paintEventEP11QPaintEvent+19o
		db 2 dup(0)
word_7105397E	dw 0FFFFh		; DATA XREF: _ZN10QSvgWidgetC1ERK7QStringP7QWidget+19o
		dd 601h, 20001h
dword_71053988	dd 601FFFFh, 10000h	; DATA XREF: _ZN10QSvgWidgetC2ERK7QStringP7QWidget+19o
		db 2, 0
word_71053992	dw 0FFFFh		; DATA XREF: _ZN10QSvgWidgetC1EP7QWidget+19o
		dd 601h, 20001h
dword_7105399C	dd 601FFFFh, 10000h, 2	; DATA XREF: _ZN10QSvgWidgetC2EP7QWidget+19o
dword_710539A8	dd 201FFFFh		; DATA XREF: sub_7103C530+19o
		db 2 dup(0)
word_710539AE	dw 0FFFFh		; DATA XREF: _ZNK16QGraphicsSvgItem16maximumCacheSizeEv+1Bo
		dd 201h
dword_710539B4	dd 1201FFFFh, 10000h, 30002h, 50004h, 70006h, 8
					; DATA XREF: sub_710302E0+3Ao
dword_710539CC	dd 11500FFh, 1030008h, 3010203h, 100h, 7Dh, 0 ;	DATA XREF: sub_710464C0+19o
dword_710539E4	dd 801FFFFh, 10000h, 30002h ; DATA XREF: sub_71042460+19o
dword_710539F0	dd 201FFFFh		; DATA XREF: sub_71041760+19o
		db 2 dup(0)
word_710539F6	dw 0FFFFh		; DATA XREF: sub_71041810+19o
		dd 201h
dword_710539FC	dd 12900FFh, 103001Ch, 3030203h, 5010403h, 7030603h, 9000801h
					; DATA XREF: sub_71046730+1Fo
		dd 0B000A00h, 0D000C01h, 101h, 7Dh, 0
dword_71053A28	dd 601FFFFh, 10000h	; DATA XREF: _ZN16QGraphicsSvgItem19setMaximumCacheSizeERK5QSize+24o
		db 2, 0
word_71053A32	dw 0FFFFh		; DATA XREF: _ZN16QGraphicsSvgItem11qt_metacallEN11QMetaObject4CallEiPPv+16o
		dd 201h
dword_71053A38	dd 601FFFFh, 10000h	; DATA XREF: _ZN16QGraphicsSvgItemC2EP13QGraphicsItem+1Co
		db 2, 0
word_71053A42	dw 0FFFFh		; DATA XREF: sub_71043DC0+19o
		dd 0A01h, 20001h, 40003h
dword_71053A50	dd 0A01FFFFh, 10000h, 30002h ; DATA XREF: sub_71043B00+19o
		db 4, 0
word_71053A5E	dw 0FFFFh		; DATA XREF: _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem+1Co
		dd 601h, 20001h
dword_71053A68	dd 601FFFFh, 10000h	; DATA XREF: _ZN16QGraphicsSvgItemC2ERK7QStringP13QGraphicsItem+1Co
		db 2, 0
word_71053A72	dw 0FFFFh		; DATA XREF: _ZN16QGraphicsSvgItemC1EP13QGraphicsItem+1Co
		dd 601h, 20001h
dword_71053A7C	dd 401FFFFh, 10000h	; DATA XREF: sub_71032B10+1Co
dword_71053A84	dd 201FFFFh, 0		; DATA XREF: sub_71032DA0+1Co
		dd 11100FFh, 1000004h, 103h, 7Dh, 0
		dd 10D00FFh, 1000004h, 101h
		dd offset off_7105CE54
dword_71053AB0	dd 201FFFFh		; DATA XREF: _ZN13QSvgGenerator11setFileNameERK7QString+16o
		db 2 dup(0)
word_71053AB6	dw 0FFFFh		; DATA XREF: sub_71041EC0+19o
		dd 201h
dword_71053ABC	dd 201FFFFh		; DATA XREF: sub_71041F70+19o
		db 2 dup(0)
word_71053AC2	dw 0FFFFh		; DATA XREF: sub_71042010+19o
		dd 201h
dword_71053AC8	dd 1E01FFFFh, 10000h, 30002h, 50004h, 70006h, 90008h, 0B000Ah
					; DATA XREF: sub_7103D670+2Do
		dd 0D000Ch
		db 0Eh,	0
word_71053AEA	dw 0FFFFh		; DATA XREF: sub_710335A0+19o
		dd 201h
dword_71053AF0	dd 601FFFFh, 10000h	; DATA XREF: sub_710337F0+1Co
		db 2, 0
word_71053AFA	dw 0FFFFh		; DATA XREF: sub_71033AE0+1Co
		dd 201h
dword_71053B00	dd 0A01FFFFh, 10000h, 30002h ; DATA XREF: sub_71033BB0+28o
		db 4, 0
word_71053B0E	dw 0FFFFh		; DATA XREF: sub_710429A0+19o
		dd 1601h, 20001h, 40003h, 60005h, 80007h, 0A0009h
dword_71053B28	dd 0E01FFFFh, 10000h, 30002h, 50004h ; DATA XREF: sub_7103E3E0+19o
		db 6, 0
word_71053B3A	dw 0FFFFh		; DATA XREF: sub_71043510+19o
		dd 1201h, 20001h, 40003h, 60005h, 80007h
dword_71053B50	dd 1201FFFFh, 10000h, 30002h, 50004h, 70006h ; DATA XREF: sub_71043810+19o
		db 8, 0
word_71053B66	dw 0FFFFh		; DATA XREF: sub_71042D80+1Co
		dd 1801h, 20001h, 40003h, 60005h, 80007h, 0A0009h
		db 0Bh,	0
word_71053B82	dw 0FFFFh		; DATA XREF: _ZN13QSvgGeneratorC1Ev+19o
		dd 801h, 20001h
		db 3, 0
word_71053B8E	dw 0FFFFh		; DATA XREF: _ZN13QSvgGeneratorC2Ev+19o
		dd 801h, 20001h
		db 3, 0
word_71053B9A	dw 0FFFFh		; DATA XREF: _ZN13QSvgGeneratorD0Ev+19o
		dd 401h
		db 1, 0
word_71053BA2	dw 0FFFFh		; DATA XREF: _ZN13QSvgGeneratorD1Ev+19o
		dd 401h
		db 1, 0
word_71053BAA	dw 0FFFFh		; DATA XREF: _ZN13QSvgGeneratorD2Ev+19o
		dd 401h
		db 1, 0
word_71053BB2	dw 0FFFFh		; DATA XREF: _ZN13QSvgGenerator15setOutputDeviceEP9QIODevice+16o
		dd 201h
dword_71053BB8	dd 2C01FFFFh, 10000h, 30002h, 50004h, 70006h, 90008h, 0B000Ah
					; DATA XREF: sub_7103F3B0+25o
		dd 0D000Ch, 0F000Eh, 110010h, 130012h, 150014h
dword_71053BE8	dd 0A01FFFFh, 10000h, 30002h ; DATA XREF: sub_7103C610+1Co
		db 4, 0
word_71053BF6	dw 0FFFFh		; DATA XREF: sub_71034690+19o
		dd 601h, 20001h
dword_71053C00	dd 0A01FFFFh, 10000h, 30002h ; DATA XREF: sub_71034940+1Co
		db 4, 0
word_71053C0E	dw 0FFFFh		; DATA XREF: sub_7103E740+25o
		dd 2801h, 20001h, 40003h, 60005h, 80007h, 0A0009h, 0C000Bh
		dd 0E000Dh, 10000Fh, 120011h
		db 13h,	0
word_71053C3A	dw 0FFFFh		; DATA XREF: sub_7103CA30+23o
		dd 2801h, 20001h, 40003h, 60005h, 80007h, 0A0009h, 0C000Bh
		dd 0E000Dh, 10000Fh, 120011h
		db 13h,	0
word_71053C66	dw 0FFFFh		; DATA XREF: sub_71040150+22o
		dd 3601h, 20001h, 40003h, 60005h, 80007h, 0A0009h, 0C000Bh
		dd 0E000Dh, 10000Fh, 120011h, 140013h, 160015h,	180017h
		dd 1A0019h
dword_71053CA0	dd 601FFFFh, 10000h, 2	; DATA XREF: sub_710350E0+19o
dword_71053CAC	dd 10D00FFh, 1000004h, 101h, 0 ; DATA XREF: sub_71051E20+1Co
dword_71053CBC	dd 10D00FFh, 1000004h, 101h, 0 ; DATA XREF: sub_710525B0+19o
dword_71053CCC	dd 10D00FFh, 7F010002h,	0 ; DATA XREF: sub_710517F0+19o
		dd offset off_7105CE54
		dd 1
dword_71053CE0	dd 10900FFh, 7F010002h,	2 dup(0) ; DATA	XREF: sub_71051CE0+1Bo
dword_71053CF0	dd 10D00FFh, 1000004h, 101h, 0 ; DATA XREF: sub_7103B980+16o
dword_71053D00	dd 10900FFh, 7F010002h,	2 dup(0) ; DATA	XREF: sub_71052410+16o
dword_71053D10	dd 10900FFh, 7F010002h,	2 dup(0) ; DATA	XREF: sub_71052330+16o
dword_71053D20	dd 10900FFh, 7F010002h,	2 dup(0) ; DATA	XREF: sub_7104FB00+19o
dword_71053D30	dd 10900FFh, 1010004h, 7F01h, 0	; DATA XREF: sub_71051FB0+A6o
dword_71053D40	dd 10900FFh, 1010004h, 7F01h, 0	; DATA XREF: sub_71051FB0+216o
dword_71053D50	dd 10D00FFh, 1010006h, 7F010203h, 7D0000h, 0 ; DATA XREF: sub_71051A80+1Ao
dword_71053D64	dd 10D00FFh, 1010006h, 7F010203h, 7D0000h, 0 ; DATA XREF: sub_710517F0+EAo
dword_71053D78	dd 11500FFh, 1000004h, 2000103h, 7Dh ; DATA XREF: sub_7104FC60+16o
		dd offset off_7105CE60
		align 80h
		dd 80h dup(?)
_text		ends

; Section 2. (virtual address 00054000)
; Virtual size			: 00004A8C (  19084.)
; Section size in file		: 00004C00 (  19456.)
; Offset to raw	data for section: 00053200
; Flags	C0600040: Data Readable	Writable
; Alignment	: 32 bytes
; Exported entry  22. _ZN12QSvgRenderer16staticMetaObjectE
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
; Segment alignment '32byte' can not be represented in assembly
_data		segment	para public 'DATA' use32
		assume cs:_data
		;org 71054000h
		public _ZN12QSvgRenderer16staticMetaObjectE
_ZN12QSvgRenderer16staticMetaObjectE dd	0
					; DATA XREF: _ZNK12QSvgRenderer10metaObjectEv:loc_7102DAE0o
					; sub_7102DAF0+5w ...
		dd offset aQsvgrenderer	; "QSvgRenderer"
		dd offset dword_7105A900
		dd offset _ZN12QSvgRenderer25staticMetaObjectExtraDataE
; Exported entry  59. _ZN16QGraphicsSvgItem16staticMetaObjectE
		public _ZN16QGraphicsSvgItem16staticMetaObjectE
_ZN16QGraphicsSvgItem16staticMetaObjectE dd 0
					; DATA XREF: _ZNK16QGraphicsSvgItem10metaObjectEv:loc_7102FE70o
					; sub_7102FE80+5w
		dd offset aQgraphicssvgit ; "QGraphicsSvgItem"
		dd offset dword_7105AB20
		dd offset _ZN16QGraphicsSvgItem25staticMetaObjectExtraDataE
; Exported entry   4. _ZN10QSvgWidget16staticMetaObjectE
		public _ZN10QSvgWidget16staticMetaObjectE
_ZN10QSvgWidget16staticMetaObjectE dd 0	; DATA XREF: _ZNK10QSvgWidget10metaObjectEv:loc_71035540o
					; sub_71035550+5w
		dd offset aQsvgwidget	; "QSvgWidget"
		dd offset dword_7105B4C0
		dd offset _ZN10QSvgWidget25staticMetaObjectExtraDataE
dword_71054030	dd 0FFFFFFFFh		; DATA XREF: sub_71001260+1Bw
					; sub_71001260+61w
		dd 0FFFFFFFFh
off_71054038	dd offset dword_71052BE4 ; DATA	XREF: sub_7103A230+3r
					; sub_7103A230+12r ...
dword_7105403C	dd 2			; DATA XREF: TlsCallback_0+4r
					; TlsCallback_0+11w ...
dword_71054040	dd 2 dup(0)		; DATA XREF: sub_71052330+36o
					; sub_71052410+36o
dword_71054048	dd 0			; DATA XREF: sub_71051A80:loc_71051B5Br
					; sub_71051A80+12Cw ...
dword_7105404C	dd 0			; DATA XREF: sub_710517F0:loc_7105195Cr
					; sub_710517F0+199w ...
		align 20h
dword_71054060	dd 1000h dup(0)		; DATA XREF: sub_71051A80+124o
					; sub_71051FB0+22Fo ...
dword_71058060	dd 280h	dup(0)		; DATA XREF: sub_710517F0+1A4o
					; sub_71051FB0+BFo ...
; DWORD	dword_71058A60
dword_71058A60	dd 0			; DATA XREF: sub_7103B230+1Bo
					; sub_71051FB0+C8o ...
byte_71058A64	db 0			; DATA XREF: sub_7103B230+8w
					; sub_7103B230+29w ...
		align 4
off_71058A68	dd offset sub_7104FC60	; DATA XREF: .text:71051754r
					; .text:71051759w ...
off_71058A6C	dd offset sub_710517A0	; DATA XREF: sub_71051740+3r
					; .text:71051764r ...
dword_71058A70	dd 2 dup(0)		; DATA XREF: sub_7103B210+Co
					; sub_710517F0+146o ...
byte_71058A78	db 0			; DATA XREF: sub_7104FC60+2Fr
					; sub_7104FC60:loc_7104FCD0w
		align 4
dword_71058A7C	dd 0			; DATA XREF: .text:71051774r
					; .text:71051779w ...
dword_71058A80	dd 0BB40E64Eh		; DATA XREF: .text:7103A33Fr
					; sub_7103A390+3r ...
dword_71058A84	dd 44BF19B1h		; DATA XREF: .text:7103A347r
					; sub_7103A390+21w ...
dword_71058A88	dd 0			; DATA XREF: sub_71001430+6r
					; sub_71001430+42o
		align 800h
_data		ends

; Section 3. (virtual address 00059000)
; Virtual size			: 00004EA0 (  20128.)
; Section size in file		: 00005000 (  20480.)
; Offset to raw	data for section: 00057E00
; Flags	40600040: Data Readable
; Alignment	: 32 bytes
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment '32byte' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 71059000h
; CHAR ModuleName[]
ModuleName	db 'libgcj_s.dll',0     ; DATA XREF: sub_71001430+Fo
; CHAR ProcName[]
ProcName	db '_Jv_RegisterClasses',0 ; DATA XREF: sub_71001430+2Ao
		align 8
aAnimationNoImp	db '<animation> no implemented',0 ; DATA XREF: sub_710037E0+8o
		align 4
dword_71059044	dd 0			; DATA XREF: sub_71006D20+29o
flt_71059048	dd 0.0			; DATA XREF: sub_71003F90+1539r
					; sub_71003F90+1566r
		align 10h
dbl_71059050	dq 1.0e-12		; DATA XREF: sub_710015A0:loc_710015F6r
					; sub_71005990:loc_710059E3r ...
flt_71059058	dd 100.0		; DATA XREF: sub_71003F90+B0r
flt_7105905C	dd 1.0			; DATA XREF: sub_71003F90+118r
					; sub_71003F90+138Cr
flt_71059060	dd 0.5			; DATA XREF: sub_71003F90:loc_71005570r
flt_71059064	dd -0.5			; DATA XREF: sub_71003F90+1533r
dbl_71059068	dq 1.1			; DATA XREF: sub_71003F90+133Cr
		align 20h
off_71059080	dd offset loc_71008C5A,	offset loc_71008715, offset loc_71008C41
					; DATA XREF: sub_71008500+266r
		dd offset loc_71008715,	offset loc_71008715, offset loc_71008715 ; jump	table for switch statement
		dd offset loc_71008715,	offset loc_71008CDB, offset loc_71008715
		dd offset loc_71008715,	offset loc_71008715, offset loc_71008C73
		dd offset loc_71008D3A,	offset loc_71008715, offset loc_71008715
		dd offset loc_71008715,	offset loc_71008C28, offset loc_71008715
		dd offset loc_71008C0F,	offset loc_71008B5D, offset loc_71008715
		dd offset loc_71008AFE,	offset loc_71008715, offset loc_71008715
		dd offset loc_71008715,	offset loc_71008AAD, offset loc_71008715
		dd offset loc_71008715,	offset loc_71008715, offset loc_71008715
		dd offset loc_71008715,	offset loc_71008715, offset loc_71008A94
		dd offset loc_71008715,	offset loc_71008A7B, offset loc_71008715
		dd offset loc_71008715,	offset loc_71008715, offset loc_71008715
		dd offset loc_71008A16,	offset loc_71008715, offset loc_71008715
		dd offset loc_71008715,	offset loc_710089A2, offset loc_7100890D
		dd offset loc_71008715,	offset loc_71008715, offset loc_71008715
		dd offset loc_710088F7,	offset loc_71008715, offset loc_710088AE
		dd offset loc_710087F0,	offset loc_71008715, offset loc_7100876D
		dd offset loc_71008715,	offset loc_71008715, offset loc_71008715
		dd offset loc_71008AAD
byte_71059168	db 64h,	0		; DATA XREF: sub_71009870+3Fo
					; sub_710099A0+ABo
aUnicode	db 'unicode',0          ; DATA XREF: sub_710099A0+56o
aHorizAdvX	db 'horiz-adv-x',0      ; DATA XREF: sub_710099A0+73o
					; sub_710194B0+45o
aRanslate	db 'ranslate',0         ; DATA XREF: sub_71009E10:loc_7100A43Co
					; sub_71009E10+631o
aOtate		db 'otate',0            ; DATA XREF: sub_71009E10:loc_7100A492o
					; sub_71009E10+687o
aAle		db 'ale',0              ; DATA XREF: sub_71009E10+734o
					; sub_71009E10+739o
aAtrix		db 'atrix',0            ; DATA XREF: sub_71009E10+FFo
					; sub_71009E10+104o
aStyle		db 'style',0            ; DATA XREF: sub_7100AAB0+1A6o
					; sub_710159D0+362o ...
aCx_0		db 'cx',0               ; DATA XREF: sub_7100AD80+54o
					; sub_7100B130+48o ...
aCy_0		db 'cy',0               ; DATA XREF: sub_7100AD80+9Fo
					; sub_7100B130+93o ...
aRx		db 'rx',0               ; DATA XREF: sub_7100AD80+EDo
					; sub_7100C470+189o
aRy		db 'ry',0               ; DATA XREF: sub_7100AD80+13Bo
					; sub_7100C470+1DAo
aR_0		db 'r',0                ; DATA XREF: sub_7100B130+E1o
					; sub_7100F140+EDo
aPoints		db 'points',0           ; DATA XREF: sub_7100B430+3Eo
					; sub_7100B730+3Eo
aX1		db 'x1',0               ; DATA XREF: sub_7100BA30+54o
					; sub_7100F6F0+48o
aY1		db 'y1',0               ; DATA XREF: sub_7100BA30+9Fo
					; sub_7100F6F0+93o
aX2		db 'x2',0               ; DATA XREF: sub_7100BA30+EDo
					; sub_7100F6F0+E1o
aY2		db 'y2',0               ; DATA XREF: sub_7100BA30+13Bo
					; sub_7100F6F0+12Fo
aType		db 'type',0             ; DATA XREF: sub_7100BDD0+3Fo
					; sub_71019980+57o ...
aTextCss	db 'text/css',0         ; DATA XREF: sub_7100BDD0+C5o
					; sub_7101D010+1BFo
aPx		db 'px',0               ; DATA XREF: sub_7100BF60+F0o
aPc		db 'pc',0               ; DATA XREF: sub_7100BF60+13Fo
aPt		db 'pt',0               ; DATA XREF: sub_7100BF60+16Co
aMm		db 'mm',0               ; DATA XREF: sub_7100BF60+1DDo
aCm		db 'cm',0               ; DATA XREF: sub_7100BF60+20Ao
aIn		db 'in',0               ; DATA XREF: sub_7100BF60+27Co
asc_710591DE	db 'x',0                ; DATA XREF: sub_7100C260+42o
					; sub_7100C470+54o ...
aY		db 'y',0                ; DATA XREF: sub_7100C260+87o
					; sub_7100C470+9Fo ...
aWidth		db 'width',0            ; DATA XREF: sub_7100C470+EDo
					; sub_7100D060+6Do ...
aHeight		db 'height',0           ; DATA XREF: sub_7100C470+13Bo
					; sub_7100D060+E1o ...
		align 10h
aCouldNotResolv	db 'Could not resolve property : %s',0 ; DATA XREF: sub_7100CAD0+24Fo
					; sub_7100CAD0+323o
aId		db 'id',0               ; DATA XREF: sub_7100D270+3Bo
					; sub_71013AD0+6A9o ...
aXmlId		db 'xml:id',0           ; DATA XREF: sub_7100D270+A3o
					; sub_71013AD0+A4Fo ...
aClass		db 'class',0            ; DATA XREF: sub_71013AD0+25Do
					; sub_7101C340+EBo ...
aRgb		db 'rgb(',0             ; DATA XREF: sub_7100D500+205o
aCurrentcolor	db 'currentColor',0     ; DATA XREF: sub_7100D500+2F1o
aSolidColor	db 'solid-color',0      ; DATA XREF: sub_7100DE80+48o
aSolidOpacity	db 'solid-opacity',0    ; DATA XREF: sub_7100DE80+65o
aOpacity	db 'opacity',0          ; DATA XREF: sub_7100DE80+9Eo
					; sub_710159D0+43Co ...
aXlinkHref	db 'xlink:href',0       ; DATA XREF: sub_7100E020+54o
					; sub_7100E900+6Ao ...
aHref		db 'href',0             ; DATA XREF: sub_7100E020+18Bo
aLinkSHasnTBeen	db 'link %s hasn',27h,'t been detected!',0 ; DATA XREF: sub_7100E020+412o
aFontFamily	db 'font-family',0      ; DATA XREF: sub_7100E610+66o
					; sub_710159D0+1314o ...
aUnitsPerEm	db 'units-per-em',0     ; DATA XREF: sub_7100E610+BEo
aGradienttransf	db 'gradientTransform',0 ; DATA XREF: sub_7100E900+B8o
aSpreadmethod	db 'spreadMethod',0     ; DATA XREF: sub_7100E900+E5o
aGradientunits	db 'gradientUnits',0    ; DATA XREF: sub_7100E900+130o
aColor		db 'color',0            ; DATA XREF: sub_7100E900+17Bo
					; sub_710159D0+85Co ...
aColorOpacity	db 'color-opacity',0    ; DATA XREF: sub_7100E900+1A9o
					; sub_710159D0+981o ...
aPad		db 'pad',0              ; DATA XREF: sub_7100E900+45Co
aReflect	db 'reflect',0          ; DATA XREF: sub_7100E900+65Ao
aRepeat		db 'repeat',0           ; DATA XREF: sub_7100E900+71Ao
aObjectbounding	db 'objectBoundingBox',0 ; DATA XREF: sub_7100E900+4A3o
aFx		db 'fx',0               ; DATA XREF: sub_7100F140+13Bo
aFy		db 'fy',0               ; DATA XREF: sub_7100F140+189o
aBaseprofile	db 'baseProfile',0      ; DATA XREF: sub_7100FC80+54o
aViewbox	db 'viewBox',0          ; DATA XREF: sub_7100FC80+169o
aEvenodd	db 'evenodd',0          ; DATA XREF: sub_71010720+15Ao
aNonzero	db 'nonzero',0          ; DATA XREF: sub_71010720+199o
aUrl		db 'url',0              ; DATA XREF: sub_71010720+2E3o
					; sub_71010F70+306o
aNone		db 'none',0             ; DATA XREF: sub_71010720+234o
					; sub_71010F70+23Fo ...
aName		db 'name',0             ; DATA XREF: sub_71010D50+66o
aMiter		db 'miter',0            ; DATA XREF: sub_71010F70+89Fo
aRound		db 'round',0            ; DATA XREF: sub_71010F70+8FFo
					; sub_71010F70+967o
aBevel		db 'bevel',0            ; DATA XREF: sub_71010F70+995o
aButt		db 'butt',0             ; DATA XREF: sub_71010F70+846o
aSquare		db 'square',0           ; DATA XREF: sub_71010F70+92Eo
aNonScalingStro	db 'non-scaling-stroke',0 ; DATA XREF: sub_71010F70+79Fo
aXxSmall	db 'xx-small',0         ; DATA XREF: sub_71011C90+1A3Co
aXSmall		db 'x-small',0          ; DATA XREF: sub_71011C90+1ABBo
aXLarge		db 'x-large',0          ; DATA XREF: sub_71011C90+1B2Bo
aXxLarge	db 'xx-large',0         ; DATA XREF: sub_71011C90+1BA8o
aSmall		db 'small',0            ; DATA XREF: sub_71011C90+1A78o
aMedium		db 'medium',0           ; DATA XREF: sub_71011C90+1546o
aLarge		db 'large',0            ; DATA XREF: sub_71011C90+15B1o
aNormal		db 'normal',0           ; DATA XREF: sub_71011C90+B8Bo
					; sub_71011C90+CD9o ...
aItalic		db 'italic',0           ; DATA XREF: sub_71011C90+E39o
aOblique	db 'oblique',0          ; DATA XREF: sub_71011C90+E68o
aBold		db 'bold',0             ; DATA XREF: sub_71011C90+1AEDo
aBolder		db 'bolder',0           ; DATA XREF: sub_71011C90+1B6Ao
aLighter	db 'lighter',0          ; DATA XREF: sub_71011C90+1BE8o
aSmallCaps	db 'small-caps',0       ; DATA XREF: sub_71011C90+D26o
aStart		db 'start',0            ; DATA XREF: sub_71011C90+C19o
aMiddle		db 'middle',0           ; DATA XREF: sub_71011C90+C3Do
aEnd		db 'end',0              ; DATA XREF: sub_71011C90+15EDo
aCollapse	db 'collapse',0         ; DATA XREF: sub_71011C90+88Bo
aClear		db 'clear',0            ; DATA XREF: sub_71011C90+4D2o
aSrc		db 'src',0              ; DATA XREF: sub_71011C90+EC7o
aDst		db 'dst',0              ; DATA XREF: sub_71011C90+F06o
aSrcOver	db 'src-over',0         ; DATA XREF: sub_71011C90+F45o
aDstOver	db 'dst-over',0         ; DATA XREF: sub_71011C90+F84o
aSrcIn		db 'src-in',0           ; DATA XREF: sub_71011C90+FC3o
aDstIn		db 'dst-in',0           ; DATA XREF: sub_71011C90+1002o
aSrcOut		db 'src-out',0          ; DATA XREF: sub_71011C90+1041o
aDstOut		db 'dst-out',0          ; DATA XREF: sub_71011C90+1080o
aSrcAtop	db 'src-atop',0         ; DATA XREF: sub_71011C90+10BFo
aDstAtop	db 'dst-atop',0         ; DATA XREF: sub_71011C90+10FEo
aXor		db 'xor',0              ; DATA XREF: sub_71011C90+113Do
aPlus		db 'plus',0             ; DATA XREF: sub_71011C90+117Co
aMultiply	db 'multiply',0         ; DATA XREF: sub_71011C90+11BBo
aScreen		db 'screen',0           ; DATA XREF: sub_71011C90+11FAo
aOverlay	db 'overlay',0          ; DATA XREF: sub_71011C90+1239o
aDarken		db 'darken',0           ; DATA XREF: sub_71011C90+1278o
aLighten	db 'lighten',0          ; DATA XREF: sub_71011C90+12B7o
aColorDodge	db 'color-dodge',0      ; DATA XREF: sub_71011C90+12F6o
aColorBurn	db 'color-burn',0       ; DATA XREF: sub_71011C90+1335o
aHardLight	db 'hard-light',0       ; DATA XREF: sub_71011C90+1374o
aSoftLight	db 'soft-light',0       ; DATA XREF: sub_71011C90+13B3o
aDifference	db 'difference',0       ; DATA XREF: sub_71011C90+13F2o
aExclusion	db 'exclusion',0        ; DATA XREF: sub_71011C90+1431o
aOperation	db 'Operation: ',0      ; DATA XREF: sub_71011C90+1486o
aIsNotImplement	db ' is not implemented',0 ; DATA XREF: sub_71011C90+14B2o
aInline		db 'inline',0           ; DATA XREF: sub_71011C90+3A2o
aBlock		db 'block',0            ; DATA XREF: sub_71011C90+3D5o
aListItem	db 'list-item',0        ; DATA XREF: sub_71011C90+1690o
aRunIn		db 'run-in',0           ; DATA XREF: sub_71011C90+16C0o
aCompact	db 'compact',0          ; DATA XREF: sub_71011C90+16FAo
aMarker		db 'marker',0           ; DATA XREF: sub_71011C90+1734o
aTable		db 'table',0            ; DATA XREF: sub_71011C90+176Eo
aInlineTable	db 'inline-table',0     ; DATA XREF: sub_71011C90+17A8o
aTableRow	db 'table-row',0        ; DATA XREF: sub_71011C90+17E2o
					; sub_71011C90+1890o
aTableHeaderGro	db 'table-header-group',0 ; DATA XREF: sub_71011C90+181Co
aTableFooterGro	db 'table-footer-group',0 ; DATA XREF: sub_71011C90+1856o
aTableColumnGro	db 'table-column-group',0 ; DATA XREF: sub_71011C90+18CAo
aTableColumn	db 'table-column',0     ; DATA XREF: sub_71011C90+1904o
aTableCell	db 'table-cell',0       ; DATA XREF: sub_71011C90+193Eo
aTableCaption	db 'table-caption',0    ; DATA XREF: sub_71011C90+1978o
aHidden		db 'hidden',0           ; DATA XREF: sub_71011C90+727o
aRequiredfeatur	db 'requiredFeatures',0 ; DATA XREF: sub_71013AD0+15Do
aRequiredextens	db 'requiredExtensions',0 ; DATA XREF: sub_71013AD0+3E9o
aRequiredformat	db 'requiredFormats',0  ; DATA XREF: sub_71013AD0+4E9o
aRequiredfonts	db 'requiredFonts',0    ; DATA XREF: sub_71013AD0+819o
aSystemlanguage	db 'systemLanguage',0   ; DATA XREF: sub_71013AD0+2EAo
aCompOp		db 'comp-op',0          ; DATA XREF: sub_710159D0+112Eo
					; sub_710159D0+12B2o ...
aDisplay	db 'display',0          ; DATA XREF: sub_710159D0+7A2o
					; sub_710159D0+E20o ...
aFill		db 'fill',0             ; DATA XREF: sub_710159D0+7FFo
					; sub_710159D0+DCEo ...
aFillRule	db 'fill-rule',0        ; DATA XREF: sub_710159D0+A85o
					; sub_710159D0+1040o ...
aFillOpacity	db 'fill-opacity',0     ; DATA XREF: sub_710159D0+11F0o
					; sub_710159D0+1260o ...
aFontSize	db 'font-size',0        ; DATA XREF: sub_710159D0+14C8o
					; sub_710159D0+1790o ...
aFontStyle	db 'font-style',0       ; DATA XREF: sub_710159D0+1686o
					; sub_710159D0+1AE2o ...
aFontWeight	db 'font-weight',0      ; DATA XREF: sub_710159D0+1905o
					; sub_710159D0+1B94o ...
aFontVariant	db 'font-variant',0     ; DATA XREF: sub_710159D0+19CBo
					; sub_710159D0+1C4Ao ...
aOffset		db 'offset',0           ; DATA XREF: sub_710159D0+494o
					; sub_710159D0+FE5o ...
aTroke		db 'troke',0            ; DATA XREF: sub_710159D0+9E9o
					; sub_710159D0+1095o ...
aDasharray	db '-dasharray',0       ; DATA XREF: sub_710159D0+ADDo
					; sub_710159D0+1372o ...
aDashoffset	db '-dashoffset',0      ; DATA XREF: sub_710159D0+13C7o
					; sub_710159D0+1477o ...
aLinecap	db '-linecap',0         ; DATA XREF: sub_710159D0+152Ao
					; sub_710159D0+157Fo ...
aLinejoin	db '-linejoin',0        ; DATA XREF: sub_710159D0+162Eo
					; sub_710159D0+16E4o ...
aMiterlimit	db '-miterlimit',0      ; DATA XREF: sub_710159D0+1739o
					; sub_710159D0+1A8Ao ...
aOpacity_0	db '-opacity',0         ; DATA XREF: sub_710159D0+196Ao
					; sub_710159D0+1B3Do ...
aWidth_0	db '-width',0           ; DATA XREF: sub_710159D0+1A2Co
					; sub_710159D0+1BF3o ...
aStopOpacity	db 'stop-opacity',0     ; DATA XREF: sub_710159D0+118Fo
					; sub_710159D0+1418o ...
aTextAnchor	db 'text-anchor',0      ; DATA XREF: sub_710159D0+62Do
					; sub_710159D0+D15o ...
aTransform	db 'transform',0        ; DATA XREF: sub_710159D0+8B8o
					; sub_710159D0+F31o ...
aVectorEffect	db 'vector-effect',0    ; DATA XREF: sub_710159D0+5CCo
					; sub_710159D0+CB4o ...
aVisibility	db 'visibility',0       ; DATA XREF: sub_710159D0+920o
					; sub_710159D0+ED0o ...
aStopColor	db 'stop-color',0       ; DATA XREF: sub_710159D0+73Do
					; sub_710159D0+C37o ...
		align 4
off_710596C8	dd offset loc_71016220	; DATA XREF: sub_710159D0+427r
		dd offset loc_71016162	; jump table for switch	statement
		dd offset loc_71015EB0
		dd offset loc_710161C3
		dd offset loc_71015EB0
		dd offset loc_71015EB0
		dd offset loc_71016052
		dd offset loc_71015EB0
		dd offset loc_71015EB0
		dd offset loc_71015EB0
		dd offset loc_71015EB0
		dd offset loc_71015EB0
		dd offset loc_71015E00
		dd offset loc_71015EB0
		dd offset loc_71015EB0
		dd offset loc_71015EB0
		dd offset loc_710160F8
		dd offset loc_71015FF1
		dd offset loc_71015EB0
		dd offset loc_71015F90
		dd offset loc_71015EB0
		dd offset loc_71015EE1
off_71059720	dd offset loc_71016842	; DATA XREF: sub_710159D0+C1Er
		dd offset loc_710167E7	; jump table for switch	statement
		dd offset loc_71016654
		dd offset loc_71016795
		dd offset loc_71016654
		dd offset loc_71016654
		dd offset loc_71016654
		dd offset loc_71016654
		dd offset loc_71016654
		dd offset loc_71016654
		dd offset loc_71016654
		dd offset loc_71016654
		dd offset loc_7101673A
		dd offset loc_71016654
		dd offset loc_71016654
		dd offset loc_71016654
		dd offset loc_710165F5
		dd offset loc_710166D9
		dd offset loc_71016654
		dd offset loc_71016678
off_71059770	dd offset loc_71018060	; DATA XREF: .text:71017C37r
		dd offset loc_71017FA2	; jump table for switch	statement
		dd offset loc_71017CF0
		dd offset loc_71018003
		dd offset loc_71017CF0
		dd offset loc_71017CF0
		dd offset loc_71017E92
		dd offset loc_71017CF0
		dd offset loc_71017CF0
		dd offset loc_71017CF0
		dd offset loc_71017CF0
		dd offset loc_71017CF0
		dd offset loc_71017C40
		dd offset loc_71017CF0
		dd offset loc_71017CF0
		dd offset loc_71017CF0
		dd offset loc_71017F38
		dd offset loc_71017E31
		dd offset loc_71017CF0
		dd offset loc_71017DD0
		dd offset loc_71017CF0
		dd offset loc_71017D21
off_710597C8	dd offset loc_71018682	; DATA XREF: .text:7101842Er
		dd offset loc_71018627	; jump table for switch	statement
		dd offset loc_71018494
		dd offset loc_710185D5
		dd offset loc_71018494
		dd offset loc_71018494
		dd offset loc_71018494
		dd offset loc_71018494
		dd offset loc_71018494
		dd offset loc_71018494
		dd offset loc_71018494
		dd offset loc_71018494
		dd offset loc_7101857A
		dd offset loc_71018494
		dd offset loc_71018494
		dd offset loc_71018494
		dd offset loc_71018435
		dd offset loc_71018519
		dd offset loc_71018494
		dd offset loc_710184B8
aFrom		db 'from',0             ; DATA XREF: sub_71019980+A8o
					; sub_7101A880+29Co
aTo		db 'to',0               ; DATA XREF: sub_71019980+D9o
					; sub_7101A880+2F4o
aValues		db 'values',0           ; DATA XREF: sub_71019980+10Ao
					; sub_7101A880+A4o
aBegin		db 'begin',0            ; DATA XREF: sub_71019980+15Eo
					; sub_7101A880+FCo
aDur		db 'dur',0              ; DATA XREF: sub_71019980+1B2o
					; sub_7101A880+14Co
aAttributename	db 'attributeName',0    ; DATA XREF: sub_71019980+206o
					; sub_7101A880+1A4o
aRepeatcount	db 'repeatCount',0      ; DATA XREF: sub_71019980+25Ao
					; sub_7101A880+1F4o
aMs		db 'ms',0               ; DATA XREF: sub_71019980+3E0o
					; sub_71019980+480o ...
aS		db 's',0                ; DATA XREF: sub_71019980+82Do
					; sub_71019980+87Ao ...
aFreeze		db 'freeze',0           ; DATA XREF: sub_71019980+5E2o
					; sub_7101A880+77Do
aIndefinite	db 'indefinite',0       ; DATA XREF: sub_71019980+611o
					; sub_7101A880+7B2o
byte_71059862	db 0			; DATA XREF: sub_71019980+7FAo
					; sub_7101A880+CDDo
aBy		db 'by',0               ; DATA XREF: sub_7101A880+344o
aAdditive	db 'additive',0         ; DATA XREF: sub_7101A880+39Co
aSum		db 'sum',0              ; DATA XREF: sub_7101A880+3EAo
aTranslate	db 'translate',0        ; DATA XREF: sub_7101A880+64Fo
aScale		db 'scale',0            ; DATA XREF: sub_7101A880+6BEo
aRotate		db 'rotate',0           ; DATA XREF: sub_7101A880+EEDo
aSkewx		db 'skewX',0            ; DATA XREF: sub_7101A880+F29o
aSkewy		db 'skewY',0            ; DATA XREF: sub_7101A880+F65o
aUrl_0		db 'url(',0             ; DATA XREF: sub_7101BB40+48Ao
					; sub_7101C340+396o
a000000		db '#000000',0          ; DATA XREF: sub_7101C340+48Co
aXmlStylesheet	db 'xml-stylesheet',0   ; DATA XREF: sub_7101D010+4Eo
aType_		db 'type=\"(.+)\"',0    ; DATA XREF: sub_7101D010+89o
aHref_		db 'href=\"(.+)\"',0    ; DATA XREF: sub_7101D010+265o
aXmlSpace	db 'xml:space',0        ; DATA XREF: sub_7101E100+6Co
aDefault	db 'default',0          ; DATA XREF: sub_7101E100+D8o
a1IsAnInvalidVa	db '"%1" is an invalid value for attribute xml:space. Valid values ar'
					; DATA XREF: sub_7101E100+9EAo
		db 'e "preserve" and "default".',0
aSvg		db 'svg',0              ; DATA XREF: sub_7101E100+AEAo
					; sub_7101FFE0+295o ...
aEfs		db 'efs',0              ; DATA XREF: sub_7101E100+97Do
aVg		db 'vg',0               ; DATA XREF: sub_7101E100+8DDo
aWitch		db 'witch',0            ; DATA XREF: sub_7101E100+916o
aNimation	db 'nimation',0         ; DATA XREF: sub_7101E100+1050o
aIrcle		db 'ircle',0            ; DATA XREF: sub_7101E100+1008o
aLlipse		db 'llipse',0           ; DATA XREF: sub_7101E100+FC4o
aMage		db 'mage',0             ; DATA XREF: sub_7101E100+F80o
aIne		db 'ine',0              ; DATA XREF: sub_7101E100+F36o
aAth		db 'ath',0              ; DATA XREF: sub_7101E100+E74o
aOlygon		db 'olygon',0           ; DATA XREF: sub_7101E100+EB3o
aOlyline	db 'olyline',0          ; DATA XREF: sub_7101E100+EF2o
aEct		db 'ect',0              ; DATA XREF: sub_7101E100+E30o
aExt		db 'ext',0              ; DATA XREF: sub_7101E100+D67o
aExtarea	db 'extArea',0          ; DATA XREF: sub_7101E100+DA6o
aSpan		db 'span',0             ; DATA XREF: sub_7101E100+DE5o
aSe		db 'se',0               ; DATA XREF: sub_7101E100+D1Bo
aIdeo		db 'ideo',0             ; DATA XREF: sub_7101E100+CCFo
		align 10h
aTextOrTextarea	db 27h,'text',27h,' or ',27h,'textArea',27h,' element contains invalid element ty'
					; DATA XREF: sub_7101E100+114Co
		db 'pe.',0
aCouldNotAddChi	db 'Could not add child element to parent element because the types a'
					; DATA XREF: sub_7101E100:loc_7101F190o
		db 're incorrect.',0
aNimate		db 'nimate',0           ; DATA XREF: sub_7101E100+15CDo
aNimatecolor	db 'nimateColor',0      ; DATA XREF: sub_7101E100+160Co
aNimatemotion	db 'nimateMotion',0     ; DATA XREF: sub_7101E100+164Bo
aNimatetransfor	db 'nimateTransform',0  ; DATA XREF: sub_7101E100+168Ao
aUdio		db 'udio',0             ; DATA XREF: sub_7101E100+16C9o
aEsc		db 'esc',0              ; DATA XREF: sub_7101E100+170Do
aIscard		db 'iscard',0           ; DATA XREF: sub_7101E100+174Co
aOreignobject	db 'oreignObject',0     ; DATA XREF: sub_7101E100+1577o
aAndler		db 'andler',0           ; DATA XREF: sub_7101E100+14F4o
aKern		db 'kern',0             ; DATA XREF: sub_7101E100+1533o
aEtadata	db 'etadata',0          ; DATA XREF: sub_7101E100+1471o
aPath		db 'path',0             ; DATA XREF: sub_7101E100+14B0o
					; .rdata:71059D08o
aRefetch	db 'refetch',0          ; DATA XREF: sub_7101E100+142Do
aCript		db 'cript',0            ; DATA XREF: sub_7101E100+1363o
aEt		db 'et',0               ; DATA XREF: sub_7101E100+13A2o
aTyle		db 'tyle',0             ; DATA XREF: sub_7101E100+13E1o
aBreak		db 'break',0            ; DATA XREF: sub_7101E100+12D8o
aItle		db 'itle',0             ; DATA XREF: sub_7101E100+1317o
aProblemParsing	db 'Problem parsing %s',0 ; DATA XREF: sub_7101E100+1238o
					; sub_7101E100+17B4o
aOnt		db 'ont',0              ; DATA XREF: sub_7101E100+1990o
aIneargradient	db 'inearGradient',0    ; DATA XREF: sub_7101E100+1A8Do
aAdialgradient	db 'adialGradient',0    ; DATA XREF: sub_7101E100+19D6o
aOlidcolor	db 'olidColor',0        ; DATA XREF: sub_7101E100+194Ao
aCouldNotParseN	db 'Could not parse node: %s',0 ; DATA XREF: sub_7101E100+1A36o
aOntFace	db 'ont-face',0         ; DATA XREF: sub_7101E100+1CB1o
aOntFaceName	db 'ont-face-name',0    ; DATA XREF: sub_7101E100+1CEBo
aOntFaceSrc	db 'ont-face-src',0     ; DATA XREF: sub_7101E100+1D25o
aOntFaceUri	db 'ont-face-uri',0     ; DATA XREF: sub_7101E100+1D5Fo
aLyph		db 'lyph',0             ; DATA XREF: sub_7101E100+1B63o
aIssingGlyph	db 'issing-glyph',0     ; DATA XREF: sub_7101E100+1B27o
aTop		db 'top',0              ; DATA XREF: sub_7101E100+1ADEo
aPreserve	db 'preserve',0         ; DATA XREF: sub_7101E100+A5o
off_71059B58	dd offset loc_7101F140	; DATA XREF: sub_7101E100+CB8r
		dd offset loc_7101E26E	; jump table for switch	statement
		dd offset loc_7101F0F8
		dd offset loc_7101E26E
		dd offset loc_7101F0B4
		dd offset loc_7101E26E
		dd offset loc_7101E26E
		dd offset loc_7101E26E
		dd offset loc_7101F070
		dd offset loc_7101E26E
		dd offset loc_7101E26E
		dd offset loc_7101F026
		dd offset loc_7101E26E
		dd offset loc_7101E26E
		dd offset loc_7101E26E
		dd offset loc_7101EF64
		dd offset loc_7101E26E
		dd offset loc_7101EF20
		dd offset loc_7101E26E
		dd offset loc_7101EE57
		dd offset loc_7101EE0B
		dd offset loc_7101EDBF
off_71059BB0	dd offset loc_7101F6AB	; DATA XREF: sub_7101E100+12C1r
		dd offset loc_7101EC53	; jump table for switch	statement
		dd offset loc_7101EC53
		dd offset loc_7101F7FD
		dd offset loc_7101EC53
		dd offset loc_7101F667
		dd offset loc_7101EC53
		dd offset loc_7101F5E4
		dd offset loc_7101EC53
		dd offset loc_7101EC53
		dd offset loc_7101EC53
		dd offset loc_7101EC53
		dd offset loc_7101F561
		dd offset loc_7101EC53
		dd offset loc_7101EC53
		dd offset loc_7101F51D
		dd offset loc_7101EC53
		dd offset loc_7101EC53
		dd offset loc_7101F453
		dd offset loc_7101F3C8
aData		db 'data',0             ; DATA XREF: sub_710212A0+2CFo
aBase64		db 'base64,',0          ; DATA XREF: sub_710212A0+303o
		align 10h
aQsvghandlerCre	db 'QSvgHandler::createImageNode: Unrecognized inline image format!',0
					; DATA XREF: sub_710212A0+9F4o
aCouldnTCreateI	db 'couldn',27h,'t create image from ',0 ; DATA XREF: sub_710212A0+559o
aInherit	db 'inherit',0          ; DATA XREF: .rdata:off_71059C74o
off_71059C74	dd offset aInherit	; DATA XREF: sub_7100D500:loc_7100D7B5r
					; sub_71010720:loc_71010830r ...
					; "inherit"
dword_71059C78	dd 65640067h, 73007366h, 63746977h, 6E610068h, 74616D69h
					; DATA XREF: .rdata:71059CE4o
					; .rdata:71059CE8o ...
		dd 6E6F69h, 637261h, 63726963h,	6500656Ch, 70696C6Ch, 69006573h
		dd 6567616Dh, 6E696C00h, 6F700065h, 6F67796Ch, 6F70006Eh
		dd 696C796Ch, 7200656Eh, 746365h, 74786574h, 78657400h
		dd 65726174h, 73750061h, 69760065h, 6F6564h, 0
off_71059CE0	dd offset aSvg		; DATA XREF: sub_71050CD0+56r
					; sub_710511B0+56r
					; "svg"
		dd offset dword_71059C78
		dd offset dword_71059C78+2
		dd offset dword_71059C78+7
		dd offset dword_71059C78+0Eh
		dd offset dword_71059C78+18h
		dd offset dword_71059C78+1Ch
		dd offset dword_71059C78+23h
		dd offset dword_71059C78+2Bh
		dd offset dword_71059C78+31h
		dd offset aPath		; "path"
		dd offset dword_71059C78+36h
		dd offset dword_71059C78+3Eh
		dd offset dword_71059C78+47h
		dd offset dword_71059C78+4Ch
		dd offset dword_71059C78+51h
		dd offset dword_71059C78+5Ah
		dd offset dword_71059C78+5Eh
flt_71059D28	dd 1.25			; DATA XREF: sub_71006AA0+1Cr
		align 10h
dbl_71059D30	dq 3.543307		; DATA XREF: sub_71006AA0:loc_71006AD0r
dbl_71059D38	dq 35.43307		; DATA XREF: sub_71006AA0:loc_71006AD7r
flt_71059D40	dd 90.0			; DATA XREF: sub_71006AA0:loc_71006AC3r
flt_71059D44	dd 0.0			; DATA XREF: sub_710078F0+3B5r
dbl_71059D48	dq 0.0174532925199433	; DATA XREF: sub_710078F0:loc_71007995r
					; sub_71009E10+574r ...
flt_71059D50	dd 0.5			; DATA XREF: sub_710078F0+E6r
					; sub_7100C470+2E2r ...
flt_71059D54	dd 1.0			; DATA XREF: sub_710078F0+1EEr
flt_71059D58	dd 0.25			; DATA XREF: sub_710078F0+1F4r
		align 10h
dbl_71059D60	dq 6.283185307179586	; DATA XREF: sub_710078F0+32Ar
					; sub_710078F0+6B4r
dbl_71059D68	dq 1.571796326794896	; DATA XREF: sub_710078F0+34Dr
dbl_71059D70	dq 2.666666666666667	; DATA XREF: sub_710078F0+4FEr
dbl_71059D78	dq 0.5			; DATA XREF: sub_710078F0+283r
					; sub_710078F0+29Er ...
dbl_71059D80	dq 1.0e-12		; DATA XREF: sub_7100A6C0:loc_7100A7F8r
					; sub_7100A6C0:loc_7100A81Dr ...
flt_71059D88	dd 100.0		; DATA XREF: sub_7100C470:loc_7100C7A6r
					; sub_7100F6F0+3E0r ...
		align 10h
dbl_71059D90	dq 2.55			; DATA XREF: sub_7100D500+6D5r
flt_71059D98	dd 1000.0		; DATA XREF: sub_7100E610+11Br
		align 10h
dbl_71059DA0	dq 8.300000000000001	; DATA XREF: sub_71011C90+1AD3r
dbl_71059DA8	dq 17.3			; DATA XREF: sub_71011C90+1B50r
dbl_71059DB0	dq 20.7			; DATA XREF: sub_71011C90+1BD1r
flt_71059DB8	dd 10.0			; DATA XREF: sub_71011C90+1AA1r
flt_71059DBC	dd 12.0			; DATA XREF: sub_71011C90+156Br
dbl_71059DC0	dq 14.4			; DATA XREF: sub_71011C90+15D6r
dbl_71059DC8	dq 6.9			; DATA XREF: sub_71011C90+1A61r
flt_71059DD0	dd 1.1920929e-7		; DATA XREF: sub_7101C340+9AFr
flt_71059DD4	dd 0.99999988		; DATA XREF: sub_7101C340+56Er
					; sub_7101C340+5A5r
flt_71059DD8	dd 4.0			; DATA XREF: sub_71020550+11Cr
		align 10h
off_71059DE0	dd offset loc_710236A5	; DATA XREF: sub_710235E0+18r
		dd offset loc_710236E5	; jump table for switch	statement
		dd offset loc_710236D0
		dd offset loc_71023690
		dd offset loc_71023680
		dd offset loc_71023670
		dd offset loc_71023662
		dd offset loc_71023657
		dd offset loc_71023625
		dd offset loc_71023616
		dd offset loc_71023600
		dd offset loc_710236B7
aQsvgnodeTrying	db 'QSvgNode: Trying to append unknown property!',0
					; DATA XREF: sub_71023700+48o
		align 10h
off_71059E40	dd offset loc_710237D0	; DATA XREF: sub_71023700:loc_71023770r
		dd offset loc_71023800	; jump table for switch	statement
		dd offset loc_71023830
		dd offset loc_71023860
		dd offset loc_71023890
		dd offset loc_710238C0
		dd offset loc_71023918
		dd offset loc_71023986
		dd offset loc_710239B4
		dd offset loc_71023A00
		dd offset loc_71023777
		dd offset loc_710237A2
flt_71059E70	dd 4.0			; DATA XREF: sub_71022860+12Fr
		align 10h
dword_71059E80	dd 0			; DATA XREF: .rdata:off_7105A340o
					; .rdata:7105A344o ...
aHttpWww_w3_org	db 'http://www.w3.org/Graphics/SVG/feature/1.2/#Text',0
					; DATA XREF: .rdata:7105A400o
		align 4
aHttpWww_w3_o_0	db 'http://www.w3.org/Graphics/SVG/feature/1.2/#Shape',0
					; DATA XREF: .rdata:7105A404o
		align 4
aHttpWww_w3_o_1	db 'http://www.w3.org/Graphics/SVG/feature/1.2/#SVG',0
					; DATA XREF: .rdata:7105A410o
aHttpWww_w3_o_2	db 'http://www.w3.org/Graphics/SVG/feature/1.2/#Structure',0
					; DATA XREF: .rdata:7105A414o
		align 4
aHttpWww_w3_o_3	db 'http://www.w3.org/Graphics/SVG/feature/1.2/#SolidColor',0
					; DATA XREF: .rdata:7105A418o
		align 4
aHttpWww_w3_o_4	db 'http://www.w3.org/Graphics/SVG/feature/1.2/#Hyperlinking',0
					; DATA XREF: .rdata:7105A420o
		align 4
aHttpWww_w3_o_5	db 'http://www.w3.org/Graphics/SVG/feature/1.2/#CoreAttribute',0
					; DATA XREF: .rdata:7105A424o
		align 4
aHttpWww_w3_o_6	db 'http://www.w3.org/Graphics/SVG/feature/1.2/#XlinkAttribute',0
					; DATA XREF: .rdata:7105A428o
		align 10h
aHttpWww_w3_o_7	db 'http://www.w3.org/Graphics/SVG/feature/1.2/#SVG-static',0
					; DATA XREF: .rdata:7105A42Co
		align 4
aHttpWww_w3_o_8	db 'http://www.w3.org/Graphics/SVG/feature/1.2/#OpacityAttribute',0
					; DATA XREF: .rdata:7105A430o
		align 4
aHttpWww_w3_o_9	db 'http://www.w3.org/Graphics/SVG/feature/1.2/#Gradient',0
					; DATA XREF: .rdata:7105A438o
		align 10h
aHttpWww_w3__10	db 'http://www.w3.org/Graphics/SVG/feature/1.2/#Font',0
					; DATA XREF: .rdata:7105A43Co
		align 4
aHttpWww_w3__11	db 'http://www.w3.org/Graphics/SVG/feature/1.2/#Image',0
					; DATA XREF: .rdata:7105A440o
		align 4
aHttpWww_w3__12	db 'http://www.w3.org/Graphics/SVG/feature/1.2/#ConditionalProcessing'
					; DATA XREF: .rdata:7105A444o
		db 0
		align 4
aHttpWww_w3__13	db 'http://www.w3.org/Graphics/SVG/feature/1.2/#Extensibility',0
					; DATA XREF: .rdata:7105A44Co
		align 4
aHttpWww_w3__14	db 'http://www.w3.org/Graphics/SVG/feature/1.2/#GraphicsAttribute',0
					; DATA XREF: .rdata:7105A45Co
		align 4
aHttpWww_w3__15	db 'http://www.w3.org/Graphics/SVG/feature/1.2/#Prefetch',0
					; DATA XREF: .rdata:7105A460o
		align 10h
aHttpWww_w3__16	db 'http://www.w3.org/Graphics/SVG/feature/1.2/#PaintAttribute',0
					; DATA XREF: .rdata:7105A464o
		align 4
aHttpWww_w3__17	db 'http://www.w3.org/Graphics/SVG/feature/1.2/#ConditionalProcessing'
					; DATA XREF: .rdata:7105A468o
		db 'Attribute',0
		align 4
aHttpWww_w3__18	db 'http://www.w3.org/Graphics/SVG/feature/1.2/#ExternalResourcesRequ'
					; DATA XREF: .rdata:7105A4A0o
		db 'iredAttribute',0
		align 20h
off_7105A340	dd offset dword_71059E80 ; DATA	XREF: sub_71024B70:loc_71024CD8r
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset aHttpWww_w3_org ; "http://www.w3.org/Graphics/SVG/feature/"...
		dd offset aHttpWww_w3_o_0 ; "http://www.w3.org/Graphics/SVG/feature/"...
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset aHttpWww_w3_o_1 ; "http://www.w3.org/Graphics/SVG/feature/"...
		dd offset aHttpWww_w3_o_2 ; "http://www.w3.org/Graphics/SVG/feature/"...
		dd offset aHttpWww_w3_o_3 ; "http://www.w3.org/Graphics/SVG/feature/"...
		dd offset dword_71059E80
		dd offset aHttpWww_w3_o_4 ; "http://www.w3.org/Graphics/SVG/feature/"...
		dd offset aHttpWww_w3_o_5 ; "http://www.w3.org/Graphics/SVG/feature/"...
		dd offset aHttpWww_w3_o_6 ; "http://www.w3.org/Graphics/SVG/feature/"...
		dd offset aHttpWww_w3_o_7 ; "http://www.w3.org/Graphics/SVG/feature/"...
		dd offset aHttpWww_w3_o_8 ; "http://www.w3.org/Graphics/SVG/feature/"...
		dd offset dword_71059E80
		dd offset aHttpWww_w3_o_9 ; "http://www.w3.org/Graphics/SVG/feature/"...
		dd offset aHttpWww_w3__10 ; "http://www.w3.org/Graphics/SVG/feature/"...
		dd offset aHttpWww_w3__11 ; "http://www.w3.org/Graphics/SVG/feature/"...
		dd offset aHttpWww_w3__12 ; "http://www.w3.org/Graphics/SVG/feature/"...
		dd offset dword_71059E80
		dd offset aHttpWww_w3__13 ; "http://www.w3.org/Graphics/SVG/feature/"...
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset aHttpWww_w3__14 ; "http://www.w3.org/Graphics/SVG/feature/"...
		dd offset aHttpWww_w3__15 ; "http://www.w3.org/Graphics/SVG/feature/"...
		dd offset aHttpWww_w3__16 ; "http://www.w3.org/Graphics/SVG/feature/"...
		dd offset aHttpWww_w3__17 ; "http://www.w3.org/Graphics/SVG/feature/"...
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset dword_71059E80
		dd offset aHttpWww_w3__18 ; "http://www.w3.org/Graphics/SVG/feature/"...
		align 20h
byte_7105A4C0	db 59h			; DATA XREF: sub_71024B70+141r
					; sub_71024B70+150r ...
aYyyyyyyyyyyyyy	db 'YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY'
		db 'Y',0
		dd 50F0559h, 59590A00h,	595959h, 59590Fh, 59055900h, 59595900h
		dd 59595959h, 2	dup(59590059h),	59595900h, 590500h, 59055900h
		dd 59595900h, 59590005h, 21h dup(59595959h)
off_7105A5C0	dd offset loc_710271DB	; DATA XREF: sub_71027040+106r
		dd offset loc_71027500	; jump table for switch	statement
		dd offset loc_71027428
		dd offset loc_71027300
		dd offset loc_71027276
		dd offset loc_71027150
aCouldNotReso_0	db 'Could not resolve property : %s',0 ; DATA XREF: sub_710292A0+10Ao
dbl_7105A5F8	dq 0.0174532925199433	; DATA XREF: sub_71027040+16Er
					; sub_71027040+294r
dbl_7105A600	dq 1.0e-12		; DATA XREF: sub_71029530:loc_7102971Cr
					; sub_71029530:loc_71029742r ...
a1_2_5		db '1.2.5',0            ; DATA XREF: sub_7102AD70+C4o
aUnknownError	db 'Unknown error',0    ; DATA XREF: sub_7102AD70:loc_7102B193o
					; sub_7102AD70:loc_7102B1BFo
aCannotInitiali	db 'Cannot initialize zlib, because: %s',0 ; DATA XREF: sub_7102AD70+324o
aErrorWhileInfl	db 'Error while inflating gzip file: %s',0 ; DATA XREF: sub_7102AD70+1C8o
aCouldnTFindNod	db 'Couldn',27h,'t find node %s. Skipping rendering.',0
					; DATA XREF: _ZNK16QSvgTinyDocument16matrixForElementERK7QString+13Co
					; _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+361o
byte_7105A68F	db 1Fh			; DATA XREF: _ZN16QSvgTinyDocument4loadERK10QByteArray+3Bo
		dd 8Bh
aCannotOpenFile	db 'Cannot open file ',27h,'%s',27h,', because: %s',0
					; DATA XREF: _ZN16QSvgTinyDocument4loadERK7QString+10Do
a_svgz		db '.svgz',0            ; DATA XREF: _ZN16QSvgTinyDocument4loadERK7QString+1A8o
a_svg_gz	db '.svg.gz',0          ; DATA XREF: _ZN16QSvgTinyDocument4loadERK7QString+2BFo
		align 4
aCannotReadFile	db 'Cannot read file ',27h,'%s',27h,', because: %s (line %d)',0
					; DATA XREF: _ZN16QSvgTinyDocument4loadERK7QString+3DEo
		align 4
flt_7105A6F8	dd 1.0			; DATA XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+764r
					; _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+7A8r
flt_7105A6FC	dd 1000.0		; DATA XREF: _ZN16QSvgTinyDocument15setCurrentFrameEi+48r
flt_7105A700	dd 0.5			; DATA XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+67Dr
					; _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+6B0r	...
		align 8
dbl_7105A708	dq 1.0e-12		; DATA XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_:loc_7102C2C4r
					; _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_:loc_7102C654r ...
flt_7105A710	dd 4.0			; DATA XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+1B2r
					; _ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF+F6r
		align 10h
a2repaintneeded	db '2repaintNeeded()',0 ; DATA XREF: _ZN12QSvgRenderer4loadEP16QXmlStreamReader+C2o
					; _ZN12QSvgRenderer4loadERK10QByteArray+C2o ...
a2timeout	db '2timeout()',0       ; DATA XREF: _ZN12QSvgRenderer4loadEP16QXmlStreamReader+CEo
					; _ZN12QSvgRenderer4loadERK10QByteArray+CEo ...
off_7105A73C	dd offset loc_7102E600	; DATA XREF: _ZN12QSvgRenderer18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv:loc_7102E542r
		dd offset loc_7102E5E0	; jump table for switch	statement
		dd offset loc_7102E5C1
		dd offset loc_7102E5A3
		dd offset loc_7102E590
		dd offset loc_7102E574
		dd offset loc_7102E550
		dd offset loc_7102E610
aQsvgrendererSe	db 'QSvgRenderer::setFramesPerSecond: Cannot set negative value %d',0
					; DATA XREF: _ZN12QSvgRenderer18setFramesPerSecondEi+25o
		align 4
; Exported entry  25. _ZN12QSvgRenderer25staticMetaObjectExtraDataE
		public _ZN12QSvgRenderer25staticMetaObjectExtraDataE
_ZN12QSvgRenderer25staticMetaObjectExtraDataE dd 0 ; DATA XREF:	.data:7105400Co
		dd offset _ZN12QSvgRenderer18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv
		align 20h
aQsvgrenderer	db 'QSvgRenderer',0     ; DATA XREF: _ZN12QSvgRenderer11qt_metacastEPKc+28o
					; .data:71054004o
		align 2
aRepaintneeded	db 'repaintNeeded()',0
aBool		db 'bool',0
aFilename	db 'filename',0
aLoadQstring	db 'load(QString)',0
aContents	db 'contents',0
aLoadQbytearray	db 'load(QByteArray)',0
aLoadQxmlstream	db 'load(QXmlStreamReader*)',0
aP		db 'p',0
aRenderQpainter	db 'render(QPainter*)',0
aPBounds	db 'p,bounds',0
aRenderQpaint_0	db 'render(QPainter*,QRectF)',0
aPElementidBoun	db 'p,elementId,bounds',0
aRenderQpaint_1	db 'render(QPainter*,QString,QRectF)',0
aPElementid	db 'p,elementId',0
aRenderQpaint_2	db 'render(QPainter*,QString)',0
aQrectf		db 'QRectF',0
aViewbox_1	db 'viewBox',0
aInt		db 'int',0
aFramespersecon	db 'framesPerSecond',0
aCurrentframe	db 'currentFrame',0
		align 20h
dword_7105A900	dd 6, 3	dup(0)		; DATA XREF: .data:71054008o
		dd 8, 0Eh, 3, 36h, 5 dup(0)
		dd 1, 0Eh, 3 dup(0Dh), 5, 2Ch, 23h, 1Eh, 0Dh, 0Ah, 43h
		dd 3Ah,	1Eh, 0Dh, 0Ah, 54h, 3Ah, 1Eh, 0Dh, 0Ah,	6Eh, 6Ch
		dd 2 dup(0Dh), 0Ah, 89h, 80h, 2	dup(0Dh), 0Ah, 0B5h, 0A2h
		dd 2 dup(0Dh), 0Ah, 0E2h, 0D6h,	2 dup(0Dh), 2Ah, 103h
		dd 0FCh, 14095103h, 10Fh, 10Bh,	2095103h, 11Fh,	10Bh, 2095103h
		dd 0
flt_7105AA00	dd 0.5			; DATA XREF: _ZNK12QSvgRenderer11defaultSizeEv+75r
					; _ZNK12QSvgRenderer11defaultSizeEv+A8r ...
flt_7105AA04	dd 1.0			; DATA XREF: _ZNK12QSvgRenderer11defaultSizeEv+148r
					; _ZNK12QSvgRenderer11defaultSizeEv+18Cr ...
		align 20h
a1update	db '1update()',0        ; DATA XREF: _ZN10QSvgWidgetC1ERK7QStringP7QWidget+F2o
					; _ZN10QSvgWidgetC2ERK7QStringP7QWidget+F2o ...
a2repaintneed_0	db '2repaintNeeded()',0 ; DATA XREF: _ZN10QSvgWidgetC1ERK7QStringP7QWidget+FAo
					; _ZN10QSvgWidgetC2ERK7QStringP7QWidget+FAo ...
		align 10h
aCom_trolltech_	db 'com.trolltech.Qt.QGraphicsItem',0
					; DATA XREF: _ZN16QGraphicsSvgItem11qt_metacastEPKc+3Fo
		align 10h
off_7105AA60	dd offset loc_71030464	; DATA XREF: sub_710302E0+540r
		dd offset loc_71030464	; jump table for switch	statement
		dd offset loc_71030A00
		dd offset loc_710309A0
		dd offset loc_71030940
		dd offset loc_710308E0
		dd offset loc_71030881
		dd offset loc_71030464
		dd offset loc_71030464
		dd offset loc_71030827
a1_q_repaintite	db '1_q_repaintItem()',0
					; DATA XREF: _ZN16QGraphicsSvgItemC2EP13QGraphicsItem+2BBo
					; _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem+2C0o ...
a2repaintneed_1	db '2repaintNeeded()',0 ; DATA XREF: _ZN16QGraphicsSvgItemC2EP13QGraphicsItem+2C3o
					; _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem+2CCo ...
		align 4
; Exported entry  64. _ZN16QGraphicsSvgItem25staticMetaObjectExtraDataE
		public _ZN16QGraphicsSvgItem25staticMetaObjectExtraDataE
_ZN16QGraphicsSvgItem25staticMetaObjectExtraDataE dd 0 ; DATA XREF: .data:7105401Co
		dd offset _ZN16QGraphicsSvgItem18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv
		align 10h
aQgraphicssvgit	db 'QGraphicsSvgItem',0 ; DATA XREF: _ZN16QGraphicsSvgItem11qt_metacastEPKc+28o
					; .data:71054014o
		align 2
a_q_repaintitem	db '_q_repaintItem()',0
aQstring	db 'QString',0
aElementid	db 'elementId',0
aQsize		db 'QSize',0
aMaximumcachesi	db 'maximumCacheSize',0
		align 20h
dword_7105AB20	dd 6, 3	dup(0)		; DATA XREF: .data:71054018o
		dd 1, 0Eh, 2, 13h, 6 dup(0)
		dd 12h,	3 dup(11h), 8, 2Bh, 23h, 0A095103h, 3Bh, 35h, 15095103h
		dd 0
dbl_7105AB88	dq 1.0e-12		; DATA XREF: _ZN16QGraphicsSvgItem12setElementIdERK7QString:loc_71030094r
					; _ZN16QGraphicsSvgItem12setElementIdERK7QString:loc_710300E9r	...
flt_7105AB90	dd 0.5			; DATA XREF: sub_710302E0+320r
		align 10h
aNone_0		db 'none',0             ; DATA XREF: sub_71032B10:loc_71032D4Bo
					; sub_71032DA0+A6o ...
aNonScalingSt_0	db 'non-scaling-stroke',0 ; DATA XREF: sub_71032B10+117o
					; sub_71032DA0+9Ao
aPolylineFillNo	db '<polyline fill="none" vector-effect="',0 ; DATA XREF: sub_71032B10+127o
aPoints_0	db '" points="',0       ; DATA XREF: sub_71032B10+158o
asc_7105ABE9	db '" />',0             ; DATA XREF: sub_71032B10+20Co
aNonzero_0	db 'nonzero',0          ; DATA XREF: sub_71032DA0+5Ao
aEvenodd_0	db 'evenodd',0          ; DATA XREF: sub_71032DA0+51o
aPathVectorEffe	db '<path vector-effect="',0 ; DATA XREF: sub_71032DA0+B6o
aFillRule_0	db '" fill-rule="',0    ; DATA XREF: sub_71032DA0+EAo
aD		db '" d="',0            ; DATA XREF: sub_71032DA0+10Eo
asc_7105AC28	db '"/>',0              ; DATA XREF: sub_71032DA0+3E6o
aQsvggeneratorM	db 'QSvgGenerator::metric(), unhandled metric %d',0Ah,0
					; DATA XREF: _ZNK13QSvgGenerator6metricEN12QPaintDevice17PaintDeviceMetricE+17o
		align 4
off_7105AC5C	dd offset loc_71033213	; DATA XREF: _ZNK13QSvgGenerator6metricEN12QPaintDevice17PaintDeviceMetricE:loc_71033230r
		dd offset loc_71033250	; jump table for switch	statement
		dd offset loc_71033260
		dd offset loc_71033270
		dd offset loc_710332C1
		dd offset loc_710332D0
		dd offset loc_71033246
		dd offset loc_71033237
		dd offset loc_71033237
		dd offset loc_71033237
		dd offset loc_71033237
aQsvggeneratorS	db 'QSvgGenerator::setViewBox(), cannot set viewBox while SVG is bein'
					; DATA XREF: _ZN13QSvgGenerator10setViewBoxERK6QRectF+69o
		db 'g generated',0
		align 4
aQsvggenerato_0	db 'QSvgGenerator::setSize(), cannot set size while SVG is being gene'
					; DATA XREF: _ZN13QSvgGenerator7setSizeERK5QSize+35o
		db 'rated',0
		align 10h
aQsvggenerato_1	db 'QSvgGenerator::setFileName(), cannot set file name while SVG is b'
					; DATA XREF: _ZN13QSvgGenerator11setFileNameERK7QString:loc_71033550o
		db 'eing generated',0
a123		db '#%1%2%3',0          ; DATA XREF: sub_71033BB0+86o
					; sub_7103D670+16Bo
asc_7105AD78	db '" />',0Ah,0         ; DATA XREF: sub_710337F0+1D1o
					; sub_7103D670+295o
aStopOpacity_0	db 'stop-opacity="',0   ; DATA XREF: sub_7103D670+2D6o
asc_7105AD8D	db '" ',0               ; DATA XREF: sub_71034690+13Co
					; sub_710350E0+33Co ...
aStopColor_0	db 'stop-color="',0     ; DATA XREF: sub_7103D670+310o
aStopOffset	db '    <stop offset="',0 ; DATA XREF: sub_7103D670+360o
aDefs		db '</defs>',0Ah,0      ; DATA XREF: sub_710335A0+71o
aUtf8		db 'UTF-8',0            ; DATA XREF: sub_710335A0+A7o
aG		db '</g>',0             ; DATA XREF: sub_710335A0+170o
					; sub_710335A0+1E3o
aSvg_0		db '</svg>',0           ; DATA XREF: sub_710335A0+1A0o
aImage		db '<image ',0          ; DATA XREF: sub_710337F0+35o
asc_7105ADD3	db 'x="',0              ; DATA XREF: sub_710337F0+7Ao
aY_0		db '" y="',0            ; DATA XREF: sub_710337F0+A5o
					; sub_71034690+11Bo
aWidth_1	db '" width="',0        ; DATA XREF: sub_710337F0+C0o
aHeight_0	db '" height="',0       ; DATA XREF: sub_710337F0+DBo
aPreserveaspect	db '" preserveAspectRatio="none" ',0 ; DATA XREF: sub_710337F0+F9o
aPng		db 'PNG',0              ; DATA XREF: sub_710337F0+16Ao
aXlinkHrefDataI	db 'xlink:href="data:image/png;base64,',0 ; DATA XREF: sub_710337F0+1A0o
aFillNone	db 'fill="none" ',0     ; DATA XREF: sub_7103CA30+4CBo
					; sub_7103E3E0+37o
aStrokeBlack	db 'stroke="black" ',0  ; DATA XREF: sub_7103E3E0+99o
aStrokeWidth1	db 'stroke-width="1" ',0 ; DATA XREF: sub_7103E3E0+FBo
					; sub_71040150+EBo
aFillRuleEvenod	db 'fill-rule="evenodd" ',0 ; DATA XREF: sub_7103E3E0+15Do
aStrokeLinecapS	db 'stroke-linecap="square" ',0 ; DATA XREF: sub_7103E3E0+1BFo
					; sub_71040150:loc_71040D70o
aStrokeLinejoin	db 'stroke-linejoin="bevel" ',0 ; DATA XREF: sub_7103E3E0+221o
					; sub_71040150:loc_71040E10o
asc_7105AEAD	db '>',0Ah,0            ; DATA XREF: sub_7103E3E0+283o
aQtSvgDocument	db 'Qt Svg Document',0  ; DATA XREF: sub_71042D80+2A8o
aGeneratedWithQ	db 'Generated with Qt',0 ; DATA XREF: sub_71042D80+2FFo
aSerif		db 'serif',0            ; DATA XREF: sub_71042D80+362o
a10pt		db '10pt',0             ; DATA XREF: sub_71042D80+3C5o
aNormal_0	db 'normal',0           ; DATA XREF: sub_7103C610+1E6o
					; sub_71042D80+428o ...
aQsvggenerato_2	db 'QSvgGenerator::setOutputDevice(), cannot set output device while '
					; DATA XREF: _ZN13QSvgGenerator15setOutputDeviceEP9QIODevice:loc_71034640o
		db 'SVG is being generated',0
aRadialgradient	db '<radialGradient ',0 ; DATA XREF: sub_7103F3B0+7Fo
aGradientunit_0	db 'gradientUnits="',0  ; DATA XREF: sub_7103E740+CFo
					; sub_7103F3B0+CFo
aObjectboundi_0	db 'objectBoundingBox',0 ; DATA XREF: sub_7103E740+958o
					; sub_7103F3B0+A48o
aFy_0		db 'fy="',0             ; DATA XREF: sub_7103F3B0+241o
aFx_0		db 'fx="',0             ; DATA XREF: sub_7103F3B0+2AAo
aR		db 'r="',0              ; DATA XREF: sub_7103F3B0+300o
aCy		db 'cy="',0             ; DATA XREF: sub_7103F3B0+369o
aCx		db 'cx="',0             ; DATA XREF: sub_7103F3B0+3CCo
asc_7105AF87	db '">',0Ah,0           ; DATA XREF: sub_7103E740+4ECo
					; sub_7103F3B0+59Ao
aGradient1	db 'gradient%1',0       ; DATA XREF: sub_7103E740+53Ao
					; sub_7103F3B0+5E8o
aXmlId_0	db 'xml:id="',0         ; DATA XREF: sub_7103F3B0+6B4o
aRadialgradie_0	db '</radialGradient>',0 ; DATA XREF: sub_7103F3B0+769o
aUserspaceonuse	db 'userSpaceOnUse',0   ; DATA XREF: sub_7103E740+145o
					; sub_7103F3B0+145o
aItalic_0	db 'italic',0           ; DATA XREF: sub_7103C610+1DDo
aFontFamily_0	db 'font-family="',0    ; DATA XREF: sub_7103C610+255o
aFontSize_0	db '" font-size="',0    ; DATA XREF: sub_7103C610+28Bo
aFontWeight_0	db '" font-weight="',0  ; DATA XREF: sub_7103C610+2ACo
aFontStyle_0	db '" font-style="',0   ; DATA XREF: sub_7103C610+2C7o
aTextFill	db '<text fill="',0     ; DATA XREF: sub_71034690+A8o
aFillOpacity_0	db '" fill-opacity="',0 ; DATA XREF: sub_71034690+D9o
					; sub_7103CA30+891o
aStrokeNoneXmlS	db '" stroke="none" xml:space="preserve" x="',0
					; DATA XREF: sub_71034690+FAo
asc_7105B049	db ' >',0               ; DATA XREF: sub_71034690+1A5o
aText		db '</text>',0          ; DATA XREF: sub_71034690+1D6o
aQsvgpainteng_1	db 'QSvgPaintEngine::begin(), no output device',0
					; DATA XREF: sub_71034940:loc_71034F80o
		align 10h
aQsvgpaintengin	db 'QSvgPaintEngine::begin(), could not open output device: ',27h,'%s',27h,0
					; DATA XREF: sub_71034940+3C5o
		align 10h
aQsvgpainteng_0	db 'QSvgPaintEngine::begin(), could not write to read-only output dev'
					; DATA XREF: sub_71034940+5E2o
		db 'ice: ',27h,'%s',27h,0
		align 4
a?xmlVersion1_0	db '<?xml version="1.0" encoding="UTF-8" standalone="no"?>',0
					; DATA XREF: sub_71034940+EEo
aSvg_1		db '<svg',0             ; DATA XREF: sub_71034940+110o
aWidth_2	db ' width="',0         ; DATA XREF: sub_71034940+15Eo
aMmHeight	db 'mm" height="',0     ; DATA XREF: sub_71034940+19Bo
aMm_0		db 'mm"',0              ; DATA XREF: sub_71034940+1C5o
aViewbox_0	db ' viewBox="',0       ; DATA XREF: sub_71034940+422o
		align 10h
aXmlnsHttpWww_w	db ' xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.or'
					; DATA XREF: sub_71034940+20Bo
		db 'g/1999/xlink"  version="1.2" baseProfile="tiny">',0
aTitle		db '<title>',0          ; DATA XREF: sub_71034940:loc_71034E40o
aTitle_0	db '</title>',0         ; DATA XREF: sub_71034940+52Do
aDesc		db '<desc>',0           ; DATA XREF: sub_71034940:loc_71034E86o
aDesc_0		db '</desc>',0          ; DATA XREF: sub_71034940+581o
aDefs_0		db '<defs>',0Ah,0       ; DATA XREF: sub_71034940+2AFo
aG_0		db '<g ',0              ; DATA XREF: sub_71034940+305o
					; sub_710350E0+51o
aLineargradient	db '<linearGradient ',0 ; DATA XREF: sub_7103E740+7Fo
aY2_0		db 'y2="',0             ; DATA XREF: sub_7103E740+241o
aX2_0		db 'x2="',0             ; DATA XREF: sub_7103E740+2AAo
aY1_0		db 'y1="',0             ; DATA XREF: sub_7103E740+310o
aX1_0		db 'x1="',0             ; DATA XREF: sub_7103E740+373o
aId_0		db 'id="',0             ; DATA XREF: sub_7103E740+606o
aLineargradie_0	db '</linearGradient>',0 ; DATA XREF: sub_7103E740+6BBo
aFill_0		db 'fill="',0           ; DATA XREF: sub_7103CA30+867o
aUrl1		db 'url(#%1)',0         ; DATA XREF: sub_7103CA30+B0o
					; sub_7103CA30+2DDo ...
asc_7105B25A	db ')" ',0              ; DATA XREF: sub_7103CA30+1C4o
					; sub_7103CA30+3EEo ...
aFillUrl	db 'fill="url(#',0      ; DATA XREF: sub_7103CA30+1EEo
					; sub_7103CA30+418o ...
		align 4
aSvgSDonTSuppor	db 'svg',27h,'s don',27h,'t support conical gradients!',0
					; DATA XREF: sub_7103CA30+2BCo
		align 4
off_7105B294	dd offset loc_7103CEF3	; DATA XREF: sub_7103CA30+70r
		dd offset loc_7103D260	; jump table for switch	statement
		dd offset loc_7103CCC0
		dd offset loc_7103CCC0
		dd offset loc_7103CCC0
		dd offset loc_7103CCC0
		dd offset loc_7103CCC0
		dd offset loc_7103CCC0
		dd offset loc_7103CCC0
		dd offset loc_7103CCC0
		dd offset loc_7103CCC0
		dd offset loc_7103CCC0
		dd offset loc_7103CCC0
		dd offset loc_7103CCC0
		dd offset loc_7103CCC0
		dd offset loc_7103CAA7
		dd offset loc_7103D037
		dd offset loc_7103CCD3
aStrokeNone	db 'stroke="none" ',0   ; DATA XREF: sub_71040150+CE0o
aStroke		db 'stroke="',0         ; DATA XREF: sub_71040150+590o
					; sub_71040150+975o
aStrokeOpacity	db 'stroke-opacity="',0 ; DATA XREF: sub_71040150+63Co
					; sub_71040150+A21o
a1		db '%1,',0              ; DATA XREF: sub_71040150+341o
aStrokeDasharra	db 'stroke-dasharray="',0 ; DATA XREF: sub_71040150+6E8o
aStrokeDashoffs	db 'stroke-dashoffset="',0 ; DATA XREF: sub_71040150+794o
aUnsupportedPen	db 'Unsupported pen style',0 ; DATA XREF: sub_71040150:loc_710401F6o
aStrokeWidth	db 'stroke-width="',0   ; DATA XREF: sub_71040150+894o
aStrokeLinecapB	db 'stroke-linecap="butt" ',0 ; DATA XREF: sub_71040150:loc_71040C30o
aStrokeLinecapR	db 'stroke-linecap="round" ',0 ; DATA XREF: sub_71040150:loc_71040D80o
aUnhandledCapSt	db 'Unhandled cap style',0 ; DATA XREF: sub_71040150+13Fo
aStrokeLinejo_0	db 'stroke-linejoin="miter" stroke-miterlimit="',0
					; DATA XREF: sub_71040150+1A5o
					; sub_71040150+C5Co
aStrokeLinejo_1	db 'stroke-linejoin="round" ',0 ; DATA XREF: sub_71040150:loc_71040DDEo
aUnhandledJoinS	db 'Unhandled join style',0 ; DATA XREF: sub_71040150:loc_71040D52o
aG_1		db '</g>',0Ah           ; DATA XREF: sub_710350E0:loc_71035474o
		db 0Ah,0
aTransformMatri	db 'transform="matrix(',0 ; DATA XREF: sub_710350E0+16Co
asc_7105B40C	db ')"',0               ; DATA XREF: sub_710350E0+263o
aOpacity_1	db 'opacity="',0        ; DATA XREF: sub_710350E0+302o
		align 4
flt_7105B41C	dd 0.5			; DATA XREF: _ZNK13QSvgGenerator7viewBoxEv+43r
					; _ZNK13QSvgGenerator7viewBoxEv+74r ...
flt_7105B420	dd 1.0			; DATA XREF: _ZNK13QSvgGenerator7viewBoxEv+C0r
					; _ZNK13QSvgGenerator7viewBoxEv+117r ...
		align 8
dbl_7105B428	dq 25.4			; DATA XREF: _ZNK13QSvgGenerator6metricEN12QPaintDevice17PaintDeviceMetricE:loc_7103327Br
					; sub_71034940+17Er ...
dbl_7105B430	dq 0.02			; DATA XREF: sub_7103D670+7EDr
flt_7105B438	dd 72.0			; DATA XREF: sub_7103C610+34Dr
		align 10h
dbl_7105B440	dq 1.0e-12		; DATA XREF: sub_710350E0:loc_710353BFr
		align 20h
; Exported entry   6. _ZN10QSvgWidget25staticMetaObjectExtraDataE
		public _ZN10QSvgWidget25staticMetaObjectExtraDataE
_ZN10QSvgWidget25staticMetaObjectExtraDataE dd 0 ; DATA	XREF: .data:7105402Co
		dd offset _ZN10QSvgWidget18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv
		align 20h
aQsvgwidget	db 'QSvgWidget',0       ; DATA XREF: _ZN10QSvgWidget11qt_metacastEPKc+28o
					; .data:71054024o
		align 4
aFile		db 'file',0
aLoadQstring_0	db 'load(QString)',0
aContents_0	db 'contents',0
aLoadQbytearr_0	db 'load(QByteArray)',0
		align 10h
dword_7105B4C0	dd 6, 3	dup(0)		; DATA XREF: .data:71054028o
		dd 2, 0Eh, 8 dup(0)
		dd 11h,	0Ch, 2 dup(0Bh), 0Ah, 28h, 1Fh,	2 dup(0Bh), 0Ah
		dd 8 dup(0)
off_7105B540	dd offset loc_7103B5D7	; DATA XREF: sub_7103B590:loc_7103B5D0r
		dd offset loc_7103B672	; jump table for switch	statement
		dd offset loc_7103B6B0
		dd offset loc_7103B5D7
		dd offset loc_7103B620
		dd offset loc_7103B5C7
		dd offset loc_7103B5C7
		dd offset loc_7103B5C7
		dd offset loc_7103B5C7
		dd offset loc_7103B627
		dd offset loc_7103B6A1
		dd offset loc_7103B5D7
		dd offset loc_7103B620
aPureVirtualMet	db 'pure virtual method called',0Ah,0 ; DATA XREF: sub_710524C0+Bo
aStdException	db 'std::exception',0   ; DATA XREF: sub_71051590o
aStdBad_excepti	db 'std::bad_exception',0 ; DATA XREF: sub_71051570o
		align 4
a__gnu_cxx__con	db '__gnu_cxx::__concurrence_lock_error',0 ; DATA XREF: sub_71051550o
; a__gnu_cxx(char)
a__gnu_cxx__c_0	db '__gnu_cxx::__concurrence_unlock_error',0 ; DATA XREF: sub_71051560o
		align 10h
aStdBad_alloc	db 'std::bad_alloc',0   ; DATA XREF: sub_71051580o
		align 10h
aTerminateCalle	db 'terminate called recursively',0Ah,0 ; DATA XREF: sub_7104FC60+4Do
		align 10h
aTerminateCal_0	db 'terminate called after throwing an instance of ',27h,0
					; DATA XREF: sub_7104FC60+CAo
asc_7105B661	db 27h,0Ah,0		; DATA XREF: sub_7104FC60+118o
aWhat		db '  what():  ',0      ; DATA XREF: sub_7104FE0D+82o
aTerminateCal_1	db 'terminate called without an active exception',0Ah,0
					; DATA XREF: sub_7104FC60+17Ao
		align 10h
off_7105B6A0	dd offset loc_71035A97,	offset loc_71035AE0, offset loc_71035AE0
					; DATA XREF: sub_71035A80:loc_71035AB0r
		dd offset loc_71035AE0,	offset loc_71035AE0, offset loc_71035A97 ; jump	table for switch statement
		dd offset loc_71035A97,	offset loc_71035A97, offset loc_71035A97
		dd offset loc_71035AE4,	offset loc_71035AE4, offset loc_71035AE0
		dd offset loc_71035AE4,	offset loc_71035AE4, offset loc_71035AE4
		dd offset loc_71035AE4,	offset loc_71035AE4, offset loc_71035AE4
		dd offset loc_71035AE4,	offset loc_71035AE4, offset loc_71035AE4
		dd offset loc_71035AE4,	offset loc_71035A97, offset loc_71035ABB
		dd offset loc_71035ABB,	offset loc_71035ABB, offset loc_71035ABB
		dd offset loc_71035ABB,	offset loc_71035ABB, offset loc_71035AE0
		dd offset loc_71035AE4,	offset loc_71035AE4, offset loc_71035AE4
		dd offset loc_71035AE4,	offset loc_71035AE4, offset loc_71035A97
		dd offset loc_71035AE4,	offset loc_71035ABB, offset loc_71035AB7
		dd offset loc_71035AE0,	offset loc_71035A97, offset loc_71035ABB
		dd offset loc_71035ABB,	offset loc_71035A97, offset loc_71035A97
		dd offset loc_71035AE4,	offset loc_71035AE0, offset loc_71035AE0
		dd offset loc_71035AE0,	offset loc_71035AE0, offset loc_71035AE0
		dd offset loc_71035AE0,	offset loc_71035AE0, offset loc_71035AE0
		dd offset loc_71035AE4,	offset loc_71035AE0, offset loc_71035A97
		dd offset loc_71035AE4,	offset loc_71035AE4, offset loc_71035AE4
		dd offset loc_71035AE4
off_7105B794	dd offset loc_71035F77,	offset loc_71035F62, offset loc_71035F62
					; DATA XREF: sub_71035F50+32r
		dd offset loc_71035F62,	offset loc_71035F62, offset loc_71035F90 ; jump	table for switch statement
		dd offset loc_71035F77,	offset loc_71035F70, offset loc_71035F70
		dd offset loc_71035F62,	offset loc_71035F62, offset loc_71035F62
		dd offset loc_71035F62,	offset loc_71035F62, offset loc_71035F62
		dd offset loc_71035F62,	offset loc_71035F62, offset loc_71035F62
		dd offset loc_71035F62,	offset loc_71035F62, offset loc_71035F62
		dd offset loc_71035F62,	offset loc_71035F77, offset loc_71035F62
		dd offset loc_71035F62,	offset loc_71035F62, offset loc_71035F62
		dd offset loc_71035F62,	offset loc_71035F62, offset loc_71035F62
		dd offset loc_71035F62,	offset loc_71035F62, offset loc_71035F62
		dd offset loc_71035F62,	offset loc_71035F62, offset loc_71035F77
		dd offset loc_71035F62,	offset loc_71035F62, offset loc_71035F62
		dd offset loc_71035F62,	offset loc_71035F62, offset loc_71035F62
		dd offset loc_71035F62,	offset loc_71035F77, offset loc_71035F70
		dd offset loc_71035F62,	offset loc_71035F62, offset loc_71035F62
		dd offset loc_71035F62,	offset loc_71035F62, offset loc_71035F62
		dd offset loc_71035F62,	offset loc_71035F62, offset loc_71035F62
		dd offset loc_71035F62,	offset loc_71035F62, offset loc_71035F77
		dd offset loc_71035F62,	offset loc_71035F62, offset loc_71035F62
		dd offset loc_71035F77
a_global_	db '_GLOBAL_',0         ; DATA XREF: sub_71036000+42o
					; sub_71039360:loc_71039383o
aAnonymousNames	db '(anonymous namespace)',0 ; DATA XREF: sub_71036000+B4o
aSt		db 'st',0               ; DATA XREF: sub_710360D0+174o
					; .rdata:7105C9E0o
aCl		db 'cl',0               ; DATA XREF: sub_710360D0+2B5o
					; sub_71038460+55Ao ...
		align 10h
off_7105B8B0	dd offset loc_710364A8,	offset loc_710364A8, offset loc_710364A8
					; DATA XREF: sub_71036410+4Br
		dd offset loc_710364A8,	offset loc_710364A8, offset loc_710364A8 ; jump	table for switch statement
		dd offset loc_710364A8,	offset loc_710364A8, offset loc_710364A8
		dd offset loc_710364A8,	offset loc_71036442, offset loc_71036442
		dd offset loc_71036442,	offset loc_71036442, offset loc_71036442
		dd offset loc_71036442,	offset loc_71036442, offset loc_71036745
		dd offset loc_71036442,	offset loc_710364C0, offset loc_710364E8
		dd offset loc_71036442,	offset loc_710367B0, offset loc_71036515
		dd offset loc_71036442,	offset loc_71036442, offset loc_71036442
		dd offset loc_71036442,	offset loc_71036442, offset loc_71036713
		dd offset loc_710364A8,	offset loc_71036540, offset loc_71036570
		dd offset loc_71036442,	offset loc_710365A0, offset loc_710365D0
		dd offset loc_71036627,	offset loc_71036680, offset loc_71036442
		dd offset loc_71036442,	offset loc_71036442, offset loc_71036442
		dd offset loc_710364A8,	offset loc_71036442, offset loc_71036442
		dd offset loc_71036442,	offset loc_71036442, offset loc_71036442
		dd offset loc_71036442,	offset loc_710366B0, offset loc_710366B0
		dd offset loc_710366B0,	offset loc_710366B0, offset loc_710366B0
		dd offset loc_710366B0,	offset loc_710366B0, offset loc_710366B0
		dd offset loc_710366B0,	offset loc_710366B0, offset loc_71036442
		dd offset loc_710366B0,	offset loc_710366B0, offset loc_710366B0
		dd offset loc_710366B0,	offset loc_71036442, offset loc_71036442
		dd offset loc_71036442,	offset loc_710366B0, offset loc_710366B0
		dd offset loc_710366E8,	offset loc_710366B0, offset loc_710366B0
		dd offset loc_710366B0,	offset loc_710366B0, offset loc_710366B0
off_7105B9DC	dd offset loc_71036976	; DATA XREF: sub_71036410+FEr
		dd offset loc_71036442	; jump table for switch	statement
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_7103692C
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_710368F2
		dd offset loc_710368B8
		dd offset loc_71036A37
		dd offset loc_71036442
		dd offset loc_710369FD
		dd offset loc_71036881
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_71036860
		dd offset loc_71036442
		dd offset loc_71036442
		dd offset loc_71036820
		dd offset loc_7103692C
aStringLiteral	db 'string literal',0   ; DATA XREF: sub_710371A0+208o
aStd		db 'std',0              ; DATA XREF: sub_710371A0+E6o
					; .rdata:7105C4E4o ...
		align 4
off_7105BAAC	dd offset loc_7103781E,	offset loc_7103759F, offset loc_7103759F
					; DATA XREF: sub_710374B0+199r
		dd offset loc_710377FB,	offset loc_7103759F, offset loc_7103759F ; jump	table for switch statement
		dd offset loc_710377D8,	offset loc_710377B5, offset loc_7103759F
		dd offset loc_7103759F,	offset loc_7103759F, offset loc_7103759F
		dd offset loc_7103759F,	offset loc_7103759F, offset loc_7103759F
		dd offset loc_7103759F,	offset loc_71037792, offset loc_71037769
		dd offset loc_7103759F,	offset loc_71037740, offset loc_7103759F
		dd offset loc_7103759F,	offset loc_7103759F, offset loc_7103759F
		dd offset loc_7103759F,	offset loc_7103759F, offset loc_7103759F
		dd offset loc_7103759F,	offset loc_7103759F, offset loc_7103759F
		dd offset loc_7103759F,	offset loc_7103759F, offset loc_710376F4
		dd offset loc_7103759F,	offset loc_7103759F, offset loc_7103759F
		dd offset loc_7103759F,	offset loc_710376BB, offset loc_7103759F
		dd offset loc_7103759F,	offset loc_7103759F, offset loc_7103759F
		dd offset loc_7103759F,	offset loc_7103759F, offset loc_7103759F
		dd offset loc_7103759F,	offset loc_7103759F, offset loc_7103759F
		dd offset loc_7103759F,	offset loc_7103759F, offset loc_7103759F
		dd offset loc_71037680
off_7105BB7C	dd offset loc_7103765C	; DATA XREF: sub_710374B0+1B8r
		dd offset loc_71037670	; jump table for switch	statement
		dd offset loc_71037670
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103751D
		dd offset loc_7103751D
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103765C
		dd offset loc_7103751D
byte_7105BC34	db 2 dup(3Ah), 0	; DATA XREF: sub_71038000+DBo
					; sub_71038460+1DFo
aJarray		db 'JArray',0           ; DATA XREF: sub_71038460+DECo
asc_7105BC3E	db '[]',0               ; DATA XREF: sub_71038460+E08o
					; .rdata:7105C814o
aVtableFor	db 'vtable for ',0      ; DATA XREF: sub_71038460:loc_710384CFo
aVttFor		db 'VTT for ',0         ; DATA XREF: sub_71038460:loc_71038532o
aConstructionVt	db 'construction vtable for ',0 ; DATA XREF: sub_71038460:loc_710384E7o
aIn_0		db '-in-',0             ; DATA XREF: sub_71038460+9Do
aTypeinfoFor	db 'typeinfo for ',0    ; DATA XREF: sub_71038460:loc_71038539o
aTypeinfoNameFo	db 'typeinfo name for ',0 ; DATA XREF: sub_71038460:loc_71038540o
aTypeinfoFnFor	db 'typeinfo fn for ',0 ; DATA XREF: sub_71038460:loc_71038547o
aNonVirtualThun	db 'non-virtual thunk to ',0 ; DATA XREF: sub_71038460:loc_7103854Eo
aVirtualThunkTo	db 'virtual thunk to ',0 ; DATA XREF: sub_71038460:loc_71038EBDo
aCovariantRetur	db 'covariant return thunk to ',0 ; DATA XREF: sub_71038460:loc_71038EC7o
aJavaClassFor	db 'java Class for ',0  ; DATA XREF: sub_71038460:loc_71038814o
aGuardVariableF	db 'guard variable for ',0 ; DATA XREF: sub_71038460:loc_7103881Eo
aReferenceTempo	db 'reference temporary for ',0 ; DATA XREF: sub_71038460:loc_71038C68o
aHiddenAliasFor	db 'hidden alias for ',0 ; DATA XREF: sub_71038460:loc_71038C72o
asc_7105BD38	db '::*',0              ; DATA XREF: sub_71038460+73Bo
					; sub_710397A0+DFo
a_sat		db '_Sat ',0            ; DATA XREF: sub_71038460:loc_71038FD9o
a_accum		db '_Accum',0           ; DATA XREF: sub_71038460+3FDo
a_fract		db '_Fract',0           ; DATA XREF: sub_71038460:loc_71038FC8o
asc_7105BD50	db ', ',0               ; DATA XREF: sub_71038460+170o
					; sub_71038460:loc_71038898o
aOperator_0	db 'operator',0         ; DATA XREF: sub_71038460:loc_71038C20o
aOperator	db 'operator ',0        ; DATA XREF: sub_71038460+4D8o
					; sub_71038460:loc_71038C5Eo
aIx		db 'ix',0               ; DATA XREF: sub_71038460+531o
					; .rdata:7105C810o
asc_7105BD69	db ' : ',0              ; DATA XREF: sub_71038460+9A8o
aUl		db 'ul',0               ; DATA XREF: sub_71038460:loc_71039151o
aLl		db 'll',0               ; DATA XREF: sub_71038460:loc_71039140o
aUll		db 'ull',0              ; DATA XREF: sub_71038460:loc_71039186o
aFalse		db 'false',0            ; DATA XREF: sub_71038460:loc_7103934Eo
aTrue		db 'true',0             ; DATA XREF: sub_71038460+C9Bo
aJavaResource	db 'java resource ',0   ; DATA XREF: sub_71038460:loc_71038EEEo
aDecltype	db 'decltype (',0       ; DATA XREF: sub_71038460+A9Ao
a___		db '...',0              ; DATA XREF: sub_71038460+E89o
					; .rdata:7105C2D4o ...
aParm		db 'parm#',0            ; DATA XREF: sub_71038460:loc_71038BEBo
; char aLd[]
aLd		db '%ld',0              ; DATA XREF: sub_71038460+79Eo
aGlobalConstruc	db 'global constructors keyed to ',0 ; DATA XREF: sub_71038460:loc_71038EB3o
aGlobalDestruct	db 'global destructors keyed to ',0 ; DATA XREF: sub_71038460:loc_71038C7Co
		align 4
off_7105BDE8	dd offset loc_710385DE,	offset loc_7103862C, offset loc_7103862C
					; DATA XREF: sub_71038460:loc_710384C8r
		dd offset loc_71038650,	offset loc_71038D09, offset loc_71038D87 ; jump	table for switch statement
		dd offset loc_71038BEB,	offset loc_71038509, offset loc_71038524
		dd offset loc_710384CF,	offset loc_71038532, offset loc_710384E7
		dd offset loc_71038539,	offset loc_71038540, offset loc_71038547
		dd offset loc_7103854E,	offset loc_71038EBD, offset loc_71038EC7
		dd offset loc_71038814,	offset loc_7103881E, offset loc_71038C68
		dd offset loc_71038C72,	offset loc_71038515, offset loc_71038BAC
		dd offset loc_71038BAC,	offset loc_71038BAC, offset loc_710388E2
		dd offset loc_710388E2,	offset loc_710388E2, offset loc_710388E2
		dd offset loc_710388E2,	offset loc_710388E2, offset loc_710388E2
		dd offset loc_710388E2,	offset loc_710388E2, offset loc_71038ED1
		dd offset loc_710384DB,	offset loc_71038E27, offset loc_71038A1F
		dd offset loc_71038B45,	offset loc_71038828, offset loc_7103886E
		dd offset loc_7103886E,	offset loc_71038C20, offset loc_71038C5E
		dd offset loc_71038936,	offset loc_71038950, offset loc_71038974
		dd offset loc_7103849B,	offset loc_71038DC7, offset loc_7103849B
		dd offset loc_7103849B,	offset loc_71038C86, offset loc_71038C86
		dd offset loc_71038EEE,	offset loc_71038F13, offset loc_71038A0F
		dd offset loc_71038EF8,	offset loc_71038EB3, offset loc_71038C7C
		dd offset loc_71038558
off_7105BEDC	dd offset loc_71039175	; DATA XREF: sub_71038460+CD9r
		dd offset loc_71039162	; jump table for switch	statement
		dd offset loc_71039151
		dd offset loc_71039140
		dd offset loc_71039186
aRestrict	db ' restrict',0        ; DATA XREF: sub_710397A0:loc_710397E0o
aVolatile	db ' volatile',0        ; DATA XREF: sub_710397A0:loc_710397F7o
aConst		db ' const',0           ; DATA XREF: sub_710397A0:loc_71039800o
asc_7105BF0B	db '&&',0               ; DATA XREF: sub_710397A0:loc_71039847o
					; .rdata:7105C704o
aComplex	db 'complex ',0         ; DATA XREF: sub_710397A0:loc_71039850o
aImaginary	db 'imaginary ',0       ; DATA XREF: sub_710397A0:loc_71039857o
		align 4
off_7105BF24	dd offset loc_710397D7	; DATA XREF: sub_710397A0:loc_710397D0r
		dd offset loc_710397B9	; jump table for switch	statement
		dd offset loc_710397B9
		dd offset loc_710397B9
		dd offset loc_710397B9
		dd offset loc_710397B9
		dd offset loc_710397B9
		dd offset loc_710397B9
		dd offset loc_710397B9
		dd offset loc_710397B9
		dd offset loc_710397B9
		dd offset loc_710397B9
		dd offset loc_710397B9
		dd offset loc_710397B9
		dd offset loc_710397B9
		dd offset loc_710397B9
		dd offset loc_710397B9
		dd offset loc_710397B9
		dd offset loc_710397B9
		dd offset loc_710397B9
		dd offset loc_710397E0
		dd offset loc_710397F7
		dd offset loc_71039800
		dd offset loc_710397E0
		dd offset loc_710397F7
		dd offset loc_71039800
		dd offset loc_71039807
		dd offset loc_71039818
		dd offset loc_71039830
		dd offset loc_71039847
		dd offset loc_71039850
		dd offset loc_71039857
		dd offset loc_710397B9
		dd offset loc_710397B9
		dd offset loc_710397B9
		dd offset loc_710397B9
		dd offset loc_71039860
aSignedChar	db 'signed char',0      ; DATA XREF: .rdata:7105C0E0o
					; .rdata:7105C0E8o
aBool_0		db 'bool',0             ; DATA XREF: .rdata:7105C0F4o
aBoolean	db 'boolean',0          ; DATA XREF: .rdata:7105C0FCo
aChar		db 'char',0             ; DATA XREF: .rdata:7105C108o
					; .rdata:7105C2A0o
aByte		db 'byte',0             ; DATA XREF: .rdata:7105C110o
aDouble		db 'double',0           ; DATA XREF: .rdata:7105C11Co
					; .rdata:7105C124o
aLongDouble	db 'long double',0      ; DATA XREF: .rdata:7105C130o
					; .rdata:7105C138o
aFloat		db 'float',0            ; DATA XREF: .rdata:7105C144o
					; .rdata:7105C14Co
a__float128	db '__float128',0       ; DATA XREF: .rdata:7105C158o
					; .rdata:7105C160o
aUnsignedChar	db 'unsigned char',0    ; DATA XREF: .rdata:7105C16Co
					; .rdata:7105C174o
aInt_0		db 'int',0              ; DATA XREF: .rdata:off_7105C180o
					; .rdata:7105C188o
aUnsignedInt	db 'unsigned int',0     ; DATA XREF: .rdata:7105C194o
aUnsigned	db 'unsigned',0         ; DATA XREF: .rdata:7105C19Co
aLong		db 'long',0             ; DATA XREF: .rdata:7105C1BCo
					; .rdata:7105C1C4o ...
aUnsignedLong	db 'unsigned long',0    ; DATA XREF: .rdata:7105C1D0o
					; .rdata:7105C1D8o
a__int128	db '__int128',0         ; DATA XREF: .rdata:7105C1E4o
					; .rdata:7105C1ECo
aUnsigned__int1	db 'unsigned __int128',0 ; DATA XREF: .rdata:7105C1F8o
					; .rdata:7105C200o
aShort		db 'short',0            ; DATA XREF: .rdata:7105C248o
					; .rdata:7105C250o
aUnsignedShort	db 'unsigned short',0   ; DATA XREF: .rdata:7105C25Co
					; .rdata:7105C264o
aVoid		db 'void',0             ; DATA XREF: .rdata:7105C284o
					; .rdata:7105C28Co
aWchar_t	db 'wchar_t',0          ; DATA XREF: .rdata:7105C298o
aLongLong	db 'long long',0        ; DATA XREF: .rdata:7105C2ACo
aUnsignedLongLo	db 'unsigned long long',0 ; DATA XREF: .rdata:7105C2C0o
					; .rdata:7105C2C8o
aDecimal32	db 'decimal32',0        ; DATA XREF: .rdata:off_7105C2E8o
					; .rdata:7105C2F0o
aDecimal64	db 'decimal64',0        ; DATA XREF: .rdata:off_7105C2FCo
					; .rdata:7105C304o
aDecimal128	db 'decimal128',0       ; DATA XREF: .rdata:off_7105C310o
					; .rdata:7105C318o
aHalf		db 'half',0             ; DATA XREF: .rdata:off_7105C324o
					; .rdata:7105C32Co
aChar16_t	db 'char16_t',0         ; DATA XREF: .rdata:off_7105C338o
					; .rdata:7105C340o
aChar32_t	db 'char32_t',0         ; DATA XREF: .rdata:off_7105C34Co
					; .rdata:7105C354o
		align 20h
		dd offset aSignedChar	; "signed char"
		dd 0Bh
		dd offset aSignedChar	; "signed char"
		dd 0Bh,	0
		dd offset aBool_0	; "bool"
		dd 4
		dd offset aBoolean	; "boolean"
		dd 2 dup(7)
		dd offset aChar		; "char"
		dd 4
		dd offset aByte		; "byte"
		dd 4, 0
		dd offset aDouble	; "double"
		dd 6
		dd offset aDouble	; "double"
		dd 6, 8
		dd offset aLongDouble	; "long	double"
		dd 0Bh
		dd offset aLongDouble	; "long	double"
		dd 0Bh,	8
		dd offset aFloat	; "float"
		dd 5
		dd offset aFloat	; "float"
		dd 5, 8
		dd offset a__float128	; "__float128"
		dd 0Ah
		dd offset a__float128	; "__float128"
		dd 0Ah,	8
		dd offset aUnsignedChar	; "unsigned char"
		dd 0Dh
		dd offset aUnsignedChar	; "unsigned char"
		dd 0Dh,	0
off_7105C180	dd offset aInt_0	; DATA XREF: sub_71038460+3D6o
					; "int"
		dd 3
		dd offset aInt_0	; "int"
		dd 3, 1
		dd offset aUnsignedInt	; "unsigned int"
		dd 0Ch
		dd offset aUnsigned	; "unsigned"
		dd 8, 2, 5 dup(0)
		dd offset aLong		; "long"
		dd 4
		dd offset aLong		; "long"
		dd 4, 3
		dd offset aUnsignedLong	; "unsigned long"
		dd 0Dh
		dd offset aUnsignedLong	; "unsigned long"
		dd 0Dh,	4
		dd offset a__int128	; "__int128"
		dd 8
		dd offset a__int128	; "__int128"
		dd 8, 0
		dd offset aUnsigned__int1 ; "unsigned __int128"
		dd 11h
		dd offset aUnsigned__int1 ; "unsigned __int128"
		dd 11h,	10h dup(0)
		dd offset aShort	; "short"
		dd 5
		dd offset aShort	; "short"
		dd 5, 0
		dd offset aUnsignedShort ; "unsigned short"
		dd 0Eh
		dd offset aUnsignedShort ; "unsigned short"
		dd 0Eh,	6 dup(0)
		dd offset aVoid		; "void"
		dd 4
		dd offset aVoid		; "void"
		dd 4, 9
		dd offset aWchar_t	; "wchar_t"
		dd 7
		dd offset aChar		; "char"
		dd 4, 0
		dd offset aLongLong	; "long	long"
		dd 9
		dd offset aLong		; "long"
		dd 4, 5
		dd offset aUnsignedLongLo ; "unsigned long long"
		dd 12h
		dd offset aUnsignedLongLo ; "unsigned long long"
		dd 12h,	6
		dd offset a___		; "..."
		dd 3
		dd offset a___		; "..."
		dd 3, 0
off_7105C2E8	dd offset aDecimal32	; DATA XREF: sub_71036410+64Co
					; sub_71036410+651o
					; "decimal32"
		dd 9
		dd offset aDecimal32	; "decimal32"
		dd 9, 0
off_7105C2FC	dd offset aDecimal64	; DATA XREF: sub_71036410+50Bo
					; sub_71036410+510o
					; "decimal64"
		dd 9
		dd offset aDecimal64	; "decimal64"
		dd 9, 0
off_7105C310	dd offset aDecimal128	; DATA XREF: sub_71036410+4D1o
					; sub_71036410+4D6o
					; "decimal128"
		dd 0Ah
		dd offset aDecimal128	; "decimal128"
		dd 0Ah,	0
off_7105C324	dd offset aHalf		; DATA XREF: sub_71036410+616o
					; sub_71036410+61Bo
					; "half"
		dd 4
		dd offset aHalf		; "half"
		dd 4, 8
off_7105C338	dd offset aChar16_t	; DATA XREF: sub_71036410+439o
					; sub_71036410+43Eo
					; "char16_t"
		dd 8
		dd offset aChar16_t	; "char16_t"
		dd 8, 0
off_7105C34C	dd offset aChar32_t	; DATA XREF: sub_71036410+49Ao
					; sub_71036410+49Fo
					; "char32_t"
		dd 8
		dd offset aChar32_t	; "char32_t"
		dd 8, 0
aStdAllocator	db 'std::allocator',0   ; DATA XREF: .rdata:7105C500o
					; .rdata:7105C508o
aAllocator	db 'allocator',0        ; DATA XREF: .rdata:7105C510o
aStdBasic_strin	db 'std::basic_string',0 ; DATA XREF: .rdata:7105C51Co
					; .rdata:7105C524o
aBasic_string	db 'basic_string',0     ; DATA XREF: .rdata:7105C52Co
					; .rdata:7105C548o
aStdString	db 'std::string',0      ; DATA XREF: .rdata:7105C538o
aStdBasic_str_0	db 'std::basic_string<char, std::char_traits<char>, std::allocator<ch'
					; DATA XREF: .rdata:7105C540o
		db 'ar> >',0
aStdIstream	db 'std::istream',0     ; DATA XREF: .rdata:7105C554o
aStdBasic_istre	db 'std::basic_istream<char, std::char_traits<char> >',0
					; DATA XREF: .rdata:7105C55Co
aBasic_istream	db 'basic_istream',0    ; DATA XREF: .rdata:7105C564o
aStdOstream	db 'std::ostream',0     ; DATA XREF: .rdata:7105C570o
		align 4
aStdBasic_ostre	db 'std::basic_ostream<char, std::char_traits<char> >',0
					; DATA XREF: .rdata:7105C578o
aBasic_ostream	db 'basic_ostream',0    ; DATA XREF: .rdata:7105C580o
aStdIostream	db 'std::iostream',0    ; DATA XREF: .rdata:7105C58Co
		align 4
aStdBasic_iostr	db 'std::basic_iostream<char, std::char_traits<char> >',0
					; DATA XREF: .rdata:7105C594o
aBasic_iostream	db 'basic_iostream',0   ; DATA XREF: .rdata:7105C59Co
		align 10h
aT		db 't',0                ; DATA XREF: sub_71035D30+4Ao
					; sub_71035D30+55o
		align 4
		dd offset aStd		; "std"
		dd 3
		dd offset aStd		; "std"
		dd 3, 2	dup(0)
		dd 61h
		dd offset aStdAllocator	; "std::allocator"
		dd 0Eh
		dd offset aStdAllocator	; "std::allocator"
		dd 0Eh
		dd offset aAllocator	; "allocator"
		dd 9, 62h
		dd offset aStdBasic_strin ; "std::basic_string"
		dd 11h
		dd offset aStdBasic_strin ; "std::basic_string"
		dd 11h
		dd offset aBasic_string	; "basic_string"
		dd 0Ch,	73h
		dd offset aStdString	; "std::string"
		dd 0Bh
		dd offset aStdBasic_str_0 ; "std::basic_string<char, std::char_trait"...
		dd 46h
		dd offset aBasic_string	; "basic_string"
		dd 0Ch,	69h
		dd offset aStdIstream	; "std::istream"
		dd 0Ch
		dd offset aStdBasic_istre ; "std::basic_istream<char, std::char_trai"...
		dd 31h
		dd offset aBasic_istream ; "basic_istream"
		dd 0Dh,	6Fh
		dd offset aStdOstream	; "std::ostream"
		dd 0Ch
		dd offset aStdBasic_ostre ; "std::basic_ostream<char, std::char_trai"...
		dd 31h
		dd offset aBasic_ostream ; "basic_ostream"
		dd 0Dh,	64h
		dd offset aStdIostream	; "std::iostream"
		dd 0Dh
		dd offset aStdBasic_iostr ; "std::basic_iostream<char, std::char_tra"...
		dd 32h
		dd offset aBasic_iostream ; "basic_iostream"
		dd 0Eh
dword_7105C5A4	dd 26004E61h, 5361003Dh, 61003D00h, 64610061h, 61002600h
					; DATA XREF: sub_71035D30:loc_71035D75o
					; sub_71035D30+6Co ...
		dd 2928006Eh, 6D6300h, 6F63002Ch, 64007E00h, 3D2F0056h
		dd 616400h, 656C6564h, 5D5B6574h, 656400h, 6C64002Ah, 6C656400h
		dd 657465h, 2E007464h, 766400h,	4F65002Fh, 3D5E00h, 5E006F65h
		dd 716500h, 67003D3Dh, 3D3E0065h, 746700h, 536C003Eh, 3D3C3C00h
		dd 656C00h, 6C003D3Ch, 3C3C0073h, 746C00h, 496D003Ch, 3D2D00h
		dd 2A004C6Dh, 696D003Dh, 6D002D00h, 6D6D006Ch, 2D2D00h
		dd 6E00616Eh, 5D5B7765h, 656E00h, 6E003D21h, 746E0067h
		dd 6E002100h, 656E0077h, 526F0077h, 3D7C00h, 7C006F6Fh
		dd 726F007Ch, 70007C00h, 3D2B004Ch, 6C7000h, 6D70002Bh
		dd 2A3E2D00h, 707000h, 70002B2Bh, 74700073h, 3E2D00h, 3F007571h
		dd 4D7200h, 72003D25h, 3E3E0053h, 6D72003Dh, 72002500h
		dd 3E3E0073h, 7A697300h, 20666F65h, 7A7300h, 61007461h
		dd 6E67696Ch, 20666Fh, 7A61h, 6	dup(0)
off_7105C6E0	dd offset dword_7105C5A4 ; DATA	XREF: sub_71036C30+65o
					; sub_71036C30+6Br
		dd offset dword_7105C5A4+3
		dd 2 dup(2)
		dd offset dword_7105C5A4+6
		dd offset dword_7105C5A4+9
		dd 1, 2
		dd offset dword_7105C5A4+0Bh
		dd offset asc_7105BF0B	; "&&"
		dd 2 dup(2)
		dd offset dword_7105C5A4+0Eh
		dd offset dword_7105C5A4+11h
		dd 2 dup(1)
		dd offset dword_7105C5A4+13h
		dd offset dword_7105C5A4+11h
		dd 1, 2
		dd offset aCl		; "cl"
		dd offset dword_7105C5A4+16h
		dd 2 dup(2)
		dd offset dword_7105C5A4+19h
		dd offset dword_7105C5A4+1Ch
		dd 1, 2
		dd offset dword_7105C5A4+1Eh
		dd offset dword_7105C5A4+21h
		dd 2 dup(1)
		dd offset dword_7105C5A4+23h
		dd offset dword_7105C5A4+26h
		dd 2 dup(2)
		dd offset dword_7105C5A4+29h
		dd offset dword_7105C5A4+2Ch
		dd 8, 1
		dd offset dword_7105C5A4+35h
		dd offset dword_7105C5A4+38h
		dd 2 dup(1)
		dd offset dword_7105C5A4+3Ah
		dd offset dword_7105C5A4+3Dh
		dd 6, 1
		dd offset dword_7105C5A4+44h
		dd offset dword_7105C5A4+47h
		dd 1, 2
		dd offset dword_7105C5A4+49h
		dd offset dword_7105C5A4+4Ch
		dd 1, 2
		dd offset dword_7105C5A4+4Eh
		dd offset dword_7105C5A4+51h
		dd 2 dup(2)
		dd offset dword_7105C5A4+54h
		dd offset dword_7105C5A4+57h
		dd 1, 2
		dd offset dword_7105C5A4+59h
		dd offset dword_7105C5A4+5Ch
		dd 2 dup(2)
		dd offset dword_7105C5A4+5Fh
		dd offset dword_7105C5A4+62h
		dd 2 dup(2)
		dd offset dword_7105C5A4+65h
		dd offset dword_7105C5A4+68h
		dd 1, 2
		dd offset aIx		; "ix"
		dd offset asc_7105BC3E	; "[]"
		dd 2 dup(2)
		dd offset dword_7105C5A4+6Ah
		dd offset dword_7105C5A4+6Dh
		dd 3, 2
		dd offset dword_7105C5A4+71h
		dd offset dword_7105C5A4+74h
		dd 2 dup(2)
		dd offset dword_7105C5A4+77h
		dd offset dword_7105C5A4+7Ah
		dd 2 dup(2)
		dd offset dword_7105C5A4+7Dh
		dd offset dword_7105C5A4+80h
		dd 1, 2
		dd offset dword_7105C5A4+82h
		dd offset dword_7105C5A4+85h
		dd 2 dup(2)
		dd offset dword_7105C5A4+88h
		dd offset dword_7105C5A4+8Bh
		dd 2 dup(2)
		dd offset dword_7105C5A4+8Eh
		dd offset dword_7105C5A4+91h
		dd 1, 2
		dd offset dword_7105C5A4+93h
		dd offset dword_7105C5A4+38h
		dd 1, 2
		dd offset dword_7105C5A4+96h
		dd offset dword_7105C5A4+99h
		dd 2, 1
		dd offset dword_7105C5A4+9Ch
		dd offset dword_7105C5A4+9Fh
		dd 5, 1
		dd offset dword_7105C5A4+0A5h
		dd offset dword_7105C5A4+0A8h
		dd 2 dup(2)
		dd offset dword_7105C5A4+0ABh
		dd offset dword_7105C5A4+91h
		dd 2 dup(1)
		dd offset dword_7105C5A4+0AEh
		dd offset dword_7105C5A4+0B1h
		dd 2 dup(1)
		dd offset dword_7105C5A4+0B3h
		dd offset dword_7105C5A4+0B6h
		dd 3, 1
		dd offset dword_7105C5A4+0BAh
		dd offset dword_7105C5A4+0BDh
		dd 2 dup(2)
		dd offset dword_7105C5A4+0C0h
		dd offset dword_7105C5A4+0C3h
		dd 2 dup(2)
		dd offset dword_7105C5A4+0C6h
		dd offset dword_7105C5A4+0C9h
		dd 1, 2
		dd offset dword_7105C5A4+0CBh
		dd offset dword_7105C5A4+0CEh
		dd 2 dup(2)
		dd offset dword_7105C5A4+0D1h
		dd offset dword_7105C5A4+0D4h
		dd 1, 2
		dd offset dword_7105C5A4+0D6h
		dd offset dword_7105C5A4+0D9h
		dd 3, 2
		dd offset dword_7105C5A4+0DDh
		dd offset dword_7105C5A4+0E0h
		dd 2, 1
		dd offset dword_7105C5A4+0E3h
		dd offset dword_7105C5A4+0D4h
		dd 2 dup(1)
		dd offset dword_7105C5A4+0E6h
		dd offset dword_7105C5A4+0E9h
		dd 2 dup(2)
		dd offset dword_7105C5A4+0ECh
		dd offset dword_7105C5A4+0EFh
		dd 1, 3
		dd offset dword_7105C5A4+0F1h
		dd offset dword_7105C5A4+0F4h
		dd 2 dup(2)
		dd offset dword_7105C5A4+0F7h
		dd offset dword_7105C5A4+0FAh
		dd 3, 2
		dd offset dword_7105C5A4+0FEh
		dd offset dword_7105C5A4+101h
		dd 1, 2
		dd offset dword_7105C5A4+103h
		dd offset dword_7105C5A4+106h
		dd 2 dup(2)
		dd offset aSt		; "st"
		dd offset dword_7105C5A4+109h
		dd 7, 1
		dd offset dword_7105C5A4+111h
		dd offset dword_7105C5A4+109h
		dd 7, 1
		dd offset dword_7105C5A4+114h
		dd offset dword_7105C5A4+117h
		dd 8, 1
		dd offset dword_7105C5A4+120h
		dd offset dword_7105C5A4+117h
		dd 8, 1, 8 dup(0)
off_7105CA40	dd offset TlsCallback_0	; DATA XREF: sub_71001040:loc_71001137r
aMingwW64Runtim	db 'Mingw-w64 runtime failure:',0Ah,0 ; DATA XREF: sub_71039E00+1Do
; char aAddressPHasNoI[]
aAddressPHasNoI	db 'Address %p has no image-section',0 ; DATA XREF: sub_71039E60+13Ao
; char aVirtualqueryFa[]
aVirtualqueryFa	db '  VirtualQuery failed for %d bytes at address %p',0
					; DATA XREF: sub_71039E60+126o
					; sub_71039FB0+253o
		align 4
; char aUnknownPseud_0[]
aUnknownPseud_0	db '  Unknown pseudo relocation protocol version %d.',0Ah,0
					; DATA XREF: sub_71039FB0+267o
		align 4
; char aUnknownPseudoR[]
aUnknownPseudoR	db '  Unknown pseudo relocation bit size %d.',0Ah,0
					; DATA XREF: sub_71039FB0+F4o
		align 4
off_7105CB14	dd offset dword_7105E040 ; DATA	XREF: .text:7103A358o
		dd offset dword_7105E0A0
aMsvcrt_dll:				; DATA XREF: .text:loc_7103AA55o
		unicode	0, <msvcrt.dll>,0
		align 8
off_7105CB38	dd offset off_7105DD88	; DATA XREF: .rdata:7105D484o
		dd offset a10qsvgcircle	; "10QSvgCircle"
		dd offset off_7105CB64
off_7105CB44	dd offset off_7105DD88	; DATA XREF: .rdata:7105D4A4o
		dd offset a10qsvgswitch	; "10QSvgSwitch"
		dd offset off_7105CC8C
off_7105CB50	dd offset off_7105DD88	; DATA XREF: .rdata:7105D4C4o
					; .rdata:7105D5ACo
		dd offset a10qsvgwidget	; "10QSvgWidget"
		dd offset off_7105CD60
off_7105CB5C	dd offset off_7105DD28	; DATA XREF: .rdata:7105CBE4o
		dd offset a11qobjectdata ; "11QObjectData"
off_7105CB64	dd offset off_7105DD88	; DATA XREF: .rdata:7105CB40o
					; .rdata:7105D5E4o
		dd offset a11qsvgellipse ; "11QSvgEllipse"
		dd offset off_7105CDA4
off_7105CB70	dd offset off_7105DD88	; DATA XREF: .rdata:7105D604o
		dd offset a11qsvgpolygon ; "11QSvgPolygon"
		dd offset off_7105CDA4
off_7105CB7C	dd offset off_7105DD28	; DATA XREF: .rdata:7105CBD8o
					; .rdata:7105CD78o
		dd offset a12qpaintdevice ; "12QPaintDevice"
off_7105CB84	dd offset off_7105DD28	; DATA XREF: .rdata:7105CC34o
		dd offset a12qpaintengine ; "12QPaintEngine"
off_7105CB8C	dd offset off_7105DD88	; DATA XREF: .rdata:7105D624o
		dd offset a12qsvgpolyline ; "12QSvgPolyline"
		dd offset off_7105CDA4
off_7105CB98	dd offset off_7105DD88	; DATA XREF: .rdata:7105D644o
		dd offset a12qsvgrenderer ; "12QSvgRenderer"
		dd offset off_7105CD38
off_7105CBA4	dd offset off_7105DD28	; DATA XREF: .rdata:7105CC18o
		dd offset a13qgraphicsite ; "13QGraphicsItem"
off_7105CBAC	dd offset off_7105DD88	; DATA XREF: .rdata:7105D684o
		dd offset a13qsvganimatio ; "13QSvgAnimation"
		dd offset off_7105CDA4
off_7105CBB8	dd offset off_7105DD88	; DATA XREF: .rdata:7105D6A4o
		dd offset a13qsvgfillstyl ; "13QSvgFillStyle"
		dd offset off_7105CC98
off_7105CBC4	dd offset off_7105DD88	; DATA XREF: .rdata:7105D6C4o
		dd offset a13qsvgfontstyl ; "13QSvgFontStyle"
		dd offset off_7105CC98
off_7105CBD0	dd offset off_7105DD88	; DATA XREF: .rdata:7105D6E4o
		dd offset a13qsvggenerato ; "13QSvgGenerator"
		dd offset off_7105CB7C
off_7105CBDC	dd offset off_7105DD88	; DATA XREF: .rdata:7105CBF8o
					; .rdata:7105CCD8o
		dd offset a14qobjectpriva ; "14QObjectPrivate"
		dd offset off_7105CB5C
off_7105CBE8	dd offset off_7105DD28	; DATA XREF: .rdata:7105CCA0o
					; .rdata:7105CD94o ...
		dd offset a14qsvgrefcount ; "14QSvgRefCounted"
off_7105CBF0	dd offset off_7105DD88	; DATA XREF: .rdata:7105CCB8o
		dd offset a14qwidgetpriva ; "14QWidgetPrivate"
		dd offset off_7105CBDC
		align 10h
off_7105CC00	dd offset off_7105DDC8	; DATA XREF: .rdata:7105CC4Co
		dd offset a15qgraphicsobj ; "15QGraphicsObject"
		dd 0
		dd 2
		dd offset off_7105CD38
		dd 2
		dd offset off_7105CBA4
		dd 802h
off_7105CC20	dd offset off_7105DD88	; DATA XREF: .rdata:7105D734o
		dd offset a15qsvgcompopst ; "15QSvgCompOpStyle"
		dd offset off_7105CC98
off_7105CC2C	dd offset off_7105DD88	; DATA XREF: .rdata:7105D764o
		dd offset a15qsvgpainteng ; "15QSvgPaintEngine"
		dd offset off_7105CB84
off_7105CC38	dd offset off_7105DD88	; DATA XREF: .rdata:7105D7E4o
		dd offset a15qsvgstrokest ; "15QSvgStrokeStyle"
		dd offset off_7105CC98
off_7105CC44	dd offset off_7105DD88	; DATA XREF: .rdata:7105D804o
					; .rdata:7105D848o
		dd offset a16qgraphicssvg ; "16QGraphicsSvgItem"
		dd offset off_7105CC00
off_7105CC50	dd offset off_7105DD88	; DATA XREF: .rdata:7105D8E4o
		dd offset a16qsvganimatec ; "16QSvgAnimateColor"
		dd offset off_7105CC98
off_7105CC5C	dd offset off_7105DD88	; DATA XREF: .rdata:7105D904o
		dd offset a16qsvgopacitys ; "16QSvgOpacityStyle"
		dd offset off_7105CC98
off_7105CC68	dd offset off_7105DD88	; DATA XREF: .rdata:7105D924o
		dd offset a16qsvgqualitys ; "16QSvgQualityStyle"
		dd offset off_7105CC98
off_7105CC74	dd offset off_7105DD88	; DATA XREF: .rdata:7105D944o
		dd offset a16qsvgtinydocu ; "16QSvgTinyDocument"
		dd offset off_7105CC8C
off_7105CC80	dd offset off_7105DD88	; DATA XREF: .rdata:7105D964o
		dd offset a17qsvggradient ; "17QSvgGradientStyle"
		dd offset off_7105CCFC
off_7105CC8C	dd offset off_7105DD88	; DATA XREF: .rdata:7105CB4Co
					; .rdata:7105CC7Co ...
		dd offset a17qsvgstructur ; "17QSvgStructureNode"
		dd offset off_7105CDA4
off_7105CC98	dd offset off_7105DD88	; DATA XREF: .rdata:7105CBC0o
					; .rdata:7105CBCCo ...
		dd offset a17qsvgstylepro ; "17QSvgStyleProperty"
		dd offset off_7105CBE8
off_7105CCA4	dd offset off_7105DD88	; DATA XREF: .rdata:7105D9C4o
		dd offset a17qsvgstylesel ; "17QSvgStyleSelector"
		dd offset off_7105CE28
off_7105CCB0	dd offset off_7105DD88	; DATA XREF: .rdata:7105DA04o
		dd offset a17qsvgwidgetpr ; "17QSvgWidgetPrivate"
		dd offset off_7105CBF0
off_7105CCBC	dd offset off_7105DD88	; DATA XREF: .rdata:7105DA1Co
		dd offset a18qsvgtransfor ; "18QSvgTransformStyle"
		dd offset off_7105CC98
off_7105CCC8	dd offset off_7105DD28	; DATA XREF: .rdata:7105CD1Co
					; .rdata:7105DA3Co
		dd offset a19qpaintengine ; "19QPaintEnginePrivate"
off_7105CCD0	dd offset off_7105DD88	; DATA XREF: .rdata:7105DA54o
		dd offset a19qsvgrenderer ; "19QSvgRendererPrivate"
		dd offset off_7105CBDC
off_7105CCDC	dd offset off_7105DD88	; DATA XREF: .rdata:7105DA64o
		dd offset a19qsvgsolidcol ; "19QSvgSolidColorStyle"
		dd offset off_7105CCFC
off_7105CCE8	dd offset off_7105DD28	; DATA XREF: .rdata:7105CD28o
		dd offset a20qgraphicsite ; "20QGraphicsItemPrivate"
off_7105CCF0	dd offset off_7105DD88	; DATA XREF: .rdata:7105DA84o
		dd offset a20qsvganimatet ; "20QSvgAnimateTransform"
		dd offset off_7105CC98
off_7105CCFC	dd offset off_7105DD88	; DATA XREF: .rdata:7105CC88o
					; .rdata:7105CCE4o ...
		dd offset a21qsvgfillstyl ; "21QSvgFillStyleProperty"
		dd offset off_7105CC98
off_7105CD08	dd offset off_7105DD88	; DATA XREF: .rdata:7105DAC4o
		dd offset a21qsvgviewport ; "21QSvgViewportFillStyle"
		dd offset off_7105CC98
off_7105CD14	dd offset off_7105DD88	; DATA XREF: .rdata:7105DAE4o
		dd offset a22qsvgpainteng ; "22QSvgPaintEnginePrivate"
		dd offset off_7105CCC8
off_7105CD20	dd offset off_7105DD88	; DATA XREF: .rdata:7105DB04o
		dd offset a23qgraphicssvg ; "23QGraphicsSvgItemPrivate"
		dd offset off_7105CCE8
off_7105CD2C	dd offset off_7105DD88	; DATA XREF: .rdata:7105DB64o
		dd offset a5qsvgg	; "5QSvgG"
		dd offset off_7105CC8C
off_7105CD38	dd offset off_7105DD28	; DATA XREF: .rdata:7105CBA0o
					; .rdata:7105CC10o ...
		dd offset a7qobject	; "7QObject"
off_7105CD40	dd offset off_7105DD88	; DATA XREF: .rdata:7105DB84o
		dd offset a7qsvgarc	; "7QSvgArc"
		dd offset off_7105CDA4
off_7105CD4C	dd offset off_7105DD88	; DATA XREF: .rdata:7105DBA4o
		dd offset a7qsvguse	; "7QSvgUse"
		dd offset off_7105CDA4
		align 10h
off_7105CD60	dd offset off_7105DDC8	; DATA XREF: .rdata:7105CB58o
		dd offset a7qwidget	; "7QWidget"
		dd 0
		dd 2
		dd offset off_7105CD38
		dd 2
		dd offset off_7105CB7C
		dd 802h
off_7105CD80	dd offset off_7105DD88	; DATA XREF: .rdata:7105DBC4o
		dd offset a8qsvgdefs	; "8QSvgDefs"
		dd offset off_7105CC8C
off_7105CD8C	dd offset off_7105DD88	; DATA XREF: .rdata:7105DBE4o
		dd offset a8qsvgfont	; "8QSvgFont"
		dd offset off_7105CBE8
off_7105CD98	dd offset off_7105DD88	; DATA XREF: .rdata:7105DC04o
		dd offset a8qsvgline	; "8QSvgLine"
		dd offset off_7105CDA4
off_7105CDA4	dd offset off_7105DD28	; DATA XREF: .rdata:7105CB6Co
					; .rdata:7105CB78o ...
		dd offset a8qsvgnode	; "8QSvgNode"
off_7105CDAC	dd offset off_7105DD88	; DATA XREF: .rdata:7105DC44o
		dd offset a8qsvgpath	; "8QSvgPath"
		dd offset off_7105CDA4
off_7105CDB8	dd offset off_7105DD88	; DATA XREF: .rdata:7105DC64o
		dd offset a8qsvgrect	; "8QSvgRect"
		dd offset off_7105CDA4
off_7105CDC4	dd offset off_7105DD88	; DATA XREF: .rdata:7105DC84o
		dd offset a8qsvgtext	; "8QSvgText"
		dd offset off_7105CDA4
off_7105CDD0	dd offset off_7105DD88	; DATA XREF: .rdata:7105DCA4o
		dd offset a9qsvgimage	; "9QSvgImage"
		dd offset off_7105CDA4
off_7105CDDC	dd offset off_7105DD88	; DATA XREF: .rdata:7105DCC4o
		dd offset a9qsvgtspan	; "9QSvgTspan"
		dd offset off_7105CDA4
off_7105CDE8	dd offset off_7105DD88	; DATA XREF: .rdata:7105DCE4o
		dd offset a9qsvgvideo	; "9QSvgVideo"
		dd offset off_7105CDA4
off_7105CDF4	dd offset off_7105DD28	; DATA XREF: sub_710525B0+351o
					; .rdata:7105DD04o
		dd offset aN10__cxxabiv11 ; "N10__cxxabiv115__forced_unwindE"
off_7105CDFC	dd offset off_7105DD88	; DATA XREF: .rdata:7105CE18o
					; .rdata:7105CE24o ...
		dd offset aN10__cxxabiv_0 ; "N10__cxxabiv117__class_type_infoE"
		dd offset off_7105CE68
off_7105CE08	dd offset off_7105DD28	; DATA XREF: sub_710525B0+547o
					; .rdata:7105DD64o
		dd offset aN10__cxxabiv_1 ; "N10__cxxabiv119__foreign_exceptionE"
off_7105CE10	dd offset off_7105DD88	; DATA XREF: .rdata:7105DD84o
		dd offset aN10__cxxabiv12 ; "N10__cxxabiv120__si_class_type_infoE"
		dd offset off_7105CDFC
off_7105CE1C	dd offset off_7105DD88	; DATA XREF: .rdata:7105DDC4o
		dd offset aN10__cxxabiv_2 ; "N10__cxxabiv121__vmi_class_type_infoE"
		dd offset off_7105CDFC
off_7105CE28	dd offset off_7105DD28	; DATA XREF: .rdata:7105CCACo
		dd offset aN4qcss13styles ; "N4QCss13StyleSelectorE"
off_7105CE30	dd offset off_7105DD88	; DATA XREF: sub_710517F0+212o
					; sub_71051A80+1C1o ...
		dd offset aN9__gnu_cxx24_ ; "N9__gnu_cxx24__concurrence_lock_errorE"
		dd offset off_7105CE60
off_7105CE3C	dd offset off_7105DD88	; DATA XREF: sub_7104FB00+78o
					; sub_710517F0+1E8o ...
		dd offset aN9__gnu_cxx26_ ; "N9__gnu_cxx26__concurrence_unlock_error"...
		dd offset off_7105CE60
off_7105CE48	dd offset off_7105DD88	; DATA XREF: sub_71051E8D+A8o
					; sub_71051E8D+D0o ...
		dd offset aSt13bad_except ; "St13bad_exception"
		dd offset off_7105CE60
off_7105CE54	dd offset off_7105DD88	; DATA XREF: sub_710517F0+8Eo
					; .text:71052C24o ...
		dd offset aSt9bad_alloc	; "St9bad_alloc"
		dd offset off_7105CE60
off_7105CE60	dd offset off_7105DD28	; DATA XREF: .text:71053D88o
					; .rdata:7105CE38o ...
		dd offset aSt9exception	; "St9exception"
off_7105CE68	dd offset off_7105DD28	; DATA XREF: .rdata:7105CE04o
					; .rdata:7105DE84o
		dd offset aSt9type_info	; "St9type_info"
a10qsvgcircle	db '10QSvgCircle',0     ; DATA XREF: .rdata:7105CB3Co
		align 10h
a10qsvgswitch	db '10QSvgSwitch',0     ; DATA XREF: .rdata:7105CB48o
		align 10h
a10qsvgwidget	db '10QSvgWidget',0     ; DATA XREF: .rdata:7105CB54o
		align 10h
a11qobjectdata	db '11QObjectData',0    ; DATA XREF: .rdata:7105CB60o
		align 10h
a11qsvgellipse	db '11QSvgEllipse',0    ; DATA XREF: .rdata:7105CB68o
		align 10h
a11qsvgpolygon	db '11QSvgPolygon',0    ; DATA XREF: .rdata:7105CB74o
		align 10h
a12qpaintdevice	db '12QPaintDevice',0   ; DATA XREF: .rdata:7105CB80o
		align 10h
a12qpaintengine	db '12QPaintEngine',0   ; DATA XREF: .rdata:7105CB88o
		align 10h
a12qsvgpolyline	db '12QSvgPolyline',0   ; DATA XREF: .rdata:7105CB90o
		align 10h
a12qsvgrenderer	db '12QSvgRenderer',0   ; DATA XREF: .rdata:7105CB9Co
		align 10h
a13qgraphicsite	db '13QGraphicsItem',0  ; DATA XREF: .rdata:7105CBA8o
a13qsvganimatio	db '13QSvgAnimation',0  ; DATA XREF: .rdata:7105CBB0o
a13qsvgfillstyl	db '13QSvgFillStyle',0  ; DATA XREF: .rdata:7105CBBCo
a13qsvgfontstyl	db '13QSvgFontStyle',0  ; DATA XREF: .rdata:7105CBC8o
a13qsvggenerato	db '13QSvgGenerator',0  ; DATA XREF: .rdata:7105CBD4o
a14qobjectpriva	db '14QObjectPrivate',0 ; DATA XREF: .rdata:7105CBE0o
		align 4
a14qsvgrefcount	db '14QSvgRefCounted',0 ; DATA XREF: .rdata:7105CBECo
		align 4
a14qwidgetpriva	db '14QWidgetPrivate',0 ; DATA XREF: .rdata:7105CBF4o
		align 4
a15qgraphicsobj	db '15QGraphicsObject',0 ; DATA XREF: .rdata:7105CC04o
		align 10h
a15qsvgcompopst	db '15QSvgCompOpStyle',0 ; DATA XREF: .rdata:7105CC24o
		align 4
a15qsvgpainteng	db '15QSvgPaintEngine',0 ; DATA XREF: .rdata:7105CC30o
		align 4
a15qsvgstrokest	db '15QSvgStrokeStyle',0 ; DATA XREF: .rdata:7105CC3Co
		align 4
a16qgraphicssvg	db '16QGraphicsSvgItem',0 ; DATA XREF: .rdata:7105CC48o
		align 10h
a16qsvganimatec	db '16QSvgAnimateColor',0 ; DATA XREF: .rdata:7105CC54o
		align 4
a16qsvgopacitys	db '16QSvgOpacityStyle',0 ; DATA XREF: .rdata:7105CC60o
		align 4
a16qsvgqualitys	db '16QSvgQualityStyle',0 ; DATA XREF: .rdata:7105CC6Co
		align 4
a16qsvgtinydocu	db '16QSvgTinyDocument',0 ; DATA XREF: .rdata:7105CC78o
		align 10h
a17qsvggradient	db '17QSvgGradientStyle',0 ; DATA XREF: .rdata:7105CC84o
a17qsvgstructur	db '17QSvgStructureNode',0 ; DATA XREF: .rdata:7105CC90o
a17qsvgstylepro	db '17QSvgStyleProperty',0 ; DATA XREF: .rdata:7105CC9Co
a17qsvgstylesel	db '17QSvgStyleSelector',0 ; DATA XREF: .rdata:7105CCA8o
a17qsvgwidgetpr	db '17QSvgWidgetPrivate',0 ; DATA XREF: .rdata:7105CCB4o
a18qsvgtransfor	db '18QSvgTransformStyle',0 ; DATA XREF: .rdata:7105CCC0o
		align 4
a19qpaintengine	db '19QPaintEnginePrivate',0 ; DATA XREF: .rdata:7105CCCCo
		align 4
a19qsvgrenderer	db '19QSvgRendererPrivate',0 ; DATA XREF: .rdata:7105CCD4o
		align 4
a19qsvgsolidcol	db '19QSvgSolidColorStyle',0 ; DATA XREF: .rdata:7105CCE0o
		align 4
a20qgraphicsite	db '20QGraphicsItemPrivate',0 ; DATA XREF: .rdata:7105CCECo
		align 4
a20qsvganimatet	db '20QSvgAnimateTransform',0 ; DATA XREF: .rdata:7105CCF4o
		align 4
a21qsvgfillstyl	db '21QSvgFillStyleProperty',0 ; DATA XREF: .rdata:7105CD00o
a21qsvgviewport	db '21QSvgViewportFillStyle',0 ; DATA XREF: .rdata:7105CD0Co
a22qsvgpainteng	db '22QSvgPaintEnginePrivate',0 ; DATA XREF: .rdata:7105CD18o
		align 10h
a23qgraphicssvg	db '23QGraphicsSvgItemPrivate',0 ; DATA XREF: .rdata:7105CD24o
		align 4
a5qsvgg		db '5QSvgG',0           ; DATA XREF: .rdata:7105CD30o
		align 4
a7qobject	db '7QObject',0         ; DATA XREF: .rdata:7105CD3Co
		align 10h
a7qsvgarc	db '7QSvgArc',0         ; DATA XREF: .rdata:7105CD44o
		align 4
a7qsvguse	db '7QSvgUse',0         ; DATA XREF: .rdata:7105CD50o
		align 4
a7qwidget	db '7QWidget',0         ; DATA XREF: .rdata:7105CD64o
		align 4
a8qsvgdefs	db '8QSvgDefs',0        ; DATA XREF: .rdata:7105CD84o
		align 10h
a8qsvgfont	db '8QSvgFont',0        ; DATA XREF: .rdata:7105CD90o
		align 4
a8qsvgline	db '8QSvgLine',0        ; DATA XREF: .rdata:7105CD9Co
		align 4
a8qsvgnode	db '8QSvgNode',0        ; DATA XREF: .rdata:7105CDA8o
		align 4
a8qsvgpath	db '8QSvgPath',0        ; DATA XREF: .rdata:7105CDB0o
		align 10h
a8qsvgrect	db '8QSvgRect',0        ; DATA XREF: .rdata:7105CDBCo
		align 4
a8qsvgtext	db '8QSvgText',0        ; DATA XREF: .rdata:7105CDC8o
		align 4
a9qsvgimage	db '9QSvgImage',0       ; DATA XREF: .rdata:7105CDD4o
		align 4
a9qsvgtspan	db '9QSvgTspan',0       ; DATA XREF: .rdata:7105CDE0o
		align 10h
a9qsvgvideo	db '9QSvgVideo',0       ; DATA XREF: .rdata:7105CDECo
		align 10h
aN10__cxxabiv11	db 'N10__cxxabiv115__forced_unwindE',0 ; DATA XREF: .rdata:7105CDF8o
aN10__cxxabiv_0	db 'N10__cxxabiv117__class_type_infoE',0 ; DATA XREF: .rdata:7105CE00o
		align 20h
aN10__cxxabiv_1	db 'N10__cxxabiv119__foreign_exceptionE',0 ; DATA XREF: .rdata:7105CE0Co
		align 20h
aN10__cxxabiv12	db 'N10__cxxabiv120__si_class_type_infoE',0 ; DATA XREF: .rdata:7105CE14o
		align 20h
aN10__cxxabiv_2	db 'N10__cxxabiv121__vmi_class_type_infoE',0 ; DATA XREF: .rdata:7105CE20o
		align 20h
aN4qcss13styles	db 'N4QCss13StyleSelectorE',0 ; DATA XREF: .rdata:7105CE2Co
		align 10h
aN9__gnu_cxx24_	db 'N9__gnu_cxx24__concurrence_lock_errorE',0 ; DATA XREF: .rdata:7105CE34o
		align 20h
aN9__gnu_cxx26_	db 'N9__gnu_cxx26__concurrence_unlock_errorE',0
					; DATA XREF: .rdata:7105CE40o
		align 20h
aSt13bad_except	db 'St13bad_exception',0 ; DATA XREF: .rdata:7105CE4Co
		align 4
aSt9bad_alloc	db 'St9bad_alloc',0     ; DATA XREF: .rdata:7105CE58o
		align 4
aSt9exception	db 'St9exception',0     ; DATA XREF: .rdata:7105CE64o
		align 4
aSt9type_info	db 'St9type_info',0     ; DATA XREF: .rdata:7105CE6Co
		align 4
		dd 8 dup(0)
		dd offset off_7105CB38
off_7105D488	dd offset sub_7103B740	; DATA XREF: sub_7100B130+1B7o
		dd offset sub_7103B710
		dd offset sub_710035C0
		dd offset sub_710014F0
		dd offset sub_71006360
		dd offset sub_710227E0
		dd 0
		dd offset off_7105CB44
off_7105D4A8	dd offset sub_7103B870	; DATA XREF: sub_710246E0+4Eo
					; .text:7102481Eo ...
		dd offset sub_7103B760
		dd offset sub_71024B70
		dd offset sub_71024180
		dd offset sub_710248C0
		dd offset sub_710227E0
; Exported entry 134. _ZTV10QSvgWidget
		public _ZTV10QSvgWidget
_ZTV10QSvgWidget dd 0
		dd offset off_7105CB50
off_7105D4C8	dd offset _ZNK10QSvgWidget10metaObjectEv ; DATA	XREF: _ZN10QSvgWidgetD1Ev+7o
					; _ZN10QSvgWidgetD2Ev+7o ...
		dd offset _ZN10QSvgWidget11qt_metacastEPKc
		dd offset _ZN10QSvgWidget11qt_metacallEN11QMetaObject4CallEiPPv
		dd offset _ZN10QSvgWidgetD1Ev
		dd offset _ZN10QSvgWidgetD0Ev
		dd offset _ZN7QWidget5eventEP6QEvent
		dd offset _ZN7QObject11eventFilterEPS_P6QEvent
		dd offset _ZN7QObject10timerEventEP11QTimerEvent
		dd offset _ZN7QObject10childEventEP11QChildEvent
		dd offset _ZN7QObject11customEventEP6QEvent
		dd offset _ZN7QObject13connectNotifyEPKc
		dd offset _ZN7QObject16disconnectNotifyEPKc
		dd offset _ZNK7QWidget7devTypeEv
		dd offset _ZN7QWidget10setVisibleEb
		dd offset _ZNK10QSvgWidget8sizeHintEv
		dd offset _ZNK7QWidget15minimumSizeHintEv
		dd offset _ZNK7QWidget14heightForWidthEi
		dd offset _ZNK7QWidget5getDCEv
		dd offset _ZNK7QWidget9releaseDCEP5HDC__
		dd offset _ZNK7QWidget11paintEngineEv
		dd offset _ZN7QWidget15mousePressEventEP11QMouseEvent
		dd offset _ZN7QWidget17mouseReleaseEventEP11QMouseEvent
		dd offset _ZN7QWidget21mouseDoubleClickEventEP11QMouseEvent
		dd offset _ZN7QWidget14mouseMoveEventEP11QMouseEvent
		dd offset _ZN7QWidget10wheelEventEP11QWheelEvent
		dd offset _ZN7QWidget13keyPressEventEP9QKeyEvent
		dd offset _ZN7QWidget15keyReleaseEventEP9QKeyEvent
		dd offset _ZN7QWidget12focusInEventEP11QFocusEvent
		dd offset _ZN7QWidget13focusOutEventEP11QFocusEvent
		dd offset _ZN7QWidget10enterEventEP6QEvent
		dd offset _ZN7QWidget10leaveEventEP6QEvent
		dd offset _ZN10QSvgWidget10paintEventEP11QPaintEvent
		dd offset _ZN7QWidget9moveEventEP10QMoveEvent
		dd offset _ZN7QWidget11resizeEventEP12QResizeEvent
		dd offset _ZN7QWidget10closeEventEP11QCloseEvent
		dd offset _ZN7QWidget16contextMenuEventEP17QContextMenuEvent
		dd offset _ZN7QWidget11tabletEventEP12QTabletEvent
		dd offset _ZN7QWidget11actionEventEP12QActionEvent
		dd offset _ZN7QWidget14dragEnterEventEP15QDragEnterEvent
		dd offset _ZN7QWidget13dragMoveEventEP14QDragMoveEvent
		dd offset _ZN7QWidget14dragLeaveEventEP15QDragLeaveEvent
		dd offset _ZN7QWidget9dropEventEP10QDropEvent
		dd offset _ZN7QWidget9showEventEP10QShowEvent
		dd offset _ZN7QWidget9hideEventEP10QHideEvent
		dd offset _ZN7QWidget8winEventEP6tagMSGPl
		dd offset _ZN7QWidget11changeEventEP6QEvent
		dd offset _ZNK7QWidget6metricEN12QPaintDevice17PaintDeviceMetricE
		dd offset _ZN7QWidget16inputMethodEventEP17QInputMethodEvent
		dd offset _ZNK7QWidget16inputMethodQueryEN2Qt16InputMethodQueryE
		dd offset _ZN7QWidget18focusNextPrevChildEb
		dd offset _ZN7QWidget11styleChangeER6QStyle
		dd offset _ZN7QWidget13enabledChangeEb
		dd offset _ZN7QWidget13paletteChangeERK8QPalette
		dd offset _ZN7QWidget10fontChangeERK5QFont
		dd offset _ZN7QWidget22windowActivationChangeEb
		dd offset _ZN7QWidget14languageChangeEv
		dd 0FFFFFFF8h
		dd offset off_7105CB50
off_7105D5B0	dd offset _ZThn8_N10QSvgWidgetD1Ev ; DATA XREF:	_ZN10QSvgWidgetD1Ev+Do
					; _ZN10QSvgWidgetD2Ev+Do ...
		dd offset _ZThn8_N10QSvgWidgetD0Ev
		dd offset _ZThn8_NK7QWidget7devTypeEv
		dd offset _ZThn8_NK7QWidget11paintEngineEv
		dd offset _ZThn8_NK7QWidget5getDCEv
		dd offset _ZThn8_NK7QWidget9releaseDCEP5HDC__
		dd offset _ZThn8_NK7QWidget6metricEN12QPaintDevice17PaintDeviceMetricE
		dd 6 dup(0)
		dd offset off_7105CB64
off_7105D5E8	dd offset sub_7103BC50	; DATA XREF: sub_71001E90+1Fo
					; sub_71001F00+1Fo ...
		dd offset sub_7103BC20
		dd offset sub_710035C0
		dd offset sub_71001500
		dd offset sub_71006360
		dd offset sub_710227E0
		dd 0
		dd offset off_7105CB70
off_7105D608	dd offset sub_7103BD40	; DATA XREF: .text:71001FBEo
					; sub_710039C0+4Eo ...
		dd offset sub_7103BC70
		dd offset sub_71002690
		dd offset sub_71001540
		dd offset sub_71005BC0
		dd offset sub_710227E0
		dd 0
		dd offset off_7105CB8C
off_7105D628	dd offset sub_7103BED0	; DATA XREF: sub_71003800+4Eo
					; .text:7100392Eo ...
		dd offset sub_7103BE00
		dd offset sub_710028E0
		dd offset sub_71001550
		dd offset sub_710060B0
		dd offset sub_710227E0
; Exported entry 135. _ZTV12QSvgRenderer
		public _ZTV12QSvgRenderer
_ZTV12QSvgRenderer dd 0
		dd offset off_7105CB98
off_7105D648	dd offset _ZNK12QSvgRenderer10metaObjectEv
					; DATA XREF: _ZN12QSvgRendererD0Ev+8o
					; _ZN12QSvgRendererD1Ev+7o ...
		dd offset _ZN12QSvgRenderer11qt_metacastEPKc
		dd offset _ZN12QSvgRenderer11qt_metacallEN11QMetaObject4CallEiPPv
		dd offset _ZN12QSvgRendererD1Ev
		dd offset _ZN12QSvgRendererD0Ev
		dd offset _ZN7QObject5eventEP6QEvent
		dd offset _ZN7QObject11eventFilterEPS_P6QEvent
		dd offset _ZN7QObject10timerEventEP11QTimerEvent
		dd offset _ZN7QObject10childEventEP11QChildEvent
		dd offset _ZN7QObject11customEventEP6QEvent
		dd offset _ZN7QObject13connectNotifyEPKc
		dd offset _ZN7QObject16disconnectNotifyEPKc
		dd 3 dup(0)
		dd offset off_7105CBAC
off_7105D688	dd offset sub_7103BFC0	; DATA XREF: sub_7101C340+159o
					; sub_7101C340+69Bo ...
		dd offset sub_7103BF90
		dd offset sub_710037E0
		dd offset sub_710014D0
		dd offset sub_710224F0
		dd offset sub_710227E0
		dd 0
		dd offset off_7105CBB8
off_7105D6A8	dd offset sub_7103C0F0	; DATA XREF: sub_710265E0+39o
					; .text:71026719o ...
		dd offset sub_7103BFE0
		dd offset sub_710258E0
		dd offset sub_710257A0
		dd offset sub_710253F0
		dd 2 dup(0)
		dd offset off_7105CBC4
off_7105D6C8	dd offset sub_7103C2B0	; DATA XREF: sub_71027AF0+39o
					; .text:71027C09o ...
		dd offset sub_7103C1F0
		dd offset sub_71027E70
		dd offset sub_71027AA0
		dd offset sub_71025410
		align 10h
; Exported entry 136. _ZTV13QSvgGenerator
		public _ZTV13QSvgGenerator
_ZTV13QSvgGenerator dd 0
		dd offset off_7105CBD0
off_7105D6E8	dd offset _ZN13QSvgGeneratorD1Ev ; DATA	XREF: _ZN13QSvgGeneratorC1Ev+45o
					; _ZN13QSvgGeneratorC2Ev+45o ...
		dd offset _ZN13QSvgGeneratorD0Ev
		dd offset sub_71050B70
		dd offset _ZNK13QSvgGenerator11paintEngineEv
		dd offset _ZNK12QPaintDevice5getDCEv
		dd offset _ZNK12QPaintDevice9releaseDCEP5HDC__
		dd offset _ZNK13QSvgGenerator6metricEN12QPaintDevice17PaintDeviceMetricE
		dd 8 dup(0)
		dd offset off_7105CBE8
off_7105D728	dd offset sub_7103C4E0	; DATA XREF: .text:710252A4o
					; sub_710252B0+4o ...
		dd offset sub_7103C4C0
		dd 0
		dd offset off_7105CC20
off_7105D738	dd offset sub_7103C600	; DATA XREF: .text:7102546Fo
					; sub_71025480+Fo
		dd offset sub_7103C5E0
		dd offset sub_71027720
		dd offset sub_71027700
		dd offset sub_710254A0
		dd 6 dup(0)
		dd offset off_7105CC2C
off_7105D768	dd offset sub_71041530	; DATA XREF: _ZN13QSvgGeneratorC1Ev+E4o
					; _ZN13QSvgGeneratorC2Ev+E4o ...
		dd offset sub_71041500
		dd offset sub_71034940
		dd offset sub_710335A0
		dd offset sub_710350E0
		dd offset _ZN12QPaintEngine9drawRectsEPK5QRecti
		dd offset _ZN12QPaintEngine9drawRectsEPK6QRectFi
		dd offset _ZN12QPaintEngine9drawLinesEPK5QLinei
		dd offset _ZN12QPaintEngine9drawLinesEPK6QLineFi
		dd offset _ZN12QPaintEngine11drawEllipseERK6QRectF
		dd offset _ZN12QPaintEngine11drawEllipseERK5QRect
		dd offset sub_71032DA0
		dd offset _ZN12QPaintEngine10drawPointsEPK7QPointFi
		dd offset _ZN12QPaintEngine10drawPointsEPK6QPointi
		dd offset sub_71032B10
		dd offset _ZN12QPaintEngine11drawPolygonEPK6QPointiNS_15PolygonDrawModeE
		dd offset sub_71033AE0
		dd offset sub_71034690
		dd offset _ZN12QPaintEngine15drawTiledPixmapERK6QRectFRK7QPixmapRK7QPointF
		dd offset _ZN12QPaintEngine9drawImageERK6QRectFRK6QImageS2_6QFlagsIN2Qt19ImageConversionFlagEE
		dd offset _ZNK12QPaintEngine5getDCEv
		dd offset _ZNK12QPaintEngine9releaseDCEP5HDC__
		dd offset _ZNK12QPaintEngine16coordinateOffsetEv
		dd offset sub_71050B80
		dd 7 dup(0)
		dd offset off_7105CC38
off_7105D7E8	dd offset sub_71041660	; DATA XREF: sub_71026BC0+39o
					; .text:71026CE9o ...
		dd offset sub_71041550
		dd offset sub_71028330
		dd offset sub_71025840
		dd offset sub_71025420
		align 10h
; Exported entry 137. _ZTV16QGraphicsSvgItem
		public _ZTV16QGraphicsSvgItem
_ZTV16QGraphicsSvgItem dd 0
		dd offset off_7105CC44
off_7105D808	dd offset _ZNK16QGraphicsSvgItem10metaObjectEv
					; DATA XREF: _ZN16QGraphicsSvgItemC2EP13QGraphicsItem+23Ao
					; _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem+230o ...
		dd offset _ZN16QGraphicsSvgItem11qt_metacastEPKc
		dd offset _ZN16QGraphicsSvgItem11qt_metacallEN11QMetaObject4CallEiPPv
		dd offset sub_71041810
		dd offset sub_71041760
		dd offset _ZN7QObject5eventEP6QEvent
		dd offset _ZN7QObject11eventFilterEPS_P6QEvent
		dd offset _ZN7QObject10timerEventEP11QTimerEvent
		dd offset _ZN7QObject10childEventEP11QChildEvent
		dd offset _ZN7QObject11customEventEP6QEvent
		dd offset _ZN7QObject13connectNotifyEPKc
		dd offset _ZN7QObject16disconnectNotifyEPKc
		dd offset _ZNK16QGraphicsSvgItem12boundingRectEv
		dd offset _ZN16QGraphicsSvgItem5paintEP8QPainterPK24QStyleOptionGraphicsItemP7QWidget
		dd offset _ZNK16QGraphicsSvgItem4typeEv
		dd 0FFFFFFF8h
		dd offset off_7105CC44
off_7105D84C	dd offset _ZThn8_N16QGraphicsSvgItemD1Ev
					; DATA XREF: _ZN16QGraphicsSvgItemC2EP13QGraphicsItem+240o
					; _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem+236o ...
		dd offset _ZThn8_N16QGraphicsSvgItemD0Ev
		dd offset _ZN13QGraphicsItem7advanceEi
		dd offset _ZThn8_NK16QGraphicsSvgItem12boundingRectEv
		dd offset _ZNK13QGraphicsItem5shapeEv
		dd offset _ZNK13QGraphicsItem8containsERK7QPointF
		dd offset _ZNK13QGraphicsItem16collidesWithItemEPKS_N2Qt17ItemSelectionModeE
		dd offset _ZNK13QGraphicsItem16collidesWithPathERK12QPainterPathN2Qt17ItemSelectionModeE
		dd offset _ZNK13QGraphicsItem12isObscuredByEPKS_
		dd offset _ZNK13QGraphicsItem10opaqueAreaEv
		dd offset _ZThn8_N16QGraphicsSvgItem5paintEP8QPainterPK24QStyleOptionGraphicsItemP7QWidget
		dd offset _ZThn8_NK16QGraphicsSvgItem4typeEv
		dd offset _ZN13QGraphicsItem16sceneEventFilterEPS_P6QEvent
		dd offset _ZN13QGraphicsItem10sceneEventEP6QEvent
		dd offset _ZN13QGraphicsItem16contextMenuEventEP30QGraphicsSceneContextMenuEvent
		dd offset _ZN13QGraphicsItem14dragEnterEventEP27QGraphicsSceneDragDropEvent
		dd offset _ZN13QGraphicsItem14dragLeaveEventEP27QGraphicsSceneDragDropEvent
		dd offset _ZN13QGraphicsItem13dragMoveEventEP27QGraphicsSceneDragDropEvent
		dd offset _ZN13QGraphicsItem9dropEventEP27QGraphicsSceneDragDropEvent
		dd offset _ZN13QGraphicsItem12focusInEventEP11QFocusEvent
		dd offset _ZN13QGraphicsItem13focusOutEventEP11QFocusEvent
		dd offset _ZN13QGraphicsItem15hoverEnterEventEP24QGraphicsSceneHoverEvent
		dd offset _ZN13QGraphicsItem14hoverMoveEventEP24QGraphicsSceneHoverEvent
		dd offset _ZN13QGraphicsItem15hoverLeaveEventEP24QGraphicsSceneHoverEvent
		dd offset _ZN13QGraphicsItem13keyPressEventEP9QKeyEvent
		dd offset _ZN13QGraphicsItem15keyReleaseEventEP9QKeyEvent
		dd offset _ZN13QGraphicsItem15mousePressEventEP24QGraphicsSceneMouseEvent
		dd offset _ZN13QGraphicsItem14mouseMoveEventEP24QGraphicsSceneMouseEvent
		dd offset _ZN13QGraphicsItem17mouseReleaseEventEP24QGraphicsSceneMouseEvent
		dd offset _ZN13QGraphicsItem21mouseDoubleClickEventEP24QGraphicsSceneMouseEvent
		dd offset _ZN13QGraphicsItem10wheelEventEP24QGraphicsSceneWheelEvent
		dd offset _ZN13QGraphicsItem16inputMethodEventEP17QInputMethodEvent
		dd offset _ZNK13QGraphicsItem16inputMethodQueryEN2Qt16InputMethodQueryE
		dd offset _ZN13QGraphicsItem10itemChangeENS_18GraphicsItemChangeERK8QVariant
		dd offset _ZNK13QGraphicsItem17supportsExtensionENS_9ExtensionE
		dd offset _ZN13QGraphicsItem12setExtensionENS_9ExtensionERK8QVariant
		dd offset _ZNK13QGraphicsItem9extensionERK8QVariant
		dd 0
		dd offset off_7105CC50
off_7105D8E8	dd offset sub_710419C0	; DATA XREF: sub_710267E0+3Eo
					; .text:7102691Eo ...
		dd offset sub_710418C0
		dd offset sub_71025E20
		dd offset sub_71025800
		dd offset sub_71025670
		dd 2 dup(0)
		dd offset off_7105CC5C
off_7105D908	dd offset sub_71041B90	; DATA XREF: .text:71025694o
					; sub_710256A0+14o
		dd offset sub_71041B70
		dd offset sub_71025740
		dd offset sub_71025720
		dd offset sub_710256C0
		dd 2 dup(0)
		dd offset off_7105CC68
off_7105D928	dd offset sub_71041BC0	; DATA XREF: .text:710252EFo
					; .text:7102530Fo
		dd offset sub_71041BA0
		dd offset nullsub_1
		dd offset nullsub_2
		dd offset sub_710253E0
		align 10h
; Exported entry 138. _ZTV16QSvgTinyDocument
		public _ZTV16QSvgTinyDocument
_ZTV16QSvgTinyDocument dd 0
		dd offset off_7105CC74
off_7105D948	dd offset _ZN16QSvgTinyDocumentD1Ev
					; DATA XREF: _ZN16QSvgTinyDocumentC2Ev+4Fo
					; _ZN16QSvgTinyDocumentD1Ev+32o ...
		dd offset _ZN16QSvgTinyDocumentD0Ev
		dd offset _ZN16QSvgTinyDocument4drawEP8QPainterR15QSvgExtraStates
		dd offset _ZNK16QSvgTinyDocument4typeEv
		dd offset sub_710248C0
		dd offset sub_710227E0
		dd 0
		dd offset off_7105CC80
off_7105D968	dd offset sub_71041CE0	; DATA XREF: sub_71027960+44o
					; .text:71027A44o ...
		dd offset sub_71041BD0
		dd offset nullsub_3
		dd offset nullsub_4
		dd offset sub_71025440
		dd offset sub_71029530
		dd 0
		dd offset off_7105CC8C
off_7105D988	dd offset sub_71025070	; DATA XREF: .text:7102423Do
					; sub_71024280+1Do ...
		dd offset sub_71024EB0
		dd offset sub_710524C0
		dd offset sub_710524C0
		dd offset sub_710248C0
		dd offset sub_710227E0
		dd 0
		dd offset off_7105CC98
		dd offset sub_710252B0
		dd offset sub_710256D0
		dd offset sub_710524C0
		dd offset sub_710524C0
		dd offset sub_710524C0
		dd 2 dup(0)
		dd offset off_7105CCA4
off_7105D9C8	dd offset sub_71041E10	; DATA XREF: sub_7101FFE0+91o
					; sub_71041DE0+8o ...
		dd offset sub_71041DE0
		dd offset sub_71050CD0
		dd offset sub_71050FC0
		dd offset sub_71050BD0
		dd offset sub_71050E50
		dd offset sub_710511B0
		dd offset sub_71050B90
		dd offset sub_71050BA0
		dd offset sub_71050DD0
		dd offset sub_71050BC0
		dd offset nullsub_5
		dd 3 dup(0)
		dd offset off_7105CCB0
off_7105DA08	dd offset sub_71041E60	; DATA XREF: _ZN10QSvgWidgetC1ERK7QStringP7QWidget+6Ao
					; _ZN10QSvgWidgetC2ERK7QStringP7QWidget+6Ao ...
		dd offset sub_71041E30
		dd offset _ZNK14QWidgetPrivate17hasHeightForWidthEv
		dd offset nullsub_6
		dd 0
		dd offset off_7105CCBC
off_7105DA20	dd offset sub_71041EA0	; DATA XREF: sub_71027760+41o
					; .text:71027891o
		dd offset sub_71041E80
		dd offset sub_710276A0
		dd offset sub_71027600
		dd offset sub_71025450
		dd 2 dup(0)
		dd offset off_7105CCC8
off_7105DA40	dd offset sub_71041F70	; DATA XREF: sub_71041EC0+32o
					; sub_71041F70+32o ...
		dd offset sub_71041EC0
		dd offset nullsub_7
		dd 2 dup(0)
		dd offset off_7105CCD0
off_7105DA58	dd offset sub_71042160	; DATA XREF: _ZN12QSvgRendererC2EP7QObject+60o
					; _ZN12QSvgRendererC1EP16QXmlStreamReaderP7QObject+60o	...
		dd offset sub_710420B0
		dd 0
		dd offset off_7105CCDC
off_7105DA68	dd offset sub_710422F0	; DATA XREF: sub_710269E0+39o
					; .text:71026B09o ...
		dd offset sub_71042230
		dd offset nullsub_3
		dd offset nullsub_4
		dd offset sub_71025430
		dd offset sub_71042200
		dd 0
		dd offset off_7105CCF0
off_7105DA88	dd offset sub_71042750	; DATA XREF: sub_71026DA0+3Eo
					; .text:71026EDEo ...
		dd offset sub_710426A0
		dd offset sub_71027630
		dd offset sub_710275C0
		dd offset sub_71025620
		dd 2 dup(0)
		dd offset off_7105CCFC
		dd offset sub_71042810
		dd offset sub_710427F0
		dd offset nullsub_3
		dd offset nullsub_4
		dd offset sub_710524C0
		dd offset sub_710524C0
		dd 0
		dd offset off_7105CD08
off_7105DAC8	dd offset sub_710428E0	; DATA XREF: .text:71026499o
					; .text:71026559o ...
		dd offset sub_71042820
		dd offset sub_71025890
		dd offset sub_71025780
		dd offset sub_71025400
		dd 2 dup(0)
		dd offset off_7105CD14
off_7105DAE8	dd offset sub_71043810	; DATA XREF: sub_71042D80+D3o
					; sub_71043510+34o ...
		dd offset sub_71043510
		dd offset nullsub_7
		dd 4 dup(0)
		dd offset off_7105CD20
off_7105DB08	dd offset sub_71043DC0	; DATA XREF: _ZN16QGraphicsSvgItemC2EP13QGraphicsItem+1E1o
					; _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem+1D4o ...
		dd offset sub_71043B00
		dd offset _ZN20QGraphicsItemPrivate30updateSceneTransformFromParentEv
		dd offset _ZNK20QGraphicsItemPrivate22inputMethodQueryHelperEN2Qt16InputMethodQueryE
		dd offset _ZN20QGraphicsItemPrivate12setPosHelperERK7QPointF
		dd offset nullsub_8
		dd offset sub_710423B0
		dd offset sub_71042400
		dd offset _ZNK20QGraphicsItemPrivate13isProxyWidgetEv
		dd offset _ZN20QGraphicsItemPrivate18subFocusItemChangeEv
		dd offset _ZN20QGraphicsItemPrivate20focusScopeItemChangeEb
		dd offset _ZN20QGraphicsItemPrivate18siblingOrderChangeEv
		dd offset _ZNK20QGraphicsItemPrivate5widthEv
		dd offset _ZN20QGraphicsItemPrivate8setWidthEd
		dd offset _ZN20QGraphicsItemPrivate10resetWidthEv
		dd offset _ZNK20QGraphicsItemPrivate6heightEv
		dd offset _ZN20QGraphicsItemPrivate9setHeightEd
		dd offset _ZN20QGraphicsItemPrivate11resetHeightEv
		dd 5 dup(0)
		dd offset off_7105CD2C
off_7105DB68	dd offset sub_71047080	; DATA XREF: sub_71024340+18o
					; .text:71024388o ...
		dd offset sub_71047050
		dd offset sub_71024A80
		dd offset sub_71024150
		dd offset sub_710248C0
		dd offset sub_710227E0
		dd 0
		dd offset off_7105CD40
off_7105DB88	dd offset sub_71047890	; DATA XREF: .text:71002FCBo
					; .text:7100307Bo ...
		dd offset sub_710477E0
		dd offset sub_71002D60
		dd offset sub_710014E0
		dd offset sub_710015A0
		dd offset sub_710227E0
		dd 0
		dd offset off_7105CD4C
off_7105DBA8	dd offset sub_71047960	; DATA XREF: sub_71001AB0+27o
					; .text:71001B47o ...
		dd offset sub_71047930
		dd offset sub_710019B0
		dd offset sub_71001580
		dd offset sub_71001870
		dd offset sub_710227E0
		dd 0
		dd offset off_7105CD80
off_7105DBC8	dd offset sub_7104F3A0	; DATA XREF: sub_710242E0+18o
					; .text:71024328o ...
		dd offset sub_7104F370
		dd offset nullsub_9
		dd offset sub_71024170
		dd offset sub_710248C0
		dd offset sub_710227E0
		dd 0
		dd offset off_7105CD8C
off_7105DBE8	dd offset sub_7104F4C0	; DATA XREF: .text:71029945o
					; sub_71029970+15o ...
		dd offset sub_7104F3C0
		dd 5 dup(0)
		dd offset off_7105CD98
off_7105DC08	dd offset sub_7104F5F0	; DATA XREF: sub_71001DB0+1Fo
					; .text:71001E3Fo ...
		dd offset sub_7104F5C0
		dd offset sub_710030E0
		dd offset sub_71001520
		dd offset sub_710065F0
		dd offset sub_710227E0
		dd 0
		dd offset off_7105CDA4
off_7105DC28	dd offset sub_71023A60	; DATA XREF: sub_71022420+Ao
					; sub_71022E70+32o ...
		dd offset sub_71022E70
		dd offset sub_710524C0
		dd offset sub_710524C0
		dd offset sub_710224F0
		dd offset sub_710227E0
		dd 0
		dd offset off_7105CDAC
off_7105DC48	dd offset sub_7104F6C0	; DATA XREF: sub_71002E20+4Bo
					; .text:71002F1Bo ...
		dd offset sub_7104F610
		dd offset sub_71002B20
		dd offset sub_71001530
		dd offset sub_71005E70
		dd offset sub_710227E0
		dd 0
		dd offset off_7105CDB8
off_7105DC68	dd offset sub_7104F790	; DATA XREF: sub_71001C90+1Fo
					; .text:71001D3Fo ...
		dd offset sub_7104F760
		dd offset sub_71002250
		dd offset sub_71001560
		dd offset sub_71005990
		dd offset sub_710227E0
		dd 0
		dd offset off_7105CDC4
off_7105DC88	dd offset sub_71003DF0	; DATA XREF: sub_71001B90+1Fo
					; .text:71001C2Fo ...
		dd offset sub_71003C40
		dd offset sub_71003F90
		dd offset sub_71001570
		dd offset sub_710224F0
		dd offset sub_710227E0
		dd 0
		dd offset off_7105CDD0
off_7105DCA8	dd offset sub_7104F890	; DATA XREF: sub_710032E0+4Fo
					; .text:7100349Fo ...
		dd offset sub_7104F7E0
		dd offset sub_710031A0
		dd offset sub_71001510
		dd offset sub_710017E0
		dd offset sub_710227E0
		dd 0
		dd offset off_7105CDDC
off_7105DCC8	dd offset sub_7104FA00	; DATA XREF: sub_71002050+63o
					; sub_71007640+64o ...
		dd offset sub_7104F940
		dd offset nullsub_10
		dd offset sub_71051540
		dd offset sub_710224F0
		dd offset sub_710227E0
		dd 0
		dd offset off_7105CDE8
off_7105DCE8	dd offset sub_7104FAE0	; DATA XREF: sub_7104FAB0+8o
					; sub_7104FAE0+7o
		dd offset sub_7104FAB0
		dd offset sub_71001960
		dd offset sub_71001590
		dd offset sub_710224F0
		dd offset sub_710227E0
		dd 0
		dd offset off_7105CDF4
off_7105DD08	dd offset sub_7103BA40	; DATA XREF: sub_7103BA20+7o
					; sub_7103BA40+4o ...
		dd offset sub_7103BA20
		dd offset sub_710524C0
		dd 4 dup(0)
		dd offset off_7105CDFC
off_7105DD28	dd offset sub_7103BA90	; DATA XREF: sub_7103BA60+8o
					; sub_7103BA90+7o ...
		dd offset sub_7103BA60
		dd offset sub_710515C0
		dd offset sub_710515D0
		dd offset sub_7104FEE0
		dd offset sub_7104FFB0
		dd offset sub_7104FF60
		dd offset sub_71050020
		dd offset sub_710500A0
		dd 6 dup(0)
		dd offset off_7105CE08
off_7105DD68	dd offset sub_7103BAF0	; DATA XREF: sub_7103BAD0+7o
					; sub_7103BAF0+4o ...
		dd offset sub_7103BAD0
		dd offset sub_710524C0
		dd 4 dup(0)
		dd offset off_7105CE10
off_7105DD88	dd offset sub_7103BB40	; DATA XREF: sub_7103BB10+8o
					; sub_7103BB40+7o ...
		dd offset sub_7103BB10
		dd offset sub_710515C0
		dd offset sub_710515D0
		dd offset sub_7104FEE0
		dd offset sub_7104FFB0
		dd offset sub_710500C0
		dd offset sub_71050150
		dd offset sub_71050270
		dd 6 dup(0)
		dd offset off_7105CE1C
off_7105DDC8	dd offset sub_7103BBB0	; DATA XREF: sub_7103BB80+8o
					; sub_7103BBB0+7o ...
		dd offset sub_7103BB80
		dd offset sub_710515C0
		dd offset sub_710515D0
		dd offset sub_7104FEE0
		dd offset sub_7104FFB0
		dd offset sub_71050310
		dd offset sub_71050530
		dd offset sub_71050AA0
		dd 6 dup(0)
		dd offset off_7105CE30
off_7105DE08	dd offset sub_7104FBF0	; DATA XREF: sub_7104FBC0+8o
					; sub_7104FBF0+7o ...
		dd offset sub_7104FBC0
		dd offset sub_71051550
		dd 2 dup(0)
		dd offset off_7105CE3C
off_7105DE20	dd offset sub_7104FC40	; DATA XREF: sub_7104FB00+6Ao
					; sub_7104FC10+8o ...
		dd offset sub_7104FC10
		dd offset sub_71051560
		dd 2 dup(0)
		dd offset off_7105CE48
off_7105DE38	dd offset sub_71051630	; DATA XREF: sub_71051E8D+C2o
		dd offset sub_71051610
		dd offset sub_71051570
		dd 2 dup(0)
		dd offset off_7105CE54
off_7105DE50	dd offset sub_71051680	; DATA XREF: sub_71051650+8o
					; sub_71051680+7o ...
		dd offset sub_71051650
		dd offset sub_71051580
		dd 2 dup(0)
		dd offset off_7105CE60
off_7105DE68	dd offset sub_710516E0	; DATA XREF: sub_71051610+7o
					; sub_71051630+4o ...
		dd offset sub_710516C0
		dd offset sub_71051590
		dd 4 dup(0)
		dd offset off_7105CE68
off_7105DE88	dd offset sub_71051720	; DATA XREF: sub_71051700+7o
					; sub_71051720+4o ...
		dd offset sub_71051700
		dd offset sub_710515C0
		dd offset sub_710515D0
		dd offset sub_710515A0
		dd offset sub_710515B0
dword_7105DEA0	dd 0			; DATA XREF: sub_71039FB0+57o
					; sub_71039FB0+5Co ...
dword_7105DEA4	dd 0			; DATA XREF: sub_71039FB0+7Ar
dword_7105DEA8	dd 0			; DATA XREF: sub_71039FB0+84r
dword_7105DEAC	dd 55h dup(0)		; DATA XREF: sub_71039FB0+8Do
_rdata		ends

; Section 4. (virtual address 0005E000)
; Virtual size			: 000003C8 (	968.)
; Section size in file		: 00000000 (	  0.)
; Offset to raw	data for section: 00000000
; Flags	C0600080: Bss Readable Writable
; Alignment	: 32 bytes
; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
; Segment alignment '32byte' can not be represented in assembly
_bss		segment	para public 'BSS' use32
		assume cs:_bss
		;org 7105E000h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
dword_7105E000	dd ?			; DATA XREF: sub_71001040+Dr
					; sub_71001040+22w ...
TlsIndex	dd 4 dup(?)		; DATA XREF: .tls:TlsIndex_ptro
dword_7105E014	dd ?			; DATA XREF: DllEntryPoint+7w
dword_7105E018	dd ?			; DATA XREF: sub_71039E60+2Cr
					; sub_71039E60+65r ...
dword_7105E01C	dd ?			; DATA XREF: sub_71039E60:loc_71039E80r
					; sub_71039E60:loc_71039F22w ...
dword_7105E020	dd ?			; DATA XREF: sub_71039FB0+9r
					; sub_71039FB0:loc_71039FD0w
dword_7105E024	dd ?			; DATA XREF: sub_7103A2C0+3r
					; sub_7103A2C0:loc_7103A2D1w
		align 20h
dword_7105E040	dd ?			; DATA XREF: .text:7103A312w
					; .rdata:off_7105CB14o
dword_7105E044	dd ?			; DATA XREF: .text:7103A31Cw
		dd ?
dword_7105E04C	dd ?			; DATA XREF: .text:7103A32Bw
		dd 14h dup(?)
dword_7105E0A0	dd 2Bh dup(?)		; DATA XREF: .rdata:7105CB18o
dword_7105E14C	dd ?			; DATA XREF: .text:7103A33Aw
		dd 2 dup(?)
dword_7105E158	dd ?			; DATA XREF: .text:7103A326w
		dd 2 dup(?)
dword_7105E164	dd ?			; DATA XREF: .text:7103A30Cw
		dd 86h dup(?)
dword_7105E380	dd ?			; DATA XREF: sub_7103A460+7r
					; sub_7103A4E0+26r ...
; struct _RTL_CRITICAL_SECTION CriticalSection
CriticalSection	_RTL_CRITICAL_SECTION <?> ; DATA XREF: sub_7103A460:loc_7103A478o
					; sub_7103A460:loc_7103A4C5o ...
dword_7105E39C	dd ?			; DATA XREF: sub_7103A460+25r
					; .text:7103A595r ...
		dd ?
dword_7105E3A4	dd ?			; DATA XREF: .text:7103A9B6r
					; .text:7103AA4Aw ...
dword_7105E3A8	dd ?			; DATA XREF: sub_71001000+21w
					; sub_71001040+143r ...
dword_7105E3AC	dd ?			; DATA XREF: sub_71001000+1Cw
					; sub_71001040:loc_71001170r ...
dword_7105E3B0	dd ?			; DATA XREF: sub_71001040+4Co
					; sub_71001040+C1o ...
dword_7105E3B4	dd ?			; DATA XREF: sub_71001040+5Fr
					; sub_71001040:loc_71001116r ...
		align 1000h
_bss		ends

;
; Imports from QtCore4.dll
;
; Section 6. (virtual address 00061000)
; Virtual size			: 00006C60 (  27744.)
; Section size in file		: 00006E00 (  28160.)
; Offset to raw	data for section: 0005EA00
; Flags	C0300040: Data Readable	Writable
; Alignment	: 4 bytes
; ===========================================================================

; Segment type:	Externs
; _idata
		extrn _ZN11QVectorData4freeEPS_i:dword ; CODE XREF: .text:71003BCEp
					; sub_71003C40+12Ep ...
		extrn _ZN11QVectorData11shared_nullE:dword ; DATA XREF:	sub_71001B90+46r
					; .text:71001C56r ...
		extrn _ZN7QString4freeEPNS_4DataE:dword	; CODE XREF: sub_71003F90+BE0p
					; sub_71003F90+C60p ...
		extrn _ZN11QVectorData8allocateEii:dword ; CODE	XREF: sub_7100B430+C3p
					; sub_7100B730+C3p ...
		extrn _Z7qMemSetPvij:dword ; CODE XREF:	sub_7104E6E0+182p
					; sub_7104EA30+182p ...
		extrn _ZN11QVectorData10reallocateEPS_iii:dword
					; CODE XREF: sub_71047FC0+272p
					; sub_71048E90+225p ...
		extrn _Z9qBadAllocv:dword ; CODE XREF: sub_71008500:loc_710097A4p
					; sub_71008500:loc_710097EEp ...
		extrn _ZN7QString11shared_nullE:dword ;	DATA XREF: sub_71002050+5Er
					; sub_71003F90+234r ...
		extrn _ZN11QVectorData4growEiiib:dword ; CODE XREF: sub_71002050+CDp
					; sub_71006D60+E4p ...
		extrn _ZN7QString6appendERKS_:dword ; CODE XREF: sub_71002050+1B5p
					; sub_71003F90+561p ...
		extrn _Z8qWarningPKcz:dword ; CODE XREF: sub_7100CAD0+261p
					; sub_7100CAD0+335p ...
		extrn _Z5qFreePv:dword	; CODE XREF: sub_71008500+237p
					; sub_71008500+3E9p ...
		extrn _ZN9QListData6detachEi:dword ; CODE XREF:	sub_71022D80+6Dp
					; sub_71023220+6Dp ...
		extrn _ZN9QListData11shared_nullE:dword
					; DATA XREF: sub_71003F90:loc_7100420Cr
					; sub_7100FC80:loc_7100FE5Dr ...
		extrn _ZN9QListData11detach_growEPii:dword ; CODE XREF:	sub_71044D00+77p
					; sub_71045480+77p ...
		extrn _ZN9QListData6appendEv:dword ; CODE XREF:	sub_71044D00+21Dp
					; sub_71045480+245p ...
		extrn _ZN8QVariantD1Ev:dword ; CODE XREF: sub_71003F90+3EBp
					; sub_71003F90+44Ep ...
		extrn _ZN7QString7replaceE5QCharS0_N2Qt15CaseSensitivityE:dword
					; CODE XREF: sub_71003F90+80Cp
					; sub_71003F90+82Ep ...
		extrn _ZN7QString6appendE5QChar:dword ;	CODE XREF: sub_71003F90+893p
					; sub_71003F90+B04p ...
		extrn _ZNK7QString10simplifiedEv:dword ; CODE XREF: sub_71003F90+91Bp
					; DATA XREF: sub_71003F90+91Br
		extrn _ZN7QStringaSERKS_:dword ; CODE XREF: sub_71003F90+93Bp
					; sub_7100BDD0+A8p ...
		extrn _ZNK7QString8endsWithERK5QCharN2Qt15CaseSensitivityE:dword
					; CODE XREF: sub_71003F90+C95p
					; sub_7100BF60+7Ap
					; DATA XREF: ...
		extrn _ZNK7QString10startsWithERK5QCharN2Qt15CaseSensitivityE:dword
					; CODE XREF: sub_71003F90+D17p
					; sub_71024020+5Fp
					; DATA XREF: ...
		extrn _ZN11QTextStreamC1EP7QString6QFlagsIN9QIODevice12OpenModeFlagEE:dword
					; CODE XREF: sub_710212A0+515p
					; sub_710212A0+9B0p ...
		extrn _ZN11QTextStreamlsEc:dword ; CODE	XREF: sub_710212A0+5C7p
					; sub_710212A0+5E8p ...
		extrn _ZN11QTextStreamlsERK7QString:dword ; CODE XREF: sub_710212A0+58Ep
					; sub_710212A0+5D7p ...
		extrn _Z7qstrtodPKcPS0_Pb:dword	; CODE XREF: sub_710070E0+18Dp
					; DATA XREF: sub_710070E0+18Dr
		extrn _ZNK5QChar7isSpaceEv:dword ; CODE	XREF: sub_71007710+134p
					; sub_71008500+E6p ...
		extrn _ZN8QVariantC1ERKS_:dword	; CODE XREF: sub_7101BB40+12Ap
					; sub_7101C340+29Ep ...
		extrn _ZN19QXmlStreamAttributeD1Ev:dword ; CODE	XREF: sub_71047F70+29p
					; DATA XREF: sub_71047F70+1Ar ...
		extrn _ZN19QXmlStreamAttributeC1ERKS_:dword ; CODE XREF: sub_71047FC0+139p
					; DATA XREF: sub_71047FC0+139r
		extrn _ZN19QXmlStreamAttributeC1Ev:dword ; CODE	XREF: sub_71047FC0+17Dp
					; DATA XREF: sub_71047FC0+17Dr
		extrn _ZN7QString4growEi:dword ; CODE XREF: sub_71008360+E0p
					; sub_7101BB40+19Ep
					; DATA XREF: ...
		extrn _ZN7QString7reallocEi:dword ; CODE XREF: sub_71008360+F0p
					; sub_7101BB40+1AEp
					; DATA XREF: ...
		extrn _Z7qMallocj:dword	; CODE XREF: sub_71008500+9B7p
					; sub_71008500+1208p ...
		extrn _Z8qMemCopyPvPKvj:dword ;	CODE XREF: sub_71008500+A0Bp
					; sub_71008500+125Cp ...
		extrn _ZNK20QXmlStreamAttributes5valueERK13QLatin1String:dword
					; CODE XREF: sub_71009870+51p
					; sub_710099A0+6Bp ...
		extrn _ZeqRK13QLatin1StringRK10QStringRef:dword
					; CODE XREF: sub_7100AAB0+1B9p
					; sub_7100D500+223p ...
		extrn _ZNK10QStringRef8toStringEv:dword	; CODE XREF: sub_7100AD80+89p
					; sub_7100AD80+D7p ...
		extrn _ZN7QString9fromAsciiEPKci:dword ; CODE XREF: sub_710212A0+56Ep
					; sub_710212A0+A09p ...
		extrn _ZNK7QString7toLowerEv:dword ; CODE XREF:	sub_7100BDD0+8Bp
					; sub_7101D010+1D7p
					; DATA XREF: ...
		extrn _ZNK7QStringeqERK13QLatin1String:dword ; CODE XREF: sub_7100BDD0+D6p
					; sub_7100E900+470p ...
		extrn _ZNK7QString7trimmedEv:dword ; CODE XREF:	sub_7100BF60+4Fp
					; sub_7100FC80+539p ...
		extrn _ZN7QString4chopEi:dword ; CODE XREF: sub_7100BF60+92p
					; sub_7100BF60+121p ...
		extrn _ZNK7QString8endsWithERK13QLatin1StringN2Qt15CaseSensitivityE:dword
					; CODE XREF: sub_7100BF60+109p
					; sub_7100BF60+158p ...
		extrn _ZNK7QString11toLocal8BitEv:dword	; CODE XREF: sub_7100CAD0+240p
					; sub_7100CAD0+314p ...
		extrn _ZN7QString17fromLatin1_helperEPKci:dword
					; CODE XREF: sub_7101D010+90p
					; sub_7101D010+26Cp ...
		extrn _ZNK7QString7compareERKS_N2Qt15CaseSensitivityE:dword
					; CODE XREF: sub_71050CD0+85p
					; DATA XREF: sub_71050CD0+85r
		extrn _ZN11QTextStreamD1Ev:dword ; CODE	XREF: sub_710212A0+657p
					; sub_710212A0+AA9p ...
		extrn _ZN10QByteArray7reallocEi:dword ;	CODE XREF: sub_710212A0+BDBp
					; sub_710212A0+CFFp ...
		extrn _Z17qt_message_output9QtMsgTypePKc:dword
					; CODE XREF: sub_710212A0+BFEp
					; sub_710212A0+D22p ...
		extrn _ZN7QString6removeEii:dword ; CODE XREF: sub_7100E020+B2p
					; sub_7100E020+1ECp ...
		extrn _ZNK7QString5splitERK5QCharNS_13SplitBehaviorEN2Qt15CaseSensitivityE:dword
					; CODE XREF: sub_7100FC80+49Dp
					; sub_71013AD0+1D0p ...
		extrn _ZNK7QString8toDoubleEPb:dword ; CODE XREF: sub_71011C90+61Fp
					; DATA XREF: sub_71011C90+61Fr
		extrn _ZNK7QString5toIntEPbi:dword ; CODE XREF:	sub_71011C90+DF0p
					; DATA XREF: sub_71011C90+DF0r
		extrn _ZN16QXmlStreamReaderD1Ev:dword ;	CODE XREF: sub_71014990+6Bp
					; .text:71014DDBp
					; DATA XREF: ...
		extrn _ZN9QHashData11free_helperEPFvPNS_4NodeEE:dword
					; CODE XREF: sub_7101D820+48Dp
					; sub_7101D820+4ADp ...
		extrn _ZN20QXmlStreamAttributes6appendERK7QStringS2_S2_:dword
					; CODE XREF: sub_7101BB40+392p
					; sub_7101C340+31Ep
					; DATA XREF: ...
		extrn _ZN7QString6insertEiRK13QLatin1String:dword
					; CODE XREF: sub_7101BB40+4A3p
					; sub_7101C340+3B6p
					; DATA XREF: ...
		extrn _ZNK8QVariant12toStringListEv:dword ; CODE XREF: sub_7101BB40+4D5p
					; DATA XREF: sub_7101BB40+4D5r
		extrn _ZNK8QVariant5toIntEPb:dword ; CODE XREF:	sub_7101BB40+5F1p
					; DATA XREF: sub_7101BB40+5F1r
		extrn _ZN7QString10fromLatin1EPKci:dword ; CODE	XREF: sub_7101BB40+61Dp
					; sub_7101C340+4A1p ...
		extrn _ZN9QHashData14detach_helper2EPFvPNS_4NodeEPvEPFvS1_Eii:dword
					; CODE XREF: sub_71029A80+B1p
					; _ZN16QSvgTinyDocument12addNamedNodeERK7QStringP8QSvgNode+52p	...
		extrn _ZN9QHashData11shared_nullE:dword	; DATA XREF: sub_7101D010+4B8r
					; sub_7101D820+A6r ...
		extrn _ZN7QRegExpC1ERK7QStringN2Qt15CaseSensitivityENS_13PatternSyntaxE:dword
					; CODE XREF: sub_7101D010+C0p
					; sub_7101D010+29Cp
					; DATA XREF: ...
		extrn _ZN7QRegExp10setMinimalEb:dword ;	CODE XREF: sub_7101D010+EFp
					; sub_7101D010+2CBp
					; DATA XREF: ...
		extrn _ZNK7QRegExp7indexInERK7QStringiNS_9CaretModeE:dword
					; CODE XREF: sub_7101D010+2EEp
					; DATA XREF: sub_7101D010+F5r ...
		extrn _ZNK7QRegExp13matchedLengthEv:dword ; CODE XREF: sub_7101D010+130p
					; DATA XREF: sub_7101D010+130r
		extrn _ZN7QRegExp3capEi:dword ;	CODE XREF: sub_7101D010+1B0p
					; sub_7101D010+309p
					; DATA XREF: ...
		extrn _ZN9QFileInfoC1ERK7QString:dword ; CODE XREF: sub_7101D010+329p
					; DATA XREF: sub_7101D010+329r
		extrn _ZNK9QFileInfo6existsEv:dword ; CODE XREF: sub_7101D010+33Fp
					; DATA XREF: sub_7101D010+33Fr
		extrn _ZNK9QFileInfo16absoluteFilePathEv:dword
					; CODE XREF: sub_7101D010+35Ap
					; DATA XREF: sub_7101D010+35Ar
		extrn _ZN5QFileC1ERK7QString:dword ; CODE XREF:	sub_7101D010+37Ap
					; _ZN16QSvgTinyDocument4loadERK7QString+5Bp ...
		extrn _ZN5QFile4openE6QFlagsIN9QIODevice12OpenModeFlagEE:dword
					; CODE XREF: sub_7101D010+3A9p
					; _ZN16QSvgTinyDocument4loadERK7QString+7Fp
					; DATA XREF: ...
		extrn _ZN5QFileD1Ev:dword ; CODE XREF: sub_7101D010+3C7p
					; sub_7101D010+5A5p ...
		extrn _ZN9QFileInfoD1Ev:dword ;	CODE XREF: sub_7101D010+3DDp
					; sub_7101D010+5BBp ...
		extrn _ZN7QRegExpD1Ev:dword ; CODE XREF: sub_7101D010+408p
					; sub_7101D010+41Ep ...
		extrn _ZN9QIODevice7readAllEv:dword ; CODE XREF: sub_7101D010+45Bp
					; DATA XREF: sub_7101D010+45Br
		extrn _ZN7QString8fromUtf8EPKci:dword ;	CODE XREF: sub_7101D010+486p
					; DATA XREF: sub_7101D010+486r
		extrn _ZNK7QString3argERKS_iRK5QChar:dword ; CODE XREF:	sub_7101E100+A35p
					; sub_7103CA30+FFp ...
		extrn _ZN16QXmlStreamReader22setNamespaceProcessingEb:dword
					; CODE XREF: sub_7101FFE0+53p
					; DATA XREF: sub_7101FFE0+53r
		extrn _ZNK16QXmlStreamReader5atEndEv:dword ; DATA XREF:	sub_7101FFE0+A8r
		extrn _ZN16QXmlStreamReader8readNextEv:dword ; CODE XREF: sub_7101FFE0+EEp
					; DATA XREF: sub_7101FFE0+EEr
		extrn _ZNK16QXmlStreamReader10attributesEv:dword
					; CODE XREF: sub_7101FFE0+122p
					; DATA XREF: sub_7101FFE0+122r
		extrn _ZNK16QXmlStreamReader4nameEv:dword ; CODE XREF: sub_7101FFE0+145p
					; sub_7101FFE0+25Dp ...
		extrn _ZNK16QXmlStreamReader25processingInstructionDataEv:dword
					; CODE XREF: sub_7101FFE0+30Cp
					; DATA XREF: sub_7101FFE0+30Cr
		extrn _ZNK16QXmlStreamReader27processingInstructionTargetEv:dword
					; CODE XREF: sub_7101FFE0+34Fp
					; DATA XREF: sub_7101FFE0+34Fr
		extrn _ZNK16QXmlStreamReader4textEv:dword ; CODE XREF: sub_7101FFE0+3F2p
					; DATA XREF: sub_7101FFE0+3F2r
		extrn _ZN16QXmlStreamReaderC1ERK10QByteArray:dword
					; CODE XREF: sub_71020A60+ADp
					; .text:71020D1Dp
					; DATA XREF: ...
		extrn _ZN16QXmlStreamReaderC1EP9QIODevice:dword
					; CODE XREF: sub_71020E80+ADp
					; .text:7102113Dp
					; DATA XREF: ...
		extrn _ZNK7QString10startsWithERK13QLatin1StringN2Qt15CaseSensitivityE:dword
					; CODE XREF: sub_710212A0+2EBp
					; DATA XREF: sub_710212A0+2EBr
		extrn _ZNK7QString11lastIndexOfERK13QLatin1StringiN2Qt15CaseSensitivityE:dword
					; CODE XREF: sub_710212A0+31Dp
					; DATA XREF: sub_710212A0+31Dr
		extrn _ZNK7QString3midEii:dword	; CODE XREF: sub_710212A0+348p
					; sub_71024550+FDp
					; DATA XREF: ...
		extrn _ZNK7QString7toAsciiEv:dword ; CODE XREF:	sub_710212A0+368p
					; DATA XREF: sub_710212A0+368r
		extrn _ZN10QByteArray10fromBase64ERKS_:dword ; CODE XREF: sub_710212A0+388p
					; DATA XREF: sub_710212A0+388r
		extrn _Z6qDebugPKcz:dword ; CODE XREF: sub_71023700+56p
					; _ZNK16QSvgTinyDocument16matrixForElementERK7QString+151p ...
		extrn _ZN7QLocaleC1Ev:dword ; CODE XREF: sub_71024550+3Cp
					; DATA XREF: sub_71024550+3Cr
		extrn _ZNK7QLocale4nameEv:dword	; CODE XREF: sub_71024550+4Fp
					; DATA XREF: sub_71024550+4Fr
		extrn _ZNK7QString7indexOfE5QChariN2Qt15CaseSensitivityE:dword
					; CODE XREF: sub_71024550+DEp
					; DATA XREF: sub_71024550+DEr
		extrn _ZNK6QRectForERKS_:dword ; CODE XREF: sub_710248C0+E5p
					; DATA XREF: sub_710248C0+E5r
		extrn _ZNK7QString10startsWithERKS_N2Qt15CaseSensitivityE:dword
					; CODE XREF: sub_71024B70+253p
					; DATA XREF: sub_71024B70+253r
		extrn _ZNK5QTime7elapsedEv:dword ; CODE	XREF: sub_71025A70+112p
					; sub_71025E20+4Dp ...
		extrn _ZN9QHashData12allocateNodeEi:dword ; CODE XREF: sub_71029A80+18Cp
					; _ZN16QSvgTinyDocument12addNamedNodeERK7QStringP8QSvgNode+EEp	...
		extrn _ZN9QHashData6rehashEi:dword ; CODE XREF:	sub_71029A80+229p
					; _ZN16QSvgTinyDocument12addNamedNodeERK7QStringP8QSvgNode+130p ...
		extrn _ZNK5QTime8addMSecsEi:dword
					; CODE XREF: _ZN16QSvgTinyDocument15setCurrentFrameEi+74p
					; DATA XREF: _ZN16QSvgTinyDocument15setCurrentFrameEi+74r
		extrn _ZN5QTime7restartEv:dword
					; DATA XREF: _ZN16QSvgTinyDocument16restartAnimationEv+3r
		extrn _Z5qHashRK7QString:dword ; CODE XREF: sub_71051360+24p
					; sub_71051400+24p ...
		extrn _ZNK7QStringeqERKS_:dword	; CODE XREF: sub_71051360+8Ep
					; sub_71051400+8Ep ...
		extrn _ZNK9QIODevice6isOpenEv:dword ; CODE XREF: sub_7102AD70+62p
					; sub_71034940+56p
					; DATA XREF: ...
		extrn _ZN10QByteArray11shared_nullE:dword
					; DATA XREF: sub_7102AD70:loc_7102ADE0r
					; sub_7102AD70:loc_7102B161r ...
		extrn _ZN10QByteArray6resizeEi:dword ; CODE XREF: sub_7102AD70+125p
					; DATA XREF: sub_7102AD70+125r
		extrn _ZN10QByteArray4chopEi:dword ; CODE XREF:	sub_7102AD70+1ECp
					; sub_7102AD70+22Ap
					; DATA XREF: ...
		extrn _ZN9QIODevice4readEx:dword ; CODE	XREF: sub_7102AD70+29Ap
					; DATA XREF: sub_7102AD70+29Ar
		extrn _ZN10QByteArrayaSERKS_:dword ; CODE XREF:	sub_7102AD70+2BAp
					; DATA XREF: sub_7102AD70+2BAr
		extrn _ZNK16QXmlStreamReader5errorEv:dword
					; CODE XREF: _ZN16QSvgTinyDocument4loadEP16QXmlStreamReader+70p
					; _ZN16QSvgTinyDocument4loadERK10QByteArray+121p ...
		extrn _ZNK10QByteArray10startsWithEPKc:dword
					; CODE XREF: _ZN16QSvgTinyDocument4loadERK10QByteArray+50p
					; DATA XREF: _ZN16QSvgTinyDocument4loadERK10QByteArray+50r
		extrn _ZN7QBufferC1EP10QByteArrayP7QObject:dword
					; CODE XREF: _ZN16QSvgTinyDocument4loadERK10QByteArray+73p
					; sub_710337F0+131p
					; DATA XREF: ...
		extrn _ZN7QBufferD1Ev:dword
					; CODE XREF: _ZN16QSvgTinyDocument4loadERK10QByteArray+CAp
					; sub_7102BA6A+71p ...
		extrn _ZNK9QIODevice11errorStringEv:dword
					; CODE XREF: _ZN16QSvgTinyDocument4loadERK7QString+9Ap
					; sub_71034940+399p ...
		extrn _ZNK16QXmlStreamReader10lineNumberEv:dword
					; CODE XREF: _ZN16QSvgTinyDocument4loadERK7QString+33Ep
					; DATA XREF: _ZN16QSvgTinyDocument4loadERK7QString+33Er
		extrn _ZNK16QXmlStreamReader11errorStringEv:dword
					; CODE XREF: _ZN16QSvgTinyDocument4loadERK7QString+361p
					; DATA XREF: _ZN16QSvgTinyDocument4loadERK7QString+361r
		extrn _ZN5QTime5startEv:dword
					; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+62Ep
					; _ZN16QSvgTinyDocument4drawEP8QPainterRK6QRectF+434p
					; DATA XREF: ...
		extrn __imp_inflateInit2_:dword	; DATA XREF: inflateInit2_r
		extrn __imp_inflate:dword ; DATA XREF: inflater
		extrn __imp_inflateEnd:dword ; DATA XREF: inflateEndr
		extrn __imp_inflateReset:dword ; DATA XREF: inflateResetr
		extrn _ZN7QObject16staticMetaObjectE:dword ; DATA XREF:	sub_7102DAF0r
		extrn _ZN11QMetaObject8activateEP7QObjectPKS_iPPv:dword
					; CODE XREF: _ZN12QSvgRenderer13repaintNeededEv+22p
					; DATA XREF: _ZN12QSvgRenderer13repaintNeededEv+22r
		extrn _ZN7QObject11qt_metacastEPKc:dword
					; DATA XREF: _ZN12QSvgRenderer11qt_metacastEPKc:loc_7102DB93r
		extrn _ZN6QTimer4stopEv:dword
					; CODE XREF: _ZN12QSvgRenderer4loadEP16QXmlStreamReader+9Fp
					; _ZN12QSvgRenderer4loadEP16QXmlStreamReader+11Cp ...
		extrn _ZN7QObject7connectEPKS_PKcS1_S3_N2Qt14ConnectionTypeE:dword
					; CODE XREF: _ZN12QSvgRenderer4loadEP16QXmlStreamReader+E0p
					; _ZN12QSvgRenderer4loadERK10QByteArray+E0p ...
		extrn _ZN6QTimer5startEi:dword
					; CODE XREF: _ZN12QSvgRenderer4loadEP16QXmlStreamReader+100p
					; _ZN12QSvgRenderer4loadERK10QByteArray+100p ...
		extrn _ZN6QTimerC1EP7QObject:dword
					; CODE XREF: _ZN12QSvgRenderer4loadEP16QXmlStreamReader+177p
					; _ZN12QSvgRenderer4loadERK10QByteArray+177p ...
		extrn _ZN7QObjectD2Ev:dword ; CODE XREF: _ZN12QSvgRendererD0Ev+11p
					; sub_7102E8CB+1Cp ...
		extrn _ZN14QObjectPrivateC2Ei:dword
					; CODE XREF: _ZN12QSvgRendererC2EP7QObject+57p
					; _ZN12QSvgRendererC1EP16QXmlStreamReaderP7QObject+57p	...
		extrn _ZN7QObjectC2ER14QObjectPrivatePS_:dword
					; CODE XREF: _ZN12QSvgRendererC2EP7QObject+96p
					; _ZN12QSvgRendererC1EP16QXmlStreamReaderP7QObject+96p	...
		extrn _ZN14QObjectPrivateD2Ev:dword ; CODE XREF: sub_710420B0+5Dp
					; sub_7104212B+16p ...
		extrn _ZN7QObject11qt_metacallEN11QMetaObject4CallEiPPv:dword
					; CODE XREF: _ZN12QSvgRenderer11qt_metacallEN11QMetaObject4CallEiPPv+32p
					; DATA XREF: _ZN12QSvgRenderer11qt_metacallEN11QMetaObject4CallEiPPv+32r
		extrn __imp__ZN7QObject5eventEP6QEvent:dword
					; DATA XREF: _ZN7QObject5eventEP6QEventr
		extrn __imp__ZN7QObject11eventFilterEPS_P6QEvent:dword
					; DATA XREF: _ZN7QObject11eventFilterEPS_P6QEventr
		extrn __imp__ZN7QObject10timerEventEP11QTimerEvent:dword
					; DATA XREF: _ZN7QObject10timerEventEP11QTimerEventr
		extrn __imp__ZN7QObject10childEventEP11QChildEvent:dword
					; DATA XREF: _ZN7QObject10childEventEP11QChildEventr
		extrn __imp__ZN7QObject11customEventEP6QEvent:dword
					; DATA XREF: _ZN7QObject11customEventEP6QEventr
		extrn __imp__ZN7QObject13connectNotifyEPKc:dword
					; DATA XREF: _ZN7QObject13connectNotifyEPKcr
		extrn __imp__ZN7QObject16disconnectNotifyEPKc:dword
					; DATA XREF: _ZN7QObject16disconnectNotifyEPKcr
		extrn _ZNK8QVariant6toSizeEv:dword
					; CODE XREF: _ZNK16QGraphicsSvgItem16maximumCacheSizeEv+8Ap
					; DATA XREF: _ZNK16QGraphicsSvgItem16maximumCacheSizeEv+8Ar
		extrn _ZN8QMapData16continueFreeDataEi:dword ; CODE XREF: sub_71042460+CDp
					; sub_71042460+139p ...
		extrn _ZN8QVariantC1ERK5QSize:dword
					; CODE XREF: _ZN16QGraphicsSvgItem19setMaximumCacheSizeERK5QSize+51p
					; DATA XREF: _ZN16QGraphicsSvgItem19setMaximumCacheSizeERK5QSize+51r
		extrn _ZN8QVariantaSERKS_:dword
					; CODE XREF: _ZN16QGraphicsSvgItem19setMaximumCacheSizeERK5QSize+204p
					; DATA XREF: _ZN16QGraphicsSvgItem19setMaximumCacheSizeERK5QSize+204r
		extrn _ZN8QMapData11shared_nullE:dword
					; DATA XREF: _ZN16QGraphicsSvgItemC2EP13QGraphicsItem+6Er
					; _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem+69r ...
		extrn _ZN11QTextStreamlsEPKc:dword ; CODE XREF:	sub_71032B10+142p
					; sub_71032B10+152p ...
		extrn _ZN11QTextStreamlsEd:dword ; CODE	XREF: sub_71032DA0+1AAp
					; sub_71032DA0+286p ...
		extrn _Z4endlR11QTextStream:dword ; CODE XREF: sub_71032B10+230p
					; sub_71032DA0+407p ...
		extrn _ZNK7QString3argExiiRK5QChar:dword ; CODE	XREF: sub_71033BB0+DBp
					; sub_71033BB0+11Fp ...
		extrn _ZN11QTextStream9setStringEP7QString6QFlagsIN9QIODevice12OpenModeFlagEE:dword
					; CODE XREF: sub_710335A0+68p
					; sub_71034940+2A7p
					; DATA XREF: ...
		extrn _ZN11QTextStream9setDeviceEP9QIODevice:dword
					; CODE XREF: sub_710335A0+9Ep
					; DATA XREF: sub_710335A0+9Er
		extrn _ZN10QByteArrayC1EPKc:dword ; CODE XREF: sub_710335A0+B2p
					; DATA XREF: sub_710335A0+B2r
		extrn _ZN10QTextCodec12codecForNameERK10QByteArray:dword
					; CODE XREF: sub_710335A0+C5p
					; DATA XREF: sub_710335A0+C5r
		extrn _ZN11QTextStream8setCodecEP10QTextCodec:dword
					; CODE XREF: sub_710335A0+108p
					; DATA XREF: sub_710335A0+108r
		extrn _ZN7QBuffer4openE6QFlagsIN9QIODevice12OpenModeFlagEE:dword
					; CODE XREF: sub_710337F0+152p
					; DATA XREF: sub_710337F0+152r
		extrn _ZN7QBuffer5closeEv:dword	; CODE XREF: sub_710337F0+181p
					; DATA XREF: sub_710337F0+181r
		extrn _ZNK10QByteArray8toBase64Ev:dword	; CODE XREF: sub_710337F0+194p
					; DATA XREF: sub_710337F0+194r
		extrn _ZN11QTextStreamlsERK10QByteArray:dword ;	CODE XREF: sub_710337F0+1CBp
					; DATA XREF: sub_710337F0+1CBr
		extrn _ZN7QString6numberEdci:dword ; CODE XREF:	sub_71033BB0+206p
					; sub_7103C610+357p ...
		extrn _ZN7QString6numberEii:dword ; CODE XREF: sub_7103C610+99p
					; sub_7103C610+11Fp
					; DATA XREF: ...
		extrn _ZN7QString11fromRawDataEPK5QChari:dword ; CODE XREF: sub_71034690+7Ap
					; DATA XREF: sub_71034690+7Ar
		extrn _ZNK9QIODevice10isWritableEv:dword ; CODE	XREF: sub_71034940+7Ap
					; DATA XREF: sub_71034940+7Ar
		extrn _ZNK7QString3argEdiciRK5QChar:dword ; CODE XREF: sub_71040150+3A5p
					; DATA XREF: sub_71040150+3A5r

;
; Imports from QtGui4.dll
;
		extrn _ZN12QPainterPathD1Ev:dword ; CODE XREF: sub_710015A0+C4p
					; sub_710015A0+18Ap ...
		extrn _ZN6QImageD1Ev:dword ; CODE XREF:	sub_710033FD+1Cp
					; .text:71003589p ...
		extrn _ZNK8QPainter9transformEv:dword ;	CODE XREF: sub_710015A0+7Dp
					; sub_710015A0+140p ...
		extrn _ZNK10QTransform3mapERK12QPainterPath:dword
					; CODE XREF: sub_710015A0+94p
					; sub_710015A0+157p ...
		extrn _ZNK12QPainterPath12boundingRectEv:dword ; CODE XREF: sub_710015A0+AEp
					; sub_710015A0+174p ...
		extrn _ZN19QPainterPathStrokerC1Ev:dword ; CODE	XREF: sub_710015A0+F6p
					; sub_71005990+9Ap ...
		extrn _ZN19QPainterPathStroker8setWidthEd:dword
					; CODE XREF: sub_710015A0+110p
					; sub_71005990+B4p ...
		extrn _ZNK19QPainterPathStroker12createStrokeERK12QPainterPath:dword
					; CODE XREF: sub_710015A0+12Ap
					; sub_71005990+CEp ...
		extrn _ZN19QPainterPathStrokerD1Ev:dword ; CODE	XREF: sub_710015A0+1B0p
					; sub_7100175B+4Ep ...
		extrn _ZNK10QTransform7mapRectERK5QRect:dword ;	CODE XREF: sub_710017E0+2Ep
					; DATA XREF: sub_710017E0+2Er
		extrn _ZN8QPainter9translateERK7QPointF:dword ;	CODE XREF: sub_71001870+4Dp
					; sub_71001870+D4p ...
		extrn _ZNK8QPainter7opacityEv:dword ; CODE XREF: sub_71002250+7Ap
					; sub_71002250+24Dp ...
		extrn _ZNK8QPainter5brushEv:dword ; CODE XREF: sub_71002250+89p
					; sub_71002250+25Cp ...
		extrn _ZN6QBrushC1ERKS_:dword ;	CODE XREF: sub_71002250+99p
					; sub_71002250+26Cp ...
		extrn _ZNK8QPainter3penEv:dword	; CODE XREF: sub_71002250+ACp
					; sub_71002250+27Fp ...
		extrn _ZN4QPenC1ERKS_:dword ; CODE XREF: sub_71002250+BCp
					; sub_71002250+28Fp ...
		extrn _ZN8QPainter6setPenEN2Qt8PenStyleE:dword ; CODE XREF: sub_71002250+D7p
					; sub_71002250+2AAp ...
		extrn _ZN8QPainter10setOpacityEd:dword ; CODE XREF: sub_71002250+EFp
					; sub_71002250+173p ...
		extrn _ZN8QPainter15drawRoundedRectERK6QRectFddN2Qt8SizeModeE:dword
					; CODE XREF: sub_71002250+127p
					; sub_71002250+1B9p
					; DATA XREF: ...
		extrn _ZN8QPainter6setPenERK4QPen:dword	; CODE XREF: sub_71002250+13Ap
					; sub_71002250+2F6p ...
		extrn _ZNK4QPen6widthFEv:dword ; CODE XREF: sub_71002250+146p
					; sub_71002250+302p ...
		extrn _ZN8QPainter8setBrushEN2Qt10BrushStyleE:dword
					; CODE XREF: sub_71002250+187p
					; sub_71002250+343p ...
		extrn _ZN8QPainter8setBrushERK6QBrush:dword ; CODE XREF: sub_71002250+1CCp
					; sub_71002250+371p ...
		extrn _ZN4QPenD1Ev:dword ; CODE	XREF: sub_71002250+1F9p
					; sub_71002250+39Ep ...
		extrn _ZN6QBrushD1Ev:dword ; CODE XREF:	sub_71002250+20Cp
					; sub_710025F9+3Bp ...
		extrn _ZN8QPainter9drawRectsEPK6QRectFi:dword ;	CODE XREF: sub_71002250+2E3p
					; sub_71002250+35Ep ...
		extrn _ZN8QPainter11drawPolygonEPK7QPointFiN2Qt8FillRuleE:dword
					; CODE XREF: sub_71002690+F7p
					; sub_71002690+184p ...
		extrn _ZN4QPenC1EN2Qt8PenStyleE:dword ;	CODE XREF: sub_710028E0+A8p
					; DATA XREF: sub_710028E0+A8r
		extrn _ZN8QPainter12drawPolylineEPK7QPointFi:dword
					; CODE XREF: sub_710028E0+1EDp
					; DATA XREF: sub_710028E0+1EDr
		extrn _ZN12QPainterPath11setFillRuleEN2Qt8FillRuleE:dword
					; CODE XREF: sub_71002B20+68p
					; sub_71009870+82p ...
		extrn _ZN8QPainter8drawPathERK12QPainterPath:dword
					; CODE XREF: sub_71002B20+FCp
					; sub_71002B20+16Fp ...
		extrn _ZN12QPainterPathC1ERKS_:dword ; CODE XREF: sub_71002E20+68p
					; .text:71002F38p ...
		extrn _ZN8QPainter9drawLinesEPK6QLineFi:dword ;	CODE XREF: sub_710030E0+A8p
					; DATA XREF: sub_710030E0+A8r
		extrn _ZNK6QImage6heightEv:dword ; CODE	XREF: sub_710031A0+58p
					; sub_710032E0+DDp ...
		extrn _ZNK6QImage5widthEv:dword	; CODE XREF: sub_710031A0+65p
					; sub_710032E0+105p ...
		extrn _ZN8QPainter9drawImageERK6QRectFRK6QImageS2_6QFlagsIN2Qt19ImageConversionFlagEE:dword
					; CODE XREF: sub_710031A0+102p
					; DATA XREF: sub_710031A0+102r
		extrn _ZN6QImageC1ERKS_:dword ;	CODE XREF: sub_710032E0+69p
					; .text:710034B9p
					; DATA XREF: ...
		extrn _ZN8QPainter11drawEllipseERK6QRectF:dword
					; CODE XREF: sub_710035C0+E3p
					; sub_710035C0+156p
					; DATA XREF: ...
		extrn _ZN11QTextFormatD2Ev:dword ; CODE	XREF: sub_71003F90+5D6p
					; sub_71003F90+B1Ap ...
		extrn _ZN11QTextFormatC2ERKS_:dword ; CODE XREF: sub_71045C10+D8p
					; sub_71045E80+118p ...
		extrn _ZNK8QPainter4fontEv:dword ; CODE	XREF: sub_71003F90+95p
					; sub_71003F90+734p ...
		extrn _ZNK5QFont10pointSizeFEv:dword ; CODE XREF: sub_71003F90+9Ep
					; sub_71003F90+75Ap ...
		extrn _ZNK8QPainter14worldTransformEv:dword ; CODE XREF: sub_71003F90+C2p
					; sub_71027630+16p ...
		extrn _ZN7QMatrixC1ERKS_:dword ; CODE XREF: sub_71003F90+DBp
					; sub_71009E10+1DBp ...
		extrn _ZN8QPainter5scaleEdd:dword ; CODE XREF: sub_71003F90+15Dp
					; sub_71029D00+8Ep ...
		extrn _ZN15QTextCharFormatC1Ev:dword ; CODE XREF: sub_71003F90+325p
					; sub_71003F90+A4Cp
					; DATA XREF: ...
		extrn _ZN15QTextCharFormat7setFontERK5QFont:dword
					; CODE XREF: sub_71003F90+388p
					; sub_71003F90+A77p
					; DATA XREF: ...
		extrn _ZNK4QPencv8QVariantEv:dword ; CODE XREF:	sub_71003F90+3A7p
					; DATA XREF: sub_71003F90+3A7r
		extrn _ZN11QTextFormat11setPropertyEiRK8QVariant:dword
					; CODE XREF: sub_71003F90+3D2p
					; sub_71003F90+435p
					; DATA XREF: ...
		extrn _ZNK6QBrushcv8QVariantEv:dword ; CODE XREF: sub_71003F90+40Ap
					; DATA XREF: sub_71003F90+40Ar
		extrn _ZN5QFontD1Ev:dword ; CODE XREF: sub_71003F90+5FDp
					; sub_71003F90+B30p ...
		extrn _ZN5QFontC1ERKS_:dword ; CODE XREF: sub_71003F90+744p
					; sub_71003F90+9F2p ...
		extrn _ZN5QFont12setPixelSizeEi:dword ;	CODE XREF: sub_71003F90+792p
					; sub_71003F90+A40p
					; DATA XREF: ...
		extrn _ZN8QPainter17setWorldTransformERK10QTransformb:dword
					; CODE XREF: sub_71003F90+ECFp
					; sub_71022860+316p ...
		extrn _ZN11QTextLayoutC1ERK7QString:dword ; CODE XREF: sub_71003F90+1101p
					; DATA XREF: sub_71003F90+1101r
		extrn _ZNK11QTextLayout10textOptionEv:dword ; CODE XREF: sub_71003F90+1121p
					; DATA XREF: sub_71003F90+1121r
		extrn _ZN11QTextLayout13setTextOptionERK11QTextOption:dword
					; CODE XREF: sub_71003F90+1157p
					; DATA XREF: sub_71003F90+1157r
		extrn _ZN11QTextLayout20setAdditionalFormatsERK5QListINS_11FormatRangeEE:dword
					; CODE XREF: sub_71003F90+11A4p
					; DATA XREF: sub_71003F90+11A4r
		extrn _ZN11QTextLayout11beginLayoutEv:dword ; CODE XREF: sub_71003F90+11B0p
					; DATA XREF: sub_71003F90+11B0r
		extrn _ZN11QTextLayout10createLineEv:dword ; CODE XREF:	sub_71003F90+11C6p
					; DATA XREF: sub_71003F90+11C6r
		extrn _ZN9QTextLine12setLineWidthEd:dword ; CODE XREF: sub_71003F90+1209p
					; DATA XREF: sub_71003F90+1209r
		extrn _ZN11QTextLayout9endLayoutEv:dword ; CODE	XREF: sub_71003F90+1221p
					; DATA XREF: sub_71003F90+1221r
		extrn _ZNK11QTextLayout9lineCountEv:dword ; DATA XREF: sub_71003F90+1227r
		extrn _ZNK11QTextLayout6lineAtEi:dword ; CODE XREF: sub_71003F90+127Cp
					; DATA XREF: sub_71003F90+127Cr
		extrn _ZN9QTextLine11setPositionERK7QPointF:dword
					; CODE XREF: sub_71003F90+12ECp
					; DATA XREF: sub_71003F90+12ECr
		extrn _ZNK9QTextLine6heightEv:dword ; CODE XREF: sub_71003F90+1336p
					; sub_71003F90+1503p
					; DATA XREF: ...
		extrn _ZNK9QTextLine16naturalTextWidthEv:dword
					; CODE XREF: sub_71003F90+1371p
					; sub_71003F90+152Dp ...
		extrn _ZNK11QTextLayout4drawEP8QPainterRK7QPointFRK7QVectorINS_11FormatRangeEERK6QRectF:dword
					; CODE XREF: sub_71003F90+1402p
					; DATA XREF: sub_71003F90+1402r
		extrn _ZN11QTextOptionD1Ev:dword ; CODE	XREF: sub_71003F90+14B9p
					; sub_71003F90+15BFp ...
		extrn _ZN11QTextLayoutD1Ev:dword ; CODE	XREF: sub_71003F90+14CFp
					; sub_71003F90+15D5p ...
		extrn _ZNK9QTextLine6ascentEv:dword ; CODE XREF: sub_71003F90+1587p
					; DATA XREF: sub_71003F90+1587r
		extrn _ZN12QPainterPathC1Ev:dword ; CODE XREF: sub_71005990+71p
					; sub_71005BC0+FFp ...
		extrn _ZN12QPainterPath7addRectERK6QRectF:dword
					; CODE XREF: sub_71005990+8Ep
					; DATA XREF: sub_71005990+8Er
		extrn _ZNK10QTransform7mapRectERK6QRectF:dword
					; CODE XREF: sub_71005990+1A7p
					; _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+1E2p	...
		extrn _ZNK10QTransform3mapERK9QPolygonF:dword ;	CODE XREF: sub_71005BC0+8Ep
					; sub_710060B0+8Ep
					; DATA XREF: ...
		extrn _ZNK9QPolygonF12boundingRectEv:dword ; CODE XREF:	sub_71005BC0+ABp
					; sub_710060B0+ABp
					; DATA XREF: ...
		extrn _ZN12QPainterPath10addPolygonERK9QPolygonF:dword
					; CODE XREF: sub_71005BC0+11Cp
					; sub_710060B0+11Cp
					; DATA XREF: ...
		extrn _ZN12QPainterPath10addEllipseERK6QRectF:dword
					; CODE XREF: sub_71006360+5Cp
					; DATA XREF: sub_71006360+5Cr
		extrn _ZNK10QTransform3mapERK7QPointF:dword ; CODE XREF: sub_710065F0+E0p
					; DATA XREF: sub_710065F0+D5r
		extrn _ZN12QPainterPath6moveToERK7QPointF:dword
					; CODE XREF: sub_710065F0+237p
					; sub_71008500+46Fp ...
		extrn _ZN12QPainterPath6lineToERK7QPointF:dword
					; CODE XREF: sub_710065F0+271p
					; sub_71008500+2C0p ...
		extrn _ZN6QColor6setRgbEiiii:dword ; CODE XREF:	sub_71006CA0+63p
					; sub_7100D500+807p ...
		extrn _ZN6QColor10invalidateEv:dword ; CODE XREF: sub_7100DE80+DBp
					; sub_7100E900+1E1p ...
		extrn _ZN12QPainterPath7cubicToERK7QPointFS2_S2_:dword
					; CODE XREF: sub_710078F0+669p
					; sub_71008500+AD7p ...
		extrn _ZN4QCss13StyleSelectorD2Ev:dword	; CODE XREF: sub_71041DE0+11p
					; DATA XREF: sub_71041DE0+11r ...
		extrn _ZN12QPainterPath6quadToERK7QPointFS2_:dword
					; CODE XREF: sub_71008500+6CBp
					; sub_71008500+D6Dp
					; DATA XREF: ...
		extrn _ZN12QPainterPath12closeSubpathEv:dword ;	CODE XREF: sub_71008500+5CEp
					; sub_71032B10+AAp
					; DATA XREF: ...
		extrn _ZN6QColorC1EN2Qt11GlobalColorE:dword ; CODE XREF: sub_71009C20+28p
					; DATA XREF: sub_71009C20+28r
		extrn _ZN7QMatrixC1Ev:dword ; CODE XREF: sub_71009E10+73p
					; sub_71009E10+677p ...
		extrn _ZN7QMatrixC1Edddddd:dword ; CODE	XREF: sub_71009E10+330p
					; DATA XREF: sub_71009E10+330r
		extrn _ZNK7QMatrixmlERKS_:dword	; CODE XREF: sub_71009E10+34Dp
					; DATA XREF: sub_71009E10+34Dr
		extrn _ZN7QMatrixaSERKS_:dword ; CODE XREF: sub_71009E10+366p
					; sub_7100E900+28Bp ...
		extrn _ZN7QMatrix5shearEdd:dword ; CODE	XREF: sub_71009E10+59Ep
					; sub_71009E10+7EDp
					; DATA XREF: ...
		extrn _ZN7QMatrix9translateEdd:dword ; CODE XREF: sub_71009E10+5E5p
					; sub_71009E10+621p ...
		extrn _ZN7QMatrix6rotateEd:dword ; CODE	XREF: sub_71009E10+5FDp
					; sub_71009E10+85Cp
					; DATA XREF: ...
		extrn _ZN7QMatrix5scaleEdd:dword ; CODE	XREF: sub_71009E10+7A9p
					; DATA XREF: sub_71009E10+7A9r
		extrn _ZN10QTransformC1ERK7QMatrix:dword ; CODE	XREF: sub_7100A6C0+20Ap
					; DATA XREF: sub_7100A6C0+20Ar
		extrn _ZN6QBrushC1EN2Qt10BrushStyleE:dword ; CODE XREF:	sub_7100CAD0+29Ep
					; sub_7100CAD0+372p ...
		extrn _ZN4QPen8setBrushERK6QBrush:dword	; CODE XREF: sub_7100CAD0+38Fp
					; sub_71010F70+2CEp ...
		extrn _ZN6QColor13setNamedColorERK7QString:dword
					; CODE XREF: sub_7100D500+190p
					; DATA XREF: sub_7100D500+190r
		extrn _ZN6QColoraSERKS_:dword ;	CODE XREF: sub_7100D500+1A9p
					; sub_7100D500+33Bp ...
		extrn _ZN6QColor6setRgbEj:dword	; CODE XREF: sub_7100D500+38Ap
					; DATA XREF: sub_7100D500+38Ar
		extrn _ZN6QColor9setAlphaFEd:dword ; CODE XREF:	sub_7100DDD0+77p
					; DATA XREF: sub_7100DDD0+77r
		extrn _ZN9QGradient17setCoordinateModeENS_14CoordinateModeE:dword
					; CODE XREF: sub_7100E900+2E0p
					; DATA XREF: sub_7100E900+2E0r
		extrn _ZNK9QGradient5stopsEv:dword ; CODE XREF:	sub_7100E900+6ADp
					; sub_7101C340+8E2p ...
		extrn _ZN9QGradient8setStopsERK7QVectorI5QPairId6QColorEE:dword
					; CODE XREF: sub_7100E900+6D0p
					; sub_7101C340+5CFp ...
		extrn _ZN15QRadialGradientC1Eddddd:dword ; CODE	XREF: sub_7100F140+2BDp
					; DATA XREF: sub_7100F140+2BDr
		extrn _ZN9QGradient20setInterpolationModeENS_17InterpolationModeE:dword
					; CODE XREF: sub_7100F140+2DEp
					; sub_7100F6F0+2A3p
					; DATA XREF: ...
		extrn _ZN15QLinearGradientC1Edddd:dword	; CODE XREF: sub_7100F6F0+282p
					; DATA XREF: sub_7100F6F0+282r
		extrn _ZN6QBrushC1ERK6QColorN2Qt10BrushStyleE:dword
					; CODE XREF: sub_71010720+29Dp
					; sub_71010F70+2ABp ...
		extrn _ZN4QPen13setMiterLimitEd:dword ;	CODE XREF: sub_71010F70+4D5p
					; sub_71020550+126p ...
		extrn _ZN4QPen8setStyleEN2Qt8PenStyleE:dword ; CODE XREF: sub_71010F70+6B4p
					; sub_71028330+68Ap
					; DATA XREF: ...
		extrn _ZN4QPen9setWidthFEd:dword ; CODE	XREF: sub_71010F70+750p
					; sub_71028330+287p ...
		extrn _ZN4QPen11setCapStyleEN2Qt11PenCapStyleE:dword
					; CODE XREF: sub_71010F70+87Ep
					; sub_71010F70+A14p ...
		extrn _ZN4QPen12setJoinStyleEN2Qt12PenJoinStyleE:dword
					; CODE XREF: sub_71010F70+8E1p
					; sub_71010F70+9E4p ...
		extrn _ZN5QFont9setFamilyERK7QString:dword ; CODE XREF:	sub_71011C90+838p
					; sub_71027E70+21Dp
					; DATA XREF: ...
		extrn _ZN5QFont13setPointSizeFEd:dword ; CODE XREF: sub_71011C90+B23p
					; sub_71027E70+1C7p
					; DATA XREF: ...
		extrn _ZN5QFont8setStyleENS_5StyleE:dword ; CODE XREF: sub_71011C90+BBEp
					; sub_71011C90+EA2p ...
		extrn _ZN5QFont17setCapitalizationENS_14CapitalizationE:dword
					; CODE XREF: sub_71011C90+D05p
					; sub_71011C90+D63p ...
		extrn _ZN4QCss6Parser4initERK7QStringb:dword ; CODE XREF: sub_71015150+63p
					; DATA XREF: sub_71015150+63r
		extrn _ZN4QCss6Parser4testENS_9TokenTypeE:dword
					; CODE XREF: sub_71015150+DDp
					; sub_71015150+160p ...
		extrn _ZNK4QCss6Symbol5lexemEv:dword ; CODE XREF: sub_71015150+644p
					; DATA XREF: sub_71015150+4D0r	...
		extrn _ZN4QCss13StyleSelector19declarationsForNodeENS0_7NodePtrEPKc:dword
					; CODE XREF: sub_7101BB40+6Ep
					; sub_7101C340+1ACp
					; DATA XREF: ...
		extrn _ZNK4QCss5Value8toStringEv:dword ; CODE XREF: sub_7101BB40+26Cp
					; sub_7101BB40+2E9p ...
		extrn _ZN9QGradient10setColorAtEdRK6QColor:dword
					; CODE XREF: sub_7101C340+5FBp
					; DATA XREF: sub_7101C340+5FBr
		extrn _ZN4QCss6ParserC1ERK7QStringb:dword ; CODE XREF: sub_7101D010+4FEp
					; sub_7101D820+E9p
					; DATA XREF: ...
		extrn _ZN4QCss6Parser5parseEPNS_10StyleSheetEN2Qt15CaseSensitivityE:dword
					; CODE XREF: sub_7101D010+523p
					; sub_7101D820+10Bp
					; DATA XREF: ...
		extrn _ZTVN4QCss13StyleSelectorE:dword ; DATA XREF: sub_7101FFE0+65r
		extrn _ZN6QBrushC1EN2Qt11GlobalColorENS0_10BrushStyleE:dword
					; CODE XREF: sub_71020550+92p
					; _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+1F1p ...
		extrn _ZN4QPenC1ERK6QBrushdN2Qt8PenStyleENS3_11PenCapStyleENS3_12PenJoinStyleE:dword
					; CODE XREF: sub_71020550+CAp
					; sub_71022860+113p ...
		extrn _ZN4QPenaSERKS_:dword ; CODE XREF: sub_71020550+EAp
					; sub_71025E20+597p ...
		extrn _ZN4QCss6ParserC1Ev:dword	; CODE XREF: sub_710206E0+99p
					; .text:71020939p ...
		extrn _ZN4QPenC1Ev:dword ; CODE	XREF: sub_710206E0+B2p
					; .text:71020952p ...
		extrn _ZN6QImageC1Ev:dword ; CODE XREF:	sub_710212A0+2BFp
					; DATA XREF: sub_710212A0+2BFr
		extrn _ZN6QImage8fromDataEPKhiPKc:dword	; CODE XREF: sub_710212A0+3CEp
					; DATA XREF: sub_710212A0+3CEr
		extrn _ZN6QImageaSERKS_:dword ;	CODE XREF: sub_710212A0+3F4p
					; sub_710212A0+495p ...
		extrn _ZN6QImageC1ERK7QStringPKc:dword ; CODE XREF: sub_710212A0+472p
					; DATA XREF: sub_710212A0+472r
		extrn _ZNK6QImage6isNullEv:dword ; CODE	XREF: sub_710212A0+4C7p
					; DATA XREF: sub_710212A0+4C7r
		extrn _ZNK6QImage6formatEv:dword ; CODE	XREF: sub_710212A0+693p
					; DATA XREF: sub_710212A0+693r
		extrn _ZNK6QImage15convertToFormatENS_6FormatE6QFlagsIN2Qt19ImageConversionFlagEE:dword
					; CODE XREF: sub_710212A0+AEBp
					; DATA XREF: sub_710212A0+AEBr
		extrn _ZNK4QPen5styleEv:dword ;	CODE XREF: sub_710225F0+63p
					; sub_71028330+2A2p ...
		extrn _ZNK4QPen5brushEv:dword ;	CODE XREF: sub_710225F0+A2p
					; sub_71028330+4A7p
					; DATA XREF: ...
		extrn _ZNK4QPen10isCosmeticEv:dword ; CODE XREF: sub_710225F0+F6p
					; sub_71032B10+10Fp ...
		extrn _ZN6QImageC1EiiNS_6FormatE:dword ; CODE XREF: sub_71022860+92p
					; DATA XREF: sub_71022860+92r
		extrn _ZN8QPainterC1EP12QPaintDevice:dword ; CODE XREF:	sub_71022860+AFp
					; _ZN10QSvgWidget10paintEventEP11QPaintEvent+4Fp
					; DATA XREF: ...
		extrn _ZN10QTransformC1Ev:dword	; CODE XREF: sub_71022860+2F8p
					; sub_71026DA0+84p ...
		extrn _ZN8QPainterD1Ev:dword ; CODE XREF: sub_71022860+3F3p
					; sub_71022C94+95p ...
		extrn _ZN6QBrushaSERKS_:dword ;	CODE XREF: sub_71025890+29p
					; sub_710258E0+4Fp ...
		extrn _ZNK6QColor5alphaEv:dword	; CODE XREF: sub_71025E20+2F3p
					; sub_7103D670+68Dp
					; DATA XREF: ...
		extrn _ZNK6QColor3redEv:dword ;	CODE XREF: sub_71025E20+31Bp
					; sub_710302E0+23Ep ...
		extrn _ZNK6QColor5greenEv:dword	; CODE XREF: sub_71025E20+344p
					; sub_71025E20+352p ...
		extrn _ZNK6QColor4blueEv:dword ; CODE XREF: sub_71025E20+36Fp
					; sub_710302E0+1E4p ...
		extrn _ZN6QBrush8setColorERK6QColor:dword ; CODE XREF: sub_71025E20+4EEp
					; DATA XREF: sub_71025E20+4EEr
		extrn _ZN4QPen8setColorERK6QColor:dword	; CODE XREF: sub_71025E20+5A7p
					; DATA XREF: sub_71025E20+5A7r
		extrn _ZN6QBrushC1Ev:dword ; CODE XREF:	.text:710264CFp
					; .text:7102658Fp ...
		extrn _ZN10QTransformaSERKS_:dword ; CODE XREF:	sub_71027040+164p
					; sub_71027040+28Ap ...
		extrn _ZN10QTransform5shearEdd:dword ; CODE XREF: sub_71027040+189p
					; sub_71027040+2AFp
					; DATA XREF: ...
		extrn _ZN10QTransform9translateEdd:dword ; CODE	XREF: sub_71027040+3A7p
					; sub_71027040+3E1p ...
		extrn _ZN10QTransform6rotateEdN2Qt4AxisE:dword
					; CODE XREF: sub_71027040+3C4p
					; DATA XREF: sub_71027040+3C4r
		extrn _ZN10QTransform5scaleEdd:dword ; CODE XREF: sub_71027040+4B1p
					; _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+1C3p
					; DATA XREF: ...
		extrn _ZN8QPainter18setCompositionModeENS_15CompositionModeE:dword
					; DATA XREF: sub_71027700+12r
					; sub_71027720+32r
		extrn _ZNK8QPainter15compositionModeEv:dword ; CODE XREF: sub_71027720+16p
					; DATA XREF: sub_71027720+16r
		extrn _ZN8QPainter7setFontERK5QFont:dword ; CODE XREF: sub_71027AA0+21p
					; sub_71027E70+11Dp
					; DATA XREF: ...
		extrn _ZN5QFontC1Ev:dword ; CODE XREF: sub_71027AF0+5Dp
					; sub_71027AF0+7Ap ...
		extrn _ZN5QFontaSERKS_:dword ; CODE XREF: sub_71027E70+52p
					; sub_7103C610+57p
					; DATA XREF: ...
		extrn _ZN5QFont9setWeightEi:dword ; CODE XREF: sub_71027E70+103p
					; DATA XREF: sub_71027E70+103r
		extrn _ZNK5QFont14capitalizationEv:dword ; CODE	XREF: sub_71027E70+153p
					; DATA XREF: sub_71027E70+153r
		extrn _ZNK5QFont5styleEv:dword ; CODE XREF: sub_71027E70+185p
					; sub_7103C610+1D7p
					; DATA XREF: ...
		extrn _ZNK5QFont6familyEv:dword	; CODE XREF: sub_71027E70+200p
					; sub_7103C610+17Fp
					; DATA XREF: ...
		extrn _ZN4QPen14setDashPatternERK7QVectorIdE:dword
					; CODE XREF: sub_71028160+106p
					; sub_71028160+167p ...
		extrn _ZN4QPen11setCosmeticEb:dword ; CODE XREF: sub_71028330+22Bp
					; DATA XREF: sub_71028330+22Br
		extrn _ZNK4QPen11dashPatternEv:dword ; CODE XREF: sub_71028330+2E7p
					; sub_71028330+504p ...
		extrn _ZNK4QPen8capStyleEv:dword ; CODE	XREF: sub_71028330+364p
					; sub_71040150+11Fp
					; DATA XREF: ...
		extrn _ZNK4QPen9joinStyleEv:dword ; CODE XREF: sub_71028330+399p
					; sub_71040150+166p
					; DATA XREF: ...
		extrn _ZNK4QPen10miterLimitEv:dword ; CODE XREF: sub_71028330+3CCp
					; sub_71040150+196p ...
		extrn _ZN4QPen13setDashOffsetEd:dword ;	CODE XREF: sub_71028330+441p
					; DATA XREF: sub_71028330+441r
		extrn _ZN6QBrushC1ERK9QGradient:dword ;	CODE XREF: sub_71029530+1CFp
					; DATA XREF: sub_71029530+1CFr
		extrn _ZN6QBrush9setMatrixERK7QMatrix:dword ; CODE XREF: sub_71029530+239p
					; DATA XREF: sub_71029530+239r
		extrn _ZN12QPainterPathaSERKS_:dword ; CODE XREF: sub_71029A80+12Bp
					; DATA XREF: sub_71029A80+12Br
		extrn _ZN8QPainter4saveEv:dword	; CODE XREF: sub_71029D00+51p
					; _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+A6p	...
		extrn _ZN8QPainter7restoreEv:dword ; CODE XREF:	sub_71029D00+5A0p
					; _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+5CAp ...
		extrn _ZN10QTransformmLERKS_:dword
					; CODE XREF: _ZNK16QSvgTinyDocument16matrixForElementERK7QString+B4p
					; DATA XREF: _ZNK16QSvgTinyDocument16matrixForElementERK7QString+B4r
		extrn _ZNK10QTransform8toAffineEv:dword
					; CODE XREF: _ZNK16QSvgTinyDocument16matrixForElementERK7QString+DDp
					; DATA XREF: _ZNK16QSvgTinyDocument16matrixForElementERK7QString+DDr
		extrn _ZNK8QPainter6deviceEv:dword
					; CODE XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+27Dp
					; DATA XREF: _ZN16QSvgTinyDocument17mapSourceToTargetEP8QPainterRK6QRectFS4_+27Dr
		extrn _ZN8QPainter13setRenderHintENS_10RenderHintEb:dword
					; CODE XREF: _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+240p
					; _ZN16QSvgTinyDocument4drawEP8QPainterRK7QStringRK6QRectF+25Cp ...
		extrn _ZN7QWidgetD2Ev:dword ; CODE XREF: _ZN10QSvgWidgetD0Ev+18p
					; sub_7102F889+2Ep ...
		extrn _ZN14QWidgetPrivateC2Ei:dword
					; CODE XREF: _ZN10QSvgWidgetC1ERK7QStringP7QWidget+5Ep
					; _ZN10QSvgWidgetC2ERK7QStringP7QWidget+5Ep ...
		extrn _ZN7QWidgetC2ER14QWidgetPrivatePS_6QFlagsIN2Qt10WindowTypeEE:dword
					; CODE XREF: _ZN10QSvgWidgetC1ERK7QStringP7QWidget+8Cp
					; _ZN10QSvgWidgetC2ERK7QStringP7QWidget+8Cp ...
		extrn _ZN14QWidgetPrivateD2Ev:dword ; CODE XREF: sub_71041E30+11p
					; DATA XREF: sub_71041E30+11r ...
		extrn __imp__ZNK14QWidgetPrivate17hasHeightForWidthEv:dword
					; DATA XREF: _ZNK14QWidgetPrivate17hasHeightForWidthEvr
		extrn _ZN15QGraphicsObject16staticMetaObjectE:dword
					; DATA XREF: sub_7102FE80r
		extrn _ZTV15QGraphicsObject:dword ; DATA XREF: sub_7103C530+2Fr
					; sub_71041760+2Fr ...
		extrn _ZN13QGraphicsItemD2Ev:dword ; CODE XREF:	sub_7103C530+51p
					; sub_71041760+51p ...
		extrn _ZN15QGraphicsObject11qt_metacastEPKc:dword
					; DATA XREF: _ZN16QGraphicsSvgItem11qt_metacastEPKc:loc_7102FEF6r
		extrn _ZN13QGraphicsItem6updateERK6QRectF:dword
					; CODE XREF: _ZN16QGraphicsSvgItem18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv+4Cp
					; _ZN16QGraphicsSvgItem12setElementIdERK7QString+184p ...
		extrn _ZNK13QGraphicsItem9cacheModeEv:dword
					; CODE XREF: _ZNK16QGraphicsSvgItem16isCachingEnabledEv+Dp
					; DATA XREF: _ZNK16QGraphicsSvgItem16isCachingEnabledEv+Dr
		extrn _ZN13QGraphicsItem12setCacheModeENS_9CacheModeERK5QSize:dword
					; CODE XREF: _ZN16QGraphicsSvgItem17setCachingEnabledEb+35p
					; _ZN16QGraphicsSvgItemC2EP13QGraphicsItem+302p ...
		extrn _ZN13QGraphicsItem21prepareGeometryChangeEv:dword
					; CODE XREF: _ZN16QGraphicsSvgItem12setElementIdERK7QString+144p
					; _ZN16QGraphicsSvgItem17setSharedRendererEP12QSvgRenderer+146p ...
		extrn _ZNK8QPalette5brushENS_10ColorGroupENS_9ColorRoleE:dword
					; CODE XREF: sub_710302E0+1BCp
					; sub_710302E0+40Dp
					; DATA XREF: ...
		extrn _ZNK26QAbstractGraphicsShapeItem3penEv:dword
					; CODE XREF: sub_710302E0+561p
					; sub_710302E0+61Ap ...
		extrn _ZNK17QGraphicsLineItem3penEv:dword ; CODE XREF: sub_710302E0+5BBp
					; DATA XREF: sub_710302E0+5BBr
		extrn _ZTV20QGraphicsItemPrivate:dword
					; DATA XREF: _ZN16QGraphicsSvgItemC2EP13QGraphicsItem+48r
					; _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem+51r ...
		extrn _ZN15QGraphicsObject11qt_metacallEN11QMetaObject4CallEiPPv:dword
					; CODE XREF: _ZN16QGraphicsSvgItem11qt_metacallEN11QMetaObject4CallEiPPv+51p
					; DATA XREF: _ZN16QGraphicsSvgItem11qt_metacallEN11QMetaObject4CallEiPPv+51r
		extrn _ZN15QGraphicsObjectC2ER20QGraphicsItemPrivateP13QGraphicsItemP14QGraphicsScene:dword
					; CODE XREF: _ZN16QGraphicsSvgItemC2EP13QGraphicsItem+22Ep
					; _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem+224p ...
		extrn _ZN13QGraphicsItem13setParentItemEPS_:dword
					; CODE XREF: _ZN16QGraphicsSvgItemC2EP13QGraphicsItem+276p
					; _ZN16QGraphicsSvgItemC1ERK7QStringP13QGraphicsItem+272p ...
		extrn __imp__ZN13QGraphicsItem7advanceEi:dword
					; DATA XREF: _ZN13QGraphicsItem7advanceEir
		extrn __imp__ZNK13QGraphicsItem5shapeEv:dword
					; DATA XREF: _ZNK13QGraphicsItem5shapeEvr
		extrn __imp__ZNK13QGraphicsItem8containsERK7QPointF:dword
					; DATA XREF: _ZNK13QGraphicsItem8containsERK7QPointFr
		extrn __imp__ZNK13QGraphicsItem16collidesWithItemEPKS_N2Qt17ItemSelectionModeE:dword
					; DATA XREF: _ZNK13QGraphicsItem16collidesWithItemEPKS_N2Qt17ItemSelectionModeEr
		extrn __imp__ZNK13QGraphicsItem16collidesWithPathERK12QPainterPathN2Qt17ItemSelectionModeE:dword
					; DATA XREF: _ZNK13QGraphicsItem16collidesWithPathERK12QPainterPathN2Qt17ItemSelectionModeEr
		extrn __imp__ZNK13QGraphicsItem12isObscuredByEPKS_:dword
					; DATA XREF: _ZNK13QGraphicsItem12isObscuredByEPKS_r
		extrn __imp__ZNK13QGraphicsItem10opaqueAreaEv:dword
					; DATA XREF: _ZNK13QGraphicsItem10opaqueAreaEvr
		extrn __imp__ZN13QGraphicsItem16sceneEventFilterEPS_P6QEvent:dword
					; DATA XREF: _ZN13QGraphicsItem16sceneEventFilterEPS_P6QEventr
		extrn __imp__ZN13QGraphicsItem10sceneEventEP6QEvent:dword
					; DATA XREF: _ZN13QGraphicsItem10sceneEventEP6QEventr
		extrn __imp__ZN13QGraphicsItem16contextMenuEventEP30QGraphicsSceneContextMenuEvent:dword
					; DATA XREF: _ZN13QGraphicsItem16contextMenuEventEP30QGraphicsSceneContextMenuEventr
		extrn __imp__ZN13QGraphicsItem14dragEnterEventEP27QGraphicsSceneDragDropEvent:dword
					; DATA XREF: _ZN13QGraphicsItem14dragEnterEventEP27QGraphicsSceneDragDropEventr
		extrn __imp__ZN13QGraphicsItem14dragLeaveEventEP27QGraphicsSceneDragDropEvent:dword
					; DATA XREF: _ZN13QGraphicsItem14dragLeaveEventEP27QGraphicsSceneDragDropEventr
		extrn __imp__ZN13QGraphicsItem13dragMoveEventEP27QGraphicsSceneDragDropEvent:dword
					; DATA XREF: _ZN13QGraphicsItem13dragMoveEventEP27QGraphicsSceneDragDropEventr
		extrn __imp__ZN13QGraphicsItem9dropEventEP27QGraphicsSceneDragDropEvent:dword
					; DATA XREF: _ZN13QGraphicsItem9dropEventEP27QGraphicsSceneDragDropEventr
		extrn __imp__ZN13QGraphicsItem12focusInEventEP11QFocusEvent:dword
					; DATA XREF: _ZN13QGraphicsItem12focusInEventEP11QFocusEventr
		extrn __imp__ZN13QGraphicsItem13focusOutEventEP11QFocusEvent:dword
					; DATA XREF: _ZN13QGraphicsItem13focusOutEventEP11QFocusEventr
		extrn __imp__ZN13QGraphicsItem15hoverEnterEventEP24QGraphicsSceneHoverEvent:dword
					; DATA XREF: _ZN13QGraphicsItem15hoverEnterEventEP24QGraphicsSceneHoverEventr
		extrn __imp__ZN13QGraphicsItem14hoverMoveEventEP24QGraphicsSceneHoverEvent:dword
					; DATA XREF: _ZN13QGraphicsItem14hoverMoveEventEP24QGraphicsSceneHoverEventr
		extrn __imp__ZN13QGraphicsItem15hoverLeaveEventEP24QGraphicsSceneHoverEvent:dword
					; DATA XREF: _ZN13QGraphicsItem15hoverLeaveEventEP24QGraphicsSceneHoverEventr
		extrn __imp__ZN13QGraphicsItem13keyPressEventEP9QKeyEvent:dword
					; DATA XREF: _ZN13QGraphicsItem13keyPressEventEP9QKeyEventr
		extrn __imp__ZN13QGraphicsItem15keyReleaseEventEP9QKeyEvent:dword
					; DATA XREF: _ZN13QGraphicsItem15keyReleaseEventEP9QKeyEventr
		extrn __imp__ZN13QGraphicsItem15mousePressEventEP24QGraphicsSceneMouseEvent:dword
					; DATA XREF: _ZN13QGraphicsItem15mousePressEventEP24QGraphicsSceneMouseEventr
		extrn __imp__ZN13QGraphicsItem14mouseMoveEventEP24QGraphicsSceneMouseEvent:dword
					; DATA XREF: _ZN13QGraphicsItem14mouseMoveEventEP24QGraphicsSceneMouseEventr
		extrn __imp__ZN13QGraphicsItem17mouseReleaseEventEP24QGraphicsSceneMouseEvent:dword
					; DATA XREF: _ZN13QGraphicsItem17mouseReleaseEventEP24QGraphicsSceneMouseEventr
		extrn __imp__ZN13QGraphicsItem21mouseDoubleClickEventEP24QGraphicsSceneMouseEvent:dword
					; DATA XREF: _ZN13QGraphicsItem21mouseDoubleClickEventEP24QGraphicsSceneMouseEventr
		extrn __imp__ZN13QGraphicsItem10wheelEventEP24QGraphicsSceneWheelEvent:dword
					; DATA XREF: _ZN13QGraphicsItem10wheelEventEP24QGraphicsSceneWheelEventr
		extrn __imp__ZN13QGraphicsItem16inputMethodEventEP17QInputMethodEvent:dword
					; DATA XREF: _ZN13QGraphicsItem16inputMethodEventEP17QInputMethodEventr
		extrn __imp__ZNK13QGraphicsItem16inputMethodQueryEN2Qt16InputMethodQueryE:dword
					; DATA XREF: _ZNK13QGraphicsItem16inputMethodQueryEN2Qt16InputMethodQueryEr
		extrn __imp__ZN13QGraphicsItem10itemChangeENS_18GraphicsItemChangeERK8QVariant:dword
					; DATA XREF: _ZN13QGraphicsItem10itemChangeENS_18GraphicsItemChangeERK8QVariantr
		extrn __imp__ZNK13QGraphicsItem17supportsExtensionENS_9ExtensionE:dword
					; DATA XREF: _ZNK13QGraphicsItem17supportsExtensionENS_9ExtensionEr
		extrn __imp__ZN13QGraphicsItem12setExtensionENS_9ExtensionERK8QVariant:dword
					; DATA XREF: _ZN13QGraphicsItem12setExtensionENS_9ExtensionERK8QVariantr
		extrn __imp__ZNK13QGraphicsItem9extensionERK8QVariant:dword
					; DATA XREF: _ZNK13QGraphicsItem9extensionERK8QVariantr
		extrn __imp__ZN20QGraphicsItemPrivate30updateSceneTransformFromParentEv:dword
					; DATA XREF: _ZN20QGraphicsItemPrivate30updateSceneTransformFromParentEvr
		extrn __imp__ZNK20QGraphicsItemPrivate22inputMethodQueryHelperEN2Qt16InputMethodQueryE:dword
					; DATA XREF: _ZNK20QGraphicsItemPrivate22inputMethodQueryHelperEN2Qt16InputMethodQueryEr
		extrn __imp__ZN20QGraphicsItemPrivate12setPosHelperERK7QPointF:dword
					; DATA XREF: _ZN20QGraphicsItemPrivate12setPosHelperERK7QPointFr
		extrn __imp__ZNK20QGraphicsItemPrivate13isProxyWidgetEv:dword
					; DATA XREF: _ZNK20QGraphicsItemPrivate13isProxyWidgetEvr
		extrn __imp__ZN20QGraphicsItemPrivate18subFocusItemChangeEv:dword
					; DATA XREF: _ZN20QGraphicsItemPrivate18subFocusItemChangeEvr
		extrn __imp__ZN20QGraphicsItemPrivate20focusScopeItemChangeEb:dword
					; DATA XREF: _ZN20QGraphicsItemPrivate20focusScopeItemChangeEbr
		extrn __imp__ZN20QGraphicsItemPrivate18siblingOrderChangeEv:dword
					; DATA XREF: _ZN20QGraphicsItemPrivate18siblingOrderChangeEvr
		extrn __imp__ZNK20QGraphicsItemPrivate5widthEv:dword
					; DATA XREF: _ZNK20QGraphicsItemPrivate5widthEvr
		extrn __imp__ZN20QGraphicsItemPrivate8setWidthEd:dword
					; DATA XREF: _ZN20QGraphicsItemPrivate8setWidthEdr
		extrn __imp__ZN20QGraphicsItemPrivate10resetWidthEv:dword
					; DATA XREF: _ZN20QGraphicsItemPrivate10resetWidthEvr
		extrn __imp__ZNK20QGraphicsItemPrivate6heightEv:dword
					; DATA XREF: _ZNK20QGraphicsItemPrivate6heightEvr
		extrn __imp__ZN20QGraphicsItemPrivate9setHeightEd:dword
					; DATA XREF: _ZN20QGraphicsItemPrivate9setHeightEdr
		extrn __imp__ZN20QGraphicsItemPrivate11resetHeightEv:dword
					; DATA XREF: _ZN20QGraphicsItemPrivate11resetHeightEvr
		extrn _ZN12QPaintEngineD2Ev:dword ; CODE XREF: sub_71041500+11p
					; DATA XREF: sub_71041500+11r ...
		extrn _ZN12QPainterPathC1ERK7QPointF:dword ; CODE XREF:	sub_71032B10+46p
					; DATA XREF: sub_71032B10+46r
		extrn _ZNK17QPaintEngineState3penEv:dword ; CODE XREF: sub_71032B10+F9p
					; sub_71032DA0+7Cp ...
		extrn _ZNK12QPainterPath8fillRuleEv:dword ; CODE XREF: sub_71032DA0+4Bp
					; DATA XREF: sub_71032DA0+4Br
		extrn _ZN7QRegionD1Ev:dword ; CODE XREF: sub_71041EC0+45p
					; sub_71041EC0+5Bp ...
		extrn _ZNK9QGradient17interpolationModeEv:dword
					; CODE XREF: sub_7103D670+76p
					; DATA XREF: sub_7103D670+76r
		extrn _ZNK6QColor6alphaFEv:dword ; CODE	XREF: sub_71033BB0+1E6p
					; sub_7103D670+2C2p
					; DATA XREF: ...
		extrn _ZNK6QColor4rgbaEv:dword ; CODE XREF: sub_7103D670+742p
					; sub_7103D670+85Fp
					; DATA XREF: ...
		extrn _ZN6QColor8fromRgbaEj:dword ; CODE XREF: sub_7103D670+A21p
					; DATA XREF: sub_7103D670+A21r
		extrn _ZNK6QImage4saveEP9QIODevicePKci:dword ; CODE XREF: sub_710337F0+175p
					; DATA XREF: sub_710337F0+175r
		extrn _ZNK7QPixmap7toImageEv:dword ; CODE XREF:	sub_71033AE0+43p
					; DATA XREF: sub_71033AE0+43r
		extrn _ZN7QRegionC1Ev:dword ; CODE XREF: sub_71042D80+61p
					; DATA XREF: sub_71042D80+35r
		extrn _ZN12QPaintDeviceC2Ev:dword ; CODE XREF: _ZN13QSvgGeneratorC1Ev+3Cp
					; _ZN13QSvgGeneratorC2Ev+3Cp
					; DATA XREF: ...
		extrn _ZN12QPaintEngineC2ER19QPaintEnginePrivate6QFlagsINS_18PaintEngineFeatureEE:dword
					; CODE XREF: _ZN13QSvgGeneratorC1Ev+D8p
					; _ZN13QSvgGeneratorC2Ev+D8p
					; DATA XREF: ...
		extrn _ZN12QPaintDeviceD2Ev:dword ; CODE XREF: sub_71033FDD+53p
					; sub_7103414D+53p ...
		extrn _ZNK9QGradient14coordinateModeEv:dword ; CODE XREF: sub_7103E740+12Ep
					; sub_7103F3B0+12Ep
					; DATA XREF: ...
		extrn _ZNK15QRadialGradient10focalPointEv:dword
					; CODE XREF: sub_7103F3B0+224p
					; sub_7103F3B0+28Dp
					; DATA XREF: ...
		extrn _ZNK15QRadialGradient6radiusEv:dword ; CODE XREF:	sub_7103F3B0+2ECp
					; DATA XREF: sub_7103F3B0+2ECr
		extrn _ZNK15QRadialGradient6centerEv:dword ; CODE XREF:	sub_7103F3B0+34Cp
					; sub_7103F3B0+3B2p
					; DATA XREF: ...
		extrn _ZNK5QFont9pixelSizeEv:dword ; CODE XREF:	sub_7103C610+6Cp
					; DATA XREF: sub_7103C610+60r
		extrn _ZNK5QFont6weightEv:dword	; CODE XREF: sub_7103C610+DFp
					; DATA XREF: sub_7103C610+DFr
		extrn _ZNK9QTextItem4fontEv:dword ; CODE XREF: sub_71034690+15Ap
					; DATA XREF: sub_71034690+15Ar
		extrn _ZN2Qt6escapeERK7QString:dword ; CODE XREF: sub_71034690+19Cp
					; DATA XREF: sub_71034690+19Cr
		extrn _ZNK15QLinearGradient9finalStopEv:dword ;	CODE XREF: sub_7103E740+224p
					; sub_7103E740+28Dp
					; DATA XREF: ...
		extrn _ZNK15QLinearGradient5startEv:dword ; CODE XREF: sub_7103E740+2F6p
					; sub_7103E740+359p
					; DATA XREF: ...
		extrn _ZNK6QBrush8gradientEv:dword ; CODE XREF:	sub_7103CA30+87p
					; sub_7103CA30+2B6p ...
		extrn _ZNK4QPen5widthEv:dword ;	CODE XREF: sub_71040150+252p
					; DATA XREF: sub_71040150+252r
		extrn _ZNK4QPen5colorEv:dword ;	CODE XREF: sub_71040150+282p
					; sub_71040150+908p
					; DATA XREF: ...
		extrn _ZNK4QPen10dashOffsetEv:dword ; CODE XREF: sub_71040150+49Dp
					; DATA XREF: sub_71040150+49Dr
		extrn _ZNK17QPaintEngineState5brushEv:dword ; CODE XREF: sub_710350E0+7Cp
					; DATA XREF: sub_710350E0+7Cr
		extrn _ZNK17QPaintEngineState6matrixEv:dword ; CODE XREF: sub_710350E0+100p
					; DATA XREF: sub_710350E0+100r
		extrn _ZNK17QPaintEngineState4fontEv:dword ; CODE XREF:	sub_710350E0+287p
					; DATA XREF: sub_710350E0+287r
		extrn _ZNK17QPaintEngineState7opacityEv:dword ;	CODE XREF: sub_710350E0+2C2p
					; sub_710350E0+2F9p
					; DATA XREF: ...
		extrn __imp__ZN12QPaintEngine9drawRectsEPK5QRecti:dword
					; DATA XREF: _ZN12QPaintEngine9drawRectsEPK5QRectir
		extrn __imp__ZN12QPaintEngine9drawRectsEPK6QRectFi:dword
					; DATA XREF: _ZN12QPaintEngine9drawRectsEPK6QRectFir
		extrn __imp__ZN12QPaintEngine9drawLinesEPK5QLinei:dword
					; DATA XREF: _ZN12QPaintEngine9drawLinesEPK5QLineir
		extrn __imp__ZN12QPaintEngine9drawLinesEPK6QLineFi:dword
					; DATA XREF: _ZN12QPaintEngine9drawLinesEPK6QLineFir
		extrn __imp__ZN12QPaintEngine11drawEllipseERK6QRectF:dword
					; DATA XREF: _ZN12QPaintEngine11drawEllipseERK6QRectFr
		extrn __imp__ZN12QPaintEngine11drawEllipseERK5QRect:dword
					; DATA XREF: _ZN12QPaintEngine11drawEllipseERK5QRectr
		extrn __imp__ZN12QPaintEngine10drawPointsEPK7QPointFi:dword
					; DATA XREF: _ZN12QPaintEngine10drawPointsEPK7QPointFir
		extrn __imp__ZN12QPaintEngine10drawPointsEPK6QPointi:dword
					; DATA XREF: _ZN12QPaintEngine10drawPointsEPK6QPointir
		extrn __imp__ZN12QPaintEngine11drawPolygonEPK6QPointiNS_15PolygonDrawModeE:dword
					; DATA XREF: _ZN12QPaintEngine11drawPolygonEPK6QPointiNS_15PolygonDrawModeEr
		extrn __imp__ZN12QPaintEngine15drawTiledPixmapERK6QRectFRK7QPixmapRK7QPointF:dword
					; DATA XREF: _ZN12QPaintEngine15drawTiledPixmapERK6QRectFRK7QPixmapRK7QPointFr
		extrn __imp__ZN12QPaintEngine9drawImageERK6QRectFRK6QImageS2_6QFlagsIN2Qt19ImageConversionFlagEE:dword
					; DATA XREF: _ZN12QPaintEngine9drawImageERK6QRectFRK6QImageS2_6QFlagsIN2Qt19ImageConversionFlagEEr
		extrn __imp__ZNK12QPaintEngine5getDCEv:dword
					; DATA XREF: _ZNK12QPaintEngine5getDCEvr
		extrn __imp__ZNK12QPaintEngine9releaseDCEP5HDC__:dword
					; DATA XREF: _ZNK12QPaintEngine9releaseDCEP5HDC__r
		extrn __imp__ZNK12QPaintEngine16coordinateOffsetEv:dword
					; DATA XREF: _ZNK12QPaintEngine16coordinateOffsetEvr
		extrn __imp__ZNK12QPaintDevice5getDCEv:dword
					; DATA XREF: _ZNK12QPaintDevice5getDCEvr
		extrn __imp__ZNK12QPaintDevice9releaseDCEP5HDC__:dword
					; DATA XREF: _ZNK12QPaintDevice9releaseDCEP5HDC__r
		extrn _ZN7QWidget16staticMetaObjectE:dword ; DATA XREF:	sub_71035550r
		extrn _ZN7QWidget11qt_metacastEPKc:dword
					; DATA XREF: _ZN10QSvgWidget11qt_metacastEPKc:loc_710355B3r
		extrn _ZN7QWidget11qt_metacallEN11QMetaObject4CallEiPPv:dword
					; CODE XREF: _ZN10QSvgWidget11qt_metacallEN11QMetaObject4CallEiPPv+2Ep
					; DATA XREF: _ZN10QSvgWidget11qt_metacallEN11QMetaObject4CallEiPPv+2Er
		extrn __imp__ZN7QWidget5eventEP6QEvent:dword
					; DATA XREF: _ZN7QWidget5eventEP6QEventr
		extrn __imp__ZNK7QWidget7devTypeEv:dword
					; DATA XREF: _ZNK7QWidget7devTypeEvr
		extrn __imp__ZN7QWidget10setVisibleEb:dword
					; DATA XREF: _ZN7QWidget10setVisibleEbr
		extrn __imp__ZNK7QWidget15minimumSizeHintEv:dword
					; DATA XREF: _ZNK7QWidget15minimumSizeHintEvr
		extrn __imp__ZNK7QWidget14heightForWidthEi:dword
					; DATA XREF: _ZNK7QWidget14heightForWidthEir
		extrn __imp__ZNK7QWidget5getDCEv:dword ; DATA XREF: _ZNK7QWidget5getDCEvr
		extrn __imp__ZNK7QWidget9releaseDCEP5HDC__:dword
					; DATA XREF: _ZNK7QWidget9releaseDCEP5HDC__r
		extrn __imp__ZNK7QWidget11paintEngineEv:dword
					; DATA XREF: _ZNK7QWidget11paintEngineEvr
		extrn __imp__ZN7QWidget15mousePressEventEP11QMouseEvent:dword
					; DATA XREF: _ZN7QWidget15mousePressEventEP11QMouseEventr
		extrn __imp__ZN7QWidget17mouseReleaseEventEP11QMouseEvent:dword
					; DATA XREF: _ZN7QWidget17mouseReleaseEventEP11QMouseEventr
		extrn __imp__ZN7QWidget21mouseDoubleClickEventEP11QMouseEvent:dword
					; DATA XREF: _ZN7QWidget21mouseDoubleClickEventEP11QMouseEventr
		extrn __imp__ZN7QWidget14mouseMoveEventEP11QMouseEvent:dword
					; DATA XREF: _ZN7QWidget14mouseMoveEventEP11QMouseEventr
		extrn __imp__ZN7QWidget10wheelEventEP11QWheelEvent:dword
					; DATA XREF: _ZN7QWidget10wheelEventEP11QWheelEventr
		extrn __imp__ZN7QWidget13keyPressEventEP9QKeyEvent:dword
					; DATA XREF: _ZN7QWidget13keyPressEventEP9QKeyEventr
		extrn __imp__ZN7QWidget15keyReleaseEventEP9QKeyEvent:dword
					; DATA XREF: _ZN7QWidget15keyReleaseEventEP9QKeyEventr
		extrn __imp__ZN7QWidget12focusInEventEP11QFocusEvent:dword
					; DATA XREF: _ZN7QWidget12focusInEventEP11QFocusEventr
		extrn __imp__ZN7QWidget13focusOutEventEP11QFocusEvent:dword
					; DATA XREF: _ZN7QWidget13focusOutEventEP11QFocusEventr
		extrn __imp__ZN7QWidget10enterEventEP6QEvent:dword
					; DATA XREF: _ZN7QWidget10enterEventEP6QEventr
		extrn __imp__ZN7QWidget10leaveEventEP6QEvent:dword
					; DATA XREF: _ZN7QWidget10leaveEventEP6QEventr
		extrn __imp__ZN7QWidget9moveEventEP10QMoveEvent:dword
					; DATA XREF: _ZN7QWidget9moveEventEP10QMoveEventr
		extrn __imp__ZN7QWidget11resizeEventEP12QResizeEvent:dword
					; DATA XREF: _ZN7QWidget11resizeEventEP12QResizeEventr
		extrn __imp__ZN7QWidget10closeEventEP11QCloseEvent:dword
					; DATA XREF: _ZN7QWidget10closeEventEP11QCloseEventr
		extrn __imp__ZN7QWidget16contextMenuEventEP17QContextMenuEvent:dword
					; DATA XREF: _ZN7QWidget16contextMenuEventEP17QContextMenuEventr
		extrn __imp__ZN7QWidget11tabletEventEP12QTabletEvent:dword
					; DATA XREF: _ZN7QWidget11tabletEventEP12QTabletEventr
		extrn __imp__ZN7QWidget11actionEventEP12QActionEvent:dword
					; DATA XREF: _ZN7QWidget11actionEventEP12QActionEventr
		extrn __imp__ZN7QWidget14dragEnterEventEP15QDragEnterEvent:dword
					; DATA XREF: _ZN7QWidget14dragEnterEventEP15QDragEnterEventr
		extrn __imp__ZN7QWidget13dragMoveEventEP14QDragMoveEvent:dword
					; DATA XREF: _ZN7QWidget13dragMoveEventEP14QDragMoveEventr
		extrn __imp__ZN7QWidget14dragLeaveEventEP15QDragLeaveEvent:dword
					; DATA XREF: _ZN7QWidget14dragLeaveEventEP15QDragLeaveEventr
		extrn __imp__ZN7QWidget9dropEventEP10QDropEvent:dword
					; DATA XREF: _ZN7QWidget9dropEventEP10QDropEventr
		extrn __imp__ZN7QWidget9showEventEP10QShowEvent:dword
					; DATA XREF: _ZN7QWidget9showEventEP10QShowEventr
		extrn __imp__ZN7QWidget9hideEventEP10QHideEvent:dword
					; DATA XREF: _ZN7QWidget9hideEventEP10QHideEventr
		extrn __imp__ZN7QWidget8winEventEP6tagMSGPl:dword
					; DATA XREF: _ZN7QWidget8winEventEP6tagMSGPlr
		extrn __imp__ZN7QWidget11changeEventEP6QEvent:dword
					; DATA XREF: _ZN7QWidget11changeEventEP6QEventr
		extrn __imp__ZNK7QWidget6metricEN12QPaintDevice17PaintDeviceMetricE:dword
					; DATA XREF: _ZNK7QWidget6metricEN12QPaintDevice17PaintDeviceMetricEr
		extrn __imp__ZN7QWidget16inputMethodEventEP17QInputMethodEvent:dword
					; DATA XREF: _ZN7QWidget16inputMethodEventEP17QInputMethodEventr
		extrn __imp__ZNK7QWidget16inputMethodQueryEN2Qt16InputMethodQueryE:dword
					; DATA XREF: _ZNK7QWidget16inputMethodQueryEN2Qt16InputMethodQueryEr
		extrn __imp__ZN7QWidget18focusNextPrevChildEb:dword
					; DATA XREF: _ZN7QWidget18focusNextPrevChildEbr
		extrn __imp__ZN7QWidget11styleChangeER6QStyle:dword
					; DATA XREF: _ZN7QWidget11styleChangeER6QStyler
		extrn __imp__ZN7QWidget13enabledChangeEb:dword
					; DATA XREF: _ZN7QWidget13enabledChangeEbr
		extrn __imp__ZN7QWidget13paletteChangeERK8QPalette:dword
					; DATA XREF: _ZN7QWidget13paletteChangeERK8QPaletter
		extrn __imp__ZN7QWidget10fontChangeERK5QFont:dword
					; DATA XREF: _ZN7QWidget10fontChangeERK5QFontr
		extrn __imp__ZN7QWidget22windowActivationChangeEb:dword
					; DATA XREF: _ZN7QWidget22windowActivationChangeEbr
		extrn __imp__ZN7QWidget14languageChangeEv:dword
					; DATA XREF: _ZN7QWidget14languageChangeEvr
		extrn __imp__ZThn8_NK7QWidget7devTypeEv:dword
					; DATA XREF: _ZThn8_NK7QWidget7devTypeEvr
		extrn __imp__ZThn8_NK7QWidget11paintEngineEv:dword
					; DATA XREF: _ZThn8_NK7QWidget11paintEngineEvr
		extrn __imp__ZThn8_NK7QWidget5getDCEv:dword
					; DATA XREF: _ZThn8_NK7QWidget5getDCEvr
		extrn __imp__ZThn8_NK7QWidget9releaseDCEP5HDC__:dword
					; DATA XREF: _ZThn8_NK7QWidget9releaseDCEP5HDC__r
		extrn __imp__ZThn8_NK7QWidget6metricEN12QPaintDevice17PaintDeviceMetricE:dword
					; DATA XREF: _ZThn8_NK7QWidget6metricEN12QPaintDevice17PaintDeviceMetricEr

;
; Imports from KERNEL32.dll
;
; BOOL __stdcall CloseHandle(HANDLE hObject)
		extrn CloseHandle:dword	; CODE XREF: .text:7103AE2Dp
					; DATA XREF: .text:7103AE2Dr
; HANDLE __stdcall CreateSemaphoreA(LPSECURITY_ATTRIBUTES lpSemaphoreAttributes, LONG lInitialCount, LONG lMaximumCount, LPCSTR	lpName)
		extrn CreateSemaphoreA:dword ; CODE XREF: .text:7103ADCBp
					; sub_7103ADE0+2Dp
					; DATA XREF: ...
; void __stdcall DeleteCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
		extrn DeleteCriticalSection:dword ; CODE XREF: sub_7103A4E0+41p
					; DATA XREF: sub_7103A4E0+41r
; void __stdcall EnterCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
		extrn EnterCriticalSection:dword ; CODE	XREF: sub_7103A460+1Fp
					; .text:7103A58Fp ...
; HANDLE __stdcall GetCurrentProcess()
		extrn GetCurrentProcess:dword ;	CODE XREF: .text:7103A368p
					; DATA XREF: .text:7103A368r
; DWORD	__stdcall GetCurrentProcessId()
		extrn GetCurrentProcessId:dword	; CODE XREF: sub_7103A390+6Cp
					; DATA XREF: sub_7103A390+6Cr
; DWORD	__stdcall GetCurrentThreadId()
		extrn GetCurrentThreadId:dword ; CODE XREF: sub_7103A390+74p
					; .text:7103AC78p ...
; DWORD	__stdcall GetLastError()
		extrn GetLastError:dword ; CODE	XREF: sub_7103A460+4Cp
					; sub_7103AE70+Bp
					; DATA XREF: ...
; HMODULE __stdcall GetModuleHandleA(LPCSTR lpModuleName)
		extrn GetModuleHandleA:dword ; CODE XREF: sub_71001430+16p
					; .text:7103AA41p
					; DATA XREF: ...
; FARPROC __stdcall GetProcAddress(HMODULE hModule, LPCSTR lpProcName)
		extrn GetProcAddress:dword ; CODE XREF:	sub_71001430+35p
					; DATA XREF: sub_71001430+35r
; void __stdcall GetSystemTimeAsFileTime(LPFILETIME lpSystemTimeAsFileTime)
		extrn GetSystemTimeAsFileTime:dword ; CODE XREF: sub_7103A390+57p
					; DATA XREF: sub_7103A390+57r
; DWORD	__stdcall GetTickCount()
		extrn GetTickCount:dword ; CODE	XREF: sub_7103A390+7Cp
					; DATA XREF: sub_7103A390+7Cr
; void __stdcall InitializeCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
		extrn InitializeCriticalSection:dword ;	CODE XREF: sub_7103A4E0+77p
					; DATA XREF: sub_7103A4E0+77r
; void __stdcall LeaveCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
		extrn LeaveCriticalSection:dword ; CODE	XREF: sub_7103A460+6Cp
					; .text:7103A5C6p ...
; HMODULE __stdcall LoadLibraryW(LPCWSTR lpLibFileName)
		extrn LoadLibraryW:dword ; CODE	XREF: .text:7103AA5Cp
					; DATA XREF: .text:7103AA5Cr
; BOOL __stdcall QueryPerformanceCounter(LARGE_INTEGER *lpPerformanceCount)
		extrn QueryPerformanceCounter:dword ; CODE XREF: sub_7103A390+8Bp
					; DATA XREF: sub_7103A390+8Br
; BOOL __stdcall ReleaseSemaphore(HANDLE hSemaphore, LONG lReleaseCount, LPLONG	lpPreviousCount)
		extrn ReleaseSemaphore:dword ; CODE XREF: .text:7103ABFCp
					; sub_7103AC20+31p
					; DATA XREF: ...
; void __stdcall SetLastError(DWORD dwErrCode)
		extrn SetLastError:dword ; CODE	XREF: sub_7103AE70+28p
					; DATA XREF: sub_7103AE70+28r
; LPTOP_LEVEL_EXCEPTION_FILTER __stdcall SetUnhandledExceptionFilter(LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter)
		extrn SetUnhandledExceptionFilter:dword	; CODE XREF: .text:7103A34Fp
					; DATA XREF: .text:7103A34Fr
; void __stdcall Sleep(DWORD dwMilliseconds)
		extrn Sleep:dword	; CODE XREF: sub_71001040+37p
					; sub_71001040+B0p ...
; BOOL __stdcall TerminateProcess(HANDLE hProcess, UINT	uExitCode)
		extrn TerminateProcess:dword ; CODE XREF: .text:7103A379p
					; DATA XREF: .text:7103A379r
; DWORD	__stdcall TlsAlloc()
		extrn TlsAlloc:dword	; CODE XREF: sub_7103AEE0+13p
					; DATA XREF: sub_7103AEE0+13r
; BOOL __stdcall TlsFree(DWORD dwTlsIndex)
		extrn TlsFree:dword	; CODE XREF: sub_7103AEB0+Ap
					; DATA XREF: sub_7103AEB0+Ar
; LPVOID __stdcall TlsGetValue(DWORD dwTlsIndex)
		extrn TlsGetValue:dword	; CODE XREF: sub_7103A460+45p
					; sub_7103AE70+1Ap
					; DATA XREF: ...
; BOOL __stdcall TlsSetValue(DWORD dwTlsIndex, LPVOID lpTlsValue)
		extrn TlsSetValue:dword	; CODE XREF: sub_7103AE40+12p
					; DATA XREF: sub_7103AE40+12r
; LONG __stdcall UnhandledExceptionFilter(struct _EXCEPTION_POINTERS *ExceptionInfo)
		extrn UnhandledExceptionFilter:dword ; CODE XREF: .text:7103A35Fp
					; DATA XREF: .text:7103A35Fr
; BOOL __stdcall VirtualProtect(LPVOID lpAddress, DWORD	dwSize,	DWORD flNewProtect, PDWORD lpflOldProtect)
		extrn VirtualProtect:dword ; CODE XREF:	sub_71039E60+10Bp
					; sub_71039FB0+1B2p
					; DATA XREF: ...
; DWORD	__stdcall VirtualQuery(LPCVOID lpAddress, PMEMORY_BASIC_INFORMATION lpBuffer, DWORD dwLength)
		extrn VirtualQuery:dword ; CODE	XREF: sub_71039E60+A8p
					; sub_71039FB0+184p
					; DATA XREF: ...
; DWORD	__stdcall WaitForSingleObject(HANDLE hHandle, DWORD dwMilliseconds)
		extrn WaitForSingleObject:dword	; CODE XREF: .text:7103ACF3p
					; sub_7103AD40+2Ep
					; DATA XREF: ...

;
; Imports from msvcrt.dll
;
; int __cdecl _write(int, const	void *,	unsigned int)
		extrn __imp__write:dword ; DATA	XREF: _writer

;
; Imports from msvcrt.dll
;
		extrn __imp___dllonexit:dword ;	DATA XREF: __dllonexitr
		extrn __imp__amsg_exit:dword ; DATA XREF: _amsg_exitr
		extrn __imp__initterm:dword ; DATA XREF: _inittermr
; FILE iob[]
		extrn _iob:dword	; DATA XREF: sub_71039E00+4r
					; sub_71039E00+3Cr ...
		extrn __imp__lock:dword	; DATA XREF: _lockr
; _onexit_t __cdecl onexit(_onexit_t)
		extrn _onexit:dword	; CODE XREF: sub_71039C20+A3p
					; DATA XREF: sub_71039C20+A3r
		extrn __imp__unlock:dword ; DATA XREF: _unlockr
; void __cdecl __noreturn abort()
		extrn __imp_abort:dword	; DATA XREF: abortr
; double __cdecl atan2(double, double)
		extrn __imp_atan2:dword	; DATA XREF: atan2r
; void *__cdecl	calloc(size_t, size_t)
		extrn __imp_calloc:dword ; DATA	XREF: callocr
; double __cdecl ceil(double)
		extrn __imp_ceil:dword	; DATA XREF: ceilr
; double __cdecl cos(double)
		extrn __imp_cos:dword	; DATA XREF: cosr
; double __cdecl floor(double)
		extrn __imp_floor:dword	; DATA XREF: floorr
; int __cdecl fputc(int, FILE *)
		extrn __imp_fputc:dword	; DATA XREF: fputcr
; int __cdecl fputs(const char *, FILE *)
		extrn __imp_fputs:dword	; DATA XREF: fputsr
; void __cdecl free(void *)
		extrn __imp_free:dword	; DATA XREF: freer
; size_t __cdecl fwrite(const void *, size_t, size_t, FILE *)
		extrn __imp_fwrite:dword ; DATA	XREF: fwriter
; void *__cdecl	malloc(size_t)
		extrn __imp_malloc:dword ; DATA	XREF: mallocr
; void *__cdecl	memcpy(void *, const void *, size_t)
		extrn __imp_memcpy:dword ; DATA	XREF: memcpyr
; void *__cdecl	realloc(void *,	size_t)
		extrn __imp_realloc:dword ; DATA XREF: reallocr
; double __cdecl sin(double)
		extrn __imp_sin:dword	; DATA XREF: sinr
; int sprintf(char *, const char *, ...)
		extrn __imp_sprintf:dword ; DATA XREF: sprintfr
; double __cdecl sqrt(double)
		extrn __imp_sqrt:dword	; DATA XREF: sqrtr
; int __cdecl strcmp(const char	*, const char *)
		extrn __imp_strcmp:dword ; DATA	XREF: strcmpr
; char *__cdecl	strcpy(char *, const char *)
		extrn __imp_strcpy:dword ; DATA	XREF: strcpyr
; size_t __cdecl strlen(const char *)
		extrn __imp_strlen:dword ; DATA	XREF: strlenr
; int __cdecl strncmp(const char *, const char *, size_t)
		extrn __imp_strncmp:dword ; DATA XREF: strncmpr
; double __cdecl tan(double)
		extrn __imp_tan:dword	; DATA XREF: tanr
; int __cdecl vfprintf(FILE *, const char *, va_list)
		extrn __imp_vfprintf:dword ; DATA XREF:	vfprintfr

;
; Imports from libgcc_s_sjlj-1.dll
;
		extrn __imp__Unwind_SjLj_Resume:dword ;	DATA XREF: _Unwind_SjLj_Resumer
		extrn __imp__Unwind_SjLj_Register:dword	; DATA XREF: _Unwind_SjLj_Registerr
		extrn __imp__Unwind_SjLj_Unregister:dword
					; DATA XREF: _Unwind_SjLj_Unregisterr
		extrn __imp__Unwind_GetTextRelBase:dword
					; DATA XREF: _Unwind_GetTextRelBaser
		extrn __imp__Unwind_GetDataRelBase:dword
					; DATA XREF: _Unwind_GetDataRelBaser
		extrn __imp__Unwind_GetRegionStart:dword
					; DATA XREF: _Unwind_GetRegionStartr
		extrn __imp__Unwind_GetLanguageSpecificData:dword
					; DATA XREF: _Unwind_GetLanguageSpecificDatar
		extrn __imp__Unwind_GetIPInfo:dword ; DATA XREF: _Unwind_GetIPInfor
		extrn __imp__Unwind_SetGR:dword	; DATA XREF: _Unwind_SetGRr
		extrn __imp__Unwind_SetIP:dword	; DATA XREF: _Unwind_SetIPr
		extrn __imp__Unwind_DeleteException:dword
					; DATA XREF: _Unwind_DeleteExceptionr
		extrn __imp__Unwind_SjLj_Resume_or_Rethrow:dword
					; DATA XREF: _Unwind_SjLj_Resume_or_Rethrowr
		extrn __imp__Unwind_SjLj_RaiseException:dword
					; DATA XREF: _Unwind_SjLj_RaiseExceptionr


; Section 7. (virtual address 00068000)
; Virtual size			: 0000002C (	 44.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 00065800
; Flags	C0300040: Data Readable	Writable
; Alignment	: 4 bytes
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_CRT		segment	dword public 'DATA' use32
		assume cs:_CRT
		;org 71068000h
dword_71068000	dd 0			; DATA XREF: sub_71001040+1DDo
dword_71068004	dd 0			; DATA XREF: sub_71001040+1D5o
dword_71068008	dd 0			; DATA XREF: sub_71001040+1C9o
		dd offset sub_71001000
dword_71068010	dd 2 dup(0)		; DATA XREF: sub_71001040+1C1o
TlsCallbacks	dd offset TlsCallback_0	; DATA XREF: .tls:TlsCallbacks_ptro
		dd offset TlsCallback_1
		dd 0
		align 8
dword_71068028	dd 76h dup(0)		; DATA XREF: TlsCallback_0:loc_71039D91o
					; TlsCallback_0+36o ...
		align 1000h
_CRT		ends

; Section 8. (virtual address 00069000)
; Virtual size			: 00000020 (	 32.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 00065A00
; Flags	C0300040: Data Readable	Writable
; Alignment	: 4 bytes
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_tls		segment	dword public 'DATA' use32
		assume cs:_tls
		;org 71069000h
TlsDirectory	dd offset TlsStart
TlsEnd_ptr	dd offset TlsEnd
TlsIndex_ptr	dd offset TlsIndex
TlsCallbacks_ptr dd offset TlsCallbacks
TlsSizeOfZeroFill dd 0
TlsCharacteristics dd 0
		db 0
TlsStart	db 3 dup(0)		; DATA XREF: .tls:TlsDirectoryo
TlsEnd		dd 79h dup(0)		; DATA XREF: .tls:TlsEnd_ptro
		align 1000h
_tls		ends


		end DllEntryPoint
